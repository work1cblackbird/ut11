#Область ПрограммныйИнтерфейс

// Предназначена для определения факта наличия в данных документа номенклатуры, являющейся маркируемой продукцией.
// 
// Параметры:
//  Коллекция                - ДанныеФормыКоллекция - состав номенклатуры документа
//  ВидМаркируемойПродукции  - ПеречислениеСсылка.ВидыПродукцииИС - вид продукции, наличие которой необходимо определить.
//  ЕстьМаркируемаяПродукция - Булево - признак наличия маркируемой продукции.
//
Процедура ЕстьМаркируемаяПродукцияВКоллекции(Коллекция, ВидМаркируемойПродукции, ЕстьМаркируемаяПродукция) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ
	|	ВремТаблТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьМаркируемаяПродукция
	|ИЗ
	|	ВремТаблТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	&УсловиеМаркируемаяПродукция
	|";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаТовары", Коллекция.Выгрузить(, "Номенклатура"));
	Результат = Запрос.Выполнить();
	
	ЕстьМаркируемаяПродукция = НЕ Результат.Пустой();
	
КонецПроцедуры

// Заполняет переданную таблицу товарами переданного документа, являющимися маркируемой продукцией требуемого вида.
//   Если таблица заполнена - дополняет ее значениями GTIN.
// 
// Параметры:
//  Контекст - ДанныеФормыСтруктура, ФормаКлиентскогоПриложения, ДокументСсылка - документ, маркируемую продукцию которого необходимо получить
//  ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС - вид маркируемой продукции, которую необходимо получить
//  ТаблицаМаркируемойПродукции - ТаблицаЗначений - таблица маркируемой продукции документа. (См. ПроверкаИПодборПродукцииИСМП.ТаблицаМаркируемойПродукцииДокумента())
//  Сценарий - Число - сценарий работы с маркируемой продукцией документа
Процедура ЗаполнитьМаркируемуюПродукциюДокумента(Контекст, ВидМаркируемойПродукции, ТаблицаМаркируемойПродукции, Сценарий = 0) Экспорт
	
	Если ТаблицаМаркируемойПродукции.Количество() > 0 Тогда
		РезультатЗапроса = ЗапросGTINпоТаблицеМаркируемойПродукции(ТаблицаМаркируемойПродукции);
		ТаблицаМаркируемойПродукции.Очистить();
	ИначеЕсли ТипЗнч(Контекст) = Тип("ДанныеФормыСтруктура") Тогда
		Если ЭтоДанныеФормыСтруктураДокументаПоНаименованию(Контекст, "ЧекККМ")
			Или ЭтоДанныеФормыСтруктураДокументаПоНаименованию(Контекст, "ЧекККМВозврат") Тогда
			РезультатЗапроса = ЗапросМаркируемойПродукцииЧекККМ(Контекст, ВидМаркируемойПродукции);
		Иначе
			РезультатЗапроса = ЗапросМаркируемойПродукцииДанныеФормыСтруктура(Контекст, ВидМаркируемойПродукции);
		КонецЕсли;
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ВозвратТоваровОтКлиента") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииВозвратТоваровОтКлиента(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ПриобретениеТоваровУслуг") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииПриобретениеТоваровУслуг(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ЧекККМ")
		Или ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ЧекККМВозврат") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииЧекККМ(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "РеализацияТоваровУслуг") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииРеализацияТоваровУслуг(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "РасходныйОрдерНаТовары") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииРасходныйОрдерНаТовары(Контекст, ВидМаркируемойПродукции);
		Если ТаблицаМаркируемойПродукции.Колонки.Найти("Действие") = Неопределено Тогда
			ТаблицаМаркируемойПродукции.Колонки.Добавить("Действие", Новый ОписаниеТипов("ПеречислениеСсылка.ДействияСоСтрокамиОрдеровНаОтгрузку"));
		КонецЕсли;
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ПриходныйОрдерНаТовары") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииПриходныйОрдерНаТовары(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ОтборРазмещениеТоваров") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииОтборРазмещениеТоваров(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ВозвратТоваровПоставщику") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииВозвратТоваровПоставщику(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "КорректировкаРеализации") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииКорректировкаРеализации(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ПрочееОприходованиеТоваров") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииПрочееОприходованиеТоваров(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "СборкаТоваров") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииСборкаТоваров(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ПеремещениеТоваров") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииПеремещениеТоваров(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ВнутреннееПотребление") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииВнутреннееПотребление(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ПередачаТоваровМеждуОрганизациями") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииПередачаТоваровМеждуОрганизациями(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ВозвратТоваровМеждуОрганизациями") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииВозвратТоваровМеждуОрганизациями(Контекст, ВидМаркируемойПродукции);
	ИначеЕсли ИнтеграцияИСУТКлиентСервер.ЭтоДокументПоНаименованию(Контекст, "ПередачаТоваровХранителю") Тогда
		РезультатЗапроса = ЗапросМаркируемойПродукцииПередачаТоваровХранителю(Контекст, ВидМаркируемойПродукции);

	Иначе
		Возврат;
	КонецЕсли;
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		ВыборкаХарактеристика = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаХарактеристика.Следующий() Цикл
			ПродукцияПоGTIN = ТаблицаМаркируемойПродукции.СкопироватьКолонки();
			СписокКодовGTIN = Новый Массив;
			
			ВыборкаGTIN = ВыборкаХарактеристика.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаGTIN.Следующий() Цикл
				
				Если Не ЗначениеЗаполнено(ВыборкаНоменклатура.Номенклатура) Тогда
					// Соответственно тут должен быть остаточный GTIN
					Выборка = ВыборкаGTIN.Выбрать();
					Пока Выборка.Следующий() Цикл
						ЗаполнитьЗначенияСвойств(ТаблицаМаркируемойПродукции.Добавить(), Выборка);
					КонецЦикла;
					Продолжить;
				КонецЕсли;
				
				Если ПродукцияПоGTIN.Количество() = 0 Тогда
					Выборка = ВыборкаGTIN.Выбрать();
					Пока Выборка.Следующий() Цикл
						ЗаполнитьЗначенияСвойств(ПродукцияПоGTIN.Добавить(), Выборка,, "GTIN");
					КонецЦикла;
				КонецЕсли;
				
				Если МенеджерОборудованияКлиентСервер.ПроверитьКорректностьGTIN(ВыборкаGTIN.GTIN) Тогда
					GTIN = ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.GTINПоШтрихкодуEAN(ВыборкаGTIN.GTIN);
					СписокКодовGTIN.Добавить(GTIN);
				КонецЕсли;
			КонецЦикла;
			
			СписокКодовGTIN = ОбщегоНазначенияКлиентСервер.СвернутьМассив(СписокКодовGTIN);
			
			Для Каждого СтрокаПродукцииПоGTIN Из ПродукцияПоGTIN Цикл
				ЗаполнитьЗначенияСвойств(ТаблицаМаркируемойПродукции.Добавить(), СтрокаПродукцииПоGTIN);
				СтрокаПродукцииПоGTIN.КодыGTIN.ЗагрузитьЗначения(СписокКодовGTIN);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Заполняет в табличной части служебные реквизиты, например: признак использования характеристик номенклатуры.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма.
//  ТабличнаяЧасть - ДанныеФормыКоллекция, ТаблицаЗначений - таблица для заполнения.
//
Процедура ЗаполнитьСлужебныеРеквизитыВКоллекции(Форма, ТабличнаяЧасть) Экспорт
	
	ПараметрыЗаполненияРеквизитов = Новый Структура;
	
	Если ТабличнаяЧасть.Количество() > 0 Тогда
		ПерваяСтрокаКоллекции = ТабличнаяЧасть[0];
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ПерваяСтрокаКоллекции, "ХарактеристикиИспользуются") Тогда
			ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются",
				Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ПерваяСтрокаКоллекции, "ТребуетВзвешивания") Тогда
			ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакТребуетВзвешивания",
				Новый Структура("Номенклатура", "ТребуетВзвешивания"));
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ПерваяСтрокаКоллекции, "ПроизвольнаяЕдиницаУчета") Тогда
			ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакПроизвольнаяЕдиницаУчета",
				Новый Структура("Номенклатура", "ПроизвольнаяЕдиницаУчета"));
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ПерваяСтрокаКоллекции, "Серия") Тогда
			ПараметрыЗаполненияРеквизитов.Вставить(
				"ЗаполнитьПризнакТипНоменклатуры",
				Новый Структура("Номенклатура", "ТипНоменклатуры"));
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыЗаполненияРеквизитов.Количество() > 0 Тогда
		НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
			ТабличнаяЧасть, ПараметрыЗаполненияРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

Функция АдресДанныхПроверкиМаркируемойПродукцииЧекККМ(ПараметрыСканирования, Объект, УникальныйИдентификатор, ВидМаркируемойПродукции) Экспорт
	
	ТаблицаШтрихкодов = Объект.АкцизныеМарки.Выгрузить();
	
	ШтрихкодыМаркируемойПродукции = ИнтеграцияИСУТ.ШтрихкодыСодержащиеВидыПродукции(
		ТаблицаШтрихкодов.ВыгрузитьКолонку("АкцизнаяМарка"), ВидМаркируемойПродукции);
	
	ПоддерживаетсяЧастичноеВыбытие = ОбщегоНазначенияИСКлиентСерверПовтИсп.ПоддерживаетсяЧастичноеВыбытие(
		ВидМаркируемойПродукции,
		ПараметрыСканирования.ВидОперацииИСМП);
		
	ТоварыРазрешительногоРежимаРозничнойПродажи = ОбщегоНазначенияИСМПКлиентСерверПовтИсп.ПродукцияПодлежитОбязательнойОнлайнПроверкеПередРозничнойПродажей(
		ВидМаркируемойПродукции, 
		ПараметрыСканирования.ВидОперацииИСМП, 
		ПараметрыСканирования.ТребуетсяПроверкаСредствамиККТ);
	
	Если ПоддерживаетсяЧастичноеВыбытие Или ТоварыРазрешительногоРежимаРозничнойПродажи Тогда
	
		МассивУпаковок    = Новый Массив();
		КэшИсходныхДанных = Новый Соответствие();
		
		Для Каждого ШтрихкодУпаковки Из ШтрихкодыМаркируемойПродукции Цикл
			
			НовыйЭлемент = ШтрихкодированиеИС.НовыйЭлементКоллекцииУпаковокДляРаспределенияПоТоварам();
			НовыйЭлемент.ШтрихкодУпаковки = ШтрихкодУпаковки;
			
			МассивУпаковок.Добавить(НовыйЭлемент);
			
			КэшИсходныхДанных.Вставить(ШтрихкодУпаковки, НовыйЭлемент);
			
		КонецЦикла;
	
		Для Каждого СтрокаТаблицы Из ТаблицаШтрихкодов Цикл
			
			ДанныеРезультата = КэшИсходныхДанных.Получить(СтрокаТаблицы.АкцизнаяМарка);
			Если ДанныеРезультата = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если ПоддерживаетсяЧастичноеВыбытие Тогда
			
				ДанныеРезультата.ЧастичноеВыбытиеКоличество       = СтрокаТаблицы.ЧастичноеВыбытиеКоличество;
				ДанныеРезультата.ЧастичноеВыбытиеВариантУчета     = СтрокаТаблицы.ЧастичноеВыбытиеВариантУчета;
				ДанныеРезультата.ЧастичноеВыбытиеНоменклатура     = СтрокаТаблицы.ЧастичноеВыбытиеНоменклатура;
				ДанныеРезультата.ЧастичноеВыбытиеХарактеристика   = СтрокаТаблицы.ЧастичноеВыбытиеХарактеристика;
				
			КонецЕсли;
			
			Если ТоварыРазрешительногоРежимаРозничнойПродажи Тогда
			
				ДанныеРезультата.РазрешительныйРежимИдентификаторЗапросаГИСМТ = СтрокаТаблицы.РазрешительныйРежимИдентификаторЗапросаГИСМТ;
				ДанныеРезультата.РазрешительныйРежимДатаЗапросаГИСМТ          = СтрокаТаблицы.РазрешительныйРежимДатаЗапросаГИСМТ;
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		МассивУпаковок = ШтрихкодыМаркируемойПродукции;
		
	КонецЕсли;
	
	ДанныеПроверяемогоДокумента = ШтрихкодированиеИС.ВложенныеШтрихкодыУпаковок(
		МассивУпаковок, ПараметрыСканирования);
	
	ТаблицаМаркируемойПродукции = ПроверкаИПодборПродукцииИСМП.ТаблицаМаркируемойПродукцииДокумента(Объект, ВидМаркируемойПродукции);
	
	ДанныеХранилища = Новый Структура("ДеревоУпаковок, МаркированныеТовары, ТаблицаМаркируемойПродукции",
		ДанныеПроверяемогоДокумента.ДеревоУпаковок,
		ДанныеПроверяемогоДокумента.МаркированныеТовары,
		ТаблицаМаркируемойПродукции);
	
	ПреобразоватьНесериализуемыеЗначения(ДанныеПроверяемогоДокумента.ДеревоУпаковок, ДанныеПроверяемогоДокумента.МаркированныеТовары);
	
	Возврат ПоместитьВоВременноеХранилище(ДанныеХранилища, УникальныйИдентификатор);
	
КонецФункции

Процедура ПриЗакрытииФормыПроверкиИПодбораВФормеРМК(Форма, Результат, ВидПродукцииИС) Экспорт
	
	ДанныеПроверкиИПодбора = ПолучитьИзВременногоХранилища(Результат);
	
	ИнтеграцияИСУТ.УдалитьСтрокиАкцизныхМарокПоВидуПродукции(Форма.Объект.АкцизныеМарки, ВидПродукцииИС);
	
	Если Форма.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокументаРМК"
		Или Форма.ИмяФормы = "Документ.ЧекККМВозврат.Форма.ФормаДокументаРМК" Тогда
		
		НоменклатураВыбываетЧастично = Новый Массив;
		
		Для Каждого СтрокаТаблицы Из ДанныеПроверкиИПодбора.ТаблицаШтрихкодовВерхнегоУровня Цикл
			
			СтрокаАкцизныхМарок = Форма.Объект.АкцизныеМарки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаАкцизныхМарок, СтрокаТаблицы);
			СтрокаАкцизныхМарок.АкцизнаяМарка = СтрокаАкцизныхМарок.ШтрихкодУпаковки;
			
			Если ЗначениеЗаполнено(СтрокаАкцизныхМарок.ЧастичноеВыбытиеНоменклатура) Тогда
				НоменклатураВыбываетЧастично.Добавить(СтрокаАкцизныхМарок.ЧастичноеВыбытиеНоменклатура);
			КонецЕсли;
			
		КонецЦикла;
		
		ОтборПоВидуПродукции  = Новый Структура("ВидПродукцииИС", ВидПродукцииИС);
		СтрокиПоВидуПродукции = Форма.Объект.Товары.НайтиСтроки(ОтборПоВидуПродукции);
		ДобавленныеСтроки = Новый Массив;
		ИзмененныеСтроки  = Новый Массив;
		
		Отбор = Новый Структура("Номенклатура,Характеристика");
		Для Каждого СтрокаПоВидуПродукции Из СтрокиПоВидуПродукции Цикл
			ЗаполнитьЗначенияСвойств(Отбор, СтрокаПоВидуПродукции);
			СерииСтроки = Форма.Объект.Серии.НайтиСтроки(Отбор);
			Для Каждого ЭлементСерия Из СерииСтроки Цикл
				Форма.Объект.Серии.Удалить(ЭлементСерия);
			КонецЦикла;
		КонецЦикла;
		
		ДанныеПроверкиИПодбора.ТаблицаПодобраннойПровереннойПродукции.Свернуть("Номенклатура,Характеристика,Серия","КоличествоПодобрано");
		
		ОписаниеЧастичногоВыбытия = ОбщегоНазначенияИС.ОписаниеНоменклатуры(НоменклатураВыбываетЧастично);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Подобрано", ДанныеПроверкиИПодбора.ТаблицаПодобраннойПровереннойПродукции);
	
		ТекстЗапроса = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Подобрано.Номенклатура
		|ПОМЕСТИТЬ Подобрано
		|ИЗ
		|	&Подобрано КАК Подобрано
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////5
		|ВЫБРАТЬ
		|	ПодобраннаяПродукция.Номенклатура   КАК Номенклатура,
		|	Упаковки.Ссылка                     КАК Упаковка,
		|	ЕСТЬNULL(&КоэффициентУпаковки,1)    КАК Коэффициент
		|ИЗ
		|	Подобрано КАК ПодобраннаяПродукция
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК Упаковки
		|		ПО (Упаковки.Владелец = ПодобраннаяПродукция.Номенклатура
		|			Или Упаковки.Владелец = ПодобраннаяПродукция.Номенклатура.НаборУпаковок)
		|		И Упаковки.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|УПОРЯДОЧИТЬ ПО
		|	Коэффициент Убыв";
	
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "&КоэффициентУпаковки",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("Упаковки.Ссылка", "ПодобраннаяПродукция.Номенклатура"));
	
		УпаковкиТоваров = Запрос.Выполнить().Выгрузить();
		УпаковкиТоваров.Индексы.Добавить("Номенклатура");
		
		Для Каждого СтрокаПродукции Из ДанныеПроверкиИПодбора.ТаблицаПодобраннойПровереннойПродукции Цикл
			Если СтрокаПродукции.КоличествоПодобрано = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ПродукцияНайдена = Ложь;
			
			Для Каждого СтрокаПоВидуПродукции Из СтрокиПоВидуПродукции Цикл
				Если СтрокаПродукции.Номенклатура = СтрокаПоВидуПродукции.Номенклатура
					И СтрокаПродукции.Характеристика = СтрокаПоВидуПродукции.Характеристика
					И (СтрокаПродукции.Серия = СтрокаПоВидуПродукции.Серия
						Или СтрокаПоВидуПродукции.Серия = Справочники.СерииНоменклатуры.ПустаяСсылка())Тогда
					ПродукцияНайдена = Истина;
					Если ИзмененныеСтроки.Найти(СтрокаПоВидуПродукции) = Неопределено Тогда
						СтрокаПоВидуПродукции.Количество = СтрокаПродукции.КоличествоПодобрано;
						ИзмененныеСтроки.Добавить(СтрокаПоВидуПродукции);
					Иначе
						СтрокаПоВидуПродукции.Количество = СтрокаПоВидуПродукции.Количество + СтрокаПродукции.КоличествоПодобрано;
					КонецЕсли;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если НЕ ПродукцияНайдена Тогда
				НоваяСтрокаТоваров = Форма.Объект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаТоваров, СтрокаПродукции);
				НоваяСтрокаТоваров.Количество = СтрокаПродукции.КоличествоПодобрано;
				НастройкаЧастичногоВыбытия = ОписаниеЧастичногоВыбытия.Получить(СтрокаПродукции.Номенклатура);
				Если НастройкаЧастичногоВыбытия = Неопределено Тогда
					КлючПоискаУпаковки = Новый Структура("Номенклатура", СтрокаПродукции.Номенклатура);
					ВозможныеУпаковки  = УпаковкиТоваров.НайтиСтроки(КлючПоискаУпаковки);
					Для Каждого ВозможнаяУпаковка Из ВозможныеУпаковки Цикл
						КоличествоУпаковок = Окр(СтрокаПродукции.КоличествоПодобрано / ВозможнаяУпаковка.Коэффициент, 3);
						Если КоличествоУпаковок = Окр(КоличествоУпаковок) Тогда
							НоваяСтрокаТоваров.Упаковка           = ВозможнаяУпаковка.Упаковка;
							НоваяСтрокаТоваров.КоличествоУпаковок = КоличествоУпаковок;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				Иначе
					НоваяСтрокаТоваров.Упаковка = НастройкаЧастичногоВыбытия.УпаковкаЧастичногоВыбытия;
					НоваяСтрокаТоваров.КоличествоУпаковок = Цел(НоваяСтрокаТоваров.Количество
						* НастройкаЧастичногоВыбытия.КоличествоВПотребительскойУпаковке
						* НастройкаЧастичногоВыбытия.ЕмкостьПотребительскойУпаковки);
				КонецЕсли;
				
				ДобавленныеСтроки.Добавить(НоваяСтрокаТоваров);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаПродукции.Серия) Тогда
				СтрокаСерии = Форма.Объект.Серии.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаСерии, СтрокаПродукции);
				СтрокаСерии.Количество = СтрокаПродукции.КоличествоПодобрано;
			КонецЕсли;
			
		КонецЦикла;
		
		Для Каждого СтрокаПоВидуПродукции Из СтрокиПоВидуПродукции Цикл
			Если ИзмененныеСтроки.Найти(СтрокаПоВидуПродукции) = Неопределено Тогда
				Форма.Объект.Товары.Удалить(СтрокаПоВидуПродукции);
			КонецЕсли;
		КонецЦикла;
		
		Форма.ОбработатьСтрокиТЧ(ДобавленныеСтроки, ИзмененныеСтроки);
		
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(
			Форма.Объект, НоменклатураСервер.ПараметрыУказанияСерий(Форма.Объект, Документы.ЧекККМ));
		
	КонецЕсли;
	
	ПроверкаИПодборПродукцииИС.ЗаполнитьКешШтрихкодовУпаковок(Форма, НастройкиИсточникаКешаЧека());
	ПроверкаИПодборПродукцииИС.ПрименитьКешШтрихкодовУпаковок(Форма, НастройкиИсточникаКешаЧека());
	
	ШтрихкодированиеИС.ОбновитьКэшМаркируемойПродукции(Форма);
	
КонецПроцедуры

// Контрагент не резидент.
// 
// Параметры:
//  Контрагент - СправочникСсылка.Контрагенты - Контрагент
// 
// Возвращаемое значение:
//  Булево - Контрагент не резидент
Функция КонтрагентНеРезидент(Контрагент) Экспорт
	
	ЮрФизЛицоКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "ЮрФизЛицо");
	
	Возврат ЮрФизЛицоКонтрагента = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент;
	
КонецФункции

#Область РаботаСоСтатусамиПроверкиИПодбораСтрок

Функция НастройкиИсточникаКешаЧека() Экспорт
	
	Результат = ПроверкаИПодборПродукцииИС.НастройкиИсточникаКешаШтрихкодовУпаковок();
	
	Результат.Штрихкоды =        "АкцизныеМарки";
	Результат.ШтрихкодУпаковки = "АкцизнаяМарка";
	Результат.Серии            = "Серии";
	Результат.ЧастичноеВыбытие = Истина;
	Результат.ИспользоватьОСУ  = Ложь;
	
	Возврат Результат;
	
КонецФункции

Функция НастройкиИсточникаКешаРасходногоОрдера() Экспорт
	
	Результат = ПроверкаИПодборПродукцииИС.НастройкиИсточникаКешаШтрихкодовУпаковок();
	
	Результат.Товары = "ОтгружаемыеТовары";
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СерииНоменклатуры

// Предназначена для расчета статусов указания серий во всех строках таблицы товаров
// см. НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий
// 
// Параметры:
//  Форма        - ФормаКлиентскогоПриложения - форма с таблицей товаров
//  ПараметрыУказанияСерий - Структура - параметры указания серий
//
Процедура ЗаполнитьСтатусыУказанияСерий(Форма, ПараметрыУказанияСерий) Экспорт
	
	Если Форма.ПодобраннаяМаркируемаяПродукция.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыУказанияСерийКопия = ОбщегоНазначения.СкопироватьРекурсивно(ПараметрыУказанияСерий, Ложь);
	
	Если ПараметрыУказанияСерийКопия.Свойство("ВыходныеИзделия") Тогда
		Если Форма.Сценарий = 1 Тогда
			Если ПараметрыУказанияСерийКопия.Свойство("МатериалыИРаботы") Тогда
				ПараметрыУказанияСерийКопия = ПараметрыУказанияСерийКопия.МатериалыИРаботы;
			Иначе
				ПараметрыУказанияСерийКопия = ПараметрыУказанияСерийКопия.РасходМатериаловИРабот;
				ПараметрыУказанияСерийКопия.ИмяПоляСклад = "Склад";
			КонецЕсли;
		Иначе
			ПараметрыУказанияСерийКопия = ПараметрыУказанияСерийКопия.ВыходныеИзделия;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыУказанияСерийКопия.ИмяТЧТовары = "ПодобраннаяМаркируемаяПродукция";
	ПараметрыУказанияСерийКопия.ИмяТЧСерии = "ПодобраннаяМаркируемаяПродукция";
	ПараметрыУказанияСерийКопия.ИмяПоляПомещение = Неопределено;
	ПараметрыУказанияСерийКопия.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтотОбъект";
	ПараметрыУказанияСерийКопия.ПоляСвязи.Добавить("Серия");
	
	ЕстьРеквизитТаблицыСклад = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.ПодобраннаяМаркируемаяПродукция[0], "Склад");
	Если ЕстьРеквизитТаблицыСклад Тогда
		Для Каждого СтрокаТЧ Из Форма.ПодобраннаяМаркируемаяПродукция Цикл
			СтрокаТЧ.Склад = Форма.Склад;
		КонецЦикла;
	Иначе
		Для Каждого СтрокаТЧ Из Форма.ПодобраннаяМаркируемаяПродукция Цикл
			СтрокаТЧ.Получатель = Форма.Склад;
		КонецЦикла;
	КонецЕсли;
	
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Форма, ПараметрыУказанияСерийКопия);
	
КонецПроцедуры

// Возвращает через параметр наличие права на добавление элементов справочника СерииНоменклатуры
// 
// Параметры:
// 	ПравоДобавлениеСерий - Булево - исходящий, наличие права на добавление.
//
Процедура ОпределитьПравоДобавлениеСерий(ПравоДобавлениеСерий) Экспорт
	
	ПравоДобавлениеСерий = ПравоДоступа("Добавление", Метаданные.Справочники.СерииНоменклатуры);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеМаркируемойПродукцииДокумента

Функция ЗапросGTINпоТаблицеМаркируемойПродукции(ТаблицаМаркируемойПродукции)
	
	ПоляВЫБРАТЬ = Новый Массив;
	ПоляКроме = Новый Массив;
	ПоляКроме.Добавить(ВРег("КодыGTIN"));
	ПоляКроме.Добавить(ВРег("ИдентификаторыПроисхожденияВЕТИС"));
	ПоляКроме.Добавить(ВРег("Номенклатура"));   //явное поле
	ПоляКроме.Добавить(ВРег("Характеристика")); //явное поле
	ПоляКроме.Добавить(ВРег("GTIN"));           //явное поле
	
	Для Каждого Колонка Из ТаблицаМаркируемойПродукции.Колонки Цикл
		Если ПоляКроме.Найти(ВРег(Колонка.Имя)) = Неопределено Тогда
			ПоляВЫБРАТЬ.Добавить(СтрШаблон("МаркируемаяПродукция.%1 КАК %1", Колонка.Имя));
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МаркируемаяПродукция.GTIN КАК GTIN,
	|	МаркируемаяПродукция.Номенклатура КАК Номенклатура,
	|	МаркируемаяПродукция.Характеристика КАК Характеристика
	|	,&ПоляВЫБРАТЬ
	|ПОМЕСТИТЬ ВТМаркируемаяПродукция
	|ИЗ
	|	&МаркируемаяПродукция КАК МаркируемаяПродукция
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	МаркируемаяПродукция.Номенклатура КАК Номенклатура,
	|	МаркируемаяПродукция.Характеристика КАК Характеристика
	|	,&ПоляВЫБРАТЬ
	|ИЗ
	|	ВТМаркируемаяПродукция КАК МаркируемаяПродукция
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО МаркируемаяПродукция.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И МаркируемаяПродукция.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	МаркируемаяПродукция.Номенклатура <> Значение(Справочник.Номенклатура.ПустаяСсылка)
	|	И МаркируемаяПродукция.GTIN = """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Номенклатура не заполнена только для строк с остаточными GTIN
	|	МаркируемаяПродукция.GTIN КАК GTIN,
	|	МаркируемаяПродукция.Номенклатура КАК Номенклатура,
	|	МаркируемаяПродукция.Характеристика КАК Характеристика
	|	,&ПоляВЫБРАТЬ
	|ИЗ
	|	ВТМаркируемаяПродукция КАК МаркируемаяПродукция
	|ГДЕ
	|	МаркируемаяПродукция.Номенклатура = Значение(Справочник.Номенклатура.ПустаяСсылка)
	|	И МаркируемаяПродукция.GTIN <> """"
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МаркируемаяПродукция", ТаблицаМаркируемойПродукции);
	Если ПоляВЫБРАТЬ.Количество() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПоляВЫБРАТЬ", СтрСоединить(ПоляВЫБРАТЬ, ",
		|"));
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, ",&ПоляВЫБРАТЬ", "");
	КонецЕсли;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииДанныеФормыСтруктура(ДанныеФормыСтруктура, ВидМаркируемойПродукции, ИмяКоллекции = "Товары")
	
	Возврат ЗапросМаркируемойПродукцииДанныеФормыКоллекция(ДанныеФормыСтруктура[ИмяКоллекции], ВидМаркируемойПродукции);
	
КонецФункции

Функция ЗапросМаркируемойПродукцииДанныеФормыКоллекция(ДанныеФормыКоллекция, ВидМаркируемойПродукции)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Товары.Номенклатура   КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия          КАК Серия,
	|	Товары.Количество     КАК Количество
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура      КАК Номенклатура,
	|	ВТ_Товары.Характеристика    КАК Характеристика,
	|	ВТ_Товары.Серия             КАК Серия,
	|	СУММА(ВТ_Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТ_МаркируемаяПродукция
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВТ_Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	&УсловиеМаркируемаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Товары.Номенклатура,
	|	ВТ_Товары.Характеристика,
	|	ВТ_Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	МаркируемаяПродукция.Номенклатура              КАК Номенклатура,
	|	МаркируемаяПродукция.Характеристика            КАК Характеристика,
	|	МаркируемаяПродукция.Серия                     КАК Серия,
	|	МаркируемаяПродукция.Количество                КАК Количество
	|ИЗ
	|	ВТ_МаркируемаяПродукция КАК МаркируемаяПродукция
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО МаркируемаяПродукция.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И МаркируемаяПродукция.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Товары", ДанныеФормыКоллекция.Выгрузить());
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииПриобретениеТоваровУслуг(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)  КАК Количество
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Серии КАК Серии
	|		ПО Товары.Ссылка = Серии.Ссылка
	|		И Товары.Номенклатура = Серии.Номенклатура
	|		И Товары.Характеристика = Серии.Характеристика
	|		И Товары.Назначение = Серии.Назначение
	|		И Товары.Склад = Серии.Склад
	|		И Серии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И Серии.Количество <> 0
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииВозвратТоваровОтКлиента(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)  КАК Количество
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.Серии КАК Серии
	|		ПО Товары.Ссылка = Серии.Ссылка
	|		И Товары.Номенклатура = Серии.Номенклатура
	|		И Товары.Характеристика = Серии.Характеристика
	|		И Товары.НоменклатураОприходование = Серии.НоменклатураОприходование
	|		И Товары.ХарактеристикаОприходование = Серии.ХарактеристикаОприходование
	|		И Товары.Назначение = Серии.Назначение
	|		И Серии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И Серии.Количество <> 0
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииЧекККМ(ФормаОбъект, ВидМаркируемойПродукции)
	
	Если ТипЗнч(ФормаОбъект) = Тип("ФормаКлиентскогоПриложения") Тогда
		Товары = ФормаОбъект.Объект.Товары;
		Серии  = ФормаОбъект.Объект.Серии;
	Иначе
		Товары = ФормаОбъект.Товары;
		Серии  = ФормаОбъект.Серии;
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Товары.Номенклатура   КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия          КАК Серия,
	|	Товары.Помещение      КАК Помещение,
	|	Товары.Количество     КАК Количество
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура   КАК Номенклатура,
	|	Серии.Характеристика КАК Характеристика,
	|	Серии.Серия          КАК Серия,
	|	Серии.Помещение      КАК Помещение,
	|	Серии.Количество     КАК Количество
	|ПОМЕСТИТЬ ВТ_Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.Номенклатура                                     КАК Номенклатура,
	|	ВТ_Товары.Характеристика                                   КАК Характеристика,
	|	ЕСТЬNULL(ВТ_Серии.Серия, ВТ_Товары.Серия)                  КАК Серия,
	|	СУММА(ЕСТЬNULL(ВТ_Серии.Количество, ВТ_Товары.Количество)) КАК Количество
	|ПОМЕСТИТЬ ВТ_МаркируемаяПродукция
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Серии КАК ВТ_Серии
	|		ПО ВТ_Товары.Номенклатура = ВТ_Серии.Номенклатура
	|			И ВТ_Товары.Характеристика = ВТ_Серии.Характеристика
	|			И ВТ_Товары.Помещение = ВТ_Серии.Помещение
	|			И ВТ_Серии.Количество <> 0
	|			И ВТ_Серии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ВТ_Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	&УсловиеМаркируемаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Товары.Номенклатура,
	|	ВТ_Товары.Характеристика,
	|	ЕСТЬNULL(ВТ_Серии.Серия, ВТ_Товары.Серия)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	МаркируемаяПродукция.Номенклатура              КАК Номенклатура,
	|	МаркируемаяПродукция.Характеристика            КАК Характеристика,
	|	МаркируемаяПродукция.Серия                     КАК Серия,
	|	МаркируемаяПродукция.Количество                КАК Количество
	|ИЗ
	|	ВТ_МаркируемаяПродукция КАК МаркируемаяПродукция
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО МаркируемаяПродукция.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И МаркируемаяПродукция.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Товары", Товары.Выгрузить());
	Запрос.УстановитьПараметр("Серии",  Серии.Выгрузить());
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииРеализацияТоваровУслуг(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Документ,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.Склад КАК Склад,
	|	СУММА(Товары.Количество) КАК Количество,
	|	Товары.Серия КАК Серия
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Номенклатура,
	|	Товары.Склад,
	|	Товары.Ссылка,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)  КАК Количество
	|ИЗ
	|	ВТ_Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Серии КАК Серии
	|		ПО Товары.Документ = Серии.Ссылка
	|			И Товары.Номенклатура = Серии.Номенклатура
	|			И Товары.Характеристика = Серии.Характеристика
	|			И Товары.Назначение = Серии.Назначение
	|			И Товары.Склад = Серии.Склад
	|			И (Серии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И (Серии.Количество <> 0)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|			И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииВнутреннееПотребление(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Документ,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	Товары.Серия КАК Серия
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.ВнутреннееПотребление.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Номенклатура,
	|	Товары.Ссылка,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)  КАК Количество
	|ИЗ
	|	ВТ_Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотребление.Серии КАК Серии
	|		ПО Товары.Документ = Серии.Ссылка
	|			И Товары.Номенклатура = Серии.Номенклатура
	|			И Товары.Характеристика = Серии.Характеристика
	|			И Товары.Назначение = Серии.Назначение
	|			И (Серии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И (Серии.Количество <> 0)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|			И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииСборкаТоваров(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Документ,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	Товары.Серия КАК Серия
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И Товары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|	И &УсловиеМаркируемаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Номенклатура,
	|	Товары.Ссылка,
	|	Товары.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Шапка.Ссылка КАК Документ,
	|	Шапка.Номенклатура КАК Номенклатура,
	|	Шапка.Характеристика КАК Характеристика,
	|	Шапка.Назначение КАК Назначение,
	|	Шапка.Количество КАК Количество,
	|	Шапка.Серия КАК Серия
	|ИЗ
	|	Документ.СборкаТоваров КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Шапка.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Шапка.Ссылка = &ДокументСсылка
	|	И Шапка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|	И &УсловиеМаркируемаяПродукция
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)  КАК Количество
	|ИЗ
	|	ВТ_Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Серии КАК Серии
	|		ПО Товары.Документ = Серии.Ссылка
	|			И Товары.Номенклатура = Серии.Номенклатура
	|			И Товары.Характеристика = Серии.Характеристика
	|			И Товары.Назначение = Серии.Назначение
	|			И (Серии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И (Серии.Количество <> 0)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|			И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииПередачаТоваровМеждуОрганизациями(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Документ,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	СУММА(Товары.Количество) КАК Количество,
	|	Товары.Серия КАК Серия
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Характеристика,
	|	Товары.Номенклатура,
	|	Товары.Ссылка,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	Товары.Серия                                   КАК Серия,
	|	Товары.Количество                              КАК Количество
	|ИЗ
	|	ВТ_Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|			И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииВозвратТоваровМеждуОрганизациями(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Документ,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	СУММА(Товары.Количество) КАК Количество,
	|	Товары.Серия КАК Серия
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Характеристика,
	|	Товары.Номенклатура,
	|	Товары.Ссылка,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	Товары.Серия                                   КАК Серия,
	|	Товары.Количество                              КАК Количество
	|ИЗ
	|	ВТ_Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|			И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииПередачаТоваровХранителю(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Документ,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	Товары.Серия КАК Серия
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.ПередачаТоваровХранителю.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Номенклатура,
	|	Товары.Ссылка,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)  КАК Количество
	|ИЗ
	|	ВТ_Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровХранителю.Серии КАК Серии
	|		ПО Товары.Документ = Серии.Ссылка
	|			И Товары.Номенклатура = Серии.Номенклатура
	|			И Товары.Характеристика = Серии.Характеристика
	|			И Товары.Назначение = Серии.Назначение
	|			И (Серии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И (Серии.Количество <> 0)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|			И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииПеремещениеТоваров(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Товары.Ссылка КАК Документ,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Назначение КАК Назначение,
	|	Товары.НазначениеОтправителя КАК НазначениеОтправителя,
	|	СУММА(Товары.Количество) КАК Количество,
	|	Товары.Серия КАК Серия
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.НазначениеОтправителя,
	|	Товары.Номенклатура,
	|	Товары.Ссылка,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)  КАК Количество
	|ИЗ
	|	ВТ_Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Серии КАК Серии
	|		ПО Товары.Документ = Серии.Ссылка
	|			И Товары.Номенклатура = Серии.Номенклатура
	|			И Товары.Характеристика = Серии.Характеристика
	|			И Товары.Назначение = Серии.Назначение
	|			И Товары.НазначениеОтправителя = Серии.НазначениеОтправителя
	|			И (Серии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И (Серии.Количество <> 0)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|			И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииРасходныйОрдерНаТовары(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	Товары.Серия						           КАК Серия,
	|	Товары.Действие						           КАК Действие,
	|	Товары.Количество							   КАК Количество
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция 
	|	И Товары.Действие <> ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать)
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииПриходныйОрдерНаТовары(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	Товары.Серия						           КАК Серия,
	|	Товары.Количество							   КАК Количество
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары.Товары КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция 
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииОтборРазмещениеТоваров(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	Товары.Серия						           КАК Серия,
	|	Товары.Количество							   КАК Количество
	|ИЗ
	|	Документ.ОтборРазмещениеТоваров.ТоварыОтбор КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииВозвратТоваровПоставщику(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)  КАК Количество
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Серии КАК Серии
	|		ПО Товары.Ссылка = Серии.Ссылка
	|		И Товары.Номенклатура = Серии.Номенклатура
	|		И Товары.Характеристика = Серии.Характеристика
	|		И Товары.Назначение = Серии.Назначение
	|		И Серии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И Серии.Количество <> 0
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииКорректировкаРеализации(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	Товары.Серия                                   КАК Серия,
	|	Товары.Количество                              КАК Количество
	|ИЗ
	|	Документ.КорректировкаРеализации.Товары КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		 И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция ЗапросМаркируемойПродукцииПрочееОприходованиеТоваров(Документ, ВидМаркируемойПродукции)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК GTIN,
	|	Товары.Номенклатура                            КАК Номенклатура,
	|	Товары.Характеристика                          КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)            КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество)  КАК Количество
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров.Серии КАК Серии
	|		ПО Товары.Ссылка = Серии.Ссылка
	|		И Товары.Номенклатура = Серии.Номенклатура
	|		И Товары.Характеристика = Серии.Характеристика
	|		И Товары.Назначение = Серии.Назначение
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|		И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеИС
	|		ПО (ОписаниеИС.Номенклатура = Товары.Номенклатура
	|			Или ОписаниеИС.Номенклатура = Товары.Номенклатура.НаборУпаковок)
	|ГДЕ
	|	Товары.Ссылка = &ДокументСсылка
	|	И &УсловиеМаркируемаяПродукция
	|	И &УсловиеНефасованнаяПродукция
	|ИТОГИ ПО
	|	Номенклатура,
	|	Характеристика,
	|	GTIN
	|";
	
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоВидуМаркируемойПродукции(ТекстЗапроса, ВидМаркируемойПродукции);
	ИнтеграцияИСМПУТ.УстановитьУсловиеПоНефасованнойПродукции(ТекстЗапроса);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", Документ);
	
	Возврат Запрос.Выполнить();
	
КонецФункции



#КонецОбласти

#Область ОткрытиеФормыПроверкиИПодбораНеПоДокументу

Процедура ПреобразоватьНесериализуемыеЗначения(Дерево, Таблица)
	
	ИменаКолонокДерева = Новый Массив;
	
	Для Каждого КолонкаДерева Из Дерево.Колонки Цикл
		ИменаКолонокДерева.Добавить(КолонкаДерева.Имя);
	КонецЦикла;
	
	ИменаКолонокДерева = СтрСоединить(ИменаКолонокДерева, ",");
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		ЗначенияСтрокиДерева = Новый Структура(ИменаКолонокДерева);
		ЗаполнитьЗначенияСвойств(ЗначенияСтрокиДерева, СтрокаТаблицы.СтрокаДерева);
		СтрокаТаблицы.СтрокаДерева = ЗначенияСтрокиДерева;
		ЗначенияСтрокиДерева = Новый Структура(ИменаКолонокДерева);
		ЗаполнитьЗначенияСвойств(ЗначенияСтрокиДерева, СтрокаТаблицы.УпаковкаВерхнегоУровня);
		СтрокаТаблицы.УпаковкаВерхнегоУровня = ЗначенияСтрокиДерева;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

Функция ЭтоДанныеФормыСтруктураДокументаПоНаименованию(Контекст, Имя)
	
	Если Не (ТипЗнч(Контекст) = Тип("ДанныеФормыСтруктура") И Контекст.Свойство("Ссылка")) Тогда
		Возврат Ложь;
	ИначеЕсли ТипЗнч(Контекст.Ссылка) <> Тип(СтрШаблон("ДокументСсылка.%1", Имя)) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		ДанныеФормыВЗначение(Контекст, Тип(СтрШаблон("ДокументОбъект.%1", Имя)));
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

#Область НастройкиВстраиванияФормыПроверки

Процедура НастроитьРасходныйДокументДляЕГАИС(ПараметрыИнтеграции, РазместитьВ, МетаданныеОбъекта) Экспорт
	
	Если ЗначениеЗаполнено(РазместитьВ) Тогда
		ПараметрыИнтеграции.ИмяРодительскойГруппыФормы             = РазместитьВ;
	КонецЕсли;
	ПараметрыИнтеграции.РазмещатьЭлементыИнтерфейса                = Истина;
	ПараметрыИнтеграции.ИспользоватьКолонкуСтатусаПроверкиПодбора  = Истина;
	ПараметрыИнтеграции.ИспользоватьБезМаркируемойПродукции        = Истина;
	ПараметрыИнтеграции.БлокироватьТабличнуюЧастьТоварыПриПроверке = Ложь;
	ПараметрыИнтеграции.ИспользоватьСтатусПроверкаЗавершена        = Ложь;
	ПараметрыИнтеграции.ЕстьПравоИзменение                         = ПравоДоступа("Изменение", МетаданныеОбъекта);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
