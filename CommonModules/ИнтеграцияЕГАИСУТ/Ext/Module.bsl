#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработкаЗаполнения

Процедура ОбработкаЗаполненияАктаПостановкиНаБалансЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеИзлишковТоваров") Тогда
		
		ЗаполнитьАктПостановкиНаБалансНаОснованииОприходованияИзлишковТовара(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОрдерНаОтражениеИзлишковТоваров") Тогда
	
		ЗаполнитьАктПостановкиНаБалансНаОснованииОрдераНаОтражениеИзлишковТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
	
		ЗаполнитьАктПостановкиНаБалансНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОрдерНаОтражениеПересортицыТоваров") Тогда
	
		ЗаполнитьАктПостановкиНаБалансНаОснованииОрдераНаОтражениеПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("АкцизныеМаркиВРегистр3") Тогда
		
		ЗаполнитьАктПостановкиНаБалансНаОснованииСтруктурыЗаполнения(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияАктаСписанияЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВнутреннееПотребление") Тогда
		
		ЗаполнитьАктСписанияЕГАИСНаОснованииВнутреннегоПотребленияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СписаниеНедостачТоваров") Тогда
		
		ЗаполнитьАктСписанияЕГАИСНаОснованииСписанияНедостачТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
		
		ЗаполнитьАктСписанияЕГАИСНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		ЗаполнитьАктСписанияЕГАИСНаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		
		ЗаполнитьАктСписанияЕГАИСНаОснованииСборкиТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ЗаполнитьАктСписанияЕГАИСНаОснованииРеализацииТоваровУслуг(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияТТНИсходящейЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	ТипОснования = ТипЗнч(ДанныеЗаполнения);
	Если ТипОснования = Тип("Структура") Тогда
		Если Не ДанныеЗаполнения.Свойство("Основание") Тогда
			Возврат;
		Иначе
			ТипОснования = ТипЗнч(ДанныеЗаполнения.Основание);
		КонецЕсли;
	КонецЕсли;
	
	Если ТипОснования = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		ЗаполнитьТТНИсходящуюЕГАИСНаОснованииВозвратаТоваровПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ЗаполнитьТТНИсходящуюЕГАИСНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		ЗаполнитьТТНИсходящуюЕГАИСНаОснованииПеремещенияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") Тогда
		
		ЗаполнитьТТНИсходящуюЕГАИСНаОснованииВозвратаТоваровМеждуОрганизациями(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		
		ЗаполнитьТТНИсходящуюЕГАИСНаОснованииПередачиТоваровМеждуОрганизациями(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияЧекаЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ЗаполнитьЧекЕГАИСНаОснованииРеализацииТоваровУслуг(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		
		ЗаполнитьЧекЕГАИСНаОснованииСборкиТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВнутреннееПотребление") Тогда
		
		ЗаполнитьЧекЕГАИСНаОснованииВнутреннегоПотребленияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияЧекаЕГАИСВозврат(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
		
		ЗаполнитьЧекЕГАИСВозвратНаОснованииВозвратаТоваровОтКлиента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполненияУведомлениеОПланируемомИмпортеЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		
		ЗаполнитьУведомлениеОПланируемомИмпортеЕГАИСНаОснованииЗаказаПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаЗаполненияОтчетОПроизводствеЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		
		ЗаполнитьОтчетПроизводстваЕГАИСНаОснованииСборкаТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);	
		
	
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоступлениеТоваровУслугНаОснованииТТНВходящаяЕГАИС(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, "Дата, Организация");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Период", ЗначенияРеквизитов.Дата);
	Запрос.УстановитьПараметр("СтранаРегистрации", ЗначениеНастроекКлиентСерверПовтИсп.СтранаРегистрацииОрганизации(ЗначенияРеквизитов.Организация));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТТНВходящаяЕГАИС.НомерТТН КАК НомерВходящегоДокумента,
	|	ТТНВходящаяЕГАИС.ДатаТТН КАК ДатаВходящегоДокумента,
	|	СтатусыДокументовЕГАИС.Статус КАК СтатусОбработки,
	|	ТТНВходящаяЕГАИС.Ссылка КАК ТоварноТранспортнаяНакладнаяЕГАИС,
	|	ТТНВходящаяЕГАИС.ТорговыйОбъект КАК Склад,
	|	ТТНВходящаяЕГАИС.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИС.Поставщик = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|			ТОГДА ТТНВходящаяЕГАИС.Грузоотправитель.ТорговыйОбъект
	|		ИНАЧЕ ТТНВходящаяЕГАИС.Поставщик.ТорговыйОбъект
	|	КОНЕЦ КАК Партнер,
	|	ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИС.Поставщик = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|			ТОГДА ТТНВходящаяЕГАИС.Грузоотправитель.Контрагент
	|		ИНАЧЕ ТТНВходящаяЕГАИС.Поставщик.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА ТТНВходящаяЕГАИС.Грузоотправитель = ЗНАЧЕНИЕ(Справочник.КлассификаторОрганизацийЕГАИС.ПустаяСсылка)
	|			ТОГДА ТТНВходящаяЕГАИС.Поставщик.Контрагент
	|		ИНАЧЕ ТТНВходящаяЕГАИС.Грузоотправитель.Контрагент
	|	КОНЕЦ КАК Грузоотправитель,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика) КАК ХозяйственнаяОперация,
	|	ИСТИНА КАК ЕстьАлкогольнаяПродукция
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТТНВходящаяЕГАИС.Ссылка)
	|ГДЕ
	|	ТТНВходящаяЕГАИС.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК Поле1
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И Товары.АлкогольнаяПродукция = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|;
	|" + ИнтеграцияЕГАИС.ТекстЗапросаВТКоэффициентыПересчетаВЕдиницыЕГАИС("ВТТовары", "ВТКоэффициентыПересчетаВЕдиницыЕГАИС") + "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТНВходящаяЕГАИС.ТорговыйОбъект КАК Склад,
	|	ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТТНВходящаяЕГАИСТовары.Номенклатура КАК Номенклатура,
	|	ТТНВходящаяЕГАИСТовары.Характеристика КАК Характеристика,
	|	ТТНВходящаяЕГАИСТовары.Серия КАК Серия,
	|	ТТНВходящаяЕГАИСТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ЕСТЬNULL(СтавкиНДСНоменклатуры.СтавкаНДС, ЕСТЬNULL(ОсновныеСтавкиНДС.СтавкаНДС,
	|		ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка))) КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ЕдиницыЕГАИС.Коэффициент, 1) = 0
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА ТТНВходящаяЕГАИС.ЕстьРасхождения
	|					ТОГДА ТТНВходящаяЕГАИСТовары.КоличествоФакт
	|				ИНАЧЕ ТТНВходящаяЕГАИСТовары.Количество
	|			КОНЕЦ / ЕСТЬNULL(ЕдиницыЕГАИС.Коэффициент, 1)
	|	КОНЕЦ *
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ОписаниеНоменклатуры.КоличествоВПотребительскойУпаковке, 0) = 0
	|			ТОГДА 1
	|		ИНАЧЕ ОписаниеНоменклатуры.КоличествоВПотребительскойУпаковке
	|	КОНЕЦ КАК Количество,
	|	ТТНВходящаяЕГАИСТовары.Цена * ЕСТЬNULL(ЕдиницыЕГАИС.Коэффициент, 1) /
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ОписаниеНоменклатуры.КоличествоВПотребительскойУпаковке, 0) = 0
	|			ТОГДА 1
	|		ИНАЧЕ ОписаниеНоменклатуры.КоличествоВПотребительскойУпаковке
	|	КОНЕЦ КАК Цена
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТТНВходящаяЕГАИСТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТТНВходящаяЕГАИС КАК ТТНВходящаяЕГАИС
	|		ПО ТТНВходящаяЕГАИСТовары.Ссылка = ТТНВходящаяЕГАИС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры.СрезПоследних(&Период,
	|			Страна = &СтранаРегистрации ИЛИ Страна = ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка)) КАК СтавкиНДСНоменклатуры
	|		ПО ТТНВходящаяЕГАИСТовары.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС.СрезПоследних(&Период, Страна = &СтранаРегистрации) КАК ОсновныеСтавкиНДС
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыПересчетаВЕдиницыЕГАИС КАК ЕдиницыЕГАИС
	|		ПО ЕдиницыЕГАИС.АлкогольнаяПродукция = ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция
	|		 И ЕдиницыЕГАИС.Номенклатура = ТТНВходящаяЕГАИСТовары.Номенклатура
	|		 И ЕдиницыЕГАИС.Характеристика = ТТНВходящаяЕГАИСТовары.Характеристика
	|		 И ЕдиницыЕГАИС.Серия = ТТНВходящаяЕГАИСТовары.Серия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеНоменклатуры
	|			ПО ТТНВходящаяЕГАИСТовары.Номенклатура = ОписаниеНоменклатуры.Номенклатура
	|			 И ТТНВходящаяЕГАИСТовары.АлкогольнаяПродукция.ТипПродукции <> ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|ГДЕ
	|	ТТНВходящаяЕГАИСТовары.Ссылка = &ДокументОснование";
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетЗапросов[0].Выбрать();
	ВыборкаШапка.Следующий();
	
	МассивДопустимыхСтатусов = Новый Массив;
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПринятИзЕГАИС);
	
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктПодтвержденияКПередаче);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктПодтвержденияПереданВУТМ);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктПодтвержденияОбрабатываетсяЕГАИС);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктПодтвержденияОшибка);
	
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктРасхожденийКПередаче);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктРасхожденийПереданВУТМ);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктРасхожденийОбрабатываетсяЕГАИС);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.АктРасхожденийОшибка);
	
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.Подтвержден);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыОбработкиТТНВходящейЕГАИС.ПодтвержденСРасхождениями);
	
	ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
	ПараметрыПроверки.Статус = ВыборкаШапка.СтатусОбработки;
	ПараметрыПроверки.МассивДопустимыхСтатусов = МассивДопустимыхСтатусов;
	ПараметрыПроверки.ЕстьОшибкиСтатус = МассивДопустимыхСтатусов.Найти(ВыборкаШапка.СтатусОбработки) = Неопределено;
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
		ВыборкаШапка.ТоварноТранспортнаяНакладнаяЕГАИС, ПараметрыПроверки);

	ЗаполнитьЗначенияСвойств(ДокументОбъект, ВыборкаШапка);
	
	ЕстьНесопоставленныеТовары = НЕ ПакетЗапросов[1].Пустой();
	Если ЕстьНесопоставленныеТовары Тогда
		ТекстОшибки = НСтр("ru='В документе %Документ% есть несопоставленные товары. Ввод на основании такого документа запрещен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	ДокументОбъект.ЗаполнитьУсловияЗакупокПоУмолчанию();
	
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ВыборкаТовары = ПакетЗапросов[ПакетЗапросов.Количество() - 1].Выбрать();
	Пока ВыборкаТовары.Следующий() Цикл
		
		НоваяСтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, ВыборкаТовары);
		НоваяСтрокаТовары.КоличествоУпаковок = НоваяСтрокаТовары.Количество;
		НоваяСтрокаТовары.Сумма     = НоваяСтрокаТовары.КоличествоУпаковок * ВыборкаТовары.Цена;
		НоваяСтрокаТовары.СуммаНДС  = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(НоваяСтрокаТовары.Сумма, НоваяСтрокаТовары.СтавкаНДС, ДокументОбъект.ЦенаВключаетНДС);
		НоваяСтрокаТовары.СуммаСНДС = НоваяСтрокаТовары.Сумма + ?(ДокументОбъект.ЦенаВключаетНДС, 0, НоваяСтрокаТовары.СуммаНДС);
		
		Если ЗначениеЗаполнено(НоваяСтрокаТовары.Номенклатура) Тогда
			СтруктураДействий = Новый Структура;
			СтруктураДействий.Вставить("ЗаполнитьНоменклатуруПоставщикаПоНоменклатуре", ДокументОбъект.Партнер);
			СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", НоваяСтрокаТовары.Упаковка);
			СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
			СтруктураДействий.Вставить("ПроверитьСтатьюАналитикуРасходов", НоваяСтрокаТовары.Номенклатура);
			СтруктураДействий.Вставить("ОчиститьСуммуВзаиморасчетов");
			
			КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрокаТовары, СтруктураДействий, КэшированныеЗначения);
			
			Если ИспользоватьСерииНоменклатуры Тогда
				НоваяСтрокаСерии = ДокументОбъект.Серии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, НоваяСтрокаТовары);
			Иначе
				НоваяСтрокаТовары.Серия = "";
				НоваяСтрокаТовары.СтатусУказанияСерий = 0;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ИспользоватьСерииНоменклатуры Тогда
		ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ДокументОбъект, Документы.ПриобретениеТоваровУслуг);
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ДокументОбъект, ПараметрыУказанияСерий);
		НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ДокументОбъект, ПараметрыУказанияСерий);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Сформировать гиперссылку см также в работе.
// 
// Параметры:
//  Параметры - Произвольный - Параметры
//  ОбъектМетаданных - ОбъектМетаданных - Объект метаданных
// 
// Возвращаемое значение:
//  Неопределено, ФорматированнаяСтрока - гиперссылка
Функция СформироватьГиперссылкуСмТакжеВРаботе(Параметры, ОбъектМетаданных) Экспорт
	
	Если ОбъектМетаданных = Метаданные.Документы.ТТНВходящаяЕГАИС Тогда
		
		Возврат СформироватьГиперссылкуСмТакжеВРаботеТТНВходящаяЕГАИС(Параметры);
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ-объект
//  Свойства - См. ПроведениеДокументов.СвойстваДокумента
//
// Возвращаемое значение:
//  (См. ПроведениеДокументов.ПараметрыУчетногоМеханизма)
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ОстаткиАлкогольнойПродукцииЕГАИС);
		
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Возвращает тексты запросов для сторнирования движений при исправлении документов
// 
// Параметры:
// 	МетаданныеДокумента - ОбъектМетаданныхДокумент - Метаданные документа, который проводится.
// 
// Возвращаемое значение:
// 	Соответствие Из Строка - Соответствие полного имени регистра тексту запроса сторнирования
//
Функция ТекстыЗапросовСторнирования(МетаданныеДокумента) Экспорт
	
	ТекстыЗапросов = Новый Соответствие();
	
	Возврат ТекстыЗапросов;
	
КонецФункции

// Дополняет текст запроса механизма проверки даты запрета по таблице изменений.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 
// Возвращаемое значение:
//	Соответствие Из Строка - соответствие имен таблиц изменения регистров и текстов запросов.
//	
Функция ТекстыЗапросовКонтрольДатыЗапретаПоТаблицеИзменений(Запрос) Экспорт

	СоответствиеТекстовЗапросов = Новый Соответствие();
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

// Процедура формирования движений по подчиненным регистрам ЕГАИС.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	ДопСвойства = Новый Структура("ТаблицыДляДвижений", ТаблицыДляДвижений);
	РегистрыНакопления.ОстаткиАлкогольнойПродукцииЕГАИС.ОтразитьДвижения(ДопСвойства, Движения, Отказ);
	
КонецПроцедуры

#КонецОбласти

Процедура ЗаполнениеРеквизитовФормы(Форма) Экспорт
	
	Если Форма.ИмяФормы = "Документ.ПриобретениеТоваровУслуг.Форма.ФормаДокумента" Тогда
		
		ПараметрыИнтеграции = Форма.ПараметрыИнтеграцииГосИС.Получить("ЕГАИС.ДокументОснование");
		Если ПараметрыИнтеграции <> Неопределено И ЗначениеЗаполнено(ПараметрыИнтеграции.ИмяЭлементаФормы) Тогда
			
			ЭлементИнтерфейса  = Форма.Элементы[ПараметрыИнтеграции.ИмяЭлементаФормы];
			Объект = Форма.Объект;
			
			ТекстГиперссылки = ИнтеграцияЕГАИСВызовСервераУТ.ТекстДокументаЕГАИСВПриобретенииТоваров(Объект, Форма.ТТНВходящаяЕГАИС);
			
			ЭлементИнтерфейса.Видимость = ЗначениеЗаполнено(ТекстГиперссылки);
			Форма[ПараметрыИнтеграции.ИмяРеквизитаФормы] = ТекстГиперссылки;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыИнтеграции = Форма.ПараметрыИнтеграцииГосИС.Получить(Перечисления.ВидыПродукцииИС.Алкогольная);
	Если ПараметрыИнтеграции = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыИнтеграции.ИспользоватьКолонкуСтатусаПроверкиПодбора Тогда
		
		Объект = ПараметрыИнтеграции.ИмяРеквизитаФормыОбъект;
		Товары = ПараметрыИнтеграции.ИмяТабличнойЧастиТовары;
		
		ПараметрыЗаполненияРеквизитов = Новый Структура;
		ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьВидПродукцииИС", Новый Структура("Номенклатура", "ВидПродукцииИС"));
		ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакМаркируемаяПродукция", Новый Структура("Номенклатура", "МаркируемаяПродукция"));
		НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Форма[Объект][Товары],ПараметрыЗаполненияРеквизитов);
		Если ПараметрыИнтеграции.ДоступныОбъемноСортовыеКоды Тогда
			ПроверкаИПодборПродукцииИСМП.ЗаполнитьПризнакАвтоматическийОСУИСВТаблице(Форма[Объект][Товары])
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Копирует связь между номенклатурой и алкогольной продукцией
// для новой позиции номенклатуры.
//
// Параметры:
//  Приемник - ДанныеФормыСтруктураСКоллекцией - Номенклатура, для которой копируется связь:
//   * Ссылка - СправочникСсылка.Номенклатура - ссылка на объект базы данных.
//  Источник - СправочникСсылка.Номенклатура - Номенклатура для которой существует связь.
//	СоответствияСкопированныхОбъектов - Соответствие Из Произвольный - соответствие характеристик номенклатуры-приемника характеристикам номенклатуры-источника.
//
Процедура КопироватьСвязьСКлассификаторомАлкогольнойПродукцииЕГАИС(Приемник, Источник, СоответствияСкопированныхОбъектов) Экспорт
	
	ВариантПереносаНастроекПоХарактеристикам =
	 НоменклатураСервер.ВариантПереносаНастроекПоХарактеристикам(Приемник,
	 		Источник,
			СоответствияСкопированныхОбъектов);
			
	Если ВариантПереносаНастроекПоХарактеристикам = "НеПереносить" Тогда
		Возврат;
	КонецЕсли;
			
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика КАК Характеристика
	|ИЗ
	|	РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|ГДЕ
	|	СоответствиеНоменклатурыЕГАИС.Номенклатура = &НоменклатураИсточник";
	
	Запрос.УстановитьПараметр("НоменклатураИсточник", Источник);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номенклатура.Установить(Приемник.Ссылка);
	
	Пока Выборка.Следующий() Цикл
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Номенклатура         = Приемник.Ссылка;
		Если ВариантПереносаНастроекПоХарактеристикам = "ВзятьИзИсточника" Тогда
			НоваяЗапись.Характеристика       = Выборка.Характеристика;
		ИначеЕсли ВариантПереносаНастроекПоХарактеристикам = "ВзятьИзСоответствия" Тогда
			Характеристика = СоответствияСкопированныхОбъектов.Характеристики.Получить(Выборка.Характеристика);
			Если Характеристика = Неопределено Тогда
				Продолжить;
			Иначе
				НоваяЗапись.Характеристика = Характеристика;
			КонецЕсли;
		КонецЕсли;
		НоваяЗапись.АлкогольнаяПродукция = Выборка.АлкогольнаяПродукция;
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Создает структуру для передачи параметров заполнения серий в функцию ЗаполнитьСгенерироватьСерии
// 
// Возвращаемое значение:
//  Структура - Структура с необходимыми свойствами:
//  * ОрганизацияЕГАИС - Неопределено, СправочникСсылка.КлассификаторОрганизацийЕГАИС - 
//  * ЗаполнятьБезЗапросаСправок - Булево - 
//  * ПараметрыУказанияСерий - Неопределено, Произвольный - 
//  * Склад - Неопределено, СправочникСсылка.Склады - 
Функция ПараметрыЗаполненияСерий() Экспорт
	
	ПараметрыЗаполнения = Новый Структура();
	ПараметрыЗаполнения.Вставить("ОрганизацияЕГАИС",			Неопределено);
	ПараметрыЗаполнения.Вставить("ЗаполнятьБезЗапросаСправок",	Ложь);
	ПараметрыЗаполнения.Вставить("ПараметрыУказанияСерий",		Неопределено);
	ПараметрыЗаполнения.Вставить("Склад",						Неопределено);
	
	Возврат ПараметрыЗаполнения;

КонецФункции

// Заполняет свойство "Склад" в структуре параметров заполнения серий
//
// Параметры:
// 	Объект - ДокументОбъект, ДанныеФормыКоллекция - объект, содержащий значение склада
//  ПараметрыЗаполнения - Структура - Структура параметров заполнения серий
//
Процедура ЗаполнитьПараметрЗаполненияСклад(Объект, ПараметрыЗаполнения) Экспорт

	ПараметрыУказанияСерий = ПараметрыЗаполнения.ПараметрыУказанияСерий;

	Если ПараметрыУказанияСерий = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(ПараметрыУказанияСерий.ИмяПоляСклад)
		И ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Объект, ПараметрыУказанияСерий.ИмяПоляСклад) Тогда
		ПараметрыЗаполнения.Склад = Объект[ПараметрыУказанияСерий.ИмяПоляСклад];
	КонецЕсли;

КонецПроцедуры // ЗаполнитьПараметрЗаполненияСклад()

// Заполняет реквизит "Серия" в товарной табличной части
//
// Параметры:
// 		ТабличнаяЧасть - ДанныеФормыКоллекция, ТабличнаяЧасть - Товарная табличная часть документа
// 		ВыделенныеСтроки - Массив Из СтрокаТабличнойЧасти - Массив выделенных строк
// 		ПараметрыЗаполнения - Структура - Структура параметров заполнения
// 			Обязательные поля:
// 				"ОрганизацияЕГАИС" - СправочникСсылка.КлассификаторОрганизацийЕГАИС - Организация
// 				"ЗаполнятьБезЗапросаСправок" - Булево - Принудительное заполнение серий без запроса справок 1
// 			Необязательные поля:
// 				"ПоляЗаполнения" - Строка - Строка с перечислением заполняемых полей в таблице. Значение по умолчанию: "Серия".
// 				"КолонкиПоЗначению" - Структура - Структура для передачи в качестве параметра "КолонкиПоЗначению" в функцию "ОбщегоНазначенияУТ.ВыгрузитьТаблицуЗначений",
// 				"ДругиеИменаКолонок" - Структура - Структура для передачи в качестве параметра "НовыеИменаКолонок" в функцию "ОбщегоНазначенияУТ.ВыгрузитьТаблицуЗначений".
// 		СтруктураДействий - Структура - Стандартная структура действий со строками для вызова "ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ"
// 		
// Возвращаемое значение:
//   Структура - Структура с результатом выполнения функции.
//
Функция ЗаполнитьСгенерироватьСерии(ТабличнаяЧасть, ВыделенныеСтроки = Неопределено, ПараметрыЗаполнения = Неопределено, СтруктураДействий = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Инициализация результирующей структуры
	Результат = ИнтеграцияЕГАИС.РезультатЗаполненияСерий();
	
	ДополнительныеКолонки = "";
	
	// Получение структуры параметров по умолчанию
	Параметры = Новый Структура(
		"ПоляЗаполнения, КолонкиПоЗначению, ДругиеИменаКолонок",
		"Серия", Новый Структура, Новый Структура);
	ОбщегоНазначенияУТКлиентСервер.ДополнитьСтруктуру(Параметры, ПараметрыЗаполнения, Истина);
	
	// Получение выгрузки по табличной части
	Таблица = ОбщегоНазначенияУТ.ВыгрузитьТаблицуЗначений(
		ТабличнаяЧасть,
		ВыделенныеСтроки,
		"НомерСтроки, Номенклатура, Характеристика, АлкогольнаяПродукция, Серия, Справка2" + ДополнительныеКолонки,
		Параметры.КолонкиПоЗначению,
		Параметры.ДругиеИменаКолонок);
	
	СтрокиБезНоменклатуры = Таблица.НайтиСтроки(Новый Структура("Номенклатура", Справочники.Номенклатура.ПустаяСсылка()));
	Для каждого СтрокаБезНоменклатуры Из СтрокиБезНоменклатуры Цикл
		
		ТекстСообщения = НСтр("ru = 'Не указана номенклатура в строке %НомерСтроки%.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрокаБезНоменклатуры.НомерСтроки);
		
		Результат.ЗаполнениеЗавершено = Ложь;
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок,
			"Объект.Товары.Номенклатура",
			ТекстСообщения, 
			Неопределено);
		
	КонецЦикла;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Получение запроса
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Таблица.НомерСтроки КАК НомерСтроки,
		|	Таблица.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ВЫРАЗИТЬ(Таблица.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Серия КАК Серия,
		|	Таблица.Справка2 КАК Справка2
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ
		|	&Таблица КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтТовары.Номенклатура КАК Номенклатура,
		|	ЕСТЬNULL(ВладельцыСерии.АвтоматическиГенерироватьСерии, ВидыНоменклатуры.АвтоматическиГенерироватьСерии) КАК АвтоматическиГенерироватьСерии,
		|	ЕСТЬNULL(ВладельцыСерии.ИспользоватьДатуПроизводстваСерии, ВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии) КАК ИспользоватьДатуПроизводстваСерии,
		|	ЕСТЬNULL(ВладельцыСерии.ИспользоватьПроизводителяЕГАИССерии, ВидыНоменклатуры.ИспользоватьПроизводителяЕГАИССерии) КАК ИспользоватьПроизводителяЕГАИССерии,
		|	ЕСТЬNULL(ВладельцыСерии.ИспользоватьСправку2ЕГАИССерии, ВидыНоменклатуры.ИспользоватьСправку2ЕГАИССерии) КАК ИспользоватьСправку2ЕГАИССерии,
		|	ЕСТЬNULL(ВладельцыСерии.ИспользоватьСрокГодностиСерии, ВидыНоменклатуры.ИспользоватьСрокГодностиСерии) КАК ИспользоватьСрокГодностиСерии,
		|	ЕСТЬNULL(ВладельцыСерии.Ссылка, ВидыНоменклатуры.Ссылка) КАК ВидНоменклатуры
		|ПОМЕСТИТЬ ВтВидыНоменклатуры
		|ИЗ
		|	ВтТовары КАК ВтТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО ВтТовары.Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВладельцыСерии
		|		ПО ВтТовары.Номенклатура.ВладелецСерий = ВладельцыСерии.Ссылка
		|ГДЕ
		|	ЕСТЬNULL(ВладельцыСерии.АвтоматическиГенерироватьСерии, ВидыНоменклатуры.АвтоматическиГенерироватьСерии) = ИСТИНА
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтТовары.НомерСтроки КАК НомерСтроки,
		|	ВтТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ВтТовары.Номенклатура КАК Номенклатура,
		|	ВтТовары.Характеристика КАК Характеристика,
		|	ВтТовары.Серия КАК Серия,
		|	ВтТовары.Справка2 КАК Справка2,
		|	Справки2ЕГАИС.НомерСправки1 КАК НомерСправки1,
		|	ЕСТЬNULL(Справки1ЕГАИС.Ссылка,ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)) КАК Справка1,
		|	Справки1ЕГАИС.ДатаРозлива КАК Справка1ДатаРозлива,
		|	КлассификаторАлкогольнойПродукцииЕГАИС.Производитель КАК Производитель,
		|	СпрНоменклатура.СрокГодности КАК СрокГодности,
		|	СпрНоменклатура.ЕдиницаИзмеренияСрокаГодности КАК ЕдиницаИзмеренияСрокаГодности,
		|	ВтВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
		|	ВтВидыНоменклатуры.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
		|	ВтВидыНоменклатуры.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
		|	ВтВидыНоменклатуры.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии
		|ПОМЕСТИТЬ ТаблицаТоварыПолная
		|ИЗ
		|	ВтТовары КАК ВтТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки2ЕГАИС КАК Справки2ЕГАИС
		|		ПО ВтТовары.Справка2 = Справки2ЕГАИС.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК КлассификаторАлкогольнойПродукцииЕГАИС
		|		ПО ВтТовары.АлкогольнаяПродукция = КлассификаторАлкогольнойПродукцииЕГАИС.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО ВтТовары.Номенклатура = СпрНоменклатура.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
		|		ПО ВтТовары.Номенклатура = ВтВидыНоменклатуры.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Справки1ЕГАИС КАК Справки1ЕГАИС
		|		ПО Справки2ЕГАИС.НомерСправки1 = Справки1ЕГАИС.РегистрационныйНомер
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВтТовары.Номенклатура КАК Номенклатура
		|ИЗ
		|	ВтТовары КАК ВтТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО ВтТовары.Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВладельцыСерии
		|		ПО ВтТовары.Номенклатура.ВладелецСерий = ВладельцыСерии.Ссылка
		|ГДЕ
		|	ЕСТЬNULL(ВладельцыСерии.АвтоматическиГенерироватьСерии, ВидыНоменклатуры.АвтоматическиГенерироватьСерии) = ЛОЖЬ
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаТоварыПолная.НомерСправки1 КАК НомерСправки1
		|ИЗ
		|	ТаблицаТоварыПолная КАК ТаблицаТоварыПолная
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
		|		ПО ТаблицаТоварыПолная.Номенклатура = ВтВидыНоменклатуры.Номенклатура
		|ГДЕ
		|	ТаблицаТоварыПолная.Справка1 = ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)
		|	И (ВтВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии = ИСТИНА
		|			ИЛИ ВтВидыНоменклатуры.ИспользоватьСрокГодностиСерии = ИСТИНА)
		|";
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		Если НЕ РезультатЗапроса[РезультатЗапроса.Количество()-1].Пустой() И НЕ ПараметрыЗаполнения.ЗаполнятьБезЗапросаСправок Тогда
			Выборка = РезультатЗапроса[РезультатЗапроса.Количество()-1].Выбрать();
			
			МассивЗапросовСправок1 = Новый Массив;
			Пока Выборка.Следующий() Цикл
				
				ПараметрыЗапроса = Новый Структура;
				ПараметрыЗапроса.Вставить("Операция"         , Перечисления.ВидыДокументовЕГАИС.ЗапросСправки1);
				ПараметрыЗапроса.Вставить("ИмяПараметра"     , "");
				ПараметрыЗапроса.Вставить("ЗначениеПараметра", Выборка.НомерСправки1);
				ПараметрыЗапроса.Вставить("ОрганизацияЕГАИС" , ПараметрыЗаполнения.ОрганизацияЕГАИС);
				
				МассивЗапросовСправок1.Добавить(ПараметрыЗапроса);
				
			КонецЦикла;
			Результат.АдресМассиваЗапросов = ПоместитьВоВременноеХранилище(МассивЗапросовСправок1);
			Результат.ЗаполнениеЗавершено = Ложь;
			Возврат Результат;
		КонецЕсли;
		
		Если НЕ РезультатЗапроса[РезультатЗапроса.Количество()-2].Пустой() Тогда
			Выборка = РезультатЗапроса[РезультатЗапроса.Количество()-2].Выбрать();
			
			Пока Выборка.Следующий() Цикл
				ТекстСообщения = НСтр("ru = 'Для номенклатуры %Номенклатура% автоматическая генерация серий не настроена.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Номенклатура%", Выборка.Номенклатура);
				
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок,
					"Объект.Товары.Номенклатура",
					ТекстСообщения, 
					Неопределено);
				
			КонецЦикла;
			Результат.ЗаполнениеЗавершено = Ложь;
		КонецЕсли;
	
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ВтВидыНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
		|	ТаблицаТоварыПолная.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ТаблицаТоварыПолная.Номенклатура КАК Номенклатура,
		|	ТаблицаТоварыПолная.Характеристика КАК Характеристика,
		|	ТаблицаТоварыПолная.Справка2 КАК Справка2,
		|	ВЫРАЗИТЬ(ТаблицаТоварыПолная.Справка1 КАК Справочник.Справки1ЕГАИС).ДатаРозлива КАК Справка1ДатаРозлива,
		|	ТаблицаТоварыПолная.СрокГодности КАК СрокГодностиНоменклатуры,
		|	ТаблицаТоварыПолная.ЕдиницаИзмеренияСрокаГодности КАК ЕдиницаИзмеренияСрокаГодности
		|ИЗ
		|	ТаблицаТоварыПолная КАК ТаблицаТоварыПолная
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
		|		ПО ТаблицаТоварыПолная.Номенклатура = ВтВидыНоменклатуры.Номенклатура
		|ГДЕ
		|	ВтВидыНоменклатуры.ИспользоватьДатуПроизводстваСерии = ИСТИНА
		|	И ТаблицаТоварыПолная.Справка1 <> ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВтВидыНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
		|	ТаблицаТоварыПолная.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ТаблицаТоварыПолная.Номенклатура КАК Номенклатура,
		|	ТаблицаТоварыПолная.Характеристика КАК Характеристика,
		|	ТаблицаТоварыПолная.Справка2 КАК Справка2,
		|	ВЫРАЗИТЬ(ТаблицаТоварыПолная.Справка1 КАК Справочник.Справки1ЕГАИС).ДатаРозлива КАК Справка1ДатаРозлива,
		|	ТаблицаТоварыПолная.СрокГодности КАК СрокГодностиНоменклатуры,
		|	ТаблицаТоварыПолная.ЕдиницаИзмеренияСрокаГодности КАК ЕдиницаИзмеренияСрокаГодности
		|ИЗ
		|	ТаблицаТоварыПолная КАК ТаблицаТоварыПолная
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
		|		ПО ТаблицаТоварыПолная.Номенклатура = ВтВидыНоменклатуры.Номенклатура
		|ГДЕ
		|	ВтВидыНоменклатуры.ИспользоватьСрокГодностиСерии = ИСТИНА
		|	И ТаблицаТоварыПолная.Справка1 <> ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка)
		|";
	
		ТаблицаСрокиГодности = Запрос.Выполнить().Выгрузить();
		ТаблицаСрокиГодности.Колонки.Добавить("ГоденДо", Новый ОписаниеТипов("Дата"));
		Для Каждого ТекСтрока Из ТаблицаСрокиГодности Цикл
			Если ЗначениеЗаполнено(ТекСтрока.Справка1ДатаРозлива) Тогда
				ТекСтрока.ГоденДо = НоменклатураКлиентСервер.ГоденДоПоДатеПроизводства(ТекСтрока.Справка1ДатаРозлива,
					ТекСтрока.СрокГодностиНоменклатуры,
					ТекСтрока.ЕдиницаИзмеренияСрокаГодности);
			КонецЕсли;
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТаблицаСрокиГодности", ТаблицаСрокиГодности);
		Запрос.УстановитьПараметр("ПустаяДата", Дата(1, 1, 1));
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТаблицаСрокиГодности.ВидНоменклатуры КАК ВидНоменклатуры,
		|	ТаблицаСрокиГодности.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ТаблицаСрокиГодности.Номенклатура КАК Номенклатура,
		|	ТаблицаСрокиГодности.Характеристика КАК Характеристика,
		|	ТаблицаСрокиГодности.Справка2 КАК Справка2,
		|	ТаблицаСрокиГодности.Справка1ДатаРозлива КАК Справка1ДатаРозлива,
		|	ТаблицаСрокиГодности.СрокГодностиНоменклатуры КАК СрокГодностиНоменклатуры,
		|	ТаблицаСрокиГодности.ГоденДо КАК ГоденДо,
		|	ТаблицаСрокиГодности.ЕдиницаИзмеренияСрокаГодности КАК ЕдиницаИзмеренияСрокаГодности
		|ПОМЕСТИТЬ
		|	ВТГоденДо
		|ИЗ
		|	&ТаблицаСрокиГодности КАК ТаблицаСрокиГодности
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	АлкогольнаяПродукция,
		|	Справка2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтТовары.НомерСтроки КАК НомерСтроки,
		|	ВтВидыНоменклатуры.ВидНоменклатуры КАК ВидНоменклатуры,
		|	ВтТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ВтТовары.Номенклатура КАК Номенклатура,
		|	ВтТовары.Характеристика КАК Характеристика,
		|	ВтТовары.Серия КАК Серия,
		|	ВтТовары.Справка2 КАК Справка2,
		|	ВЫБОР
		|		КОГДА ВтТовары.Справка1ДатаРозлива = ЗНАЧЕНИЕ(Справочник.Справки1ЕГАИС.ПустаяСсылка) ТОГДА
		|			ВТГоденДо.Справка1ДатаРозлива
		|		ИНАЧЕ
		|			ВтТовары.Справка1ДатаРозлива
		|	КОНЕЦ КАК Справка1ДатаРозлива,
		|	ВТГоденДо.ГоденДо КАК ГоденДо,
		|	ВтТовары.Производитель КАК Производитель,
		|	ВтТовары.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
		|	ВтТовары.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
		|	ВтТовары.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
		|	ВтТовары.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии
		|ПОМЕСТИТЬ
		|	ВтТоварыКонечная
		|ИЗ
		|	ТаблицаТоварыПолная КАК ВтТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыНоменклатуры КАК ВтВидыНоменклатуры
		|			ПО ВтТовары.Номенклатура = ВтВидыНоменклатуры.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГоденДо КАК ВТГоденДо
		|		ПО ВтТовары.Номенклатура = ВТГоденДо.Номенклатура
		|			И ВтТовары.Характеристика = ВТГоденДо.Характеристика
		|			И ВтТовары.АлкогольнаяПродукция = ВТГоденДо.АлкогольнаяПродукция
		|			И ВтТовары.Справка2 = ВТГоденДо.Справка2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтТовары.НомерСтроки КАК НомерСтроки,
		|	ВтТовары.ВидНоменклатуры КАК ВидНоменклатуры,
		|	ВтТовары.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
		|	ВтТовары.Номенклатура КАК Номенклатура,
		|	ВтТовары.Характеристика КАК Характеристика,
		|	СерииНоменклатуры.Ссылка КАК Серия,
		|	ВтТовары.Справка2 КАК Справка2ЕГАИС,
		|	ВтТовары.Справка1ДатаРозлива КАК ДатаПроизводства,
		|	ВтТовары.ГоденДо КАК ГоденДо,
		|	ВтТовары.Производитель КАК ПроизводительЕГАИС,
		|	ВтТовары.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
		|	ВтТовары.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
		|	ВтТовары.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
		|	ВтТовары.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии
		|ИЗ
		|	ВтТоварыКонечная КАК ВтТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|			ПО СерииНоменклатуры.ВидНоменклатуры = ВтТовары.ВидНоменклатуры
		|			И (ВЫБОР
		|				КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА ТОГДА
		|					СерииНоменклатуры.ДатаПроизводства = ВтТовары.Справка1ДатаРозлива
		|				ИНАЧЕ
		|					ИСТИНА
		|				КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА ВтТовары.ИспользоватьПроизводителяЕГАИССерии = ИСТИНА ТОГДА
		|					СерииНоменклатуры.ПроизводительЕГАИС = ВтТовары.Производитель
		|				ИНАЧЕ
		|					ИСТИНА
		|				КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА ВтТовары.ИспользоватьСправку2ЕГАИССерии = ИСТИНА ТОГДА
		|					СерииНоменклатуры.Справка2ЕГАИС = ВтТовары.Справка2
		|				ИНАЧЕ
		|					ИСТИНА
		|				КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА ВтТовары.ИспользоватьСрокГодностиСерии = ИСТИНА ТОГДА
		|					СерииНоменклатуры.ГоденДо = ВтТовары.ГоденДо
		|				ИНАЧЕ
		|					ИСТИНА
		|				КОНЕЦ)
		|ГДЕ
		|	ВЫБОР
		|		КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА ТОГДА
		|			ВтТовары.Справка1ДатаРозлива <> &ПустаяДата
		|		ИНАЧЕ
		|			ИСТИНА
		|		КОНЕЦ
		|	И (ВЫБОР
		|		КОГДА ВтТовары.ИспользоватьСрокГодностиСерии = ИСТИНА ТОГДА
		|			ВтТовары.ГоденДо <> &ПустаяДата
		|		ИНАЧЕ
		|			ИСТИНА
		|		КОНЕЦ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВтТовары.ВидНоменклатуры КАК ВидНоменклатуры,
		|	ВтТовары.Справка2 КАК Справка2ЕГАИС,
		|	ВтТовары.Справка1ДатаРозлива КАК ДатаПроизводства,
		|	ВтТовары.ГоденДо КАК ГоденДо,
		|	ВтТовары.Производитель КАК ПроизводительЕГАИС,
		|	ВтТовары.ИспользоватьДатуПроизводстваСерии КАК ИспользоватьДатуПроизводстваСерии,
		|	ВтТовары.ИспользоватьПроизводителяЕГАИССерии КАК ИспользоватьПроизводителяЕГАИССерии,
		|	ВтТовары.ИспользоватьСправку2ЕГАИССерии КАК ИспользоватьСправку2ЕГАИССерии,
		|	ВтТовары.ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии
		|ИЗ
		|	ВтТоварыКонечная КАК ВтТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|			ПО СерииНоменклатуры.ВидНоменклатуры = ВтТовары.ВидНоменклатуры
		|			И (ВЫБОР
		|				КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА ТОГДА
		|					СерииНоменклатуры.ДатаПроизводства = ВтТовары.Справка1ДатаРозлива
		|				ИНАЧЕ
		|					ИСТИНА
		|				КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА ВтТовары.ИспользоватьПроизводителяЕГАИССерии = ИСТИНА ТОГДА
		|					СерииНоменклатуры.ПроизводительЕГАИС = ВтТовары.Производитель
		|				ИНАЧЕ
		|					ИСТИНА
		|				КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА ВтТовары.ИспользоватьСправку2ЕГАИССерии = ИСТИНА ТОГДА
		|					СерииНоменклатуры.Справка2ЕГАИС = ВтТовары.Справка2
		|				ИНАЧЕ
		|					ИСТИНА
		|				КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА ВтТовары.ИспользоватьСрокГодностиСерии = ИСТИНА ТОГДА
		|					СерииНоменклатуры.ГоденДо = ВтТовары.ГоденДо
		|				ИНАЧЕ
		|					ИСТИНА
		|				КОНЕЦ)
		|ГДЕ
		|	СерииНоменклатуры.Ссылка ЕСТЬ NULL
		|	И ВЫБОР
		|		КОГДА ВтТовары.ИспользоватьДатуПроизводстваСерии = ИСТИНА ТОГДА
		|			ВтТовары.Справка1ДатаРозлива <> &ПустаяДата
		|		ИНАЧЕ
		|			ИСТИНА
		|		КОНЕЦ
		|	И (ВЫБОР
		|		КОГДА ВтТовары.ИспользоватьСрокГодностиСерии = ИСТИНА ТОГДА
		|			ВтТовары.ГоденДо <> &ПустаяДата
		|		ИНАЧЕ
		|			ИСТИНА
		|		КОНЕЦ)
		|;
		|";
		
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаГенерацияСерий = ПакетРезультатов[ПакетРезультатов.Количество()-1].Выгрузить();
	ТаблицаГенерацияСерий.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ТаблицаГенерацияСерий.Индексы.Добавить("ВидНоменклатуры, Справка2ЕГАИС, ДатаПроизводства, ГоденДо, ПроизводительЕГАИС");
	Для Каждого ТекСтрока Из ТаблицаГенерацияСерий Цикл
		НоваяСерия = Справочники.СерииНоменклатуры.СоздатьЭлемент();
		НоваяСерия.Заполнить(ТекСтрока);
		Попытка
			НоваяСерия.Записать();
			ТекСтрока.Серия = НоваяСерия.Ссылка;
			Результат.ЗаполнениеЗавершено = Истина;
		Исключение
			Результат.ЗаполнениеЗавершено = Ложь;
			
			ТекстСообщения = НСтр("ru = 'Не удалось сгенерировать серию по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
										УровеньЖурналаРегистрации.Ошибка,
										Метаданные.Справочники.СерииНоменклатуры,
										НоваяСерия.Ссылка,
										ТекстСообщения);
			ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.СписокОшибок,
				"Объект.Товары.Серия",
				ТекстСообщения, 
				Неопределено);
		КонецПопытки;
	КонецЦикла;
	
	ВыборкаЗаполнениеСерий = ПакетРезультатов[ПакетРезультатов.Количество()-2].Выбрать();
	Пока ВыборкаЗаполнениеСерий.Следующий() Цикл
		СтрокаТовары = ТабличнаяЧасть[ВыборкаЗаполнениеСерий.НомерСтроки-1];
		Если ЗначениеЗаполнено(ВыборкаЗаполнениеСерий.Серия) Тогда
			СтрокаТовары.Серия = ВыборкаЗаполнениеСерий.Серия;
			Результат.ЗаполнениеЗавершено = Истина;
		Иначе
			ПараметрыПоиска = Новый Структура("ВидНоменклатуры", ВыборкаЗаполнениеСерий.ВидНоменклатуры);
			Если ВыборкаЗаполнениеСерий.ИспользоватьДатуПроизводстваСерии Тогда
				ПараметрыПоиска.Вставить("ДатаПроизводства", ВыборкаЗаполнениеСерий.ДатаПроизводства);
			КонецЕсли;
			Если ВыборкаЗаполнениеСерий.ИспользоватьПроизводителяЕГАИССерии Тогда
				ПараметрыПоиска.Вставить("ПроизводительЕГАИС", ВыборкаЗаполнениеСерий.ПроизводительЕГАИС);
			КонецЕсли;
			Если ВыборкаЗаполнениеСерий.ИспользоватьСправку2ЕГАИССерии Тогда
				ПараметрыПоиска.Вставить("Справка2ЕГАИС", ВыборкаЗаполнениеСерий.Справка2ЕГАИС);
			КонецЕсли;
			Если ВыборкаЗаполнениеСерий.ИспользоватьСрокГодностиСерии Тогда
				ПараметрыПоиска.Вставить("ГоденДо", ВыборкаЗаполнениеСерий.ГоденДо);
			КонецЕсли;
			НайденныеСтроки = ТаблицаГенерацияСерий.НайтиСтроки(ПараметрыПоиска);
			Если НайденныеСтроки.Количество() > 0 Тогда
				СтрокаТовары.Серия = НайденныеСтроки[0].Серия;
				Результат.ЗаполнениеЗавершено = Истина;
			Иначе
				Результат.ЗаполнениеЗавершено = Ложь;
			КонецЕсли;
		КонецЕсли;
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТовары, СтруктураДействий, Неопределено);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает массив особенностей учета номенклатуры подсистемы
//
// Возвращаемое значение:
//   Массив из ПеречислениеСсылка.ОсобенностиУчетаНоменклатуры
Функция ОсобенностиУчетаНоменклатуры() Экспорт
	
	Массив = Новый Массив;
	
	Массив.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция);
	
	Возврат Массив;
	
КонецФункции

#Область Расхождения

// Функция проверяет наличие расхождений между ТТН и товарами накладной.
//
// Параметры:
//  ТоварноТранспортнаяНакладнаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС - проверяемая ТТН,
//  ДокументСсылка - ДокументСсылка.ПриобретениеТоваровУслуг - проверяемое поступление товаров.
//
// Возвращаемое значение:
//  Булево - Истина, если есть расхождения, иначе - Ложь.
//
Функция ЕстьРасхожденияМеждуДокументомПриобретениеТоваровУслугИТТНЕГАИС(ТоварноТранспортнаяНакладнаяЕГАИС, ДокументСсылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество)    КАК Количество
	|ПОМЕСТИТЬ ВтТоварыТТН
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ТТНСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество
	|	* ВЫБОР
	|		КОГДА Сопоставлено.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная) ТОГДА
	|			ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 0)
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыПоступления
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Серии КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК Сопоставлено
	|		ПО ТабличнаяЧасть.Номенклатура = Сопоставлено.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = Сопоставлено.Характеристика
	|			И ТабличнаяЧасть.Серия = Сопоставлено.Серия
	|			И Сопоставлено.Серия <> &ПустаяСерия
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПоступлениеТоваров
	|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество
	|	* ВЫБОР
	|		КОГДА Сопоставлено.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная) ТОГДА
	|			ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 0)
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ) КАК Количество
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК Сопоставлено
	|		ПО ТабличнаяЧасть.Номенклатура = Сопоставлено.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = Сопоставлено.Характеристика
	|		И ТабличнаяЧасть.Серия = Сопоставлено.Серия
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПоступлениеТоваров
	|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТоварыТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТоварыПоступления.Количество   КАК Количество
	|ИЗ
	|	ВтТоварыПоступления КАК ВтТоварыПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК ВтТоварыТТН
	|		ПО ВтТоварыПоступления.АлкогольнаяПродукция = ВтТоварыТТН.АлкогольнаяПродукция
	|			И ВтТоварыПоступления.Номенклатура = ВтТоварыТТН.Номенклатура
	|			И ВтТоварыПоступления.Характеристика = ВтТоварыТТН.Характеристика
	|			И ВтТоварыПоступления.Серия = ВтТоварыТТН.Серия
	|ГДЕ
	|	(ВтТоварыПоступления.Количество > ЕСТЬNULL(ВтТоварыТТН.Количество, 0)
	|			ИЛИ ВтТоварыТТН.АлкогольнаяПродукция = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))");
	
	Запрос.УстановитьПараметр("ТТНСсылка",          ТоварноТранспортнаяНакладнаяЕГАИС);
	Запрос.УстановитьПараметр("ПоступлениеТоваров", ДокументСсылка);
	Запрос.УстановитьПараметр("ПустаяСерия", ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

// Функция проверяет наличие расхождений между ТТН и товарами накладной.
//
// Параметры:
//  ТоварноТранспортнаяНакладнаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС - проверяемая ТТН,
//  ДокументОбъект - ДанныеФормыСтруктура - проверяемое поступление товаров.
//
// Возвращаемое значение:
//  Булево - Истина, если есть расхождения, иначе - Ложь.
//
Функция ЕстьРасхожденияМеждуОбъектомПриобретениеТоваровУслугИТТНЕГАИС(ТоварноТранспортнаяНакладнаяЕГАИС, ДокументОбъект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыТТН
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ВтСерии
	|ИЗ
	|	&ТаблицаСерии КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТовары.Номенклатура КАК Номенклатура,
	|	ВтТовары.Характеристика КАК Характеристика,
	|	ВтТовары.Серия КАК Серия,
	|	ВтТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ВтТоварыПоступления
	|ИЗ
	|	ВтТовары КАК ВтТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСерии КАК ВтСерии
	|		ПО ВтТовары.Номенклатура = ВтСерии.Номенклатура
	|			И ВтТовары.Характеристика = ВтСерии.Характеристика
	|			И ВтТовары.Серия = ВтСерии.Серия
	|ГДЕ
	|	ВтТовары.Номенклатура.АлкогольнаяПродукция
	|	И ВтСерии.Номенклатура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтТовары.Номенклатура,
	|	ВтТовары.Характеристика,
	|	ВтТовары.Серия,
	|	ВтТовары.Количество
	|ИЗ
	|	ВтСерии КАК ВтТовары
	|ГДЕ
	|	ВтТовары.Номенклатура.АлкогольнаяПродукция
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТоварыПоступления.Номенклатура КАК Номенклатура,
	|	ВтТоварыПоступления.Характеристика КАК Характеристика,
	|	ВтТоварыПоступления.Серия КАК Серия,
	|	СУММА(ВтТоварыПоступления.Количество) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыПоступленияССериями
	|ИЗ
	|	ВтТоварыПоступления КАК ВтТоварыПоступления
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтТоварыПоступления.Номенклатура,
	|	ВтТоварыПоступления.Характеристика,
	|	ВтТоварыПоступления.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТоварыПоступленияССериями.Номенклатура КАК Номенклатура,
	|	ВтТоварыПоступленияССериями.Количество КАК Количество
	|ИЗ
	|	ВтТоварыПоступленияССериями КАК ВтТоварыПоступленияССериями
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК ВтТоварыТТН
	|		ПО ВтТоварыПоступленияССериями.Номенклатура = ВтТоварыТТН.Номенклатура
	|			И ВтТоварыПоступленияССериями.Характеристика = ВтТоварыТТН.Характеристика
	|			И ВтТоварыПоступленияССериями.Серия = ВтТоварыТТН.Серия
	|ГДЕ
	|	(ВтТоварыПоступленияССериями.Количество > ЕСТЬNULL(ВтТоварыТТН.Количество, 0)
	|			ИЛИ ВтТоварыТТН.Номенклатура ЕСТЬ NULL)");
	
	Запрос.УстановитьПараметр("Ссылка",        ТоварноТранспортнаяНакладнаяЕГАИС);
	Запрос.УстановитьПараметр("ТаблицаТовары", ДокументОбъект.Товары.Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаСерии",  ДокументОбъект.Серии.Выгрузить());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

// Функция проверяет наличие расхождений между ТТН и товарами перемещения.
//
// Параметры:
//  ТоварноТранспортнаяНакладнаяЕГАИС - ДокументСсылка.ТТНВходящаяЕГАИС - проверяемая ТТН,
//  ДокументСсылка - ДокументСсылка.ПеремещениеТоваров - проверяемое поступление товаров.
//
// Возвращаемое значение:
//  Булево - Истина, если есть расхождения, иначе - Ложь.
//
Функция ЕстьРасхожденияМеждуДокументомПеремещениеТоваровИТТНЕГАИС(ТоварноТранспортнаяНакладнаяЕГАИС, ДокументСсылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество)    КАК Количество
	|ПОМЕСТИТЬ ВтТоварыТТН
	|ИЗ
	|	Документ.ТТНВходящаяЕГАИС.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ТТНСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество
	|	* ВЫБОР
	|		КОГДА Сопоставлено.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная) ТОГДА
	|			ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 0)
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ ВтТоварыПоступления
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК Сопоставлено
	|		ПО ТабличнаяЧасть.Номенклатура = Сопоставлено.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = Сопоставлено.Характеристика
	|			И ТабличнаяЧасть.Серия = Сопоставлено.Серия
	|			И Сопоставлено.Серия <> &ПустаяСерия
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПеремещениеТоваров
	|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)) КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.Серия КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество
	|	* ВЫБОР
	|		КОГДА Сопоставлено.АлкогольнаяПродукция.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная) ТОГДА
	|			ЕСТЬNULL(ТабличнаяЧасть.Номенклатура.ОбъемДАЛ, 0)
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ) КАК Количество
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК Сопоставлено
	|		ПО ТабличнаяЧасть.Номенклатура = Сопоставлено.Номенклатура
	|		И ТабличнаяЧасть.Характеристика = Сопоставлено.Характеристика
	|		И ТабличнаяЧасть.Серия = Сопоставлено.Серия
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ПеремещениеТоваров
	|	И ТабличнаяЧасть.Номенклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(Сопоставлено.АлкогольнаяПродукция, ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)),
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтТоварыТТН.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ВтТоварыПоступления.Количество   КАК Количество
	|ИЗ
	|	ВтТоварыПоступления КАК ВтТоварыПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТоварыТТН КАК ВтТоварыТТН
	|		ПО ВтТоварыПоступления.АлкогольнаяПродукция = ВтТоварыТТН.АлкогольнаяПродукция
	|			И ВтТоварыПоступления.Номенклатура = ВтТоварыТТН.Номенклатура
	|			И ВтТоварыПоступления.Характеристика = ВтТоварыТТН.Характеристика
	|			И ВтТоварыПоступления.Серия = ВтТоварыТТН.Серия
	|ГДЕ
	|	(ВтТоварыПоступления.Количество > ЕСТЬNULL(ВтТоварыТТН.Количество, 0)
	|			ИЛИ ВтТоварыТТН.АлкогольнаяПродукция = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка))");
	
	Запрос.УстановитьПараметр("ТТНСсылка",          ТоварноТранспортнаяНакладнаяЕГАИС);
	Запрос.УстановитьПараметр("ПеремещениеТоваров", ДокументСсылка);
	Запрос.УстановитьПараметр("ПустаяСерия", ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗарегистрироватьКлассификаторОрганизацийЕГАИСДляУстановкиСоответствий(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	|		ПО КлассификаторОрганизацийЕГАИС.Код = НастройкиОбменаЕГАИС.ИдентификаторФСРАР
	|ГДЕ
	|	(КлассификаторОрганизацийЕГАИС.Контрагент <> НастройкиОбменаЕГАИС.УдалитьРесурсОрганизация
	|			ИЛИ КлассификаторОрганизацийЕГАИС.ТорговыйОбъект <> НастройкиОбменаЕГАИС.УдалитьРесурсСклад
	|			ИЛИ НЕ КлассификаторОрганизацийЕГАИС.СоответствуетОрганизации)";
	
	МассивСсылок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, МассивСсылок);
	
КонецПроцедуры

Процедура ОбработатьКлассификаторОрганизацийЕГАИСДляУстановкиСоответствий(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Справочник.КлассификаторОрганизацийЕГАИС";
	МетаданныеОбъекта = Метаданные.Справочники.КлассификаторОрганизацийЕГАИС;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВТСсылкиДляОбработки.Ссылка КАК Справочник.КлассификаторОрганизацийЕГАИС) КАК Ссылка
	|ПОМЕСТИТЬ СсылкиДляОбработки
	|ИЗ
	|	&ВТСсылкиДляОбработки КАК ВТСсылкиДляОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СсылкиДляОбработки.Ссылка,
	|	НастройкиОбменаЕГАИС.УдалитьРесурсОрганизация      КАК ОрганизацияИзНастроек,
	|	НастройкиОбменаЕГАИС.УдалитьРесурсСклад            КАК ТорговыйОбъектИзНастроек,
	|	ЕСТЬNULL(НастройкиОбменаЕГАИС.ИдентификаторФСРАР, НЕОПРЕДЕЛЕНО) КАК ИдентификаторФСРАР
	|ИЗ
	|	СсылкиДляОбработки КАК СсылкиДляОбработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиОбменаЕГАИС КАК НастройкиОбменаЕГАИС
	|		ПО СсылкиДляОбработки.Ссылка.Код = НастройкиОбменаЕГАИС.ИдентификаторФСРАР";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТСсылкиДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Если Выборка.ИдентификаторФСРАР = Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка,, Параметры.Очередь);
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.НастройкиОбменаЕГАИС");
			ЭлементБлокировки.УстановитьЗначение("ИдентификаторФСРАР", Выборка.ИдентификаторФСРАР);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			ОрганизацияЕГАИС = Выборка.Ссылка.ПолучитьОбъект();
			
			Если ОрганизацияЕГАИС = Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка,, Параметры.Очередь);
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			Если ОрганизацияЕГАИС.СоответствуетОрганизации
				И Выборка.ОрганизацияИзНастроек = ОрганизацияЕГАИС.Контрагент
				И Выборка.ТорговыйОбъектИзНастроек = ОрганизацияЕГАИС.ТорговыйОбъект Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка,, Параметры.Очередь);
				ЗафиксироватьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ОрганизацияЕГАИС.СоответствуетОрганизации = Истина;
			ОрганизацияЕГАИС.Контрагент     = Выборка.ОрганизацияИзНастроек;
			ОрганизацияЕГАИС.ТорговыйОбъект = Выборка.ТорговыйОбъектИзНастроек;
			
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОрганизацияЕГАИС);
			
			ЗафиксироватьТранзакцию();
		
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать справочник: %Справочник% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Справочник%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			                         УровеньЖурналаРегистрации.Предупреждение,
			                         МетаданныеОбъекта,
			                         Выборка.Ссылка,
			                         ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = НЕ ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#Область ПрочееАкцизныеМарки

// Заполняет служебные реквизиты в табличной части "Товары" в процедурах ПриСозданииНаСервере
//
// Параметры:
//  Форма                - ФормаКлиентскогоПриложения - Форма
//  ИмяКолонкиКоличество - Строка - Имя колонки "Количество"
Процедура АкцизныеМаркиЗаполнитьСлужебныеРеквизиты(Форма, ИмяКолонкиКоличество = "Количество") Экспорт
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Объект") Тогда
		Источник = Форма.Объект;
	Иначе
		Источник = Форма;
	КонецЕсли;
	
	Товары = Источник.Товары.Выгрузить();
	ДополнениеКИндексу = 0;
	Если Товары.Колонки.Найти("НомерСтроки") = Неопределено Тогда
		
		ДополнениеКИндексу = 1;
		Товары.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
		
		КоличествоСтрок = Товары.Количество() - 1;
		Для НомерСтроки = 0 По КоличествоСтрок Цикл
			Товары[НомерСтроки].НомерСтроки = НомерСтроки;
		КонецЦикла;
		
	КонецЕсли;
	
	ОрганизацияЕГАИС = Источник.ОрганизацияЕГАИС;
	
	ШтрихкодыУпаковок = АкцизныеМаркиЕГАИС.ШтрихкодыУпаковок(Источник, ОрганизацияЕГАИС, "НоменклатураЕГАИС");
	ШтрихкодыУпаковок.МаркированныеТовары.Индексы.Добавить("ИдентификаторСтроки");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.НомерСтроки       КАК НомерСтроки,
	|	Т.НоменклатураЕГАИС КАК АлкогольнаяПродукция,
	|	Т.Номенклатура      КАК Номенклатура
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР КОГДА СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре ТОГДА
	|		ЛОЖЬ
	|	ИНАЧЕ
	|		ЕСТЬNULL(СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый, ЛОЖЬ)
	|	КОНЕЦ КАК МаркируемаяАлкогольнаяПродукция
	|ИЗ
	|	Товары КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ СправочникНоменклатура.АлкогольнаяПродукция");
	
	Запрос.Параметры.Вставить("Товары", Товары);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТЧ = Источник.Товары[Выборка.НомерСтроки - 1 + ДополнениеКИндексу];
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ИдентификаторСтроки", СтрокаТЧ.ИдентификаторСтроки);
		КоличествоАкцизныхМарок = ШтрихкодыУпаковок.МаркированныеТовары.НайтиСтроки(ПараметрыОтбора).Количество();
		
		СтрокаТЧ.МаркируемаяПродукция = Выборка.МаркируемаяАлкогольнаяПродукция;
		СтрокаТЧ.КоличествоАкцизныхМарок = КоличествоАкцизныхМарок;
		
		АкцизныеМаркиКлиентСервер.ЗаполнитьИндексАкцизнойМарки(СтрокаТЧ, ИмяКолонкиКоличество);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПараметрыЧека(ДокументСсылка) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("НомерЧека",     "");
	ВозвращаемоеЗначение.Вставить("НомерСмены",    "");
	ВозвращаемоеЗначение.Вставить("СерийныйНомер", "");
	
	ДанныеЖурнала = ОборудованиеЧекопечатающиеУстройстваВызовСервера.ДанныеФискальнойОперации(ДокументСсылка);
	Если ДанныеЖурнала <> Неопределено Тогда
		ВозвращаемоеЗначение.НомерЧека     = ДанныеЖурнала.НомерЧекаККМ;
		ВозвращаемоеЗначение.НомерСмены    = ДанныеЖурнала.НомерСменыККМ;
		ВозвращаемоеЗначение.СерийныйНомер = ДанныеЖурнала.ЗаводскойНомерФН; // в новом регистре сведений ФискальныеОперации серийный номер ККМ хранится тут.
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#Область СерииНоменклатуры

Функция ПараметрыУказанияСерийТТНИсходящаяЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ТТНИсходящаяЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийТТНВходящаяЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ТТНВходящаяЕГАИС";
	
	Если ТипЗнч(Объект.ТорговыйОбъект) = Тип("СправочникСсылка.Склады") Тогда
		
		ПараметрыУказанияСерий.ИмяПоляСклад = "ТорговыйОбъект";
		ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.ТорговыйОбъект, Ложь);
	
		ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры
															Или ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
		Если ТипЗнч(Объект.ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПоПеремещению;
		ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийТТНВходящейЕГАИС.ВозвратОтПокупателя Тогда
			СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПоВозвратуОтКлиента;
		Иначе
			СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаОтПоставщика;
		КонецЕсли;
	
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(СкладскаяОперация);
		
	Иначе
		
		ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	
		ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = Ложь;
		ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = Ложь;
		
	КонецЕсли;
	
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийЧекЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ЧекЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийЧекЕГАИСВозврат(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ЧекЕГАИСВозврат";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийАктПостановкиНаБалансЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.АктПостановкиНаБалансЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийАктСписанияЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.АктСписанияЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийПередачаВРегистр2ЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ПередачаВРегистр2ЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийВозвратИзРегистра2ЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ВозвратИзРегистра2ЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийОстаткиЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ОстаткиЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧТовары = "ОстаткиПоДаннымЕГАИС";
	ПараметрыУказанияСерий.ИмяТЧСерии = "ОстаткиПоДаннымЕГАИС";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийУведомлениеОПланируемомИмпортеЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.УведомлениеОПланируемомИмпортеЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийОтчетОбИмпортеЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ОтчетОбИмпортеЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийОтчетОПроизводствеЕГАИС(Объект) Экспорт
	
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	
	ПараметрыТовары = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыТовары.ПолноеИмяОбъекта = "Документ.ОтчетОПроизводствеЕГАИС";
	ПараметрыТовары.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыТовары.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыТовары.ИмяТЧСерии = "Товары";
	ПараметрыТовары.ИмяПоляСклад = Неопределено;
	ПараметрыТовары.ПодготовкаОрдера               = Истина;
	
	ПараметрыТовары.ПоляСвязи.Добавить("Упаковка");
	
	ПараметрыСырье = ОбщегоНазначения.СкопироватьРекурсивно(ПараметрыТовары);
	ПараметрыСырье.ИмяТЧТовары = "Сырье";
	ПараметрыСырье.ИмяТЧСерии = "Сырье";
	
	ПараметрыУказанияСерий = Новый Структура("Товары,Сырье", ПараметрыТовары, ПараметрыСырье);
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийСопоставлениеКлассификаторовЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Обработка.СопоставлениеКлассификаторовЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.ИмяПоляКоличество = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийШтрихкодыУпаковокТоваров(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Справочник.ШтрихкодыУпаковокТоваров";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ТоварВШапке = Истина;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "";
	ПараметрыУказанияСерий.ИмяТЧТовары = "";
	ПараметрыУказанияСерий.ИмяПоляКоличество = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ПараметрыУказанияСерийСоответствиеНоменклатурыЕГАИС(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "РегистрСведений.СоответствиеНоменклатурыЕГАИС";
	ИспользоватьСерииНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
	ПараметрыУказанияСерий.ТоварВШапке = Истина;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.ИмяТЧСерии = "";
	ПараметрыУказанияСерий.ИмяТЧТовары = "";
	ПараметрыУказанияСерий.ИмяПоляКоличество = Неопределено;
	ПараметрыУказанияСерий.ИмяПоляСклад = Неопределено;
	ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта = "ЭтаФорма";
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Порядок");
	ПараметрыУказанияСерий.ПодготовкаОрдера               = Истина;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Серия,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ПустаяСсылка)
	|			ИЛИ ВидыНоменклатуры.НастройкаИспользованияСерий ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			ТОГДА 2
	|		ИНАЧЕ 21
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ТаблицаСтатусов
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	ТаблицаСтатусов КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийШтрихкодыУпаковокТоваров(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.СтатусУказанияСерий,
		|	Товары.НомерСтроки
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
		|	ВЫБОР
		|		КОГДА ВидыНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ПустаяСсылка)
		|			ИЛИ ВидыНоменклатуры.НастройкаИспользованияСерий ЕСТЬ NULL
		|			ТОГДА 0
		|		ИНАЧЕ 13
		|	КОНЕЦ КАК СтатусУказанияСерий
		|ПОМЕСТИТЬ ТаблицаСтатусов
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
		|ИЗ
		|	ТаблицаСтатусов КАК ТаблицаСтатусов
		|ГДЕ
		|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийСоответствиеНоменклатурыЕГАИС(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.СтатусУказанияСерий,
		|	Товары.НомерСтроки,
		|	Товары.Порядок
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.НомерСтроки КАК НомерСтроки,
		|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
		|	ВЫБОР
		|		КОГДА ВидыНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ПустаяСсылка)
		|			ИЛИ ВидыНоменклатуры.НастройкаИспользованияСерий ЕСТЬ NULL
		|			ТОГДА 0
		|		КОГДА Товары.Порядок = 1 И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|			ТОГДА 2
		|		КОГДА Товары.Порядок = 1
		|			ТОГДА 0
		|		ИНАЧЕ 13
		|	КОНЕЦ КАК СтатусУказанияСерий
		|ПОМЕСТИТЬ ТаблицаСтатусов
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|		ПО (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
		|ИЗ
		|	ТаблицаСтатусов КАК ТаблицаСтатусов
		|ГДЕ
		|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийТТНВходящаяЕГАИС(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.Серия,
	|	Товары.Количество КАК Количество,
	|	Товары.СтатусУказанияСерий
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL
	|			ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий = ЗНАЧЕНИЕ(Справочник.ПолитикиУчетаСерий.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|				ТОГДА ВЫБОР
	|					КОГДА Товары.Количество > 0 И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|								ТОГДА 14
	|							ИНАЧЕ 10
	|						КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|						КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|							ТОГДА 13
	|						ИНАЧЕ 9
	|					КОНЕЦ
	|				КОНЕЦ
	|			КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|				ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|						ТОГДА ВЫБОР
	|							КОГДА Товары.Количество > 0 И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 6
	|							ИНАЧЕ 5
	|						КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|						КОГДА Товары.Количество > 0 И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|							ТОГДА 8
	|						ИНАЧЕ 7
	|					КОНЕЦ
	|				КОНЕЦ
	|			КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|				И (ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеОтПоставщика
	|					И &ПриемкаОтПоставщика
	|				  ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоВозвратуОтКлиента
	|					И &ПриемкаПоВозвратуОтКлиента
	|				  ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоПеремещению
	|					И &ПриемкаПоПеремещению
	|				  ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоПрочемуОприходованию
	|					И &ПриемкаПоПрочемуОприходованию)
	|				ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|							КОГДА Товары.Количество > 0 И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 4
	|							ИНАЧЕ 3
	|						КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|						КОГДА Товары.Количество > 0 И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|							ТОГДА 2
	|						ИНАЧЕ 1
	|					КОНЕЦ
	|				КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ТаблицаСтатусов
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|		ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|			И (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	ТаблицаСтатусов КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтарыйСтатусУказанияСерий <> ТаблицаСтатусов.СтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ПроверкаИПодборВПрикладныхДокументах

Процедура ОтразитьРезультатыСканированияВДокументе(РезультатПроверки) Экспорт
	
	ПодготовитьРезультатПроверки(РезультатПроверки);
	ИнтеграцияИСМПУТ.ОтразитьРезультатыСканированияВДокументе(РезультатПроверки);
	
КонецПроцедуры

// Получает данные по алкогольной продукции из прикладного документа при открытии формы проверки
// 
// Параметры:
//  Параметры - См. Обработки.ПроверкаИПодборАлкогольнойПродукцииЕГАИС.ЗагрузитьДанныеДокументаДлительнаяОперация.Параметры
//  ДанныеДокумента - См. Обработки.ПроверкаИПодборАлкогольнойПродукцииЕГАИС.ЗагрузитьДанныеДокументаДлительнаяОперация
//
Процедура ПриЗагрузкеДанныхДокументаВФормуПроверки(Параметры, ДанныеДокумента) Экспорт
	
	ТипДокумента = ТипЗнч(Параметры.ПроверяемыйДокумент);
	ИмяТаблицыТовары = "Товары";
	ИмяТаблицыСерии = "Серии";
	ИмяТаблицыШтрихкодов = "ШтрихкодыУпаковок";

	Если ТипДокумента = Тип("ДокументСсылка.РасходныйОрдерНаТовары") Тогда
		ИмяТаблицыТовары = "ОтгружаемыеТовары";
		ИмяТаблицыСерии = "";
	КонецЕсли;
	
	Если ТипДокумента = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями")
		Или ТипДокумента = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") Тогда
		ИмяТаблицыСерии = "";
	КонецЕсли;
	
	Если ТипДокумента = Тип("ДокументСсылка.ОтборРазмещениеТоваров") Тогда
		ИмяТаблицыТовары = "ТоварыОтбор";
		ИмяТаблицыСерии = "";
	КонецЕсли;



	ДанныеПроверяемогоДокумента = ШтрихкодыУпаковокОбъекта(Параметры.ПроверяемыйДокумент, ИмяТаблицыШтрихкодов);
	Обработки.ПроверкаИПодборАлкогольнойПродукцииЕГАИС.ЗагрузитьДеревоМаркированнойПродукции(ДанныеПроверяемогоДокумента, ДанныеДокумента);
	
	ТаблицаКОпределениюСправок2 = ТаблицаКОпределениюСправок2(Параметры.ПроверяемыйДокумент, ИмяТаблицыТовары, ИмяТаблицыСерии);
	АкцизныеМаркиЕГАИС.ЗаполнитьСлужебныеРеквизитыДляПроверкиИПодбора(ТаблицаКОпределениюСправок2, Ложь);
	Для Каждого СтрокаТаблицы Из ТаблицаКОпределениюСправок2 Цикл
		НоваяСтрока = ДанныеДокумента.АлкогольнаяПродукцияКОпределениюСправок2.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		ПроверкаИПодборПродукцииЕГАИСКлиентСервер.УстановитьИндексКартинкиСостояниеПодбораАкцизныхМарок(НоваяСтрока);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ДанныеДокументаОснования

Процедура СформироватьДанныеДокументаОснования(ДокументОснование, ДокументЕГАИС, ТаблицаДанных) Экспорт
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВнутреннееПотребление") Тогда
		
		СформироватьДанныеОснованияВнутреннееПотребление(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") Тогда
		
		СформироватьДанныеОснованияВозвратаТоваровМеждуОрганизациями(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		СформироватьДанныеОснованияВозвратаТоваровПоставщику(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
		
		СформироватьДанныеОснованияВозвратТоваровОтКлиента(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		
		СформироватьДанныеОснованияЗаказПоставщику(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);	
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетОРозничныхПродажах") Тогда
		
		СформироватьДанныеОснованияОтчетаОРозничныхПродажах(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОприходованиеИзлишковТоваров") Тогда
		
		СформироватьДанныеОснованияОприходованияИзлишковТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
		
		СформироватьДанныеОснованияПередачаТоваровМеждуОрганизациями(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		СформироватьДанныеОснованияПеремещенияТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПересортицаТоваров") Тогда
		
		СформироватьДанныеОснованияПересортицаТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		СформироватьДанныеОснованияРеализацияТоваровУслуг(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		
		СформироватьДанныеОснованияСборкиТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СписаниеНедостачТоваров") Тогда
		
		СформироватьДанныеОснованияСписаниеНедостачТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных);
		
		
	КонецЕсли;
	
	ТаблицаДанных.Индексы.Добавить("Номенклатура, Характеристика");
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ОрганизацияЕГАИСПоОрганизацииИСкладу(Организация, Склад) Экспорт
	
	МассивОрганизацийЕГАИС = ОрганизацииЕГАИСПоОрганизацииИСкладу(Организация, Склад);
	
	Если МассивОрганизацийЕГАИС = Неопределено 
		Или МассивОрганизацийЕГАИС.Количество() <> 1 Тогда
		
		Возврат Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка();
		
	Иначе
		
		Возврат МассивОрганизацийЕГАИС[0];
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ОбработкаПроверкиЗаполнения

// Проверить корректность заполнения алкогольной продукции
//
// Параметры:
//  ДанныеДляЕГАИС - Массив - Данные для ЕГАИС
//  Объект - ДокументОбъект - Проверяемый объект
//  Отказ - Булево - Признак отказа
//
Процедура ПроверитьЗаполнениеЧека(Объект, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Товары", Объект.Товары.Выгрузить(,
		"НоменклатураЕГАИС, Номенклатура, Характеристика, Серия, Количество, НомерСтроки, Помещение"));
	Запрос.УстановитьПараметр("Серии", Объект.Серии.Выгрузить(,
		"Номенклатура, Характеристика, Серия, Количество, Помещение"));
	Запрос.УстановитьПараметр("АкцизныеМарки", Объект.АкцизныеМарки.Выгрузить(,
		"АкцизнаяМарка, ЧастичноеВыбытиеКоличество, ЧастичноеВыбытиеВариантУчета"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.НоменклатураЕГАИС,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.Помещение,
	|	Товары.Количество,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия,
	|	Серии.Помещение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НоменклатураЕГАИС                      КАК НоменклатураЕГАИС,
	|	Товары.Номенклатура                           КАК Номенклатура,
	|	Товары.Характеристика                         КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)           КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество) КАК Количество,
	|	Товары.НомерСтроки                            КАК НомерСтроки
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|		ПО Товары.Номенклатура = Серии.Номенклатура
	|		И Товары.Характеристика = Серии.Характеристика
	|		И Товары.Помещение = Серии.Помещение
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АкцизныеМарки.АкцизнаяМарка,
	|	АкцизныеМарки.ЧастичноеВыбытиеВариантУчета,
	|	АкцизныеМарки.ЧастичноеВыбытиеКоличество
	|ПОМЕСТИТЬ АкцизныеМарки
	|ИЗ
	|	&АкцизныеМарки КАК АкцизныеМарки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НоменклатураЕГАИС    КАК НоменклатураЕГАИС,
	|	Товары.Номенклатура         КАК Номенклатура,
	|	Товары.Характеристика       КАК Характеристика,
	|	Товары.Серия                КАК Серия,
	|	ВЫБОР
	|		КОГДА Товары.НоменклатураЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)
	|			ТОГДА РеквизитыНоменклатуры.ОбъемДАЛ
	|		КОГДА Классификатор.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|			ТОГДА -1
	|		КОГДА Классификатор.Объем = 0
	|			ТОГДА РеквизитыНоменклатуры.ОбъемДАЛ
	|		ИНАЧЕ Классификатор.Объем
	|	КОНЕЦ                       КАК Объем,
	|	СУММА(ВЫБОР
	|		КОГДА РеквизитыНоменклатуры.ВидАлкогольнойПродукции.Маркируемый
	|			ТОГДА Товары.Количество
	|		ИНАЧЕ 0 КОНЕЦ)          КАК Количество,
	|	МИНИМУМ(Товары.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ АлкогольнаяПродукция
	|ИЗ
	|	ТоварыСерии КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК РеквизитыНоменклатуры
	|		ПО Товары.Номенклатура = РеквизитыНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторАлкогольнойПродукцииЕГАИС КАК Классификатор
	|		ПО Товары.НоменклатураЕГАИС = Классификатор.Ссылка
	|ГДЕ
	|	РеквизитыНоменклатуры.АлкогольнаяПродукция
	|	И НЕ РеквизитыНоменклатуры.АлкогольнаяПродукцияВоВскрытойТаре
	|СГРУППИРОВАТЬ ПО
	|	Товары.НоменклатураЕГАИС,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	ВЫБОР
	|		КОГДА Товары.НоменклатураЕГАИС = ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)
	|			ТОГДА РеквизитыНоменклатуры.ОбъемДАЛ
	|		КОГДА Классификатор.ТипПродукции = ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
	|			ТОГДА -1
	|		КОГДА Классификатор.Объем = 0
	|			ТОГДА РеквизитыНоменклатуры.ОбъемДАЛ
	|		ИНАЧЕ Классификатор.Объем
	|	КОНЕЦ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Штрихкоды.Номенклатура   КАК Номенклатура,
	|	Штрихкоды.Характеристика КАК Характеристика,
	|	Штрихкоды.Серия          КАК Серия,
	|	СУММА(ВЫБОР
	|		КОГДА АкцизныеМарки.ЧастичноеВыбытиеВариантУчета = ЗНАЧЕНИЕ(Перечисление.ВариантыУчетаЧастичногоВыбытияИС.ПустаяСсылка)
	|		ТОГДА ЕСТЬNULL(ОписаниеНоменклатурыИС.КоличествоВПотребительскойУпаковке, 1)
	|		ИНАЧЕ АкцизныеМарки.ЧастичноеВыбытиеКоличество
	|	КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ МаркиПоТоварам
	|ИЗ
	|	АкцизныеМарки КАК АкцизныеМарки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтрихкодыУпаковокТоваров КАК Штрихкоды
	|		ПО АкцизныеМарки.АкцизнаяМарка = Штрихкоды.Ссылка
	|		И Штрихкоды.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеНоменклатурыИС
	|		ПО Штрихкоды.Номенклатура = ОписаниеНоменклатурыИС.Номенклатура
	|СГРУППИРОВАТЬ ПО
	|	Штрихкоды.Номенклатура,
	|	Штрихкоды.Характеристика,
	|	Штрихкоды.Серия
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АлкогольнаяПродукция.НомерСтроки       КАК НомерСтроки,
	|	АлкогольнаяПродукция.Номенклатура      КАК Номенклатура,
	|	АлкогольнаяПродукция.НоменклатураЕГАИС КАК НоменклатураЕГАИС,
	|	АлкогольнаяПродукция.Объем             КАК Объем,
	|	АлкогольнаяПродукция.Количество        КАК Количество,
	|	ЕСТЬNULL(МаркиПоТоварам.Количество, 0) КАК КоличествоМарок
	|ИЗ
	|	АлкогольнаяПродукция КАК АлкогольнаяПродукция
	|		ЛЕВОЕ СОЕДИНЕНИЕ МаркиПоТоварам КАК МаркиПоТоварам
	|		ПО АлкогольнаяПродукция.Номенклатура  = МаркиПоТоварам.Номенклатура
	|		И АлкогольнаяПродукция.Характеристика = МаркиПоТоварам.Характеристика
	|		И АлкогольнаяПродукция.Серия          = МаркиПоТоварам.Серия";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	БезСопоставления = ИнтеграцияЕГАИСВызовСервера.РазрешатьПродажуАлкогольнойПродукцииБезСопоставленияЕГАИС();
	
	Пока Выборка.Следующий() Цикл
		
		Если Не БезСопоставления И Не ЗначениеЗаполнено(Выборка.НоменклатураЕГАИС) Тогда
			
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru='Позиция номенклатуры %1 не сопоставлена с элементом классификатора алкогольной продукции ЕГАИС в строке %2 списка ""Товары"".'"),
					Выборка.Номенклатура,
					Выборка.НомерСтроки),
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура"),
				,
				Отказ);
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Выборка.Объем) Тогда
			
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru='Не заполнен объем для алкогольной продукции %1 в строке %2 списка ""Товары"".'"),
					Выборка.Номенклатура,
					Выборка.НомерСтроки),
				Объект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура"),
				,
				Отказ);
			
		КонецЕсли;
		
		Если Выборка.Количество <> Выборка.КоличествоМарок Тогда
			
			ТекстОшибки = НСтр("ru = 'В строке %1 для %2 должно быть указано акцизных марок - %3, а указано - %4.'");
			ТекстОшибки = СтрШаблон(ТекстОшибки,
				Выборка.НомерСтроки,
				Выборка.Номенклатура,
				Выборка.Количество,
				Выборка.КоличествоМарок);
			
			ОбщегоНазначения.СообщитьПользователю(
					ТекстОшибки,
					Объект,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "КоличествоУпаковок"),,
					Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

// Сопоставить алкогольную продукцию с номенклатурой.
//
// Параметры:
//  Объект - ДокументОбъект - Объект в котором сопоставляется номенклатура.
//
Процедура СопоставитьАлкогольнуюПродукциюСНоменклатурой(Объект) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкиДляВыгрузки = "НоменклатураЕГАИС, Номенклатура, Характеристика, Серия";
	Данные = Объект.Товары.Выгрузить(, КолонкиДляВыгрузки);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.НоменклатураЕГАИС КАК АлкогольнаяПродукция,
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	Т.Серия КАК Серия
	|ПОМЕСТИТЬ Таблица
	|ИЗ
	|	&Таблица КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Серия КАК Серия,
	|	"""" КАК ИдентификаторУпаковки,
	|	ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка) КАК Справка2,
	|	Сопоставлено.АлкогольнаяПродукция КАК Сопоставлено,
	|	МАКСИМУМ(ЕСТЬNULL(Сопоставлено.Порядок,ЕСТЬNULL(СопоставленоБЕЗСерии.Порядок,0))) КАК Порядок
	|ИЗ
	|	Таблица КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК Сопоставлено
	|		ПО Сопоставлено.Номенклатура = Таблица.Номенклатура
	|		 И Сопоставлено.Характеристика = Таблица.Характеристика
	|		 И Сопоставлено.ИдентификаторУпаковки = """"
	|		 И Сопоставлено.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|		 И Сопоставлено.Серия = Таблица.Серия
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СопоставленоБЕЗСерии
	|		ПО СопоставленоБЕЗСерии.Номенклатура = Таблица.Номенклатура
	|		 И СопоставленоБЕЗСерии.Характеристика = Таблица.Характеристика
	|		 И СопоставленоБЕЗСерии.ИдентификаторУпаковки = """"
	|		 И СопоставленоБЕЗСерии.Справка2 = ЗНАЧЕНИЕ(Справочник.Справки2ЕГАИС.ПустаяСсылка)
	|ГДЕ
	|	Таблица.АлкогольнаяПродукция <> ЗНАЧЕНИЕ(Справочник.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка)
	|	И Таблица.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И (Сопоставлено.АлкогольнаяПродукция ЕСТЬ NULL
	|		ИЛИ Сопоставлено.АлкогольнаяПродукция <> Таблица.АлкогольнаяПродукция)
	|СГРУППИРОВАТЬ ПО
	|	Таблица.АлкогольнаяПродукция,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Серия,
	|	Сопоставлено.АлкогольнаяПродукция
	|");
	
	Запрос.УстановитьПараметр("Таблица", Данные);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.СоответствиеНоменклатурыЕГАИС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Номенклатура.Установить(Выборка.Номенклатура, Истина);
		НаборЗаписей.Отбор.Характеристика.Установить(Выборка.Характеристика, Истина);
		НаборЗаписей.Отбор.Серия.Установить(Выборка.Серия, Истина);
		НаборЗаписей.Отбор.АлкогольнаяПродукция.Установить(Выборка.АлкогольнаяПродукция, Истина);
		НаборЗаписей.Отбор.ИдентификаторУпаковки.Установить(Выборка.ИдентификаторУпаковки, Истина);
		НаборЗаписей.Отбор.Справка2.Установить(Выборка.Справка2, Истина);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		
		НоваяЗапись.Номенклатура   = Выборка.Номенклатура;
		НоваяЗапись.Характеристика = Выборка.Характеристика;
		
		ПараметрыУказанияСерий = ИнтеграцияИС.ПараметрыУказанияСерийФормыОбъекта(НоваяЗапись, РегистрыСведений.СоответствиеНоменклатурыЕГАИС);
		ИнтеграцияИСПереопределяемый.ЗаполнитьСтатусыУказанияСерий(НоваяЗапись, ПараметрыУказанияСерий);
		
		НоваяЗапись.Серия                 = Выборка.Серия;
		НоваяЗапись.АлкогольнаяПродукция  = Выборка.АлкогольнаяПродукция;
		НоваяЗапись.ИдентификаторУпаковки = Выборка.ИдентификаторУпаковки;
		НоваяЗапись.Справка2              = Выборка.Справка2;
		НоваяЗапись.Порядок               = Выборка.Порядок + 1;
		
		Попытка
			НаборЗаписей.Записать();
		Исключение
			
			ТекстОшибки = НСтр("ru = 'При записи соответствия номенклатуры произошла ошибка:
			                         |%1'");
			
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(ТекстОшибки, ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке())));
			
			ОбщегоНазначенияЕГАИСВызовСервера.ЗаписатьОшибкуВЖурналРегистрации(
				СтрШаблон(ТекстОшибки, ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
			
		КонецПопытки;
		
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Заполняет информацию о сопоставлении алкогольной продукции в табличной части
//
// Параметры:
//  ТабличнаяЧастьТовары	 - ДанныеФормыСтруктура - Табличная часть документа
//  ТабличнаяЧастьСерии	 - ДанныеФормыСтруктура - Табличная часть документа
//
Процедура ЗаполнитьАлкогольнуюПродукцию(ТабличнаяЧастьТовары, ТабличнаяЧастьСерии) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.НоменклатураЕГАИС КАК НоменклатураЕГАИС,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Серия КАК Серия,
	|	Товары.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура КАК Номенклатура,
	|	Серии.Серия КАК Серия,
	|	Серии.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.НоменклатураЕГАИС КАК АлкогольнаяПродукция,
	|	Товары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия) КАК Серия,
	|	Товары.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ТоварыССериями
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
	|		ПО Товары.Номенклатура = Серии.Номенклатура
	|		И Товары.Характеристика = Серии.Характеристика
	|		И Товары.Серия = Серии.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТоварыССериями КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО (СоответствиеНоменклатурыЕГАИС.Номенклатура = ТабличнаяЧасть.Номенклатура)
	|			И (СоответствиеНоменклатурыЕГАИС.Характеристика = ТабличнаяЧасть.Характеристика)
	|			И (СоответствиеНоменклатурыЕГАИС.Серия = ТабличнаяЧасть.Серия ИЛИ СоответствиеНоменклатурыЕГАИС.Серия = &ПустаяСерия)
	|ГДЕ
	|	НЕ СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL
	|ИТОГИ ПО
	|	НомерСтроки
	|;");
	
	Запрос.УстановитьПараметр("Товары", ТабличнаяЧастьТовары.Выгрузить(,"НомерСтроки, НоменклатураЕГАИС, Номенклатура, Характеристика, Серия"));
	Запрос.УстановитьПараметр("Серии", ТабличнаяЧастьСерии.Выгрузить(,"Номенклатура, Характеристика, Серия"));
	Запрос.УстановитьПараметр("ПустаяСерия", ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	ВыборкаСтроки = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСтроки.Следующий() Цикл
		
		СтрокаТЧ = ТабличнаяЧастьТовары.Получить(ВыборкаСтроки.НомерСтроки - 1);
		
		ВыборкаАлкогольнаяПродукция = ВыборкаСтроки.Выбрать();
		КоличествоСопоставлено = ВыборкаАлкогольнаяПродукция.Количество();
		Если КоличествоСопоставлено > 1 Тогда
			СтрокаТЧ.СопоставлениеАлкогольнаяПродукция = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), КоличествоСопоставлено);
		ИначеЕсли КоличествоСопоставлено = 1 Тогда
			СтрокаТЧ.СопоставлениеАлкогольнаяПродукция = "";
		Иначе
			СтрокаТЧ.СопоставлениеАлкогольнаяПродукция = НСтр("ru = '<Не сопоставлено>'");
		КонецЕсли;
		Пока ВыборкаАлкогольнаяПродукция.Следующий() Цикл
			СтрокаТЧ.НоменклатураДляВыбора.Добавить(ВыборкаАлкогольнаяПродукция.АлкогольнаяПродукция);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

//Функция возвращает настройки по умолчанию для формирования запроса обработчика заполнения по шаблону
//
//Возвращаемое значение:
//   Структура - настройки:
//   * ТабличнаяЧасть    - Строка - табличная часть документа-основания (источник товаров), из предопределенного
//     списка ("ТоварыСерии" (по умолчанию), "Товары", "Шапка").
//   * Отбор             - Строка - дополнительное условие отбора по документу-основанию. 
//   * Пересчитывать     - Булево - необходимость пересчета с единиц ЕГАИС (для входящей ТТН)
//   * Организация       - Строка - имя поля "Организация" в шапке документа-основания. По умолчанию "Организация".
//   * Товары            - Строка - имя табличной части "Товары" в документе-основании. По умолчанию "Товары".
//   * Серии             - Строка - имя табличной части "Серии" в документе-основании. По умолчанию "Серии".
//   * ШтрихкодыУпаковок - Строка - имя табличной части "Штрихкоды упаковок" в документе-основании. Если не заполнено,
//     заполнение акцизных марок в документе ЕГАИС не производится (по умолчанию).
Функция НастройкиФормированияЗапросаЗаполнения(ТабличнаяЧасть = "ТоварыСерии", ШтрихкодыУпаковок = "")
	
	Результат = Новый Структура;
	Результат.Вставить("ТабличнаяЧасть"    , ТабличнаяЧасть);
	Результат.Вставить("Отбор"             , "");
	Результат.Вставить("Пересчитывать"     , Ложь);
	Результат.Вставить("Организация"       , "Организация");
	Результат.Вставить("Товары"            , "Товары");
	Результат.Вставить("Серии"             , "Серии");
	Результат.Вставить("ШтрихкодыУпаковок" , ШтрихкодыУпаковок);
	Возврат Результат;
	
КонецФункции

//Функция возвращает текст запроса обработчика заполнения по шаблону.
//
//Параметры:
//   ИменаДокументов       - Строка, Массив Из Строка - имена документов которые могут быть введены по документу-основанию.
//   ИмяДокументаОснования - Строка - имя документа-основания.
//   Настройки             - Структура, Неопределено - (см. НастройкиФормированияЗапросаЗаполнения).
//
//Возвращаемое значение:
//   Строка - текст запроса статуса оформления, где
//     первый запрос пакета - данные для заполнения шапки документа ЕГАИС.
//     последний (третий с конца, если отмечаются штрихкоды упаковок) запрос пакета - данные заполнения товарной части 
//    документа ЕГАИС.
//     последний (если отмечаются штрихкоды упаковок) запрос пакета - штрихкоды упаковок к переносу.
Функция ТекстЗапросаЗаполнения(ИменаДокументов, ИмяДокументаОснования, Настройки = Неопределено)
	
	Если Настройки = Неопределено Тогда
		Настройки = НастройкиФормированияЗапросаЗаполнения();
	КонецЕсли;
	
	Если ТипЗнч(ИменаДокументов) = Тип("Строка")Тогда
		ИменаДокументов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаДокументов);
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	
	// Шапка
	Шаблон = ШаблонШапка(Настройки.Организация);
	МассивСтрок.Добавить(СтрШаблон(Шаблон,ИмяДокументаОснования));
	
	//Оформленные документы
	Шаблон = ШаблонОформленныеДокументы(Истина);
	Для Каждого ИмяДокумента Из ИменаДокументов Цикл
		МассивСтрок.Добавить(СтрШаблон(Шаблон,ИмяДокумента));
	КонецЦикла;
	
	// ТЧ прикладного документа
	Шаблон = ШаблонТоварыПрикладногоДокумента(Настройки.ТабличнаяЧасть, Настройки.Товары, Настройки.Серии);
	МассивСтрок.Добавить(СтрШаблон(Шаблон,ИмяДокументаОснования,Настройки.Отбор));
	
	// ТЧ оформленных документов
	Шаблон = ШаблонОформленныеТовары(Настройки.Пересчитывать);
	Для Каждого ИмяДокумента Из ИменаДокументов Цикл
		МассивСтрок.Добавить(СтрШаблон(Шаблон,ИмяДокумента));
	КонецЦикла;
	
	// Сопоставленная алкогольная продукция
	Шаблон = ШаблонСопоставление();
	МассивСтрок.Добавить(Шаблон);
	
	// Итоговый остаток к оформлению
	Шаблон = ШаблонОстатокПланФакт();
	МассивСтрок.Добавить(Шаблон);
	
	// Явно указанные коды маркировки
	Если Настройки.ШтрихкодыУпаковок <> "" Тогда
		Шаблон = ШаблонКодыМаркировки(ИменаДокументов,ИмяДокументаОснования,);
		МассивСтрок.Добавить(Шаблон);
	КонецЕсли;
	
	Возврат СтрСоединить(МассивСтрок);
	
КонецФункции

//Функция возвращает текст запроса обработчика заполнения по шаблону.
//
//Параметры:
//   ИменаДокументов       - Строка, Массив Из Строка - имена документов которые могут быть введены по документу-основанию.
//   ИмяДокументаОснования - Строка - имя документа-основания.
//   ШаблонОснования       - Строка - текст запроса получения маркированных товаров из документа-основания с учетом ордеров
//   Настройки             - Структура, Неопределено - (см. НастройкиФормированияЗапросаЗаполнения).
//
//Возвращаемое значение:
//   Строка - текст запроса статуса оформления, где
//     первый запрос пакета - данные для заполнения шапки документа ЕГАИС.
//     последний (третий с конца, если отмечаются штрихкоды упаковок) запрос пакета - данные заполнения товарной части 
//    документа ЕГАИС.
//     последний (если отмечаются штрихкоды упаковок) запрос пакета - штрихкоды упаковок к переносу.
Функция ТекстЗапросаЗаполненияПоШаблонуОснования(ИменаДокументов, ИмяДокументаОснования, ШаблонОснования, Настройки = Неопределено)
	
	Если Настройки = Неопределено Тогда
		Настройки = НастройкиФормированияЗапросаЗаполнения();
	КонецЕсли;
	
	Если ТипЗнч(ИменаДокументов) = Тип("Строка")Тогда
		ИменаДокументов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаДокументов);
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	
	// Шапка
	Шаблон = ШаблонШапка(Настройки.Организация);
	МассивСтрок.Добавить(СтрШаблон(Шаблон,ИмяДокументаОснования));
	
	// Оформленные документы
	Шаблон = ШаблонОформленныеДокументы(Истина);
	Для Каждого ИмяДокумента Из ИменаДокументов Цикл
		МассивСтрок.Добавить(СтрШаблон(Шаблон,ИмяДокумента));
	КонецЦикла;
	
	// ТЧ прикладного документа
	МассивСтрок.Добавить(ШаблонОснования);
	Шаблон = ШаблонТоварыПрикладногоДокумента("ВременнаяТаблица", "", "");
	МассивСтрок.Добавить(СтрШаблон(Шаблон,ИмяДокументаОснования,Настройки.Отбор));
	
	// ТЧ оформленных документов
	Шаблон = ШаблонОформленныеТовары(Настройки.Пересчитывать);
	Для Каждого ИмяДокумента Из ИменаДокументов Цикл
		МассивСтрок.Добавить(СтрШаблон(Шаблон,ИмяДокумента));
	КонецЦикла;
	
	// Сопоставленная алкогольная продукция
	Шаблон = ШаблонСопоставление();
	МассивСтрок.Добавить(Шаблон);
	
	// Итоговый остаток к оформлению
	Шаблон = ШаблонОстатокПланФакт();
	МассивСтрок.Добавить(Шаблон);
	
	// Явно указанные коды маркировки
	Если Настройки.ШтрихкодыУпаковок <> "" Тогда
		Шаблон = ШаблонКодыМаркировки(ИменаДокументов,ИмяДокументаОснования,);
		МассивСтрок.Добавить(Шаблон);
	КонецЕсли;
	
	Возврат СтрСоединить(МассивСтрок);
	
КонецФункции

// Заполнить товары акцизные марки.
// 
// Параметры:
//  ДокументОбъект - ДокументОбъект.АктСписанияЕГАИС, ДокументОбъект.ЧекЕГАИС, ДокументОбъект.ТТНИсходящаяЕГАИС - заполняемый документ
//  ШтрихкодыУпаковок - РезультатЗапроса - Штрихкоды упаковок
//  ИмяТаблицыШтрихкодов - Строка - Имя таблицы штрихкодов
//  ПересчитатьСумму - Булево - Пересчитать сумму
//  ИмяТаблицыТоваров - Строка - Имя таблицы товаров
Процедура ЗаполнитьТоварыАкцизныеМарки(ДокументОбъект, ШтрихкодыУпаковок,
		ИмяТаблицыШтрихкодов = "ШтрихкодыУпаковок", ПересчитатьСумму = Ложь, ИмяТаблицыТоваров = "Товары")
	
	Если ШтрихкодыУпаковок.Пустой() Тогда
		Возврат;
	КонецЕсли;
	ШтрихкодыУпаковок = ШтрихкодыУпаковок.Выгрузить().ВыгрузитьКолонку("ШтрихкодУпаковки");
	ШтрихкодыУпаковок = ИнтеграцияИСУТ.ШтрихкодыСодержащиеВидыПродукции(ШтрихкодыУпаковок, Перечисления.ВидыПродукцииИС.Алкогольная);
	// 1. Получить дерево упаковок
	ШтрихкодыДеревом = ШтрихкодыУпаковокОбъекта(ДокументОбъект.ДокументОснование, ИмяТаблицыШтрихкодов);
	ВложенныеШтрихкоды = ВложенныеШтрихкодыПоДереву(ШтрихкодыДеревом.Строки);
	// 2. Получить справки2 (считаем что ввод на основании прошел со своими объектами)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("АкцизнаяМарка", ВложенныеШтрихкоды);
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ТТНИсходящаяЕГАИС") Тогда
		Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ДокументОбъект.Грузоотправитель);
	Иначе 
		Запрос.УстановитьПараметр("ОрганизацияЕГАИС", ДокументОбъект.ОрганизацияЕГАИС);
	КонецЕсли;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АкцизныеМаркиЕГАИС.Справка2 КАК Справка2,
	|	АкцизныеМаркиЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	АкцизныеМаркиЕГАИС.АкцизнаяМарка КАК АкцизнаяМарка
	|ИЗ
	|	РегистрСведений.АкцизныеМаркиЕГАИС КАК АкцизныеМаркиЕГАИС
	|ГДЕ
	|	АкцизныеМаркиЕГАИС.ОрганизацияЕГАИС = &ОрганизацияЕГАИС
	|	И АкцизныеМаркиЕГАИС.АкцизнаяМарка В (&АкцизнаяМарка)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Поиск = Новый Структура("Номенклатура, Характеристика, Серия");
	
	Пока Выборка.Следующий() Цикл
		СтрокаДерева = ШтрихкодыДеревом.Строки.Найти(Выборка.АкцизнаяМарка, "ШтрихкодУпаковки", Истина);
		СтрокаСоСправкой2 = ДокументОбъект[ИмяТаблицыТоваров].Найти(Выборка.Справка2, "Справка2");
		ЗаполнитьЗначенияСвойств(Поиск, СтрокаДерева);
		Поиск.Вставить("Справка2", Справочники.Справки2ЕГАИС.ПустаяСсылка());
		СтрокиДокумента = ДокументОбъект[ИмяТаблицыТоваров].НайтиСтроки(Поиск);
		Если СтрокиДокумента.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		СтрокаБезСправки2 = СтрокиДокумента[0];
		
		Если ПересчитатьСумму Тогда
			ЦенаЕдиницы = СтрокаБезСправки2.Сумма / СтрокаБезСправки2.Количество;
		КонецЕсли;
		ПоляИсключения = "Справка2,Количество,КоличествоУпаковок";
		Если ПересчитатьСумму Тогда
			ПоляИсключения = ПоляИсключения + ",Сумма";
		КонецЕсли;
		
		Если СтрокаСоСправкой2 = Неопределено Тогда
			СтрокаСоСправкой2 = ДокументОбъект[ИмяТаблицыТоваров].Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСоСправкой2, СтрокаБезСправки2,,ПоляИсключения);
			ЗаполнитьЗначенияСвойств(СтрокаСоСправкой2, Выборка);
			СтрокаСоСправкой2.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		КонецЕсли;
		
		Количество = СтрокаДерева.Коэффициент;
		Если Количество = 0 Тогда
			Количество = 1;
		КонецЕсли;
		
		СтрокаСоСправкой2.Количество = СтрокаСоСправкой2.Количество + Количество;
		СтрокаСоСправкой2.КоличествоУпаковок = СтрокаСоСправкой2.Количество;
		СтрокаБезСправки2.Количество = СтрокаБезСправки2.Количество - Количество;
		СтрокаБезСправки2.КоличествоУпаковок = СтрокаБезСправки2.Количество;
		Если ПересчитатьСумму Тогда
			СтрокаСоСправкой2.Сумма = СтрокаСоСправкой2.Сумма + Количество * ЦенаЕдиницы;
			СтрокаБезСправки2.Сумма = СтрокаБезСправки2.Сумма - Количество * ЦенаЕдиницы;
		КонецЕсли;
		НоваяСтрокаАкцизныеМарки = ДокументОбъект.АкцизныеМарки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаАкцизныеМарки, Выборка);
		НоваяСтрокаАкцизныеМарки.Количество = Количество;
		
		Если СтрокаБезСправки2.Количество = 0 Тогда
			ДокументОбъект[ИмяТаблицыТоваров].Удалить(СтрокаБезСправки2);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыСправки2(ДокументОбъект, ТоварыСправки2)
	
	Если ТоварыСправки2 = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТоварыСправки2.Свернуть("Номенклатура,Характеристика,Серия,Справка2", "Количество");
	Поиск = Новый Структура("Номенклатура, Характеристика, Серия");
	
	Для Каждого СтрокаРаспределения Из ТоварыСправки2 Цикл
		СтрокаСоСправкой2 = ДокументОбъект.Товары.Найти(СтрокаРаспределения.Справка2, "Справка2");
		ЗаполнитьЗначенияСвойств(Поиск, СтрокаРаспределения);
		Поиск.Вставить("Справка2", Справочники.Справки2ЕГАИС.ПустаяСсылка());
		СтрокиДокумента = ДокументОбъект.Товары.НайтиСтроки(Поиск);
		Если СтрокиДокумента.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		СтрокаБезСправки2 = СтрокиДокумента[0];
		
		ЦенаЕдиницы = СтрокаБезСправки2.Сумма / СтрокаБезСправки2.Количество;
		ПоляИсключения = "Справка2,Количество,КоличествоУпаковок,Сумма";
		
		Если СтрокаСоСправкой2 = Неопределено Тогда
			СтрокаСоСправкой2 = ДокументОбъект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаСоСправкой2, СтрокаБезСправки2,,ПоляИсключения);
			ЗаполнитьЗначенияСвойств(СтрокаСоСправкой2, СтрокаРаспределения);
			СтрокаСоСправкой2.ИдентификаторСтроки = Новый УникальныйИдентификатор;
			Количество = СтрокаРаспределения.Количество;
		Иначе
			Количество = СтрокаРаспределения.Количество - СтрокаСоСправкой2.Количество;
		КонецЕсли;
		
		Если Количество <= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаСоСправкой2.Количество = СтрокаСоСправкой2.Количество + Количество;
		СтрокаСоСправкой2.КоличествоУпаковок = СтрокаСоСправкой2.Количество;
		СтрокаБезСправки2.Количество = СтрокаБезСправки2.Количество - Количество;
		СтрокаБезСправки2.КоличествоУпаковок = СтрокаБезСправки2.Количество;
		СтрокаСоСправкой2.Сумма = СтрокаСоСправкой2.Сумма + Количество * ЦенаЕдиницы;
		СтрокаБезСправки2.Сумма = СтрокаБезСправки2.Сумма - Количество * ЦенаЕдиницы;
		
		Если СтрокаБезСправки2.Количество = 0 Тогда
			ДокументОбъект.Товары.Удалить(СтрокаБезСправки2);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ВложенныеШтрихкодыПоДереву(КоллекцияСтрокДерева)
	
	Результат = Новый Массив;
	Для Каждого СтрокаДерева Из КоллекцияСтрокДерева Цикл
		Если СтрокаДерева.Строки.Количество() Тогда
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат, ВложенныеШтрихкодыПоДереву(СтрокаДерева.Строки));
		Иначе
			Результат.Добавить(СтрокаДерева.ШтрихкодУпаковки);
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

#Область АктПостановкиНаБалансЕГАИС

Процедура ЗаполнитьАктПостановкиНаБалансНаОснованииОприходованияИзлишковТовара(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос;
	Настройки = НастройкиФормированияЗапросаЗаполнения("Товары");
	Запрос.Текст = ТекстЗапросаЗаполнения("АктПостановкиНаБалансЕГАИС", "ОприходованиеИзлишковТоваров", Настройки);
	
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусыАктПостановкиНаБалансЕГАИС", Документы.АктПостановкиНаБалансЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия", ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыШапки = РезультатЗапроса[0].Выбрать();
	РеквизитыШапки.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыШапки.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыШапки.ДокументОснование, ПараметрыПроверки);
			
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыШапки);
		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыШапки.Организация, РеквизитыШапки.Склад);
		ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр1;
		
		ДокументОбъект.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Излишки;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.Количество() - 1], ДанныеЗаполнения, Истина)
	
КонецПроцедуры

Процедура ЗаполнитьАктПостановкиНаБалансНаОснованииОрдераНаОтражениеИзлишковТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос;
	Настройки = НастройкиФормированияЗапросаЗаполнения();
	Настройки.ТабличнаяЧасть = "Товары";
	Настройки.Организация = "";
	Запрос.Текст = ТекстЗапросаЗаполнения("АктПостановкиНаБалансЕГАИС", "ОрдерНаОтражениеИзлишковТоваров", Настройки);
	
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусыАктПостановкиНаБалансЕГАИС", Документы.АктПостановкиНаБалансЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия", ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыШапки = РезультатЗапроса[0].Выбрать();
	РеквизитыШапки.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыШапки.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыШапки.ДокументОснование, ПараметрыПроверки);
			
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыШапки);
		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоСкладу(РеквизитыШапки.Склад);
		ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр1;
		ДокументОбъект.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Излишки;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.Количество() - 1], ДанныеЗаполнения, Истина)
	
КонецПроцедуры

Процедура ЗаполнитьАктПостановкиНаБалансНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	Настройки = НастройкиФормированияЗапросаЗаполнения("Товары");
	Запрос.Текст = ТекстЗапросаЗаполнения("АктПостановкиНаБалансЕГАИС", "ПересортицаТоваров", Настройки)
	+"
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 2
	|	АктСписанияЕГАИС.Ссылка КАК АктСписанияЕГАИС
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК АктСписанияЕГАИС
	|ГДЕ
	|	АктСписанияЕГАИС.ДокументОснование = &ДокументОснование
	|	И АктСписанияЕГАИС.ПричинаСписания = ЗНАЧЕНИЕ(Перечисление.ПричиныСписанийЕГАИС.Пересортица)
	|";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТабличнаяЧасть.Номенклатура"  , "ТабличнаяЧасть.НоменклатураОприходование");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТабличнаяЧасть.Характеристика", "ТабличнаяЧасть.ХарактеристикаОприходование");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТабличнаяЧасть.Серия"         , "ТабличнаяЧасть.СерияОприходование");
	
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусыАктПостановкиНаБалансЕГАИС", Документы.АктПостановкиНаБалансЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия", ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыШапки = РезультатЗапроса[0].Выбрать();
	РеквизитыШапки.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыШапки.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыШапки.ДокументОснование, ПараметрыПроверки);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыШапки);
		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыШапки.Организация, РеквизитыШапки.Склад);
		Если РеквизитыШапки.ТипСклада = Перечисления.ТипыСкладов.РозничныйМагазин Тогда
			ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр2;
		Иначе
			ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр1;
		КонецЕсли;
		
		ДокументОбъект.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Пересортица;
		ВыборкаАктыСписания = РезультатЗапроса[РезультатЗапроса.Количество() - 1].Выбрать();
		Если ВыборкаАктыСписания.Количество() = 1 Тогда
			ВыборкаАктыСписания.Следующий();
			ДокументОбъект.АктСписанияЕГАИС = ВыборкаАктыСписания.АктСписанияЕГАИС;
		КонецЕсли;
			
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.Количество() - 2], ДанныеЗаполнения, Истина)
	
КонецПроцедуры

Процедура ЗаполнитьАктПостановкиНаБалансНаОснованииОрдераНаОтражениеПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	Настройки = НастройкиФормированияЗапросаЗаполнения();
	Настройки.Организация = "";
	Настройки.ТабличнаяЧасть = "Товары";
	Запрос.Текст = ТекстЗапросаЗаполнения("АктПостановкиНаБалансЕГАИС", "ОрдерНаОтражениеПересортицыТоваров", Настройки)
	+"
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 2
	|	АктСписанияЕГАИС.Ссылка КАК АктСписанияЕГАИС
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК АктСписанияЕГАИС
	|ГДЕ
	|	АктСписанияЕГАИС.ДокументОснование = &ДокументОснование
	|	И АктСписанияЕГАИС.ПричинаСписания = ЗНАЧЕНИЕ(Перечисление.ПричиныСписанийЕГАИС.Пересортица)
	|";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТабличнаяЧасть.Номенклатура"  , "ТабличнаяЧасть.НоменклатураОприходование");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТабличнаяЧасть.Характеристика", "ТабличнаяЧасть.ХарактеристикаОприходование");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТабличнаяЧасть.Серия"         , "ТабличнаяЧасть.СерияОприходование");
	
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусыАктПостановкиНаБалансЕГАИС", Документы.АктПостановкиНаБалансЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия", ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыШапки = РезультатЗапроса[0].Выбрать();
	РеквизитыШапки.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыШапки.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыШапки.ДокументОснование, ПараметрыПроверки);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыШапки);
		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоСкладу(РеквизитыШапки.Склад);
		Если РеквизитыШапки.ТипСклада = Перечисления.ТипыСкладов.РозничныйМагазин Тогда
			ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр2;
		Иначе
			ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр1;
		КонецЕсли;
		
		ДокументОбъект.ПричинаПостановкиНаБаланс = Перечисления.ПричиныПостановкиНаБалансЕГАИС.Пересортица;
		ВыборкаАктыСписания = РезультатЗапроса[РезультатЗапроса.Количество() - 1].Выбрать();
		Если ВыборкаАктыСписания.Количество() = 1 Тогда
			ВыборкаАктыСписания.Следующий();
			ДокументОбъект.АктСписанияЕГАИС = ВыборкаАктыСписания.АктСписанияЕГАИС;
		КонецЕсли;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.Количество() - 2], ДанныеЗаполнения, Истина)
	
КонецПроцедуры

Процедура ЗаполнитьАктПостановкиНаБалансНаОснованииСтруктурыЗаполнения(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ДокументОбъект.ОрганизацияЕГАИС = ДанныеЗаполнения.ОрганизацияЕГАИС;
	ДокументОбъект.ВидДокумента     = Перечисления.ВидыДокументовЕГАИС.АктПостановкиНаБалансВРегистр3;
	
	ТаблицаТовары = Новый ТаблицаЗначений;
	ТаблицаТовары.Колонки.Добавить("АлкогольнаяПродукция", Новый ОписаниеТипов("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС"));
	ТаблицаТовары.Колонки.Добавить("Справка2",             Новый ОписаниеТипов("СправочникСсылка.Справки2ЕГАИС"));
	
	Для Каждого ДанныеАкцизнойМарки Из ДанныеЗаполнения.АкцизныеМарки Цикл
		
		НоваяСтрока = ДокументОбъект.АкцизныеМарки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеАкцизнойМарки);
		НоваяСтрока.Количество = 1;
		
		НоваяСтрокаТовары = ТаблицаТовары.Добавить();
		НоваяСтрокаТовары.АлкогольнаяПродукция = ДанныеАкцизнойМарки.АлкогольнаяПродукция;
		НоваяСтрокаТовары.Справка2             = ДанныеАкцизнойМарки.Справка2;
		
	КонецЦикла;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Т.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	Т.Справка2 КАК Справка2
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	&Товары КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.АлкогольнаяПродукция,
	|	Т.Справка2 КАК Справка2,
	|	СУММА(1) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	втТовары КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.АлкогольнаяПродукция,
	|	Т.Справка2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2 КАК Справка2,
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Номенклатура) КАК Номенклатура,
	|	МАКСИМУМ(СоответствиеНоменклатурыЕГАИС.Характеристика) КАК Характеристика
	|ПОМЕСТИТЬ СопоставленныеПозиции
	|ИЗ
	|	Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция = ТабличнаяЧасть.АлкогольнаяПродукция
	|			И СоответствиеНоменклатурыЕГАИС.Справка2 = ТабличнаяЧасть.Справка2
	|ГДЕ
	|	Не СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция ЕСТЬ NULL
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Номенклатура) = 1
	|		И КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СоответствиеНоменклатурыЕГАИС.Характеристика) < 2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СопоставленныеПозиции.Номенклатура   КАК Номенклатура,
	|	СопоставленныеПозиции.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ТабличнаяЧасть.Справка2             КАК Справка2,
	|	ТабличнаяЧасть.Количество           КАК Количество,
	|	ТабличнаяЧасть.Количество           КАК КоличествоУпаковок
	|ИЗ
	|	Товары КАК ТабличнаяЧасть
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО ТабличнаяЧасть.АлкогольнаяПродукция = СопоставленныеПозиции.АлкогольнаяПродукция
	|			И ТабличнаяЧасть.Справка2 = СопоставленныеПозиции.Справка2
	|			И НЕ СопоставленныеПозиции.АлкогольнаяПродукция ЕСТЬ NULL
	|");
	Запрос.УстановитьПараметр("Товары", ТаблицаТовары);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ДокументОбъект.Товары.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область АктСписанияЕГАИС

Процедура ЗаполнитьАктСписанияЕГАИСНаОснованииВнутреннегоПотребленияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ВозможныеДокументыЕГАИС = "АктСписанияЕГАИС,ЧекЕГАИС";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияПоШаблонуОснования(ВозможныеДокументыЕГАИС, "ВнутреннееПотребление",
		ИнтеграцияИСУТ.ТекстЗапросаВнутреннееПотребление(),
		НастройкиФормированияЗапросаЗаполнения(, "ШтрихкодыУпаковок"));
	
	ОсобенностьУчета = ОсобенностиУчетаЕГАИС();
	
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Документ",          ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ОсобенностьУчета",  ОсобенностьУчета);
	Запрос.УстановитьПараметр("КонечныеСтатусыАктСписанияЕГАИС", Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("КонечныеСтатусыЧекЕГАИС",         Документы.ЧекЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия", ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыДокумента.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыДокумента.ДокументОснование, ПараметрыПроверки);
			
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
		ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
		
		ДокументОбъект.ПричинаСписания = Неопределено;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	Товары = РезультатЗапроса[РезультатЗапроса.Количество() - 3];
	АкцизныеМарки = РезультатЗапроса[РезультатЗапроса.Количество() - 1];
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Товары, ДанныеЗаполнения, Истина);
	ЗаполнитьТоварыАкцизныеМарки(ДокументОбъект, АкцизныеМарки,,Истина);
	
КонецПроцедуры

Процедура ЗаполнитьАктСписанияЕГАИСНаОснованииСписанияНедостачТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос;
	Настройки = НастройкиФормированияЗапросаЗаполнения("Товары");
	Запрос.Текст = ТекстЗапросаЗаполнения("АктСписанияЕГАИС", "СписаниеНедостачТоваров", Настройки);
	
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусыАктСписанияЕГАИС", Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия", ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыДокумента.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыДокумента.ДокументОснование, ПараметрыПроверки);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
		ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
		
		ДокументОбъект.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Недостача;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.Количество() - 1], ДанныеЗаполнения, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьАктСписанияЕГАИСНаОснованииПересортицыТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос;
	Настройки = НастройкиФормированияЗапросаЗаполнения("Товары");
	Запрос.Текст = ТекстЗапросаЗаполнения("АктСписанияЕГАИС", "ПересортицаТоваров", Настройки);
	
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусыАктСписанияЕГАИС", Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия", ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыДокумента.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыДокумента.ДокументОснование, ПараметрыПроверки);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
		ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
		
		ДокументОбъект.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Пересортица;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.Количество() - 1], ДанныеЗаполнения, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьАктСписанияЕГАИСНаОснованииОтчетаОРозничныхПродажах(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка          КАК ДокументОснование,
	|	Таблица.Дата            КАК Дата,
	|	НЕ Таблица.Проведен     КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад           КАК Склад,
	|	Таблица.Склад.ТипСклада КАК ТипСклада,
	|	Таблица.Организация     КАК Организация,
	|	Таблица.Валюта          КАК Валюта,
	|	Таблица.Ответственный   КАК Ответственный
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	РезультатЗапроса = Запрос.Выполнить();
	
	РеквизитыДокумента = РезультатЗапроса.Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыДокумента.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыДокумента.ДокументОснование, ПараметрыПроверки);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
		ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
		
		ДокументОбъект.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Реализация;
		
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(СтрШаблон(ШаблонКурсыВалют(),"ВалютаОснования"));
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина),"АктСписанияЕГАИС"));
	МассивСтрок.Добавить("ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаСерии.Ссылка ЕСТЬ NULL
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ
	|			ТаблицаСерии.Серия
	|	КОНЕЦ                                      КАК Серия,
	|	СУММА(ВЫБОР
	|		КОГДА ТаблицаСерии.Количество ЕСТЬ NULL
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ
	|			ТаблицаСерии.Количество
	|	КОНЕЦ)                                     КАК Количество,
	|	ВЫРАЗИТЬ(СУММА(ВЫБОР
	|		КОГДА ТаблицаСерии.Ссылка ЕСТЬ NULL
	|			ТОГДА ВЫБОР
	|				КОГДА Шапка.ЦенаВключаетНДС ТОГДА ТаблицаТовары.Сумма
	|				ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
	|			КОНЕЦ
	|		КОГДА ТаблицаТовары.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ТаблицаСерии.Количество * ВЫБОР 
	|				КОГДА Шапка.ЦенаВключаетНДС ТОГДА ТаблицаТовары.Сумма
	|				ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
	|			КОНЕЦ / ТаблицаТовары.Количество
	|	КОНЕЦ * ВЫБОР
	|		КОГДА &ВалютаОснования = &ВалютаРеглУчета
	|			ТОГДА 1
	|		ИНАЧЕ
	|			ЕСТЬNULL(КурсВалютыОснования.КурсЧислитель, 1) * ЕСТЬNULL(КурсВалютыРегл.КурсЗнаменатель, 1)
	|		    / (ЕСТЬNULL(КурсВалютыРегл.КурсЧислитель, 1) * ЕСТЬNULL(КурсВалютыОснования.КурсЗнаменатель, 1))
	|	КОНЕЦ) КАК ЧИСЛО(31,2))                   КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК Шапка
	|		ПО ТаблицаТовары.Ссылка = Шапка.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Серии КАК ТаблицаСерии
	|		ПО ТаблицаТовары.Ссылка = ТаблицаСерии.Ссылка
	|			И ТаблицаТовары.Номенклатура = ТаблицаСерии.Номенклатура
	|			И ТаблицаТовары.Характеристика = ТаблицаСерии.Характеристика
	|			И &УсловиеПоПомещению
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО КурсВалютыОснования.Валюта = &ВалютаОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО КурсВалютыРегл.Валюта = &ВалютаРеглУчета
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И Не СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И Не СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаСерии.Ссылка ЕСТЬ NULL
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ
	|			ТаблицаСерии.Серия
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура       КАК Номенклатура,
	|	ОформленныеТовары.Характеристика     КАК Характеристика,
	|	ОформленныеТовары.Серия              КАК Серия,
	|	-СУММА(ОформленныеТовары.Количество) КАК Количество,
	|	-СУММА(ОформленныеТовары.Сумма)      КАК Сумма
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыАктСписанияЕГАИС КАК Т)
	|СГРУППИРОВАТЬ ПО
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия");
	МассивСтрок.Добавить(ШаблонСопоставление());
	МассивСтрок.Добавить(ШаблонОстатокКоличествоСумма());
	Запрос.Текст = СтрСоединить(МассивСтрок);
	
	Если СкладыСервер.ИспользоватьСкладскиеПомещения(РеквизитыДокумента.Склад, РеквизитыДокумента.Дата) Тогда
		УсловиеПоПомещению = "ТаблицаТовары.Помещение = ТаблицаСерии.Помещение";
	Иначе
		УсловиеПоПомещению = "ИСТИНА";
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоПомещению", УсловиеПоПомещению);
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(РеквизитыДокумента.Организация));
	Запрос.УстановитьПараметр("ДатаОснования",                   РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("ВалютаОснования",                 РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ЭтаСсылка",                       ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",               ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусыАктСписанияЕГАИС", Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",                     ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса, ДанныеЗаполнения, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьАктСписанияЕГАИСНаОснованииСборкиТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Настройки = НастройкиФормированияЗапросаЗаполнения(, "ШтрихкодыУпаковок");
	
	ТекстЗапроса = ИнтеграцияИСУТ.ТекстЗапросаСборкаТоваров();
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)",
		"ТаблицаТовары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров) И ЛОЖЬ");
	
	ВозможныеДокументыЕГАИС = "АктСписанияЕГАИС,ЧекЕГАИС";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияПоШаблонуОснования(ВозможныеДокументыЕГАИС, "СборкаТоваров", ТекстЗапроса, Настройки);
	
	ОсобенностьУчета = ОсобенностиУчетаЕГАИС();
	
	Запрос.УстановитьПараметр("ЭтаСсылка",                       ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",               ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Документ",                        ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ОсобенностьУчета",                ОсобенностьУчета);
	Запрос.УстановитьПараметр("КонечныеСтатусыАктСписанияЕГАИС", Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("КонечныеСтатусыЧекЕГАИС",         Документы.ЧекЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",                     ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыДокумента.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыДокумента.ДокументОснование, ПараметрыПроверки);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
		ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
		
		ДокументОбъект.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Реализация;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	Товары = РезультатЗапроса[РезультатЗапроса.Количество() - 3];
	АкцизныеМарки = РезультатЗапроса[РезультатЗапроса.Количество() - 1];
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Товары, ДанныеЗаполнения, Истина);
	ЗаполнитьТоварыАкцизныеМарки(ДокументОбъект, АкцизныеМарки,,Истина);
		
КонецПроцедуры

Процедура ЗаполнитьАктСписанияЕГАИСНаОснованииРеализацииТоваровУслуг(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка          КАК ДокументОснование,
	|	Таблица.Дата            КАК Дата,
	|	НЕ Таблица.Проведен     КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад           КАК Склад,
	|	Таблица.Склад.ТипСклада КАК ТипСклада,
	|	Таблица.Организация     КАК Организация,
	|	Таблица.Валюта          КАК Валюта,
	|	Таблица.Менеджер        КАК Ответственный
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	РезультатЗапроса = Запрос.Выполнить();
	
	РеквизитыДокумента = РезультатЗапроса.Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыДокумента.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыДокумента.ДокументОснование, ПараметрыПроверки);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
		ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовЕГАИС.АктСписанияИзРегистра1;
		
		ДокументОбъект.ПричинаСписания = Перечисления.ПричиныСписанийЕГАИС.Реализация;
		
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(СтрШаблон(ШаблонКурсыВалют(),"ВалютаОснования"));
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина),"АктСписанияЕГАИС"));
	МассивСтрок.Добавить(ИнтеграцияИСУТ.ТекстЗапросаРеализацияТоваровУслуг());
	МассивСтрок.Добавить(";
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура       КАК Номенклатура,
	|	ОформленныеТовары.Характеристика     КАК Характеристика,
	|	ОформленныеТовары.Серия              КАК Серия,
	|	СУММА(ОформленныеТовары.Количество) КАК Количество,
	|	СУММА(ОформленныеТовары.Сумма)      КАК Сумма
	|ПОМЕСТИТЬ Использовано
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыАктСписанияЕГАИС КАК Т)
	|СГРУППИРОВАТЬ ПО
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия
	|
	|;
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ТаблицаТовары.Серия                        КАК Серия,
	|	СУММА(ТаблицаТовары.Количество)            КАК Количество,
	|	ВЫРАЗИТЬ(СУММА(
	|		ВЫБОР
	|			КОГДА Шапка.ЦенаВключаетНДС ТОГДА ТаблицаТовары.Сумма
	|			ИНАЧЕ ТаблицаТовары.Сумма + ТаблицаТовары.СуммаНДС
	|		КОНЕЦ
	|		* ВЫБОР
	|		КОГДА &ВалютаОснования = &ВалютаРеглУчета
	|			ТОГДА 1
	|		ИНАЧЕ
	|			ЕСТЬNULL(КурсВалютыОснования.КурсЧислитель, 1) * ЕСТЬNULL(КурсВалютыРегл.КурсЗнаменатель, 1)
	|		    / (ЕСТЬNULL(КурсВалютыРегл.КурсЧислитель, 1) * ЕСТЬNULL(КурсВалютыОснования.КурсЗнаменатель, 1))
	|		КОНЕЦ) КАК ЧИСЛО(31,2))                КАК Сумма
	|ПОМЕСТИТЬ ТоварыТаблицыТовары
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Шапка
	|		ПО ТаблицаТовары.Ссылка = Шапка.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО КурсВалютыОснования.Валюта = &ВалютаОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО КурсВалютыРегл.Валюта = &ВалютаРеглУчета
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И Не СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И Не СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия
	|
	|;
	|ВЫБРАТЬ
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	Т.Серия КАК Серия,
	|	Т.Количество - СУММА(ЕСТЬNULL(Товары.Количество,0)) КАК Количество
	|ПОМЕСТИТЬ НераспределенныеСерии
	|ИЗ
	|	ТаблицаТоварыРеализацияТоваровУслуг КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТоварыТаблицыТовары КАК Товары
	|		ПО Товары.Номенклатура = Т.Номенклатура
	|		И Товары.Характеристика = Т.Характеристика
	|		И Товары.Серия = Т.Серия
	|ГДЕ
	|	Не Т.Номенклатура.ВидАлкогольнойПродукции.Маркируемый
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Номенклатура,
	|	Т.Характеристика,
	|	Т.Серия,
	|	Т.Количество
	|ИМЕЮЩИЕ
	|	Т.Количество > СУММА(ЕСТЬNULL(Товары.Количество,0))
	|
	|;
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ТаблицаТовары.Серия                        КАК Серия,
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	ТаблицаТовары.Сумма                        КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыТаблицыТовары КАК ТаблицаТовары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество,
	|	-ОформленныеТовары.Сумма
	|ИЗ
	|	Использовано КАК ОформленныеТовары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	НераспределенныеСерии.Серия,
	|	НераспределенныеСерии.Количество,
	|	ТаблицаТовары.Сумма * НераспределенныеСерии.Количество / ТаблицаТовары.Количество
	|ИЗ
	|	ТоварыТаблицыТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НераспределенныеСерии КАК НераспределенныеСерии
	|	ПО НераспределенныеСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|	И НераспределенныеСерии.Характеристика = ТаблицаТовары.Характеристика
	|	И НераспределенныеСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|ГДЕ
	|	ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТаблицаТовары.Количество > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|	-НераспределенныеСерии.Количество,
	|	-ТаблицаТовары.Сумма * НераспределенныеСерии.Количество / ТаблицаТовары.Количество
	|ИЗ
	|	ТоварыТаблицыТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НераспределенныеСерии КАК НераспределенныеСерии
	|	ПО НераспределенныеСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|	И НераспределенныеСерии.Характеристика = ТаблицаТовары.Характеристика
	|	И НераспределенныеСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|ГДЕ
	|	ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТаблицаТовары.Количество > 0");
	МассивСтрок.Добавить(ШаблонСопоставление());
	МассивСтрок.Добавить(ШаблонОстатокКоличествоСумма());
	Запрос.Текст = СтрСоединить(МассивСтрок);
	
	ОсобенностьУчета = ОсобенностиУчетаЕГАИС();
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(РеквизитыДокумента.Организация));
	Запрос.УстановитьПараметр("ДатаОснования",                   РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("ВалютаОснования",                 РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ЭтаСсылка",                       ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",               ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Документ",                        ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ОсобенностьУчета",                ОсобенностьУчета);
	Запрос.УстановитьПараметр("КонечныеСтатусыАктСписанияЕГАИС", Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",                     ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса, ДанныеЗаполнения, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ЧекЕГАИС

Процедура ЗаполнитьЧекЕГАИСНаОснованииРеализацииТоваровУслуг(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка      КАК ДокументОснование,
	|	НЕ Таблица.Проведен КАК ЕстьОшибкиПроведен,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Склад       КАК Склад,
	|	Таблица.Менеджер    КАК Ответственный,
	|	Таблица.Валюта      КАК Валюта,
	|	Таблица.Дата        КАК Дата,             // Дата товарной накладной, на основании которой осуществлена розничная продажа алкогольной продукции по безналичному расчету.
	|	Таблица.Номер       КАК НомерСмены,       // Номер товарной накладной, на основании которой осуществлена розничная продажа алкогольной продукции по безналичному расчету.
	|	Таблица.Номер       КАК НомерЧекаККМ,     // Номер товарной накладной, на основании которой осуществлена розничная продажа алкогольной продукции по безналичному расчету.
	|	""""                КАК СерийныйНомерККМ  // Номер счета на безналичную оплату алкогольной продукции.
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыДокумента.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыДокумента.ДокументОснование, ПараметрыПроверки);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ВидОперации  = Перечисления.ВидыОперацийЧекаЕГАИС.РеализацияЮридическомуЛицуСБезналичнойОплатой;
		ДокументОбъект.НомерСмены   = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.НомерСмены);
		ДокументОбъект.НомерЧекаККМ = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.НомерЧекаККМ);
		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(
			РеквизитыДокумента.Организация,
			РеквизитыДокумента.Склад);
		
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(СтрШаблон(ШаблонКурсыВалют(),"ВалютаОснования"));
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина),"ТТНИсходящаяЕГАИС"));
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина),"ЧекЕГАИС"));
	МассивСтрок.Добавить(ИнтеграцияИСУТ.ТекстЗапросаРеализацияТоваровУслуг());
	МассивСтрок.Добавить(";
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество,
	|	СУММА(ВЫРАЗИТЬ(Товары.СуммаСНДС * 
	|			ВЫБОР
	|				КОГДА &ВалютаОснования = &ВалютаРеглУчета
	|					ТОГДА 1
	|				КОГДА ЕСТЬNULL(КурсВалютыОснования.КурсЗнаменатель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыОснования.КурсЧислитель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыРегл.КурсЗнаменатель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыРегл.КурсЧислитель, 0) > 0
	|						ТОГДА КурсВалютыОснования.КурсЧислитель * КурсВалютыРегл.КурсЗнаменатель / (КурсВалютыРегл.КурсЧислитель * КурсВалютыОснования.КурсЗнаменатель)
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			КАК ЧИСЛО(31,2))) КАК Сумма
	|ПОМЕСТИТЬ ТоварыТаблицыТовары
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|
	|;
	|ВЫБРАТЬ
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	Т.Серия КАК Серия,
	|	Т.Количество - СУММА(ЕСТЬNULL(Товары.Количество,0)) КАК Количество
	|ПОМЕСТИТЬ НераспределенныеСерии
	|ИЗ
	|	ТаблицаТоварыРеализацияТоваровУслуг КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТоварыТаблицыТовары КАК Товары
	|		ПО Товары.Номенклатура = Т.Номенклатура
	|		И Товары.Характеристика = Т.Характеристика
	|		И Товары.Серия = Т.Серия
	|ГДЕ
	|	Т.Номенклатура.ВидАлкогольнойПродукции.Маркируемый
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Номенклатура,
	|	Т.Характеристика,
	|	Т.Серия,
	|	Т.Количество
	|ИМЕЮЩИЕ
	|	Т.Количество > СУММА(ЕСТЬNULL(Товары.Количество,0))
	|
	|;
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ТаблицаТовары.Серия                        КАК Серия,
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	ТаблицаТовары.Сумма                        КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыТаблицыТовары КАК ТаблицаТовары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-ОформленныеТовары.Сумма                КАК Сумма
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыТТНИсходящаяЕГАИС КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-ОформленныеТовары.Сумма                КАК Сумма
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыЧекЕГАИС КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	НераспределенныеСерии.Серия,
	|	НераспределенныеСерии.Количество,
	|	ТаблицаТовары.Сумма * НераспределенныеСерии.Количество / ТаблицаТовары.Количество
	|ИЗ
	|	ТоварыТаблицыТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НераспределенныеСерии КАК НераспределенныеСерии
	|	ПО НераспределенныеСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|	И НераспределенныеСерии.Характеристика = ТаблицаТовары.Характеристика
	|	И НераспределенныеСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|ГДЕ
	|	ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТаблицаТовары.Количество > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|	-НераспределенныеСерии.Количество,
	|	-ТаблицаТовары.Сумма * НераспределенныеСерии.Количество / ТаблицаТовары.Количество
	|ИЗ
	|	ТоварыТаблицыТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НераспределенныеСерии КАК НераспределенныеСерии
	|	ПО НераспределенныеСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|	И НераспределенныеСерии.Характеристика = ТаблицаТовары.Характеристика
	|	И НераспределенныеСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|ГДЕ
	|	ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТаблицаТовары.Количество > 0");
	МассивСтрок.Добавить(ШаблонСопоставление());
	МассивСтрок.Добавить(ШаблонОстатокКоличествоСумма());
	МассивСтрок.Добавить(ШаблонКодыМаркировки("ТТНИсходящаяЕГАИС,ЧекЕГАИС", "РеализацияТоваровУслуг"));
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(МассивСтрок);
	
	ОсобенностьУчета = ОсобенностиУчетаЕГАИС();
	
	Запрос.УстановитьПараметр("ЭтаСсылка",                        ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",                ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Документ",                         ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ОсобенностьУчета",                 ОсобенностьУчета);
	Запрос.УстановитьПараметр("КонечныеСтатусыЧекЕГАИС",          Документы.ЧекЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("КонечныеСтатусыТТНИсходящаяЕГАИС", Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(РеквизитыДокумента.Организация));
	Запрос.УстановитьПараметр("ДатаОснования",                    РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("ВалютаОснования",                  РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ПустаяСерия",                      ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Товары = РезультатЗапроса[РезультатЗапроса.Количество() - 3];
	АкцизныеМарки = РезультатЗапроса[РезультатЗапроса.Количество() - 1];
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Товары, ДанныеЗаполнения, Истина);
	ЗаполнитьТоварыАкцизныеМарки(ДокументОбъект, АкцизныеМарки,,Истина);
	
КонецПроцедуры

Процедура ЗаполнитьЧекЕГАИСНаОснованииСборкиТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ВозможныеДокументыЕГАИС = "АктСписанияЕГАИС,ЧекЕГАИС,ОтчетОПроизводствеЕГАИС";
	
	Настройки = НастройкиФормированияЗапросаЗаполнения();
	Настройки.ТабличнаяЧасть = "Шапка";
	Настройки.ШтрихкодыУпаковок = "ШтрихкодыУпаковок";
	Настройки.Отбор = 
	"И ТабличнаяЧасть.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|И СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияПоШаблонуОснования(ВозможныеДокументыЕГАИС, "СборкаТоваров", 
		ИнтеграцияИСУТ.ТекстЗапросаСборкаТоваров(), Настройки);
	//Доработаем запрос шапки
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
	"	Таблица.Ответственный   КАК Ответственный",
	"	Таблица.Ответственный КАК Ответственный,
	|	Таблица.Дата          КАК Дата,             // Дата документа, на основании которого осуществлено вскрытие тары.
	|	Таблица.Номер         КАК НомерСмены,       // Номер документа, на основании которого осуществлено вскрытие тары.
	|	""""                  КАК СерийныйНомерККМ");
	
	ОсобенностьУчета = ОсобенностиУчетаЕГАИС();
	
	Запрос.УстановитьПараметр("ЭтаСсылка",                              ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",                      ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Документ",                               ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ОсобенностьУчета",                       ОсобенностьУчета);
	Запрос.УстановитьПараметр("КонечныеСтатусыЧекЕГАИС",                Документы.ЧекЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("КонечныеСтатусыАктСписанияЕГАИС",        Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("КонечныеСтатусыОтчетОПроизводствеЕГАИС", Документы.ОтчетОПроизводствеЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",                            ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыДокумента.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыДокумента.ДокументОснование, ПараметрыПроверки);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ВидОперации  = Перечисления.ВидыОперацийЧекаЕГАИС.ВскрытиеТары;
		ДокументОбъект.НомерСмены   = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.НомерСмены);
		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(
			РеквизитыДокумента.Организация,
			РеквизитыДокумента.Склад);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	Товары = РезультатЗапроса[РезультатЗапроса.Количество() - 3];
	АкцизныеМарки = РезультатЗапроса[РезультатЗапроса.Количество() - 1];
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Товары, ДанныеЗаполнения, Истина);
	ЗаполнитьТоварыАкцизныеМарки(ДокументОбъект, АкцизныеМарки,,Истина);
	
КонецПроцедуры

Процедура ЗаполнитьЧекЕГАИСНаОснованииВнутреннегоПотребленияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ВозможныеДокументыЕГАИС = "АктСписанияЕГАИС,ЧекЕГАИС";
	Настройки = НастройкиФормированияЗапросаЗаполнения(,"ШтрихкодыУпаковок");
	Настройки.Отбор = "И СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый";

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаЗаполненияПоШаблонуОснования(ВозможныеДокументыЕГАИС, "ВнутреннееПотребление",
		ИнтеграцияИСУТ.ТекстЗапросаВнутреннееПотребление(), Настройки);
	//Доработаем запрос шапки
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
	"	Таблица.Ответственный   КАК Ответственный",
	"	Таблица.Ответственный КАК Ответственный,
	|	Таблица.Дата          КАК Дата,             // Дата документа, на основании которого осуществлено вскрытие тары.
	|	Таблица.Номер         КАК НомерСмены,       // Номер документа, на основании которого осуществлено вскрытие тары.
	|	""""                  КАК СерийныйНомерККМ");
	
	ОсобенностьУчета = ОсобенностиУчетаЕГАИС();
	
	Запрос.УстановитьПараметр("ЭтаСсылка",                       ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",               ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Документ",                        ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ОсобенностьУчета",                ОсобенностьУчета);
	Запрос.УстановитьПараметр("КонечныеСтатусыАктСписанияЕГАИС", Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("КонечныеСтатусыЧекЕГАИС",         Документы.ЧекЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",                     ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыДокумента = РезультатЗапроса[0].Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыДокумента.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыДокумента.ДокументОснование, ПараметрыПроверки);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ВидОперации  = Перечисления.ВидыОперацийЧекаЕГАИС.ВскрытиеТары;
		ДокументОбъект.НомерСмены   = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.НомерСмены);
		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(
			РеквизитыДокумента.Организация,
			РеквизитыДокумента.Склад);
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	Товары = РезультатЗапроса[РезультатЗапроса.Количество() - 3];
	АкцизныеМарки = РезультатЗапроса[РезультатЗапроса.Количество() - 1];
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Товары, ДанныеЗаполнения, Истина);
	ЗаполнитьТоварыАкцизныеМарки(ДокументОбъект, АкцизныеМарки,,Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ЧекЕГАИСВозврат

Процедура ЗаполнитьЧекЕГАИСВозвратНаОснованииВозвратаТоваровОтКлиента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Таблица.Ссылка                   КАК ДокументОснование,
	|	НЕ Таблица.Проведен              КАК ЕстьОшибкиПроведен,
	|	Таблица.Организация              КАК Организация,
	|	Таблица.Склад                    КАК Склад,
	|	Таблица.Валюта                   КАК Валюта,
	|	Таблица.Менеджер                 КАК Ответственный,
	|	Таблица.Контрагент.ЮрФизЛицо     КАК КонтрагентЮрФизЛицо,
	|	ВЫБОР
	|		КОГДА Таблица.ДокументРеализации ЕСТЬ NULL
	|			ТОГДА Таблица.Дата
	|		КОГДА Таблица.ДокументРеализации = НЕОПРЕДЕЛЕНО
	|			ТОГДА Таблица.Дата
	|		ИНАЧЕ Таблица.ДокументРеализации.Дата
	|	КОНЕЦ                            КАК Дата,             // Дата товарной накладной, на основании которой осуществлена розничная продажа алкогольной продукции по безналичному расчету
	|	ВЫБОР
	|		КОГДА Таблица.ДокументРеализации ЕСТЬ NULL
	|			ТОГДА """"
	|		КОГДА Таблица.ДокументРеализации = НЕОПРЕДЕЛЕНО
	|			ТОГДА """"
	|		ИНАЧЕ Таблица.ДокументРеализации.Номер
	|	КОНЕЦ                            КАК НомерСмены,       // Номер товарной накладной, на основании которой осуществлена розничная продажа алкогольной продукции по безналичному расчету
	|	ВЫБОР
	|		КОГДА Таблица.ДокументРеализации ЕСТЬ NULL
	|			ТОГДА """"
	|		КОГДА Таблица.ДокументРеализации = НЕОПРЕДЕЛЕНО
	|			ТОГДА """"
	|		ИНАЧЕ Таблица.ДокументРеализации.Номер
	|	КОНЕЦ                            КАК НомерЧекаККМ,
	|	""""                             КАК СерийныйНомерККМ  // Номер счета на безналичную оплату алкогольной продукции
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	РезультатЗапроса = Запрос.Выполнить();
	
	РеквизитыДокумента = РезультатЗапроса.Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыДокумента.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыДокумента.ДокументОснование, ПараметрыПроверки);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.НомерСмены = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.НомерСмены);
		ДокументОбъект.НомерЧекаККМ = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыДокумента.НомерЧекаККМ);
		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(
			РеквизитыДокумента.Организация,
			РеквизитыДокумента.Склад);
		
		Если РеквизитыДокумента.КонтрагентЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо
			ИЛИ РеквизитыДокумента.КонтрагентЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент Тогда
			ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийЧекаЕГАИСВозврат.ВозвратОтЮридическогоЛицаСБезналичнойОплатой;
		КонецЕсли;
		
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(СтрШаблон(ШаблонКурсыВалют(),"ВалютаОснования"));
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина),"ЧекЕГАИСВозврат"));
	МассивСтрок.Добавить("ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                                        КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                                      КАК Характеристика,
	|	ЕСТЬNULL(ТаблицаСерии.Серия, ТаблицаТовары.Серия)                 КАК Серия,
	|	СУММА(ЕСТЬNULL(ТаблицаСерии.Количество,ТаблицаТовары.Количество)) КАК Количество,
	|	ВЫРАЗИТЬ(СУММА(ТаблицаТовары.СуммаСНДС * ВЫБОР
	|		КОГДА ТаблицаСерии.Ссылка ЕСТЬ NULL
	|			ТОГДА 1
	|		КОГДА ТаблицаТовары.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ТаблицаСерии.Количество / ТаблицаТовары.Количество
	|	КОНЕЦ * ВЫБОР
	|		КОГДА &ВалютаОснования = &ВалютаРеглУчета
	|			ТОГДА 1
	|		ИНАЧЕ
	|			ЕСТЬNULL(КурсВалютыОснования.КурсЧислитель, 1) * ЕСТЬNULL(КурсВалютыРегл.КурсЗнаменатель, 1)
	|		    / (ЕСТЬNULL(КурсВалютыРегл.КурсЧислитель, 1) * ЕСТЬNULL(КурсВалютыОснования.КурсЗнаменатель, 1))
	|	КОНЕЦ) КАК ЧИСЛО(31,2))                                          КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.Серии КАК ТаблицаСерии
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.НоменклатураОприходование = ТаблицаТовары.НоменклатураОприходование
	|			И ТаблицаСерии.ХарактеристикаОприходование = ТаблицаТовары.ХарактеристикаОприходование
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО КурсВалютыОснования.Валюта = &ВалютаОснования
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО КурсВалютыРегл.Валюта = &ВалютаРеглУчета
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ЕСТЬNULL(ТаблицаСерии.Серия, ТаблицаТовары.Серия)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура       КАК Номенклатура,
	|	ОформленныеТовары.Характеристика     КАК Характеристика,
	|	ОформленныеТовары.Серия              КАК Серия,
	|	-СУММА(ОформленныеТовары.Количество) КАК Количество,
	|	-СУММА(ОформленныеТовары.Сумма)      КАК Сумма
	|ИЗ
	|	Документ.ЧекЕГАИСВозврат.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыЧекЕГАИСВозврат КАК Т)
	|СГРУППИРОВАТЬ ПО
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия");
	МассивСтрок.Добавить(ШаблонСопоставление());
	МассивСтрок.Добавить(ШаблонОстатокКоличествоСумма());
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(МассивСтрок);
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(РеквизитыДокумента.Организация));
	Запрос.УстановитьПараметр("ДатаОснования",                  РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("ВалютаОснования",                РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ЭтаСсылка",                      ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",              ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусыЧекЕГАИСВозврат", Документы.ЧекЕГАИСВозврат.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",                    ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса, ДанныеЗаполнения, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ТТНИсходящаяЕГАИС

Процедура ЗаполнитьТТНИсходящуюЕГАИСНаОснованииВозвратаТоваровПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                КАК ДокументОснование,
	|	ДокументОснование.Номер                 КАК НомерТТН,
	|	ДокументОснование.Дата                  КАК ДатаТТН,
	|	ДокументОснование.Дата                  КАК ДатаОтгрузки,
	|	НЕ ДокументОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Организация           КАК Поставщик,
	|	ДокументОснование.Менеджер              КАК Ответственный,
	|	ДокументОснование.Контрагент            КАК Грузополучатель,
	|	ДокументОснование.Организация           КАК Грузоотправитель,
	|	ДокументОснование.Склад                 КАК Склад,
	|	ДокументОснование.Партнер               КАК Партнер,
	|	ДокументОснование.СпособДоставки        КАК ТипДоставки,
	|	ДокументОснование.Валюта                КАК Валюта
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыДокумента.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыДокумента.ДокументОснование, ПараметрыПроверки);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.ВозвратПоставщику;
		
		ТранспортныеНакладные = Документы.ТранспортнаяНакладная.ТранспортныеНакладныеДокументовОснований(РеквизитыДокумента.ДокументОснование);
		ТранспортнаяНакладная = Неопределено;
		
		Если ТранспортныеНакладные.Количество() = 0 Тогда 
			Если ЗначениеЗаполнено(ДокументОбъект.НомерТТН) Тогда 
				ДокументОбъект.НомерТТН = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДокументОбъект.НомерТТН);
			КонецЕсли;
		ИначеЕсли ТранспортныеНакладные.Количество() = 1 Тогда
			ДокументОбъект.НомерТТН = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ТранспортныеНакладные[0].Номер);
			ДокументОбъект.ДатаТТН  = ТранспортныеНакладные[0].Дата;
			ТранспортнаяНакладная   = ТранспортныеНакладные[0].ТранспортнаяНакладная;
		Иначе
			ДокументОбъект.НомерТТН = Неопределено;
			ДокументОбъект.ДатаТТН  = Неопределено;
		КонецЕсли;
		
		ДокументОбъект.Поставщик        = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Поставщик, РеквизитыДокумента.Склад);
		ДокументОбъект.Грузоотправитель = ДокументОбъект.Поставщик;
		ДокументОбъект.Грузополучатель  = ОрганизацияЕГАИСПоПартнеруИКонтрагенту(
			РеквизитыДокумента.Партнер,
			РеквизитыДокумента.Грузополучатель);
			
		ЗаполнитьТранспортныеРеквизитыТТНИсходящей(ДокументОбъект, ТранспортнаяНакладная);
		
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(СтрШаблон(ШаблонКурсыВалют(),"ВалютаОснования"));
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина),"ТТНИсходящаяЕГАИС"));
	МассивСтрок.Добавить(ИнтеграцияИСУТ.ТекстЗапросаВозвратТоваровПоставщику());
	МассивСтрок.Добавить(";
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество,
	|	СУММА(ВЫРАЗИТЬ(Товары.СуммаСНДС * 
	|			ВЫБОР
	|				КОГДА &ВалютаОснования = &ВалютаРеглУчета
	|					ТОГДА 1
	|				КОГДА ЕСТЬNULL(КурсВалютыОснования.КурсЗнаменатель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыОснования.КурсЧислитель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыРегл.КурсЗнаменатель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыРегл.КурсЧислитель, 0) > 0
	|						ТОГДА КурсВалютыОснования.КурсЧислитель * КурсВалютыРегл.КурсЗнаменатель / (КурсВалютыРегл.КурсЧислитель * КурсВалютыОснования.КурсЗнаменатель)
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			КАК ЧИСЛО(31,2))) КАК Сумма
	|ПОМЕСТИТЬ ТоварыТаблицыТовары
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|
	|;
	|ВЫБРАТЬ
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	Т.Серия КАК Серия,
	|	Т.Количество - СУММА(ЕСТЬNULL(Товары.Количество,0)) КАК Количество
	|ПОМЕСТИТЬ НераспределенныеСерии
	|ИЗ
	|	ТаблицаТоварыВозвратТоваровПоставщику КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТоварыТаблицыТовары КАК Товары
	|		ПО Товары.Номенклатура = Т.Номенклатура
	|		И Товары.Характеристика = Т.Характеристика
	|		И Товары.Серия = Т.Серия
	|СГРУППИРОВАТЬ ПО
	|	Т.Номенклатура,
	|	Т.Характеристика,
	|	Т.Серия,
	|	Т.Количество
	|ИМЕЮЩИЕ
	|	Т.Количество > СУММА(ЕСТЬNULL(Товары.Количество,0))
	|
	|;
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ТаблицаТовары.Серия                        КАК Серия,
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	ТаблицаТовары.Сумма                        КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыТаблицыТовары КАК ТаблицаТовары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-ОформленныеТовары.Сумма                КАК Сумма
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыТТНИсходящаяЕГАИС КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	НераспределенныеСерии.Серия,
	|	НераспределенныеСерии.Количество,
	|	ТаблицаТовары.Сумма * НераспределенныеСерии.Количество / ТаблицаТовары.Количество
	|ИЗ
	|	ТоварыТаблицыТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НераспределенныеСерии КАК НераспределенныеСерии
	|	ПО НераспределенныеСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|	И НераспределенныеСерии.Характеристика = ТаблицаТовары.Характеристика
	|	И НераспределенныеСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|ГДЕ
	|	ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТаблицаТовары.Количество > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|	-НераспределенныеСерии.Количество,
	|	-ТаблицаТовары.Сумма * НераспределенныеСерии.Количество / ТаблицаТовары.Количество
	|ИЗ
	|	ТоварыТаблицыТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НераспределенныеСерии КАК НераспределенныеСерии
	|	ПО НераспределенныеСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|	И НераспределенныеСерии.Характеристика = ТаблицаТовары.Характеристика
	|	И НераспределенныеСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|ГДЕ
	|	ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТаблицаТовары.Количество > 0");
	МассивСтрок.Добавить("ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество,
	|	ТоварыСерии.Сумма                 КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-ОформленныеТовары.Сумма                КАК Сумма
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыТТНИсходящаяЕГАИС КАК Т)");
	МассивСтрок.Добавить(ШаблонСопоставление());
	МассивСтрок.Добавить(ШаблонОстатокКоличествоСумма());
	МассивСтрок.Добавить(ШаблонКодыМаркировки("ТТНИсходящаяЕГАИС", "ВозвратТоваровПоставщику"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(МассивСтрок);
	
	ОсобенностьУчета = ОсобенностиУчетаЕГАИС();
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(РеквизитыДокумента.Грузоотправитель));
	Запрос.УстановитьПараметр("ДатаОснования",                    РеквизитыДокумента.ДатаТТН);
	Запрос.УстановитьПараметр("ВалютаОснования",                  РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ЭтаСсылка",                        ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",                ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Документ",                         ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ОсобенностьУчета",                 ОсобенностьУчета);
	Запрос.УстановитьПараметр("КонечныеСтатусыТТНИсходящаяЕГАИС", Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",                      Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Товары = РезультатЗапроса[РезультатЗапроса.Количество() - 3];
	АкцизныеМарки = РезультатЗапроса[РезультатЗапроса.Количество() - 1];
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Товары, ДанныеЗаполнения, Истина);
	ЗаполнитьТоварыАкцизныеМарки(ДокументОбъект, АкцизныеМарки,,Истина);
	
КонецПроцедуры

Процедура ЗаполнитьТТНИсходящуюЕГАИСНаОснованииПеремещенияТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.Ссылка                КАК ДокументОснование,
	|	ПеремещениеТоваров.Номер                 КАК НомерТТН,
	|	ПеремещениеТоваров.Дата                  КАК ДатаТТН,
	|	ПеремещениеТоваров.Дата                  КАК ДатаОтгрузки,
	|	НЕ ПеремещениеТоваров.Проведен           КАК ЕстьОшибкиПроведен,
	|	
	|	ПеремещениеТоваров.Организация           КАК Организация,
	|	ПеремещениеТоваров.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	
	|	ПеремещениеТоваров.СкладОтправитель      КАК СкладОтправитель,
	|	ПеремещениеТоваров.СкладПолучатель       КАК СкладПолучатель,
	|	
	|	ПеремещениеТоваров.Ответственный         КАК Ответственный,
	|	ПеремещениеТоваров.СпособДоставки        КАК ТипДоставки,
	|	ПеремещениеТоваров.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ПеремещениеТоваров.ВидЦены               КАК ВидЦены,
	|	ПеремещениеТоваров.ВидЦены.ВалютаЦены    КАК ВалютаЦены
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыДокумента.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыДокумента.ДокументОснование, ПараметрыПроверки);
			
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
		
		Поставщик = ОрганизацияЕГАИСПоОрганизацииИСкладу(
			РеквизитыДокумента.Организация,
			РеквизитыДокумента.СкладОтправитель);
		
		Если РеквизитыДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами Тогда
			
			Если РеквизитыДокумента.Организация = РеквизитыДокумента.ОрганизацияПолучатель Тогда
				
				ТекстОшибки = НСтр("ru='В %1 одинаковые организация и организация-получатель - %2. Ввод на основании невозможен.'");
				ТекстОшибки = СтрШаблон(ТекстОшибки, ДанныеЗаполнения, РеквизитыДокумента.Грузоотправитель);
				
				ВызватьИсключение ТекстОшибки;
				
			КонецЕсли;
			
			ДокументОбъект.Поставщик        = Поставщик;
			ДокументОбъект.Грузоотправитель = Поставщик;
			ДокументОбъект.Грузополучатель  = ОрганизацияЕГАИСПоОрганизацииИСкладу(
				РеквизитыДокумента.ОрганизацияПолучатель,
				РеквизитыДокумента.СкладПолучатель);
			
		ИначеЕсли РеквизитыДокумента.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров Тогда
			
			ДокументОбъект.Поставщик        = Поставщик;
			ДокументОбъект.Грузоотправитель = Поставщик;
			ДокументОбъект.Грузополучатель  = ОрганизацияЕГАИСПоОрганизацииИСкладу(
				РеквизитыДокумента.Организация,
				РеквизитыДокумента.СкладПолучатель);
			
		КонецЕсли;
		
		ЗаполнитьТранспортныеРеквизитыТТНИсходящей(ДокументОбъект);
		
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(СтрШаблон(ШаблонКурсыВалют(),"ВалютаВидаЦены"));
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина),"ТТНИсходящаяЕГАИС"));
	МассивСтрок.Добавить(ИнтеграцияИСУТ.ТекстЗапросаПеремещениеТоваров());
	Шаблон = ШаблонТоварыПрикладногоДокумента("ВременнаяТаблица");
	МассивСтрок.Добавить(СтрШаблон(Шаблон,"ПеремещениеТоваров",""));
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеТовары(Ложь),"ТТНИсходящаяЕГАИС"));
	МассивСтрок.Добавить("
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АлкогольнаяПродукцияДокумента.Номенклатура КАК Номенклатура,
	|	АлкогольнаяПродукцияДокумента.Характеристика КАК Характеристика,
	|	АлкогольнаяПродукцияДокумента.Серия КАК Серия,
	|	СРЕДНЕЕ(ЕстьNULL(ЦеныНоменклатурыСрезПоследних.Цена,0)/ЕстьNULL(&ТекстЗапросаКоэффициентУпаковкиЦеныНоменклатуры,1)
	|	* ВЫБОР
	|		КОГДА &ВалютаРеглУчета = ЦеныНоменклатурыСрезПоследних.Валюта
	|			ТОГДА 1
	|		КОГДА ЕСТЬNULL(КурсыВалютыЦены.КурсЗнаменатель, 0) > 0
	|			И ЕСТЬNULL(КурсыВалютыЦены.КурсЧислитель, 0) > 0
	|			И ЕСТЬNULL(КурсыВалюты.КурсЗнаменатель, 0) > 0
	|			И ЕСТЬNULL(КурсыВалюты.КурсЧислитель, 0) > 0
	|				ТОГДА
	|					(КурсыВалютыЦены.КурсЧислитель * КурсыВалюты.КурсЗнаменатель)
	|					/ (КурсыВалюты.КурсЧислитель * КурсыВалютыЦены.КурсЗнаменатель)
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК Цена
	|ПОМЕСТИТЬ ТоварыКОформлениюЦены
	|ИЗ
	|	ТоварыКОформлению КАК АлкогольнаяПродукцияДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&ДатаОснования,
	|				ВидЦены = &ВидЦены
	|					И (Номенклатура, Характеристика) В
	|						(ВЫБРАТЬ
	|							АлкогольнаяПродукцияДокумента.Номенклатура,
	|							АлкогольнаяПродукцияДокумента.Характеристика
	|						ИЗ
	|							ТоварыКОформлению КАК АлкогольнаяПродукцияДокумента)) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО АлкогольнаяПродукцияДокумента.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|			И АлкогольнаяПродукцияДокумента.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсыВалютыЦены
	|		ПО (КурсыВалютыЦены.Валюта = &ВалютаВидаЦены)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсыВалюты
	|		ПО (КурсыВалюты.Валюта = &ВалютаРеглУчета)
	|СГРУППИРОВАТЬ ПО
	|	АлкогольнаяПродукцияДокумента.Номенклатура,
	|	АлкогольнаяПродукцияДокумента.Характеристика,
	|	АлкогольнаяПродукцияДокумента.Серия");
	МассивСтрок.Добавить(ШаблонСопоставление());
	МассивСтрок.Добавить("ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура         КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика       КАК Характеристика,
	|	ТоварыКОформлению.Серия                КАК Серия,
	|	СопоставленныеПозиции.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	ЕСТЬNULL(ТоварыКОформлениюЦеныФинСерии.Цена,ТоварыКОформлениюЦены.Цена) КАК Цена,
	|	СУММА(ТоварыКОформлению.План - ТоварыКОформлению.Факт)    КАК КоличествоУпаковок,
	|	СУММА(ТоварыКОформлению.План - ТоварыКОформлению.Факт)    КАК Количество,
	|	СУММА(ЕСТЬNULL(ТоварыКОформлениюЦеныФинСерии.Цена,ЕСТЬNULL(ТоварыКОформлениюЦены.Цена,0))*(ТоварыКОформлению.План - ТоварыКОформлению.Факт)) КАК Сумма
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО СопоставленныеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленныеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленныеПозиции.Серия = ТоварыКОформлению.Серия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКОформлениюЦены КАК ТоварыКОформлениюЦеныФинСерии
	|		ПО ТоварыКОформлениюЦеныФинСерии.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И ТоварыКОформлениюЦеныФинСерии.Характеристика = ТоварыКОформлению.Характеристика
	|			И ТоварыКОформлениюЦеныФинСерии.Серия = ТоварыКОформлению.Серия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКОформлениюЦены КАК ТоварыКОформлениюЦены
	|		ПО ТоварыКОформлениюЦены.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И ТоварыКОформлениюЦены.Характеристика = ТоварыКОформлению.Характеристика
	|			И ТоварыКОформлениюЦены.Серия = &ПустаяСерия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленныеПозиции.АлкогольнаяПродукция,
	|	ЕСТЬNULL(ТоварыКОформлениюЦеныФинСерии.Цена,ТоварыКОформлениюЦены.Цена)
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.План - ТоварыКОформлению.Факт) > 0
	|");
	МассивСтрок.Добавить(ШаблонКодыМаркировки("ТТНИсходящаяЕГАИС", "ПеремещениеТоваров"));
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(МассивСтрок);
	
	ОсобенностьУчета = ОсобенностиУчетаЕГАИС();
	
	Запрос.УстановитьПараметр("ЭтаСсылка",                        ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",                ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Документ",                         ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ОсобенностьУчета",                 ОсобенностьУчета);
	Запрос.УстановитьПараметр("ДатаОснования",                    РеквизитыДокумента.ДатаТТН);
	Запрос.УстановитьПараметр("ВидЦены",                          РеквизитыДокумента.ВидЦены);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(РеквизитыДокумента.Организация));
	Запрос.УстановитьПараметр("ВалютаВидаЦены",                   РеквизитыДокумента.ВалютаЦены);
	Запрос.УстановитьПараметр("КонечныеСтатусыТТНИсходящаяЕГАИС", Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",                      ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковкиЦеныНоменклатуры",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЦеныНоменклатурыСрезПоследних.Упаковка",
			"ЦеныНоменклатурыСрезПоследних.Номенклатура"));
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Товары = РезультатЗапроса[РезультатЗапроса.Количество() - 3];
	АкцизныеМарки = РезультатЗапроса[РезультатЗапроса.Количество() - 1];
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Товары, ДанныеЗаполнения, Истина);
	ЗаполнитьТоварыАкцизныеМарки(ДокументОбъект, АкцизныеМарки,,Истина);
	
КонецПроцедуры

Процедура ЗаполнитьТТНИсходящуюЕГАИСНаОснованииВозвратаТоваровМеждуОрганизациями(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                КАК ДокументОснование,
	|	ДокументОснование.Номер                 КАК НомерТТН,
	|	ДокументОснование.Дата                  КАК ДатаТТН,
	|	ДокументОснование.Дата                  КАК ДатаОтгрузки,
	|	НЕ ДокументОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Организация           КАК Поставщик,
	|	ДокументОснование.Менеджер              КАК Ответственный,
	|	ДокументОснование.ОрганизацияПолучатель КАК Грузополучатель,
	|	ДокументОснование.Организация           КАК Грузоотправитель,
	|	ДокументОснование.Склад                 КАК Склад,
	|	ДокументОснование.Валюта                КАК Валюта
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыДокумента.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыДокумента.ДокументОснование, ПараметрыПроверки);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.ВозвратПоставщику;
		
		ДокументОбъект.Поставщик        = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Поставщик, РеквизитыДокумента.Склад);
		ДокументОбъект.Грузоотправитель = ДокументОбъект.Поставщик;
		ДокументОбъект.Грузополучатель  = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Грузополучатель, РеквизитыДокумента.Склад);
		
		ЗаполнитьТранспортныеРеквизитыТТНИсходящей(ДокументОбъект);
		
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(СтрШаблон(ШаблонКурсыВалют(),"ВалютаОснования"));
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина),"ТТНИсходящаяЕГАИС"));
	МассивСтрок.Добавить("ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество,
	|	СУММА(ВЫРАЗИТЬ(Товары.СуммаСНДС *
	|			ВЫБОР
	|				КОГДА &ВалютаОснования = &ВалютаРеглУчета
	|					ТОГДА 1
	|				КОГДА ЕСТЬNULL(КурсВалютыОснования.КурсЗнаменатель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыОснования.КурсЧислитель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыРегл.КурсЗнаменатель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыРегл.КурсЧислитель, 0) > 0
	|						ТОГДА КурсВалютыОснования.КурсЧислитель * КурсВалютыРегл.КурсЗнаменатель / (КурсВалютыРегл.КурсЧислитель * КурсВалютыОснования.КурсЗнаменатель)
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			КАК ЧИСЛО(31,2))) КАК Сумма
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество,
	|	ТоварыСерии.Сумма                 КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-ОформленныеТовары.Сумма                КАК Сумма
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыТТНИсходящаяЕГАИС КАК Т)");
	МассивСтрок.Добавить(ШаблонСопоставление());
	МассивСтрок.Добавить(ШаблонОстатокКоличествоСумма());
	МассивСтрок.Добавить(ШаблонКодыМаркировки("ТТНИсходящаяЕГАИС", "ВозвратТоваровМеждуОрганизациями"));
	
	Запрос = Новый Запрос;
	Запрос.Текст =СтрСоединить(МассивСтрок);
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(РеквизитыДокумента.Грузоотправитель));
	Запрос.УстановитьПараметр("ДатаОснования",                    РеквизитыДокумента.ДатаТТН);
	Запрос.УстановитьПараметр("ВалютаОснования",                  РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ЭтаСсылка",                        ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",                ДанныеЗаполнения);
	Запрос.УстановитьПараметр("КонечныеСтатусыТТНИсходящаяЕГАИС", Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",                      ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Товары = РезультатЗапроса[РезультатЗапроса.Количество() - 3];
	АкцизныеМарки = РезультатЗапроса[РезультатЗапроса.Количество() - 1];
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Товары, ДанныеЗаполнения, Истина);
	ЗаполнитьТоварыАкцизныеМарки(ДокументОбъект, АкцизныеМарки,,Истина);
	
КонецПроцедуры

Процедура ЗаполнитьТТНИсходящуюЕГАИСНаОснованииПередачиТоваровМеждуОрганизациями(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДокументОснование = ДанныеЗаполнения.Основание;
		ТоварыСправки2 = ДанныеЗаполнения.Товары;
	Иначе 
		ДокументОснование = ДанныеЗаполнения;
		ТоварыСправки2 = Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                КАК ДокументОснование,
	|	ДокументОснование.Номер                 КАК НомерТТН,
	|	ДокументОснование.Дата                  КАК ДатаТТН,
	|	ДокументОснование.Дата                  КАК ДатаОтгрузки,
	|	НЕ ДокументОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Организация           КАК Поставщик,
	|	ДокументОснование.Менеджер              КАК Ответственный,
	|	ДокументОснование.ОрганизацияПолучатель КАК Грузополучатель,
	|	ДокументОснование.Организация           КАК Грузоотправитель,
	|	ДокументОснование.Склад                 КАК Склад,
	|	ДокументОснование.Валюта                КАК Валюта
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
		
		ДокументОбъект.Поставщик        = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Поставщик, РеквизитыДокумента.Склад);
		ДокументОбъект.Грузоотправитель = ДокументОбъект.Поставщик;
		ДокументОбъект.Грузополучатель  = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Грузополучатель, РеквизитыДокумента.Склад);
		
		ЗаполнитьТранспортныеРеквизитыТТНИсходящей(ДокументОбъект);
		
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(СтрШаблон(ШаблонКурсыВалют(),"ВалютаОснования"));
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина),"ТТНИсходящаяЕГАИС"));
	МассивСтрок.Добавить("ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество,
	|	СУММА(ВЫРАЗИТЬ(Товары.СуммаСНДС *
	|			ВЫБОР
	|				КОГДА &ВалютаОснования = &ВалютаРеглУчета
	|					ТОГДА 1
	|				КОГДА ЕСТЬNULL(КурсВалютыОснования.КурсЗнаменатель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыОснования.КурсЧислитель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыРегл.КурсЗнаменатель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыРегл.КурсЧислитель, 0) > 0
	|						ТОГДА КурсВалютыОснования.КурсЧислитель * КурсВалютыРегл.КурсЗнаменатель / (КурсВалютыРегл.КурсЧислитель * КурсВалютыОснования.КурсЗнаменатель)
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			КАК ЧИСЛО(31,2))) КАК Сумма
	|ПОМЕСТИТЬ ТоварыСерии
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСерии.Номенклатура          КАК Номенклатура,
	|	ТоварыСерии.Характеристика        КАК Характеристика,
	|	ТоварыСерии.Серия                 КАК Серия,
	|	ТоварыСерии.Количество            КАК Количество,
	|	ТоварыСерии.Сумма                 КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыСерии КАК ТоварыСерии
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-Сумма                                  КАК Сумма
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыТТНИсходящаяЕГАИС КАК Т)");
	
	МассивСтрок.Добавить(ШаблонСопоставление());
	МассивСтрок.Добавить(ШаблонОстатокКоличествоСумма());
	МассивСтрок.Добавить(ШаблонКодыМаркировки("ТТНИсходящаяЕГАИС", "ПередачаТоваровМеждуОрганизациями"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(МассивСтрок);
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(РеквизитыДокумента.Грузоотправитель));
	Запрос.УстановитьПараметр("ДатаОснования",                    РеквизитыДокумента.ДатаТТН);
	Запрос.УстановитьПараметр("ВалютаОснования",                  РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ЭтаСсылка",                        ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",                ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусыТТНИсходящаяЕГАИС", Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",                      ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Товары = РезультатЗапроса[РезультатЗапроса.Количество() - 3];
	АкцизныеМарки = РезультатЗапроса[РезультатЗапроса.Количество() - 1];
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Товары, ДанныеЗаполнения, Истина);
	ЗаполнитьТоварыАкцизныеМарки(ДокументОбъект, АкцизныеМарки,,Истина);
	ЗаполнитьТоварыСправки2(ДокументОбъект, ТоварыСправки2)
	
КонецПроцедуры

Процедура ЗаполнитьТТНИсходящуюЕГАИСНаОснованииРеализацииТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументОснование.Ссылка                КАК ДокументОснование,
	|	ДокументОснование.Номер                 КАК НомерТТН,
	|	ДокументОснование.Дата                  КАК ДатаТТН,
	|	ДокументОснование.Дата                  КАК ДатаОтгрузки,
	|	НЕ ДокументОснование.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументОснование.Организация           КАК Поставщик,
	|	ДокументОснование.Менеджер              КАК Ответственный,
	|	ДокументОснование.Контрагент            КАК Грузополучатель,
	|	ДокументОснование.Организация           КАК Грузоотправитель,
	|	ДокументОснование.Склад                 КАК Склад,
	|	ДокументОснование.Партнер               КАК Партнер,
	|	ДокументОснование.СпособДоставки        КАК ТипДоставки,
	|	ДокументОснование.Валюта                КАК Валюта
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК ДокументОснование
	|ГДЕ
	|	ДокументОснование.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
		
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыДокумента.ЕстьОшибкиПроведен;
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыДокумента.ДокументОснование, ПараметрыПроверки);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);
		
		ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийТТНИсходящейЕГАИС.РасходнаяНакладная;
		
		ТранспортныеНакладные = Документы.ТранспортнаяНакладная.ТранспортныеНакладныеДокументовОснований(РеквизитыДокумента.ДокументОснование);
		ТранспортнаяНакладная = Неопределено;
		
		Если ТранспортныеНакладные.Количество() = 0 Тогда 
			Если ЗначениеЗаполнено(ДокументОбъект.НомерТТН) Тогда 
				ДокументОбъект.НомерТТН = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДокументОбъект.НомерТТН);
			КонецЕсли;
		ИначеЕсли ТранспортныеНакладные.Количество() = 1 Тогда
			ДокументОбъект.НомерТТН = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ТранспортныеНакладные[0].Номер);
			ДокументОбъект.ДатаТТН  = ТранспортныеНакладные[0].Дата;
			ТранспортнаяНакладная   = ТранспортныеНакладные[0].ТранспортнаяНакладная;
		Иначе
			ДокументОбъект.НомерТТН = Неопределено;
			ДокументОбъект.ДатаТТН  = Неопределено;
		КонецЕсли;
		
		ДокументОбъект.Поставщик        = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Поставщик, РеквизитыДокумента.Склад);
		ДокументОбъект.Грузоотправитель = ДокументОбъект.Поставщик;
		ДокументОбъект.Грузополучатель  = ОрганизацияЕГАИСПоПартнеруИКонтрагенту(
			РеквизитыДокумента.Партнер,
			РеквизитыДокумента.Грузополучатель);
		
		ЗаполнитьТранспортныеРеквизитыТТНИсходящей(ДокументОбъект, ТранспортнаяНакладная);
		
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(СтрШаблон(ШаблонКурсыВалют(),                 "ВалютаОснования"));
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина), "ТТНИсходящаяЕГАИС"));
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина), "ЧекЕГАИС"));
	МассивСтрок.Добавить(ИнтеграцияИСУТ.ТекстЗапросаРеализацияТоваровУслуг());
	МассивСтрок.Добавить(";
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                КАК Номенклатура,
	|	Товары.Характеристика                              КАК Характеристика,
	|	Товары.Серия                                       КАК Серия,
	|	СУММА(Товары.Количество)                           КАК Количество,
	|	СУММА(ВЫРАЗИТЬ(Товары.СуммаСНДС * 
	|			ВЫБОР
	|				КОГДА &ВалютаОснования = &ВалютаРеглУчета
	|					ТОГДА 1
	|				КОГДА ЕСТЬNULL(КурсВалютыОснования.КурсЗнаменатель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыОснования.КурсЧислитель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыРегл.КурсЗнаменатель, 0) > 0
	|					И ЕСТЬNULL(КурсВалютыРегл.КурсЧислитель, 0) > 0
	|						ТОГДА КурсВалютыОснования.КурсЧислитель * КурсВалютыРегл.КурсЗнаменатель / (КурсВалютыРегл.КурсЧислитель * КурсВалютыОснования.КурсЗнаменатель)
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			КАК ЧИСЛО(31,2))) КАК Сумма
	|ПОМЕСТИТЬ ТоварыТаблицыТовары
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыОснования
	|		ПО (КурсВалютыОснования.Валюта = &ВалютаОснования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втКурсыВалют КАК КурсВалютыРегл
	|		ПО (КурсВалютыРегл.Валюта = &ВалютаРеглУчета)
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия
	|
	|;
	|ВЫБРАТЬ
	|	Т.Номенклатура КАК Номенклатура,
	|	Т.Характеристика КАК Характеристика,
	|	Т.Серия КАК Серия,
	|	Т.Количество - СУММА(ЕСТЬNULL(Товары.Количество,0)) КАК Количество
	|ПОМЕСТИТЬ НераспределенныеСерии
	|ИЗ
	|	ТаблицаТоварыРеализацияТоваровУслуг КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТоварыТаблицыТовары КАК Товары
	|		ПО Товары.Номенклатура = Т.Номенклатура
	|		И Товары.Характеристика = Т.Характеристика
	|		И Товары.Серия = Т.Серия
	|СГРУППИРОВАТЬ ПО
	|	Т.Номенклатура,
	|	Т.Характеристика,
	|	Т.Серия,
	|	Т.Количество
	|ИМЕЮЩИЕ
	|	Т.Количество > СУММА(ЕСТЬNULL(Товары.Количество,0))
	|
	|;
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Характеристика               КАК Характеристика,
	|	ТаблицаТовары.Серия                        КАК Серия,
	|	ТаблицаТовары.Количество                   КАК Количество,
	|	ТаблицаТовары.Сумма                        КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	ТоварыТаблицыТовары КАК ТаблицаТовары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-ОформленныеТовары.Сумма                КАК Сумма
	|ИЗ
	|	Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыТТНИсходящаяЕГАИС КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура          КАК Номенклатура,
	|	ОформленныеТовары.Характеристика        КАК Характеристика,
	|	ОформленныеТовары.Серия                 КАК Серия,
	|	-ОформленныеТовары.Количество           КАК Количество,
	|	-ОформленныеТовары.Сумма                КАК Сумма
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыЧекЕГАИС КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	НераспределенныеСерии.Серия,
	|	НераспределенныеСерии.Количество,
	|	ТаблицаТовары.Сумма * НераспределенныеСерии.Количество / ТаблицаТовары.Количество
	|ИЗ
	|	ТоварыТаблицыТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НераспределенныеСерии КАК НераспределенныеСерии
	|	ПО НераспределенныеСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|	И НераспределенныеСерии.Характеристика = ТаблицаТовары.Характеристика
	|	И НераспределенныеСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|ГДЕ
	|	ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТаблицаТовары.Количество > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|	-НераспределенныеСерии.Количество,
	|	-ТаблицаТовары.Сумма * НераспределенныеСерии.Количество / ТаблицаТовары.Количество
	|ИЗ
	|	ТоварыТаблицыТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ НераспределенныеСерии КАК НераспределенныеСерии
	|	ПО НераспределенныеСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|	И НераспределенныеСерии.Характеристика = ТаблицаТовары.Характеристика
	|	И НераспределенныеСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|ГДЕ
	|	ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТаблицаТовары.Количество > 0");
	МассивСтрок.Добавить(ШаблонСопоставление());
	МассивСтрок.Добавить(ШаблонОстатокКоличествоСумма());
	МассивСтрок.Добавить(ШаблонКодыМаркировки("ТТНИсходящаяЕГАИС,ЧекЕГАИС", "РеализацияТоваровУслуг"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(МассивСтрок);
	
	ОсобенностьУчета = ОсобенностиУчетаЕГАИС();
	
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(РеквизитыДокумента.Грузоотправитель));
	Запрос.УстановитьПараметр("ДатаОснования",                    РеквизитыДокумента.ДатаТТН);
	Запрос.УстановитьПараметр("ВалютаОснования",                  РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("ЭтаСсылка",                        ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",                ДанныеЗаполнения);
	Запрос.УстановитьПараметр("Документ",                         ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ОсобенностьУчета",                 ОсобенностьУчета);
	Запрос.УстановитьПараметр("КонечныеСтатусыТТНИсходящаяЕГАИС", Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("КонечныеСтатусыЧекЕГАИС",          Документы.ЧекЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ПустаяСерия",                      ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Товары = РезультатЗапроса[РезультатЗапроса.Количество() - 3];
	АкцизныеМарки = РезультатЗапроса[РезультатЗапроса.Количество() - 1];
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Товары, ДанныеЗаполнения, Истина);
	ЗаполнитьТоварыАкцизныеМарки(ДокументОбъект, АкцизныеМарки,,Истина);
	
КонецПроцедуры

Процедура ЗаполнитьТранспортныеРеквизитыТТНИсходящей(ДокументОбъект, ТранспортнаяНакладная = Неопределено)
	
	ДанныеПеревозки = ИнтеграцияИСУТ.ДанныеПеревозки(ДокументОбъект.ДокументОснование, ТранспортнаяНакладная);
	
	ДокументОбъект.Перевозчик     = ДанныеПеревозки.Перевозчик;
	ДокументОбъект.ТипДоставки    = ДанныеПеревозки.ВидПеревозки;
	ДокументОбъект.Заказчик       = ДанныеПеревозки.ЗаказчикПеревозки;
	ДокументОбъект.Водитель       = ДанныеПеревозки.Водитель;
	ДокументОбъект.ПунктПогрузки  = ДанныеПеревозки.АдресПогрузки;
	ДокументОбъект.ПунктРазгрузки = ДанныеПеревозки.АдресДоставки;
	ДокументОбъект.Экспедитор     = ДанныеПеревозки.КурьерЭкспедитор;
	
	Если ЗначениеЗаполнено(ДанныеПеревозки.АвтомобильГосударственныйНомер) Тогда
		ДокументОбъект.НомерТранспортногоСредства = СокрЛП(СтрШаблон("%1 %2", ДанныеПеревозки.АвтомобильМарка, ДанныеПеревозки.АвтомобильГосударственныйНомер));
	КонецЕсли;
	Если ЗначениеЗаполнено(ДанныеПеревозки.ГосударственныйНомерПрицепа) Тогда
		ДокументОбъект.Прицеп     = СокрЛП(СтрШаблон("%1 %2", ДанныеПеревозки.Прицеп,          ДанныеПеревозки.ГосударственныйНомерПрицепа));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область УведомлениеОПланируемомИмпортеЕГАИС

Процедура ЗаполнитьУведомлениеОПланируемомИмпортеЕГАИСНаОснованииЗаказаПоставщику(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументЗаказПоставщику.Ссылка                КАК ДокументОснование,
	|	ДокументЗаказПоставщику.Дата                  КАК Дата,
	|	НЕ ДокументЗаказПоставщику.Проведен           КАК ЕстьОшибкиПроведен,
	|	ДокументЗаказПоставщику.Организация           КАК Организация,
	|	ДокументЗаказПоставщику.Склад                 КАК Склад
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ДокументЗаказПоставщику
	|ГДЕ
	|	ДокументЗаказПоставщику.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
				
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыДокумента.ЕстьОшибкиПроведен;
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыДокумента.ДокументОснование, ПараметрыПроверки);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
		
	КонецЕсли;
		
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина), "УведомлениеОПланируемомИмпортеЕГАИС"));
	МассивСтрок.Добавить("ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.Характеристика            КАК Характеристика,
	|	&ПустаяСерия                            КАК Серия,
	|	СУММА(ТаблицаТовары.Количество)         КАК Количество,
	|	СУММА(0)                                КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура       КАК Номенклатура,
	|	ОформленныеТовары.Характеристика     КАК Характеристика,
	|	&ПустаяСерия                         КАК Серия,
	|	-СУММА(ОформленныеТовары.Количество) КАК Количество,
	|	СУММА(0)                             КАК Сумма
	|ИЗ
	|	Документ.УведомлениеОПланируемомИмпортеЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыУведомлениеОПланируемомИмпортеЕГАИС КАК Т)
	|СГРУППИРОВАТЬ ПО
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика");
	МассивСтрок.Добавить(ШаблонСопоставление());
	МассивСтрок.Добавить(ШаблонОстатокКоличествоСумма());
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(МассивСтрок);
	
	Запрос.УстановитьПараметр("ДатаОснования",                  РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("ЭтаСсылка",                      ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",              ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ПустаяСерия",                    ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	Запрос.УстановитьПараметр("КонечныеСтатусыУведомлениеОПланируемомИмпортеЕГАИС", 
		Документы.УведомлениеОПланируемомИмпортеЕГАИС.КонечныеСтатусы());
		
	ДокументОбъект.Товары.Очистить();
	
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, Запрос.Выполнить(), ДанныеЗаполнения, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОтчетПроизводстваЕГАИС


Процедура ЗаполнитьОтчетПроизводстваЕГАИСНаОснованииСборкаТоваров(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокументСборкаТоваров.Ссылка                                      КАК ДокументОснование,
	|	ДокументСборкаТоваров.Дата                                        КАК Дата,
	|	ДокументСборкаТоваров.Дата                                        КАК ДатаПроизводства,
	|	НЕ ДокументСборкаТоваров.Проведен                                 КАК ЕстьОшибкиПроведен,
	|	ДокументСборкаТоваров.Организация                                 КАК Организация,
	|	ДокументСборкаТоваров.Склад                                       КАК Склад,
	|	ДокументСборкаТоваров.ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДокументовЕГАИС.ОтчетОПроизводствеПроизводство) КАК ВидДокумента
	|ИЗ
	|	Документ.СборкаТоваров КАК ДокументСборкаТоваров
	|ГДЕ
	|	ДокументСборкаТоваров.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РеквизитыДокумента = Запрос.Выполнить().Выбрать();
	РеквизитыДокумента.Следующий();
	
	ЭтоПерезаполнение = ЗначениеЗаполнено(ДокументОбъект.Ссылка);
	
	Если Не ЭтоПерезаполнение Тогда
				
		ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиВозможностиВводаНаОсновании();
		ПараметрыПроверки.ЕстьОшибкиПроведен = РеквизитыДокумента.ЕстьОшибкиПроведен;
		
		ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСПараметрами(
			РеквизитыДокумента.ДокументОснование, ПараметрыПроверки);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, РеквизитыДокумента);		
		ДокументОбъект.ОрганизацияЕГАИС = ОрганизацияЕГАИСПоОрганизацииИСкладу(РеквизитыДокумента.Организация, РеквизитыДокумента.Склад);
		
	КонецЕсли;
		
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина), "ОтчетОПроизводствеЕГАИС"));
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина), "АктСписанияЕГАИС"));
	МассивСтрок.Добавить(СтрШаблон(ШаблонОформленныеДокументы(Истина), "ЧекЕГАИС"));
	
	ШаблонТекстаЗапросаТоваров = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.Характеристика            КАК Характеристика,
	|	ТаблицаТовары.Серия                     КАК Серия,
	|	СУММА(ТаблицаТовары.Количество)         КАК Количество,
	|	0                                       КАК Сумма
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК ТаблицаДокумента
	|		ПО ТаблицаТовары.Ссылка = ТаблицаДокумента.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Серии КАК ТаблицаСерий
	|		ПО ТаблицаТовары.Ссылка = ТаблицаСерий.Ссылка
	|			И ТаблицаТовары.Номенклатура = ТаблицаСерий.Номенклатура 
	|			И ТаблицаТовары.Характеристика = ТаблицаСерий.Характеристика
	|			И ТаблицаТовары.Назначение = ТаблицаСерий.Назначение
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Пиво)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПивоВПотребительскихУпаковках)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукцияДо9Процентов))
	|	И ТаблицаСерий.Номенклатура ЕСТЬ NULL
	|	И ТаблицаДокумента.ХозяйственнаяОперация = &ОтборПоХозяйственнойОперации1
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура              КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика            КАК Характеристика,
	|	ТабличнаяЧасть.Серия                     КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество)         КАК Количество,
	|	0                                        КАК Сумма
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК ТаблицаДокумента
	|		ПО ТабличнаяЧасть.Ссылка = ТаблицаДокумента.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК ТаблицаТоваров
	|		ПО ТаблицаТоваров.Ссылка = ТабличнаяЧасть.Ссылка
	|			И ТаблицаТоваров.Номенклатура = ТабличнаяЧасть.Номенклатура 
	|			И ТаблицаТоваров.Характеристика = ТабличнаяЧасть.Характеристика
	|			И ТаблицаТоваров.Назначение = ТабличнаяЧасть.Назначение
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Пиво)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПивоВПотребительскихУпаковках)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукцияДо9Процентов))
	|	И ТаблицаДокумента.ХозяйственнаяОперация = &ОтборПоХозяйственнойОперации1
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура              КАК Номенклатура,
	|	ТаблицаТовары.Характеристика            КАК Характеристика,
	|	ТаблицаТовары.Серия                     КАК Серия,
	|	СУММА(ТаблицаТовары.Количество)         КАК Количество,
	|	0                                       КАК Сумма
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТаблицаТовары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Серии КАК ТаблицаСерии
	|			ПО ТаблицаТовары.Ссылка = ТаблицаСерии.Ссылка
	|			И ТаблицаТовары.Номенклатура = ТаблицаСерии.Номенклатура
	|			И ТаблицаТовары.Характеристика = ТаблицаСерии.Характеристика
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Пиво)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПивоВПотребительскихУпаковках)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукцияДо9Процентов))
	|	И ТаблицаСерии.Номенклатура ЕСТЬ NULL
	|	И ТаблицаТовары.ХозяйственнаяОперация = &ОтборПоХозяйственнойОперации2
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Номенклатура              КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика            КАК Характеристика,
	|	ТабличнаяЧасть.Серия                     КАК Серия,
	|	СУММА(ТабличнаяЧасть.Количество)         КАК Количество,
	|	0                                        КАК Сумма
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТабличнаяЧасть
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК ТаблицаТоваров 
	|			ПО ТабличнаяЧасть.Ссылка = ТаблицаТоваров.Ссылка
	|			И ТабличнаяЧасть.Номенклатура = ТаблицаТоваров.Номенклатура
	|			И ТабличнаяЧасть.Характеристика = ТаблицаТоваров.Характеристика
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Пиво)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПивоВПотребительскихУпаковках)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукцияДо9Процентов))
	|	И ТаблицаТоваров.ХозяйственнаяОперация = &ОтборПоХозяйственнойОперации2
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабличнаяЧасть.Номенклатура,
	|	ТабличнаяЧасть.Характеристика,
	|	ТабличнаяЧасть.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура       КАК Номенклатура,
	|	ОформленныеТовары.Характеристика     КАК Характеристика,
	|	ОформленныеТовары.Серия              КАК Серия,
	|	-СУММА(ОформленныеТовары.Количество) КАК Количество,
	|	0                                    КАК Сумма
	|ИЗ
	|	Документ.ОтчетОПроизводствеЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыОтчетОПроизводствеЕГАИС КАК Т)
	|	И НЕ &ДанныеПоСырью
	|
	|СГРУППИРОВАТЬ ПО
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура       КАК Номенклатура,
	|	ОформленныеТовары.Характеристика     КАК Характеристика,
	|	ОформленныеТовары.Серия              КАК Серия,
	|	-СУММА(ОформленныеТовары.Количество) КАК Количество,
	|	0                                    КАК Сумма
	|ИЗ
	|	Документ.ОтчетОПроизводствеЕГАИС.Сырье КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыОтчетОПроизводствеЕГАИС КАК Т)
	|	И &ДанныеПоСырью
	|
	|СГРУППИРОВАТЬ ПО
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура       КАК Номенклатура,
	|	ОформленныеТовары.Характеристика     КАК Характеристика,
	|	ОформленныеТовары.Серия              КАК Серия,
	|	-СУММА(ОформленныеТовары.Количество) КАК Количество,
	|	0                                    КАК Сумма
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыАктСписанияЕГАИС КАК Т)
	|СГРУППИРОВАТЬ ПО
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура       КАК Номенклатура,
	|	ОформленныеТовары.Характеристика     КАК Характеристика,
	|	ОформленныеТовары.Серия              КАК Серия,
	|	-СУММА(ОформленныеТовары.Количество) КАК Количество,
	|	0                                    КАК Сумма
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументыЧекЕГАИС КАК Т)
	|СГРУППИРОВАТЬ ПО
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия";
	
	МассивСтрок.Добавить(ШаблонТекстаЗапросаТоваров);	
	МассивСтрок.Добавить(ШаблонСопоставление());
	МассивСтрок.Добавить(ШаблонОстатокКоличествоСумма());
	МассивСтрок.Добавить(ШаблонКодыМаркировки("ОтчетОПроизводствеЕГАИС,ЧекЕГАИС", "СборкаТоваров"));
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(МассивСтрок);
	
	Запрос.УстановитьПараметр("ДатаОснования",                  РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("ЭтаСсылка",                      ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДокументОснование",              ДанныеЗаполнения);
	Запрос.УстановитьПараметр("ПустаяСерия",                    ОбщегоНазначенияИС.ПустоеЗначениеОпределяемогоТипа("СерияНоменклатуры"));
	Запрос.УстановитьПараметр("ДанныеПоСырью",                  Ложь);
	
	Запрос.УстановитьПараметр("ОтборПоХозяйственнойОперации2",  Перечисления.ХозяйственныеОперации.СборкаТоваров);
	Запрос.УстановитьПараметр("ОтборПоХозяйственнойОперации1",  Перечисления.ХозяйственныеОперации.РазборкаТоваров);
	
	Запрос.УстановитьПараметр("КонечныеСтатусыОтчетОПроизводствеЕГАИС", Документы.ОтчетОПроизводствеЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("КонечныеСтатусыАктСписанияЕГАИС",        Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("КонечныеСтатусыЧекЕГАИС",                Документы.ЧекЕГАИС.КонечныеСтатусы());
		
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.Сырье.Очистить();
	ДокументОбъект.АкцизныеМарки.Очистить();
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ИнтеграцияЕГАИС.ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.Количество()-3], ДанныеЗаполнения, Истина);
	
	Запрос.УстановитьПараметр("ДанныеПоСырью",                  Истина);
	Запрос.УстановитьПараметр("ОтборПоХозяйственнойОперации1",  Перечисления.ХозяйственныеОперации.СборкаТоваров);
	Запрос.УстановитьПараметр("ОтборПоХозяйственнойОперации2",  Перечисления.ХозяйственныеОперации.РазборкаТоваров);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаПоСкладам = РезультатЗапроса[РезультатЗапроса.Количество()-3];
	ЗаполнитьСырьеОтчетаОПроизводствеЕГАИС(ДокументОбъект, ВыборкаПоСкладам);
	
	ИдентификаторСтрокиКомплекта = ДокументОбъект.Товары[0].ИдентификаторСтроки;
	
	Для Каждого СтрокаСырья Из ДокументОбъект.Сырье Цикл
		СтрокаСырья.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		СтрокаСырья.ИдентификаторСтрокиТовары = ИдентификаторСтрокиКомплекта;
	КонецЦикла;
	
	АкцизныеМарки = РезультатЗапроса[РезультатЗапроса.Количество() - 1];
	ЗаполнитьТоварыАкцизныеМарки(ДокументОбъект, АкцизныеМарки,"ШтрихкодыУпаковок",,"Сырье");
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти

#Область ПроверкаИПодборВПрикладныхДокументах

Процедура ПодготовитьРезультатПроверки(РезультатПроверки)
	
	ДеревоУпаковок = РезультатПроверки.ДеревоМаркируемойПродукции;
	
	ТаблицаШтрихкодов = Новый ТаблицаЗначений;
	ТаблицаШтрихкодов.Колонки.Добавить("ШтрихкодУпаковки", Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	ТаблицаШтрихкодов.Колонки.Добавить("Штрихкод", Новый ОписаниеТипов("Строка"));
	
	Товары = Новый ТаблицаЗначений;
	Товары.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Товары.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Товары.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	Товары.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15, 6)));
	
	Для Каждого СтрокаДерева Из ДеревоУпаковок.Строки Цикл
		Если ТипЗнч(СтрокаДерева.ТипУпаковки) = Тип("ПеречислениеСсылка.ПрочиеЗоныПересчетаАлкогольнойПродукции") Тогда
			Для Каждого СтрокаВложение Из СтрокаДерева.Строки Цикл
				ТаблицаШтрихкодов.Добавить().ШтрихкодУпаковки = СтрокаВложение.ШтрихкодУпаковки;
			КонецЦикла;
		Иначе
			ТаблицаШтрихкодов.Добавить().ШтрихкодУпаковки = СтрокаДерева.ШтрихкодУпаковки;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьТаблицуПодобраннойПродукции(Товары, ДеревоУпаковок);
	Товары.Свернуть("Номенклатура,Характеристика,Серия", "Количество");
	Товары.Колонки.Количество.Имя = "КоличествоПодобрано";
	
	РезультатПроверки.Вставить("ВидПродукцииИС", Перечисления.ВидыПродукцииИС.Алкогольная);
	РезультатПроверки.Вставить("ТаблицаШтрихкодовВерхнегоУровня", ТаблицаШтрихкодов);
	РезультатПроверки.Вставить("ТаблицаПодобраннойПровереннойПродукции", Товары);
	РезультатПроверки.Вставить("Сценарий", 0);



КонецПроцедуры

Процедура ЗаполнитьТаблицуПодобраннойПродукции(Товары, СтрокиДерева)
	
	Для Каждого СтрокаДерева Из СтрокиДерева.Строки Цикл
		Если ТипЗнч(СтрокаДерева.ТипУпаковки) = Тип("ПеречислениеСсылка.ПрочиеЗоныПересчетаАлкогольнойПродукции") Тогда
			ЗаполнитьТаблицуПодобраннойПродукции(Товары, СтрокаДерева);
		ИначеЕсли СтрокаДерева.Строки.Количество() Тогда
			ЗаполнитьТаблицуПодобраннойПродукции(Товары, СтрокаДерева);
		Иначе
			НоваяСтрока = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДерева);
			Если СтрокаДерева.Коэффициент <> Неопределено И СтрокаДерева.Коэффициент > 0 Тогда
				НоваяСтрока.Количество = СтрокаДерева.Коэффициент;
			КонецЕсли;
			Если НоваяСтрока.Количество = 0 Тогда
				НоваяСтрока.Количество = 1;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ТаблицаКОпределениюСправок2(ПроверяемыйДокумент, ИмяТаблицыТовары, ИмяТаблицыСерии)
	
	ИмяДокумента = ПроверяемыйДокумент.Метаданные().Имя;
	ТекстЗапроса = "";
	Если ИмяДокумента = "СборкаТоваров" Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Серия КАК Серия,
		|	СУММА(Товары.Количество) КАК Количество
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.СборкаТоваров.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Ссылка
		|	И Товары.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СборкаТоваров)
		|СГРУППИРОВАТЬ ПО
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Серия
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СборкаТоваров.Номенклатура КАК Номенклатура,
		|	СборкаТоваров.Характеристика КАК Характеристика,
		|	СборкаТоваров.Серия КАК Серия,
		|	СборкаТоваров.Количество КАК Количество
		|ИЗ
		|	Документ.СборкаТоваров КАК СборкаТоваров
		|ГДЕ
		|	СборкаТоваров.Ссылка = &Ссылка
		|	И СборкаТоваров.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РазборкаТоваров)
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Серии.Номенклатура КАК Номенклатура,
		|	Серии.Характеристика КАК Характеристика,
		|	Серии.Серия КАК Серия,
		|	СУММА(Серии.Количество) - ЕСТЬNULL(Товары.Количество, 0) КАК Количество
		|ПОМЕСТИТЬ Серии
		|ИЗ
		|	Документ.СборкаТоваров.Серии КАК Серии
		|	ЛЕВОЕ СОЕДИНЕНИЕ Товары КАК Товары
		|	ПО Товары.Номенклатура = Серии.Номенклатура
		|	И Товары.Характеристика = Серии.Характеристика
		|	И Товары.Серия = Серии.Серия
		|ГДЕ
		|	Серии.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	Серии.Номенклатура,
		|	Серии.Характеристика,
		|	Серии.Серия,
		|	Товары.Количество
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Серия КАК Серия,
		|	Товары.Количество КАК Количество
		|ПОМЕСТИТЬ ТоварыСерии
		|ИЗ
		|	Товары КАК Товары
		|ГДЕ
		|	Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Серии.Номенклатура КАК Номенклатура,
		|	Серии.Характеристика КАК Характеристика,
		|	Серии.Серия КАК Серия,
		|	Серии.Количество КАК Количество
		|ИЗ
		|	Серии КАК Серии
		|ГДЕ
		|	Серии.Количество > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Серия КАК Серия,
		|	Товары.Количество - СУММА(Серии.Количество) КАК Количество
		|ИЗ
		|	Товары КАК Товары
		|	ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
		|	ПО Товары.Номенклатура = Серии.Номенклатура
		|	И Товары.Характеристика = Серии.Характеристика
		|ГДЕ
		|	Товары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Серия,
		|	Товары.Количество
		|ИМЕЮЩИЕ
		|	Товары.Количество > СУММА(Серии.Количество)
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыСерии.Номенклатура КАК Номенклатура,
		|	ТоварыСерии.Характеристика КАК Характеристика,
		|	ТоварыСерии.Серия КАК Серия,
		|	СУММА(ТоварыСерии.Количество) КАК Количество
		|ИЗ
		|	ТоварыСерии КАК ТоварыСерии
		|ГДЕ
		|	ТоварыСерии.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция)
		|	И ТоварыСерии.Номенклатура.ВидАлкогольнойПродукции.маркируемый
		|СГРУППИРОВАТЬ ПО
		|	ТоварыСерии.Номенклатура,
		|	ТоварыСерии.Характеристика,
		|	ТоварыСерии.Серия
		|";
	ИначеЕсли ИмяТаблицыСерии = "" Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Серия КАК Серия,
		|	СУММА(Товары.Количество) КАК Количество
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Ссылка
		|	И Товары.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция)
		|	И Товары.Номенклатура.ВидАлкогольнойПродукции.маркируемый
		|СГРУППИРОВАТЬ ПО
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Серия
		|";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Товары", ИмяТаблицыТовары);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РеализацияТоваровУслуг", ИмяДокумента);
	Иначе
		ТекстЗапроса = "ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Серия КАК Серия,
		|	СУММА(Товары.Количество) КАК Количество
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
		|ГДЕ
		|	Товары.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Серия
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Серии.Номенклатура КАК Номенклатура,
		|	Серии.Характеристика КАК Характеристика,
		|	Серии.Серия КАК Серия,
		|	СУММА(Серии.Количество) - ЕСТЬNULL(Товары.Количество, 0) КАК Количество
		|ПОМЕСТИТЬ Серии
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Серии КАК Серии
		|	ЛЕВОЕ СОЕДИНЕНИЕ Товары КАК Товары
		|	ПО Товары.Номенклатура = Серии.Номенклатура
		|	И Товары.Характеристика = Серии.Характеристика
		|	И Товары.Серия = Серии.Серия
		|ГДЕ
		|	Серии.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	Серии.Номенклатура,
		|	Серии.Характеристика,
		|	Серии.Серия,
		|	Товары.Количество
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Серия КАК Серия,
		|	Товары.Количество КАК Количество
		|ПОМЕСТИТЬ ТоварыСерии
		|ИЗ
		|	Товары КАК Товары
		|ГДЕ
		|	Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Серии.Номенклатура КАК Номенклатура,
		|	Серии.Характеристика КАК Характеристика,
		|	Серии.Серия КАК Серия,
		|	Серии.Количество КАК Количество
		|ИЗ
		|	Серии КАК Серии
		|ГДЕ
		|	Серии.Количество > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Серия КАК Серия,
		|	Товары.Количество - СУММА(Серии.Количество) КАК Количество
		|ИЗ
		|	Товары КАК Товары
		|	ЛЕВОЕ СОЕДИНЕНИЕ Серии КАК Серии
		|	ПО Товары.Номенклатура = Серии.Номенклатура
		|	И Товары.Характеристика = Серии.Характеристика
		|ГДЕ
		|	Товары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	Товары.Номенклатура,
		|	Товары.Характеристика,
		|	Товары.Серия,
		|	Товары.Количество
		|ИМЕЮЩИЕ
		|	Товары.Количество > СУММА(Серии.Количество)
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыСерии.Номенклатура КАК Номенклатура,
		|	ТоварыСерии.Характеристика КАК Характеристика,
		|	ТоварыСерии.Серия КАК Серия,
		|	СУММА(ТоварыСерии.Количество) КАК Количество
		|ИЗ
		|	ТоварыСерии КАК ТоварыСерии
		|ГДЕ
		|	ТоварыСерии.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция)
		|	И ТоварыСерии.Номенклатура.ВидАлкогольнойПродукции.маркируемый
		|СГРУППИРОВАТЬ ПО
		|	ТоварыСерии.Номенклатура,
		|	ТоварыСерии.Характеристика,
		|	ТоварыСерии.Серия
		|";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Товары", ИмяТаблицыТовары);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Серии", ИмяТаблицыСерии);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РеализацияТоваровУслуг", ИмяДокумента);
	КонецЕсли;
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", ПроверяемыйДокумент);
	Таблица = Запрос.Выполнить().Выгрузить();
	Таблица.Колонки.Добавить("АлкогольнаяПродукция", Новый ОписаниеТипов("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС"));
	Таблица.Колонки.Добавить("Маркируемая", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("НеупакованнаяПродукция", Новый ОписаниеТипов("Булево"));
	Таблица.Колонки.Добавить("ДоступноДробноеКоличество", Новый ОписаниеТипов("Булево"));
	Возврат Таблица;
	
КонецФункции

Функция ШтрихкодыУпаковокОбъекта(ПроверяемыйДокумент, ИмяТаблицыШтрихкодов)
	
	ТаблицаШтрихкодов = Новый ТаблицаЗначений;
	ТаблицаШтрихкодов.Колонки.Добавить("ШтрихкодУпаковки",               Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	ТаблицаШтрихкодов.Колонки.Добавить("ШтрихкодРодительскойУпаковки",   Новый ОписаниеТипов("СправочникСсылка.ШтрихкодыУпаковокТоваров"));
	ТаблицаШтрихкодов.Колонки.Добавить("ИдентификаторСтроки",            Метаданные.ОпределяемыеТипы.УникальныйИдентификаторИС.Тип);
	ТаблицаШтрихкодов.Колонки.Добавить("АлкогольнаяПродукция",           Новый ОписаниеТипов("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС"));
	ТаблицаШтрихкодов.Колонки.Добавить("Справка2",                       Новый ОписаниеТипов("СправочникСсылка.Справки2ЕГАИС"));
	ТаблицаШтрихкодов.Колонки.Добавить("ОрганизацияЕГАИС",               Новый ОписаниеТипов("СправочникСсылка.КлассификаторОрганизацийЕГАИС"));
	ТаблицаШтрихкодов.Колонки.Добавить("ЧастичноеВыбытиеКоличество",     ОбщегоНазначения.ОписаниеТипаЧисло(18, 8));
	ТаблицаШтрихкодов.Колонки.Добавить("ЧастичноеВыбытиеВариантУчета",   Новый ОписаниеТипов("ПеречислениеСсылка.ВариантыУчетаЧастичногоВыбытияИС"));
	ТаблицаШтрихкодов.Колонки.Добавить("ЧастичноеВыбытиеНоменклатура",   Метаданные.ОпределяемыеТипы.Номенклатура.Тип);
	ТаблицаШтрихкодов.Колонки.Добавить("ЧастичноеВыбытиеХарактеристика", Метаданные.ОпределяемыеТипы.ХарактеристикаНоменклатуры.Тип);
	ТаблицаШтрихкодов.Колонки.Добавить("ВыбытиеБутылки",                 Новый ОписаниеТипов("Булево"));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ПроверяемыйДокумент);
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ШтрихкодыУпаковок.ШтрихкодУпаковки КАК ШтрихкодУпаковки
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ШтрихкодыУпаковок КАК ШтрихкодыУпаковок
	|ГДЕ
	|	ШтрихкодыУпаковок.Ссылка = &Ссылка";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РеализацияТоваровУслуг", ПроверяемыйДокумент.Метаданные().Имя);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ШтрихкодыУпаковок", ИмяТаблицыШтрихкодов);
	Запрос.Текст = ТекстЗапроса;
	ШтрихкодыУпаковок = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ШтрихкодУпаковки");
	ШтрихкодированиеИСПереопределяемый.ВыделитьШтрихкодыСодержащиеВидыПродукции(
		ШтрихкодыУпаковок, Перечисления.ВидыПродукцииИС.Алкогольная);
	
	Для Каждого ШтрихкодУпаковки Из ШтрихкодыУпаковок Цикл
		ТаблицаШтрихкодов.Добавить().ШтрихкодУпаковки = ШтрихкодУпаковки;
	КонецЦикла;
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	ИсходныеДанные.ОрганизацияЕГАИС               КАК ОрганизацияЕГАИС,
		|	ИсходныеДанные.ИдентификаторСтроки            КАК ИдентификаторСтроки,
		|	ИсходныеДанные.АлкогольнаяПродукция           КАК АлкогольнаяПродукция,
		|	ИсходныеДанные.Справка2                       КАК Справка2,
		|	ИсходныеДанные.ШтрихкодУпаковки               КАК ШтрихкодУпаковки,
		|	ИсходныеДанные.ШтрихкодРодительскойУпаковки   КАК ШтрихкодРодительскойУпаковки,
		|	ИсходныеДанные.ЧастичноеВыбытиеКоличество     КАК ЧастичноеВыбытиеКоличество,
		|	ИсходныеДанные.ЧастичноеВыбытиеВариантУчета   КАК ЧастичноеВыбытиеВариантУчета,
		|	ИсходныеДанные.ЧастичноеВыбытиеНоменклатура   КАК ЧастичноеВыбытиеНоменклатура,
		|	ИсходныеДанные.ЧастичноеВыбытиеХарактеристика КАК ЧастичноеВыбытиеХарактеристика,
		|	ИсходныеДанные.ВыбытиеБутылки                 КАК ВыбытиеБутылки
		|ПОМЕСТИТЬ ВТВложенныеШтрихкодыИсходныеДанные
		|ИЗ
		|	&ИсходныеДанные КАК ИсходныеДанные");
	
	ПараметрыФормированияТекстаЗапроса = ШтрихкодированиеЕГАИС.ПараметрыФормированияТекстаЗапросаВложенныхШтрихкодов();
	ПараметрыФормированияТекстаЗапроса.ДокументСсылка                  = Неопределено;
	ПараметрыФормированияТекстаЗапроса.ИспользоватьИдентификаторСтроки = Ложь;
	ТекстыЗапроса.Добавить(
		ШтрихкодированиеЕГАИС.ТекстЗапросаВложенныхШтрихкодовПоДокументу(ПараметрыФормированияТекстаЗапроса),
		"ВложенныеШтрихкоды");
	
	МенеджерВременнойТаблицы = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременнойТаблицы;
	Запрос.УстановитьПараметр("ИсходныеДанные",           ТаблицаШтрихкодов);
	Запрос.УстановитьПараметр("ПустыеЗначенияНоменклатуры", ИнтеграцияИС.НезаполненныеЗначенияОпределяемогоТипа("Номенклатура"));
	РезультатыЗапроса = ОбщегоНазначенияИС.ВыполнитьПакетЗапросов(Запрос, ТекстыЗапроса);
	
	ШтрихкодыУпаковок = ШтрихкодированиеЕГАИС.ВложенныеШтрихкодыУпаковокПоВыборкеИМенеджеруВТ(
		РезультатыЗапроса.ВложенныеШтрихкоды.Выбрать(), МенеджерВременнойТаблицы);
	Возврат ШтрихкодыУпаковок.ДеревоУпаковок;
	
КонецФункции

#КонецОбласти

#Область ДанныеДокументаОснования

Процедура СформироватьДанныеОснованияСписаниеНедостачТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|		ТабличнаяЧасть.Характеристика КАК Характеристика,
	|		ТабличнаяЧасть.Серия КАК Серия,
	|		ТабличнаяЧасть.Количество КАК Количество
	|	ИЗ
	|		Документ.СписаниеНедостачТоваров.Товары КАК ТабличнаяЧасть
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|			ПО (СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка)
	|	ГДЕ
	|		ТабличнаяЧасть.Ссылка = &ДокументОснование
	|		И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|		И СправочникНоменклатура.АлкогольнаяПродукция
	|		И СправочникВидыАлкогольнойПродукции.Маркируемый
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОформленныеТовары.Номенклатура,
	|		ОформленныеТовары.Характеристика,
	|		ОформленныеТовары.Серия,
	|		-ОформленныеТовары.Количество
	|	ИЗ
	|		Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|	ГДЕ
	|		ОформленныеТовары.Ссылка В
	|				(ВЫБРАТЬ
	|					Т.Ссылка
	|				ИЗ
	|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияСборкиТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ОтчетОПроизводствеЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия КАК Серия,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ОстатокКОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|		ПО СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Серии КАК Серии
	|		ПО (Серии.Ссылка = &ДокументОснование)
	|			И (Серии.Номенклатура = Товары.Номенклатура)
	|			И (Серии.Характеристика = Товары.Характеристика)
	|			И (Серии.Назначение = Товары.Назначение)
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Пиво)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПивоВПотребительскихУпаковках)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукцияДо9Процентов))
	|	И Серии.Номенклатура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Шапка.Номенклатура КАК Номенклатура,
	|	Шапка.Характеристика КАК Характеристика,
	|	Шапка.Серия КАК Серия,
	|	Шапка.Количество КАК Количество
	|ИЗ
	|	Документ.СборкаТоваров КАК Шапка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Шапка.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|		ПО СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Серии КАК ТабличнаяЧастьСерии
	|		ПО (ТабличнаяЧастьСерии.Ссылка = &ДокументОснование)
	|		И (ТабличнаяЧастьСерии.Номенклатура = Шапка.Номенклатура)
	|		И (ТабличнаяЧастьСерии.Характеристика = Шапка.Характеристика)
	|		И (ТабличнаяЧастьСерии.Назначение = Шапка.Назначение)
	|ГДЕ
	|	Шапка.Ссылка = &ДокументОснование
	|	И (СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Пиво)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПивоВПотребительскихУпаковках)
	|		ИЛИ СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукцияДо9Процентов))
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И ТабличнаяЧастьСерии.Номенклатура ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Серия,
	|	Серии.Количество
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК Серии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|		ПО СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка
	|ГДЕ
	|	Серии.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И СправочникВидыАлкогольнойПродукции.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|		(ВЫБРАТЬ
	|			Т.Ссылка
	|		ИЗ
	|			ОформленныеДокументы КАК Т)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстатокКОформлению.Номенклатура КАК Номенклатура,
	|	ОстатокКОформлению.Характеристика КАК Характеристика,
	|	ОстатокКОформлению.Серия КАК Серия,
	|	СУММА(ОстатокКОформлению.Количество) КАК Количество
	|ИЗ ОстатокКОформлению КАК ОстатокКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ОстатокКОформлению.Номенклатура,
	|	ОстатокКОформлению.Характеристика,
	|	ОстатокКОформлению.Серия";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияРеализацияТоваровУслуг(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТаблицаДокументы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ОформленныеДокументы
		|ИЗ
		|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
		|ГДЕ
		|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
		|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
		|	И ТаблицаДокументы.Проведен
		|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|		Товары.Номенклатура КАК Номенклатура,
		|		Товары.Характеристика КАК Характеристика,
		|		Товары.Серия КАК Серия,
		|		Товары.Количество КАК Количество
		|	ИЗ
		|		Документ.РеализацияТоваровУслуг.Товары КАК Товары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
		|			ПО СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Серии КАК Серии
		|			ПО (Серии.Ссылка = &ДокументОснование)
		|				И (Серии.Номенклатура = Товары.Номенклатура)
		|				И (Серии.Характеристика = Товары.Характеристика)
		|				И (Серии.Назначение = Товары.Назначение)
		|				И (Серии.Склад = Товары.Склад)
		|	ГДЕ
		|		Товары.Ссылка = &ДокументОснование
		|		И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|		И СправочникНоменклатура.АлкогольнаяПродукция
		|		И Серии.Номенклатура ЕСТЬ NULL
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Серии.Номенклатура,
		|		Серии.Характеристика,
		|		Серии.Серия,
		|		Серии.Количество
		|	ИЗ
		|		Документ.РеализацияТоваровУслуг.Серии КАК Серии
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
		|			ПО СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка
		|	ГДЕ
		|		Серии.Ссылка = &ДокументОснование
		|		И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|		И СправочникНоменклатура.АлкогольнаяПродукция
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОформленныеТовары.Номенклатура,
		|		ОформленныеТовары.Характеристика,
		|		ОформленныеТовары.Серия,
		|		-ОформленныеТовары.Количество
		|	ИЗ
		|		Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
		|	ГДЕ
		|		ОформленныеТовары.Ссылка В
		|				(ВЫБРАТЬ
		|					Т.Ссылка
		|				ИЗ
		|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Серия";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияОприходованияИзлишковТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТаблицаДокументы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ОформленныеДокументы
		|ИЗ
		|	Документ.АктПостановкиНаБалансЕГАИС КАК ТаблицаДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
		|ГДЕ
		|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
		|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
		|	И ТаблицаДокументы.Проведен
		|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
		|		ТабличнаяЧасть.Характеристика КАК Характеристика,
		|		ТабличнаяЧасть.Серия КАК Серия,
		|		ТабличнаяЧасть.Количество КАК Количество
		|	ИЗ
		|		Документ.ОприходованиеИзлишковТоваров.Товары КАК ТабличнаяЧасть
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
		|			ПО СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка
		|	ГДЕ
		|		ТабличнаяЧасть.Ссылка = &ДокументОснование
		|		И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|		И СправочникНоменклатура.АлкогольнаяПродукция
		|		И СправочникВидыАлкогольнойПродукции.Маркируемый
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОформленныеТовары.Номенклатура,
		|		ОформленныеТовары.Характеристика,
		|		ОформленныеТовары.Серия,
		|		-ОформленныеТовары.Количество
		|	ИЗ
		|		Документ.АктПостановкиНаБалансЕГАИС.Товары КАК ОформленныеТовары
		|	ГДЕ
		|		ОформленныеТовары.Ссылка В
		|				(ВЫБРАТЬ
		|					Т.Ссылка
		|				ИЗ
		|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Серия ";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.АктПостановкиНаБалансЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

Процедура СформироватьДанныеОснованияПересортицаТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	МетаданныеДокументаЕГАИС = ДокументЕГАИС.Метаданные();
	ИмяДокументаЕГАИС = МетаданныеДокументаЕГАИС.Имя;
	
	ПостфиксРеквизитов = "";
	Если МетаданныеДокументаЕГАИС = Метаданные.Документы.АктПостановкиНаБалансЕГАИС Тогда
		ПостфиксРеквизитов = "Оприходование";
	КонецЕсли;
	ИмяТаблицыШапки  = СтрШаблон("Документ.%1", ИмяДокументаЕГАИС);
	ИмяТаблицыТовары = СтрШаблон("Документ.%1.Товары", ИмяДокументаЕГАИС);
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
		|	ТаблицаДокументы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ОформленныеДокументы
		|ИЗ
		|	&ИмяТаблицыШапки КАК ТаблицаДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
		|ГДЕ
		|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
		|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
		|	И ТаблицаДокументы.Проведен
		|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
		|		ТабличнаяЧасть.Характеристика КАК Характеристика,
		|		ТабличнаяЧасть.Серия КАК Серия,
		|		ТабличнаяЧасть.Количество КАК Количество
		|	ИЗ
		|		Документ.ПересортицаТоваров.Товары КАК ТабличнаяЧасть
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
		|			ПО СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка
		|	ГДЕ
		|		ТабличнаяЧасть.Ссылка = &ДокументОснование
		|		И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|		И СправочникНоменклатура.АлкогольнаяПродукция
		|		И СправочникВидыАлкогольнойПродукции.Маркируемый
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОформленныеТовары.Номенклатура,
		|		ОформленныеТовары.Характеристика,
		|		ОформленныеТовары.Серия,
		|		-ОформленныеТовары.Количество
		|	ИЗ
		|		&ИмяТаблицыТовары КАК ОформленныеТовары
		|	ГДЕ
		|		ОформленныеТовары.Ссылка В
		|				(ВЫБРАТЬ
		|					Т.Ссылка
		|				ИЗ
		|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Серия";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяТаблицыШапки", ИмяТаблицыШапки);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяТаблицыТовары", ИмяТаблицыТовары);
	Если ПостфиксРеквизитов <> "" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТабличнаяЧасть.Номенклатура", "ТабличнаяЧасть.Номенклатура" + ПостфиксРеквизитов);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТабличнаяЧасть.Характеристика", "ТабличнаяЧасть.Характеристика" + ПостфиксРеквизитов);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТабличнаяЧасть.Серия", "ТабличнаяЧасть.Серия" + ПостфиксРеквизитов);
	КонецЕсли;
	
КонецПроцедуры

// Заполняет ТЧ Сырье документа Отчет о производстве ЕГАИС на основании данных переданного запроса
// 
// Параметры:
//  ДокументОбъект - ДокументОбъект.ОтчетОПроизводствеЕГАИС - документ для дозаполнения
//  РезультатЗапроса - РезультатЗапроса - данные для заполнения
//
Процедура ЗаполнитьСырьеОтчетаОПроизводствеЕГАИС(ДокументОбъект, РезультатЗапроса)
	
	ВыборкаТовары = РезультатЗапроса.Выбрать();
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоЕдиниц");
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		НоваяСтрокаСырье = ДокументОбъект.Сырье.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСырье, ВыборкаТовары);	
		
		ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НоваяСтрокаСырье, "ИдентификаторСтроки")
				И НЕ ЗначениеЗаполнено(НоваяСтрокаСырье.ИдентификаторСтроки) Тогда
			НоваяСтрокаСырье.ИдентификаторСтроки = ИдентификаторСтроки;
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НоваяСтрокаСырье, "ИдентификаторСтрокиТовары")
				И НЕ ЗначениеЗаполнено(НоваяСтрокаСырье.ИдентификаторСтрокиТовары) Тогда
			НоваяСтрокаСырье.ИдентификаторСтрокиТовары = ИдентификаторСтроки;
		КонецЕсли;
		
		ОбработкаТабличнойЧастиКлиентСервер.ПересчитатьКоличествоЕдиницВСтрокеТЧ(НоваяСтрокаСырье, 
			СтруктураДействий, 
			КэшированныеЗначения);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьДанныеОснованияПередачаТоваровМеждуОрганизациями(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТаблицаДокументы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ОформленныеДокументы
		|ИЗ
		|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
		|ГДЕ
		|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
		|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
		|	И ТаблицаДокументы.Проведен
		|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
		|		ТабличнаяЧасть.Характеристика КАК Характеристика,
		|		ТабличнаяЧасть.Серия КАК Серия,
		|		ТабличнаяЧасть.Количество КАК Количество
		|	ИЗ
		|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
		|			ПО СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка
		|	ГДЕ
		|		ТабличнаяЧасть.Ссылка = &ДокументОснование
		|		И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|		И СправочникНоменклатура.АлкогольнаяПродукция
		|		И СправочникВидыАлкогольнойПродукции.Маркируемый
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОформленныеТовары.Номенклатура,
		|		ОформленныеТовары.Характеристика,
		|		ОформленныеТовары.Серия,
		|		-ОформленныеТовары.Количество
		|	ИЗ
		|		Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
		|	ГДЕ
		|		ОформленныеТовары.Ссылка В
		|				(ВЫБРАТЬ
		|					Т.Ссылка
		|				ИЗ
		|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Серия ";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияОтчетаОРозничныхПродажах(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТаблицаДокументы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ОформленныеДокументы
		|ИЗ
		|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
		|ГДЕ
		|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
		|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
		|	И ТаблицаДокументы.Проведен
		|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|		Товары.Номенклатура КАК Номенклатура,
		|		Товары.Характеристика КАК Характеристика,
		|		Товары.Серия КАК Серия,
		|		Товары.Количество КАК Количество
		|	ИЗ
		|		Документ.ОтчетОРозничныхПродажах.Товары КАК Товары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
		|			ПО СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Серии КАК Серии
		|			ПО (Серии.Ссылка = &ДокументОснование)
		|				И (Серии.Номенклатура = Товары.Номенклатура)
		|				И (Серии.Характеристика = Товары.Характеристика)
		|				И (Серии.Помещение = Товары.Помещение)
		|	ГДЕ
		|		Товары.Ссылка = &ДокументОснование
		|		И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|		И СправочникНоменклатура.АлкогольнаяПродукция
		|		И Серии.Номенклатура ЕСТЬ NULL
		|		И СправочникВидыАлкогольнойПродукции.Маркируемый
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Серии.Номенклатура,
		|		Серии.Характеристика,
		|		Серии.Серия,
		|		Серии.Количество
		|	ИЗ
		|		Документ.ОтчетОРозничныхПродажах.Серии КАК Серии
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
		|			ПО СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка
		|	ГДЕ
		|		Серии.Ссылка = &ДокументОснование
		|		И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|		И СправочникНоменклатура.АлкогольнаяПродукция
		|		И СправочникВидыАлкогольнойПродукции.Маркируемый
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОформленныеТовары.Номенклатура,
		|		ОформленныеТовары.Характеристика,
		|		ОформленныеТовары.Серия,
		|		-ОформленныеТовары.Количество
		|	ИЗ
		|		Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
		|	ГДЕ
		|		ОформленныеТовары.Ссылка В
		|				(ВЫБРАТЬ
		|					Т.Ссылка
		|				ИЗ
		|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Серия";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры 

Процедура СформироватьДанныеОснованияВозвратаТоваровМеждуОрганизациями(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТаблицаДокументы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ОформленныеДокументы
		|ИЗ
		|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
		|ГДЕ
		|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
		|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
		|	И ТаблицаДокументы.Проведен
		|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТабличнаяЧасть.Номенклатура КАК Номенклатура,
		|		ТабличнаяЧасть.Характеристика КАК Характеристика,
		|		ТабличнаяЧасть.Серия КАК Серия,
		|		ТабличнаяЧасть.Количество КАК Количество
		|	ИЗ
		|		Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ТабличнаяЧасть
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
		|			ПО СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка
		|	ГДЕ
		|		ТабличнаяЧасть.Ссылка = &ДокументОснование
		|		И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|		И СправочникНоменклатура.АлкогольнаяПродукция
		|		И СправочникВидыАлкогольнойПродукции.Маркируемый
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОформленныеТовары.Номенклатура,
		|		ОформленныеТовары.Характеристика,
		|		ОформленныеТовары.Серия,
		|		-ОформленныеТовары.Количество
		|	ИЗ
		|		Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
		|	ГДЕ
		|		ОформленныеТовары.Ссылка В
		|				(ВЫБРАТЬ
		|					Т.Ссылка
		|				ИЗ
		|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Серия ";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияВозвратаТоваровПоставщику(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТаблицаДокументы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ОформленныеДокументы
		|ИЗ
		|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
		|ГДЕ
		|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
		|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
		|	И ТаблицаДокументы.Проведен
		|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|		Товары.Номенклатура КАК Номенклатура,
		|		Товары.Характеристика КАК Характеристика,
		|		Товары.Серия КАК Серия,
		|		Товары.Количество КАК Количество
		|	ИЗ
		|		Документ.ВозвратТоваровПоставщику.Товары КАК Товары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
		|			ПО СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Серии КАК Серии
		|			ПО (Серии.Ссылка = &ДокументОснование)
		|				И (Серии.Номенклатура = Товары.Номенклатура)
		|				И (Серии.Характеристика = Товары.Характеристика)
		|				И (Серии.Назначение = Товары.Назначение)
		|	ГДЕ
		|		Товары.Ссылка = &ДокументОснование
		|		И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|		И СправочникНоменклатура.АлкогольнаяПродукция
		|		И СправочникВидыАлкогольнойПродукции.Маркируемый
		|		И Серии.Номенклатура ЕСТЬ NULL
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Серии.Номенклатура,
		|		Серии.Характеристика,
		|		Серии.Серия,
		|		Серии.Количество
		|	ИЗ
		|		Документ.ВозвратТоваровПоставщику.Серии КАК Серии
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ПО Серии.Номенклатура = СправочникНоменклатура.Ссылка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
		|			ПО СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка
		|	ГДЕ
		|		Серии.Ссылка = &ДокументОснование
		|		И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|		И СправочникНоменклатура.АлкогольнаяПродукция
		|		И СправочникВидыАлкогольнойПродукции.Маркируемый
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОформленныеТовары.Номенклатура,
		|		ОформленныеТовары.Характеристика,
		|		ОформленныеТовары.Серия,
		|		-ОформленныеТовары.Количество
		|	ИЗ
		|		Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
		|	ГДЕ
		|		ОформленныеТовары.Ссылка В
		|				(ВЫБРАТЬ
		|					Т.Ссылка
		|				ИЗ
		|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Серия";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияВозвратТоваровОтКлиента(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.ЧекЕГАИСВозврат КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия) КАК Серия,
	|	СУММА(ЕСТЬNULL(Серии.Количество, Товары.Количество)) КАК Количество
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.Серии КАК Серии
	|		ПО (Серии.Ссылка = &ДокументОснование)
	|			И (Серии.Номенклатура = Товары.Номенклатура)
	|			И (Серии.Характеристика = Товары.Характеристика)
	|			И (Серии.НоменклатураОприходование = Товары.НоменклатураОприходование)
	|			И (Серии.ХарактеристикаОприходование = Товары.ХарактеристикаОприходование)
	|			И (Серии.Назначение = Товары.Назначение)
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И СправочникНоменклатура.ВидАлкогольнойПродукции.Маркируемый
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-СУММА(ОформленныеТовары.Количество)
	|ИЗ
	|	Документ.ЧекЕГАИСВозврат.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументы КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия";
	
	Запрос.УстановитьПараметр("КонечныеСтатусы",   Документы.ЧекЕГАИСВозврат.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка",         ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();

КонецПроцедуры

Процедура СформироватьДанныеОснованияВнутреннееПотребление(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)

	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыАктСписанияЕГАИС
	|ИЗ
	|	Документ.АктСписанияЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусыАктСписанияЕГАИС)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументыЧекЕГАИС
	|ИЗ
	|	Документ.ЧекЕГАИС КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
	|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
	|	И ТаблицаДокументы.Проведен
	|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусыЧекЕГАИС)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(Серии.Серия, Товары.Серия) КАК Серия,
	|	ЕСТЬNULL(Серии.Количество, Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ВнутреннееПотребление.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
	|		ПО (СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотребление.Серии КАК Серии
	|		ПО (Серии.Ссылка = &ДокументОснование)
	|			И (Серии.Номенклатура = Товары.Номенклатура)
	|			И (Серии.Характеристика = Товары.Характеристика)
	|			И (Серии.Назначение = Товары.Назначение)
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И СправочникНоменклатура.АлкогольнаяПродукция
	|	И СправочникВидыАлкогольнойПродукции.Маркируемый
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.АктСписанияЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументыАктСписанияЕГАИС КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Характеристика,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество
	|ИЗ
	|	Документ.ЧекЕГАИС.Товары КАК ОформленныеТовары
	|ГДЕ
	|	ОформленныеТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				Т.Ссылка
	|			ИЗ
	|				ОформленныеДокументыЧекЕГАИС КАК Т);
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия КАК Серия,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия";
	
	Запрос.УстановитьПараметр("ЭтаСсылка",                       ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование",               ДокументОснование);
	Запрос.УстановитьПараметр("КонечныеСтатусыАктСписанияЕГАИС", Документы.АктСписанияЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("КонечныеСтатусыЧекЕГАИС",         Документы.ЧекЕГАИС.КонечныеСтатусы());
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

Процедура СформироватьДанныеОснованияПеремещенияТоваров(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТаблицаДокументы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ОформленныеДокументы
		|ИЗ
		|	Документ.ТТНИсходящаяЕГАИС КАК ТаблицаДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
		|ГДЕ
		|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
		|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
		|	И ТаблицаДокументы.Проведен
		|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|		Товары.Номенклатура КАК Номенклатура,
		|		Товары.Характеристика КАК Характеристика,
		|		ЕСТЬNULL(Серии.Серия, Товары.Серия) КАК Серия,
		|		ЕСТЬNULL(Серии.Количество, Товары.Количество) КАК Количество
		|	ИЗ
		|		Документ.ПеремещениеТоваров.Товары КАК Товары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
		|			ПО СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Серии КАК Серии
		|			ПО (Серии.Ссылка = &ДокументОснование)
		|				И (Серии.Номенклатура = Товары.Номенклатура)
		|				И (Серии.Характеристика = Товары.Характеристика)
		|				И (Серии.Назначение = Товары.Назначение)
		|				И (Серии.НазначениеОтправителя = Товары.НазначениеОтправителя)
		|	ГДЕ
		|		Товары.Ссылка = &ДокументОснование
		|		И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|		И СправочникНоменклатура.АлкогольнаяПродукция
		|		И СправочникВидыАлкогольнойПродукции.Маркируемый
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОформленныеТовары.Номенклатура,
		|		ОформленныеТовары.Характеристика,
		|		ОформленныеТовары.Серия,
		|		-ОформленныеТовары.Количество
		|	ИЗ
		|		Документ.ТТНИсходящаяЕГАИС.Товары КАК ОформленныеТовары
		|	ГДЕ
		|		ОформленныеТовары.Ссылка В
		|				(ВЫБРАТЬ
		|					Т.Ссылка
		|				ИЗ
		|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Серия";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.ТТНИсходящаяЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

Процедура СформироватьДанныеОснованияЗаказПоставщику(ДокументОснование, ДокументЕГАИС, ТаблицаДанных)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
		|ВЫБРАТЬ
		|	ТаблицаДокументы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ОформленныеДокументы
		|ИЗ
		|	Документ.УведомлениеОПланируемомИмпортеЕГАИС КАК ТаблицаДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО (СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка)
		|ГДЕ
		|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
		|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
		|	И ТаблицаДокументы.Проведен
		|	И НЕ СтатусыДокументовЕГАИС.Статус В (&КонечныеСтатусы)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика КАК Характеристика,
		|	ВложенныйЗапрос.Серия КАК Серия,
		|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|		Товары.Номенклатура КАК Номенклатура,
		|		Товары.Характеристика КАК Характеристика,
		|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		|		Товары.Количество КАК Количество
		|	ИЗ
		|		Документ.ЗаказПоставщику.Товары КАК Товары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|			ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыАлкогольнойПродукции КАК СправочникВидыАлкогольнойПродукции
		|			ПО СправочникНоменклатура.ВидАлкогольнойПродукции = СправочникВидыАлкогольнойПродукции.Ссылка
		|	ГДЕ
		|		Товары.Ссылка = &ДокументОснование
		|		И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|		И СправочникНоменклатура.АлкогольнаяПродукция
		|		И СправочникВидыАлкогольнойПродукции.Маркируемый
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОформленныеТовары.Номенклатура,
		|		ОформленныеТовары.Характеристика,
		|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
		|		-ОформленныеТовары.Количество
		|	ИЗ
		|		Документ.ЗаказПоставщику.Товары КАК ОформленныеТовары
		|	ГДЕ
		|		ОформленныеТовары.Ссылка В
		|				(ВЫБРАТЬ
		|					Т.Ссылка
		|				ИЗ
		|					ОформленныеДокументы КАК Т)) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Серия";
		
	Запрос.УстановитьПараметр("КонечныеСтатусы", Документы.УведомлениеОПланируемомИмпортеЕГАИС.КонечныеСтатусы());
	Запрос.УстановитьПараметр("ЭтаСсылка", ДокументЕГАИС);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры



#КонецОбласти

#Область ШаблоныТекстовЗапросов

Функция ОсобенностиУчетаЕГАИС()
	
	ОсобенностьУчета = Новый Массив;
	ОсобенностьУчета.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукция);
	ОсобенностьУчета.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.Пиво);
	ОсобенностьУчета.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.ПивоВПотребительскихУпаковках);
	ОсобенностьУчета.Добавить(Перечисления.ОсобенностиУчетаНоменклатуры.АлкогольнаяПродукцияДо9Процентов);
	Возврат ОсобенностьУчета;
	
КонецФункции

// Функция возвращает шаблон запроса заполнения шапки
// 
Функция ШаблонШапка(ПолеОрганизация)
	
	Шаблон = 
	"ВЫБРАТЬ
	|	Таблица.Ссылка          КАК ДокументОснование,
	|	НЕ Таблица.Проведен     КАК ЕстьОшибкиПроведен,
	|	Таблица.Склад           КАК Склад,
	|	Таблица.Склад.ТипСклада КАК ТипСклада,
	|	Таблица.Ответственный   КАК Ответственный,
	|	&ПолеОрганизация КАК Организация
	|ИЗ
	|	Документ.%1 КАК Таблица
	|ГДЕ
	|	Таблица.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Если ПолеОрганизация = "" Тогда
		Шаблон = СтрЗаменить(Шаблон,"&ПолеОрганизация", "Неопределено");
	Иначе
		Шаблон = СтрЗаменить(Шаблон,"&ПолеОрганизация", СтрШаблон("Таблица.%1", ПолеОрганизация));
	КонецЕсли;
	
	Возврат Шаблон;
	
КонецФункции

// Функция возвращает шаблон запроса оформленных документов
// 
// Параметры:
//  ИсключитьТекущий - Булево - необходимость исключить текущий документ (для перезаполнения при вводе на основании)
//
Функция ШаблонОформленныеДокументы(ИсключитьТекущий)
	
	Если ИсключитьТекущий Тогда
		Шаблон = 
		"ВЫБРАТЬ
		|	ТаблицаДокументы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ОформленныеДокументы%1
		|ИЗ
		|	Документ.%1 КАК ТаблицаДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
		|ГДЕ
		|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
		|	И ТаблицаДокументы.Ссылка <> &ЭтаСсылка
		|	И ТаблицаДокументы.Проведен
		|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы%1)
		|;
		|";
	Иначе 
		Шаблон = 
		"ВЫБРАТЬ
		|	ТаблицаДокументы.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ОформленныеДокументы%1
		|ИЗ
		|	Документ.%1 КАК ТаблицаДокументы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДокументовЕГАИС КАК СтатусыДокументовЕГАИС
		|		ПО СтатусыДокументовЕГАИС.Документ = ТаблицаДокументы.Ссылка
		|ГДЕ
		|	ТаблицаДокументы.ДокументОснование = &ДокументОснование
		|	И ТаблицаДокументы.Проведен
		|	И СтатусыДокументовЕГАИС.Статус НЕ В(&КонечныеСтатусы%1)
		|;
		|";
	КонецЕсли;

	Возврат Шаблон;
	
КонецФункции

// Функция возвращает шаблон запроса товаров прикладного документа
// 
// Параметры:
//  ТабличнаяЧасть - Строка - табличная часть документа-основания (источник товаров), из предопределенного
// набора значений ("ТоварыСерии", "Товары", "Шапка").
//  ИмяТабличнойЧастиТовары - Строка - Имя табличной части товары
//  ИмяТабличнойЧастиСерии - Строка - Имя табличной части серии
// 
// Возвращаемое значение:
//  Строка - Шаблон товары прикладного документа
Функция ШаблонТоварыПрикладногоДокумента(ТабличнаяЧасть, ИмяТабличнойЧастиТовары = "", ИмяТабличнойЧастиСерии = "")
	
	Если ТабличнаяЧасть = "ТоварыСерии" Тогда
		Шаблон = 
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика КАК Характеристика,
		|	ТабличнаяЧасть.Серия          КАК Серия,
		|	ТабличнаяЧасть.Количество     КАК План,
		|	0 КАК Факт
		|ПОМЕСТИТЬ ТоварыКОформлению
		|ИЗ
		|	Документ.%1.ИмяТабличнойЧастиТовары КАК ТабличнаяЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.%1.ИмяТабличнойЧастиСерии КАК ТаблицаСерии
		|		ПО ТаблицаСерии.Ссылка = ТабличнаяЧасть.Ссылка
		|			И ТаблицаСерии.Номенклатура = ТабличнаяЧасть.Номенклатура
		|			И ТаблицаСерии.Характеристика = ТабличнаяЧасть.Характеристика
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &ДокументОснование
		|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|	И СправочникНоменклатура.АлкогольнаяПродукция
		|	И ТаблицаСерии.Номенклатура ЕСТЬ NULL
		|	%2
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика КАК Характеристика,
		|	ТабличнаяЧасть.Серия          КАК Серия,
		|	ТабличнаяЧасть.Количество     КАК План,
		|	0                             КАК Факт
		|ИЗ
		|	Документ.%1.ИмяТабличнойЧастиСерии КАК ТабличнаяЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &ДокументОснование
		|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|	И СправочникНоменклатура.АлкогольнаяПродукция
		|	%2
		|";
	ИначеЕсли ТабличнаяЧасть = "Товары" Тогда
		Шаблон = 
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика КАК Характеристика,
		|	ТабличнаяЧасть.Серия          КАК Серия,
		|	ТабличнаяЧасть.Количество     КАК План,
		|	0 КАК Факт
		|ПОМЕСТИТЬ ТоварыКОформлению
		|ИЗ
		|	Документ.%1.ИмяТабличнойЧастиТовары КАК ТабличнаяЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &ДокументОснование
		|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|	И СправочникНоменклатура.АлкогольнаяПродукция
		|	%2
		|";
	ИначеЕсли ТабличнаяЧасть = "Шапка" Тогда
		Шаблон = 
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика КАК Характеристика,
		|	ТабличнаяЧасть.Серия          КАК Серия,
		|	ТабличнаяЧасть.Количество     КАК План,
		|	0 КАК Факт
		|ПОМЕСТИТЬ ТоварыКОформлению
		|ИЗ
		|	Документ.%1 КАК ТабличнаяЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &ДокументОснование
		|	И НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|	И СправочникНоменклатура.АлкогольнаяПродукция
		|	%2
		|";
	ИначеЕсли ТабличнаяЧасть = "ВременнаяТаблица" Тогда
		Шаблон = 
		";
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика КАК Характеристика,
		|	ТабличнаяЧасть.Серия          КАК Серия,
		|	ТабличнаяЧасть.Количество     КАК План,
		|	0 КАК Факт
		|ПОМЕСТИТЬ ТоварыКОформлению
		|ИЗ
		|	ТаблицаТовары%1 КАК ТабличнаяЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО ТабличнаяЧасть.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	НЕ СправочникНоменклатура.АлкогольнаяПродукцияВоВскрытойТаре
		|	И СправочникНоменклатура.АлкогольнаяПродукция
		|	%2
		|";
	КонецЕсли;
	Шаблон = СтрЗаменить(Шаблон, "ИмяТабличнойЧастиТовары", ИмяТабличнойЧастиТовары);
	Шаблон = СтрЗаменить(Шаблон, "ИмяТабличнойЧастиСерии", ИмяТабличнойЧастиСерии);
	Возврат Шаблон;
	
КонецФункции

// Функция возвращает шаблон запроса оформленных документов
// 
// Параметры:
//  ПересчитыватьНемаркированную - Булево - необходимость пересчета немаркированной продукции
//
Функция ШаблонОформленныеТовары(ПересчитыватьНемаркированную)
	
	Если ПересчитыватьНемаркированную Тогда
		Шаблон = 
		"
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Оформлено.Номенклатура   КАК Номенклатура,
		|	Оформлено.Характеристика КАК Характеристика,
		|	Оформлено.Серия          КАК Серия,
		|	0                        КАК План,
		|	Оформлено.Количество * 
		|	ВЫБОР КОГДА Оформлено.АлкогольнаяПродукция.ТипПродукции <> ЗНАЧЕНИЕ(Перечисление.ТипыПродукцииЕГАИС.Неупакованная)
		|		ТОГДА 1
		|	КОГДА ЕСТЬNULL(СправочникНоменклатура.ОбъемДАЛ, 1) <> 0
		|		ТОГДА 1 / ЕСТЬNULL(СправочникНоменклатура.ОбъемДАЛ, 1)
		|	ИНАЧЕ 0
		|	КОНЕЦ КАК Факт
		|ИЗ
		|	Документ.%1.Товары КАК Оформлено
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|	ПО Оформлено.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	Оформлено.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы%1 КАК Т)
		|";
	Иначе
		Шаблон =
		"
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Оформлено.Номенклатура   КАК Номенклатура,
		|	Оформлено.Характеристика КАК Характеристика,
		|	Оформлено.Серия          КАК Серия,
		|	0                        КАК План,
		|	Оформлено.Количество     КАК Факт
		|ИЗ
		|	Документ.%1.Товары КАК Оформлено
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|	ПО Оформлено.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	Оформлено.Ссылка В (ВЫБРАТЬ Т.Ссылка ИЗ ОформленныеДокументы%1 КАК Т)
		|";
	КонецЕсли;
	
	Возврат Шаблон;
	
КонецФункции

// Функция возвращает шаблон запроса сопоставления номенклатуры и алкогольной продукции
// 
Функция ШаблонСопоставление()
	
	Шаблон = 
	"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ЕСТЬNULL(СоответствиеНоменклатурыЕГАИСПоСериям.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИСБезСерий.АлкогольнаяПродукция)) КАК АлкогольнаяПродукция,
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика КАК Характеристика,
	|	ТоварыКОформлению.Серия КАК Серия
	|ПОМЕСТИТЬ СопоставленныеПозиции
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИСПоСериям
	|		ПО СоответствиеНоменклатурыЕГАИСПоСериям.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИСПоСериям.Характеристика = ТоварыКОформлению.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИСПоСериям.Серия = ТоварыКОформлению.Серия)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИСБезСерий
	|		ПО СоответствиеНоменклатурыЕГАИСБезСерий.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СоответствиеНоменклатурыЕГАИСБезСерий.Характеристика = ТоварыКОформлению.Характеристика
	|			И (СоответствиеНоменклатурыЕГАИСБезСерий.Серия = &ПустаяСерия)
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(СоответствиеНоменклатурыЕГАИСПоСериям.АлкогольнаяПродукция,СоответствиеНоменклатурыЕГАИСБезСерий.АлкогольнаяПродукция)) = 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат Шаблон;
	
КонецФункции

// Функция возвращает шаблон запроса итога остатка заполнения
// 
Функция ШаблонОстатокПланФакт()
	
	Шаблон =
	"ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура                         КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика                       КАК Характеристика,
	|	ТоварыКОформлению.Серия                                КАК Серия,
	|	СопоставленныеПозиции.АлкогольнаяПродукция              КАК АлкогольнаяПродукция,
	|	СУММА(ТоварыКОформлению.План - ТоварыКОформлению.Факт) КАК Количество,
	|	СУММА(ТоварыКОформлению.План - ТоварыКОформлению.Факт) КАК КоличествоУпаковок
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|	ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО СопоставленныеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленныеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленныеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленныеПозиции.АлкогольнаяПродукция
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.План - ТоварыКОформлению.Факт) > 0
	|";
	
	Возврат Шаблон;
	
КонецФункции

// Функция возвращает шаблон запроса итога остатка заполнения
// 
Функция ШаблонОстатокКоличествоСумма()
	
	Шаблон =
	"ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура                      КАК Номенклатура,
	|	ТоварыКОформлению.Характеристика                    КАК Характеристика,
	|	ТоварыКОформлению.Серия                             КАК Серия,
	|	СопоставленныеПозиции.АлкогольнаяПродукция          КАК АлкогольнаяПродукция,
	|	СопоставленныеПозиции.АлкогольнаяПродукция.Крепость КАК Крепость,
	|	СУММА(ТоварыКОформлению.Количество)                 КАК Количество,
	|	СУММА(ТоварыКОформлению.Количество)                 КАК КоличествоУпаковок,
	|	СУММА(ТоварыКОформлению.Сумма)                      КАК Сумма,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА СУММА(ТоварыКОформлению.Количество) = 0 ТОГДА 0
	|		ИНАЧЕ СУММА(ТоварыКОформлению.Сумма) / СУММА(ТоварыКОформлению.Количество)
	|	КОНЕЦ КАК ЧИСЛО(31,2))                   КАК Цена
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|	ЛЕВОЕ СОЕДИНЕНИЕ СопоставленныеПозиции КАК СопоставленныеПозиции
	|		ПО СопоставленныеПозиции.Номенклатура = ТоварыКОформлению.Номенклатура
	|			И СопоставленныеПозиции.Характеристика = ТоварыКОформлению.Характеристика
	|			И СопоставленныеПозиции.Серия = ТоварыКОформлению.Серия
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Характеристика,
	|	ТоварыКОформлению.Серия,
	|	СопоставленныеПозиции.АлкогольнаяПродукция,
	|	СопоставленныеПозиции.АлкогольнаяПродукция.Крепость
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|";
	
	Возврат Шаблон;
	
КонецФункции

// Функция возвращает шаблон запроса курсов валют
// 
Функция ШаблонКурсыВалют()
	
	Шаблон = 
	"ВЫБРАТЬ
	|	КурсыВалютСрезПоследних.Валюта    КАК Валюта,
	|	КурсыВалютСрезПоследних.КурсЧислитель КАК КурсЧислитель,
	|	КурсыВалютСрезПоследних.КурсЗнаменатель КАК КурсЗнаменатель
	|ПОМЕСТИТЬ втКурсыВалют
	|ИЗ
	|	РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(
	|			&ДатаОснования,
	|			(Валюта = &ВалютаРеглУчета
	|				ИЛИ Валюта = &%1) И БазоваяВалюта = &ВалютаРеглУчета) КАК КурсыВалютСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Возврат Шаблон;
	
КонецФункции

Функция ШаблонКодыМаркировки(ИменаДокументовЕГАИС, ИмяДокументаОснования, ИмяТаблицыШтрихкоды = "ШтрихкодыУпаковок")
	
	Если ТипЗнч(ИменаДокументовЕГАИС) = Тип("Строка") Тогда
		ИменаДокументовЕГАИС = СтрРазделить(ИменаДокументовЕГАИС, ",");
	КонецЕсли;
	ШаблонОбъединить = "ВЫБРАТЬ
	|	АкцизныеМарки.АкцизнаяМарка КАК АкцизнаяМарка
	|ПОМЕСТИТЬ ИспользованныеШтрихкодыУпаковок
	|ИЗ
	|	Документ.АктСписанияЕГАИС.АкцизныеМарки КАК АкцизныеМарки
	|ГДЕ
	|	АкцизныеМарки.Ссылка В (ВЫБРАТЬ Ссылка ИЗ ОформленныеДокументыАктСписанияЕГАИС)";
	ПодзапросыИспользованныеШтрихкодыУпаковок = Новый Массив;
	ЭтоПервыйЗапрос = Истина;
	Для Каждого ИмяДокументаЕГАИС Из ИменаДокументовЕГАИС Цикл
		Если ЭтоПервыйЗапрос Тогда
			ЭтоПервыйЗапрос = Ложь;
		Иначе
			ШаблонОбъединить = СтрЗаменить(ШаблонОбъединить, "ПОМЕСТИТЬ ИспользованныеШтрихкодыУпаковок", "");
		КонецЕсли;
		ПодзапросыИспользованныеШтрихкодыУпаковок.Добавить(СтрЗаменить(ШаблонОбъединить, "АктСписанияЕГАИС", ИмяДокументаЕГАИС));
	КонецЦикла;
	ЗапросОбъединить = СтрСоединить(ПодзапросыИспользованныеШтрихкодыУпаковок, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ЗапросОбъединить = СтрЗаменить(ЗапросОбъединить, "ШтрихкодыУпаковок", ИмяТаблицыШтрихкоды);
	
	Шаблон = "ВЫБРАТЬ
	|	ШтрихкодыУпаковок.ШтрихкодУпаковки
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ШтрихкодыУпаковок КАК ШтрихкодыУпаковок
	|ГДЕ
	|	ШтрихкодыУпаковок.Ссылка = &ДокументОснование
	|	И НЕ ШтрихкодыУпаковок.ШтрихкодУпаковки В (ВЫБРАТЬ АкцизнаяМарка ИЗ ИспользованныеШтрихкодыУпаковок)";
	Шаблон = СтрЗаменить(Шаблон, "РеализацияТоваровУслуг", ИмяДокументаОснования);
	Шаблон = СтрЗаменить(Шаблон, "ШтрихкодыУпаковок", ИмяТаблицыШтрихкоды);
	Возврат ОбщегоНазначения.РазделительПакетаЗапросов() + ЗапросОбъединить + ОбщегоНазначения.РазделительПакетаЗапросов() + Шаблон;
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеОрганизацииЕГАИС

Функция ОрганизацияЕГАИСПоСкладу(Склад)
	
	МассивОрганизацийЕГАИС = ОрганизацииЕГАИСПоСкладу(Склад);
	
	Если МассивОрганизацийЕГАИС = Неопределено 
		Или МассивОрганизацийЕГАИС.Количество() <> 1 Тогда
		
		Возврат Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка();
		
	Иначе
		
		Возврат МассивОрганизацийЕГАИС[0];
		
	КонецЕсли;
	
КонецФункции

Функция ОрганизацияЕГАИСПоПартнеруИКонтрагенту(Партнер, Контрагент)

	МассивОрганизацийЕГАИС = ОрганизацииЕГАИСПоПартнеруИКонтрагенту(Партнер, Контрагент);
	
	Если МассивОрганизацийЕГАИС = Неопределено 
		Или МассивОрганизацийЕГАИС.Количество() <> 1 Тогда
		
		Возврат Справочники.КлассификаторОрганизацийЕГАИС.ПустаяСсылка();
		
	Иначе
		
		Возврат МассивОрганизацийЕГАИС[0];
		
	КонецЕсли;

КонецФункции

Функция ОрганизацииЕГАИСПоСкладу(Склад)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	НЕ КлассификаторОрганизацийЕГАИС.ПометкаУдаления
	|	И КлассификаторОрганизацийЕГАИС.СоответствуетОрганизации
	|	И КлассификаторОрганизацийЕГАИС.ТорговыйОбъект = &Склад
	|";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция ОрганизацииЕГАИСПоОрганизацииИСкладу(Организация, Склад)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	НЕ КлассификаторОрганизацийЕГАИС.ПометкаУдаления
	|	И КлассификаторОрганизацийЕГАИС.СоответствуетОрганизации
	|	И КлассификаторОрганизацийЕГАИС.Контрагент = &Организация
	|	И КлассификаторОрганизацийЕГАИС.ТорговыйОбъект = &Склад
	|";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад",       Склад);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция ОрганизацииЕГАИСПоПартнеруИКонтрагенту(Партнер, Контрагент)
	
	Если Не ЗначениеЗаполнено(Контрагент) Или Не ЗначениеЗаполнено(Партнер) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КлассификаторОрганизацийЕГАИС.Ссылка
	|ИЗ
	|	Справочник.КлассификаторОрганизацийЕГАИС КАК КлассификаторОрганизацийЕГАИС
	|ГДЕ
	|	НЕ КлассификаторОрганизацийЕГАИС.ПометкаУдаления
	|	И КлассификаторОрганизацийЕГАИС.Сопоставлено
	|	И КлассификаторОрганизацийЕГАИС.Контрагент = &Контрагент
	|	И КлассификаторОрганизацийЕГАИС.ТорговыйОбъект = &Партнер
	|	И НЕ КлассификаторОрганизацийЕГАИС.СоответствуетОрганизации";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Партнер", Партнер);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

#КонецОбласти

#Область ГиперссылкиВЖурналахДокументовУТ

Функция СформироватьГиперссылкуСмТакжеВРаботеТТНВходящаяЕГАИС(Параметры)
	
	Если Не (ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийПоАлкогольнойПродукции")
		И ПравоДоступа("Чтение", Метаданные.Документы.ТТНВходящаяЕГАИС)) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Организация    = Параметры.Организация;
	ТорговыйОбъект = Параметры.Склад;
	
	ТекстЗапроса = "";
	ИнтеграцияЕГАИСПереопределяемый.ТекстЗапросаТТН(ТекстЗапроса, Организация, ТорговыйОбъект, Истина);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1");
	
	ПустыеЗначенияДокументаОснования = Новый Массив;
	ПустыеЗначенияДокументаОснования.Добавить(Неопределено);
	Для Каждого ТипыДокументаПоступления Из Метаданные.ОпределяемыеТипы.ОснованиеТТНВходящаяЕГАИС.Тип.Типы() Цикл
		ПустыеЗначенияДокументаОснования.Добавить(Документы[Метаданные.НайтиПоТипу(ТипыДокументаПоступления).Имя].ПустаяСсылка());
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Организация",                      Организация);
	Запрос.УстановитьПараметр("ТорговыйОбъект",                   ТорговыйОбъект);
	Запрос.УстановитьПараметр("ПустыеЗначенияДокументаОснования", ПустыеЗначенияДокументаОснования);
	Запрос.УстановитьПараметр("ТребующиеДействия",                Документы.ТТНВходящаяЕГАИС.ВсеТребующиеДействия());
	
	ТекстГиперссылки = НСтр("ru = 'ТТН ЕГАИС (входящие)'");
	Если Запрос.Выполнить().Пустой() Тогда
		Возврат Новый ФорматированнаяСтрока(
			ТекстГиперссылки,,
			ЦветаСтиля.НезаполненноеПолеТаблицы,,
			ИнтеграцияЕГАИСКлиентСервер.ИмяФормыРабочегоМестаПоОформлениюДокументаТТНВходящаяЕГАИС());
	Иначе
		Возврат Новый ФорматированнаяСтрока(
			ТекстГиперссылки,,,,
			ИнтеграцияЕГАИСКлиентСервер.ИмяФормыРабочегоМестаПоОформлениюДокументаТТНВходящаяЕГАИС());
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти
