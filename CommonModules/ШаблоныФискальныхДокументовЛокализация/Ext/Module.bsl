#Область ПрограммныйИнтерфейс

// Генерирует шаблон кассового чека, по данным операции фискализации чека
// 
// Параметры:
//   Шаблон - см. ШаблоныФискальныхДокументов.НовыйШаблон
//   Данные - см. ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыОперацииФискализацииЧека
//   ФискальнаяОперация - Структура
//   Параметры - см. ШаблоныФискальныхДокументов.ПараметрыШаблонаФискальногоДокумента
//
Процедура ШаблонКассовыйЧек(Шаблон, Данные, ФискальнаяОперация, Параметры) Экспорт
	
	// ++ Локализация
	
	ПодготовитьКассовыйЧек(Данные, ФискальнаяОперация, Параметры.ВерсияФФД);
	ШаблонКассовыйЧекШапка(Шаблон, Данные, Параметры);
	
	Для Каждого ПозицияЧека Из Данные.ПозицииЧека Цикл
		Если ПозицияЧека.Свойство("ФискальнаяСтрока") Тогда
			ШаблонКассовыйЧекПозицияЧекаФискальнаяСтрока(Шаблон, ПозицияЧека);
		ИначеЕсли ПозицияЧека.Свойство("ТекстоваяСтрока") Тогда
			ШаблонКассовыйЧекПозицияЧекаТекстоваяСтрока(Шаблон, ПозицияЧека);
		ИначеЕсли ПозицияЧека.Свойство("ШтрихКод") Тогда
			ШаблонКассовыйЧекПозицияЧекаШтрихкод(Шаблон, ПозицияЧека);
		КонецЕсли;
	КонецЦикла;
	
	ШаблонКассовыйЧекПодвал(Шаблон, Данные, ФискальнаяОперация, Параметры);
	
	// -- Локализация
	
КонецПроцедуры

// Генерирует шаблон отчета об открытии смены
// 
// Параметры:
//   Шаблон - см. ШаблоныФискальныхДокументов.НовыйШаблон
//   Данные - см. ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыОткрытияЗакрытияСмены
//   Параметры - см. ШаблоныФискальныхДокументов.ПараметрыШаблонаФискальногоДокумента
//
Процедура ШаблонОтчетОбОткрытииСмены(Шаблон, Данные, Параметры) Экспорт
	
	// ++ Локализация
	// -- Локализация
	
КонецПроцедуры

// Генерирует шаблон отчета о закрытии смены
// 
// Параметры:
//   Шаблон - см. ШаблоныФискальныхДокументов.НовыйШаблон
//   Данные - см. ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыОткрытияЗакрытияСмены
//   Параметры - см. ШаблоныФискальныхДокументов.ПараметрыШаблонаФискальногоДокумента
//
Процедура ШаблонОтчетОЗакрытииСмены(Шаблон, Данные, Параметры) Экспорт
	
	// ++ Локализация
	// -- Локализация
	
КонецПроцедуры

// Генерирует шаблон отчета о текущем состоянии
// 
// Параметры:
//   Шаблон - см. ШаблоныФискальныхДокументов.НовыйШаблон
//   Данные - см. ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыВыполненияОперации
//   Параметры - см. ШаблоныФискальныхДокументов.ПараметрыШаблонаФискальногоДокумента
//
Процедура ШаблонОтчетОТекущемСостоянии(Шаблон, Данные, Параметры) Экспорт
	
	// ++ Локализация
	// -- Локализация
	
КонецПроцедуры

// Генерирует шаблон отчета о снятии наличных
// 
// Параметры:
//   Шаблон - см. ШаблоныФискальныхДокументов.НовыйШаблон
//   Данные - см. ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыИнкассации
//   Параметры - см. ШаблоныФискальныхДокументов.ПараметрыШаблонаФискальногоДокумента
//
Процедура ШаблонСнятиеНаличных(Шаблон, Данные, Параметры) Экспорт
	
	// ++ Локализация
	// -- Локализация
	
КонецПроцедуры

// Генерирует шаблон отчета о внесении наличных
// 
// Параметры:
//   Шаблон - см. ШаблоныФискальныхДокументов.НовыйШаблон
//   Данные - см. ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыИнкассации
//   Параметры - см. ШаблоныФискальныхДокументов.ПараметрыШаблонаФискальногоДокумента
//
Процедура ШаблонВнесениеНаличных(Шаблон, Данные, Параметры) Экспорт
	
	// ++ Локализация
	// -- Локализация
	
КонецПроцедуры

// Генерирует шаблон отчета о инфо квитанции
// 
// Параметры:
//   Шаблон - см. ШаблоныФискальныхДокументов.НовыйШаблон
//   Данные - см. ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыВыполненияОперации
//   Параметры - см. ШаблоныФискальныхДокументов.ПараметрыШаблонаФискальногоДокумента
//
Процедура ШаблонИнфоКвитанция(Шаблон, Данные, Параметры) Экспорт
	
	// ++ Локализация
	// -- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// ++ Локализация

// Выполняет предварительную подготовку
//  
// Параметры:
//  Данные - см. ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыОперацииФискализацииЧека
//  ВерсияФФД - Строка
//
Процедура ПодготовитьКассовыйЧек(Данные, ФискальнаяОперация, ВерсияФФД)
	
	Если Не ЗначениеЗаполнено(Данные.ОрганизацияНазвание) И ЗначениеЗаполнено(ФискальнаяОперация) Тогда
		Сведения = ОборудованиеЧекопечатающиеУстройства.СведенияОбОрганизации(ФискальнаяОперация.Организация);
		Данные.ОрганизацияНазвание = Сведения.Наименование;
	КонецЕсли;
	
	// позиции чека
	ТаблицаНДС   = Новый Соответствие();
	ТаблицаСумма = Новый Соответствие();
	СуммаЧека    = 0;
	СуммаОплаты  = 0;
	
	Для Каждого ПозицияЧека Из Данные.ПозицииЧека Цикл
		
		Если ПозицияЧека.Свойство("ФискальнаяСтрока") Тогда
			Сумма        = ПозицияЧека.Сумма;
			СтавкаНДС    = ПозицияЧека.СтавкаНДС;
			СуммаНДС     = ?(ПозицияЧека.СуммаНДС = 0, 0, ПозицияЧека.СуммаНДС);
			
			// НДС
			Если СтавкаНДС = Неопределено Тогда
				ТекстНалога = НСтр("ru='БЕЗ НДС'");
				СуммаВТаблицеПоКлючу(ТаблицаНДС, "БЕЗНДС", СуммаНДС);
				СуммаВТаблицеПоКлючу(ТаблицаСумма, "БЕЗНДС", Сумма);
			ИначеЕсли СтавкаНДС = 0 Тогда
				ТекстНалога = НСтр("ru='НДС 0%'");
				СуммаВТаблицеПоКлючу(ТаблицаНДС, СтавкаНДС, СуммаНДС);
				СуммаВТаблицеПоКлючу(ТаблицаСумма, СтавкаНДС, Сумма);
			ИначеЕсли СтавкаНДС < 100 Тогда
				ТекстНалога = СтрШаблон(НСтр("ru='НДС %1%%'"), СтавкаНДС);
				СуммаНДС = ?(СуммаНДС = Неопределено, 0, СуммаНДС);
				СуммаВТаблицеПоКлючу(ТаблицаНДС, СтавкаНДС, СуммаНДС);
				СуммаВТаблицеПоКлючу(ТаблицаСумма, СтавкаНДС, Сумма);
			ИначеЕсли СтавкаНДС >= 100 Тогда
				ТекстНалога = СтрШаблон(НСтр("ru='НДС %2/%1%%'"), СтавкаНДС-100, СтавкаНДС);
				СуммаНДС = ?(СуммаНДС = Неопределено, 0, СуммаНДС);
				СуммаВТаблицеПоКлючу(ТаблицаНДС, СтавкаНДС, СуммаНДС);
				СуммаВТаблицеПоКлючу(ТаблицаСумма, СтавкаНДС, Сумма);
			КонецЕсли;
			ПозицияЧека.Вставить("ТекстНалога", ТекстНалога);
			
			СуммаЧека = СуммаЧека + Сумма;
		КонецЕсли;
	КонецЦикла;
	
	// подвал чека
	// таблица оплаты
	ТекстТаблицаОплат = Новый Соответствие();
	Для Каждого СтрокаОплаты Из Данные.ТаблицаОплат Цикл
		ТипОплаты = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.НаименованиеТипаОплатыККТ(СтрокаОплаты.ТипОплаты, ВерсияФФД);
		СуммаВТаблицеПоКлючу(ТекстТаблицаОплат, ТипОплаты, СтрокаОплаты.Сумма);
		СуммаОплаты = СуммаОплаты + СтрокаОплаты.Сумма;
	КонецЦикла;
	Данные.Вставить("ТекстТаблицаОплат", ТекстТаблицаОплат);
	Данные.Вставить("СуммаОплаты",  СуммаОплаты);
	Данные.Вставить("СуммаЧека",    СуммаЧека);
	
	// таблица НДС
	ТекстТаблицаНДС = Новый Соответствие();
	Для Каждого СтрокаНДС Из ТаблицаНДС Цикл
		
		СтавкаНДС = СтрокаНДС.Ключ;
		СуммаНДС  = СтрокаНДС.Значение;
		Если СтавкаНДС = "БЕЗНДС" Тогда
			Заголовок = " "+НСтр("ru='СУММА БЕЗ НДС'");
			СуммаНДС  = ?(СуммаНДС > 0, СуммаНДС, 0);
		ИначеЕсли СтавкаНДС = 0 Тогда
			Заголовок = " "+НСтр("ru='СУММА С НДС 0%'");
			СуммаНДС  = ?(СуммаНДС > 0, СуммаНДС, 0);
		ИначеЕсли СтавкаНДС < 100 Тогда
			Заголовок = СтрШаблон(НСтр("ru='СУММА НДС %1%%'"), СтавкаНДС);
			Сумма = ТаблицаСумма.Получить(СтавкаНДС);
			СуммаНДС  = ?(СуммаНДС > 0, СуммаНДС, Сумма / (100+СтавкаНДС) * СтавкаНДС );
		ИначеЕсли СтавкаНДС >= 100 Тогда
			Заголовок = СтрШаблон(НСтр("ru='СУММА НДС %2/%1%%'"), СтавкаНДС-100, СтавкаНДС);
			Сумма = ТаблицаСумма.Получить(СтавкаНДС);
			СуммаНДС  = ?(СуммаНДС > 0, СуммаНДС, Сумма / СтавкаНДС * (СтавкаНДС-100) );
		КонецЕсли;
		ТекстТаблицаНДС.Вставить(Заголовок, СуммаНДС);
		
	КонецЦикла;
	Данные.Вставить("ТекстТаблицаНДС", ТекстТаблицаНДС);
	
	// QR код
    Если ЗначениеЗаполнено(ФискальнаяОперация) Тогда
        ПараметрыQRКода = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыQRКодаЧекаККТ();
        ПараметрыQRКода.ДатаВремяРасчета  = ФискальнаяОперация.Дата;
        ПараметрыQRКода.СуммаРасчета      = ФискальнаяОперация.Сумма;
        ПараметрыQRКода.ФискальныйПризнак = ФискальнаяОперация.ФискальныйПризнак;
        ПараметрыQRКода.ПризнакРасчета    = ФискальнаяОперация.ТипРасчета;
        ПараметрыQRКода.НомерФискальногоНакопителя = ФискальнаяОперация.ЗаводскойНомерФН;
        ПараметрыQRКода.НомерФискальногоДокумента  = ФискальнаяОперация.НомерЧекаККМ;
        Данные.QRКод.ЗначениеКода = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.СформироватьQRКодЧекаККТ(
            ПараметрыQRКода);
    КонецЕсли;	
		
		
КонецПроцедуры

Процедура СуммаВТаблицеПоКлючу(Таблица, Ключ, Значение)
	Сумма = Таблица.Получить(Ключ);
	Сумма = ?(Сумма = Неопределено, 0, Сумма);
	Таблица.Вставить(Ключ, Сумма + ?(Значение = Неопределено, 0, Значение));
КонецПроцедуры

Процедура ШаблонКассовыйЧекШапка(Шаблон, Данные, Параметры)

	Модуль = ШаблоныФискальныхДокументов;
	
	ФорматРазделитель    = Модуль.ФорматРазделитель();
	ФорматЦентр    = Модуль.ФорматСтрока(ГоризонтальноеПоложение.Центр);
	ФорматПраво    = Модуль.ФорматСтрока(ГоризонтальноеПоложение.Право);
	ФорматЛево     = Модуль.ФорматСтрока(ГоризонтальноеПоложение.Лево);
	ФорматПоШирине = Модуль.ФорматСтрока(ГоризонтальноеПоложение.ПоШирине);
	
	Модуль.ДобавитьСтроку (Шаблон, Параметры.Заголовок,        ФорматЦентр);
	Модуль.ДобавитьСтроку (Шаблон, "=======",                  ФорматРазделитель);
	Модуль.ДобавитьСтроку (Шаблон, Данные.ОрганизацияНазвание, ФорматЦентр);
	Модуль.ДобавитьСтроку (Шаблон, Данные.АдресРасчетов,       ФорматЦентр);
	Модуль.ДобавитьСтроку (Шаблон, Данные.МестоРасчетов,       ФорматЦентр);
	Модуль.ДобавитьСтроку (Шаблон, Данные.АдресМагазина,       ФорматЦентр);
	Модуль.ДобавитьСтроку (Шаблон, Данные.ТекстШапки,          ФорматЦентр);
	Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='КАССОВЫЙ ЧЕК'"),  ФорматЦентр);
	
	КодРасчета = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.КодРасчетаДенежнымиСредствами(Данные.ТипРасчета);
	ТипЧека    = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.НаименованиеКодаРасчетаДенежнымиСредствами(КодРасчета);
	Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='ИНН'")+" ", Данные.ОрганизацияИНН, ФорматЛево);
	Модуль.ДобавитьКолонку(Шаблон, ТипЧека, ФорматПраво);
		
	ДатаВремя  = ?(НЕ ПустаяСтрока(Данные.ДатаВремя), Данные.ДатаВремя, ОбщегоНазначенияБПО.ДатаСеанса());
	ДатаВремя  = Формат(ДатаВремя, НСтр("ru = 'ДФ=""дд.ММ.гггг ЧЧ:мм""'"));
	Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='ЧЕК №'"), Данные.НомерЧека, ФорматЛево);
	Модуль.ДобавитьКолонку(Шаблон, ДатаВремя, ФорматПраво);
	
	Покупатель    = Данные.Получатель;
	ПокупательИНН = Данные.ПолучательИНН;
	ПокупательАдрес = "";
	СведенияОПокупателе = Данные.СведенияОПокупателе;
	Покупатель      = ?(Не ПустаяСтрока(СведенияОПокупателе.Покупатель),      СведенияОПокупателе.Покупатель,      Покупатель);
	ПокупательИНН   = ?(Не ПустаяСтрока(СведенияОПокупателе.ПокупательИНН),   СведенияОПокупателе.ПокупательИНН,   ПокупательИНН);
	ПокупательАдрес = ?(Не ПустаяСтрока(СведенияОПокупателе.ПокупательАдрес), СведенияОПокупателе.ПокупательАдрес, ПокупательАдрес);
	Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='ПОКУПАТЕЛЬ:'"),     Покупатель,    ФорматПраво);
	Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='ИНН ПОКУПАТЕЛЯ:'"), ПокупательИНН, ФорматПраво);
	Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='АДРЕС ПОКУПАТЕЛЯ:'"), ПокупательАдрес, ФорматПраво);
	
	Модуль.ДобавитьСтроку (Шаблон, ВРег(Данные.ПризнакАгента), ФорматЛево);

	ДанныеПоставщика = Данные.ДанныеПоставщика;
	Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='ПОСТАВЩИК:'"),      ДанныеПоставщика.Наименование, ФорматПраво);
	Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='ТЛФ.ПОСТ.:'"),      ДанныеПоставщика.Телефон,      ФорматПраво);
	Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='ИНН ПОСТАВЩИКА:'"), ДанныеПоставщика.ИНН,          ФорматПраво);

	ПлатежныйАгент           = Данные.ДанныеАгента.ПлатежныйАгент;
	ОператорПеревода         = Данные.ДанныеАгента.ОператорПеревода;
	ОператорПоПриемуПлатежей = Данные.ДанныеАгента.ОператорПоПриемуПлатежей;
	Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='ПЛ.АГЕНТ ОПЕР.:'"),    ПлатежныйАгент.Операция,       ФорматПраво);
	Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='ПЛ.АГЕНТ.ТЛФ.:'"),     ПлатежныйАгент.Телефон,        ФорматПраво);
	Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='ОПЕРАТОР ПЕРЕВОДА:'"), ОператорПеревода.Наименование, ФорматПраво);
	Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='ТЛФ.ОП.ПЕРЕВОДА:'"),   ОператорПеревода.Телефон,      ФорматПраво);
	Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='АДР.ОП.ПЕРЕВОДА:'"),   ОператорПеревода.Адрес,        ФорматПраво);
	Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='ИНН ОП.ПЕРЕВОДА:'"),   ОператорПеревода.ИНН,          ФорматПраво);
	Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='ОПЕР.ПО ПРИЕМУ ПЛАТ.ТЛФ:'"), ОператорПоПриемуПлатежей.Телефон, ФорматПраво);
	
	ДополнительныйРеквизитПользователя = Данные.ДополнительныйРеквизитПользователя;
	Модуль.ДобавитьСтроку (Шаблон, ДополнительныйРеквизитПользователя.Наименование, ДополнительныйРеквизитПользователя.Значение, ФорматПраво);
		
	Модуль.ДобавитьСтроку(Шаблон, "-", ФорматРазделитель);


КонецПроцедуры

Процедура ШаблонКассовыйЧекПозицияЧекаФискальнаяСтрока(Шаблон, ПозицияЧека)

	Модуль = ШаблоныФискальныхДокументов;
	
	ФорматЦентр    = Модуль.ФорматСтрока(ГоризонтальноеПоложение.Центр);
	ФорматПраво    = Модуль.ФорматСтрока(ГоризонтальноеПоложение.Право);
	ФорматЛево     = Модуль.ФорматСтрока(ГоризонтальноеПоложение.Лево);
	ФорматПоШирине = Модуль.ФорматСтрока(ГоризонтальноеПоложение.ПоШирине);
	
	ФорматЧисла2 = "ЧРД=.;ЧЦ=12;ЧДЦ=2;ЧН=0.00;ЧГ=0";
	ФорматЧисла3 = "ЧРД=.;ЧЦ=12;ЧДЦ=3;ЧН=0.000;ЧГ=0";
	
	Количество   = ПозицияЧека.Количество;
	Сумма        = ПозицияЧека.Сумма;
	СуммаСкидок  = ?(ПустаяСтрока(ПозицияЧека.СуммаСкидок), 0, ПозицияЧека.СуммаСкидок);
	ЦенаДляПечати = Окр(Сумма / ?(Количество > 0, Количество, 1), 2);
	
	СтрокаТовара = СтрШаблон("%1 х %2=%3",
		Формат(Количество, ФорматЧисла3),
		Формат(ЦенаДляПечати, ФорматЧисла2),
		Формат(Сумма, ФорматЧисла2));
		
	Модуль.ДобавитьСтроку(Шаблон, ПозицияЧека.Наименование, ФорматЛево);
	Модуль.ДобавитьСтроку(Шаблон, СтрокаТовара,             ФорматПраво);
	
	Если СуммаСкидок > 0 Тогда
		Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='СКИДКА='"), Формат(СуммаСкидок, ФорматЧисла2), ФорматЛево);
	ИначеЕсли СуммаСкидок < 0 Тогда
		Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='НАДБАВКА='"), Формат(СуммаСкидок, ФорматЧисла2), ФорматЛево);
	Иначе
		Модуль.ДобавитьСтроку(Шаблон);
	КонецЕсли;
	Модуль.ДобавитьКолонку(Шаблон, ПозицияЧека.ТекстНалога, ФорматПраво);
	Модуль.ДобавитьСтроку(Шаблон, ВРег(ПозицияЧека.ПризнакПредметаРасчета), ФорматПраво);
	
	ПризнакСпособаРасчета = 
		ОборудованиеЧекопечатающиеУстройстваКлиентСервер.КодПризнакаСпособаРасчета(ПозицияЧека.ПризнакСпособаРасчета);
	ПризнакСпособаРасчетаНаименование = 
		ОборудованиеЧекопечатающиеУстройстваКлиентСервер.НаименованиеПризнакаСпособаРасчета(ПризнакСпособаРасчета);
	Модуль.ДобавитьСтроку(Шаблон, ПризнакСпособаРасчетаНаименование, ФорматЛево);
	
	// Маркировка
	Если НЕ ПустаяСтрока(ПозицияЧека.КонтрольнаяМарка) Тогда 
		Модуль.ДобавитьСтроку (Шаблон, НСтр("ru='[М]'"), ФорматЛево);
	Иначе
		Штрихкод = ПозицияЧека.Штрихкод;
		Если НЕ ПустаяСтрока(ПозицияЧека.КодВидаНоменклатурнойКлассификации) Тогда
			Штрихкод = ПозицияЧека.КодВидаНоменклатурнойКлассификации;
		КонецЕсли;
		
		КодТовараТекст = Штрихкод;
		Если ОбщегоНазначенияБПО.ИспользуетсяМаркировка() Тогда
			МодульМенеджерОборудованияМаркировка = ОбщегоНазначенияБПО.ОбщийМодуль("МенеджерОборудованияМаркировка");
			КодТовараИдентифицируетЭкземпляр = МодульМенеджерОборудованияМаркировка.КодТовараИдентифицируетЭкземпляр(
				ПозицияЧека.ДанныеКодаТоварнойНоменклатуры.РеквизитКодаТовара, 
				Штрихкод);
			Если КодТовараИдентифицируетЭкземпляр Тогда
				КодТовараТекст = НСтр("ru='[М]'") + КодТовараТекст + Символы.НПП;
			КонецЕсли;
		КонецЕсли;
		Модуль.ДобавитьСтроку (Шаблон, КодТовараТекст, ФорматЛево);
	КонецЕсли;
	
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='КОД СТРАНЫ:'"),  ПозицияЧека.КодСтраныПроисхожденияТовара, ФорматЛево);
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ДЕКЛАРАЦИЯ:'"),  ПозицияЧека.НомерТаможеннойДекларации,    ФорматЛево);
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='АКЦИЗ:'"),       ПозицияЧека.СуммаАкциза,                  ФорматЛево);
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ЕД.ИЗМЕРЕНИЯ:'"),ПозицияЧека.ЕдиницаИзмерения,             ФорматЛево);
	Модуль.ДобавитьСтроку(Шаблон, ВРег(ПозицияЧека.ПризнакАгентаПоПредметуРасчета),                    ФорматЛево);
	
	ДанныеПоставщика = ПозицияЧека.ДанныеПоставщика;
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ПОСТАВЩИК:'"),      ДанныеПоставщика.Наименование, ФорматПраво);
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ТЛФ.ПОСТ.:'"),      ДанныеПоставщика.Телефон,      ФорматПраво);
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ИНН ПОСТАВЩИКА:'"), ДанныеПоставщика.ИНН,          ФорматПраво);

	ПлатежныйАгент           = ПозицияЧека.ДанныеАгента.ПлатежныйАгент;
	ОператорПеревода         = ПозицияЧека.ДанныеАгента.ОператорПеревода;
	ОператорПоПриемуПлатежей = ПозицияЧека.ДанныеАгента.ОператорПоПриемуПлатежей;
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ПЛ.АГЕНТ ОПЕР.:'"),    ПлатежныйАгент.Операция,       ФорматПраво);
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ПЛ.АГЕНТ.ТЛФ.:'"),     ПлатежныйАгент.Телефон,        ФорматПраво);
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ОПЕРАТОР ПЕРЕВОДА:'"), ОператорПеревода.Наименование, ФорматПраво);
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ТЛФ.ОП.ПЕРЕВОДА:'"),   ОператорПеревода.Телефон,      ФорматПраво);
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='АДР.ОП.ПЕРЕВОДА:'"),   ОператорПеревода.Адрес,        ФорматПраво);
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ИНН ОП.ПЕРЕВОДА:'"),   ОператорПеревода.ИНН,          ФорматПраво);
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ОПЕР.ПО ПРИЕМУ ПЛАТ.ТЛФ:'"), ОператорПоПриемуПлатежей.Телефон, ФорматПраво);
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ДОП.РЕК.:'"), ПозицияЧека.ДополнительныйРеквизит, ФорматПраво);

КонецПроцедуры

Процедура ШаблонКассовыйЧекПозицияЧекаТекстоваяСтрока(Шаблон, ПозицияЧека)

	Модуль = ШаблоныФискальныхДокументов;
	
	Формат = Модуль.ФорматСтрока(ГоризонтальноеПоложение[ПозицияЧека.Выравнивание]);
	Модуль.ДобавитьСтроку (Шаблон, ПозицияЧека.Текст, Формат);
		

КонецПроцедуры

Процедура ШаблонКассовыйЧекПозицияЧекаШтрихкод(Шаблон, ПозицияЧека)

	Модуль = ШаблоныФискальныхДокументов;
	
	Формат = Модуль.ФорматШтрихкод(ГоризонтальноеПоложение.Центр, ПозицияЧека.ТипШтрихкода, 2);
	Модуль.ДобавитьСтроку(Шаблон, ПозицияЧека.ШтрихкодBase64, Формат);
	Модуль.ДобавитьСтроку(Шаблон, " ");

КонецПроцедуры

Процедура ШаблонКассовыйЧекПодвал(Шаблон, Данные, ФискальнаяОперация, Параметры)

	Модуль = ШаблоныФискальныхДокументов;
	
	ФорматРазделитель    = Модуль.ФорматРазделитель();
	ФорматЦентр    = Модуль.ФорматСтрока(ГоризонтальноеПоложение.Центр);
	ФорматПраво    = Модуль.ФорматСтрока(ГоризонтальноеПоложение.Право);
	ФорматЛево     = Модуль.ФорматСтрока(ГоризонтальноеПоложение.Лево);
	ФорматПоШирине = Модуль.ФорматСтрока(ГоризонтальноеПоложение.ПоШирине);
	
	ФорматЧисла2 = "ЧРД=.;ЧЦ=12;ЧДЦ=2;ЧН=0.00;ЧГ=0";
	ФорматЧисла3 = "ЧРД=.;ЧЦ=12;ЧДЦ=3;ЧН=0.000;ЧГ=0";
	
	СуммаОплаты = Данные.СуммаОплаты;
	СуммаЧека   = Данные.СуммаЧека;
	
	Модуль.ДобавитьСтроку(Шаблон, "-", ФорматРазделитель);
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ИТОГ='"), Формат(СуммаЧека, ФорматЧисла2), ФорматПраво);
	Модуль.ДобавитьСтроку(Шаблон, "-", ФорматРазделитель);
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ОПЛАТА'"), ФорматЛево);

	ФорматШирина2 = ШаблоныФискальныхДокументов.ФорматСтрокаШирина(2);
	Для Каждого СтрокаОплаты Из Данные.ТекстТаблицаОплат Цикл
		Модуль.ДобавитьСтроку(Шаблон, " ", ФорматШирина2);
		Модуль.ДобавитьКолонку(Шаблон, СтрокаОплаты.Ключ, Формат(СтрокаОплаты.Значение, ФорматЧисла2), ФорматПраво);
	КонецЦикла;
	
	Если СуммаОплаты - СуммаЧека > 0 Тогда
		Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ПОЛУЧЕНО='"), Формат(СуммаОплаты, ФорматЧисла2), ФорматПраво);
		Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='СДАЧА='"), Формат(СуммаОплаты - СуммаЧека, ФорматЧисла2), ФорматПраво);
	КонецЕсли; 
	
	СНОКод = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.КодСистемыНалогообложенияККТ(Данные.СистемаНалогообложения);
	СНО    = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.НаименованиеСистемыНалогообложения(СНОКод, Истина);
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='СНО:'"), СНО, ФорматЛево);
	
	Для Каждого СтрокаНДС Из Данные.ТекстТаблицаНДС Цикл
		Модуль.ДобавитьСтроку(Шаблон, " ", ФорматШирина2);
		Модуль.ДобавитьКолонку(Шаблон, СтрокаНДС.Ключ, Формат(СтрокаНДС.Значение, ФорматЧисла2), ФорматПраво);
	КонецЦикла;
		
	Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='КАССИР:'"), Данные.Кассир, ФорматЛево);
	Если Параметры.Подпись Тогда
		Формат = ШаблоныФискальныхДокументов.НовыйФормат(ФорматЛево);
		Формат.Заполнитель       = "_";
		Формат.ВыводитьЗаголовок = Истина;
		Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ПОДПИСЬ:'"), Формат);
	КонецЕсли;
	Модуль.ДобавитьСтроку(Шаблон, Параметры.ДополнительныйТекст, ФорматЦентр);
	Модуль.ДобавитьСтроку(Шаблон, Данные.ТекстПодвала,           ФорматЦентр);
	Модуль.ДобавитьСтроку(Шаблон, "======", ФорматРазделитель);
	
	// QR код и данные фискальной операции
	Если Параметры.ВыводитьФискальнуюИнформацию И ФискальнаяОперация <> Неопределено Тогда
		Модуль.ДобавитьСтроку(Шаблон, " ");
		Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='РН ККТ:'"), ФискальнаяОперация.РегистрационныйНомерККТ, ФорматПраво);
		Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ФН №:'"), ФискальнаяОперация.ЗаводскойНомерФН, ФорматПраво);
		Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ФД №:'"), Формат(ФискальнаяОперация.НомерЧекаККМ,"ЧГ="), ФорматПраво);
		Модуль.ДобавитьСтроку(Шаблон, НСтр("ru='ФП:'"), ФискальнаяОперация.ФискальныйПризнак, ФорматПраво);
		Модуль.ДобавитьСтроку(Шаблон, " ");
		Формат = Модуль.ФорматШтрихкод(ГоризонтальноеПоложение.Центр, "QR", 6, Ложь);
		Модуль.ДобавитьСтроку(Шаблон, Данные.QRКод.ЗначениеКода, Формат);
	КонецЕсли;

КонецПроцедуры

// -- Локализация

#КонецОбласти
