#Область СлужебныйПрограммныйИнтерфейс

#Область ПолучениеНастроекИПараметровУчетаНДС

// Параметры:
//  НастройкиУчета - см. УчетНДСУПВызовСервера.НастройкиУчета
//
Процедура ДополнитьНастройкиУчета(НастройкиУчета) Экспорт
	
	//++ Локализация
	УчетНДСРФКлиентСерверПовтИсп.ДополнитьНастройкиУчета(НастройкиУчета);
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  ПараметрыУчета - см. УчетНДСУП.ПараметрыУчетаПоОрганизации
//  Организация - см. УчетНДСУП.ПараметрыУчетаПоОрганизации
//  Дата - см. УчетНДСУП.ПараметрыУчетаПоОрганизации
//  Склад - см. УчетНДСУП.ПараметрыУчетаПоОрганизации
//  Подразделение - см. УчетНДСУП.ПараметрыУчетаПоОрганизации
//
Процедура ДополнитьПараметрыУчетаОрганизации(ПараметрыУчета, Организация, Дата, Склад, Подразделение) Экспорт
	
	//++ Локализация
	ПараметрыУчета.Вставить("ПрименяетсяУСН", Ложь);
	ПараметрыУчета.Вставить("ПрименяетсяЕНВД", Ложь);
	ПараметрыУчета.Вставить("ПрименяетсяПСН", Ложь);
	ПараметрыУчета.Вставить("ЕстьРеализацияРаботУслугНеНаТерриторииРФ", Ложь);
	ПараметрыУчета.Вставить("ЕстьРеализацияТоваровФизлицамВЕАЭС", Ложь);
	ПараметрыУчета.Вставить("ПрименяетсяРасчетНДССМежценовойРазницы", Ложь);
	ПараметрыУчета.Вставить("УчетНДСВКосмическойДеятельности", Ложь);
	ПараметрыУчета.Вставить("СтавкаНДСПриУСН", Справочники.СтавкиНДС.ПустаяСсылка());
	
	ДатаСреза = ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДатаСеанса());
	ДатаНачисленияНДСнаУСН = УчетНДС.ДатаНачалаПримененияНДСнаУСН();
	ЕстьНастройкиУчетаНДСПриУСН = Ложь;
	Если ДатаСреза >= ДатаНачисленияНДСнаУСН Тогда
		НастройкиУчетаНДСПриУСН = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиУчетаНДСПриУСН",
		Организация,
		ДатаСреза); 
		Если НЕ НастройкиУчетаНДСПриУСН = Неопределено Тогда
			ПараметрыУчета.ОсновноеНалогообложениеНДСПродажи  = НастройкиУчетаНДСПриУСН.ОсновноеНалогообложение;
			ПараметрыУчета.ОсновнойВидДеятельностиНДСЗакупки  = НастройкиУчетаНДСПриУСН.ОсновноеНалогообложение;
			ПараметрыУчета.НалогообложениеНДСРозничнойПродажи = НастройкиУчетаНДСПриУСН.ОсновноеНалогообложение;
			ПараметрыУчета.СтавкаНДСПриУСН                    = НастройкиУчетаНДСПриУСН.СтавкаНДС;
			ЕстьНастройкиУчетаНДСПриУСН                       = Истина;
		КонецЕсли; 
	КонецЕсли;

	НастройкиСистемыНалогообложения = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиСистемыНалогообложения",
		Организация,
		ДатаСреза);
	
	Если НЕ НастройкиСистемыНалогообложения = Неопределено Тогда
		
		Если НастройкиСистемыНалогообложения.СистемаНалогообложения = Перечисления.СистемыНалогообложения.Общая Тогда
			ПараметрыУчета.ОсновноеНалогообложениеНДСПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		Иначе
			Если ДатаСреза < ДатаНачисленияНДСнаУСН Или НЕ ЕстьНастройкиУчетаНДСПриУСН Тогда
				ПараметрыУчета.Вставить("ОсновноеНалогообложениеНДСПродажи",  Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
			КонецЕсли;
		КонецЕсли;
		ПараметрыУчета.ОсновнойВидДеятельностиНДСЗакупки = ПараметрыУчета.ОсновноеНалогообложениеНДСПродажи;		
		ПараметрыУчета.ПрименяетсяУСН = НастройкиСистемыНалогообложения.ПрименяетсяУСН;
		ПараметрыУчета.ПрименяетсяПСН = НастройкиСистемыНалогообложения.ПрименяетсяПСН
			И Справочники.Патенты.ЕстьДействующийПатент(Организация, Подразделение, ДатаСреза);
		ПараметрыУчета.ПрименяетсяЕНВД = НастройкиСистемыНалогообложения.ПрименяетсяЕНВД;
		Если ЗначениеЗаполнено(Склад) Тогда
			ПараметрыУчета.ПрименяетсяЕНВД = ПараметрыУчета.ПрименяетсяЕНВД
				И РегистрыСведений.ПримененияЕНВД.РозничнаяТорговляОблагаетсяЕНВД(Организация, Склад, ДатаСреза);
		КонецЕсли;
		
		Если ПараметрыУчета.ПрименяетсяПСН Тогда
			ПараметрыУчета.НалогообложениеНДСРозничнойПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту;
		ИначеЕсли ПараметрыУчета.ПрименяетсяЕНВД Тогда
			ПараметрыУчета.НалогообложениеНДСРозничнойПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД;
		Иначе
			ПараметрыУчета.НалогообложениеНДСРозничнойПродажи = ПараметрыУчета.ОсновноеНалогообложениеНДСПродажи;
		КонецЕсли;
		
	КонецЕсли;
	
	НастройкиУчетаНДС = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиУчетаНДС",
		Организация,
		ДатаСреза);
	
	Если НЕ НастройкиУчетаНДС = Неопределено Тогда
		
		Если НастройкиУчетаНДС.ПрименяетсяУчетНДСПоФактическомуИспользованию Тогда
			ПараметрыУчета.ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию;
		КонецЕсли;

		Если НастройкиУчетаНДС.ПрименяетсяОсвобождениеОтУплатыНДС Тогда
			ПараметрыУчета.ОсновноеНалогообложениеНДСПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
		КонецЕсли;

		ПараметрыУчета.РаздельныйУчетНДС = НастройкиУчетаНДС.РаздельныйУчетТоваровПоНалогообложениюНДС;
		ПараметрыУчета.ВариантУчетаНДСПриИзмененииВидаДеятельностиНаНеоблагаемую = НастройкиУчетаНДС.ВариантУчетаНДСПриИзмененииВидаДеятельности;
		ПараметрыУчета.СтатьяРасходов_НеОблагаетсяНДС = НастройкиУчетаНДС.СтатьяРасходовНеНДС;
		ПараметрыУчета.АналитикаРасходов_НеОблагаетсяНДС = НастройкиУчетаНДС.АналитикаРасходовНеНДС;
		ПараметрыУчета.СтатьяРасходов_ОблагаетсяЕНВД = НастройкиУчетаНДС.СтатьяРасходовЕНВД;
		ПараметрыУчета.АналитикаРасходов_ОблагаетсяЕНВД = НастройкиУчетаНДС.АналитикаРасходовЕНВД;
		ПараметрыУчета.ЕстьРеализацияРаботУслугНеНаТерриторииРФ = НастройкиУчетаНДС.ЕстьРеализацияРаботУслугНеНаТерриторииРФ;
		ПараметрыУчета.ЕстьРеализацияТоваровФизлицамВЕАЭС = НастройкиУчетаНДС.ЕстьРеализацияТоваровФизлицамВЕАЭС;

		ПараметрыУчета.УчетНДСВКосмическойДеятельности = НастройкиУчетаНДС.УчетНДСВКосмическойДеятельности;
		ПараметрыУчета.ПрименяетсяРасчетНДССМежценовойРазницы = НастройкиУчетаНДС.ПрименяетсяРасчетНДССМежценовойРазницы;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// Возвращает список доступных организаций, у которых на Дату применяется НО ПродажаНеОблагаетсяНДС
// 
// Параметры:
//  ТекстЗапроса - Строка
// 
Процедура ДополнитьСписокОрганизацийБезНДС(ТекстЗапроса) Экспорт
	
	//++ Локализация	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	МАКСИМУМ(ВложенныйЗапрос.ПрименяетсяУСН) КАК ПрименяетсяУСН,
	|	МИНИМУМ(ВложенныйЗапрос.НеОблагаетсяНДС) КАК НеОблагаетсяНДС,
	|	МАКСИМУМ(ВложенныйЗапрос.Это145статья) КАК Это145статья
	|ПОМЕСТИТЬ вт_НалогообложениеОрганизаций
	|ИЗ
	|	(ВЫБРАТЬ
	|		НалогообложениеОрганизации.Организация КАК Организация,
	|		НалогообложениеОрганизации.ПрименяетсяУСН КАК ПрименяетсяУСН,
	|		ИСТИНА КАК НеОблагаетсяНДС,
	|		ЛОЖЬ КАК Это145статья
	|	ИЗ
	|		РегистрСведений.НастройкиСистемыНалогообложения.СрезПоследних(&Период,) КАК НалогообложениеОрганизации
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НалогообложениеОрганизации.Организация,
	|		ЛОЖЬ,
	|		ВЫБОР
	|			КОГДА
	|				НалогообложениеОрганизации.ОсновноеНалогообложение = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрСведений.НастройкиУчетаНДСПриУСН.СрезПоследних(&Период,) КАК НалогообложениеОрганизации
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		НалогообложениеОрганизации.Организация,
	|		ЛОЖЬ,
	|		ИСТИНА,
	|		ИСТИНА
	|	ИЗ
	|		РегистрСведений.НастройкиУчетаНДС.СрезПоследних(&Период, ПрименяетсяОсвобождениеОтУплатыНДС) КАК
	|			НалогообложениеОрганизации) КАК ВложенныйЗапрос
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Организации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_НалогообложениеОрганизаций КАК вт_НалогообложениеОрганизаций
	|		ПО Организации.Ссылка = вт_НалогообложениеОрганизаций.Организация
	|ГДЕ
	|	ЕСТЬNULL(вт_НалогообложениеОрганизаций.ПрименяетсяУСН
	|	И вт_НалогообложениеОрганизаций.НеОблагаетсяНДС
	|	ИЛИ вт_НалогообложениеОрганизаций.Это145статья, ЛОЖЬ)";
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  ОписаниеНастроек - см. РегистрыСведений.НастройкиУчетаНДС.ЗначенияПоУмолчанию
//
Процедура ДополнитьОписаниеНастроекУчетаНДСПоОрганизации(ОписаниеНастроек) Экспорт
	
	//++ Локализация
	ОписаниеНастроек.Вставить("ПрименяетсяОсвобождениеОтУплатыНДС", Ложь);
	ОписаниеНастроек.Вставить("ЕстьРеализацияРаботУслугНеНаТерриторииРФ", Ложь);
	ОписаниеНастроек.Вставить("ЕстьРеализацияТоваровФизлицамВЕАЭС", Ложь);
	ОписаниеНастроек.Вставить("ПериодичностьОформленияСводныхСправок", Перечисления.Периодичность.Месяц);
	
	ОписаниеНастроек.Вставить("УчетНДСДлительногоЦиклаПроизводства", Ложь);
	ОписаниеНастроек.Вставить("УчетНДСВКосмическойДеятельности", Ложь);
	ОписаниеНастроек.Вставить("ПрименяетсяУчетНДСПоФактическомуИспользованию", Ложь);
	ОписаниеНастроек.Вставить("ПрименяетсяРасчетНДССМежценовойРазницы", Ложь);
	ОписаниеНастроек.Вставить("Учитывать5ПроцентныйПорог", Ложь);
	
	ОписаниеНастроек.Вставить("ВариантУчетаНДСПриИзмененииВидаДеятельности", Перечисления.ВариантыУчетаНДСПриИзмененииВидаДеятельностиНаНеоблагаемую.ВключатьВСтоимость);
	ОписаниеНастроек.Вставить("СтатьяРасходовНеНДС", ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка());
	ОписаниеНастроек.Вставить("АналитикаРасходовНеНДС", Неопределено);
	ОписаниеНастроек.Вставить("СтатьяРасходовЕНВД", ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка());
	ОписаниеНастроек.Вставить("АналитикаРасходовЕНВД", Неопределено);
	
	ОписаниеНастроек.Вставить("СтатьяРасходовСписаниеНДС", ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка());
	ОписаниеНастроек.Вставить("АналитикаРасходовСписаниеНДС", Неопределено);
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  МассивСтрокОписания - Массив из Строка
//  ДействующиеНастройки - см. РегистрыСведений.НастройкиУчетаНДС.ОписаниеДействующихПараметров
//
Процедура ДополнитьОписаниеДействующихНастроекУчетаНДС(МассивСтрокОписания, ДействующиеНастройки) Экспорт
	
	//++ Локализация
	СтрокаШаблон = "%1: %2." + Символы.ПС;
	СтрокаШаблонБулево = "%1." + Символы.ПС;
	
	Если ДействующиеНастройки.ПрименяетсяОсвобождениеОтУплатыНДС Тогда
		МассивСтрокОписания.Добавить(СтрШаблон(СтрокаШаблонБулево, НСтр("ru = 'Организация освобождена от уплаты НДС'")));
	Иначе
		
		Если ЗначениеЗаполнено(ДействующиеНастройки.ПериодичностьОформленияСводныхСправок) Тогда
			МассивСтрокОписания.Добавить(
				СтрШаблон(СтрокаШаблон,
					НСтр("ru = 'Сводные справки оформляются с периодичностью'"),
					ДействующиеНастройки.ПериодичностьОформленияСводныхСправок));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДействующиеНастройки.ПериодичностьФормированияВычетовИВосстановленийНДС) Тогда
			МассивСтрокОписания.Добавить(
				СтрШаблон(СтрокаШаблон,
					НСтр("ru='Формирование вычетов и восстановлений НДС выполняется с периодичностью'"),
					ДействующиеНастройки.ПериодичностьФормированияВычетовИВосстановленийНДС));
		КонецЕсли;
		
		Если ДействующиеНастройки.ЕстьРеализацияТоваровФизлицамВЕАЭС Тогда
			МассивСтрокОписания.Добавить(
				СтрШаблон(СтрокаШаблонБулево, НСтр("ru = 'Организация реализует товары физическим лицам в ЕАЭС (п.4 ст. 147 НК РФ)'")));
		КонецЕсли;
		
		Если ДействующиеНастройки.ЕстьРеализацияРаботУслугНеНаТерриторииРФ Тогда
			МассивСтрокОписания.Добавить(
				СтрШаблон(СтрокаШаблонБулево, НСтр("ru = 'Организация реализует работы (услуги) не на территории РФ'")));
		КонецЕсли;
		
		Если ДействующиеНастройки.РаздельныйУчетТоваровПоНалогообложениюНДС Тогда
		
			Если ДействующиеНастройки.РаздельныйУчетПостатейныхПроизводственныхЗатратПоНалогообложениюНДС Тогда
				МассивСтрокОписания.Добавить(
					СтрШаблон(СтрокаШаблонБулево, НСтр("ru = 'Используется раздельный учет НДС по постатейным производственным затратам'")));
			КонецЕсли; 
					
			Если ДействующиеНастройки.ПрименяетсяУчетНДСПоФактическомуИспользованию Тогда
				МассивСтрокОписания.Добавить(
					СтрШаблон(СтрокаШаблонБулево, НСтр("ru = 'Применяется учет НДС по фактическому использованию'")));
			КонецЕсли;
				
			Если ДействующиеНастройки.УчетНДСДлительногоЦиклаПроизводства Тогда
				МассивСтрокОписания.Добавить(
					СтрШаблон(СтрокаШаблонБулево, НСтр("ru = 'Применяется особый порядок учета НДС при длит. цикле производства (п. 13 ст. 167 НК РФ)'")));
			КонецЕсли;
			
			Если ДействующиеНастройки.УчетНДСВКосмическойДеятельности Тогда
				МассивСтрокОписания.Добавить(
					СтрШаблон(СтрокаШаблонБулево, НСтр("ru = 'Применяется особый порядок учета НДС в космической деятельности (пп. 5 п. 1 ст. 164 и п. 7 ст. 165 НК РФ)'")));
			КонецЕсли;
			
			Если ДействующиеНастройки.ПрименяетсяРасчетНДССМежценовойРазницы Тогда
				МассивСтрокОписания.Добавить(
					СтрШаблон(СтрокаШаблонБулево, НСтр("ru = 'Применяется расчет НДС с межценовой разницы'")));
			КонецЕсли;
				
			Если ДействующиеНастройки.Учитывать5ПроцентныйПорог Тогда
				МассивСтрокОписания.Добавить(
					СтрШаблон(СтрокаШаблонБулево, НСтр("ru = 'Применяется 5% порог при распределении НДС по видам деятельности'")));
			КонецЕсли;
			
			Если ДействующиеНастройки.СписыватьНДСПоРасходамНеПринимаемымВНУ Тогда
				МассивСтрокОписания.Добавить(
					СтрШаблон(СтрокаШаблонБулево, НСтр("ru = 'Списывать НДС по расходам, не принимаемым в НУ'")));
			КонецЕсли;
			
			МассивСтрокОписания.Добавить(
				СтрШаблон(СтрокаШаблон,
					НСтр("ru = 'Вариант учета НДС при изменении вида деятельности'"),
					ДействующиеНастройки.ВариантУчетаНДСПриИзмененииВидаДеятельности));	
		КонецЕсли;
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  ТипыНалогообложения - СписокЗначений из ПеречислениеСсылка.ТипыНалогообложенияНДС
//  НастройкиУчета - см. УчетНДСУПСлужебный.ПрименяемыеТипыНалогообложенияНДС
//  Продажи - Булево
//  Закупки - Булево
//
Процедура ДополнитьПрименяемыеТипыНалогообложенияНДС(ТипыНалогообложения, НастройкиУчета, Продажи, Закупки) Экспорт
	
	//++ Локализация
	Если (Продажи И НастройкиУчета.ПрименяетсяЕНВД) Или (Закупки И ПолучитьФункциональнуюОпцию("ИспользоватьУведомленияОКонтролируемыхСделках")) Тогда
		Если Продажи И Закупки Тогда
			Представление = НСтр("ru = 'Облагается ЕНВД'");
		ИначеЕсли Продажи Тогда
			Представление = НСтр("ru = 'Продажа облагается ЕНВД'");
		Иначе
			Представление = НСтр("ru = 'Закупка облагается ЕНВД'");
		КонецЕсли;
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД, Представление);
	КонецЕсли;
	Если Продажи Тогда
		Если НастройкиУчета.ЭкспортСырьевыхТоваровУслуг Тогда
			ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг, НСтр("ru = 'Экспорт сырьевых товаров, работ, услуг'"));
		КонецЕсли;
		Если НастройкиУчета.ЭкспортСырьевыхТоваровУслуг Тогда
			ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров, НСтр("ru = 'Экспорт несырьевых товаров'"));
		КонецЕсли;
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт, НСтр("ru = 'Реализация работ, услуг не на территории РФ'"));
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС, НСтр("ru = 'Облагается НДС в стране ЕАЭС (не РФ)'"));
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту, НСтр("ru = 'Продажа по Патенту'"));
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы, НСтр("ru = 'Облагается НДС с межценовой разницы'"));
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос, НСтр("ru = 'Космическая деятельность'")); 
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН, НСтр("ru = 'Льготное налогообложение НДС на УСН'"));
	КонецЕсли;
	Если Закупки Тогда
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС, НСтр("ru = 'Налоговый агент по НДС'"));
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги, НСтр("ru = 'Электронные услуги иностранных организаций'")); 
	КонецЕсли;
	Если (Продажи И НастройкиУчета.ПродажаТоваровОблагаемыхНДСУПокупателя) ИЛИ (Закупки И НастройкиУчета.ПокупкаТоваровОблагаемыхНДСУПокупателя) Тогда
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя, НСтр("ru = 'Облагается НДС у покупателя'"));
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  ВидыДеятельностиНДС - см. УчетНДСУПСлужебный.ПрименяемыеВидыДеятельностиНДС
//  НастройкиУчета - см. УчетНДСУПСлужебный.ПрименяемыеВидыДеятельностиНДС
//
Процедура ДополнитьПрименяемыеВидыДеятельностиНДС(ВидыДеятельностиНДС, НастройкиУчета) Экспорт
	
	//++ Локализация
	Если НастройкиУчета.ПрименяетсяЕНВД Тогда
		ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД, НСтр("ru = 'Облагаемую ЕНВД'"));
	КонецЕсли;
	
	ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту, НСтр("ru = 'НДС - Патент'"));   
	ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН, НСтр("ru = 'Льготное налогообложение НДС на УСН'"));
	
	Если НастройкиУчета.ЭкспортСырьевыхТоваровУслуг Тогда
		ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг, НСтр("ru = 'Экспорт сырьевых товаров, работ'"));
	КонецЕсли;
	Если НастройкиУчета.ЭкспортНесырьевыхТоваров Тогда
		ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров, НСтр("ru = 'Экспорт несырьевых товаров'"));
	КонецЕсли;
	ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию, НСтр("ru = 'По фактическому использованию'"));
	
	ВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос, НСтр("ru = 'Космическую'"));
	
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  Массив - см. УчетНДСУП.ВидыДеятельностиНДСУчитываетсяВСтоимости
//
Процедура ДополнитьВидыДеятельностиНДСУчитываетсяВСтоимости(Массив) Экспорт
	
	//++ Локализация
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  Массив - см. УчетНДСУП.ВидыДеятельностиНДСПринимаетсяКВозмещению
//
Процедура ДополнитьВидыДеятельностиНДСПринимаетсяКВозмещению(Массив) Экспорт
	
	//++ Локализация
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
	
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);

	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  ТипыНалогообложения - см. УчетНДСУП.ТипыНалогообложенияНДСНеоблагаемые
//   ДляАвансов - Булево
//
Процедура ДополнитьТипыНалогообложенияНДСНеоблагаемые(ТипыНалогообложения, ДляАвансов = Ложь) Экспорт
	//++ Локализация
	ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
	Если ДляАвансов Тогда
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт);
		ТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС);
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

// Параметры:
//  Массив - см. УчетНДСУП.НалогообложенияПродажНДСНеУчитываетсяВСтоимости
//
Процедура ДополнитьНалогообложенияПродажНДСНеУчитываетсяВСтоимости(Массив) Экспорт
	
	//++ Локализация
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт);
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС);
	Массив.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы);

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область СтавкиНДС

// см. Справочники.СтавкиНДС.СоздатьЭлементыПервоначальногоЗаполнения
Процедура ЗаполнитьСправочникСтавкиНДС() Экспорт
	//++ Локализация
	НачатьТранзакцию();
	Попытка
		
		#Область СтавкаНДС20
		СтавкаНДС20 = УчетНДСРФВызовСервера.СтавкаНДСПоЗначениюПеречисления(
			Перечисления.СтавкиНДС.НДС20, Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		Если СтавкаНДС20.Пустая() Тогда
			СтавкаНДС20 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС20 = СтавкаНДС20.ПолучитьОбъект();
		КонецЕсли;
		
		СтавкаНДС20.Наименование = "20%";
		СтавкаНДС20.Ставка = 20;
		СтавкаНДС20.Страна = Справочники.СтраныМира.Россия;
		СтавкаНДС20.Основная = Истина;
		СтавкаНДС20.НачалоПериода = Дата(2019, 01, 01);
		
		СтавкаНДС20.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС20; 
		
		СтавкаНДС20.ТипыНалогообложенияНДС.Очистить();
		
		ТипНалогообложенияНДС = СтавкаНДС20.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		
		ТипНалогообложенияНДС = СтавкаНДС20.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ;	
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС20);
		#КонецОбласти
		
		#Область СтавкаНДС20_120
		СтавкаНДС20_120 = УчетНДСРФВызовСервера.СтавкаНДСПоЗначениюПеречисления(
			Перечисления.СтавкиНДС.НДС20_120, Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		Если СтавкаНДС20_120.Пустая() Тогда
			СтавкаНДС20_120 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС20_120 = СтавкаНДС20_120.ПолучитьОбъект();
		КонецЕсли;
		
		СтавкаНДС20_120.Наименование = "20/120";
		СтавкаНДС20_120.Ставка = 20;
		СтавкаНДС20_120.Страна = Справочники.СтраныМира.Россия;
		СтавкаНДС20_120.НачалоПериода = Дата(2019, 01, 01);
		
		СтавкаНДС20_120.РасчетнаяСтавка = Истина;
		СтавкаНДС20_120.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС20_120;
		СтавкаНДС20_120.СоответствующаяБазоваяСтавка = СтавкаНДС20.Ссылка;
		
		СтавкаНДС20_120.ТипыНалогообложенияНДС.Очистить();
		
		ТипНалогообложенияНДС = СтавкаНДС20_120.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		
		ТипНалогообложенияНДС = СтавкаНДС20_120.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя;
		
		ТипНалогообложенияНДС = СтавкаНДС20_120.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС20_120);
		
		СтавкаНДС20.СоответствующаяРасчетнаяСтавка = СтавкаНДС20_120.Ссылка;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС20);
		#КонецОбласти
		
		#Область СтавкаНДС18
		СтавкаНДС18 = УчетНДСРФВызовСервера.СтавкаНДСПоЗначениюПеречисления(
			Перечисления.СтавкиНДС.НДС18, Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		Если СтавкаНДС18.Пустая() Тогда
			СтавкаНДС18 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС18 = СтавкаНДС18.ПолучитьОбъект();
		КонецЕсли;
	
		СтавкаНДС18.Наименование = "18%";
		СтавкаНДС18.Ставка = 18;
		СтавкаНДС18.Страна = Справочники.СтраныМира.Россия;
		СтавкаНДС18.Основная = Истина;
		СтавкаНДС18.КонецПериода = Дата(2018, 12, 31);
		
		СтавкаНДС18.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС18;
		
		СтавкаНДС18.ТипыНалогообложенияНДС.Очистить();
		ТипНалогообложенияНДС = СтавкаНДС18.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		
		ТипНалогообложенияНДС = СтавкаНДС18.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС18);
		#КонецОбласти
		
		#Область СтавкаНДС18_118
		СтавкаНДС18_118 = УчетНДСРФВызовСервера.СтавкаНДСПоЗначениюПеречисления(
			Перечисления.СтавкиНДС.НДС18_118, Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		Если СтавкаНДС18_118.Пустая() Тогда
			СтавкаНДС18_118 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС18_118 = СтавкаНДС18_118.ПолучитьОбъект();
		КонецЕсли;
		
		СтавкаНДС18_118.Наименование = "18/118";
		СтавкаНДС18_118.Ставка = 18;
		СтавкаНДС18_118.Страна = Справочники.СтраныМира.Россия;
		СтавкаНДС18_118.КонецПериода = Дата(2018, 12, 31);
		
		СтавкаНДС18_118.РасчетнаяСтавка = Истина;
		СтавкаНДС18_118.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС18_118;
		СтавкаНДС18_118.СоответствующаяБазоваяСтавка = СтавкаНДС18.Ссылка;
		
		СтавкаНДС18_118.ТипыНалогообложенияНДС.Очистить();
		ТипНалогообложенияНДС = СтавкаНДС18_118.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		
		ТипНалогообложенияНДС = СтавкаНДС18_118.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя;	
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС18_118);
		
		СтавкаНДС18.СоответствующаяРасчетнаяСтавка = СтавкаНДС18_118.Ссылка;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС18);
		#КонецОбласти
		
		#Область СтавкаНДС10
		СтавкаНДС10 = УчетНДСРФВызовСервера.СтавкаНДСПоЗначениюПеречисления(
			Перечисления.СтавкиНДС.НДС10, Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		Если СтавкаНДС10.Пустая() Тогда
			СтавкаНДС10 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС10 = СтавкаНДС10.ПолучитьОбъект();
		КонецЕсли;
		
		СтавкаНДС10.Наименование = "10%";
		СтавкаНДС10.Ставка = 10;
		СтавкаНДС10.Страна = Справочники.СтраныМира.Россия;
		
		СтавкаНДС10.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС10;
		
		СтавкаНДС10.ТипыНалогообложенияНДС.Очистить();
		
		ТипНалогообложенияНДС = СтавкаНДС10.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС10);
		#КонецОбласти
		
		#Область СтавкаНДС10_110
		СтавкаНДС10_110 = УчетНДСРФВызовСервера.СтавкаНДСПоЗначениюПеречисления(
			Перечисления.СтавкиНДС.НДС10_110, Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС, Истина);
		Если СтавкаНДС10_110.Пустая() Тогда
			СтавкаНДС10_110 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС10_110 = СтавкаНДС10_110.ПолучитьОбъект();
		КонецЕсли;
		
		СтавкаНДС10_110.Наименование = "10/110";
		СтавкаНДС10_110.Ставка = 10;
		СтавкаНДС10_110.Страна = Справочники.СтраныМира.Россия;
				
		СтавкаНДС10_110.РасчетнаяСтавка = Истина;
		СтавкаНДС10_110.ПеречислениеСтавкаНДС =  Перечисления.СтавкиНДС.НДС10_110;
		СтавкаНДС10_110.СоответствующаяБазоваяСтавка = СтавкаНДС10.Ссылка;
		
		СтавкаНДС10_110.ТипыНалогообложенияНДС.Очистить();
		ТипНалогообложенияНДС = СтавкаНДС10_110.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		
		ТипНалогообложенияНДС = СтавкаНДС10_110.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя;
		
		ТипНалогообложенияНДС = СтавкаНДС10_110.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС10_110);
		
		СтавкаНДС10.СоответствующаяРасчетнаяСтавка = СтавкаНДС10_110.Ссылка;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС10);
		#КонецОбласти
			
		#Область СтавкаНДС15_25
		СтавкаНДС15_25 = УчетНДСРФВызовСервера.СтавкаНДСПоЗначениюПеречисления(
			Перечисления.СтавкиНДС.НДС18_118, Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги);
		Если СтавкаНДС15_25.Пустая() Тогда
			СтавкаНДС15_25 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС15_25 = СтавкаНДС15_25.ПолучитьОбъект();
		КонецЕсли;

		СтавкаНДС15_25.Наименование = "15,25%";
		СтавкаНДС15_25.Ставка = 15.25;
		СтавкаНДС15_25.Страна = Справочники.СтраныМира.Россия;
		СтавкаНДС15_25.КонецПериода = Дата(2018, 12, 31);
		
		СтавкаНДС15_25.РасчетнаяСтавка = Ложь;
		СтавкаНДС15_25.ПеречислениеСтавкаНДС =  Перечисления.СтавкиНДС.НДС18_118;
		
		СтавкаНДС15_25.ТипыНалогообложенияНДС.Очистить();
		ТипНалогообложенияНДС = СтавкаНДС15_25.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС15_25);
		#КонецОбласти
		
		#Область СтавкаНДС16_67
		СтавкаНДС16_67 = УчетНДСРФВызовСервера.СтавкаНДСПоЗначениюПеречисления(Перечисления.СтавкиНДС.НДС20_120, Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги);
		Если СтавкаНДС16_67.Пустая() Тогда
			СтавкаНДС16_67 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС16_67 = СтавкаНДС16_67.ПолучитьОбъект();
		КонецЕсли;
	
		СтавкаНДС16_67.Наименование = "16,67%";
		СтавкаНДС16_67.Ставка = 16.67;
		СтавкаНДС16_67.Страна = Справочники.СтраныМира.Россия;
		СтавкаНДС16_67.НачалоПериода = Дата(2019, 01, 01);
			
		СтавкаНДС16_67.РасчетнаяСтавка = Ложь;
		СтавкаНДС16_67.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС20_120;
		
		СтавкаНДС16_67.ТипыНалогообложенияНДС.Очистить();
		ТипНалогообложенияНДС = СтавкаНДС16_67.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги;
		ТипНалогообложенияНДС = СтавкаНДС16_67.ТипыНалогообложенияНДС.Добавить(); 
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы; 
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС16_67);
		#КонецОбласти
		
		#Область СтавкаНДС9_09
		СтавкаНДС9_09 = УчетНДСРФВызовСервера.СтавкаНДСПоЗначениюПеречисления(Перечисления.СтавкиНДС.НДС10_110, Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы, Ложь);
		Если СтавкаНДС9_09.Пустая() Тогда
			СтавкаНДС9_09 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС9_09 = СтавкаНДС9_09.ПолучитьОбъект();
		КонецЕсли;
	
		СтавкаНДС9_09.Наименование = "9,09%";
		СтавкаНДС9_09.Ставка = 9.09;
		СтавкаНДС9_09.Страна = Справочники.СтраныМира.Россия;
		СтавкаНДС9_09.НачалоПериода = Дата(2023, 01, 01);
			
		СтавкаНДС9_09.РасчетнаяСтавка = Ложь;
		СтавкаНДС9_09.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС10_110;
		
		СтавкаНДС9_09.ТипыНалогообложенияНДС.Очистить();
		ТипНалогообложенияНДС = СтавкаНДС9_09.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы; 
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС9_09);
		#КонецОбласти
		
		#Область СтавкаНДС0
		СтавкаНДС0 = УчетНДСРФВызовСервера.СтавкаНДСПоЗначениюПеречисления(Перечисления.СтавкиНДС.НДС0);
		Если СтавкаНДС0.Пустая() Тогда
			СтавкаНДС0 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС0 = СтавкаНДС0.ПолучитьОбъект();
		КонецЕсли;
	
		СтавкаНДС0.Наименование = "0%";
		СтавкаНДС0.Ставка = 0;
		СтавкаНДС0.Страна = Справочники.СтраныМира.Россия;
		
		СтавкаНДС0.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС0;
		
		СтавкаНДС0.ТипыНалогообложенияНДС.Очистить();
		
		ТипНалогообложенияНДС = СтавкаНДС0.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		
		ТипНалогообложенияНДС = СтавкаНДС0.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт;
		
		ТипНалогообложенияНДС = СтавкаНДС0.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг;
		
		ТипНалогообложенияНДС = СтавкаНДС0.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров;
		
		ТипНалогообложенияНДС = СтавкаНДС0.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ;
		
		ТипНалогообложенияНДС = СтавкаНДС0.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.Космос; 
		
		ТипНалогообложенияНДС = СтавкаНДС0.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС0);
		#КонецОбласти
		
		#Область СтавкаБезНДС
		
		СтавкаБезНДС = Справочники.СтавкиНДС.БезНДС.ПолучитьОбъект();
			
		СтавкаБезНДС.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		
		ТипНалогообложенияНДС = СтавкаБезНДС.ТипыНалогообложенияНДС.Добавить(); 
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС; 
		
		ТипНалогообложенияНДС = СтавкаБезНДС.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД;
		
		ТипНалогообложенияНДС = СтавкаБезНДС.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги; 

		ТипНалогообложенияНДС = СтавкаБезНДС.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт; 
		
		ТипНалогообложенияНДС = СтавкаБезНДС.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС; 
		
		ТипНалогообложенияНДС = СтавкаБезНДС.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту; 
		
		ТипНалогообложенияНДС = СтавкаБезНДС.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаБезНДС);
		#КонецОбласти   
		
		#Область СтавкаНДС5		
		СтавкаНДС5 = УчетНДСРФВызовСервера.СтавкаНДСПоЗначениюПеречисления(Перечисления.СтавкиНДС.НДС5);
		Если СтавкаНДС5.Пустая() Тогда
			СтавкаНДС5 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС5 = СтавкаНДС5.ПолучитьОбъект();
		КонецЕсли;
	
		СтавкаНДС5.Наименование = "5%";
		СтавкаНДС5.Ставка = 5;
		СтавкаНДС5.Страна = Справочники.СтраныМира.Россия;
		СтавкаНДС5.НачалоПериода = Дата(2025, 01, 01);
		
		СтавкаНДС5.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС5;
		
		СтавкаНДС5.ТипыНалогообложенияНДС.Очистить();
		
		ТипНалогообложенияНДС = СтавкаНДС5.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН;
		ТипНалогообложенияНДС = СтавкаНДС5.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС5);
		#КонецОбласти 
		
		#Область СтавкаНДС7		
		СтавкаНДС7 = УчетНДСРФВызовСервера.СтавкаНДСПоЗначениюПеречисления(Перечисления.СтавкиНДС.НДС7);
		Если СтавкаНДС7.Пустая() Тогда
			СтавкаНДС7 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС7 = СтавкаНДС7.ПолучитьОбъект();
		КонецЕсли;
	
		СтавкаНДС7.Наименование = "7%";
		СтавкаНДС7.Ставка = 7;
		СтавкаНДС7.Страна = Справочники.СтраныМира.Россия; 
		СтавкаНДС7.НачалоПериода = Дата(2025, 01, 01);
		
		СтавкаНДС7.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС7;
		
		СтавкаНДС7.ТипыНалогообложенияНДС.Очистить();
		
		ТипНалогообложенияНДС = СтавкаНДС7.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН;
		ТипНалогообложенияНДС = СтавкаНДС7.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС7);
		#КонецОбласти   
		
		#Область СтавкаНДС5_105
		СтавкаНДС5_105 = УчетНДСРФВызовСервера.СтавкаНДСПоЗначениюПеречисления(Перечисления.СтавкиНДС.НДС5_105);
		Если СтавкаНДС5_105.Пустая() Тогда
			СтавкаНДС5_105 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС5_105 = СтавкаНДС5_105.ПолучитьОбъект();
		КонецЕсли;
	
		СтавкаНДС5_105.Наименование = "5/105";
		СтавкаНДС5_105.Ставка = 5;
		СтавкаНДС5_105.Страна = Справочники.СтраныМира.Россия;
		СтавкаНДС5_105.НачалоПериода = Дата(2025, 01, 01);
		
		СтавкаНДС5_105.РасчетнаяСтавка = Истина;
		СтавкаНДС5_105.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС5_105;
		СтавкаНДС5_105.СоответствующаяБазоваяСтавка = СтавкаНДС5.Ссылка;		
		
		СтавкаНДС5_105.ТипыНалогообложенияНДС.Очистить();
		
		ТипНалогообложенияНДС = СтавкаНДС5_105.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН;
		ТипНалогообложенияНДС = СтавкаНДС5_105.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС5_105);
		
		СтавкаНДС5.СоответствующаяРасчетнаяСтавка = СтавкаНДС5_105.Ссылка;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС5);
		#КонецОбласти  
		
		#Область СтавкаНДС7_107
		СтавкаНДС7_107 = УчетНДСРФВызовСервера.СтавкаНДСПоЗначениюПеречисления(Перечисления.СтавкиНДС.НДС7_107);
		Если СтавкаНДС7_107.Пустая() Тогда
			СтавкаНДС7_107 = Справочники.СтавкиНДС.СоздатьЭлемент();
		Иначе
			СтавкаНДС7_107 = СтавкаНДС7_107.ПолучитьОбъект();
		КонецЕсли;
	
		СтавкаНДС7_107.Наименование = "7/107";
		СтавкаНДС7_107.Ставка = 7;
		СтавкаНДС7_107.Страна = Справочники.СтраныМира.Россия;
		СтавкаНДС7_107.НачалоПериода = Дата(2025, 01, 01);
		
		СтавкаНДС7_107.РасчетнаяСтавка = Истина;
		СтавкаНДС7_107.ПеречислениеСтавкаНДС = Перечисления.СтавкиНДС.НДС7_107;
		СтавкаНДС7_107.СоответствующаяБазоваяСтавка = СтавкаНДС7.Ссылка;
		
		СтавкаНДС7_107.ТипыНалогообложенияНДС.Очистить();
		
		ТипНалогообложенияНДС = СтавкаНДС7_107.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН; 
		ТипНалогообложенияНДС = СтавкаНДС7_107.ТипыНалогообложенияНДС.Добавить();
		ТипНалогообложенияНДС.ТипНалогообложенияНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС7_107);
		
		СтавкаНДС7.СоответствующаяРасчетнаяСтавка = СтавкаНДС7_107.Ссылка;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СтавкаНДС7);
		#КонецОбласти
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  Номенклатура - см. УчетНДСУП.СтавкаНДСПоНоменклатуреИНалогообложению
//  НалогообложениеНДС - см. УчетНДСУП.СтавкаНДСПоНоменклатуреИНалогообложению
//  Организация - см. УчетНДСУП.СтавкаНДСПоНоменклатуреИНалогообложению
//  Дата - см. УчетНДСУП.СтавкаНДСПоНоменклатуреИНалогообложению
//  СтавкаНДС - см. УчетНДСУП.СтавкаНДСПоНоменклатуреИНалогообложению
//  УказаннаяСтавкаНДС - СправочникСсылка.СтавкиНДС - последняя выбранная в документе ставка НДС. Заполнена только для Исходящих документов.
//
Процедура ЗаполнитьСтавкуНДСПоНоменклатуреИНалогообложению(Номенклатура, НалогообложениеНДС, Организация, Дата, СтавкаНДС, УказаннаяСтавкаНДС = Неопределено) Экспорт
	//++ Локализация
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Номенклатура, "СтавкаНДС, ПодакцизныйТовар, ТипНоменклатуры");
	Иначе
		РеквизитыНоменклатуры = Новый Структура;
		РеквизитыНоменклатуры.Вставить("СтавкаНДС", Справочники.СтавкиНДС.ПустаяСсылка());
		РеквизитыНоменклатуры.Вставить("ПодакцизныйТовар", Ложь);
		РеквизитыНоменклатуры.Вставить("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.ПустаяСсылка());
	КонецЕсли;
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ Тогда
		
		СтавкаНДС = УчетНДСУП.СтавкаНДСНоменклатуры(Номенклатура, Организация, Дата);
		
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
		
		Если РеквизитыНоменклатуры.ПодакцизныйТовар Тогда
			СтавкаНДС = УчетНДСУП.СтавкаНДСНоменклатуры(Номенклатура, Организация, Дата);
		Иначе
			СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
		КонецЕсли;
		
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
		
		СтавкаНДС = УчетНДСУП.СтавкаНДСПоУмолчанию(Организация, Дата, Истина, НалогообложениеНДС);  
		
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН Тогда 
		
		НастройкиУчетаНДСПриУСН = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату("НастройкиУчетаНДСПриУСН",
			Организация,
			Дата);
		Если НастройкиУчетаНДСПриУСН <> Неопределено Тогда
			СтавкаНДС = НастройкиУчетаНДСПриУСН.СтавкаНДС; 
		Иначе 
			СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
		КонецЕсли;
		
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы Тогда
		
		СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
		
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги Тогда
		
		Если РеквизитыНоменклатуры.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Работа
			И РеквизитыНоменклатуры.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга Тогда
			СтавкаНДС = УчетНДСУП.СтавкаНДСНоменклатуры(Номенклатура, Организация, Дата);
		Иначе
			СтавкаНДС = УчетНДСУП.СтавкаНДСПоУмолчанию(Организация, Дата, Истина, НалогообложениеНДС);
		КонецЕсли;
		
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту Тогда
		
		Если РеквизитыНоменклатуры.ПодакцизныйТовар Тогда
			СтавкаНДС = УчетНДСУП.СтавкаНДСНоменклатуры(Номенклатура, Организация, Дата);
		Иначе
			СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
		КонецЕсли;
	
	ИначеЕсли ЗначениеЗаполнено(Номенклатура)
		И НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС 
		И НЕ ЗначениеЗаполнено(СтавкаНДС)
		И НЕ ЗначениеЗаполнено(РеквизитыНоменклатуры.СтавкаНДС) Тогда
		
		// Код добавлен временно, после окончания переходов с 2.4 на 2.5 необходимо удалить.
		// Обеспечивает заполнение СтавкиНДС в новых документах, 
		// пока не выполнен обработчик по заполнению нового рекизита СтавкаНДС (СправочникСсылка.СтавкиНДС) по данным УдалитьСтавкаНДС (ПеречислениеСсылка.СтавкиНДС).
		//@skip-check wrong-string-literal-content
		СтавкаНДСПеречислением = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "УдалитьСтавкаНДС");
		СтавкаНДС = СтавкаНДСПоПеречислению(СтавкаНДСПеречислением, НалогообложениеНДС);
		
	КонецЕсли;
	СписокСтавокКИзменению = Новый СписокЗначений();
	СписокСтавокКИзменению.Добавить(УчетНДСРФКлиентСерверПовтИсп.СтавкаНДСПоЗначениюПеречисления(Перечисления.СтавкиНДС.НДС5));
	СписокСтавокКИзменению.Добавить(УчетНДСРФКлиентСерверПовтИсп.СтавкаНДСПоЗначениюПеречисления(Перечисления.СтавкиНДС.НДС7));
	Если ЗначениеЗаполнено(УказаннаяСтавкаНДС) И СписокСтавокКИзменению.НайтиПоЗначению(УказаннаяСтавкаНДС) <> Неопределено Тогда
		Если СтавкаНДС <> Справочники.СтавкиНДС.БезНДС Тогда
			 СтавкаНДС = УказаннаяСтавкаНДС;
		КонецЕсли;
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  СтавкаНДС - см. УчетНДСУП.СтавкаНДСПоУмолчанию
//  Дата - см. УчетНДСУП.СтавкаНДСПоУмолчанию
//  РасчетнаяСтавка - Булево - указывает необходимость получения расчетной ставки НДС X/(100 + X).
//  НалогообложениеНДС - см. УчетНДСУП.СтавкаНДСПоУмолчанию
//
Процедура УстановитьСтавкуНДСПоУмолчанию(СтавкаНДС, Знач Дата, Знач РасчетнаяСтавка, Знач НалогообложениеНДС) Экспорт
	
	//++ Локализация
	Если Дата >= '20190101' Тогда
		Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы Тогда 
			СтавкаНДС = СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС.НДС20_120, НалогообложениеНДС, РасчетнаяСтавка);
		ИначеЕсли РасчетнаяСтавка Тогда 
			СтавкаНДС = СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС.НДС20_120, НалогообложениеНДС)
		Иначе
			СтавкаНДС = СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС.НДС20, НалогообложениеНДС);
		КонецЕсли;
	Иначе
		Если РасчетнаяСтавка Тогда 
			СтавкаНДС = СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС.НДС18_118, НалогообложениеНДС)
		Иначе
			СтавкаНДС = СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС.НДС18, НалогообложениеНДС);
		КонецЕсли;
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  СтавкаНДС - см. УчетНДСУП.ЗаполнитьСтавкуНДСДляПлатежей
//  НалогообложениеНДС - см. УчетНДСУП.ЗаполнитьСтавкуНДСДляПлатежей
//  Организация - см. УчетНДСУП.ЗаполнитьСтавкуНДСДляПлатежей
//  Дата - см. УчетНДСУП.ЗаполнитьСтавкуНДСДляПлатежей
//
Процедура ЗаполнитьСтавкаНДСДляПлатежей(СтавкаНДС, Знач НалогообложениеНДС, Знач Организация, Знач Дата) Экспорт
	
	//++ Локализация
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД
		ИЛИ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя
		ИЛИ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС
		ИЛИ НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту Тогда
		СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаСтавкаНДСПоСпискуНоменклатуры(СтруктураДействий, ОписаниеЗапроса) Экспорт
	
	ТекстЗарпоса = 
	"ВЫБРАТЬ
	|	Товары.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
	|	Товары.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(СправочникНоменклатура.ПодакцизныйТовар, ЛОЖЬ) КАК ПодакцизныйТовар, 
	|	ЕСТЬNULL(СправочникНоменклатура.ТипНоменклатуры, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПустаяСсылка)) КАК ТипНоменклатуры
	|ИЗ
	|	ВтИсточникДанных КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка";
	
	ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗарпоса, "РеквизитыНоменклатурыСтавкаНДС");
	
КонецПроцедуры

// Дозаполняет параметр СтавкаНДС операции по номенклатуре и типу налогообложения НДС, используется при пакетной
// обработке строк табличных частей.
// 
// Параметры:
//   Номенклатура - СправочникСсылка.Номенклатура, Неопределено - Номенклатура из которой необходимо получить ставку НДС.
//   НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Налогообложение НДС операции.
//   СтавкаНДС - СправочникСсылка.СтавкиНДС - Ставка НДС по номенклатуре в текущей строке табличной части и типу налогообложения.
//   КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения.
//
Процедура ЗаполнитьСтавкуНДСПоНоменклатуреИНалогообложениюПакетно(Номенклатура, НалогообложениеНДС, СтавкаНДС, КэшированныеЗначения) Экспорт
	
	//++ Локализация
	РеквизитыНоменклатурыПакетно = ПакетнаяОбработкаТабличнойЧастиСервер.ДанныеДляОбработкиСтроки("РеквизитыНоменклатурыСтавкаНДС", КэшированныеЗначения); 
		
	Если ЗначениеЗаполнено(Номенклатура)
		И Не РеквизитыНоменклатурыПакетно = Неопределено 
		И РеквизитыНоменклатурыПакетно.Количество()Тогда
			
		РеквизитыНоменклатуры = РеквизитыНоменклатурыПакетно[0];
	Иначе
		РеквизитыНоменклатуры = Новый Структура;
		РеквизитыНоменклатуры.Вставить("СтавкаНДС", Справочники.СтавкиНДС.ПустаяСсылка());
		РеквизитыНоменклатуры.Вставить("ПодакцизныйТовар", Ложь);
		РеквизитыНоменклатуры.Вставить("ТипНоменклатуры", Перечисления.ТипыНоменклатуры.ПустаяСсылка());
	КонецЕсли;
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ Тогда
		
		СтавкаНДС = УчетНДСУП.СтавкаНДСНоменклатурыПакетно(КэшированныеЗначения);
		
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
		
		Если РеквизитыНоменклатуры.ПодакцизныйТовар Тогда
			СтавкаНДС = УчетНДСУП.СтавкаНДСНоменклатурыПакетно(КэшированныеЗначения);
		Иначе
			СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
		КонецЕсли;
		
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
		
		СтавкаНДС = УчетНДСУП.СтавкаНДСПоУмолчаниюПакетно(КэшированныеЗначения, Истина, НалогообложениеНДС);
		
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы Тогда
		
		СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
		
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги Тогда
		
		Если РеквизитыНоменклатуры.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Работа
			И РеквизитыНоменклатуры.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга Тогда
			СтавкаНДС = УчетНДСУП.СтавкаНДСНоменклатурыПакетно(КэшированныеЗначения);
		Иначе
			СтавкаНДС = УчетНДСУП.СтавкаНДСПоУмолчаниюПакетно(КэшированныеЗначения, Истина, НалогообложениеНДС);
		КонецЕсли;
		
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту Тогда
		
		Если РеквизитыНоменклатуры.ПодакцизныйТовар Тогда
			СтавкаНДС = УчетНДСУП.СтавкаНДСНоменклатурыПакетно(КэшированныеЗначения);
		Иначе
			СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
		КонецЕсли;
	
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

#Область МетодыОбновленияИБ

// Получение элемента справочника СтавкиНДС по перечислению СтавкиНДС
//
// Параметры:
//  ПеречислениеСтавкаНДС - ПеречислениеСсылка - Значение перечисления Ставки НДС по которому нужно получить 
//                                                    соответствующее значение справочника Ставки НДС.
//	ТипНалогообложенияНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - налогообложение НДС, в рамках которого нужно 
//																		найти ставку.
//	РасчетнаяСтавка       - Булево - значение реквизита РасчетнаяСтавка. Если Неопределено, ставка получается без учета данного реквизита.
// Возвращаемое значение:
//  - Неопределено - если не локализация
//  - СправочникСсылка.СтавкиНДС - СправочникСсылка.СтавкиНДС - Соответствующая перечислению ставка НДС.
// 
Функция СтавкаНДСПоПеречислению(ПеречислениеСтавкаНДС, ТипНалогообложенияНДС = Неопределено, РасчетнаяСтавка = Неопределено) Экспорт 
	
	Значение = Неопределено;
	//++ Локализация
	Значение = УчетНДСРФКлиентСерверПовтИсп.СтавкаНДСПоЗначениюПеречисления(ПеречислениеСтавкаНДС, ТипНалогообложенияНДС, РасчетнаяСтавка);
	//-- Локализация
	Возврат Значение;
	
КонецФункции

// Заполняет РС.ОсновныеСтавкиНДС первоначальными данными
//
Процедура ОсновныеСтавкиНДС_СоздатьЭлементыПервоначальногоЗаполнения() Экспорт
	
	//++ Локализация
	НаборЗаписей = РегистрыСведений.ОсновныеСтавкиНДС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(Дата('20040101'));
	НаборЗаписей.Отбор.Страна.Установить(Справочники.СтраныМира.Россия);

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата('20040101');
	НоваяЗапись.Страна = Справочники.СтраныМира.Россия;
	НоваяЗапись.СтавкаНДС = СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС.НДС18);
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);

	НаборЗаписей = РегистрыСведений.ОсновныеСтавкиНДС.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(Дата('20190101'));
	НаборЗаписей.Отбор.Страна.Установить(Справочники.СтраныМира.Россия);
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата('20190101');
	НоваяЗапись.Страна = Справочники.СтраныМира.Россия;
	НоваяЗапись.СтавкаНДС = СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС.НДС20);
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область УчетВходящегоНДС

// Параметры:
//  НедоступныеТипыНалогообложения - Массив из ПеречислениеСсылка.ТипыНалогообложенияНДС
//  ПараметрыЗаполнения - см. УчетНДСУПСлужебный.ДоступныеНалогообложенияНДСЗакупки
//
Процедура ДополнитьНедоступныеПоОперацииТипыНалогообложенияЗакупки(НедоступныеТипыНалогообложения, ПараметрыЗаполнения) Экспорт
	
	//++ Локализация
	
	//@skip-check wrong-string-literal-content
	ЮрФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыЗаполнения.Контрагент, "ЮрФизЛицо");
	Если ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент ИЛИ Не ПараметрыЗаполнения.ПриобретениеНаСтатьи Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги);
	КонецЕсли;

	Если Не ПараметрыЗаполнения.ПриобретениеТоваров И Не ПараметрыЗаполнения.ВозвратТоваровПоставщику Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВозвратТоваровПоставщику Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыкупВозвратнойТарыУПоставщика Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриемНаКомиссию
		ИЛИ ПараметрыЗаполнения.ВозвратТоваровКомитенту Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ИмпортТоваров ИЛИ ПараметрыЗаполнения.ВвозТоваровИзТаможенногоСоюза Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПоступлениеИзТоваровВПути Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЗакупкаЧерезПодотчетноеЛицо Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.УслугаПоАренде Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
		
		
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриемНаХранение Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;

	Если ПараметрыЗаполнения.ПоступлениеИзПереработки Тогда
		НедоступныеТипыНалогообложения.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ПроверитьЗаполнениеДокументаЗакупкиПоНалогообложениюНДС
Процедура ПроверитьЗаполнениеДокументаЗакупкиПоНалогообложениюНДС(Объект, НалогообложениеНДС, ПараметрыПроверки, Отказ) Экспорт
	
	//++ Локализация
	Возврат;
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.УстановитьУсловноеОформлениеСуммНДСПоНалогообложениюЗакупки
Процедура ДополнитьУсловноеОформлениеСуммНДСПоНалогообложениюЗакупки(Форма, ИмяПоляВводаСтавкиНДС, ИмяПоляВводаСуммыНДС, ИмяПоляВводаСуммыСНДС) Экспорт
	
	//++ Локализация
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	//
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСтавкиНДС].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСуммыНДС].Имя);

	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаСуммыСНДС].Имя);
	
	СписокНалогообложенийБезНДС = Новый СписокЗначений;
	СписокНалогообложенийБезНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	СписокНалогообложенийБезНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС);
	СписокНалогообложенийБезНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НалогообложениеНДС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ОтборЭлемента.ПравоеЗначение = СписокНалогообложенийБезНДС;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	//
	
	// Ожидаем ответа разработчиков платформы по запросу 30164862
	Если Не (ОбщегоНазначения.ЭтоВебКлиент() ИЛИ ОбщегоНазначения.ЭтоMacOSКлиент()) Тогда
		
		СтавкиНДС = Новый Соответствие;
		СтавкиНДС.Вставить(СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС.НДС18),		НСтр("ru = '4%'"));
		СтавкиНДС.Вставить(СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС.НДС18_118),	НСтр("ru = '4/104'"));
		СтавкиНДС.Вставить(СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС.НДС10),		НСтр("ru = '2%'"));
		СтавкиНДС.Вставить(СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС.НДС10_110),	НСтр("ru = '2/102'"));
		
		ЭлементФормыСтавкаНДС = Форма.Элементы.Найти(ИмяПоляВводаСтавкиНДС);
		
		Для Каждого СтавкаНДС Из СтавкиНДС Цикл
			
			Элемент = УсловноеОформление.Элементы.Добавить();
			
			ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
			ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ИмяПоляВводаСтавкиНДС);
			
			ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ЭлементФормыСтавкаНДС.ПутьКДанным);
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ОтборЭлемента.ПравоеЗначение = СтавкаНДС.Ключ;
			
			ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			// на ВебКлиенте, 8.3.12.1567 такой путь к данным не является валидным 
			ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Контрагент.НДСпоСтавкам4и2");
			ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ОтборЭлемента.ПравоеЗначение = Истина;
			
			Элемент.Оформление.УстановитьЗначениеПараметра("Текст", СтавкаНДС.Значение);
			
		КонецЦикла;
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  ДоступныеВидыДеятельностиНДС - Структура
//  НедоступныеВидыДеятельностиНДС - Массив из ПеречислениеСсылка.ТипыНалогообложенияНДС
//  ПараметрыЗаполнения - см. УчетНДСУПСлужебный.ДоступныеВидыДеятельностиНДС
//
Процедура ДополнитьДоступныеНедоступныеВидыДеятельностиНДСПоПараметрам(ДоступныеВидыДеятельностиНДС, НедоступныеВидыДеятельностиНДС, ПараметрыЗаполнения) Экспорт
	
	//++ Локализация
	ПараметрыУчетаИБ = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(ПараметрыЗаполнения.Организация, ПараметрыЗаполнения.Дата);
	
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Организация) Тогда
		ОсновнойВидДеятельностиНДСЗакупки = ПараметрыУчетаОрганизации.ОсновнойВидДеятельностиНДСЗакупки;
		РаздельныйУчетНДС = ПараметрыУчетаОрганизации.РаздельныйУчетНДС;
		ПрименяетсяЕНВД   = ПараметрыУчетаОрганизации.ПрименяетсяЕНВД;
		ПрименяетсяПСН    = ПараметрыУчетаОрганизации.ПрименяетсяПСН;
	Иначе
		ОсновнойВидДеятельностиНДСЗакупки = ПараметрыУчетаИБ.ОсновнойВидДеятельностиНДСЗакупки;
		РаздельныйУчетНДС = ПараметрыУчетаИБ.РаздельныйУчетНДС;
		ПрименяетсяЕНВД   = ПараметрыУчетаИБ.ПрименяетсяЕНВД;
		ПрименяетсяПСН    = ПараметрыУчетаИБ.ПрименяетсяПСН;
	КонецЕсли;
	
	// Дополним доступные виды деятельности
	
	Если ПараметрыЗаполнения.ПриобретениеТоваров Тогда
		
		Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
			МассивДоступных = Новый Массив;
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
			ДоступныеВидыДеятельностиНДС.Вставить("ПриобретениеТоваров", МассивДоступных);
		Иначе
			МассивДоступных = Новый Массив;
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию); 
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ПриобретениеТоваров, МассивДоступных);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриобретениеРабот Тогда
		Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
			МассивДоступных = Новый Массив;
			Если ПараметрыЗаполнения.ПриобретениеТоваров Тогда
				МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
			КонецЕсли;
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ПриобретениеРабот, МассивДоступных);
		Иначе
			МассивДоступных = Новый Массив;
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ПриобретениеРабот, МассивДоступных);
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПриобретениеНаСтатьи Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);
		Если ПараметрыЗаполнения.ПриобретениеТоваров ИЛИ ПараметрыЗаполнения.ПриобретениеРабот Тогда
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ПриобретениеНаСтатьи, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеТоваровНаСкладах Тогда
		МассивДоступных = Новый Массив;
		Если РаздельныйУчетНДС Тогда
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		КонецЕсли;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту); 
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ДвижениеТоваровНаСкладах, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ДвижениеМеждуФилиалами Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ДвижениеМеждуФилиалами, МассивДоступных);
	КонецЕсли;
		
	Если ПараметрыЗаполнения.ДвижениеТоваровИРаботВПроизводстве Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ДвижениеТоваровИРаботВПроизводстве, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.СписаниеТоваровИРаботНаСтатьи Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.СписаниеТоваровИРаботНаСтатьи, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыпускПродукцииИРабот Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ВыпускПродукцииИРабот, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.СборкаРазборкаТоваров Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту); 
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);
		Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
			МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.СборкаРазборкаТоваров, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПередачаВЭксплуатацию Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС); 
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ПередачаВЭксплуатацию, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПрочееВыбытиеТоваров Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту); 
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ПрочееВыбытиеТоваров, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЛизинговоеИмуществоНаБалансе Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыДеятельностиНДС.ЛизинговоеИмуществоНаБалансе, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.КорректировкаВидаДеятельностиНДС Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОпределяетсяРаспределением);
		ДоступныеВидыДеятельностиНДС.Вставить("КорректировкаВидаДеятельностиНДС", МассивДоступных);
	КонецЕсли;
	
	// Дополним не доступные по настройкам виды деятельности
	Если ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	КонецЕсли;
		
	Если Не РаздельныйУчетНДС Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию);
	КонецЕсли;
	
	Если НЕ (РаздельныйУчетНДС ИЛИ ПараметрыУчетаОрганизации.ПрименяетсяУСН)
			Или Не ПрименяетсяЕНВД Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	КонецЕсли;

	Если НЕ (РаздельныйУчетНДС ИЛИ ПараметрыУчетаОрганизации.ПрименяетсяУСН)
			ИЛИ НЕ ПрименяетсяПСН
			ИЛИ НЕ Справочники.Патенты.ЕстьДействующийПатент(ПараметрыЗаполнения.Организация,
			?(ПараметрыЗаполнения.Свойство("Подразделение"), ПараметрыЗаполнения.Подразделение , Неопределено),
				ПараметрыЗаполнения.Дата) Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту)
	КонецЕсли;
		
	
	ДатаПроверки = ?(ЗначениеЗаполнено(ПараметрыЗаполнения.Дата), ПараметрыЗаполнения.Дата, ТекущаяДатаСеанса());
	Если Не РаздельныйУчетНДС 
		Или Не ПараметрыУчетаИБ.ЭкспортНесырьевыхТоваров
		Или ДатаПроверки < ПараметрыУчетаИБ.ДатаРазделенияЭкспорта Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	КонецЕсли;
	
	Если Не РаздельныйУчетНДС 
		Или Не ПараметрыУчетаИБ.ЭкспортСырьевыхТоваровУслуг
		Или ДатаПроверки < ПараметрыУчетаИБ.ДатаРазделенияЭкспорта Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	КонецЕсли;
	
	Если Не РаздельныйУчетНДС Или Не ПараметрыУчетаОрганизации.УчетНДСВКосмическойДеятельности Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос)
	КонецЕсли;
	
	Если ПараметрыУчетаОрганизации.ОсновноеНалогообложениеНДСПродажи <> Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН
			Или ДатаПроверки < УчетНДС.ДатаНачалаПримененияНДСнаУСН() Тогда
		НедоступныеВидыДеятельностиНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  НовыйВидДеятельностиНДС - см. УчетНДСУП.ЗаполнитьВидДеятельностиНДС
//  ТекущийВидДеятельностиНДС - см. УчетНДСУП.ЗаполнитьВидДеятельностиНДС
//  ПараметрыЗаполнения - см. УчетНДСУП.ЗаполнитьВидДеятельностиНДС
//
Процедура ЗаполнитьВидДеятельностиНДСПоПараметрам(НовыйВидДеятельностиНДС, ТекущийВидДеятельностиНДС, ПараметрыЗаполнения) Экспорт
	
	//++ Локализация
	ПараметрыУчетаПоОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
				ПараметрыЗаполнения.Организация,
				ПараметрыЗаполнения.Дата,
				ПараметрыЗаполнения.Склад);
				
	Если ТекущийВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
			ИЛИ ТекущийВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС
			ИЛИ ТекущийВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН
			ИЛИ ТекущийВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД
			ИЛИ ТекущийВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию
			ИЛИ ТекущийВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту Тогда
			
		Если (ПараметрыЗаполнения.ПриобретениеТоваров
					ИЛИ ПараметрыЗаполнения.ПриобретениеРабот
					ИЛИ ПараметрыЗаполнения.ДвижениеТоваровНаСкладах
					ИЛИ ПараметрыЗаполнения.СборкаРазборкаТоваров)
				И ТекущийВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту Тогда
			НовыйВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту;
		ИначеЕсли ПараметрыЗаполнения.ПриобретениеТоваров 
			И ПараметрыУчетаПоОрганизации.ОсновнойВидДеятельностиНДСЗакупки = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
			НовыйВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию;
		ИначеЕсли (ПараметрыЗаполнения.ПриобретениеТоваров
					ИЛИ ПараметрыЗаполнения.ДвижениеТоваровНаСкладах
					ИЛИ ПараметрыЗаполнения.СборкаРазборкаТоваров)
				И ПараметрыУчетаПоОрганизации.НалогообложениеНДСРозничнойПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
			НовыйВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД;
		Иначе
			НовыйВидДеятельностиНДС = ПараметрыУчетаПоОрганизации.ОсновноеНалогообложениеНДСПродажи;
		КонецЕсли; 
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

// см. УчетНДСУП.ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС
Процедура ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС(Объект, ВидДеятельностиНДС, ПараметрыПроверки, Отказ) Экспорт
	
	//++ Локализация
	
	Если ВидДеятельностиНДС <> Перечисления.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию 
		И ВидДеятельностиНДС <> Перечисления.ТипыНалогообложенияНДС.ПоФактическомуИспользованию Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыПроверки.ИмяТабличнойЧасти = "" Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов = "" И ПараметрыПроверки.ИмяРеквизитаСтатьяАктивовПассивов = "" Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	&СтатьяАктивовПассивов КАК СтатьяАктивовПассивов,
	|	&АналитикаАктивовПассивов КАК АналитикаАктивовПассивов
	|ПОМЕСТИТЬ ТабличнаяЧасть
	|ИЗ
	|	&ТабличнаяЧасть КАК ТабличнаяЧасть
	|;
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.НомерСтроки
	|ИЗ
	|	ТабличнаяЧасть КАК ТабличнаяЧасть
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ТабличнаяЧасть.СтатьяРасходов = СтатьиРасходов.Ссылка
	|ГДЕ
	|	&ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|	И СтатьиРасходов.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|	И СтатьиРасходов.ВариантРаспределенияРасходовРегл В 
	|		(ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности),
	|		 ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|		 ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов))
	|;
	|";
	
	ИмяРеквизитаСтатьяРасходов = ?(ЗначениеЗаполнено(ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов), ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов, """""");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатьяРасходов",    ИмяРеквизитаСтатьяРасходов);
	ИмяРеквизитаАналитикаРасходов = ?(ЗначениеЗаполнено(ПараметрыПроверки.ИмяРеквизитаАналитикаРасходов), ПараметрыПроверки.ИмяРеквизитаАналитикаРасходов, """""");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&АналитикаРасходов", ИмяРеквизитаАналитикаРасходов);
	
	ИмяРеквизитаСтатьяАктивовПассивов = ?(ЗначениеЗаполнено(ПараметрыПроверки.ИмяРеквизитаСтатьяАктивовПассивов), ПараметрыПроверки.ИмяРеквизитаСтатьяАктивовПассивов, """""");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатьяАктивовПассивов",    ИмяРеквизитаСтатьяАктивовПассивов);
	ИмяРеквизитаАналитикаАктивовПассивов = ?(ЗначениеЗаполнено(ПараметрыПроверки.ИмяРеквизитаАналитикаАктивовПассивов), ПараметрыПроверки.ИмяРеквизитаАналитикаАктивовПассивов, """""");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&АналитикаАктивовПассивов", ИмяРеквизитаАналитикаАктивовПассивов);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТабличнаяЧасть", Объект[ПараметрыПроверки.ИмяТабличнойЧасти]);
	Запрос.УстановитьПараметр("ВидДеятельностиНДС", ВидДеятельностиНДС);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка = РезультатыЗапроса[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		ШаблонСообщения = НСтр("ru = 'В организации используется учет НДС по фактическому использованию. 
		                           |Выбранная в строке %1 статья расходов должна иметь порядок раздельного учета НДС ""НДС распределяется пропорционально выручке""'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Выборка.НомерСтроки);
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ПараметрыПроверки.ИмяТабличнойЧасти, Выборка.НомерСтроки, ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов);
		ОбщегоНазначения.СообщитьПользователю(
			ТекстСообщения, 
			Неопределено, 
			Поле, 
			"Объект",
			Отказ);
	КонецЦикла;
	

	//-- Локализация
	
КонецПроцедуры

// Возвращает вид ценности из документа ВводОстатков
//
// Параметры:
// 	СчетФактура - ОпределяемыйТип.СчетФактура -  Документ учета НДС.
//
// Возвращаемое значение:
// ПеречислениеСсылка.ВидыЦенностей.
Функция ВидЦенностиВводОстатков(СчетФактура) Экспорт
	
	Значение = Неопределено;
	//++ Локализация	
	Значение = УчетНДСРФ.ВидЦенностиВводОстатков(СчетФактура);
	//-- Локализация
	Возврат Значение;
	
КонецФункции

// Устанавливает флаг ЦенаВключаетНДС исходя из налогообложения НДС
//
// Параметры:
//	ЦенаВключаетНДС - Булево
//	НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС
//
// Возвращаемое значение:
//	Булево - Значение флага было изменено
Функция УстановитьЦенаВключаетНДСПоНалогообложениюНДС(ЦенаВключаетНДС, Знач НалогообложениеНДС) Экспорт
	
	//++ Локализация
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги И Не ЦенаВключаетНДС Тогда
		ЦенаВключаетНДС = Истина;
		Возврат Истина;
	КонецЕсли;
	//-- Локализация
	
	Возврат Ложь;
	
КонецФункции

// Устанавливает доступность элемента ЦенаВключаетНДС исходя из налогообложения НДС
//
// Параметры:
//	ЭлементФормыЦенаВключаетНДС - ПолеВвода
//	НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС
Процедура УстановитьДоступностьЦенаВключаетНДСПоНалогообложениюНДС(ЭлементФормыЦенаВключаетНДС, Знач НалогообложениеНДС) Экспорт
	
	//++ Локализация
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭлектронныеУслуги Тогда
		ЭлементФормыЦенаВключаетНДС.Доступность = Ложь;
	Иначе
		ЭлементФормыЦенаВключаетНДС.Доступность = Истина;
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Возвращает признак ВзаиморасчетыНеВключаютНДС исходя из налогообложения НДС
//
// Параметры:
//	НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС
//
// Возвращаемое значение:
//	Булево - признак ВзаиморасчетыНеВключаютНДС
Функция ВзаиморасчетыНеВключаютНДС(Знач НалогообложениеНДС) Экспорт
	
	//++ Локализация
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
		Возврат Истина;
	КонецЕсли;
	//-- Локализация
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область УчетИсходящегоНДС

// Параметры:
//  ДоступныеНалогообложенияНДС - см. УчетНДСУПСлужебный.ДоступныеНалогообложенияНДСПродажи
//  НедоступныеНалогообложенияНДС - см. УчетНДСУПСлужебный.ДоступныеНалогообложенияНДСПродажи
//  ПараметрыЗаполнения - см. УчетНДСУПСлужебный.ДоступныеНалогообложенияНДСПродажи
//
Процедура ДополнитьДоступныеНедоступныеНалогообложенияНДСПродажиПоПараметрам(ДоступныеНалогообложенияНДС, НедоступныеНалогообложенияНДС, ПараметрыЗаполнения) Экспорт
	
	//++ Локализация
	ПараметрыУчетаИБ = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
									ПараметрыЗаполнения.Организация, ПараметрыЗаполнения.Дата, ПараметрыЗаполнения.Склад, ПараметрыЗаполнения.Подразделение);
	ПрименяетсяПродажаТоваровОблагаемыхНДСУПокупателя = ПараметрыУчетаИБ.ПродажаТоваровОблагаемыхНДСУПокупателя;
	
	Если ЗначениеЗаполнено(ПараметрыЗаполнения.Организация) Тогда
		ПрименяетсяЕНВД = ПараметрыУчетаОрганизации.ПрименяетсяЕНВД;
		ПрименяетсяПСН = ПараметрыУчетаОрганизации.ПрименяетсяПСН;
		УчетНДСВКосмическойДеятельности = ПараметрыУчетаОрганизации.УчетНДСВКосмическойДеятельности;
		ОрганизацияЗаполнена = Истина;
	Иначе
		ПрименяетсяЕНВД = ПараметрыУчетаИБ.ПрименяетсяЕНВД;
		ПрименяетсяПСН = ПараметрыУчетаИБ.ПрименяетсяПСН;
		УчетНДСВКосмическойДеятельности = ПараметрыУчетаИБ.УчетНДСВКосмическойДеятельности;
		ОрганизацияЗаполнена = Ложь;
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РеализацияТоваров Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);  
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.РеализацияТоваров, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РеализацияРаботУслуг Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.РеализацияРаботУслуг, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РеализацияПрочихАктивов Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);     
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.РеализацияПрочихАктивов, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВыкупТоваровХранителем Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.ВыкупТоваровХранителем, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ВозвратТоваровОтКлиента Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.ВозвратТоваровОтКлиента, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ОтчетКомитентуОЗакупках Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.ОтчетКомитентуОЗакупках, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ОтчетКомиссионера Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.ОтчетКомиссионера, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ОтчетДавальцу Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.ОтчетДавальцу, МассивДоступных);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.РозничнаяПродажа Тогда
		МассивДоступных = Новый Массив;
		МассивДоступных.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеНалогообложенияНДС.РозничнаяПродажа, МассивДоступных);
	КонецЕсли;
	
	// Недоступные налогообложения по настройкам
	Если НЕ ПрименяетсяЕНВД Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД);
	КонецЕсли;
	
	Если НЕ ПрименяетсяПСН Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту);
	КонецЕсли;
	
	Если НЕ ПрименяетсяПродажаТоваровОблагаемыхНДСУПокупателя Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя);
	КонецЕсли;
	
	Если НЕ ПараметрыУчетаОрганизации.ПрименяетсяРасчетНДССМежценовойРазницы Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы);
	КонецЕсли;
	
	
	Если Не ПараметрыУчетаИБ.ЭкспортНесырьевыхТоваров
		Или Не ПараметрыЗаполнения.ЭтоЗаказ
		Или Не ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов") Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
	КонецЕсли;
	
	Если Не ПараметрыУчетаИБ.ЭкспортСырьевыхТоваровУслуг
		Или Не ПараметрыЗаполнения.ЭтоЗаказ
		Или Не ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов") Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
	КонецЕсли;
	
	Если Не УчетНДСВКосмическойДеятельности Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);
	КонецЕсли;
	
	Если (ПараметрыЗаполнения.ЭтоЗаказ И ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов")) Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЭтоОперацияМеждуОрганизациями Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров);
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг);
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.Космос);
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт);
	КонецЕсли;
	
	ДатаПроверки = ?(ЗначениеЗаполнено(ПараметрыЗаполнения.Дата), ПараметрыЗаполнения.Дата, ТекущаяДатаСеанса());
	Если ДатаПроверки < Дата("20190701")
			ИЛИ НЕ ПараметрыУчетаОрганизации.ЕстьРеализацияРаботУслугНеНаТерриторииРФ Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт);
	КонецЕсли;
	Если ДатаПроверки < Дата("20240701")
			ИЛИ НЕ ПараметрыУчетаОрганизации.ЕстьРеализацияТоваровФизлицамВЕАЭС Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС);
	КонецЕсли;
	
	Если (Не ПараметрыУчетаОрганизации.ПрименяетсяУСН Или ДатаПроверки < УчетНДС.ДатаНачалаПримененияНДСнаУСН())
		И ОрганизацияЗаполнена Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
	КонецЕсли;
		
	Если ПараметрыУчетаОрганизации.ОсновноеНалогообложениеНДСПродажи = Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС);
	ИначеЕсли ОрганизацияЗаполнена Тогда
		НедоступныеНалогообложенияНДС.Добавить(Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  НовоеНалогообложениеНДС - см. УчетНДСУП.ЗаполнитьНалогообложениеНДСПродажи
//  ТекущееНалогообложениеНДС - см. УчетНДСУП.ЗаполнитьНалогообложениеНДСПродажи
//  ПараметрыЗаполнения - см. УчетНДСУП.ЗаполнитьНалогообложениеНДСПродажи
//
Процедура ЗаполнитьНалогообложениеНДСПродажиПоПараметрам(НовоеНалогообложениеНДС, ТекущееНалогообложениеНДС, ПараметрыЗаполнения) Экспорт
	
	//++ Локализация
	НастройкиУчета = УчетНДСУП.НастройкиУчета();
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
									ПараметрыЗаполнения.Организация,
									ПараметрыЗаполнения.Дата,
									ПараметрыЗаполнения.Склад,
									ПараметрыЗаполнения.Подразделение);
									
	Если НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт	
			ИЛИ НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров
			ИЛИ НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг Тогда
		// Учитываем особенности заполнение налогобложения на экспорт.
		// В заказах при использовании обособленного обеспечения потребностей явно указывается вид экспорта: сырьевой или несырьевой.
		// Это необходимо для того, чтобы корректно вести учет при обособленных закупках под заказы.
		// В остальных случаях в документах продажи используется единое налогообложение "ПродажаНаЭкспорт".
		Если Не ПараметрыЗаполнения.ЭтоЗаказ
			 И (ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг
			 	ИЛИ ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров
			 	ИЛИ НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг
			 	ИЛИ НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров) Тогда
			НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт;
		ИначеЕсли ПараметрыЗаполнения.ЭтоЗаказ 
			 И НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
			 И ПолучитьФункциональнуюОпцию("ИспользоватьОбособленноеОбеспечениеЗаказов") Тогда
			Если НастройкиУчета.ЭкспортСырьевыхТоваровУслуг И НастройкиУчета.ЭкспортНесырьевыхТоваров Тогда
				НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка(); // Пользователь должен выбрать значение.
			ИначеЕсли НастройкиУчета.ЭкспортСырьевыхТоваровУслуг Тогда
				НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг; 
			Иначе
				НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров;  
			КонецЕсли;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС
		 ИЛИ ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ЛьготноеНалогообложениеНДСНаУСН
		 ИЛИ ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС
		 ИЛИ ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД
		 ИЛИ ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту
		 ИЛИ ТекущееНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка() Тогда
	
		Если ПараметрыУчетаОрганизации.ПрименяетсяПСН Тогда
			НовоеНалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту;
		ИначеЕсли ПараметрыУчетаОрганизации.НалогообложениеНДСРозничнойПродажи = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
			НовоеНалогообложениеНДС = ПараметрыУчетаОрганизации.НалогообложениеНДСРозничнойПродажи;
		Иначе
			НовоеНалогообложениеНДС = ПараметрыУчетаОрганизации.ОсновноеНалогообложениеНДСПродажи;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ПараметрыЗаполненияВидовЗапасовПоНалогообложению
Процедура ДополнитьПараметрыЗаполненияВидовЗапасовПоНалогообложению(ОтборыВидовЗапасов, Организация, Дата, НалогообложениеНДС) Экспорт
	
	//++ Локализация
	
	Если НалогообложениеНДС = Неопределено Тогда
		НалогообложениеНДС = ОтборыВидовЗапасов.НалогообложениеНДС;
	КонецЕсли;
	
	НалогообложениеОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(Организация, Дата).ОсновноеНалогообложениеНДСПродажи;
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
		Или НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.Космос
		Или НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя Тогда
		
		ДоступныеТипыЗапасов = Новый Массив;
		ДоступныеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
		ДоступныеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
		
		ОтборыВидовЗапасов.ТипЗапасов = ДоступныеТипыЗапасов;
		
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ
			Или НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы Тогда
		
		ОтборыВидовЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.Товар;
		
	ИначеЕсли НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД
		И НалогообложениеНДС <> Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту
		И Перечисления.ТипыНалогообложенияНДС.СНдсБезНдс(НалогообложениеНДС) <> НалогообложениеОрганизации Тогда
		
		ОтборыВидовЗапасов.ТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар;
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.УстановитьУсловноеОформлениеСуммНДСПоНалогообложениюПродажи
Процедура ДополнитьУсловноеОформлениеСуммНДСПоНалогообложениюПродажи(Форма, ИмяПоляВводаСтавкиНДС, ИмяПоляВводаСуммыНДС, ИмяПоляВводаСуммыСНДС) Экспорт
	
	//++ Локализация
	Возврат;
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  ВидДеятельностиНДС - см. УчетНДСУП.ВидДеятельностиПоНалогообложениюНДС
//  НалогообложениеНДС - см. УчетНДСУП.ВидДеятельностиПоНалогообложениюНДС
//  Организация - см. УчетНДСУП.ВидДеятельностиПоНалогообложениюНДС
//  Дата - см. УчетНДСУП.ВидДеятельностиПоНалогообложениюНДС
//
Процедура УстановитьВидДеятельностиПоНалогообложениюНДС(ВидДеятельностиНДС, Знач НалогообложениеНДС, Организация, Дата) Экспорт
	
	//++ Локализация
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт
		Или НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС
		Или НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя
		Или НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДССМежценовойРазницы Тогда
		ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
	КонецЕсли;
	Если УчетнаяПолитика.ПрименяетсяУСН(Организация, Дата) Тогда
		ВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка();
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  ТекстЗапроса - см. УчетНДСУП.ТекстЗапросаКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи
//  ПараметрыЗапроса - см. УчетНДСУП.ТекстЗапросаКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи
//
Процедура ДополнитьТекстЗапросаКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи(ТекстЗапроса, ПараметрыЗапроса) Экспорт
	
	//++ Локализация
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	""ПодакцизныйТовар"" КАК Признак
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ВременнаяТаблицаДокументПродажи КАК ВременнаяТаблицаДокументПродажи
		|ПО
		|	ИСТИНА
		|ГДЕ
		|	ВременнаяТаблицаТовары.Номенклатура.ПодакцизныйТовар
		|	И ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаТовары.НомерСтроки КАК НомерСтроки,
		|	""ОблагаетсяНДСУПокупателя"" КАК Признак
		|ИЗ
		|	ВременнаяТаблицаТовары КАК ВременнаяТаблицаТовары
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ВременнаяТаблицаДокументПродажи КАК ВременнаяТаблицаДокументПродажи
		|ПО
		|	ИСТИНА
		|ГДЕ
		|	НЕ ВременнаяТаблицаТовары.Номенклатура.ОблагаетсяНДСУПокупателя
		|	И ВременнаяТаблицаДокументПродажи.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
		|;
		|";
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  Выборка - см. УчетНДСУП.СообщитьОбОшибкахКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи
//  ДокументПродажи - см. УчетНДСУП.СообщитьОбОшибкахКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи
//  ИмяТЧ - см. УчетНДСУП.СообщитьОбОшибкахКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи
//  ПредставлениеТЧ - см. УчетНДСУП.СообщитьОбОшибкахКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи
//  Отказ - см. УчетНДСУП.СообщитьОбОшибкахКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи
//
Процедура СообщитьОбОшибкахКорректностьВыбораНоменклатурыПоНалогообложениюНДСПродажи(Выборка, ДокументПродажи, ИмяТЧ, ПредставлениеТЧ, Отказ) Экспорт
	
	//++ Локализация
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Признак = "ПодакцизныйТовар" Тогда
			ТекстОшибки = НСтр("ru = 'При режиме налогообложения ""Продажа облагается ЕНВД"" запрещено выбирать подакцизный товар в строке %НомерСтроки% списка ""%ПредставлениеТЧ%""'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%",		Выборка.НомерСтроки);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ПредставлениеТЧ%",	ПредставлениеТЧ);
			
			ПродажиСервер.СообщитьПользователюОбОшибке(
				ТекстОшибки,
				ДокументПродажи,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТЧ, Выборка.НомерСтроки, "Номенклатура"),
				Отказ);
		ИначеЕсли Выборка.Признак = "ОблагаетсяНДСУПокупателя" Тогда
			ТекстОшибки = НСтр("ru = 'Товар в строке %ПредставлениеТЧ% списка ""Товары"" не соответствует режиму налогообложения ""Облагается НДС у покупателя""'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%",		Выборка.НомерСтроки);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ПредставлениеТЧ%",	ПредставлениеТЧ);
				
			ПродажиСервер.СообщитьПользователюОбОшибке(
				ТекстОшибки,
				ДокументПродажи,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТЧ, Выборка.НомерСтроки, "Номенклатура"),
				Отказ);
		КонецЕсли;
		
	КонецЦикла;
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  Ограничения - см. УчетНДСУП.ОграничениеТоваровПоНалогообложению
//  НалогообложениеНДС - см. УчетНДСУП.ОграничениеТоваровПоНалогообложению
//
Процедура ДополнитьОграничениеТоваровПоНалогообложению(Ограничения, Знач НалогообложениеНДС) Экспорт
	
	//++ Локализация
	СтруктураОтбора = Новый Структура("Реквизит,ВидСравнения,Значение");
	
	Если НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД") Тогда
		СтруктураОтбора.Реквизит = "ПодакцизныйТовар";
		СтруктураОтбора.Значение = Ложь;
		СтруктураОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		Ограничения.Добавить(СтруктураОтбора);
	КонецЕсли;

	СтруктураОтбора.Реквизит = "ОблагаетсяНДСУПокупателя";
	СтруктураОтбора.Значение = (НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя"));
	СтруктураОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Ограничения.Добавить(СтруктураОтбора);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Проведение

#Область ПодключениеКМеханизмуПроведения

// Параметры:
//  Параметры - см. УчетНДСУП.ПараметрыДляПроведенияДокумента
//  Документ - см. УчетНДСУП.ПараметрыДляПроведенияДокумента
//  Свойства - см. УчетНДСУП.ПараметрыДляПроведенияДокумента
//
Процедура ДополнитьПараметрыДляПроведенияДокумента(Параметры, Документ, Свойства) Экспорт
	
	//++ Локализация
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыСведений.ДанныеОснованийСчетовФактур);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыСведений.ЖурналУчетаСчетовФактур);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыСведений.НДССостояниеРеализации0);
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.НДСЗаписиКнигиПокупок);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.НДСЗаписиКнигиПродаж);
		
	КонецЕсли;
	
	// Контроль
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыСведений.НДССостояниеРеализации0);
		
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

// см. УчетНДСУП.ТекстыЗапросовСторнирования
// Параметры:
//  ТекстыЗапросов - см. УчетНДСУП.ТекстыЗапросовСторнирования
//  МетаданныеДокумента - см. УчетНДСУП.ТекстыЗапросовСторнирования
//
Процедура ДополнитьТекстыЗапросовСторнирования(ТекстыЗапросов, МетаданныеДокумента) Экспорт
	
	//++ Локализация
	
	ДвиженияДокумента = МетаданныеДокумента.Движения;
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.НДСЗаписиКнигиПокупок;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ДокументыСторно.Ссылка КАК Регистратор,
		|	ДокументыСторно.Дата   КАК Период,
		|	&ПоляВыборки,
		|	ВЫБОР 
		|		КОГДА НАЧАЛОПЕРИОДА(ДокументыСторно.Дата, КВАРТАЛ) > НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, КВАРТАЛ)
		|			И НЕ ДанныеРегистра.ЗаписьДополнительногоЛиста
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ДанныеРегистра.ЗаписьДополнительногоЛиста 
		|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
		|	ВЫБОР 
		|		КОГДА НАЧАЛОПЕРИОДА(ДокументыСторно.Дата, КВАРТАЛ) > НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, КВАРТАЛ)
		|			И ДанныеРегистра.КорректируемыйПериод = ДАТАВРЕМЯ(1,1,1)
		|			ТОГДА ДанныеРегистра.Период
		|		ИНАЧЕ ДанныеРегистра.КорректируемыйПериод  
		|	КОНЕЦ КАК КорректируемыйПериод,
		|	ИСТИНА КАК Сторно
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК ДанныеРегистра
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		&ИмяДокумента КАК ДокументыСторно
		|	ПО
		|		ДанныеРегистра.Регистратор = ДокументыСторно.СторнируемыйДокумент
		|		И ДокументыСторно.Ссылка В (&Ссылка)
		|ГДЕ
		|	НЕ ДанныеРегистра.Сторно
		|";
		
		МассивПолейВыборки = Новый Массив;
		
		Исключения = Новый Массив;
		Исключения.Добавить(МетаданныеРегистра.СтандартныеРеквизиты.Активность.Имя);
		Исключения.Добавить(МетаданныеРегистра.СтандартныеРеквизиты.НомерСтроки.Имя);
		Исключения.Добавить(МетаданныеРегистра.СтандартныеРеквизиты.Регистратор.Имя);
		Исключения.Добавить(МетаданныеРегистра.СтандартныеРеквизиты.Период.Имя);
		Исключения.Добавить(МетаданныеРегистра.Измерения.ЗаписьДополнительногоЛиста.Имя);
		Исключения.Добавить(МетаданныеРегистра.Измерения.КорректируемыйПериод.Имя);
		Исключения.Добавить(МетаданныеРегистра.Реквизиты.Сторно.Имя);
		
		ПроведениеДокументов.ДобавитьПоляВыборкиСторнирующегоЗапроса(МетаданныеРегистра.СтандартныеРеквизиты, 
			МассивПолейВыборки,
			Исключения);
		ПроведениеДокументов.ДобавитьПоляВыборкиСторнирующегоЗапроса(МетаданныеРегистра.Измерения, 
			МассивПолейВыборки,
			Исключения);
		ПроведениеДокументов.ДобавитьПоляВыборкиСторнирующегоЗапроса(МетаданныеРегистра.Ресурсы, 
			МассивПолейВыборки,
			Исключения,
			Истина);
		ПроведениеДокументов.ДобавитьПоляВыборкиСторнирующегоЗапроса(МетаданныеРегистра.Реквизиты, 
			МассивПолейВыборки,
			Исключения,
			Истина);
			
		ТекстПоляВыборки= СтрСоединить(МассивПолейВыборки,"," + Символы.ПС);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляВыборки", ТекстПоляВыборки);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяДокумента", МетаданныеДокумента.ПолноеИмя());
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(), ТекстЗапроса);
		
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.НДСЗаписиКнигиПродаж;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ДокументыСторно.Ссылка КАК Регистратор,
		|	ВЫБОР
		|		КОГДА НАЧАЛОПЕРИОДА(ДокументыСторно.Дата, КВАРТАЛ) > НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, КВАРТАЛ)
		|			И НЕ ДанныеРегистра.ЗаписьДополнительногоЛиста
		|			ТОГДА ДокументыСторно.Дата
		|		ИНАЧЕ ДанныеРегистра.Период
		|	КОНЕЦ КАК Период,
		|	&ПоляВыборки,
		|	ВЫБОР 
		|		КОГДА НАЧАЛОПЕРИОДА(ДокументыСторно.Дата, КВАРТАЛ) > НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, КВАРТАЛ)
		|			И НЕ ДанныеРегистра.ЗаписьДополнительногоЛиста
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ДанныеРегистра.ЗаписьДополнительногоЛиста 
		|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
		|	ВЫБОР 
		|		КОГДА НАЧАЛОПЕРИОДА(ДокументыСторно.Дата, КВАРТАЛ) > НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, КВАРТАЛ)
		|			И ДанныеРегистра.КорректируемыйПериод = ДАТАВРЕМЯ(1,1,1)
		|			ТОГДА ДанныеРегистра.Период
		|		ИНАЧЕ ДанныеРегистра.КорректируемыйПериод  
		|	КОНЕЦ КАК КорректируемыйПериод,
		|	ВЫБОР 
		|		КОГДА НАЧАЛОПЕРИОДА(ДокументыСторно.Дата, КВАРТАЛ) > НАЧАЛОПЕРИОДА(ДанныеРегистра.Период, КВАРТАЛ)
		|			И  НЕ ДанныеРегистра.СторнирующаяЗаписьДопЛиста
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ДанныеРегистра.СторнирующаяЗаписьДопЛиста  
		|	КОНЕЦ КАК СторнирующаяЗаписьДопЛиста,
		|	ИСТИНА КАК Сторно,
		|	ИСТИНА КАК Исправление
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК ДанныеРегистра
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		&ИмяДокумента КАК ДокументыСторно
		|	ПО
		|		ДанныеРегистра.Регистратор = ДокументыСторно.СторнируемыйДокумент
		|		И ДокументыСторно.Ссылка В (&Ссылка)
		|ГДЕ
		|	НЕ ДанныеРегистра.Сторно
		|";
		
		МассивПолейВыборки = Новый Массив;
		
		Исключения = Новый Массив;
		Исключения.Добавить(МетаданныеРегистра.СтандартныеРеквизиты.Активность.Имя);
		Исключения.Добавить(МетаданныеРегистра.СтандартныеРеквизиты.НомерСтроки.Имя);
		Исключения.Добавить(МетаданныеРегистра.СтандартныеРеквизиты.Регистратор.Имя);
		Исключения.Добавить(МетаданныеРегистра.СтандартныеРеквизиты.Период.Имя);
		Исключения.Добавить(МетаданныеРегистра.Измерения.ЗаписьДополнительногоЛиста.Имя);
		Исключения.Добавить(МетаданныеРегистра.Измерения.КорректируемыйПериод.Имя);
		Исключения.Добавить(МетаданныеРегистра.Измерения.СторнирующаяЗаписьДопЛиста.Имя);
		Исключения.Добавить(МетаданныеРегистра.Измерения.Исправление.Имя);
		Исключения.Добавить(МетаданныеРегистра.Реквизиты.Сторно.Имя);
		
		ПроведениеДокументов.ДобавитьПоляВыборкиСторнирующегоЗапроса(МетаданныеРегистра.СтандартныеРеквизиты, 
			МассивПолейВыборки,
			Исключения);
		ПроведениеДокументов.ДобавитьПоляВыборкиСторнирующегоЗапроса(МетаданныеРегистра.Измерения, 
			МассивПолейВыборки,
			Исключения);
		ПроведениеДокументов.ДобавитьПоляВыборкиСторнирующегоЗапроса(МетаданныеРегистра.Ресурсы, 
			МассивПолейВыборки,
			Исключения,
			Истина);
		ПроведениеДокументов.ДобавитьПоляВыборкиСторнирующегоЗапроса(МетаданныеРегистра.Реквизиты, 
			МассивПолейВыборки,
			Исключения,
			Истина);
			
		ТекстПоляВыборки= СтрСоединить(МассивПолейВыборки,"," + Символы.ПС);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляВыборки", ТекстПоляВыборки);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяДокумента", МетаданныеДокумента.ПолноеИмя());
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(), ТекстЗапроса);
		
	КонецЕсли;
	
	МетаданныеРегистра = Метаданные.РегистрыСведений.НДССостояниеРеализации0;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДокументыСторно.Ссылка КАК Регистратор,
		|	ДокументыСторно.Дата КАК Период,
		|	НДССостояниеРеализации0.Организация КАК Организация,
		|	НДССостояниеРеализации0.ДокументРеализации КАК ДокументРеализации,
		|	НДССостояниеРеализации0.ДатаРеализации КАК ДатаРеализации,
		|	НДССостояниеРеализации0.Контрагент КАК Контрагент,
		|	ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтверждениеНеТребуется) КАК Состояние,
		|	ДокументыСторно.Дата КАК ДатаПодтверждения,
		|	НДССостояниеРеализации0.СтавкаНДС
		|ИЗ
		|	РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		&ИмяДокумента КАК ДокументыСторно
		|	ПО
		|		НДССостояниеРеализации0.Регистратор = ДокументыСторно.СторнируемыйДокумент
		|		И ДокументыСторно.Ссылка В (&Ссылка)
		|";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяДокумента", МетаданныеДокумента.ПолноеИмя());
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(), ТекстЗапроса);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьДвижения
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	//++ Локализация
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения , "НДССостояниеРеализации0");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения , "НДСЗаписиКнигиПокупок");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения , "НДСЗаписиКнигиПродаж");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения , "НДСЗаписиРаздела7Декларации");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения , "ДанныеОснованийСчетовФактур");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения , "ЖурналУчетаСчетовФактур");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения , "СведенияТаможенныхДекларацийЭкспорт");
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ИнициализироватьДанныеКонтроляИзменений
Процедура ДополнитьЗапросКонтроляИзменений(Запрос, ТекстыЗапроса, Документ) Экспорт
	
	//++ Локализация
	
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.СообщитьОРезультатахКонтроляИзменений
Процедура СообщитьОРезультатахКонтроляИзменений(РезультатыКонтроля, Документ, Отказ) Экспорт
	
	//++ Локализация
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ЛокализацияОперацийПроведения

// см. УчетНДСУП.ОтразитьВводОстатковСобственныхТоваров
Процедура ОтразитьВводОстатковСобственныхТоваров(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт
	
	//++ Локализация
	
	#Область ЗаполнениеСуммСФПолученный
	
	ТекстЗапросаЗаполнениеСуммСФПолученный =
	"ВЫБРАТЬ
	|	Товары.Ссылка КАК ДокументОснование,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПриобретения,
	|
	|	НЕОПРЕДЕЛЕНО КАК Валюта,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаУвеличение,
	|	0 КАК СуммаУменьшение,
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаНДСУвеличение,
	|	0 КАК СуммаНДСУменьшение,
	|
	|	СУММА(Товары.СуммаНДСРегл) КАК СуммаРегл,
	|	0 КАК СуммаУвеличениеРегл,
	|	0 КАК СуммаУменьшениеРегл,
	|	СУММА(Товары.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	0 КАК СуммаНДСУвеличениеРегл,
	|	0 КАК СуммаНДСУменьшениеРегл
	|ИЗ
	|	#Товары КАК Товары
	|ГДЕ
	|	Товары.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Товары.ВводОстатков22
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.СтавкаНДС";
	
	#КонецОбласти
	
	#Область ЗаполнениеШапкиСФПолученный
	
	ТекстЗапросаЗаполнениеШапкиСФПолученный =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Ссылка КАК Регистратор,
	|	МАКСИМУМ(Товары.Организация) КАК Организация,
	|	МАКСИМУМ(Товары.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Товары.Контрагент) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Валюта
	|ИЗ
	|	#Товары КАК Товары
	|ГДЕ
	|	Товары.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Товары.ВводОстатков22
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка";
	
	#КонецОбласти
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ЗаполнениеСуммСФПолученный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеСуммСФПолученный", ТекстЗапросаЗаполнениеСуммСФПолученный);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ЗаполнениеШапкиСФПолученный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеШапкиСФПолученный", ТекстЗапросаЗаполнениеШапкиСФПолученный);
	КонецЕсли;
	
	ТекстыЗапросовДанныхДокумента = Новый Структура("Товары", ТекстТовары);
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьПриобретениеУПоставщика
Процедура ОтразитьПриобретениеУПоставщика(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности) Экспорт
	
	//++ Локализация

#Область ДанныеОснованийСчетовФактур
	
	ПолныеИменаСчетовФактур = Новый Массив;
	ПолныеИменаСчетовФактур.Добавить("Документ.СчетФактураПолученныйНалоговыйАгент");
	ИдентификаторыСчетовФактур = ОбщегоНазначения.ИдентификаторыОбъектовМетаданных(ПолныеИменаСчетовФактур);
	
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураНалоговыйАгентПолученный", ИдентификаторыСчетовФактур["Документ.СчетФактураПолученныйНалоговыйАгент"]);
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	&ИдентификаторСчетФактураНалоговыйАгентПолученный КАК ТипСчетаФактуры,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыНалоговыйАгент) КАК ВидЦенности,
	|	ВЫБОР 
	|		КОГДА НЕ СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА СпрВидыЗапасов.ТипЗапасов
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В(&ТипыНоменклатурыТовар) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.НомерГТД КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL И СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров) 
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|						                                                           ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ Ценности.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ИсходныйТорговыйДокумент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорректируемыйДокумент,
	|
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(Ценности.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	МАКСИМУМ(Ценности.ИсправлениеОшибок) КАК ИсправлениеОшибок,
	|	МАКСИМУМ(Ценности.КорректировкаПоСогласованиюСторон) КАК КорректировкаПоСогласованиюСторон,
	|	ЛОЖЬ КАК РозничныйПокупатель
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Ценности.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
	|	ПО
	|		Ценности.СтатьяПрочихАктивов = СтатьиАктивовПассивов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	ВЫБОР 
	|		КОГДА НЕ СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА СпрВидыЗапасов.ТипЗапасов
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В(&ТипыНоменклатурыТовар) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	Ценности.НомерГТД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|						ТОГДА Назначения.ВидДеятельностиНДС
	|					КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		КОГДА НЕ СтатьиРасходов.Ссылка ЕСТЬ NULL И СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров) 
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВидЦенностиНДС, НЕОПРЕДЕЛЕНО) В (ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|						                                                           ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА))
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|						  И ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ВводОСВЭксплуатацию)
	|					КОГДА ЕСТЬNULL(СтатьиРасходов.ВариантРаздельногоУчетаНДС, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|					КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					      И Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					ИНАЧЕ Ценности.ВидДеятельностиНДС
	|				КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|					  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ Ценности.ВидДеятельностиНДС
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ИсходныйТорговыйДокумент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ Ценности.НаправлениеДеятельности
	|	КОНЕЦ
	|";
	
#КонецОбласти

#Область ЗаполнениеСуммСФПолученный
	
	ТекстЗапросаЗаполнениеСуммСФПолученный =
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК ДокументОснование,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ИсходныйТорговыйДокумент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПриобретения,
	|
	|	Назначения.Ссылка ЕСТЬ НЕ NULL КАК Комиссия,
	|
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) КАК Сумма,
	|	СУММА((ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаУвеличение,
	|	СУММА((ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) < 0
	|			ТОГДА -1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаУменьшение,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) КАК СуммаНДС,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаНДСУвеличение,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) < 0
	|			ТОГДА -1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаНДСУменьшение,
	|
	|	СУММА(ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) КАК СуммаРегл,
	|	СУММА((ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаУвеличениеРегл,
	|	СУММА((ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0
	|			ТОГДА -1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаУменьшениеРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) КАК СуммаНДСРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) > 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаНДСУвеличениеРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0
	|			ТОГДА -1
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК СуммаНДСУменьшениеРегл
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО Ценности.Назначение = Назначения.Ссылка
	|		И Назначения.ТипНазначения = ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПоставкаПодПринципала)
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|	И НЕ Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭлектронныеУслуги)
	|	И НЕ Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.СтавкаНДС,
	|	Назначения.Ссылка ЕСТЬ НЕ NULL,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ИсходныйТорговыйДокумент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ";
	
#КонецОбласти

#Область ЗаполнениеШапкиСФПолученный

	ТекстЗапросаЗаполнениеШапкиСФПолученный =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ценности.Ссылка КАК Регистратор,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|	И НЕ Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭлектронныеУслуги)
	|	И НЕ Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка";

#КонецОбласти

#Область ЖурналСФ
	
	ТекстЗапросаЖурналУчетаСчетовФактур =
	"ВЫБРАТЬ
	|	Ценности.Период КАК Период,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Контрагент.ИНН) КАК ИННКонтрагента,
	|	МАКСИМУМ(Ценности.Контрагент.КПП) КАК КППКонтрагента,
	|	Ценности.Ссылка КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ЧастиЖурналаУчетаСчетовФактур.ПолученныеСчетаФактуры) КАК ЧастьЖурнала,
	|	МАКСИМУМ(ДанныеПервичныхДокументов.Номер) КАК НомерСчетаФактуры,
	|	МАКСИМУМ(ДанныеПервичныхДокументов.Дата) КАК ДатаСчетаФактуры,
	|	""45"" КАК КодВидаОперации,
	|	2 КАК КодВидаСделки,
	|	1 КАК КодСпособаПолучения,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаСНДС, 0)) КАК СуммаПоСчетуФактуре,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) КАК СуммаНДС
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО Ценности.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И Ценности.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭлектронныеУслуги)
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Период,
	|	Ценности.Ссылка
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(Ценности.Организация) <> НЕОПРЕДЕЛЕНО
	|";
#КонецОбласти
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ЗаполнениеСуммСФПолученный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеСуммСФПолученный", ТекстЗапросаЗаполнениеСуммСФПолученный);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ЗаполнениеШапкиСФПолученный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеШапкиСФПолученный", ТекстЗапросаЗаполнениеШапкиСФПолученный);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ЖурналУчетаСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЖурналУчетаСчетовФактур", ТекстЗапросаЖурналУчетаСчетовФактур);
	КонецЕсли;
	
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
		КонецЕсли;
	ТекстыЗапросовДанныхДокумента = Новый Структура("Ценности", ТекстЦенности);
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьВозвратТоваровОтПокупателя
Процедура ОтразитьВозвратТоваровОтПокупателя(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности) Экспорт
	
	//++ Локализация
	Если НЕ Запрос.Параметры.Свойство("ТипыЗапасовСобственные") Тогда
		Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	КонецЕсли;
	Если НЕ Запрос.Параметры.Свойство("ДатаНачалаУчетаНДСПоНаправлениямДеятельности") Тогда
		Запрос.УстановитьПараметр("ДатаНачалаУчетаНДСПоНаправлениямДеятельности", 
			УчетНДСУП.НастройкиУчета().ДатаНачалаУчетаНДСПоНаправлениямДеятельности);
	КонецЕсли;
	Если НЕ Запрос.Параметры.Свойство("ДатаОтраженияВозвратовКорректировочнымиСФ") Тогда
		Запрос.УстановитьПараметр("ДатаОтраженияВозвратовКорректировочнымиСФ", УчетНДСРФ.ДатаОтраженияВозвратовКорректировочнымиСФ());
	КонецЕсли;
	
#Область НДСЗаписиКнигиПокупок
	ТекстЗапросаНДСЗаписиКнигиПокупок =
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	Ценности.Организация КАК Организация,
	|	Ценности.Организация КАК Поставщик,
	|	ВЫБОР 
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ Ценности.ДокументВозврата
	|	КОНЕЦ КАК СчетФактура,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	Ценности.СтавкаНДС.ПеречислениеСтавкаНДС КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК СчетУчетаНДС,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету) КАК Событие,
	|	Ценности.Период КАК ДатаСобытия,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1,1,1) КАК КорректируемыйПериод,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|
	|	СУММА(ВЫБОР
	|		КОГДА СуммыДокументов.БазаНДСРегл > 0
	|			ТОГДА СуммыДокументов.БазаНДСРегл
	|		КОГДА СуммыДокументов.БазаНДСРегл < 0
	|			ТОГДА -СуммыДокументов.БазаНДСРегл
	|		КОГДА СуммыДокументов.СуммаБезНДСРегл > 0
	|			ТОГДА СуммыДокументов.СуммаБезНДСРегл
	|		ИНАЧЕ -СуммыДокументов.СуммаБезНДСРегл
	|	КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДСРегл > 0
	|			ТОГДА СуммыДокументов.СуммаНДСРегл
	|		ИНАЧЕ -СуммыДокументов.СуммаНДСРегл
	|	КОНЕЦ) КАК НДС,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокументаОплаты,
	|	""16"" КАК КодВидаОперации,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОтгрузки,
	|	ЕСТЬNULL(Назначения.ВидДеятельностиНДС, Ценности.ВидДеятельностиНДС) КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|					ТОГДА Назначения.НаправлениеДеятельности
	|					ИНАЧЕ Ценности.НаправлениеДеятельности
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	СУММА(ВЫБОР
	|		КОГДА &УправленческийУчетОрганизацийВключен
	|			  И Ценности.Период >= &ДатаНачалаВеденияУправленческогоУчетаОрганизаций
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА СуммыДокументов.СуммаНДСУпр > 0
	|				ТОГДА СуммыДокументов.СуммаНДСУпр
	|					ИНАЧЕ -СуммыДокументов.СуммаНДСУпр
	|				КОНЕЦ
	|			ИНАЧЕ 0
	|	КОНЕЦ) КАК НДСУпр
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА ЛОЖЬ
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА Ценности.РозничныйПокупатель
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					И Ценности.ДенежныеСредстваРозничномуПокупателюВозвращены
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|	И Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И СпрВидыЗапасов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	Ценности.Организация,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)),
	|	Ценности.СтавкаНДС.ПеречислениеСтавкаНДС,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ Ценности.ДокументВозврата
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|						ТОГДА Назначения.НаправлениеДеятельности
	|					ИНАЧЕ Ценности.НаправлениеДеятельности
	|				КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ЕСТЬNULL(Назначения.ВидДеятельностиНДС, Ценности.ВидДеятельностиНДС),
	|	Ценности.Период
	|";
	
#КонецОбласти

#Область ДанныеОснованийСчетовФактур
	
	ИдентификаторСчетФактураВыданный = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный");
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураВыданный", ИдентификаторСчетФактураВыданный);
	ИдентификаторСводнаяСправкаНДС = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СводнаяСправкаНДС");
	Запрос.УстановитьПараметр("ИдентификаторСводнаяСправкаНДС", ИдентификаторСводнаяСправкаНДС);
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС ИЛИ Ценности.РозничныйПокупатель
	|			ТОГДА &ИдентификаторСводнаяСправкаНДС
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА &ИдентификаторСчетФактураВыданный
	|	КОНЕЦ КАК ТипСчетаФактуры,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)) КАК ВидЦенности,
	|	СпрВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.НомерГТД КАК НомерГТД,
	|	ЕСТЬNULL(КлассификаторТНВЭД.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)) КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|	
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактурыКомиссионера,
	|	Ценности.ПокупательКомиссионногоТовара КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС,
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ Ценности.НаправлениеДеятельности
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	Ценности.ДокументРеализации КАК КорректируемыйДокумент,
	|
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА СуммыДокументов.СуммаБезНДС < 0 И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаБезНДС
	|			КОГДА СуммыДокументов.СуммаБезНДС > 0 И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаБезНДС
	|			ИНАЧЕ СуммыДокументов.СуммаБезНДС 
	|		КОНЕЦ) КАК СуммаБезНДС,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА СуммыДокументов.СуммаНДС < 0 И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаНДС
	|			КОГДА СуммыДокументов.СуммаНДС > 0 И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаНДС
	|			ИНАЧЕ СуммыДокументов.СуммаНДС 
	|		КОНЕЦ) КАК СуммаНДС,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА СуммыДокументов.СуммаБезНДСРегл < 0 И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаБезНДСРегл
	|			КОГДА СуммыДокументов.СуммаБезНДСРегл > 0 И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаБезНДСРегл
	|			ИНАЧЕ СуммыДокументов.СуммаБезНДСРегл 
	|		КОНЕЦ) КАК СуммаБезНДСРегл,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА СуммыДокументов.БазаНДСРегл < 0 И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.БазаНДСРегл
	|			КОГДА СуммыДокументов.БазаНДСРегл > 0 И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.БазаНДСРегл
	|			ИНАЧЕ СуммыДокументов.БазаНДСРегл 
	|		КОНЕЦ) КАК БазаНДСРегл,
	|	СУММА(
	|		ВЫБОР 
	|			КОГДА СуммыДокументов.СуммаНДСРегл < 0 И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаНДСРегл
	|			КОГДА СуммыДокументов.СуммаНДСРегл > 0 И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|				ТОГДА -СуммыДокументов.СуммаНДСРегл
	|			ИНАЧЕ СуммыДокументов.СуммаНДСРегл 
	|		КОНЕЦ) КАК СуммаНДСРегл,
	|
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(
	|		ВЫБОР
	|			КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт) ТОГДА
	|				ВЫБОР Ценности.СтавкаНДС.ПеречислениеСтавкаНДС
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0) ТОГДА 
	|					ВЫБОР КОГДА ЕСТЬNULL(КлассификаторТНВЭД.СырьевойТовар, ЛОЖЬ)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|					КОНЕЦ
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) ТОГДА
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|				ИНАЧЕ
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				КОНЕЦ
	|			КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					И Ценности.СтавкаНДС.ПеречислениеСтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ИНАЧЕ Ценности.НалогообложениеНДС
	|		КОНЕЦ) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	ИСТИНА КАК ЭтоВозврат,
	|	ЛОЖЬ КАК ИсправлениеОшибок,
	|	МАКСИМУМ(Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ) КАК КорректировкаПоСогласованиюСторон,
	|	Ценности.РозничныйПокупатель КАК РозничныйПокупатель,
	|	МАКСИМУМ(Ценности.ВозвратТоваровЧерезКомиссионера) КАК РеализацияЧерезКомиссионера
	|ИЗ
	|	#Ценности КАК Ценности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|	ПО
	|		Ценности.Номенклатура.КодТНВЭД = КлассификаторТНВЭД.Ссылка
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И (Ценности.ПокупательНеПлательщикНДС
	|		ИЛИ Ценности.РозничныйПокупатель
	|		ИЛИ Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	ЕСТЬNULL(СпрНоменклатура.ГруппаФинансовогоУчета.ВидЦенностиНДС, ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)),
	|	СпрВидыЗапасов.ТипЗапасов,
	|	Ценности.СтавкаНДС,
	|	Ценности.НомерГТД,
	|	Ценности.ПокупательНеПлательщикНДС,
	|	Ценности.РозничныйПокупатель,
	|	Ценности.ПокупательКомиссионногоТовара,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Ценности.ПокупательНеПлательщикНДС
	|			ТОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС,
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ,
	|	Ценности.ДокументРеализации,
	|	ВЫБОР КОГДА ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ Ценности.НаправлениеДеятельности
	|	КОНЕЦ,
	|	ЕСТЬNULL(КлассификаторТНВЭД.Ссылка, ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка))
	|";
	
#КонецОбласти

#Область ЗаполнениеТоваровСФВыданный
	
	ТекстЗапросаЗаполнениеТоваровСФВыданный =
	"ВЫБРАТЬ
	|	СчетФактураВыданныйДокументыОснования.Ссылка КАК ИсходныйСчетФактура,
	|	Ценности.НомерСтроки КАК НомерСтроки,
	|	Ценности.Номенклатура КАК Номенклатура,
	|	Ценности.Характеристика КАК Характеристика,
	|	Ценности.Серия КАК Серия,
	|	Ценности.НоменклатураНабора КАК НоменклатураНабора,
	|	Ценности.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	"""" КАК Содержание,
	|	СпрВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт) ТОГДА
	|		Ценности.КодТНВЭД
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|	КОНЕЦ КАК КодТНВЭД,
	|	Ценности.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.НомерГТД КАК НомерГТД,
	|	Ценности.ДокументРеализации КАК ДокументРеализации,
	|	СУММА(Ценности.Количество * ВЫБОР 
	|			КОГДА Ценности.Количество > 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Количество,
	|	СУММА(Ценности.КоличествоПоРНПТ * ВЫБОР 
	|			КОГДА Ценности.КоличествоПоРНПТ > 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК КоличествоПоРНПТ,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) > 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) > 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) > 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаНДС,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) > 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) > 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) > 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаНДСРегл
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|		ПО Ценности.ДокументРеализации = СчетФактураВыданныйДокументыОснования.ДокументОснование
	|			И НЕ СчетФактураВыданныйДокументыОснования.Ссылка.ПометкаУдаления
	|			И НЕ СчетФактураВыданныйДокументыОснования.Ссылка.Исправление
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|		ПО Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ПокупательНеПлательщикНДС
	|	И (НЕ Ценности.РозничныйПокупатель
	|			ИЛИ Ценности.ДенежныеСредстваРозничномуПокупателюВозвращены)
	|	И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураВыданныйДокументыОснования.Ссылка,
	|	Ценности.НомерСтроки,
	|	Ценности.Номенклатура,
	|	Ценности.Характеристика,
	|	Ценности.Серия,
	|	Ценности.НоменклатураНабора,
	|	Ценности.ХарактеристикаНабора,
	|	СпрВидыЗапасов.ТипЗапасов,
	|	Ценности.КодТНВЭД,
	|	Ценности.СтавкаНДС,
	|	Ценности.НомерГТД,
	|	Ценности.ДокументРеализации,
	|	Ценности.НалогообложениеНДС,
	|	Ценности.ЕдиницаИзмерения
	|";
	
	ТекстЗапросаЗаполнениеТоваровСФВыданный = СтрЗаменить(
		ТекстЗапросаЗаполнениеТоваровСФВыданный,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"Ценности.ЕдиницаИзмерения",
			"Ценности.Номенклатура"));
	
#КонецОбласти

#Область ЗаполнениеСуммСФПолученный
	
	ТекстЗапросаЗаполнениеСуммСФПолученный =
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК ДокументОснование,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПриобретения,
	|
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Сумма,
	|	0 КАК СуммаУвеличение,
	|	0 КАК СуммаУменьшение,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаНДС,
	|	0 КАК СуммаНДСУвеличение,
	|	0 КАК СуммаНДСУменьшение,
	|
	|	СУММА(ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаРегл,
	|	0 КАК СуммаУвеличениеРегл,
	|	0 КАК СуммаУменьшениеРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) * ВЫБОР 
	|			КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК СуммаНДСРегл,
	|	0 КАК СуммаНДСУвеличениеРегл,
	|	0 КАК СуммаНДСУменьшениеРегл
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.РозничныйПокупатель
	|	И НЕ Ценности.ПокупательНеПлательщикНДС
	|	И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.СтавкаНДС";
	
#КонецОбласти

#Область ЗаполнениеШапкиСФПолученный

	ТекстЗапросаЗаполнениеШапкиСФПолученный =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ценности.Ссылка КАК Регистратор,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.РозничныйПокупатель
	|	И НЕ Ценности.ПокупательНеПлательщикНДС
	|	И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка";

#КонецОбласти

	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("НДСЗаписиКнигиПокупок", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСЗаписиКнигиПокупок", ТекстЗапросаНДСЗаписиКнигиПокупок);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ЗаполнениеТоваровСФВыданный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеТоваровСФВыданный", ТекстЗапросаЗаполнениеТоваровСФВыданный);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ЗаполнениеСуммСФПолученный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеСуммСФПолученный", ТекстЗапросаЗаполнениеСуммСФПолученный);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ЗаполнениеШапкиСФПолученный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеШапкиСФПолученный", ТекстЗапросаЗаполнениеШапкиСФПолученный);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ТекстыЗапросовДанныхДокумента = Новый Структура("Ценности", ТекстЦенности);
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьРеализациюКлиенту
Процедура ОтразитьРеализациюКлиенту(Запрос, ТекстыЗапроса, Регистры, ТекстЦенности) Экспорт
	
	//++ Локализация
#Область НДСЗаписиКнигиПродаж
	
	Запрос.УстановитьПараметр("ДатаНачалаПримененияСводныхСправок", Константы.ДатаНачалаПримененияСводныхСправок.Получить());
	
	ТекстНДСЗаписиКнигиПродаж =
	"// Начисление НДС
	|ВЫБРАТЬ
	|	Ценности.Период КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Организация КАК Организация,
	|	ВЫБОР 
	|		КОГДА Ценности.РеализацияЧерезКомиссионера 
	|			ТОГДА Ценности.ПокупательКомиссионногоТовара
	|		ИНАЧЕ Ценности.Контрагент 
	|	КОНЕЦ КАК Покупатель,
	|	Ценности.ДокументРеализации КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.УслугиНеНаТерриторииРФ)
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС )
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыФизлицамВЕАЭСЭлектронныеПлощадки)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	Ценности.СтавкаНДС.ПеречислениеСтавкаНДС КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПодтвержденаСтавка0)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|	КОНЕЦ КАК Событие,
	|	Ценности.Период КАК ДатаСобытия,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1,1,1) КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСчетаФактурыКомиссионера,
	|	
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК НДС,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	"""" КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокументаОплаты,
	|	"""" КАК КодВидаОперации,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос)
	|			ТОГДА Ценности.НалогообложениеНДС
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	СУММА(СуммыДокументов.СуммаНДСУпр) КАК НДСУпр
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И (НЕ Ценности.РеализацияВРозницу
	|		ИЛИ Ценности.Период < &ДатаНачалаПримененияСводныхСправок)
	|	И НЕ Ценности.ИсправлениеОшибок
	|	И НЕ Ценности.КорректировкаПоСогласованиюСторон
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) В (&ТипыЗапасовСобственные)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|					ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И (Ценности.НалогообложениеНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя))
	|		
	|		ИЛИ Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|			И Ценности.СтавкаНДС.ПеречислениеСтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0))
	|	
	|	
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	Ценности.Организация,
	|	Ценности.Контрагент,
	|	Ценности.ПокупательКомиссионногоТовара,
	|	Ценности.ДокументРеализации,
	|	Ценности.РеализацияЧерезКомиссионера,
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.УслугиНеНаТерриторииРФ)
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС )
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыФизлицамВЕАЭСЭлектронныеПлощадки)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			  И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПодтвержденаСтавка0)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС.ПеречислениеСтавкаНДС,
	|	ВЫБОР 
	|		КОГДА Ценности.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос)
	|			ТОГДА Ценности.НалогообложениеНДС
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|// Подтверждение ставки НДС 0%
	|	НДССостояниеРеализации0.ДатаПодтверждения КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Организация КАК Организация,
	|	ВЫБОР 
	|		КОГДА Ценности.РеализацияЧерезКомиссионера 
	|			ТОГДА Ценности.ПокупательКомиссионногоТовара
	|		ИНАЧЕ Ценности.Контрагент 
	|	КОНЕЦ КАК Покупатель,
	|	Ценности.ДокументРеализации КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	Ценности.СтавкаНДС.ПеречислениеСтавкаНДС КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПодтвержденаСтавка0) КАК Событие,
	|	НДССостояниеРеализации0.ДатаПодтверждения КАК ДатаСобытия,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1,1,1) КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСчетаФактурыКомиссионера,
	|	
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК СуммаБезНДС,
	|	0 КАК НДС,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	"""" КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокументаОплаты,
	|	"""" КАК КодВидаОперации,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК ВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	0 КАК НДСУпр
	|ИЗ
	|	#Ценности КАК Ценности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|	ПО
	|		Ценности.Ссылка = НДССостояниеРеализации0.ДокументРеализации
	|	
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ИсправлениеОшибок
	|	И НЕ Ценности.КорректировкаПоСогласованиюСторон
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) В (&ТипыЗапасовСобственные)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|					ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|	И Ценности.СтавкаНДС.ПеречислениеСтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|	И НДССостояниеРеализации0.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	Ценности.Организация,
	|	Ценности.Контрагент,
	|	Ценности.ПокупательКомиссионногоТовара,
	|	Ценности.ДокументРеализации,
	|	Ценности.РеализацияЧерезКомиссионера,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	НДССостояниеРеализации0.ДатаПодтверждения,
	|	Ценности.СтавкаНДС.ПеречислениеСтавкаНДС,
	|	ВЫБОР 
	|		КОГДА Ценности.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|// НЕ подтверждение ставки НДС 0%
	|	НДССостояниеРеализации0.ДатаПодтверждения КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Организация КАК Организация,
	|	ВЫБОР 
	|		КОГДА Ценности.РеализацияЧерезКомиссионера 
	|			ТОГДА Ценности.ПокупательКомиссионногоТовара
	|		ИНАЧЕ Ценности.Контрагент 
	|	КОНЕЦ КАК Покупатель,
	|	Ценности.ДокументРеализации КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	НДССостояниеРеализации0.СтавкаНДС.ПеречислениеСтавкаНДС КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПодтвержденаСтавка0) КАК Событие,
	|	НДССостояниеРеализации0.ДатаПодтверждения КАК ДатаСобытия,
	|	ВЫБОР
	|		КОГДА &Период >= ДАТАВРЕМЯ(2024, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации,КВАРТАЛ) < НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаПодтверждения,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаписьДополнительногоЛиста,
	|	ВЫБОР
	|		КОГДА &Период >= ДАТАВРЕМЯ(2024, 1, 1)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации,КВАРТАЛ) < НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаПодтверждения,КВАРТАЛ)
	|			ТОГДА НДССостояниеРеализации0.ДатаРеализации
	|	КОНЕЦ КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСчетаФактурыКомиссионера,
	|
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК СуммаБезНДС,
	|	СУММА(ВЫРАЗИТЬ(СуммыДокументов.БазаНДСРегл
	|		* (ВЫБОР КОГДА НДССостояниеРеализации0.СтавкаНДС.РасчетнаяСтавка = ИСТИНА Тогда
	|					НДССостояниеРеализации0.СтавкаНДС.Ставка / (НДССостояниеРеализации0.СтавкаНДС.Ставка + 100)
	|				ИНАЧЕ НДССостояниеРеализации0.СтавкаНДС.Ставка / 100
	|			КОНЕЦ)
	|		КАК ЧИСЛО(31,2))) КАК НДС,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	"""" КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокументаОплаты,
	|	"""" КАК КодВидаОперации,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК ВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	0 КАК НДСУпр
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|	ПО
	|		Ценности.Ссылка = НДССостояниеРеализации0.ДокументРеализации
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураНаНеподтвержденнуюРеализацию0 КАК СчетФактураНаНеподтвержденнуюРеализацию0
	|	ПО
	|		Ценности.Ссылка = СчетФактураНаНеподтвержденнуюРеализацию0.ДокументОснование
	|		И СчетФактураНаНеподтвержденнуюРеализацию0.Проведен
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ИсправлениеОшибок
	|	И НЕ Ценности.КорректировкаПоСогласованиюСторон
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) В (&ТипыЗапасовСобственные)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|					ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|	И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|	И НДССостояниеРеализации0.Состояние = ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.НеПодтвержденаРеализация0)
	|	И Ценности.СтавкаНДС.ПеречислениеСтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|	И СчетФактураНаНеподтвержденнуюРеализацию0.Ссылка ЕСТЬ NULL
	|	
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	Ценности.Организация,
	|	Ценности.Контрагент,
	|	Ценности.ПокупательКомиссионногоТовара,
	|	Ценности.ДокументРеализации,
	|	Ценности.РеализацияЧерезКомиссионера,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	НДССостояниеРеализации0.ДатаПодтверждения,
	|	ВЫБОР
	|		КОГДА &Период >= ДАТАВРЕМЯ(2024, 1, 1)
	|			ТОГДА ЛОЖЬ
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации,КВАРТАЛ) < НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаПодтверждения,КВАРТАЛ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &Период >= ДАТАВРЕМЯ(2024, 1, 1)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		КОГДА НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаРеализации,КВАРТАЛ) < НАЧАЛОПЕРИОДА(НДССостояниеРеализации0.ДатаПодтверждения,КВАРТАЛ)
	|			ТОГДА НДССостояниеРеализации0.ДатаРеализации
	|	КОНЕЦ,
	|	НДССостояниеРеализации0.СтавкаНДС.ПеречислениеСтавкаНДС,
	|	ВЫБОР 
	|		КОГДА Ценности.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияОСсОтложеннымПереходомПрав),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)) 
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСпоОтгрузкеТоваровВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) 
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.Период                       КАК Период,
	|	НДСЗаписиКнигиПродаж.Регистратор                  КАК Регистратор,
	|	НДСЗаписиКнигиПродаж.Организация                  КАК Организация,
	|	НДСЗаписиКнигиПродаж.Покупатель                   КАК Покупатель,
	|	НДСЗаписиКнигиПродаж.СчетФактура                  КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.ВидЦенности                  КАК ВидЦенности,
	|	НДСЗаписиКнигиПродаж.СтавкаНДС                    КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродаж.ДатаОплаты                   КАК ДатаОплаты,
	|	НДСЗаписиКнигиПродаж.ДокументОплаты               КАК ДокументОплаты,
	|	НДСЗаписиКнигиПродаж.Событие                      КАК Событие,
	|	НДСЗаписиКнигиПродаж.ДатаСобытия                  КАК ДатаСобытия,
	|	НДСЗаписиКнигиПродаж.ЗаписьДополнительногоЛиста   КАК ЗаписьДополнительногоЛиста,
	|	НДСЗаписиКнигиПродаж.КорректируемыйПериод         КАК КорректируемыйПериод,
	|	НДСЗаписиКнигиПродаж.СторнирующаяЗаписьДопЛиста   КАК СторнирующаяЗаписьДопЛиста,
	|	НДСЗаписиКнигиПродаж.ДоговорКонтрагента           КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродаж.ИсправленныйСчетФактура      КАК ИсправленныйСчетФактура,
	|	НДСЗаписиКнигиПродаж.Исправление                  КАК Исправление,
	|	НДСЗаписиКнигиПродаж.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	НДСЗаписиКнигиПродаж.СуммаБезНДС                  КАК СуммаБезНДС,
	|	НДСЗаписиКнигиПродаж.НДС                          КАК НДС,
	|	НДСЗаписиКнигиПродаж.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|	НДСЗаписиКнигиПродаж.НомерДокументаОплаты         КАК НомерДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.ДатаДокументаОплаты          КАК ДатаДокументаОплаты,
	|	НДСЗаписиКнигиПродаж.КодВидаОперации              КАК КодВидаОперации,
	|	НДСЗаписиКнигиПродаж.РегламентнаяОперация         КАК РегламентнаяОперация,
	|	НДСЗаписиКнигиПродаж.ВидДеятельностиНДС           КАК ВидДеятельностиНДС,
	|	НДСЗаписиКнигиПродаж.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	НДСЗаписиКнигиПродаж.НДСУпр                       КАК НДСУпр
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж КАК НДСЗаписиКнигиПродаж
	|ГДЕ
	|	НДСЗаписиКнигиПродаж.Регистратор = &Ссылка
	|	И НДСЗаписиКнигиПродаж.РегламентнаяОперация
	|";
	
#КонецОбласти

#Область НДССостояниеРеализации0
	
	ТекстНДССостояниеРеализации0 = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ценности.Период КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК ДатаРеализации,
	|	Ценности.Организация КАК Организация,
	|	ВЫБОР 
	|		КОГДА Ценности.РеализацияЧерезКомиссионера 
	|			ТОГДА Ценности.ПокупательКомиссионногоТовара
	|		ИНАЧЕ Ценности.Контрагент 
	|	КОНЕЦ КАК Контрагент,
	|	Ценности.ДокументРеализации КАК ДокументРеализации,
	|	ЕСТЬNULL(НДССостояниеРеализации0.Состояние, ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ОжидаетсяПодтверждение)) КАК Состояние,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	НДССостояниеРеализации0.ДатаПодтверждения КАК ДатаПодтверждения,
	|	ВЫРАЗИТЬ(НДССостояниеРеализации0.Комментарий КАК СТРОКА(500)) КАК Комментарий
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДССостояниеРеализации0 КАК НДССостояниеРеализации0
	|		ПО Ценности.Ссылка = НДССостояниеРеализации0.ДокументРеализации
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ИсправлениеОшибок
	|	И НЕ Ценности.КорректировкаПоСогласованиюСторон
	|	И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|	И Ценности.СтавкаНДС = &СтавкаНДСНаЭкспорт
	|";
	
	УчетНДСУП.УстановитьПараметрыЗапросаСтавкиНДС(Запрос.Параметры, Запрос.Параметры.Организация, Запрос.Параметры.Период);
	
#КонецОбласти

#Область ДанныеОснованийСчетовФактур
	ИдентификаторСчетФактураВыданный = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный");
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураВыданный", ИдентификаторСчетФактураВыданный);
	Запрос.УстановитьПараметр("ТипыНоменклатурыУслугаРабота", УчетНДСУПСлужебный.ТипыНоменклатурыУслугаРабота());
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	&ИдентификаторСчетФактураВыданный КАК ТипСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	Ценности.КодТНВЭД КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактурыКомиссионера,
	|	Ценности.ПокупательКомиссионногоТовара КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорректируемыйДокумент,
	|
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(
	|		ВЫБОР
	|			КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт) ТОГДА
	|				ВЫБОР Ценности.СтавкаНДС.ПеречислениеСтавкаНДС
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0) ТОГДА 
	|					ВЫБОР КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) В (&ТипыНоменклатурыУслугаРабота)
	|							И ЕСТЬNULL(КлассификаторТНВЭД.СырьевойТовар, ИСТИНА)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	|						КОГДА ЕСТЬNULL(КлассификаторТНВЭД.СырьевойТовар, ЛОЖЬ)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|					КОНЕЦ
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) ТОГДА
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|				ИНАЧЕ
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				КОНЕЦ
	|			КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					И Ценности.СтавкаНДС.ПеречислениеСтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ИНАЧЕ Ценности.НалогообложениеНДС
	|		КОНЕЦ) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(Ценности.Грузополучатель) КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	МАКСИМУМ(Ценности.ИсправлениеОшибок) КАК ИсправлениеОшибок,
	|	МАКСИМУМ(Ценности.КорректировкаПоСогласованиюСторон) КАК КорректировкаПоСогласованиюСторон,
	|	ЛОЖЬ КАК РозничныйПокупатель,
	|	МАКСИМУМ(Ценности.РеализацияЧерезКомиссионера) КАК РеализацияЧерезКомиссионера
	|ИЗ
	|	#Ценности КАК Ценности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|	ПО
	|		Ценности.КодТНВЭД = КлассификаторТНВЭД.Ссылка
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.РеализацияВРозницу
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	Ценности.Контрагент,
	|	Ценности.ПокупательКомиссионногоТовара,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	Ценности.КодТНВЭД,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|";
	
#КонецОбласти

#Область НДСПредъявленныйСохранение
	
	ТекстЗапросаНДСПредъявленный = 
	"ВЫБРАТЬ
	|	НДСПредъявленный.ВидДвижения                КАК ВидДвижения,
	|	НДСПредъявленный.Период                     КАК Период,
	|	НДСПредъявленный.Организация                КАК Организация,
	|	НДСПредъявленный.СчетФактура                КАК СчетФактура,
	|	НДСПредъявленный.Поставщик                  КАК Поставщик,
	|	НДСПредъявленный.ВидЦенности                КАК ВидЦенности,
	|	НДСПредъявленный.СтавкаНДС                  КАК СтавкаНДС,
	|	НДСПредъявленный.ВидДеятельностиНДС         КАК ВидДеятельностиНДС,
	|	НДСПредъявленный.ИсправленныйСчетФактура    КАК ИсправленныйСчетФактура,
	|	НДСПредъявленный.РеализацияЭкспорт          КАК РеализацияЭкспорт,
	|	НДСПредъявленный.НаправлениеДеятельности    КАК НаправлениеДеятельности,
	|	НДСПредъявленный.СуммаБезНДС                КАК СуммаБезНДС,
	|	НДСПредъявленный.НДС                        КАК НДС,
	|	НДСПредъявленный.НДСУпр                     КАК НДСУпр,
	|	НДСПредъявленный.Событие                    КАК Событие,
	|	НДСПредъявленный.РегламентнаяОперация       КАК РегламентнаяОперация,
	|	НДСПредъявленный.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	НДСПредъявленный.КорВидДеятельностиНДС      КАК КорВидДеятельностиНДС,
	|	НДСПредъявленный.ИдентификаторСтроки        КАК ИдентификаторСтроки,
	|	НДСПредъявленный.Подразделение              КАК Подразделение,
	|	НДСПредъявленный.СтатьяРасходов             КАК СтатьяРасходов,
	|	НДСПредъявленный.АналитикаРасходов          КАК АналитикаРасходов
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	
	|ГДЕ
	|	НДСПредъявленный.Регистратор = &Ссылка
	|	И НДСПредъявленный.РегламентнаяОперация
	|";
	
#КонецОбласти
	
#Область ЗаполнениеТоваровСФВыданный
	
	ТекстЗапросаЗаполнениеТоваровСФВыданный = 
	"ВЫБРАТЬ
	|	СчетФактураВыданныйДокументыОснования.Ссылка КАК ИсходныйСчетФактура,
	|	Ценности.НомерСтроки КАК НомерСтроки,
	|	Ценности.Номенклатура КАК Номенклатура,
	|	Ценности.Характеристика КАК Характеристика,
	|	Ценности.Серия КАК Серия,
	|	Ценности.НоменклатураПартнера КАК НоменклатураПартнера,	
	|	Ценности.НоменклатураНабора КАК НоменклатураНабора,
	|	Ценности.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	Ценности.Содержание КАК Содержание,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Работа))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	ВЫБОР КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт) ТОГДА
	|		Ценности.КодТНВЭД
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|	КОНЕЦ КАК КодТНВЭД,
	|	Ценности.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.НомерГТД КАК НомерГТД,
	|	Ценности.ДокументРеализации КАК ДокументРеализации,
	|	СУММА(Ценности.Количество) КАК Количество,
	|	СУММА(Ценности.КоличествоПоРНПТ) КАК КоличествоПоРНПТ,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) КАК Сумма,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) КАК СуммаНДС,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) КАК СуммаРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) КАК СуммаНДСРегл
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|		ПО Ценности.ДокументРеализации = СчетФактураВыданныйДокументыОснования.ДокументОснование
	|			И НЕ СчетФактураВыданныйДокументыОснования.Ссылка.ПометкаУдаления
	|			И НЕ СчетФактураВыданныйДокументыОснования.Ссылка.Исправление
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|		ПО Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.РеализацияВРозницу
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураВыданныйДокументыОснования.Ссылка,
	|	Ценности.НомерСтроки,
	|	Ценности.Номенклатура,
	|	Ценности.Характеристика,
	|	Ценности.Серия,
	|	Ценности.НоменклатураПартнера,
	|	Ценности.НоменклатураНабора,
	|	Ценности.ХарактеристикаНабора,
	|	Ценности.Содержание,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Работа))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ,
	|	ВЫБОР КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт) ТОГДА
	|		Ценности.КодТНВЭД
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	Ценности.НомерГТД,
	|	Ценности.ДокументРеализации,
	|	Ценности.ЕдиницаИзмерения";
	
#КонецОбласти

	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("НДСЗаписиКнигиПродаж", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСЗаписиКнигиПродаж", ТекстНДСЗаписиКнигиПродаж);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("НДССостояниеРеализации0", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДССостояниеРеализации0", ТекстНДССостояниеРеализации0);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("НДСПредъявленный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСПредъявленный", ТекстЗапросаНДСПредъявленный);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ЗаполнениеТоваровСФВыданный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеТоваровСФВыданный", ТекстЗапросаЗаполнениеТоваровСФВыданный);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ТекстыЗапросовДанныхДокумента = Новый Структура();
	ТекстыЗапросовДанныхДокумента.Вставить("Ценности", ТекстЦенности);
	
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьВозвратТоваровПоставщику
Процедура ОтразитьВозвратТоваровПоставщику(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт

	//++ Локализация
	
#Область НДСЗаписиКнигиПродаж
	
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	ТекстНДСЗаписиКнигиПродаж =
	"// Начисление НДС
	|ВЫБРАТЬ
	|	Ценности.Период КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Организация КАК Организация,
	|	Ценности.Контрагент КАК Покупатель,
	|	Ценности.ДокументВозврата КАК СчетФактура,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
	|	Ценности.СтавкаНДС.ПеречислениеСтавкаНДС КАК СтавкаНДС,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаОплаты,
	|	НЕОПРЕДЕЛЕНО КАК ДокументОплаты,
	|	ВЫБОР 
	|		КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|	КОНЕЦ КАК Событие,
	|	Ценности.Период КАК ДатаСобытия,
	|	ЛОЖЬ КАК ЗаписьДополнительногоЛиста,
	|	ДАТАВРЕМЯ(1,1,1) КАК КорректируемыйПериод,
	|	ЛОЖЬ КАК СторнирующаяЗаписьДопЛиста,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК ИсправленныйСчетФактура,
	|	ЛОЖЬ КАК Исправление,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаСчетаФактурыКомиссионера,
	|	
	|	СуммыДокументов.БазаНДСРегл КАК СуммаБезНДС,
	|	СуммыДокументов.СуммаНДСРегл КАК НДС,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	"""" КАК НомерДокументаОплаты,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокументаОплаты,
	|	"""" КАК КодВидаОперации,
	|	ЛОЖЬ КАК РегламентнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК ВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	СуммыДокументов.СуммаНДСУпр КАК НДСУпр
	|ИЗ
	|	#Ценности КАК Ценности
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И Ценности.ВидЗапасов.ТипЗапасов В (&ТипыЗапасовСобственные)
	|	И Ценности.НалогообложениеНДС В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя))
	|	И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|";
	
#КонецОбласти

#Область ДанныеОснованийСчетовФактур
	
	ИдентификаторСчетФактураВыданный = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный");
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураВыданный", ИдентификаторСчетФактураВыданный);
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Период КАК Период,
	|	Ценности.Ссылка КАК Регистратор,
	|	&ИдентификаторСчетФактураВыданный КАК ТипСчетаФактуры,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары) КАК ВидЦенности,
	|	Ценности.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ЛОЖЬ КАК УменьшениеСуммы,
	|	
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактурыКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			И ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	Ценности.ДокументПоступления КАК КорректируемыйДокумент,
	|	
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(Ценности.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(Ценности.Грузополучатель) КАК Грузополучатель,
	|	ИСТИНА КАК ЭтоВозврат,
	|	ЛОЖЬ КАК ИсправлениеОшибок,
	|	ЛОЖЬ КАК КорректировкаПоСогласованиюСторон,
	|	ЛОЖЬ КАК РозничныйПокупатель
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Назначения КАК Назначения
	|	ПО
	|		Ценности.Назначение = Назначения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ПокупательНеПлательщикНДС
	|	И Ценности.Период < &ДатаОтраженияВозвратовКорректировочнымиСФ
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Период,
	|	Ценности.Ссылка,
	|	Ценности.ВидЗапасов.ТипЗапасов,
	|	Ценности.ДокументПоступления,
	|	Ценности.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА Ценности.Период >= &ДатаНачалаУчетаНДСПоНаправлениямДеятельности
	|			И ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		ТОГДА Назначения.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Назначения.ВидДеятельностиНДС, ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Назначения.ВидДеятельностиНДС
	|		КОГДА Ценности.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			И Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|		ИНАЧЕ Ценности.ВидДеятельностиНДС
	|	КОНЕЦ
	|";
	
#КонецОбласти

#Область ЗаполнениеСуммСФПолученный
	
	ТекстЗапросаЗаполнениеСуммСФПолученный =
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК ДокументОснование,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.ДокументПоступления КАК ДокументПриобретения,
	|
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|
	|	-СУММА(ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) КАК Сумма,
	|	СУММА((ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) * ВЫБОР
	|		КОГДА (ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) > 0)
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ) КАК СуммаУвеличение,
	|	СУММА((ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) * ВЫБОР
	|		КОГДА (ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) < 0)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ) КАК СуммаУменьшение,
	|	-СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) КАК СуммаНДС,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) > 0
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ) КАК СуммаНДСУвеличение,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0) < 0
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ) КАК СуммаНДСУменьшение,
	|
	|	-СУММА(ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) КАК СуммаРегл,
	|	СУММА((ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) * ВЫБОР
	|		КОГДА (ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) > 0)
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ) КАК СуммаУвеличениеРегл,
	|	СУММА((ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) * ВЫБОР
	|		КОГДА (ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ) КАК СуммаУменьшениеРегл,
	|	-СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) КАК СуммаНДСРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) > 0
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ) КАК СуммаНДСУвеличениеРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) * ВЫБОР
	|		КОГДА ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0) < 0
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ) КАК СуммаНДСУменьшениеРегл
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ПокупательНеПлательщикНДС
	|	И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.СтавкаНДС,
	|	Ценности.ДокументПоступления";
	
#КонецОбласти

#Область ЗаполнениеШапкиСФПолученный

	ТекстЗапросаЗаполнениеШапкиСФПолученный =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ценности.Ссылка КАК Регистратор,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И НЕ Ценности.ПокупательНеПлательщикНДС
	|	И Ценности.Период >= &ДатаОтраженияВозвратовКорректировочнымиСФ
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка";

#КонецОбласти
	
	ТекстыЗапросовДанныхДокумента = Новый Структура("Ценности", ТекстТовары);
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("НДСЗаписиКнигиПродаж", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("НДСЗаписиКнигиПродаж", ТекстНДСЗаписиКнигиПродаж);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ЗаполнениеСуммСФПолученный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеСуммСФПолученный", ТекстЗапросаЗаполнениеСуммСФПолученный);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ЗаполнениеШапкиСФПолученный", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеШапкиСФПолученный", ТекстЗапросаЗаполнениеШапкиСФПолученный);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьОтчетКомиссионера
Процедура ОтразитьОтчетКомиссионера(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт
	
	//++ Локализация
	
#Область ДанныеОснованийСчетовФактур
	
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураКомиссионеру", 
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураКомиссионеру"));
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураВыданный", 
		ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный"));
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	ВЫБОР
	|		КОГДА Ценности.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионера)
	|			ТОГДА &ИдентификаторСчетФактураВыданный
	|		ИНАЧЕ &ИдентификаторСчетФактураКомиссионеру
	|	КОНЕЦ КАК ТипСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	Ценности.ДатаСчетаФактурыКомиссионера КАК ДатаСчетаФактурыКомиссионера,
	|	Ценности.НомерСчетаФактурыКомиссионера КАК НомерСчетаФактурыКомиссионера,
	|	Ценности.ПокупательКомиссионногоТовара КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК КорректируемыйДокумент,
	|
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(Ценности.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	Ценности.ИсправлениеОшибок КАК ИсправлениеОшибок,
	|	ЛОЖЬ КАК КорректировкаПоСогласованиюСторон,
	|	ЛОЖЬ КАК РозничныйПокупатель
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|	И (Ценности.ПокупательКомиссионногоТовара.ЮрФизЛицо В
	|			(ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ЮрЛицо), ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель))
	|		ИЛИ Ценности.НомерСчетаФактурыКомиссионера <> """")
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	Ценности.ДатаСчетаФактурыКомиссионера,
	|	Ценности.НомерСчетаФактурыКомиссионера,
	|	Ценности.ПокупательКомиссионногоТовара,
	|	Ценности.ХозяйственнаяОперация,
	|	Ценности.ИсправлениеОшибок
	|";
	
#КонецОбласти

	ТекстыЗапросовДанныхДокумента = Новый Структура();
	ТекстыЗапросовДанныхДокумента.Вставить("Ценности", ТекстТовары);
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьОтчетКомитенту
Процедура ОтразитьОтчетКомитенту(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт
	
	//++ Локализация
	
#Область ДанныеОснованийСчетовФактур
	
	Запрос.УстановитьПараметр("ТипыНоменклатурыТовар", УчетНДСУПСлужебный.ТипыНоменклатурыТовар());
	
	ИдентификаторСчетФактураКомитента = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураКомитента");
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураКомитента", ИдентификаторСчетФактураКомитента);
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	&ИдентификаторСчетФактураКомитента КАК ТипСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.КлассификаторТНВЭД.ПустаяСсылка) КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	ВЫБОР
	|		КОГДА Ценности.ДатаСчетаФактурыВыданногоПокупателю = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА Ценности.Период
	|		ИНАЧЕ Ценности.ДатаСчетаФактурыВыданногоПокупателю
	|	КОНЕЦ КАК ДатаСчетаФактурыКомиссионера,
	|	Ценности.СчетФактураВыданныйПокупателю.Номер КАК НомерСчетаФактурыКомиссионера,
	|	Ценности.ПокупательКомиссионногоТовара КАК ПокупательКомиссионногоТовара,
	|	Ценности.СчетФактураВыданныйПокупателю КАК СчетФактураВыданныйКомиссионером,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК КорректируемыйДокумент,
	|	
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(Ценности.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	Ценности.ИсправлениеОшибок КАК ИсправлениеОшибок,
	|	ЛОЖЬ КАК КорректировкаПоСогласованиюСторон,
	|	ЛОЖЬ КАК РозничныйПокупатель
	|
	|ИЗ
	|	#Ценности КАК Ценности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Ценности.ДатаСчетаФактурыВыданногоПокупателю = ДАТАВРЕМЯ(1,1,1)
	|			ТОГДА Ценности.Период
	|		ИНАЧЕ Ценности.ДатаСчетаФактурыВыданногоПокупателю
	|	КОНЕЦ,
	|	Ценности.ПокупательКомиссионногоТовара,
	|	Ценности.СчетФактураВыданныйПокупателю,
	|	Ценности.СчетФактураВыданныйПокупателю.Номер,
	|	Ценности.ПокупательКомиссионногоТовара,
	|	Ценности.ИсправлениеОшибок
	|";
	
#КонецОбласти

	ТекстыЗапросовДанныхДокумента = Новый Структура();
	ТекстыЗапросовДанныхДокумента.Вставить("Ценности", ТекстТовары);
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьОтчетКомитентуОЗакупках
Процедура ОтразитьОтчетКомитентуОЗакупках(Запрос, ТекстыЗапроса, Регистры, ТекстТовары) Экспорт
	
	//++ Локализация
	
#Область ЗаполнениеТоваровСФВыданныйПеревыставление
	
	ТекстЗапросаЗаполнениеТоваровСФВыданныйПеревыставление = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА СчетФактураПолученныйДокументыОснования.ДокументОснование ССЫЛКА Документ.КорректировкаПриобретения
	|			ТОГДА СчетФактураПолученныйДокументыОснования.ДокументОснование.ДокументОснование
	|		КОГДА СчетФактураПолученныйДокументыОснования.ДокументОснование ССЫЛКА Документ.ВозвратТоваровПоставщику
	|			ТОГДА СчетФактураПолученныйДокументыОснования.ДокументОснование.ДокументПоступления
	|		ИНАЧЕ СчетФактураПолученныйДокументыОснования.ДокументОснование
	|	КОНЕЦ КАК ДокументОснование,
	|	СчетФактураПолученныйДокументыОснования.Ссылка КАК СчетФактураПродавца,
	|	Ценности.ДокументПриобретения КАК ДокументПриобретения
	|ПОМЕСТИТЬ вт_ДокументыОснований
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования 
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ #Ценности КАК Ценности
	|		ПО Ценности.СчетФактураПолученный = СчетФактураПолученныйДокументыОснования.Ссылка
	|			И Ценности.ДокументПриобретения = СчетФактураПолученныйДокументыОснования.ДокументОснование
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_ДокументыОснований.СчетФактураПродавца.Исправление КАК Исправление,
	|	вт_ДокументыОснований.ДокументОснование КАК ДокументОснование,
	|	СчетФактураПолученныйДокументыОснования.Ссылка КАК ИсходныйДокумент,
	|	вт_ДокументыОснований.СчетФактураПродавца КАК Ссылка,
	|	вт_ДокументыОснований.ДокументПриобретения КАК ДокументПриобретения
	|ПОМЕСТИТЬ втСчетФактураПолученныйДокументыОснования
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_ДокументыОснований КАК вт_ДокументыОснований
	|			ПО СчетФактураПолученныйДокументыОснования.ДокументОснование = вт_ДокументыОснований.ДокументОснование
	|ГДЕ
	|	СчетФактураПолученныйДокументыОснования.Ссылка.Проведен
	|СГРУППИРОВАТЬ ПО
	|	вт_ДокументыОснований.ДокументОснование,
	|	вт_ДокументыОснований.СчетФактураПродавца,
	|	СчетФактураПолученныйДокументыОснования.Ссылка,
	|	вт_ДокументыОснований.ДокументПриобретения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СчетФактураВыданныйДокументыОснования.Ссылка, ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка)) КАК ИсходныйСчетФактура,
	|	Ценности.Ссылка КАК ОтчетКомитентуОЗакупках,
	|	Ценности.НомерСтроки КАК НомерСтроки,
	|	Ценности.Номенклатура КАК Номенклатура,
	|	Ценности.Характеристика КАК Характеристика,
	|	Ценности.Серия КАК Серия,
	|	Ценности.НоменклатураНабора КАК НоменклатураНабора,
	|	Ценности.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	Ценности.Содержание КАК Содержание,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи) КАК ТипЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК КодТНВЭД,
	|	Ценности.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	Ценности.НомерГТД КАК НомерГТД,
	|	Ценности.ДокументПриобретения КАК ДокументРеализации,
	|	Ценности.СчетФактураПолученный КАК СчетФактураПолученныйОтПродавца,
	|	СУММА(Ценности.Количество) КАК Количество,
	|	СУММА(Ценности.КоличествоПоРНПТ) КАК КоличествоПоРНПТ,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаБезНДС, 0) + ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) КАК Сумма,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДС, 0)) КАК СуммаНДС,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.БазаНДСРегл, 0)) КАК СуммаРегл,
	|	СУММА(ЕСТЬNULL(СуммыДокументов.СуммаНДСРегл, 0)) КАК СуммаНДСРегл
	|ИЗ
	|	#Ценности КАК Ценности
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|		ПО Ценности.Ссылка = СуммыДокументов.Ссылка
	|			И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетФактураПолученныйДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|		ПО Ценности.СчетФактураПолученный = СчетФактураПолученныйДокументыОснования.Ссылка
	|			И Ценности.ДокументПриобретения = СчетФактураПолученныйДокументыОснования.ДокументПриобретения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|		ПО ВЫБОР 
	|			КОГДА СчетФактураПолученныйДокументыОснования.ИсходныйДокумент = ЗНАЧЕНИЕ(Документ.СчетФактураПолученный.Пустаяссылка)
	|				ТОГДА СчетФактураПолученныйДокументыОснования.Ссылка = СчетФактураВыданныйДокументыОснования.СчетФактураПолученныйОтПродавца
	|			ИНАЧЕ СчетФактураПолученныйДокументыОснования.ИсходныйДокумент = СчетФактураВыданныйДокументыОснования.СчетФактураПолученныйОтПродавца
	|				И ВЫРАЗИТЬ(СчетФактураПолученныйДокументыОснования.ИсходныйДокумент КАК Документ.СчетФактураПолученный).Проведен
	|				И (СчетФактураВыданныйДокументыОснования.ДокументОснование = Ценности.Ссылка
	|					ИЛИ СчетФактураПолученныйДокументыОснования.ДокументОснование <> СчетФактураПолученныйДокументыОснования.ДокументПриобретения)
	|		КОНЕЦ
	|		И НЕ СчетФактураВыданныйДокументыОснования.Ссылка.ПометкаУдаления
	|		И СчетФактураВыданныйДокументыОснования.Ссылка.Проведен
	|		И ВЫБОР
	|			КОГДА СчетФактураВыданныйДокументыОснования.СчетФактураПолученныйОтПродавца ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СчетФактураВыданныйДокументыОснования.СчетФактураПолученныйОтПродавца = СчетФактураПолученныйДокументыОснования.ИсходныйДокумент
	|		КОНЕЦ
	|		И СчетФактураВыданныйДокументыОснования.Ссылка.Контрагент = Ценности.Контрагент
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(СчетФактураВыданныйДокументыОснования.Ссылка, ЗНАЧЕНИЕ(Документ.СчетФактураВыданный.ПустаяСсылка)),
	|	Ценности.Номенклатура,
	|	Ценности.Характеристика,
	|	Ценности.Серия,
	|	Ценности.НоменклатураНабора,
	|	Ценности.ХарактеристикаНабора,
	|	Ценности.Содержание,
	|	Ценности.СтавкаНДС,
	|	Ценности.НомерГТД,
	|	Ценности.НомерСтроки,
	|	Ценности.ДокументПриобретения,
	|	Ценности.СчетФактураПолученный,
	|	Ценности.ЕдиницаИзмерения,
	|	Ценности.Ссылка";
	
#КонецОбласти
	
#Область ДанныеОснованийСчетовФактур
	ИдентификаторСчетФактураВыданный = ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СчетФактураВыданный");
	Запрос.УстановитьПараметр("ИдентификаторСчетФактураВыданный", ИдентификаторСчетФактураВыданный);
	Запрос.УстановитьПараметр("ТипыНоменклатурыУслугаРабота", УчетНДСУПСлужебный.ТипыНоменклатурыУслугаРабота());
	
	ТекстЗапросаДанныеОснованийСчетовФактур = 
	"ВЫБРАТЬ
	|	Ценности.Ссылка КАК Регистратор,
	|	Ценности.Период КАК Период,
	|	&ИдентификаторСчетФактураВыданный КАК ТипСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ КАК ВидЦенности,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ КАК ТипЗапасов,
	|	Ценности.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	Ценности.КодТНВЭД КАК КодТНВЭД,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК УменьшениеСуммы,
	|
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаСчетаФактурыКомиссионера,
	|	МАКСИМУМ(Ценности.Контрагент) КАК ПокупательКомиссионногоТовара,
	|	НЕОПРЕДЕЛЕНО КАК СчетФактураВыданныйКомиссионером,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорректируемыйДокумент,
	|
	|	СУММА(СуммыДокументов.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(СуммыДокументов.СуммаНДС) КАК СуммаНДС,
	|	СУММА(СуммыДокументов.СуммаБезНДСРегл) КАК СуммаБезНДСРегл,
	|	СУММА(СуммыДокументов.БазаНДСРегл) КАК БазаНДСРегл,
	|	СУММА(СуммыДокументов.СуммаНДСРегл) КАК СуммаНДСРегл,
	|	
	|	МАКСИМУМ(Ценности.Период) КАК Дата,
	|	МАКСИМУМ(
	|		ВЫБОР
	|			КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт) ТОГДА
	|				ВЫБОР Ценности.СтавкаНДС.ПеречислениеСтавкаНДС
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0) ТОГДА 
	|					ВЫБОР КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)) В (&ТипыНоменклатурыУслугаРабота)
	|							И ЕСТЬNULL(КлассификаторТНВЭД.СырьевойТовар, ИСТИНА)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	|						КОГДА ЕСТЬNULL(КлассификаторТНВЭД.СырьевойТовар, ЛОЖЬ)
	|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|					КОНЕЦ
	|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) ТОГДА
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|				ИНАЧЕ
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				КОНЕЦ
	|			КОГДА Ценности.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|					И Ценности.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			ИНАЧЕ Ценности.НалогообложениеНДС
	|		КОНЕЦ) КАК НалогообложениеНДС,
	|	МАКСИМУМ(СуммыДокументов.ВалютаДокумента) КАК Валюта,
	|	МАКСИМУМ(Ценности.Организация) КАК Организация,
	|	МАКСИМУМ(Ценности.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(Ценности.Контрагент) КАК Контрагент,
	|	МАКСИМУМ(Ценности.Договор) КАК Договор,
	|	МАКСИМУМ(Ценности.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(Ценности.Грузополучатель) КАК Грузополучатель,
	|	ЛОЖЬ КАК ЭтоВозврат,
	|	МАКСИМУМ(Ценности.ИсправлениеОшибок) КАК ИсправлениеОшибок,
	|	МАКСИМУМ(Ценности.КорректировкаПоСогласованиюСторон) КАК КорректировкаПоСогласованиюСторон,
	|	ЛОЖЬ КАК РозничныйПокупатель
	|ИЗ
	|	#Ценности КАК Ценности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		Ценности.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|	ПО
	|		Ценности.Характеристика = ХарактеристикиНоменклатуры.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО
	|		Ценности.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСуммыДокументовВВалютахУчета КАК СуммыДокументов
	|	ПО
	|		Ценности.Ссылка = СуммыДокументов.Ссылка
	|		И Ценности.ИдентификаторСтроки = СуммыДокументов.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|	ПО
	|		Ценности.КодТНВЭД = КлассификаторТНВЭД.Ссылка
	|ГДЕ
	|	Ценности.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|СГРУППИРОВАТЬ ПО
	|	Ценности.Ссылка,
	|	Ценности.Период,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.Товары)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры ЕСТЬ NULL И СпрВидыЗапасов.ТипЗапасов ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)
	|		КОГДА ЕСТЬNULL(СпрНоменклатура.ТипНоменклатуры, НЕОПРЕДЕЛЕНО) В (&ТипыНоменклатурыТовар)
	|			ТОГДА ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		КОГДА (ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = НЕОПРЕДЕЛЕНО
	|				ИЛИ ЕСТЬNULL(ХарактеристикиНоменклатуры.Принципал, СпрНоменклатура.Принципал) = Ценности.Организация) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|	КОНЕЦ,
	|	Ценности.СтавкаНДС,
	|	Ценности.КодТНВЭД,
	|	ВЫБОР
	|		КОГДА Ценности.ИсправлениеОшибок ИЛИ Ценности.КорректировкаПоСогласованиюСторон
	|			ТОГДА Ценности.ДокументРеализации
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СуммыДокументов.СуммаНДС < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|";
	
#КонецОбласти
	
	ТекстыЗапросовДанныхДокумента = Новый Структура();
	ТекстыЗапросовДанныхДокумента.Вставить("Ценности", ТекстТовары);
	
	ТекстыШаблоновОтражения = Новый Структура();
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ДанныеОснованийСчетовФактур", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ДанныеОснованийСчетовФактур", ТекстЗапросаДанныеОснованийСчетовФактур);
	КонецЕсли;
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений("ЗаполнениеТоваровСФВыданныйПеревыставление", Регистры) Тогда
		ТекстыШаблоновОтражения.Вставить("ЗаполнениеТоваровСФВыданныйПеревыставление", ТекстЗапросаЗаполнениеТоваровСФВыданныйПеревыставление);
	КонецЕсли;
	Если ТекстыШаблоновОтражения.Количество() > 0 Тогда
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Запрос.Параметры.Ссылка);
		МенеджерДокумента.СформироватьСуммыДокументаВВалютахУчета(Запрос, ТекстыЗапроса);
	КонецЕсли;
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(Запрос, ТекстыЗапроса, ТекстыШаблоновОтражения, ТекстыЗапросовДанныхДокумента);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ФормированиеЗаданий

#Область ЗаданияКЗакрытиюМесяца

Процедура ДополнительныеПроверкиПриРаспределенииНДС(ПараметрыОбработчика) Экспорт
	//++ Локализация
	УчетНДСРФ.ПроверитьКорректностьПримененияПравила5Процентов(ПараметрыОбработчика);
	//-- Локализация
КонецПроцедуры

// см. УчетНДСУП.ПередЗаписьюЗаданияКЗакрытиюМесяца
Процедура ПередЗаписьюЗаданияКЗакрытиюМесяца(Месяц, Операция, Организация, Документ) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  СоответствиеТекстовЗапросов - см. УчетНДСУПСлужебный.СоответствиеЗапросовКонтрольнымРегистрам
//  Запрос - см. УчетНДСУПСлужебный.СоответствиеЗапросовКонтрольнымРегистрам
//
Процедура ДополнитьСоответствиеЗапросовКонтрольнымРегистрам(СоответствиеТекстовЗапросов, Запрос) Экспорт
	
	//++ Локализация
	Запрос.УстановитьПараметр("ИдентификаторСводнаяСправкаНДС", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.СводнаяСправкаНДС"));
	Запрос.УстановитьПараметр("ТипыДокументовВводаОстатков", РеглУчетСервер.ДокументыВводаОстатков());
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Таблица.Период, КВАРТАЛ), МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ФормированиеСводныхСправокНДС) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	ТаблицаИзмененийДанныеОснованийСчетовФактур КАК Таблица
	|ГДЕ
	|	Таблица.ТипСчетаФактуры = &ИдентификаторСводнаяСправкаНДС
	|";	
	СтруктураТекстовЗапросов = ЗакрытиеМесяцаСервер.ИнициализироватьСтруктуруТекстовЗапросов(ТекстЗапроса);
	
	СоответствиеТекстовЗапросов.Вставить("ТаблицаИзмененийДанныеОснованийСчетовФактур", СтруктураТекстовЗапросов);

	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаДвиженияКонтрагентДоходыРасходы(ТекстЗапроса) Экспорт
	
	//++ Локализация
	МассивТекстовЗапросов = Новый Массив;
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	
	ЗаданияФормированиеСводныхСправокНДС = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ФормированиеСводныхСправокНДС) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	ТаблицаИзмененийДвиженияКонтрагентДоходыРасходы КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СводнаяСправкаНДС КАК СводнаяСправкаНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Таблица.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(СводнаяСправкаНДС.Дата, МЕСЯЦ)
	|		И СводнаяСправкаНДС.Проведен
	|		И НЕ СводнаяСправкаНДС.Исправление
	|		И НЕ СводнаяСправкаНДС.Корректировочная
	|";
	МассивТекстовЗапросов.Добавить(ЗаданияФормированиеСводныхСправокНДС);
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаПрочаяВыручка(ТекстЗапроса) Экспорт
	
	//++ Локализация
	МассивТекстовЗапросов = Новый Массив;
	МассивТекстовЗапросов.Добавить(ТекстЗапроса);
	
	ЗаданияФормированиеСводныхСправокНДС = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ФормированиеСводныхСправокНДС) КАК Операция,
	|	Таблица.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	ТаблицаИзмененийПрочаяВыручка КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СводнаяСправкаНДС КАК СводнаяСправкаНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Таблица.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(СводнаяСправкаНДС.Дата, МЕСЯЦ)
	|		И СводнаяСправкаНДС.Проведен
	|		И НЕ СводнаяСправкаНДС.Исправление
	|		И НЕ СводнаяСправкаНДС.Корректировочная
	|";
	МассивТекстовЗапросов.Добавить(ЗаданияФормированиеСводныхСправокНДС);
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаВыручкаИСебестоимостьПродаж(ТекстЗапроса, Запрос) Экспорт

	//++ Локализация
	МассивТекстов = Новый Массив;
	МассивТекстов.Добавить(ТекстЗапроса);

	ЗаданияФормированиеСводныхСправокНДС = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.ФормированиеСводныхСправокНДС) КАК Операция,
	|	Таблица.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	Таблица.Регистратор КАК Документ
	|ИЗ
	|	ТаблицаИзмененийВыручкаИСебестоимостьПродаж КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СводнаяСправкаНДС КАК СводнаяСправкаНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Таблица.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(СводнаяСправкаНДС.Дата, МЕСЯЦ)
	|		И Таблица.АналитикаУчетаПоПартнерам.Организация = СводнаяСправкаНДС.Организация
	|		И СводнаяСправкаНДС.Проведен
	|		И НЕ СводнаяСправкаНДС.Исправление
	|		И НЕ СводнаяСправкаНДС.Корректировочная
	|";
	МассивТекстов.Добавить(ЗаданияФормированиеСводныхСправокНДС);
	
	ТекстЗапроса = СтрСоединить(МассивТекстов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ЗаданияКФормированиюДвиженийПоНДС

// Параметры:
//  Тип - см. УчетНДСУП.СформироватьЗаданияПоДокументам
//  МассивСсылок - см. УчетНДСУП.СформироватьЗаданияПоДокументам
Процедура СформироватьЗаданияПоДокументам(Тип, МассивСсылок) Экспорт
	
	//++ Локализация
	Если Тип = Тип("ДокументСсылка.ЗаявлениеОВвозеТоваров") Тогда
		УчетНДСРФ.СформироватьЗаданияПоДокументамЗаявлениеОВвозеТоваров(МассивСсылок);
	ИначеЕсли Тип = Тип("ДокументСсылка.СчетФактураВыданный") Тогда
		УчетНДСРФ.СформироватьЗаданияПоДокументамСчетФактураВыданный(МассивСсылок);
	ИначеЕсли Тип = Тип("ДокументСсылка.СчетФактураПолученный") Тогда
		УчетНДСРФ.СформироватьЗаданияПоДокументамСчетФактураПолученный(МассивСсылок);
	ИначеЕсли Тип = Тип("ДокументСсылка.СчетФактураПолученныйНалоговыйАгент") Тогда
		УчетНДСРФ.СформироватьЗаданияПоДокументамСчетФактураПолученный(МассивСсылок);
	ИначеЕсли Тип = Тип("ДокументСсылка.СчетФактураНалоговыйАгент") Тогда
		УчетНДСРФ.СформироватьЗаданияПоДокументамСчетФактураНалоговыйАгент(МассивСсылок);
	ИначеЕсли Тип = Тип("ДокументСсылка.ИнойДокументПодтвержденияНДС") Тогда
		УчетНДСРФ.СформироватьЗаданияПоИнымДокументамПодтвержденияНДС(МассивСсылок);
	КонецЕсли;	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ПрочийИнтерфейсФормированияЗаданий

// Выполняет формирование заданий по учету НДС по результатам изменения партионных регистров.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер, который содержит временную таблицу ВтИзменениеПартий, она должна содержать поля:
//	   * Период - Дата - Период движения партии.
//	   * Организация - СправочникСсылка.Организации - Организация учета партии.
//	   * КорВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Новый вид деятельности раздельного учета НДС.
//
Процедура СформироватьЗаданияДляРаспределенияНДС(МенеджерВременныхТаблиц) Экспорт
	
	//++ Локализация
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация,
	|	Организации.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ИзменениеПартий.Период КАК Период,
	|	ИзменениеПартий.КорВидДеятельностиНДС КАК КорВидДеятельностиНДС,
	|	МАКСИМУМ(НастройкиУчетаНДС.Период) КАК ПериодУчетнойПолитики
	|ПОМЕСТИТЬ ПериодыНастройкиУчетаНДС
	|ИЗ
	|	ВтИзменениеПартий КАК ИзменениеПартий
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.Организации КАК Организации
	|	ПО
	|		Организации.Ссылка = ИзменениеПартий.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НастройкиУчетаНДС КАК НастройкиУчетаНДС
	|	ПО
	|		Организации.ГоловнаяОрганизация = НастройкиУчетаНДС.Организация
	|		И ИзменениеПартий.Период >= НастройкиУчетаНДС.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	Организации.Ссылка,
	|	Организации.ГоловнаяОрганизация,
	|	ИзменениеПартий.Период,
	|	ИзменениеПартий.КорВидДеятельностиНДС
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Период
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(НастройкиУчетаНДС.ПериодичностьРаспределенияНДС, ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал))
	|				 = ЗНАЧЕНИЕ(Перечисление.Периодичность.Квартал) ТОГДА
	|			НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Партии.Период, КВАРТАЛ), МЕСЯЦ)
	|		КОГДА НастройкиУчетаНДС.ПериодичностьРаспределенияНДС = ЗНАЧЕНИЕ(Перечисление.Периодичность.Месяц) ТОГДА
	|			НАЧАЛОПЕРИОДА(Партии.Период,МЕСЯЦ)
	|	КОНЕЦ КАК Месяц,
	|	Партии.Организация                                         КАК Организация
	|ПОМЕСТИТЬ
	|	ВТПартии
	|ИЗ
	|	ПериодыНастройкиУчетаНДС КАК Партии
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НастройкиУчетаНДС КАК НастройкиУчетаНДС
	|	ПО
	|		Партии.ГоловнаяОрганизация = НастройкиУчетаНДС.Организация
	|		И Партии.ПериодУчетнойПолитики = НастройкиУчетаНДС.Период
	|ГДЕ
	|	Партии.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(Партии.Период, КВАРТАЛ), МЕСЯЦ) КАК Месяц,
	|	Партии.Организация                                         КАК Организация
	|ИЗ
	|	ВтИзменениеПартий КАК Партии
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Партии.Период, КВАРТАЛ) = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И Партии.Организация = РаспределениеНДС.Организация
	|		И РаспределениеНДС.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Партии.Период, МЕСЯЦ)                        КАК Месяц,
	|	Партии.Организация                                         КАК Организация
	|ИЗ
	|	ВтИзменениеПартий КАК Партии
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ПО
	|		КОНЕЦПЕРИОДА(Партии.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(РаспределениеНДС.Дата, МЕСЯЦ)
	|		И Партии.Организация = РаспределениеНДС.Организация
	|		И РаспределениеНДС.Проведен
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Партии.Месяц 		КАК Месяц,
	|	Партии.Организация	КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РаспределениеНДС) КАК Операция
	|ИЗ
	|	ВТПартии КАК Партии
	|";
	
	РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписиРегистраПоДаннымВыборки(Запрос.Выполнить().Выбрать());
	//-- Локализация
	
КонецПроцедуры

// Выполняет формирование заданий по учету НДС по результатам изменения партионных регистров.
// 
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер, который содержит временную таблицу ВтИзменениеПартий, она должна содержать поля: 
//	   * Период - Дата - Период движения партии.
//	   * Организация - СправочникСсылка.Организации - Организация учета партии.
//	   * СчетФактура - ОпределяемыйТип.СчетФактура - Документ приобретения (документ учета входящего НДС).
//	   * ВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Исходный вид деятельности раздельного учета НДС
//	   * КорВидДеятельностиНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - Новый вид деятельности раздельного учета НДС 
//
Процедура СформироватьЗаданияДляФормированияКнигиПокупокПродаж(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Партии.Период, МЕСЯЦ)     КАК Месяц,
	|	Партии.Организация                      КАК Организация,
	|	Партии.СчетФактура                      КАК СчетФактура
	|ИЗ
	|	ВтИзменениеПартий КАК Партии
	|ГДЕ
	|	Партии.КорВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	И ТИПЗНАЧЕНИЯ(Партии.СчетФактура) В (&ТипыСчетовФактур)
	|	И (Партии.КорВидДеятельностиНДС <> Партии.ВидДеятельностиНДС
	|		ИЛИ Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|		ИЛИ Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)
	|		ИЛИ Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров)
	|		ИЛИ Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	|		ИЛИ Партии.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос))
	|";
	
	ТипыСчетовФактур = Метаданные.ОпределяемыеТипы.СчетФактура.Тип.Типы();
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ТипыСчетовФактур, Метаданные.ОпределяемыеТипы.ОснованиеДвиженийПоНДС.Тип.Типы(), Истина);
	Запрос.УстановитьПараметр("ТипыСчетовФактур", ТипыСчетовФактур);
	РегистрыСведений.ЗаданияКФормированиюДвиженийПоНДС.СоздатьЗаписиРегистраПоДаннымВыборки(Запрос.Выполнить().Выбрать());
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьВУчетеНДСИзменениеРасчетовСПоставщиками
Процедура ОтразитьВУчетеНДСИзменениеРасчетовСПоставщиками(ТаблицаИзменений) Экспорт
	
	//++ Локализация
	Документы.СчетФактураНалоговыйАгент.СформироватьДвиженияНДС(ТаблицаИзменений);
	УчетНДСРФ.СформироватьЗаданияПоПриобретениюЭлектронныхУслуг(ТаблицаИзменений);
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьВУчетеНДСИзменениеРасчетовСКлиентами
Процедура ОтразитьВУчетеНДСИзменениеРасчетовСКлиентами(ТаблицаИзменений) Экспорт
	
	//++ Локализация
	Возврат;
	//-- Локализация
	
КонецПроцедуры

// см. УчетНДСУП.ОтразитьВУчетеНДСИзменениеРасчетовСПоставщиками
Процедура ОтразитьВУчетеНДСИзменениеРасчетовПоФинансовымИнструментам(ТаблицаИзменений) Экспорт
	
	//++ Локализация
	Документы.СчетФактураНалоговыйАгент.СформироватьДвиженияНДС(ТаблицаИзменений);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПодключениеКБСП

// Параметры:
//  Объекты - Массив из ОбъектМетаданных.
//
Процедура ОпределитьОбъектыСКомандамиОтчетов(Объекты) Экспорт
	
	//++ Локализация
	Объекты.Добавить(Метаданные.Документы.БлокировкаВычетаНДС);
	Объекты.Добавить(Метаданные.Документы.ЗаписьКнигиПокупок);
	Объекты.Добавить(Метаданные.Документы.ЗаписьКнигиПродаж);
	Объекты.Добавить(Метаданные.Документы.КорректировкаВидаДеятельностиНДС);
	Объекты.Добавить(Метаданные.Документы.КорректировкаНалогообложенияНДСПартийТоваров);
	Объекты.Добавить(Метаданные.Документы.СчетФактураВыданный);
	Объекты.Добавить(Метаданные.Документы.СчетФактураКомиссионеру);
	Объекты.Добавить(Метаданные.Документы.СчетФактураКомитента);
	Объекты.Добавить(Метаданные.Документы.СчетФактураНалоговыйАгент);
	Объекты.Добавить(Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученный);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученныйНалоговыйАгент);
	Объекты.Добавить(Метаданные.Документы.ИнойДокументПодтвержденияНДС);
	Объекты.Добавить(Метаданные.Документы.СводнаяСправкаНДС);
	Объекты.Добавить(Метаданные.Обработки.ЖурналДокументовНДС);
	//-- Локализация

КонецПроцедуры

// Параметры:
//  Настройки - см. УчетНДСУП.НастроитьВариантыОтчетов
//
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	
	//++ Локализация
	
	Отчеты.КнигаПокупок.НастроитьВариантыОтчета(Настройки);
	Отчеты.КнигаПродаж.НастроитьВариантыОтчета(Настройки);
	Отчеты.НаличиеСчетовФактур.НастроитьВариантыОтчета(Настройки);
	Отчеты.РеестрСчетовФактурДляСверки.НастроитьВариантыОтчета(Настройки);
	Отчеты.ЖурналУчетаСчетовФактур.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализРаспределенияНДС.НастроитьВариантыОтчета(Настройки);
	Отчеты.ОборотыПоНДС.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализПричинБлокировкиВычетаНДС.НастроитьВариантыОтчета(Настройки);
	
	
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  ИсточникиДанных - см. УчетНДСУП.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения
//
Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт

	//++ Локализация
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, Метаданные.Документы.БлокировкаВычетаНДС.ПолноеИмя(), "Дата",
		"РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, Метаданные.Документы.ЗаписьКнигиПокупок.ПолноеИмя(), "Дата",
		"РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, Метаданные.Документы.ЗаписьКнигиПродаж.ПолноеИмя(), "Дата",
		"РегламентныеОперации", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.КорректировкаВидаДеятельностиНДС.ПолноеИмя(), "Дата", "РегламентныеОперации",
		"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.КорректировкаНалогообложенияНДСПартийТоваров.ПолноеИмя(), "Дата", "РегламентныеОперации",
		"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, Метаданные.Документы.СчетФактураВыданный.ПолноеИмя(), "Дата",
		"Продажи", "Организация");

	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, Метаданные.Документы.СчетФактураКомиссионеру.ПолноеИмя(),
		"Дата", "Продажи", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, Метаданные.Документы.СчетФактураКомитента.ПолноеИмя(), "Дата",
		"Продажи", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, Метаданные.Документы.СчетФактураНалоговыйАгент.ПолноеИмя(),
		"Дата", "Закупки", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0.ПолноеИмя(), "Дата", "Продажи", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, Метаданные.Документы.СчетФактураПолученный.ПолноеИмя(),
		"Дата", "Закупки", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
		Метаданные.Документы.СчетФактураПолученныйНалоговыйАгент.ПолноеИмя(), "Дата", "Закупки", "Организация");

	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, Метаданные.Документы.ИнойДокументПодтвержденияНДС.ПолноеИмя(),
		"Дата", "Закупки", "Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных, Метаданные.Документы.СводнаяСправкаНДС.ПолноеИмя(), "Дата",
		"РегламентныеОперации", "Организация");
		

	//-- Локализация

КонецПроцедуры

// Параметры:
//  НастройкиФормы - см. УчетНДСУП.ПриОпределенииКомандПодключенныхКОбъекту
//  Источники - см. УчетНДСУП.ПриОпределенииКомандПодключенныхКОбъекту
//  ПодключенныеОтчетыИОбработки - см. УчетНДСУП.ПриОпределенииКомандПодключенныхКОбъекту
//  Команды - см. УчетНДСУП.ПриОпределенииКомандПодключенныхКОбъекту
//
Процедура ПриОпределенииКомандПодключенныхКОбъекту(НастройкиФормы, Источники, ПодключенныеОтчетыИОбработки, Команды) Экспорт
	
	//++ Локализация
	Если НастройкиФормы.ИмяФормы = "Обработка.ЖурналДокументовНДС.Форма.СписокДокументов" Тогда
		Обработки.ЖурналДокументовНДС.ПриОпределенииКомандПодключенныхКОбъекту(Команды);
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  Объекты - Массив Из ОбъектМетаданных
//
Процедура ПриОпределенииОбъектовСКомандамиСозданияНаОсновании(Объекты) Экспорт
	
	//++ Локализация
	Объекты.Добавить(Метаданные.Документы.БлокировкаВычетаНДС);
	Объекты.Добавить(Метаданные.Документы.ЗаписьКнигиПокупок);
	Объекты.Добавить(Метаданные.Документы.ЗаписьКнигиПродаж);
	Объекты.Добавить(Метаданные.Документы.КорректировкаВидаДеятельностиНДС);
	Объекты.Добавить(Метаданные.Документы.КорректировкаНалогообложенияНДСПартийТоваров);
	Объекты.Добавить(Метаданные.Документы.СчетФактураВыданный);
	Объекты.Добавить(Метаданные.Документы.СчетФактураКомиссионеру);
	Объекты.Добавить(Метаданные.Документы.СчетФактураКомитента);
	Объекты.Добавить(Метаданные.Документы.СчетФактураНалоговыйАгент);
	Объекты.Добавить(Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученный);
	Объекты.Добавить(Метаданные.Документы.СчетФактураПолученныйНалоговыйАгент);

	//-- Локализация
	
КонецПроцедуры

// См. УчетНДСУП.ПриОпределенииОбъектовСКомандамиПечати
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт

	//++ Локализация
	СписокОбъектов.Добавить(Документы.БлокировкаВычетаНДС);
	СписокОбъектов.Добавить(Документы.ЗаписьКнигиПокупок);
	СписокОбъектов.Добавить(Документы.ЗаписьКнигиПродаж);
	СписокОбъектов.Добавить(Документы.СчетФактураВыданный);
	СписокОбъектов.Добавить(Документы.СчетФактураКомиссионеру);
	СписокОбъектов.Добавить(Документы.СчетФактураНалоговыйАгент);
	СписокОбъектов.Добавить(Документы.СчетФактураНаНеподтвержденнуюРеализацию0);
	СписокОбъектов.Добавить(Обработки.ЖурналДокументовНДС);
	//-- Локализация
	
КонецПроцедуры

// См. УчетНДСУП.ПередДобавлениемКомандПечати
Процедура ПередДобавлениемКомандПечати(ИмяФормы, КомандыПечати, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	Если ИмяФормы = "Документ.СчетФактураВыданный.Форма.ФормаОформленияСчетовФактур" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
		
		// Счет-фактура
		КомандаПечати = КоллекцияКомандПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "СчетФактура";
		КомандаПечати.Представление = НСтр("ru = 'Счет-фактура'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Ложь);
		КомандаПечати.Порядок = 1;
		
		Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
			// Счет-фактура (в валюте)
			КомандаПечати = КоллекцияКомандПечати.Добавить();
			КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
			КомандаПечати.Идентификатор = "СчетФактураВВалюте";
			КомандаПечати.Представление = НСтр("ru = 'Счет-фактура (в валюте)'");
			КомандаПечати.ФункциональныеОпции = "ИспользоватьНесколькоВалют";
			КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
			КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВВалюте", Истина);
			КомандаПечати.Порядок = 2;
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КоллекцияКомандПечати, КомандыПечати);
		
	ИначеЕсли ИмяФормы = "Документ.СчетФактураНалоговыйАгент.Форма.ФормаРабочееМесто" Тогда 
		
		СтандартнаяОбработка = Ложь; 
		КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати(); 
		Документы.СчетФактураНалоговыйАгент.ДобавитьКомандыПечати(КоллекцияКомандПечати); 
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КоллекцияКомандПечати, "Документ.СчетФактураНалоговыйАгент"); 
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КоллекцияКомандПечати, КомандыПечати);
		
	ИначеЕсли ИмяФормы = "РегистрСведений.НДССостояниеРеализации0.Форма.ФормаРабочееМесто" Тогда 
		
		СтандартнаяОбработка = Ложь; 
		КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати(); 
		Документы.СчетФактураНаНеподтвержденнуюРеализацию0.ДобавитьКомандыПечати(КоллекцияКомандПечати); 
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КоллекцияКомандПечати, "Документ.СчетФактураНаНеподтвержденнуюРеализацию0"); 
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КоллекцияКомандПечати, КомандыПечати);
	
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  Списки - см. УчетНДСУП.ПриЗаполненииСписковСОграничениемДоступа
//
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	//++ Локализация
	Списки.Вставить(Метаданные.Документы.БлокировкаВычетаНДС, Истина);
	Списки.Вставить(Метаданные.Документы.ЗаписьКнигиПокупок, Истина);
	Списки.Вставить(Метаданные.Документы.ЗаписьКнигиПродаж, Истина);
	Списки.Вставить(Метаданные.Документы.КорректировкаВидаДеятельностиНДС, Истина);
	Списки.Вставить(Метаданные.Документы.КорректировкаНалогообложенияНДСПартийТоваров, Истина);
	Списки.Вставить(Метаданные.Документы.СписаниеНДСНаРасходы, Истина);
	Списки.Вставить(Метаданные.Документы.СводнаяСправкаНДС, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураВыданный, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураКомиссионеру, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураКомитента, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураНалоговыйАгент, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураНаНеподтвержденнуюРеализацию0, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураПолученный, Истина);
	Списки.Вставить(Метаданные.Документы.СчетФактураПолученныйНалоговыйАгент, Истина);
	Списки.Вставить(Метаданные.Документы.ИнойДокументПодтвержденияНДС, Истина);

	Списки.Вставить(Метаданные.ЖурналыДокументов.КорректировкиНДС, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ДанныеОснованийСчетовФактур, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.НДССостояниеРеализации0, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.ПодтверждениеОплатыНДСВБюджет, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СчетаФактурыКомиссионерамКОформлению, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СчетаФактурыКомитентовКРегистрации, Истина);
	Списки.Вставить(Метаданные.РегистрыСведений.СчетаФактурыПоставщиковКПеревыставлениюКомитентам, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураВыданныйПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураКомиссионеруПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураКомитентаПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураПолученныйПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.СчетФактураПолученныйНалоговыйАгентПрисоединенныеФайлы, Истина);
	Списки.Вставить(Метаданные.Справочники.ИнойДокументПодтвержденияНДСПрисоединенныеФайлы, Истина);
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область ОписаниеДокументовДляЖурналов

// Параметры:
//  ХозяйственныеОперацииИДокументы - Массив из ТаблицаЗначений
//
Процедура ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовЗакупки(ХозяйственныеОперацииИДокументы) Экспорт
	
	//++ Локализация
	
	// СчетФактураПолученный
	СтрокаСчетФактураПолученный = ХозяйственныеОперацииИДокументы.Добавить();
	Строка = СтрокаСчетФактураПолученный;
	Строка.КлючНазначенияИспользования 	= "СчетаФактурыПолученные";
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента 				= Тип("ДокументСсылка.СчетФактураПолученный");
	Строка.ПолноеИмяДокумента			= "Документ.СчетФактураПолученный";
	Строка.ЗаголовокРабочегоМеста = НСтр("ru = 'Документы закупки (счета-фактуры)'");
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВозвратНедопоставленногоТовара;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.НачислениеПоДоговоруАренды;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ОплатаПоставщику;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ОтчетКомиссионера;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ОтчетКомитенту;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями;
	
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию;
	
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки;
	
	Строка = ХозяйственныеОперацииИДокументы.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураПолученный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров;
	
	// СчетФактураПолученныйНалоговыйАгент
	
	СтрокаСчетФактураПолученный = ХозяйственныеОперацииИДокументы.Добавить();
	Строка = СтрокаСчетФактураПолученный;
	Строка.КлючНазначенияИспользования 	= "СчетаФактурыПолученныеНалоговыйАгент";
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.НачислениеНДСНалоговымАгентом;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента 				= Тип("ДокументСсылка.СчетФактураПолученныйНалоговыйАгент");
	Строка.ПолноеИмяДокумента			= "Документ.СчетФактураПолученныйНалоговыйАгент";
	Строка.ЗаголовокРабочегоМеста = НСтр("ru = 'Документы закупки товаров с обратным обложением НДС (счета-фактуры)'");
	
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  ТЗХозОперацииИТипыДокументов - Массив из ТаблицаЗначений
//
Процедура ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовПродажи(ТЗХозОперацииИТипыДокументов) Экспорт
	
	//++ Локализация
	
	// СчетФактураВыданный
	
	СтрокаСчетФактураВыданный = ТЗХозОперацииИТипыДокументов.Добавить();
	Строка = СтрокаСчетФактураВыданный;
	Строка.КлючНазначенияИспользования 	= "СчетаФактурыВыданные";
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.ТипДокумента 				= Тип("ДокументСсылка.СчетФактураВыданный");
	Строка.ПолноеИмяДокумента			= "Документ.СчетФактураВыданный";
	Строка.МенеджерРасчетаГиперссылкиКОформлению = "Документ.СчетФактураВыданный";
	Строка.ЗаголовокРабочегоМеста = НСтр("ru = 'Документы продажи (счета-фактуры)'");
	
	Строка = ТЗХозОперацииИТипыДокументов.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураВыданный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет;
	
	Строка = ТЗХозОперацииИТипыДокументов.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураВыданный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности;
	
	Строка = ТЗХозОперацииИТипыДокументов.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураВыданный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВыкупТоваровХранителем;
	
	Строка = ТЗХозОперацииИТипыДокументов.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураВыданный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.РеализацияЧерезКомиссионера;
	
	Строка = ТЗХозОперацииИТипыДокументов.Добавить();
	ЗаполнитьЗначенияСвойств(Строка,СтрокаСчетФактураВыданный);
	Строка.ХозяйственнаяОперация 		= Перечисления.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионера;
	
	//-- Локализация
	
КонецПроцедуры

//Параметры:
// ТЗХозОперацииИТипыДокументов - см. ОбщегоНазначенияУТ.НоваяТаблицаХозяйственныеОперацииИДокументы
//
Процедура ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовПереработки(ТЗХозОперацииИТипыДокументов) Экспорт
	
	//++ Локализация
	
	//++ Устарело_Переработка24
	
	
	//-- Устарело_Переработка24
	
	//-- Локализация
	
КонецПроцедуры

//Параметры:
// ТЗХозОперацииИТипыДокументов - см. ОбщегоНазначенияУТ.НоваяТаблицаХозяйственныеОперацииИДокументы
//
Процедура ДополнитьОписаниеОперацийИТиповДокументовДляЖурналаДокументовПередачиВПереработку2_5(ТЗХозОперацииИТипыДокументов) Экспорт
	
	//++ Локализация
	Строка = ТЗХозОперацииИТипыДокументов.Добавить();
	Строка.ХозяйственнаяОперация		= Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчика2_5;
	Строка.ТипДокумента					= Тип("ДокументСсылка.СчетФактураПолученный");
	Строка.ПолноеИмяДокумента			= Метаданные.Документы.СчетФактураПолученный.ПолноеИмя();
	Строка.ДобавитьКнопкуСоздать		= Истина;
	Строка.КлючНазначенияИспользования	= "ДокументыПередачиВПереработку";
	Строка.ЗаголовокРабочегоМеста		= НСтр("ru = 'Документы передачи в переработку (счета-фактуры)'");
	Строка.Порядок						= 6;
	//-- Локализация
	
КонецПроцедуры


#КонецОбласти

#Область РегламентнаяОперацияПоНДС

// Параметры:
//  КонецПериода - см. УчетНДСУП.ВыполнитьФормированиеДвиженийПоНДС
//  МассивОрганизаций - см. УчетНДСУП.ВыполнитьФормированиеДвиженийПоНДС
//
Процедура ВыполнитьФормированиеДвиженийПоНДС(КонецПериода, МассивОрганизаций) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ОбновитьСостояниеТребованийОформленияСчетовФактур(МассивОрганизаций);
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  СчетаФактуры - см. УчетНДСУП.ОтразитьДокументыВУчетеНДС
//  МассивСсылок - см. УчетНДСУП.ОтразитьДокументыВУчетеНДС
//
Процедура ДополнитьСчетаФактурыКОтражениюВУчетеНДС(СчетаФактуры, МассивСсылок) Экспорт
	
	//++ Локализация
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснования.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураПолученныйАванс.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученныйАванс КАК СчетФактураПолученныйАванс
	|ГДЕ
	|	СчетФактураПолученныйАванс.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураВыданныйАванс.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураВыданныйАванс КАК СчетФактураВыданныйАванс
	|ГДЕ
	|	СчетФактураВыданныйАванс.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураПолученныйНалоговыйАгент.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент КАК СчетФактураПолученныйНалоговыйАгент
	|ГДЕ
	|	СчетФактураПолученныйНалоговыйАгент.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Основания.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.СчетФактураПолученный.ДокументыОснования КАК Основания
	|	ПО
	|		СчетФактураПолученный.СчетФактураОснование = Основания.Ссылка
	|ГДЕ
	|	СчетФактураПолученный.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыОснования.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК ДокументыОснования
	|ГДЕ
	|	ДокументыОснования.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаявлениеОВвозеТоваров.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.ЗаявлениеОВвозеТоваров КАК ЗаявлениеОВвозеТоваров
	|ГДЕ
	|	ЗаявлениеОВвозеТоваров.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ТаможеннаяДекларацияИмпорт.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК ТаможеннаяДекларацияИмпорт
	|ГДЕ
	|	ТаможеннаяДекларацияИмпорт.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ИнойДокументПодтвержденияНДС.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.ИнойДокументПодтвержденияНДС КАК ИнойДокументПодтвержденияНДС
	|ГДЕ
	|	ИнойДокументПодтвержденияНДС.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СчетФактураНалоговыйАгент.Ссылка КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураНалоговыйАгент КАК СчетФактураНалоговыйАгент
	|ГДЕ
	|	СчетФактураНалоговыйАгент.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаПриобретения.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК ДокументыОснования
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
	|	ПО
	|		ДокументыОснования.ДокументОснование = КорректировкаПриобретения.Ссылка
	|ГДЕ
	|	ДокументыОснования.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КорректировкаПриобретения.ДокументОснование КАК СчетФактура
	|ИЗ
	|	Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
	|ГДЕ
	|	КорректировкаПриобретения.Ссылка В (&МассивСсылок)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПартииНДСКРаспределению.ДокументПоступленияРасходов КАК СчетФактура
	|ИЗ
	|	Документ.РаспределениеНДС КАК РаспределениеНДС
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПартииНДСКРаспределению КАК ПартииНДСКРаспределению
	|	ПО
	|		РаспределениеНДС.Ссылка = ПартииНДСКРаспределению.Регистратор
	|ГДЕ
	|	РаспределениеНДС.Ссылка В (&МассивСсылок)
	|";
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СчетаФактуры, РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("СчетФактура"));
	
	//-- Локализация
	
КонецПроцедуры

// Параметры:
//  ВходящиеДанные - Массив из ОбъектМетаданных
//
Процедура ДополнитьВходящиеДанныхДляВыполненияРегламентнойОперации(ВходящиеДанные) Экспорт
	
	//++ Локализация
	ВходящиеДанные.Добавить(Метаданные.РегистрыНакопления.НДСЗаписиКнигиПокупок);
	ВходящиеДанные.Добавить(Метаданные.РегистрыНакопления.НДСЗаписиКнигиПродаж);
	
	ВходящиеДанные.Добавить(Метаданные.РегистрыСведений.ПодтверждениеОплатыНДСВБюджет);

	ВходящиеДанные.Добавить(Метаданные.Документы.СчетФактураВыданный);
	ВходящиеДанные.Добавить(Метаданные.Документы.СчетФактураНалоговыйАгент);
	ВходящиеДанные.Добавить(Метаданные.Документы.СчетФактураПолученный);
	ВходящиеДанные.Добавить(Метаданные.Документы.СчетФактураПолученныйНалоговыйАгент);
	ВходящиеДанные.Добавить(Метаданные.Документы.ЗаявлениеОВвозеТоваров);
	//-- Локализация
	
КонецПроцедуры

Процедура ЗафиксироватьРезультат(ПараметрыРасчета) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ЗафиксироватьРезультат(ПараметрыРасчета);
	//-- Локализация
	
КонецПроцедуры

Процедура ПолучитьПартии(ПараметрыРасчета) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ПолучитьПартии(ПараметрыРасчета);
	//-- Локализация
	
КонецПроцедуры

Процедура ПолучитьСчетаФактурыДокументы(ПараметрыРасчета) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ПолучитьСчетаФактурыДокументы(ПараметрыРасчета);
	//-- Локализация
	
КонецПроцедуры

Процедура ПолучитьИсправленныеСчетаФактурыДокументы(ПараметрыРасчета) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ПолучитьИсправленныеСчетаФактурыДокументы(ПараметрыРасчета);
	//-- Локализация
	
КонецПроцедуры

Процедура ПолучитьКорректировочныеСчетаФактурыДокументы(ПараметрыРасчета) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ПолучитьКорректировочныеСчетаФактурыДокументы(ПараметрыРасчета);
	//-- Локализация
	
КонецПроцедуры

Процедура ПолучитьРазрезыВычетаНДС(ПараметрыРасчета) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ПолучитьРазрезыВычетаНДС(ПараметрыРасчета);
	//-- Локализация
	
КонецПроцедуры

Процедура ПолучитьБлокировкиНДС(ПараметрыРасчета) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ПолучитьБлокировкиНДС(ПараметрыРасчета);
	//-- Локализация
	
КонецПроцедуры

Процедура ПолучитьПовторноПринятыйКВычетуНДС(ПараметрыРасчета) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ПолучитьПовторноПринятыйКВычетуНДС(ПараметрыРасчета);
	//-- Локализация
	
КонецПроцедуры

Процедура ВыполнитьРасчет(ПараметрыРасчета) Экспорт
	
	//++ Локализация
	УчетНДСРФ.ВыполнитьРасчет(ПараметрыРасчета);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

// Параметры:
//  ТаблицыПроведения - Массив из Строка
Процедура ДополнитьТаблицыПроведения(ТаблицыПроведения) Экспорт
	
	//++ Локализация
	ТаблицыПроведения.Добавить("ЗаполнениеТоваровСФВыданный");
	ТаблицыПроведения.Добавить("ЗаполнениеСуммСФПолученный");
	ТаблицыПроведения.Добавить("ЗаполнениеШапкиСФПолученный");
	ТаблицыПроведения.Добавить("ЗаполнениеТоваровСФВыданныйПеревыставление");
	//-- Локализация
	
КонецПроцедуры

//Параметры:
// РегистрыНДС - см. УчетНДСУП.РегистрыУчетаНДС
Процедура ДополнитьРегистрыУчетаНДС(РегистрыНДС) Экспорт
	
	//++ Локализация
	РегистрыНДС.Вставить(Метаданные.РегистрыНакопления.НДСЗаписиКнигиПродаж.Имя,      РегистрыНакопления.НДСЗаписиКнигиПродаж.СоздатьНаборЗаписей());
	РегистрыНДС.Вставить(Метаданные.РегистрыНакопления.НДСЗаписиКнигиПокупок.Имя,     РегистрыНакопления.НДСЗаписиКнигиПокупок.СоздатьНаборЗаписей());
	РегистрыНДС.Вставить(Метаданные.РегистрыСведений.ЖурналУчетаСчетовФактур.Имя,     РегистрыСведений.ЖурналУчетаСчетовФактур.СоздатьНаборЗаписей());
	РегистрыНДС.Вставить(Метаданные.РегистрыСведений.ДанныеОснованийСчетовФактур.Имя, РегистрыСведений.ДанныеОснованийСчетовФактур.СоздатьНаборЗаписей());
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация 


//-- Локализация

#КонецОбласти
