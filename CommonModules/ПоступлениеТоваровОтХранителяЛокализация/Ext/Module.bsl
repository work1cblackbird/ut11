
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	КомиссионерВедетУчетПоРНПТ = Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера
									И Справочники.СоглашенияСКлиентами.КомиссионерВедетУчетПоРНПТ(Объект.Соглашение);
	
	УчетПрослеживаемыхТоваровЛокализация.ПроверитьЗаполнениеНомераГТДВДокументахКомиссионера(Объект,
																							Отказ,
																							КомиссионерВедетУчетПоРНПТ);
	
	Если Не Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера
		Или КомиссионерВедетУчетПоРНПТ Тогда
		
		УчетПрослеживаемыхТоваровЛокализация.ПроверитьКорректностьНастроекТоваровРНПТ(Объект, Объект.Товары, Объект.Дата);
		УчетПрослеживаемыхТоваровЛокализация.ПроверитьЗаполнениеКоличестваПоРНПТ(Объект, Отказ, Неопределено);
		УчетПрослеживаемыхТоваровЛокализация.ПроверитьДанныеПрослеживаемостиНомеровГТД(Объект, Объект.Товары, Объект.Дата);
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	//++ Локализация

	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ОформлениеСДИЗЗЕРНО") Тогда
		
		ИнтеграцияЗЕРНОУТ.ЗаполнитьПоступлениеТоваровОтХранителяНаОснованииОформленияСДИЗЗЕРНО(
			Объект, 
			ДанныеЗаполнения);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	
КонецПроцедуры

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//++ Локализация
	
	// Приходный ордер (М-4)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "М4";
	КомандаПечати.Представление = НСтр("ru = 'Приходный ордер (М-4)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// МХ-3
	СписокХО = Новый Массив();
	СписокХО.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОтХранителя);
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "МХ3";
	КомандаПечати.Представление = НСтр("ru = 'Акт о возврате ТМЦ, сданных на хранение (МХ-3)'");
	КомандаПечати.Порядок = 41;
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	УправлениеПечатью.ДобавитьУсловиеВидимостиКоманды(
		КомандаПечати,
		"ХозяйственнаяОперация",
		СписокХО,
		ВидСравнения.ВСписке);
	
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

//++ Локализация

// Возвращает данные для формирования печатной формы МХ - 3.
//
// Параметры:
//	ПараметрыПечати	- Структура -дополнительные настройки печати.
//	МассивОбъектов	- Массив из ДокументСсылка.ПоступлениеТоваровОтХранителя - коллекция значений ссылок на документы,
//																			по которым необходимо получить данные.
//
// Возвращаемое значение:
//	Структура - коллекция данных, используемых для печати, содержащая следующие следующие свойства:
//		* РезультатПоШапке			- РезультатЗапроса - данные шапки документа.
//		* РезультатПоСкладам		- РезультатЗапроса - данные о складе ответственного хранения.
//		* РезультатПоТабличнойЧасти	- РезультатЗапроса - данные табличной части документа.
//		* РезультатПоОшибкам		- Неорпеделено - данные об ошибках, возникающих при печати документа.
//
Функция ПолучитьДанныеДляПечатнойФормыМХ3(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	Документ.Ссылка                          КАК Ссылка,
	|	Документ.Номер                           КАК Номер,
	|	Документ.Дата                            КАК Дата,
	|	Документ.Дата                            КАК ДатаДокумента,
	|	Документ.Дата                            КАК ДатаПолученияСебестоимости,
	|	Документ.Организация                     КАК Организация,
	|	Документ.Склад                           КАК Склад,
	|	Склады.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены                    КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены         КАК ВалютаЦены,
	|	Документ.Контрагент                      КАК Поклажедержатель,
	|	Договоры.Номер                           КАК ДоговорНомер,
	|	Документ.Дата                            КАК ДоговорДата
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	Документ.ПоступлениеТоваровОтХранителя КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|			И (Документ.Организация = РасчетСебестоимостиТоваровОрганизации.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО (Документ.Склад = Склады.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Договоры
	|		ПО (Документ.Договор = Договоры.Ссылка)
	|ГДЕ
	|	Документ.Ссылка В(&МассивДокументов)
	|	И Документ.Проведен
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтШапка.Ссылка                     КАК Ссылка,
	|	ВтШапка.Номер                      КАК Номер,
	|	ВтШапка.Дата                       КАК Дата,
	|	ВтШапка.Дата                       КАК ДатаДокумента,
	|	ВтШапка.ДатаПолученияСебестоимости КАК ДатаПолученияСебестоимости,
	|	ВтШапка.Организация                КАК Организация,
	|	ВтШапка.ДоговорДата                КАК ДоговорДата,
	|	ВтШапка.ДоговорНомер               КАК ДоговорНомер
	|ИЗ
	|	ВтШапка КАК ВтШапка
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	ВтШапка.Ссылка           КАК Ссылка,
	|	ВтШапка.Поклажедержатель КАК Поклажедержатель,
	|	ВтШапка.Склад            КАК Склад,
	|	ЛОЖЬ                     КАК ПредварительныйРасчет,
	|	НЕОПРЕДЕЛЕНО             КАК ИсточникИнформацииОЦенахДляПечати,
	|	""""                     КАК ПредставлениеСклада,
	|	""""                     КАК ПредставлениеПодразделения,
	|	""""                     КАК ОсобыеОтметки,
	|	""""                     КАК УсловияХранения,
	|	Склады.ТекущаяДолжностьОтветственного КАК ДолжностьМОЛ,
	|	Склады.ТекущийОтветственный КАК МОЛ
	|ИЗ
	|	ВтШапка КАК ВтШапка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ВтШапка.Склад = Склады.Ссылка
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	Товары.Ссылка                             КАК Ссылка,
	|	ВтШапка.Склад                             КАК Склад,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА Товары.Номенклатура.Артикул
	|		ИНАЧЕ Товары.Номенклатура.Код
	|	КОНЕЦ                                     КАК НоменклатураКод,
	|	Товары.Номенклатура                       КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное    КАК ПредставлениеНоменклатуры,
	|	Товары.Характеристика.НаименованиеПолное  КАК ПредставлениеХарактеристики,
	|	&ТекстЗапросаКодЕдиницыИзмерения          КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок                 КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ Товары.КоличествоУпаковок = 0
	|			И СуммыДокументовВВалютахУчета.Регистратор ЕСТЬ НЕ NULL
	|			ТОГДА СуммыДокументовВВалютахУчета.СуммаБезНДСРегл / Товары.КоличествоУпаковок
	|		ИНАЧЕ Товары.Цена
	|	КОНЕЦ          КАК Цена,
	|	ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл, Товары.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ПоступлениеТоваровОтХранителя.Товары КАК Товары
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК ВтШапка
	|	ПО Товары.Ссылка = ВтШапка.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|	ПО Товары.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
	|	И Товары.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
	|	И СуммыДокументовВВалютахУчета.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	Товары.НомерСтроки,
	|	Номенклатура,
	|	ПредставлениеХарактеристики,
	|	ВидУпаковки
	|
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад
	|;";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "Товары.Упаковка", "Товары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "Товары.Упаковка", "Товары.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",          МассивРезультатов[1]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоСкладам",        МассивРезультатов[2]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", МассивРезультатов[3]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоОшибкам",        Неопределено);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции


// Функция получает данные для формирования печатной формы  М - 4
//
// Параметры:
//  ПараметрыПечати - Структура - структура дополнительных параметров печати,
//  МассивОбъектов  - Массив    - массив ссылок на объекты которые нужно распечатать.
//
// Возвращаемое значение:
//  Структура - структура с данными для печати формы М - 4, содержит ключи:
//   * РезультатПоШапке          - РезультатЗапроса -
//   * РезультатПоТабличнойЧасти - РезультатЗапроса -
//
Функция ПолучитьДанныеДляПечатнойФормыМ4(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокументов.ВозвратПереданнойМногооборотнойТары КАК ВернутьМногооборотнуюТару,
	|	ДанныеДокументов.Склад	КАК Склад,
	|	ДанныеДокументов.Ссылка	КАК Ссылка,
	|	ДанныеДокументов.Дата	КАК Дата,
	|	ДанныеДокументов.Валюта	КАК Валюта
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПоступлениеТоваровОтХранителя КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|ВЫБРАТЬ
	|	ПоступлениеТоваровОтХранителя.Ссылка                         КАК Ссылка,
	|	ПоступлениеТоваровОтХранителя.Номер                          КАК Номер,
	|	ПоступлениеТоваровОтХранителя.Дата                           КАК Дата,
	|	ПоступлениеТоваровОтХранителя.Дата                           КАК ДатаСоставления,
	|	ПоступлениеТоваровОтХранителя.НомерВходящегоДокумента        КАК НомерСопроводительногоДокумента,
	|	ПоступлениеТоваровОтХранителя.Контрагент                     КАК Поставщик,
	|	ПоступлениеТоваровОтХранителя.Организация                    КАК Организация,
	|	ПоступлениеТоваровОтХранителя.Организация.Префикс            КАК Префикс,
	|	ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка) КАК БанковскийСчетОрганизации,
	|	ПоступлениеТоваровОтХранителя.Организация                    КАК Грузоотправитель,
	|	ПоступлениеТоваровОтХранителя.Подразделение                  КАК Подразделение,
	|	ПоступлениеТоваровОтХранителя.Подразделение.Наименование     КАК ПредставлениеПодразделения,
	|	ПоступлениеТоваровОтХранителя.Валюта                         КАК Валюта,
	|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)             КАК МОЛ,
	|	""""                                                         КАК ДолжностьМОЛ
	|ИЗ
	|	Документ.ПоступлениеТоваровОтХранителя КАК ПоступлениеТоваровОтХранителя
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов
	|	ПО ТаблицаДанныхДокументов.Ссылка = ПоступлениеТоваровОтХранителя.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                            КАК Ссылка,
	|	ТаблицаДанныхДокументов.Склад                   КАК Склад,
	|	ТаблицаДанныхДокументов.Склад.Наименование      КАК СкладНаименование,
	|	ТаблицаТовары.Номенклатура                      КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное   КАК ТоварНаименование,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА ТаблицаТовары.Номенклатура.Артикул
	|		ИНАЧЕ ТаблицаТовары.Номенклатура.Код
	|	КОНЕЦ                                           КАК ТоварКод,
	|	&ТекстЗапросаЕдиницаИзмеренияПредставление      КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаЕдиницаИзмеренияКод                КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТовары.Упаковка
	|	КОНЕЦ                                           КАК Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок                КАК Количество,
	|	ТаблицаТовары.КоличествоУпаковок                КАК КоличествоПринято,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаТовары.КоличествоУпаковок = 0
	|			И СуммыДокументовВВалютахУчета.Регистратор ЕСТЬ НЕ NULL
	|			ТОГДА СуммыДокументовВВалютахУчета.СуммаБезНДСРегл / ТаблицаТовары.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТовары.Цена
	|	КОНЕЦ                                           КАК Цена,
	|	ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл, ТаблицаТовары.Сумма) КАК СуммаБезНДС,
	|	ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл, ТаблицаТовары.Сумма) КАК СуммаСНДС,
	|	0                                               КАК СуммаНДС,
	|	ЛОЖЬ                                            КАК ЭтоВозвратнаяТара
	|ИЗ
	|	Документ.ПоступлениеТоваровОтХранителя.Товары КАК ТаблицаТовары
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов
	|	ПО ТаблицаДанныхДокументов.Ссылка = ТаблицаТовары.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|	ПО ТаблицаТовары.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
	|	И ТаблицаТовары.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
	|	И СуммыДокументовВВалютахУчета.Активность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаТовары.НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад
	|";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	Запрос.Текст =
		СтрЗаменить(
			Запрос.Текст,
			"&ТекстЗапросаЕдиницаИзмеренияКод",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
				"Код",
				"ТаблицаТовары.Упаковка",
				"ТаблицаТовары.Номенклатура"));
		
	Запрос.Текст =
		СтрЗаменить(
			Запрос.Текст,
			"&ТекстЗапросаЕдиницаИзмеренияПредставление",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
				"Представление",
				"ТаблицаТовары.Упаковка",
				"ТаблицаТовары.Номенклатура"));
		
	Запрос.Текст =
		СтрЗаменить(
			Запрос.Текст,
			"&ТекстЗапросаКоэффициентУпаковки",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
				"ТаблицаТовары.Упаковка",
				"ТаблицаТовары.Номенклатура"));
		
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Результат = Новый Структура;
	Результат.Вставить("РезультатПоШапке",          МассивРезультатов[МассивРезультатов.ВГраница() - 1]);
	Результат.Вставить("РезультатПоТабличнойЧасти", МассивРезультатов[МассивРезультатов.ВГраница()]);
	
	Возврат Результат;
	
КонецФункции

//-- Локализация

#КонецОбласти


// Заполняет массив допустимых наименований входящих документов.
//
// Параметры:
//  МассивНаименований	 - Массив - массив наименования входящих документов.
//
Процедура ДополнитьНаименованияВходящихДокументов(МассивНаименований) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

//++ Локализация


//-- Локализация

#КонецОбласти

#Область Прочее

#КонецОбласти

//++ Локализация


//-- Локализация

#КонецОбласти
