
#Область СлужебныйПрограммныйИнтерфейс

// Блокирует элементы формы в соответствии с доступностью реквизитов сервиса
// 
// Параметры:
// 	Форма                       - ФормаКлиентскогоПриложения - форма документа.
// 	ДоступныеРеквизиты          - Массив                     - массив имен реквизитов сервиса, доступных для редактирования.
// 	ДокументУчаствуетВОбменеEDI - Булево                     - флаг участия документа в обмене по EDI.
Процедура ЗаблокироватьЭлементы(Форма, ДоступныеРеквизиты, ДокументУчаствуетВОбменеEDI) Экспорт
	
	Если Не ДокументыEDIИнтеграцияКлиентСервер.ФормаИнициализирована(Форма) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ДокументУчаствуетВОбменеEDI Тогда
		УстановитьДоступностьЭлементовПоСохраненнымЗначениям(Форма);
		Возврат;
	КонецЕсли;
	
	ДоступныеЭлементыФормы = Новый Массив;
	НедоступныеЭлементыФормы = Новый Массив;
	
	Для каждого СтрокаРеквизита Из Форма.ПараметрыЗапретаРедактированияРеквизитовEDI Цикл
		
		Если Форма.СвойстваEDI.БлокироватьРеквизитыДокумента 
			И ДоступныеРеквизиты.Найти(СтрокаРеквизита.ИмяРеквизита) = Неопределено Тогда
			
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(НедоступныеЭлементыФормы, СтрокаРеквизита.БлокируемыеЭлементы.ВыгрузитьЗначения());
			
		Иначе
			
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеЭлементыФормы, СтрокаРеквизита.БлокируемыеЭлементы.ВыгрузитьЗначения());
			
		КонецЕсли;
		
	КонецЦикла;
	
	ДоступныеЭлементыФормы   = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ДоступныеЭлементыФормы);
	НедоступныеЭлементыФормы = ОбщегоНазначенияКлиентСервер.СвернутьМассив(НедоступныеЭлементыФормы);
	
	Для каждого ИмяЭлемента Из НедоступныеЭлементыФормы Цикл
		
		ИндексЗначения = ДоступныеЭлементыФормы.Найти(ИмяЭлемента);
		
		Если ИндексЗначения = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ДоступныеЭлементыФормы.Удалить(ИндексЗначения);
		
	КонецЦикла;
	
	УстановитьБлокировкуЭлементов(Форма, НедоступныеЭлементыФормы);
	ВосстановитьДоступностьЭлементов(Форма, ДоступныеЭлементыФормы);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьДоступностьЭлементовПоСохраненнымЗначениям(Форма)
	
	Для Каждого СтрокаТаблицы Из Форма.ДоступностьЭлементовБлокируемыхEDI Цикл
		
		УстановитьБлокировкуЭлемента(Форма, СтрокаТаблицы.ИмяЭлемента, СтрокаТаблицы.Доступен);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВосстановитьДоступностьЭлементов(Форма, БлокируемыеЭлементы)
	
	Для каждого ИмяЭлемента Из БлокируемыеЭлементы Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("ИмяЭлемента", ИмяЭлемента);
		
		НайденныеСтроки = Форма.ДоступностьЭлементовБлокируемыхEDI.НайтиСтроки(СтруктураПоиска);
		
		Если НайденныеСтроки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		УстановитьБлокировкуЭлемента(Форма, ИмяЭлемента, НайденныеСтроки[0].Доступен);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьБлокировкуЭлементов(Форма, БлокируемыеЭлементы)
	
	Для каждого ИмяЭлементаФормы Из БлокируемыеЭлементы Цикл
		
		УстановитьБлокировкуЭлемента(Форма, ИмяЭлементаФормы, Ложь);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьБлокировкуЭлемента(Форма, ИмяЭлементаФормы, Доступность)
	
	ЭлементыФормы = Форма.Элементы;
	
	ЭлементФормы = ЭлементыФормы.Найти(ИмяЭлементаФормы);
	Если ЭлементФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ЭлементФормы) = Тип("ПолеФормы")
		И ЭлементФормы.Вид <> ВидПоляФормы.ПолеНадписи Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭлементыФормы, ИмяЭлементаФормы, 
			"ТолькоПросмотр", Не Доступность);
	ИначеЕсли ТипЗнч(ЭлементФормы) = Тип("ТаблицаФормы") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭлементыФормы, ИмяЭлементаФормы, 
			"ТолькоПросмотр", Не Доступность);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭлементыФормы, ИмяЭлементаФормы, 
			"Доступность", Доступность);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
