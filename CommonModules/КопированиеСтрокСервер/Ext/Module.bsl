
#Область ПрограммныйИнтерфейс

// Помещает данные в буфер обмена
//
// Параметры:
//   ВыделенныеСтроки - Массив - Массив идентификаторов выделенных строк
//   ТабЧасть -ТабличнаяЧасть - Табличная часть объекта с копируемыми строками.
//   ИменаКолонок -Структура - содержит описание сопоставления имен колонок, если требуется.
//
Процедура ПоместитьВыделенныеСтрокиВБуферОбмена(ВыделенныеСтроки, ТабЧасть, ИменаКолонок = Неопределено) Экспорт
	ТаблицаБуфераОбмена = ИнициализироватьТаблицуБуфераОбмена();
	
	ВыделенныеСтрокиТЧ = Новый Массив;
	Если ВыделенныеСтроки <> Неопределено Тогда
		
		Для Каждого ТекСтрока Из ВыделенныеСтроки Цикл
			СтрокаТаблицы = ТабЧасть.НайтиПоИдентификатору(ТекСтрока);
			ВыделенныеСтрокиТЧ.Добавить(СтрокаТаблицы);
		КонецЦикла;
		
		НаборыВызовСервера.ДополнитьДоПолногоНабора(ТабЧасть, ВыделенныеСтрокиТЧ);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыделенныеСтрокиТЧ) Тогда
		
		КопируемаяКоллекция = ВыделенныеСтрокиТЧ;
		
	Иначе
		
		КопируемаяКоллекция = ТабЧасть;
		
	КонецЕсли;
	
	Для каждого СтрокаТаблицы Из КопируемаяКоллекция Цикл
		
		НоваяСтрока = ТаблицаБуфераОбмена.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		
		Если ИменаКолонок <> Неопределено Тогда
			
			Для Каждого КлючИЗначение Из ИменаКолонок Цикл
				НоваяСтрока[КлючИЗначение.Значение] = СтрокаТаблицы[КлючИЗначение.Ключ]
			КонецЦикла
			
		КонецЕсли;
		
	КонецЦикла;
	
	СкопироватьТаблицуВБуферОбмена(ТаблицаБуфераОбмена, "Строки");
	
КонецПроцедуры 

// Получает данные из буфера обмена.
//
// Параметры:
//   ПараметрыОтбора - Структура - Параметры отбора строк.
//
// Возвращаемое значение:
//   ТаблицаЗначений - Строки, полученные из буфера обмена.
//
Функция ПолучитьСтрокиИзБуфераОбмена(ПараметрыОтбора = Неопределено) Экспорт
	
	ДанныеИзБуфераОбмена = ОбщегоНазначения.СтрокиИзБуфераОбмена();
	Если ДанныеИзБуфераОбмена.Источник = "Строки" Тогда
		СтрокиДляВставки = ДанныеИзБуфераОбмена.Данные;
	Иначе
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОтбора) Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТЗ.ТоварнаяКатегория,
		|	ТЗ.РейтингПродаж,
		|	ТЗ.НоменклатураНабора,
		|	ТЗ.Номенклатура,
		|	ТЗ.ТипНоменклатуры,
		|	ТЗ.ХарактеристикаНабора,
		|	ТЗ.Характеристика,
		|	ТЗ.Содержание,
		|	ТЗ.Упаковка,
		|	ТЗ.КоличествоУпаковок,
		|	ТЗ.Количество,
		|	ТЗ.КатегорияЭксплуатации,
		|	ТЗ.ФизическоеЛицо,
		|	ТЗ.СтатьяРасходов,
		|	ТЗ.АналитикаРасходов,
		|	ТЗ.АналитикаАктивовПассивов,
		|	ТЗ.Цена,
		|	ТЗ.ПроцентРучнойСкидки,
		|	ТЗ.Склад,
		|	ТЗ.Партнер,
		|	ТЗ.Соглашение,
		|	ТЗ.Сумма,
		|	ТЗ.СуммаРучнойСкидки,
		|	ТЗ.СпособОпределенияСебестоимости,
		|	ТЗ.ДокументРеализации,
		|	ТЗ.Себестоимость,
		|	ТЗ.СебестоимостьБезНДС,
		|	ТЗ.СебестоимостьРегл,
		|	ТЗ.СебестоимостьПР,
		|	ТЗ.СебестоимостьВР,
		|	ТЗ.ВидЦеныСебестоимости,
		|	ТЗ.ДатаЗаполненияСебестоимостиПоВидуЦены,
		|	ТЗ.ВариантКомплектации,
		|	ТЗ.ДатаПоступления,
		|	ТЗ.ДатаОстатка,
		|	ТЗ.ДатаОтгрузки,
		|	ТЗ.ДатаСборкиРазборки

		|ПОМЕСТИТЬ Т
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР 
		|		КОГДА Т.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 
		|		ТОГДА Т.Номенклатура.ТоварнаяКатегория 
		|		ИНАЧЕ Т.ТоварнаяКатегория 
		|	КОНЕЦ КАК ТоварнаяКатегория,
		|	ВЫБОР 
		|		КОГДА Т.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 
		|		ТОГДА Т.Номенклатура.РейтингПродаж 
		|		ИНАЧЕ Т.РейтингПродаж 
		|	КОНЕЦ КАК РейтингПродаж,
		|	Т.НоменклатураНабора,
		|	Т.Номенклатура,
		|	Т.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
		|	Т.ХарактеристикаНабора,
		|	Т.Характеристика,
		|	Т.Содержание,
		|	Т.Упаковка,
		|	Т.КоличествоУпаковок,
		|	Т.Количество,
		|	Т.КатегорияЭксплуатации,
		|	Т.ФизическоеЛицо,
		|	Т.СтатьяРасходов,
		|	Т.АналитикаРасходов,
		|	Т.АналитикаАктивовПассивов,
		|	Т.Цена,
		|	Т.ПроцентРучнойСкидки,
		|	Т.Склад,
		|	Т.Партнер,
		|	Т.Соглашение,
		|	Т.Сумма,
		|	Т.СуммаРучнойСкидки,
		|	Т.СпособОпределенияСебестоимости,
		|	Т.ДокументРеализации,
		|	Т.Себестоимость,
		|	Т.СебестоимостьБезНДС,
		|	Т.СебестоимостьРегл,
		|	Т.СебестоимостьПР,
		|	Т.СебестоимостьВР,
		|	Т.ВидЦеныСебестоимости,
		|	Т.ДатаЗаполненияСебестоимостиПоВидуЦены,
		|	Т.ВариантКомплектации,
		|	Т.ДатаПоступления,
		|	Т.ДатаОстатка,
		|	Т.ДатаОтгрузки,
		|	Т.ДатаСборкиРазборки

		|ИЗ
		|	Т КАК Т
		|ГДЕ
		|	ИСТИНА
		|	И &ТекстУсловия");
		
		Запрос.УстановитьПараметр("ТЗ", СтрокиДляВставки);
		ТекстУсловияОтбор = "";
		
		Если ПараметрыОтбора.Свойство("ОтборПоТипуНоменклатуры") Тогда
			ТекстУсловияОтбор = "И Т.Номенклатура.ТипНоменклатуры В (&ОтборПоТипуНоменклатуры)";
			Запрос.УстановитьПараметр("ОтборПоТипуНоменклатуры", ПараметрыОтбора.ОтборПоТипуНоменклатуры);
		КонецЕсли;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И &ТекстУсловия", ТекстУсловияОтбор);
		
		СтрокиДляВставки = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	Возврат СтрокиДляВставки
КонецФункции 

// Помещает данные в буфер обмена.
//
// Параметры:
//   ЯчейкиБюджета - Массив - массив с копируемыми ячейками.
//
Процедура ПоместитьВыделенныеЯчейкиБюджетаВБуферОбмена(ЯчейкиБюджета) Экспорт
	СкопироватьТаблицуВБуферОбмена(ЯчейкиБюджета, "ЯчейкиБюджета");
КонецПроцедуры 

// Получает данные из буфера обмена.
//
// Возвращаемое значение:
//   Массив - массив с вставляемыми ячейками.
//
Функция ПолучитьЯчейкиБюджетаИзБуфераОбмена() Экспорт
	
	ДанныеИзБуфераОбмена = ОбщегоНазначения.СтрокиИзБуфераОбмена();
	
	Если ДанныеИзБуфераОбмена = Неопределено Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Если ДанныеИзБуфераОбмена.Источник <> "ЯчейкиБюджета" Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Возврат ДанныеИзБуфераОбмена.Данные;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращаемое значение:
// 	ТаблицаЗначений:
// * ТоварнаяКатегория - СправочникСсылка.ТоварныеКатегории
// * РейтингПродаж - СправочникСсылка.РейтингиПродажНоменклатуры
// * НоменклатураНабора - СправочникСсылка.Номенклатура
// * Номенклатура - СправочникСсылка.Номенклатура
// * УпаковочныйЛист - ДокументСсылка.УпаковочныйЛист
// * ТипНоменклатуры - ПеречислениеСсылка.ТипыНоменклатуры
// * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры
// * ХарактеристикаНабора - СправочникСсылка.ХарактеристикиНоменклатуры
// * Содержание - Строка -
// * Упаковка - СправочникСсылка.УпаковкиЕдиницыИзмерения
// * КоличествоУпаковок - Число
// * Количество - Число
// * Цена - Число
// * ПроцентРучнойСкидки - Число
// * СуммаРучнойСкидки - Число
// * НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности
// * СтатьяРасходов - ПланВидовХарактеристикСсылка.СтатьиРасходов, ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов -
// * АналитикаРасходов - ПланВидовХарактеристикСсылка.СтатьиРасходов
// * АналитикаАктивовПассивов - ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов
// * ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
// * СуммаРасходов - Число
// * ДатаОтражения - Дата
// * СтатьяДоходов - ПланВидовХарактеристикСсылка.СтатьиДоходов
// * СуммаДоходов - Число
// * Сумма - Число
// * СуммаБезНДС - Число
// * СуммаРегл - Число
// * СуммаПР - Число
// * СуммаВР - Число
// * СпособОпределенияСебестоимости - ПеречислениеСсылка.СпособыОпределенияСебестоимостиВозврата
// * ДокументРеализации - ДокументСсылка 
// * Себестоимость - Число
// * СебестоимостьБезНДС - Число
// * СебестоимостьРегл - Число
// * СебестоимостьПР - Число
// * СебестоимостьВР - Число
// * ВидЦеныСебестоимости - СправочникСсылка.ВидыЦен
// * ДатаЗаполненияСебестоимостиПоВидуЦены - Дата
// * Склад - СправочникСсылка.Склады
// * Партнер - СправочникСсылка.Партнеры
// * Соглашение - СправочникСсылка.СоглашенияСПоставщиками, СправочникСсылка.СоглашенияСКлиентами - 
// * ВариантКомплектации - СправочникСсылка.ВариантыКомплектацииНоменклатуры
// * ДатаПоступления - Дата
// * ДатаОстатка - Дата
// * ДатаОтгрузки - Дата
// * ДатаСборкиРазборки - Дата
// * ДокументПередачи - ДокументСсылка 
// * ВидРабот - СправочникСсылка.ВидыРаботСотрудников
// * СтатьяКалькуляции - СправочникСсылка.СтатьиКалькуляции
// * Назначение - СправочникСсылка.Назначения
// * Спецификация - СправочникСсылка.РесурсныеСпецификации
// * МестоХранения - ПеречислениеСсылка.ТипыМестХранения -
// * Подразделение - СправочникСсылка.СтруктураПредприятия
// * Договор - СправочникСсылка.ДоговорыКонтрагентов
// * Хранитель - СправочникСсылка.Партнеры
// * Контрагент - СправочникСсылка.Контрагенты
// * Отправитель - СправочникСсылка.СтруктураПредприятия, СправочникСсылка.Склады - 
// * НаправлениеВыпуска - ПеречислениеСсылка.ХозяйственныеОперации
// * Получатель - ПланВидовХарактеристикСсылка.СтатьиРасходов, СправочникСсылка.СтруктураПредприятия, ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов, СправочникСсылка.Склады -
// * Исполнитель - СправочникСсылка.Бригады, СправочникСсылка.ФизическиеЛица - 
// * ДатаЗапуска - Дата
// * ДатаВыпуска - Дата
// * ДатаВыпускаПродукцииПолуфабриката - Дата
// * Полуфабрикат - Булево
// * ЕстьАналогиМатериала - Булево
Функция ИнициализироватьТаблицуБуфераОбмена()
	
	ТаблицаСтрок = Новый ТаблицаЗначений();
	ОписаниеТиповДенежногоПоля = ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля();
	ОписаниеТиповЧисло15_3 = ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15,3);
	ТаблицаСтрок.Колонки.Добавить("ТоварнаяКатегория", Новый ОписаниеТипов("СправочникСсылка.ТоварныеКатегории"));
	ТаблицаСтрок.Колонки.Добавить("РейтингПродаж", Новый ОписаниеТипов("СправочникСсылка.РейтингиПродажНоменклатуры"));
	ТаблицаСтрок.Колонки.Добавить("НоменклатураНабора", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаСтрок.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаСтрок.Колонки.Добавить("УпаковочныйЛист", Новый ОписаниеТипов("ДокументСсылка.УпаковочныйЛист"));
	ТаблицаСтрок.Колонки.Добавить("ТипНоменклатуры", Новый ОписаниеТипов("ПеречислениеСсылка.ТипыНоменклатуры"));
	ТаблицаСтрок.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаСтрок.Колонки.Добавить("ХарактеристикаНабора", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаСтрок.Колонки.Добавить("Содержание", Новый ОписаниеТипов("Строка"));
	ТаблицаСтрок.Колонки.Добавить("Упаковка", Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	ТаблицаСтрок.Колонки.Добавить("КоличествоУпаковок", ОписаниеТиповЧисло15_3);
	ТаблицаСтрок.Колонки.Добавить("Количество", ОписаниеТиповЧисло15_3);
	ТаблицаСтрок.Колонки.Добавить("Цена", ОписаниеТиповДенежногоПоля);
	ТаблицаСтрок.Колонки.Добавить("ПроцентРучнойСкидки", ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(5,2));
	ТаблицаСтрок.Колонки.Добавить("СуммаРучнойСкидки", ОписаниеТиповДенежногоПоля);
	ТаблицаСтрок.Колонки.Добавить("НаправлениеДеятельности", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	ТаблицаСтрок.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов,
																	|ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов"));
	ТаблицаСтрок.Колонки.Добавить("АналитикаРасходов", Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип);
	ТаблицаСтрок.Колонки.Добавить("АналитикаАктивовПассивов", Метаданные.ПланыВидовХарактеристик.СтатьиАктивовПассивов.Тип);
	ТаблицаСтрок.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаСтрок.Колонки.Добавить("СуммаРасходов", ОписаниеТиповДенежногоПоля);
	ТаблицаСтрок.Колонки.Добавить("ДатаОтражения", Новый ОписаниеТипов("Дата"));
	ТаблицаСтрок.Колонки.Добавить("СтатьяДоходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиДоходов"));
	ТаблицаСтрок.Колонки.Добавить("СуммаДоходов", ОписаниеТиповДенежногоПоля);
	ТаблицаСтрок.Колонки.Добавить("Сумма", ОписаниеТиповДенежногоПоля);
	ТаблицаСтрок.Колонки.Добавить("СуммаБезНДС", ОписаниеТиповДенежногоПоля);
	ТаблицаСтрок.Колонки.Добавить("СуммаРегл", ОписаниеТиповДенежногоПоля);
	ТаблицаСтрок.Колонки.Добавить("СуммаПР", ОписаниеТиповДенежногоПоля);
	ТаблицаСтрок.Колонки.Добавить("СуммаВР", ОписаниеТиповДенежногоПоля);
	ТаблицаСтрок.Колонки.Добавить("СпособОпределенияСебестоимости", Новый ОписаниеТипов("ПеречислениеСсылка.СпособыОпределенияСебестоимостиВозврата"));
	ТаблицаСтрок.Колонки.Добавить("ДокументРеализации", Документы.ТипВсеСсылки());
	ТаблицаСтрок.Колонки.Добавить("Себестоимость", ОписаниеТиповДенежногоПоля);
	ТаблицаСтрок.Колонки.Добавить("СебестоимостьБезНДС", ОписаниеТиповДенежногоПоля);
	ТаблицаСтрок.Колонки.Добавить("СебестоимостьРегл", ОписаниеТиповДенежногоПоля);
	ТаблицаСтрок.Колонки.Добавить("СебестоимостьПР", ОписаниеТиповДенежногоПоля);
	ТаблицаСтрок.Колонки.Добавить("СебестоимостьВР", ОписаниеТиповДенежногоПоля);
	ТаблицаСтрок.Колонки.Добавить("ВидЦеныСебестоимости", Новый ОписаниеТипов("СправочникСсылка.ВидыЦен"));
	ТаблицаСтрок.Колонки.Добавить("ДатаЗаполненияСебестоимостиПоВидуЦены", Новый ОписаниеТипов("Дата"));
	ТаблицаСтрок.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ТаблицаСтрок.Колонки.Добавить("Партнер", Новый ОписаниеТипов("СправочникСсылка.Партнеры"));
	ТаблицаСтрок.Колонки.Добавить("Соглашение", Новый ОписаниеТипов("СправочникСсылка.СоглашенияСПоставщиками,
																	|СправочникСсылка.СоглашенияСКлиентами"));
	ТаблицаСтрок.Колонки.Добавить("ВариантКомплектации", Новый ОписаниеТипов("СправочникСсылка.ВариантыКомплектацииНоменклатуры"));
	
	ТаблицаСтрок.Колонки.Добавить("ДатаПоступления", Новый ОписаниеТипов("Дата"));
	ТаблицаСтрок.Колонки.Добавить("ДатаОстатка", Новый ОписаниеТипов("Дата"));
	ТаблицаСтрок.Колонки.Добавить("ДатаОтгрузки", Новый ОписаниеТипов("Дата"));
	ТаблицаСтрок.Колонки.Добавить("ДатаСборкиРазборки", Новый ОписаниеТипов("Дата"));
	
	
	
	КопированиеСтрокЛокализацияСервер.ИнициализироватьТаблицуБуфераОбмена(ТаблицаСтрок);
	
	Возврат ТаблицаСтрок;
	
КонецФункции 

Процедура СкопироватьТаблицуВБуферОбмена(Таблица, Источник = Неопределено)
	ТекущийБуферОбмена = ПараметрыСеанса.БуферОбмена;
	
	Если ЗначениеЗаполнено(ТекущийБуферОбмена.Данные) Тогда
		Адрес = ТекущийБуферОбмена.Данные;
	Иначе
		Адрес = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	ДанныеВХранилище = ПоместитьВоВременноеХранилище(Таблица, Адрес);
	
	СтруктураБуфераОбмена = Новый Структура;
	СтруктураБуфераОбмена.Вставить("Источник", Источник);
	СтруктураБуфераОбмена.Вставить("Данные", ДанныеВХранилище);
	
	ПараметрыСеанса.БуферОбмена = Новый ФиксированнаяСтруктура(СтруктураБуфераОбмена);
	
КонецПроцедуры

#КонецОбласти