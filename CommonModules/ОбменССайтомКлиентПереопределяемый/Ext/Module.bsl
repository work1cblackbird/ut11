#Область ПрограммныйИнтерфейс

// Процедура, вызываемая из одноименного обработчика события формы узла плана обмена "Обмен с сайтом".
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
//  Отказ - Булево - признак отказа от выполнения действия.
//
Процедура ФормаУзлаПриОткрытии(Форма, Отказ) Экспорт
	
	//++ НЕ ГОСИС
	ОбменССайтамиУТКлиент.УстановитьПодсказкуОнлайнОплаты(Форма);
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Процедура, вызываемая из одноименного обработчика события формы узла плана обмена "Обмен с сайтом".
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
//  Отказ - Булево - признак отказа от выполнения действия.
//  ПараметрыЗаписи - Структура - Структура, содержащая параметры записи. 
//
Процедура ФормаУзлаПередЗаписью(Форма, Отказ, ПараметрыЗаписи) Экспорт
	
	//++ НЕ ГОСИС
	Если НЕ (Форма.ИспользуютсяГруппыДоступаПартнеров 
	        И (Форма.ИспользоватьПартнеровКакКонтрагентов
	         ИЛИ Форма.СоздаватьПартнеровДляНовыхКонтрагентов)) Тогда
		
		Форма.ГруппаДоступаПартнеров = ПредопределенноеЗначение("Справочник.ГруппыДоступаПартнеров.ПустаяСсылка");
		
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

#Область ОбработчикиСобытийЭлементовФормы

// Обработчик события При изменении добавляемого поля ввода формы узла плана обмена.
// Параметры:
//  Элемент - ЭлементФормы - источник события.
//  Форма - ФормаКлиентскогоПриложения - Форма узла плана обмена.
//  Объект - ДанныеФормыСтруктура - данные формы узла плана обмена Обмен с сайтом.
//
Процедура ПолеВводаПриИзменении(Элемент, Форма, Объект) Экспорт
	
	
	
КонецПроцедуры

// Обработчик события При изменении добавляемого поля флажка формы узла плана обмена.
//
// Параметры:
//  Элемент - ЭлементФормы - источник события.
//  Форма - ФормаКлиентскогоПриложения - Форма узла плана обмена.
//  Объект - ДанныеФормыСтруктура - данные формы узла плана обмена Обмен с сайтом.
//
Процедура ПолеФлажкаПриИзменении(Элемент, Форма, Объект) Экспорт
	
	//++ НЕ ГОСИС
	Если ВРег(Элемент.Имя) = ВРег("СоздаватьПартнеровДляНовыхКонтрагентов") Тогда
	
		ОбменССайтамиУТКлиент.УстановитьДоступностьЭлементовФормыУзла(Форма, Объект);
	
	ИначеЕсли ВРег(Элемент.Имя) = ВРег("ОнлайнОплаты") Тогда
	
		ОбменССайтамиУТКлиент.УстановитьДоступностьНастроекОнлайнОплаты(Форма, Объект);

	ИначеЕсли ВРег(Элемент.Имя) = ВРег("ЗагружатьФормыОплаты") Тогда
	
		ОбменССайтамиУТКлиент.УстановитьДоступностьНастроекФормыОплаты(Форма, Объект);
	
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Обработчик события ПередОкончаниемРедактирования табличной части формы узла обмена.
//
// Параметры:
//  Элемент - Строка - источник события.
//  НоваяСтрока - Булево - Истина, если строка была добавлена или скопирована.
//  ОтменаРедактирования - Булево - Истина, если произошла отмена редактирования.
//  Отказ - Булево - Признак отказа от записи объекта.
//  Форма - ФормаКлиентскогоПриложения - Форма узла обмена.
//  Объект - ДанныеФормыСтруктура - данные формы узла плана обмена Обмен с сайтом.
//
Процедура ТаблицаФормыПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ,
		Форма, Объект) Экспорт
		
	//++ НЕ ГОСИС
	Если ВРег(Элемент.Имя) = ВРег("СоответствиеСтатусовЗаказов") Тогда
	
		ОбменССайтамиУТКлиент.ПроверитьДублированиеСтатусов(Форма, Объект, ОтменаРедактирования, Отказ);
		
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
