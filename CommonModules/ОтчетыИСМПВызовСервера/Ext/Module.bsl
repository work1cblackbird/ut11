
#Область СлужебныйПрограммныйИнтерфейс

// Возвращает структуру параметров и отборов расшифровки
// Параметры:
//   Расшифровка            - ИдентификаторРасшифровкиКомпоновкиДанных - значение, полученное из отчета при расшифровке.
//   АдресДанныхРасшифровки - Строка - адрес, указывающий на значение во временном хранилище.
//   СписокПараметров       - Массив из Строка - содержит имена параметров и полей, используемых при расшифровке
//   ПоляРасшифровки        - Массив из Строка - содержит имена полей, используемых при расшифровке.
//   ИмяПоляРасшифровки     - Строка - имя поля, по которому выполнять программную расшифровку
//
// Возвращаемое значение:
//   Структура - в качестве ключа возвращается имя параметра или отбора для отчета-приемника,
//               а в качестве значения - значение параметра или отбора.
//
Функция ПараметрыФормыРасшифровки(Расшифровка, АдресДанныхРасшифровки, СписокПараметров, ПоляРасшифровки, ИмяПоляРасшифровки = "") Экспорт
	
	ПараметрыФормыРасшифровки = Новый Структура;
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(АдресДанныхРасшифровки);
	
	ПроверкаПолейРасшифровки = Новый ТаблицаЗначений;
	ПроверкаПолейРасшифровки.Колонки.Добавить("Значение");
	ПроверкаПолейРасшифровки.Колонки.Добавить("ИмяПоля");
	
	Если ИмяПоляРасшифровки <> "" Тогда
		Расшифровать = Истина;
		Поля = ДанныеРасшифровки.Элементы.Получить(Расшифровка).ПолучитьПоля();
		Если Поля.Количество() = 0 Тогда
			Расшифровать = Ложь;
		Иначе
			ИмяПоля = Поля[0].Поле;
			Если ИмяПоля <> ИмяПоляРасшифровки Тогда
				Расшифровать = Ложь;
			КонецЕсли;
		КонецЕсли;
		ПараметрыФормыРасшифровки.Вставить("Расшифровать", Расшифровать);
		Если Не Расшифровать Тогда
			Возврат ПараметрыФормыРасшифровки;
		КонецЕсли;
	КонецЕсли;
	
	ДобавитьРодителей(ДанныеРасшифровки.Элементы[Расшифровка], ПроверкаПолейРасшифровки);
	
	Для Каждого ДанныеПоля Из ПроверкаПолейРасшифровки Цикл
		ИмяПоля = СтрЗаменить(ДанныеПоля.ИмяПоля, ".", "_");
		Если ПоляРасшифровки.Найти(ИмяПоля) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПараметрыФормыРасшифровки.Свойство(ИмяПоля) Тогда
			ПараметрыФормыРасшифровки.Вставить(ИмяПоля + "_Родитель", ДанныеПоля.Значение);
		Иначе
			ПараметрыФормыРасшифровки.Вставить(ИмяПоля, ДанныеПоля.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ИмяПараметра Из СписокПараметров Цикл
		ЗначениеПараметра = ДанныеРасшифровки.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
		Если ЗначениеПараметра = Неопределено Или Не ЗначениеПараметра.Использование Тогда
			Продолжить;
		КонецЕсли;
		ПараметрыФормыРасшифровки.Вставить(ИмяПараметра, ЗначениеПараметра.Значение);
	КонецЦикла; 
	
	ПараметрыФормыРасшифровки.Вставить("Отбор", ДанныеРасшифровки.Настройки.Отбор);
	
	Возврат ПараметрыФормыРасшифровки;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьРодителей(ЭлементРасшифровки, ПроверкаПолейРасшифровки)
	
	Если ТипЗнч(ЭлементРасшифровки) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
		Для каждого Поле Из ЭлементРасшифровки.ПолучитьПоля() Цикл
			Отбор = Новый Структура("Значение, ИмяПоля", Поле.Значение, Поле.Поле); 
			НайденныеСтроки = ПроверкаПолейРасшифровки.НайтиСтроки(Отбор);
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				НовоеПоле = ПроверкаПолейРасшифровки.Добавить();
				НовоеПоле.Значение = Поле.Значение;
				НовоеПоле.ИмяПоля = Поле.Поле;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого Родитель Из ЭлементРасшифровки.ПолучитьРодителей() Цикл
		ДобавитьРодителей(Родитель, ПроверкаПолейРасшифровки);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти