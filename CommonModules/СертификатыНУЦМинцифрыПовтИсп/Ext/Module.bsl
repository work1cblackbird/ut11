///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////


#Область СлужебныйПрограммныйИнтерфейс

// Возвращает массив доверенных сертификатов
//
// Возвращаемое значение:
//   Массив из Структура:
//    * Наименование - Строка
//    * Хранилище - Строка - Имя хранилища
//    * ДействителенДо - Дата
//    * Сертификат - Строка - сертификат в виде Base64
//
Функция СписокДоверенныхСертификатовИзМакета() Экспорт
	
	Результат         = Новый Массив();
	АрхивСертификатов = ПолучитьОбщийМакет("СертификатыНУЦМинцифры_ru");
	ВременныйКаталог  = ПолучитьИмяВременногоФайла()+ПолучитьРазделительПути();
	Буфер             = ПолучитьБуферДвоичныхДанныхИзДвоичныхДанных(АрхивСертификатов);
	Поток             = Новый ПотокВПамяти(Буфер);
	ЧтениеАрхива      = Новый ЧтениеZipФайла(Поток);
	
	Для Каждого Элемент Из ЧтениеАрхива.Элементы Цикл
		
		ЧтениеАрхива.Извлечь(Элемент, ВременныйКаталог);
		
		Сертификат = ПрочитатьСертификатИзФайла(ВременныйКаталог + Элемент.Имя);
		Если Сертификат = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Элемент.Имя = "russian_trusted_root_ca.cer" Тогда
			Элемент = НовыйДоверенныйСертификат();
			Элемент.Наименование   = НСтр("ru = 'Корневой сертификат'");
			Элемент.Хранилище      = "ROOT";
			Элемент.ДействителенДо = '20320228';
			Элемент.Сертификат     = Сертификат;
		ИначеЕсли Элемент.Имя = "russian_trusted_sub_ca.cer" Тогда
			Элемент = НовыйДоверенныйСертификат();
			Элемент.Наименование   = НСтр("ru = 'Выпускающий сертификат'");
			Элемент.Хранилище      = "CA";
			Элемент.ДействителенДо = '20270306';
			Элемент.Сертификат     = Сертификат;
		Иначе
			Продолжить;
		КонецЕсли;
		
		Результат.Добавить(Элемент);
		
	КонецЦикла;
	
	Попытка
		УдалитьФайлы(ВременныйКаталог);
	Исключение
		ОбщегоНазначенияБПО.ЗаписатьОшибкуВЖурналРегистрации(
			НСтр("ru = 'Корневые сертификаты БПО'"),
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПрочитатьСертификатИзФайла(ИмяФайлаСертификата)
	
	Сертификат = Новый Массив();
	Чтение    = Новый ЧтениеТекста(ИмяФайлаСертификата,,,,Ложь);
	
	СтрокаТекста = Чтение.ПрочитатьСтроку();
	Если СтрокаТекста <> "-----BEGIN CERTIFICATE-----" Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтрокаТекста = Чтение.ПрочитатьСтроку();
	Пока СтрокаТекста<>Неопределено Цикл
		Если СтрокаТекста = "-----END CERTIFICATE-----" Тогда
			Прервать;
		КонецЕсли;
		Сертификат.Добавить(СтрокаТекста);
		СтрокаТекста = Чтение.ПрочитатьСтроку();
	КонецЦикла;
	Возврат СтрСоединить(Сертификат, "");
	
КонецФункции

Функция НовыйДоверенныйСертификат()
	
	Элемент = Новый Структура();
	Элемент.Вставить("Наименование", "");
	Элемент.Вставить("Хранилище", "");
	Элемент.Вставить("ДействителенДо", '00010101');
	Элемент.Вставить("Результат", Истина);
	Элемент.Вставить("ОписаниеОшибки", "");
	Элемент.Вставить("Сертификат", "");
	
	Возврат Элемент;
	
КонецФункции

#КонецОбласти
