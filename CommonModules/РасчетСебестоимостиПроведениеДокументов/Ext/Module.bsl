/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Механизм партионного учета версии 2.2
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Структура основных процедур и функций модуля:
// - ОтразитьВМеханизмеУчетаЗатратИСебестоимости() - основная процедура интерфейса формирования движений. 
//		Вызывается из процедуры ДанныеДокументаДляПроведения() модуля менеджера документов.
// - ОтразитьОперацииВУчетеСебестоимости() - процедура формирования всех текстов запросов в соответствии с описанием операцией документа.
//	имеет описания в областях:
//		#Область Описание_ОтразитьОперацииВУчетеСебестоимости - описание алгоритма формирования текстов запросов
//		#Область Описание_ТекстыОперацийСебестоимость - описание правил заполнения полей в движениях

#Область ПрограммныйИнтерфейс

Процедура ОтразитьВМеханизмеУчетаЗатратИСебестоимости(Документ, Запрос, ТекстыЗапроса, Регистры, Объект = Неопределено) Экспорт
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(
				Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя, Регистры)
			И Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(
				Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя, Регистры)
	 И НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя, Регистры) Тогда
	 	Возврат;
	КонецЕсли;
	
	Для Каждого ТекущийЭлемент Из ТекстыЗапроса Цикл
		Если ТекущийЭлемент.Представление = "СебестоимостьТоваров" Тогда
			ТекстыЗапроса.Удалить(ТекущийЭлемент);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	МетаДокумент = Метаданные.НайтиПоТипу(ТипЗнч(Документ));
	
	Если МетаДокумент = Неопределено ИЛИ НЕ Метаданные.Документы.Содержит(МетаДокумент) Тогда
		ВызватьИсключение НСтр("ru='Не удалось определить тип документа'");
	КонецЕсли;
	
	ПараметрыОтражения = Новый Структура;
	// Описание документа.
	ПараметрыОтражения.Вставить("Документ", 			Документ);
	ПараметрыОтражения.Вставить("МетаданныеДокумента", 	МетаДокумент);
	ПараметрыОтражения.Вставить("МенеджерДокумента", 	МенеджерОбъектаПоСсылке(Документ));
	// Параметры проведения документа.
	ПараметрыОтражения.Вставить("Запрос", 				Запрос);
	ПараметрыОтражения.Вставить("ТекстыЗапроса", 		ТекстыЗапроса);
	ПараметрыОтражения.Вставить("Регистры", 			Регистры);
	// Регистры для отражения.
	ПараметрыОтражения.Вставить("РегистрыДляОтражения", Новый Структура);
	
	ПараметрыОтражения.Вставить("ИспользуетсяСреднескользящая",
		РасчетСебестоимостиПовтИсп.ИспользуетсяСреднескользящаяОценка());
	ПараметрыОтражения.Вставить("ВозможныРазныеПериодыВДвижениях",
		Запрос.МенеджерВременныхТаблиц <> Неопределено
		И Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("ВТПараметрыПартионногоУчетаДляПроведения") <> Неопределено);
	
	ОписаниеДополнительныхПараметров = Неопределено;
	ОписаниеДополнительныхТаблиц = Неопределено;
	
	// Себестоимость
	МетаданныеРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров;
	ИмяРегистра 	   = МетаданныеРегистра.Имя;
	
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, ПараметрыОтражения.Регистры)
	 И ПараметрыОтражения.МенеджерДокумента.ОписаниеРегистровУчетаЗатратИСебестоимости(ПараметрыОтражения.Документ).Найти(МетаданныеРегистра) <> Неопределено Тогда
		
		ПараметрыОтражения.Вставить("ИмяРегистра", ИмяРегистра);
		
		ОписаниеРегистра = Новый Структура;
	
		// Получим данные для отражения документа.
		ОписаниеДополнительныхПараметров = ПараметрыОтражения.МенеджерДокумента.УстановитьДополнительныеПараметрыОперацийУчетаЗатратИСебестоимости(
			ПараметрыОтражения.Документ,
			ПараметрыОтражения.Запрос);
		
		Если НЕ Объект = Неопределено Тогда
			ОписаниеДополнительныхТаблиц = ПараметрыОтражения.МенеджерДокумента.СформироватьДополнительныеТаблицыОперацийУчетаЗатратИСебестоимости(
				Объект,
				ПараметрыОтражения.Запрос,
				ПараметрыОтражения.ТекстыЗапроса);
			
			ОписаниеОперацийДокумента = ПараметрыОтражения.МенеджерДокумента.ОписаниеОперацийУчетаСебестоимости(
				Объект);
		Иначе
			ОписаниеДополнительныхТаблиц = ПараметрыОтражения.МенеджерДокумента.СформироватьДополнительныеТаблицыОперацийУчетаЗатратИСебестоимости(
				ПараметрыОтражения.Документ,
				ПараметрыОтражения.Запрос,
				ПараметрыОтражения.ТекстыЗапроса);
			
			ОписаниеОперацийДокумента = ПараметрыОтражения.МенеджерДокумента.ОписаниеОперацийУчетаСебестоимости(
				ПараметрыОтражения.Документ);
		КонецЕсли;
		
		ОписаниеРегистра.Вставить("МетаданныеРегистра", 			  МетаданныеРегистра);
		ОписаниеРегистра.Вставить("ПоляРегистра", 			  		  ВсеПоляРегистра(МетаданныеРегистра));
		ОписаниеРегистра.Вставить("ОписаниеДополнительныхПараметров", ОписаниеДополнительныхПараметров);
		ОписаниеРегистра.Вставить("ОписаниеДополнительныхТаблиц", 	  ОписаниеДополнительныхТаблиц);
		ОписаниеРегистра.Вставить("ОписаниеОперацийДокумента", 		  ОписаниеОперацийДокумента);
		
		ПараметрыОтражения.РегистрыДляОтражения.Вставить(ИмяРегистра, ОписаниеРегистра);
		
		// Сформируем тексты запросов для отражения в учете себестоимости.
		ОтразитьОперацииВУчетеСебестоимости(ПараметрыОтражения);
		
	КонецЕсли;
	
	// Выручка
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж;
	ИмяРегистра 	   = МетаданныеРегистра.Имя;
	
	Если ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, ПараметрыОтражения.Регистры)
	 И ПараметрыОтражения.МенеджерДокумента.ОписаниеРегистровУчетаЗатратИСебестоимости(ПараметрыОтражения.Документ).Найти(МетаданныеРегистра) <> Неопределено Тогда
	
		ПараметрыОтражения.Вставить("ИмяРегистра", ИмяРегистра);
		
		ОписаниеРегистра = Новый Структура;
		
		Если НЕ ЗначениеЗаполнено(ОписаниеДополнительныхПараметров) Тогда
			ОписаниеДополнительныхПараметров = ПараметрыОтражения.МенеджерДокумента.УстановитьДополнительныеПараметрыОперацийУчетаЗатратИСебестоимости(
				ПараметрыОтражения.Документ,
				ПараметрыОтражения.Запрос);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ОписаниеДополнительныхТаблиц) Тогда
			ОписаниеДополнительныхТаблиц = ПараметрыОтражения.МенеджерДокумента.СформироватьДополнительныеТаблицыОперацийУчетаЗатратИСебестоимости(
				ПараметрыОтражения.Документ,
				ПараметрыОтражения.Запрос,
				ПараметрыОтражения.ТекстыЗапроса);
		КонецЕсли;
		
		ОписаниеОперацийДокумента = ПараметрыОтражения.МенеджерДокумента.ОписаниеОперацийУчетаВыручки(
			ПараметрыОтражения.Документ);
		
		ОписаниеРегистра.Вставить("МетаданныеРегистра", 			  МетаданныеРегистра);
		ОписаниеРегистра.Вставить("ОписаниеДополнительныхПараметров", ОписаниеДополнительныхПараметров);
		ОписаниеРегистра.Вставить("ОписаниеДополнительныхТаблиц", 	  ОписаниеДополнительныхТаблиц);
		ОписаниеРегистра.Вставить("ОписаниеОперацийДокумента", 		  ОписаниеОперацийДокумента);
		
		ПараметрыОтражения.РегистрыДляОтражения.Вставить(ИмяРегистра, ОписаниеРегистра);
		
	КонецЕсли;
	
КонецПроцедуры

// Добавляет описание операции для отражения.
//
// Параметры:
//	ОписаниеОпераций - Массив -
//	ВидОперации  - ПеречислениеСсылка.ОперацииУчетаСебестоимости -
//	ТекстЗапроса - Строка -
//	ОписаниеОперации - Строка -
//	
Процедура ДобавитьОписаниеОперацииДляОтраженияВУчетеСебестоимости(ОписаниеОпераций, ВидОперации, ТекстЗапроса, ОписаниеОперации = "") Экспорт
	
	ТекущаяОперация = Новый Структура;
	
	ТекущаяОперация.Вставить("ВидОперации",  	 ВидОперации);
	ТекущаяОперация.Вставить("ТекстЗапроса", 	 ТекстЗапроса);
	ТекущаяОперация.Вставить("НомерОперации", 	 0);
	ТекущаяОперация.Вставить("ОписаниеОперации", ОписаниеОперации);
	
	ОписаниеОпераций.Добавить(ТекущаяОперация);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОписаниеОпераций

Функция СформироватьОписаниеОперации(МетаданныеРегистра) Экспорт
	
	Описание = Новый Структура;
	Поля 	 = Новый Массив;
	
	// Общие и служебные поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, Поля, "Период");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, Поля, "Ссылка");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, Поля, "КорректируемыйДокумент");
	
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, Поля, "ХозяйственнаяОперация");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, Поля, "ИдентификаторФинЗаписи");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, Поля, "НастройкаХозяйственнойОперации");
	
	Описание.Вставить("Поля", Поля);
	Описание.Вставить("ВидОперации", Неопределено);
	
	Возврат Описание;
	
КонецФункции

Процедура ДобавитьОписаниеПоляОперации(МетаданныеРегистра, Поля, ИмяПоля, ТипПоляПоУмолчанию = Неопределено, Дополнительное = Ложь)
	
	ОписаниеПоля = Новый Структура;
	ОписаниеПоля.Вставить("Имя", ИмяПоля);
	
	ТипПоля = Неопределено;
	
	Если ТипПоляПоУмолчанию <> Неопределено Тогда
		
		ТипПоля = ТипПоляПоУмолчанию;
		
	ИначеЕсли НРег(ИмяПоля) = НРег("Период") Тогда
		
		ТипПоля = МетаданныеРегистра.СтандартныеРеквизиты["Период"].Тип;
		
	ИначеЕсли НРег(ИмяПоля) = НРег("Ссылка") Тогда
		
		ТипПоля = МетаданныеРегистра.СтандартныеРеквизиты["Регистратор"].Тип;
		
	Иначе
		
		МетаданныеПоля = МетаданныеРегистра.Измерения.Найти(ИмяПоля);
		
		Если МетаданныеПоля <> Неопределено Тогда
			ТипПоля = МетаданныеПоля.Тип;
		Иначе
			
			МетаданныеПоля = МетаданныеРегистра.Ресурсы.Найти(ИмяПоля);
			
			Если МетаданныеПоля <> Неопределено Тогда
				ТипПоля = МетаданныеПоля.Тип;
			Иначе
				
				МетаданныеПоля = МетаданныеРегистра.Реквизиты.Найти(ИмяПоля);
				
				Если МетаданныеПоля <> Неопределено Тогда
					ТипПоля = МетаданныеПоля.Тип;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОписаниеПоля.Вставить("Тип", ТипПоля);
	ОписаниеПоля.Вставить("Дополнительное", Дополнительное);
	
	Поля.Добавить(ОписаниеПоля);
	
КонецПроцедуры

Процедура ДобавитьОписаниеПолейАналитикиФинансовогоУчета(МетаданныеРегистра, ОписаниеОперации, ГруппаПродукцииОбязательна = Истина)
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		"Сделка",
		Новый ОписаниеТипов("СправочникСсылка.СделкиСКлиентами"));
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		"Подразделение",
		Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		"Менеджер",
		Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		"ГруппаПродукции",
		Новый ОписаниеТипов("СправочникСсылка.ГруппыАналитическогоУчетаНоменклатуры"),
		НЕ ГруппаПродукцииОбязательна);
	
КонецПроцедуры

Процедура ДобавитьОписаниеСуммовыхПолейСебестоимости(МетаданныеРегистра, ОписаниеОперации)
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.Стоимость.Имя);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.СтоимостьБезНДС.Имя);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.СтоимостьРегл.Имя);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Реквизиты.НДСРегл.Имя);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.СтоимостьУпр.Имя);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Реквизиты.НДСУпр.Имя);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.СтоимостьЗабалансовая.Имя);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.СтоимостьЗабалансоваяРегл.Имя);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.ДопРасходы.Имя);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.ДопРасходыБезНДС.Имя);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.ДопРасходыРегл.Имя);
		
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.ДопРасходыУпр.Имя);
		
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.ПостояннаяРазница.Имя);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.ВременнаяРазница.Имя);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Реквизиты.КорСтоимость.Имя);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.СтоимостьНДД.Имя);
	
КонецПроцедуры

Процедура ДобавитьОписаниеСуммовыхПолейСебестоимостиСокращенная(МетаданныеРегистра, ОписаниеОперации, Дополнительное = Ложь)
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.Стоимость.Имя,,
		Дополнительное);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.СтоимостьБезНДС.Имя,,
		Дополнительное);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.СтоимостьРегл.Имя,,
		Дополнительное);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.СтоимостьУпр.Имя,,
		Дополнительное);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Реквизиты.КорСтоимость.Имя,,
		Дополнительное);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.СтоимостьЗабалансовая.Имя,
		,
		Истина);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.СтоимостьЗабалансоваяРегл.Имя,
		,
		Истина);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.ПостояннаяРазница.Имя,
		,
		Истина);
	
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		Метаданные.РегистрыНакопления.СебестоимостьТоваров.Ресурсы.ВременнаяРазница.Имя,
		,
		Истина);
	
КонецПроцедуры

Функция ЕстьПолеТаблицыДанные(ПараметрыОтражения, ИмяПоля)
	
	ИмяРегистра = ПараметрыОтражения.ИмяРегистра;
	КолонкиТаблицыДанные = ПараметрыОтражения.РегистрыДляОтражения[ИмяРегистра].КолонкиТаблицыДанные;
	
	Возврат КолонкиТаблицыДанные.Свойство(ИмяПоля);
	
КонецФункции


Функция ОписаниеОперацииСебестоимостиВнешнееПоступление(ПараметрыОтражения) Экспорт
	
	МетаданныеРегистра = ПараметрыОтражения.РегистрыДляОтражения[ПараметрыОтражения.ИмяРегистра].МетаданныеРегистра;
	ОписаниеОперации   = СформироватьОписаниеОперации(МетаданныеРегистра);
	
	// Служебные поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ДокументИсточник");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ПериодДокументаИсточника", Новый ОписаниеТипов("Дата"));
	
	// Поля аналитики учета партий.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаПартий");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорАналитикаУчетаПартий");
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		"Поставщик",
		Метаданные.Справочники.КлючиАналитикиУчетаПартий.Реквизиты.Поставщик.Тип);
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		"Контрагент",
		Метаданные.Справочники.КлючиАналитикиУчетаПартий.Реквизиты.Контрагент.Тип);
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		"СтавкаНДС",
		Метаданные.Справочники.КлючиАналитикиУчетаПартий.Реквизиты.СтавкаНДС.Тип);
	
	// Поля учета номенклатуры.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Организация");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаНоменклатуры");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидЗапасов");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Партия");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидДеятельностиНДС");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидДеятельностиНДСДокумента");
	
	// Корреспондирующие поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорАналитикаУчетаНоменклатуры");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорВидЗапасов");
	
	// Количественные и суммовые показатели.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Количество");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ИдентификаторСтроки");
	
	ДобавитьОписаниеСуммовыхПолейСебестоимости(МетаданныеРегистра, ОписаниеОперации);
	
	// Поля аналитики финансового учета.
	ДобавитьОписаниеПолейАналитикиФинансовогоУчета(МетаданныеРегистра, ОписаниеОперации, Ложь);
	
	// Необязательные поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "РазделУчета",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорРазделУчета",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаПоПартнерам",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ТипЗаписи",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорПартия",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "СтоимостьНДД",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорОрганизация",, Истина);
	
	// Для неотфактурованной поставки работ и услуг
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "СтатьяРасходовСписания",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаРасходов",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорНаправлениеДеятельности",, Истина);
	
	// Используются только в документе "Ввод остатков товаров".
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "РезервПодОбесценениеРегл",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "РезервПодОбесценениеУпр",, Истина);
	
	Возврат ОписаниеОперации;
	
КонецФункции

Функция ОписаниеОперацииСебестоимостиВнутреннееПоступление(ПараметрыОтражения) Экспорт
	
	МетаданныеРегистра = ПараметрыОтражения.РегистрыДляОтражения[ПараметрыОтражения.ИмяРегистра].МетаданныеРегистра;
	ОписаниеОперации   = СформироватьОписаниеОперации(МетаданныеРегистра);
	
	// Служебные поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ДокументИсточник");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ПериодДокументаИсточника", Новый ОписаниеТипов("Дата"));
	
	// Поля аналитики учета партий.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаПартий");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорАналитикаУчетаПартий");
	ДобавитьОписаниеПоляОперации(
		МетаданныеРегистра,
		ОписаниеОперации.Поля,
		"КодСтроки",
		Метаданные.Справочники.КлючиАналитикиУчетаПартий.Реквизиты.КодСтроки.Тип);
	
	// Поля учета номенклатуры.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Организация");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаНоменклатуры");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидЗапасов");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Партия");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидДеятельностиНДС");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидДеятельностиНДСДокумента");
	
	// Корреспондирующие поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорАналитикаУчетаНоменклатуры");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорВидЗапасов");
	ДобавитьОписаниеПоляОперации(
			МетаданныеРегистра,
			ОписаниеОперации.Поля,
			"КорГруппаПродукции",
			Новый ОписаниеТипов("СправочникСсылка.ГруппыАналитическогоУчетаНоменклатуры"));
	
	// Количественные и суммовые показатели.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Количество");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ИдентификаторСтроки");
	
	ДобавитьОписаниеСуммовыхПолейСебестоимости(МетаданныеРегистра, ОписаниеОперации);
	
	// Поля аналитики финансового учета.
	ДобавитьОписаниеПолейАналитикиФинансовогоУчета(МетаданныеРегистра, ОписаниеОперации);
	
	// Необязательные поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "РазделУчета",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорРазделУчета",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорПартия",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорВидДеятельностиНДС",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ТипЗаписи",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ДокументДвижения",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаПоПартнерам",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "СтоимостьНДД",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорОрганизация",, Истина);

	// Используются только в документе "Ввод остатков товаров".
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "РезервПодОбесценениеРегл",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "РезервПодОбесценениеУпр",, Истина);
	
	Возврат ОписаниеОперации;
	
КонецФункции

Функция ОписаниеОперацииСебестоимостиВыбытиеПоФиксированнойСтоимости(ПараметрыОтражения) Экспорт
	
	МетаданныеРегистра = ПараметрыОтражения.РегистрыДляОтражения[ПараметрыОтражения.ИмяРегистра].МетаданныеРегистра;
	ОписаниеОперации   = СформироватьОписаниеОперации(МетаданныеРегистра);
	
	// Служебные поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ДокументИсточник");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ПериодДокументаИсточника", Новый ОписаниеТипов("Дата"));
	
	// Поля учета номенклатуры.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Организация");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаНоменклатуры");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидЗапасов");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидДеятельностиНДС");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидДеятельностиНДСДокумента");
	
	// Корреспондирующие поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорАналитикаУчетаНоменклатуры");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорВидЗапасов");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "СтатьяРасходовАктивов");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаРасходовАктивов");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "СтатьяДоходов");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаДоходов");
	
	// Количественные и суммовые показатели.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Количество");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ИдентификаторСтроки");
	
	ДобавитьОписаниеСуммовыхПолейСебестоимостиСокращенная(МетаданныеРегистра, ОписаниеОперации);
	
	// Поля аналитики финансового учета.
	ДобавитьОписаниеПолейАналитикиФинансовогоУчета(МетаданныеРегистра, ОписаниеОперации);
	
	// Необязательные поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "РазделУчета",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорРазделУчета",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ТипЗаписи",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаПоПартнерам",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Партия",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорПартия",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "НастройкаСчетовУчета",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорОрганизация",, Истина);
	
	Возврат ОписаниеОперации;
	
КонецФункции

Функция ОписаниеОперацииСебестоимостиПеремещение(ПараметрыОтражения) Экспорт
	
	МетаданныеРегистра = ПараметрыОтражения.РегистрыДляОтражения[ПараметрыОтражения.ИмяРегистра].МетаданныеРегистра;
	ОписаниеОперации   = СформироватьОписаниеОперации(МетаданныеРегистра);
	
	// Поля учета номенклатуры.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Организация");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаНоменклатуры");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидЗапасов");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидДеятельностиНДС");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидДеятельностиНДСДокумента");
	
	// Корреспондирующие поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорОрганизация");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорПартия");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорАналитикаУчетаНоменклатуры");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорВидЗапасов");
	
	// Количественные и суммовые показатели.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Количество");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ИдентификаторСтроки");
	
	ДобавитьОписаниеСуммовыхПолейСебестоимостиСокращенная(МетаданныеРегистра, ОписаниеОперации, Истина);
	
	// Поля аналитики финансового учета.
	ДобавитьОписаниеПолейАналитикиФинансовогоУчета(МетаданныеРегистра, ОписаниеОперации);
	
	// Необязательные поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "РазделУчета",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорРазделУчета",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаПартий",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ЗаказКлиента",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Партия",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаПоПартнерам",, Истина);
	
	Возврат ОписаниеОперации;
	
КонецФункции

Функция ОписаниеОперацииСебестоимостиРеализация(ПараметрыОтражения) Экспорт
	
	МетаданныеРегистра = ПараметрыОтражения.РегистрыДляОтражения[ПараметрыОтражения.ИмяРегистра].МетаданныеРегистра;
	ОписаниеОперации   = СформироватьОписаниеОперации(МетаданныеРегистра);
	
	// Служебные поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ДокументИсточник");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ПериодДокументаИсточника", Новый ОписаниеТипов("Дата"));
	
	// Поля учета номенклатуры.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Организация");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаНоменклатуры");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидЗапасов");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидДеятельностиНДС");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидДеятельностиНДСДокумента");
	
	// Корреспондирующие поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорОрганизация");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорАналитикаУчетаНоменклатуры");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорВидЗапасов");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорПартия");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорАналитикаУчетаПартий");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаПоПартнерам");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ЗаказКлиента");
	
	// Количественные и суммовые показатели.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Количество");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ИдентификаторСтроки");
	
	// Поля аналитики финансового учета.
	ДобавитьОписаниеПолейАналитикиФинансовогоУчета(МетаданныеРегистра, ОписаниеОперации);
	
	// Необязательные поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "РазделУчета",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорРазделУчета",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "СтоимостьЗабалансовая",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "СтоимостьЗабалансоваяРегл",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ТипЗаписи",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорВидДеятельностиНДС",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Партия",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаПартий",, Истина);
	
	Возврат ОписаниеОперации;
	
КонецФункции

Функция ОписаниеОперацииСебестоимостиСписаниеНаДругиеПартии(ПараметрыОтражения) Экспорт
	
	МетаданныеРегистра = ПараметрыОтражения.РегистрыДляОтражения[ПараметрыОтражения.ИмяРегистра].МетаданныеРегистра;
	ОписаниеОперации   = СформироватьОписаниеОперации(МетаданныеРегистра);
	
	// Поля учета номенклатуры.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Организация");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаНоменклатуры");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидЗапасов");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидДеятельностиНДС");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидДеятельностиНДСДокумента");
	
	// Корреспондирующие поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорОрганизация");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорПартия");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорАналитикаУчетаНоменклатуры");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорВидЗапасов");
	
	// Количественные и суммовые показатели.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Количество");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ИдентификаторСтроки");
	
	// Поля аналитики финансового учета.
	ДобавитьОписаниеПолейАналитикиФинансовогоУчета(МетаданныеРегистра, ОписаниеОперации);
	
	// Необязательные поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "РазделУчета",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорРазделУчета",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорАналитикаУчетаПартий",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Партия",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаПартий",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Стоимость",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "СтоимостьБезНДС",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "СтоимостьРегл",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "СтоимостьУпр",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ТипЗаписи",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ДокументДвижения",, Истина);
	
	Возврат ОписаниеОперации;
	
КонецФункции

Функция ОписаниеОперацииСебестоимостиСписаниеНаРасходыАктивы(ПараметрыОтражения) Экспорт
	
	МетаданныеРегистра = ПараметрыОтражения.РегистрыДляОтражения[ПараметрыОтражения.ИмяРегистра].МетаданныеРегистра;
	ОписаниеОперации   = СформироватьОписаниеОперации(МетаданныеРегистра);
	
	// Служебные поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ДокументИсточник");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ПериодДокументаИсточника", Новый ОписаниеТипов("Дата"));
	
	// Поля учета номенклатуры.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Организация");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаНоменклатуры");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидЗапасов");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидДеятельностиНДС");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ВидДеятельностиНДСДокумента");
	
	// Корреспондирующие поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорОрганизация");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорАналитикаУчетаНоменклатуры");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорВидЗапасов");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "СтатьяРасходовАктивов");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаРасходовАктивов");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорНаправлениеДеятельности");
	
	// Количественные и суммовые показатели.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Количество");
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ИдентификаторСтроки");
	
	// Поля аналитики финансового учета.
	ДобавитьОписаниеПолейАналитикиФинансовогоУчета(МетаданныеРегистра, ОписаниеОперации);
	
	// Необязательные поля.
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "РазделУчета",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорРазделУчета",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Партия",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаПартий",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорПартия",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "КорАналитикаУчетаПартий",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "Стоимость",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "СтоимостьБезНДС",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "СтоимостьРегл",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "СтоимостьУпр",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ТипЗаписи",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "НастройкаСчетовУчета",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "АналитикаУчетаПоПартнерам",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ЗаказКлиента",, Истина);
	ДобавитьОписаниеПоляОперации(МетаданныеРегистра, ОписаниеОперации.Поля, "ДокументДвижения",, Истина);
	
	Возврат ОписаниеОперации;
	
КонецФункции

Функция ПолучитьОписаниеОперации(ПараметрыОтражения, ВидОперации) Экспорт
	
	Если ВидОперации = Перечисления.ОперацииУчетаСебестоимости.ВнешнееПоступление Тогда
		ОписаниеОперации = ОписаниеОперацииСебестоимостиВнешнееПоступление(ПараметрыОтражения);
	ИначеЕсли ВидОперации = Перечисления.ОперацииУчетаСебестоимости.ВнутреннееПоступление Тогда
		ОписаниеОперации = ОписаниеОперацииСебестоимостиВнутреннееПоступление(ПараметрыОтражения);
	ИначеЕсли ВидОперации = Перечисления.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости Тогда
		ОписаниеОперации = ОписаниеОперацииСебестоимостиВыбытиеПоФиксированнойСтоимости(ПараметрыОтражения);
	ИначеЕсли ВидОперации = Перечисления.ОперацииУчетаСебестоимости.Перемещение Тогда
		ОписаниеОперации = ОписаниеОперацииСебестоимостиПеремещение(ПараметрыОтражения);
	ИначеЕсли ВидОперации = Перечисления.ОперацииУчетаСебестоимости.Реализация Тогда
		ОписаниеОперации = ОписаниеОперацииСебестоимостиРеализация(ПараметрыОтражения);
	ИначеЕсли ВидОперации = Перечисления.ОперацииУчетаСебестоимости.СписаниеНаДругиеПартии Тогда
		ОписаниеОперации = ОписаниеОперацииСебестоимостиСписаниеНаДругиеПартии(ПараметрыОтражения);
	ИначеЕсли ВидОперации = Перечисления.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы Тогда
		ОписаниеОперации = ОписаниеОперацииСебестоимостиСписаниеНаРасходыАктивы(ПараметрыОтражения);
	Иначе
		ОписаниеОперации = Неопределено;
	КонецЕсли;
	
	Если ОписаниеОперации <> Неопределено Тогда
		ОписаниеОперации.ВидОперации = ВидОперации;
	КонецЕсли;
	
	Возврат ОписаниеОперации;
	
КонецФункции

#КонецОбласти

#Область ТекстыОперацийСебестоимость

#Область Описание_ОтразитьОперацииВУчетеСебестоимости

// В процедуре ОтразитьОперацииВУчетеСебестоимости() выполняется формирование полного текста запроса для проведения
// документа по регистрам учета себестоимости.
// Структура процедуры:
// 1) Формируются временные таблицы в соответствии с операциями документа:
// Запросы формирования временных таблиц описаны в процедурах, соответствующих имени модульной операции:
//	ВнешнееПоступление - ОтразитьОперациюСебестоимостиВнешнееПоступление() - временная таблица ВТОперация_ВнешнееПоступление
//	ВнутреннееПоступление - ОтразитьОперациюСебестоимостиВнутреннееПоступление() - временная таблица ВТОперация_ВнутреннееПоступление
//	ВыбытиеПоФиксированнойСтоимости- ОтразитьОперациюСебестоимостиВыбытиеПоФиксированнойСтоимости() - временная таблица ВТОперация_ВыбытиеПоФиксированнойСтоимости
//	Перемещение - ОтразитьОперациюСебестоимостиПеремещение() - временная таблица ВТОперация_Перемещение
//	Реализация - ОтразитьОперациюСебестоимостиРеализация() - временная таблица ВТОперация_Реализация
//	СписаниеНаДругиеПартии - ОтразитьОперациюСебестоимостиСписаниеНаДругиеПартии() - временная таблица ВТОперация_СписаниеНаДругиеПартии
//	СписаниеНаРасходыАктивы - ОтразитьОперациюСебестоимостиСписаниеНаРасходыАктивы() - временная таблица ВТОперация_СписаниеНаРасходыАктивы

// 2) Формируется сводный запрос по данным временных таблиц операций документа.
// Выполняется в процедуре ДобавитьТекстЗапросаФормированияДвижений().
// Исходные данные: временные таблицы
//	- ВТОперация_ВнешнееПоступление
//	- ВТОперация_ВнутреннееПоступление
//	- ВТОперация_ВыбытиеПоФиксированнойСтоимости
//	- ВТОперация_Перемещение
//	- ВТОперация_Реализация
//	- ВТОперация_СписаниеНаДругиеПартии
//	- ВТОперация_СписаниеНаРасходыАктивы
// Выходные данные:
//	При использовании метода оценки стоимости "Среднескользящая" формируется временная таблица ВТОперацииДокумента.
//	При использовании других методов оценки формируется выборка из исходных временных таблиц.

// Следующме пункты 3 - 9 выполняются только при использовании метода оценки стоимости "Среднескользящая".

#Область Описание_ОтразитьОперацииВУчетеСебестоимости_СреднескользящаяРасчетСтоимости

// 3) Формируются запросы получения и расчета среднескользящей стоимости.
// Выполняется в процедуре ДобавитьТекстЗапросаРасчетСреднескользящаяСтоимость().

// 3.1) Формируется запрос получения среднескользящей стоимости.
// Выполняется в области #Область ДобавитьТекстЗапросаСреднескользящаяСтоимость
// Исходные данные:
// 	 - временная таблица ВТОперацииДокумента
// 	 - движения текущего документа по регистру накопления "Себестоимость товаров"
// Условия выборки данных из таблицы ВТОперацииДокумента:
//	- МетодОценкиСтоимостиТоваров = «Среднескользящая»
//	- ВидДвижения = «Расход»
// Выполняемые действия:
//	- Получается остаток без указания даты из виртуальной таблицы Остатки регистра накопления "Себестоимость товаров"
//	по 4-м первым измерениям (АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, Организация).
//	- Получаются суммы из ранее сформированных движений документа (для сохранения ранее рассчитанной стоимости). 
// Выходные данные: временные таблицы
//	- ВТСебестоимостьОстаток - рассчитаный остаток себестоимости 
//	- ВТИдентификаторыСебестоимости - таблица идентификаторов фин записи, для которых уже была рассчитана себестоимость

// 3.2) Формируется запрос определения стоимости по методу "Среднескользящая".
// Выполняется в области #Область ДобавитьТекстЗапросаРасчетаСтоимостиПоСреднескользящей
// Исходные данные: временные таблицы
// 	- ВТОперацииДокумента
//	- ВТСебестоимостьОстаток 
//	- ВТИдентификаторыСебестоимости
// Выполняемые действия:
//	Для движений по новым строкам документа стоимость определяется по остаткам себестоимости.
//	Для движений по строкам, которые уже были у данного документа, стоимость определяется по его старым движениям.
// Выходные данные: временная таблица ВТДвиженияРасчетПоСреднескользящей
// 
// ОГРАНИЧЕНИЕ: при наличии двух и более одинаковых строк может возникнуть суммовой остаток на погрешность округления,
// если в результате все количество списывается в 0. Такой остаток будет списан при закрытии месяца или будет учтен после
// следующего приобретения товаров.

// 3.3) Формируется запрос определения стоимости по документу - источнику.
// Выполняется в области #Область ДобавитьТекстЗапросаСтоимостьПоДвижениямДокументаИсточника.
// Исходные данные:
// 	 - временная таблица ВТОперацииДокумента
// 	 - движения документа-источника по регистру накопления "Себестоимость товаров"
// Условия выборки данных из таблицы ВТОперацииДокумента:
//	МетодОценкиСтоимостиТоваров = "Среднескользящая"
//	ДокументИсточник <> Неопределено
// Выполняемые действия:
//	Получаются движения документа-источника по регистру "Себестоимость товаров".
// Выходные данные: временная таблица ВТСебестоимостьДокументаИсточника

// 3.4) Формируется запрос расчета стоимости по документу - источнику.
// Выполняется в области #Область ДобавитьТекстЗапросаРасчетаСтоимостиПоДокументуИсточнику
// Исходные данные: временные таблицы
//	- ВТОперацииДокумента
//	- ВТСебестоимостьДокументаИсточника
// Условия выборки данных из таблицы ВТОперацииДокумента:
//	МетодОценкиСтоимостиТоваров = «Среднескользящая»
//	И
//	(СпособОпределенияСебестоимости = «ПоДвижениямДокументаИсточника» 
//	ИЛИ 
//	ОперацияУчетаСебестоимости = "ВыбытиеПоФиксированнойСтоимости" и метод оценки Среднескользящая)
// Выполняемые действия:
//	Выполняется расчет стоимости по данным документа-источника.
// Выходные данные: временная таблица ВТДвиженияРасчетПоДокументуИсточнику

// 3.5) Формируется запрос расчета отклонений в стоимости.
// Выполняется в области #Область ДобавитьТекстЗапросаРасчетаОтклоненийВСтоимости
// Исходные данные: временные таблицы
//	- ВТДвиженияРасчетПоСреднескользящей
//	- ВТДвиженияРасчетПоДокументуИсточнику
// Условия выборки данных:
//	ОперацияУчетаСебестоимости = "ВыбытиеПоФиксированнойСтоимости"
// Выполняемые действия:
//	- Рассчитываются отклонения рассчитанной стоимости от исходной стоимости документа.
//	- Отклонения будут отнесены на прочие доходы, если отклонения меньше 0 (рассчитанная стоимость меньше стоимости в документе)
//	- Отклонения будут отнесены на прочие расходы, если отклонения больше 0 (рассчитанная стоимость больше стоимости в документе)
// Выходные данные: временная таблица ВТДвиженияОтклоненияВСтоимости

// 3.6) Формируется результирующий запрос для формирования движений по регистру "Себестоимость товаров".
// Выполняется в области #Область ДобавитьТекстЗапросаДвиженияСоСтоимостью 
// Исходные данные: временные таблицы
//	- ВТОперацииДокумента
//	- ВТДвиженияРасчетПоСреднескользящей
//	- ВТДвиженияРасчетПоДокументуИсточнику
//	- ВТДвиженияОтклоненияВСтоимости
// Выполняемые действия: формируются результирующие движения
//	- со способом определения себестоимости "ИзДокумента"
//	- со способом определения себестоимости "ПоСреднескользящей"
//	- со способом определения себестоимости "ПоКорДвжению"
//	- со способом определения себестоимости "ПоДвижениямДокументаИсточника"
//	- Формируются движения по отклонениям в стоимости.
// Выходные данные:
//	- Временная таблица ВТИтоговыеДвиженияСебестоимостьТоваров
//	- Выборка из итоговой таблицы. Структура полей выборки полностью соответствует исходной таблице ВТОперацииДокумента

#КонецОбласти

#Область Описание_ОтразитьОперацииВУчетеСебестоимости_СреднескользящаяФормированиеДвижений

// В процедурах формируются корреспондирующие движения по разным регистрам исходными данными для которых являются
// движения по регистру "Себестоимость товаров".

// 4) Формируются движения по регистру "Выручка и себестоимость продаж".
// Выполняется в процедуре ДобавитьТекстЗапросаДвиженияВыручкаИСебестоимостьПродаж().
// Исходные данные: временные таблицы
//	- ВТИтоговыеДвиженияСебестоимостьТоваров
//	- ДвиженияВыручкиИСебестоимости - запрос формирования движений мз модуля менеджера документа
// Выполняемые действия: в таблице формирования движений заполняется рассчитанная себестоимость
// Выходные данные: выборка для формирования движений по регистру

// 5) Формируются корреспондирующие движения по регистру "Прочие расходы".
// Выполняется в процедуре ДобавитьТекстЗапросаКорДвиженияПрочиеРасходы().
// Исходные данные: временные таблицы
//	- ВТДвиженияРасчетПоСреднескользящей
//	- ВТДвиженияРасчетПоДокументуИсточнику
//	- ВТДвиженияОтклоненияВСтоимости
// Условие выборки данных: 
//	(ОперацияУчетаСебестоимости  = "СписаниеНаРасходыАктивы"
//	ИЛИ ОперацияУчетаСебестоимости  = "ВыбытиеПоФиксированнойСтоимости")
//	И заполнено поле СтатьяРасходовСписания
// Выполняемые действия: формируется таблица для записи движений по регистру
// Выходные данные: выборка для формирования движений по регистру

// 6) Формируются корреспондирующие движения по регистру "Прочие доходы".
// Выполняется в процедуре ДобавитьТекстЗапросаКорДвиженияПрочиеДоходы().
// Исходные данные:
//	- временная таблица ВТДвиженияОтклоненияВСтоимости
// Условие выборки данных: заполнено поле СтатьяДоходов
// Выполняемые действия: формируется таблица для записи движений по регистру
// Выходные данные: выборка для формирования движений по регистру

// 7) Формируются корреспондирующие движения по регистру "Активы и пассивы".
// Выполняется в процедуре ДобавитьТекстЗапросаКорДвиженияПрочиеАктивыПассивы().
// Исходные данные:
//	- временная таблица ВТДвиженияРасчетПоСреднескользящей
// Условие выборки данных:
//	ОперацияУчетаСебестоимости  = "СписаниеНаРасходыАктивы"
//	И заполнено поле СтатьяАктивовПассивов
// Выполняемые действия: формируется таблица для записи движений по регистру
// Выходные данные: выборка для формирования движений по регистру

// 8) Формируются корреспондирующие движения по регистру "Движения Прочие активы и пассивы".
// Выполняется в процедуре ДобавитьТекстЗапросаКорДвиженияПоПрочимАктивамПассивам().
// Исходные данные:
//	- временная таблица ВТДвиженияРасчетПоСреднескользящей
// Условие выборки данных:
//	ОперацияУчетаСебестоимости  = "СписаниеНаРасходыАктивы"
//	И заполнено поле СтатьяАктивовПассивов
// Выполняемые действия: формируется таблица для записи движений по регистру
// Выходные данные: выборка для формирования движений по регистру

// 9) Формируются корреспондирующие движения по регистру "Движения Номенклатура - Доходы/Расходы".
// Выполняется в процедуре ДобавитьТекстЗапросаКорДвиженияНоменклатураДоходыРасходы().
// Исходные данные: временные таблицы
//	- ВТДвиженияРасчетПоСреднескользящей
//	- ВТДвиженияРасчетПоДокументуИсточнику
//	- ВТДвиженияОтклоненияВСтоимости
// Условие выборки данных из таблиц ВТДвиженияРасчетПоСреднескользящей и ВТДвиженияРасчетПоДокументуИсточнику
//	ОперацияУчетаСебестоимости  = "СписаниеНаРасходыАктивы"
// Выполняемые действия: формируется таблица для записи движений по регистру
// Выходные данные: выборка для формирования движений по регистру

#КонецОбласти

#КонецОбласти

// Формирует запрос для проведения документа по регистру СебестоимостьТоваров.
//
// Параметры:
//	ОписаниеОпераций - Массив - массив операций
//
Процедура ОтразитьОперацииВУчетеСебестоимости(ПараметрыОтражения)
	
	ИмяРегистра 	   			= ПараметрыОтражения.ИмяРегистра;
	ОписаниеОперацийДокумента   = ПараметрыОтражения.РегистрыДляОтражения[ИмяРегистра].ОписаниеОперацийДокумента;
	
	Если ОписаниеОперацийДокумента.Количество() = 0 Тогда
		 Возврат;
	КонецЕсли;
	
	НомерОперации = 0;
	
	ВидыОперацийДокумента  = Новый Соответствие;
	СхемыЗапросовДокумента = Новый Массив;
	
	ТаблицаПолей = Новый ТаблицаЗначений;
	ТаблицаПолей.Колонки.Добавить("Имя");
	ТаблицаПолей.Колонки.Добавить("Тип");
	ТаблицаПолей.Колонки.Добавить("ПрисутствуетВОперациях");
	ТаблицаПолей.Колонки.Добавить("Дополнительное");
	
	КолонкиТаблицыДанные = Новый Структура;
	
	Для Каждого ТекущаяОперацияДокумента Из ОписаниеОперацийДокумента Цикл
		
		ТекущаяОперацияДокумента.НомерОперации = НомерОперации;
		НомерОперации = НомерОперации + 1;
		
		// Разберем схему запроса текущей операции.
		РазборСхемыЗапроса = Новый Структура;
		
		Попытка
			
			РазборСхемыЗапроса.Вставить("СхемаЗапроса", Новый СхемаЗапроса);
			
			РазборСхемыЗапроса.СхемаЗапроса.УстановитьТекстЗапроса(ТекущаяОперацияДокумента.ТекстЗапроса);
			
			РазборСхемыЗапроса.Вставить("ОписаниеЗапроса", РазборСхемыЗапроса.СхемаЗапроса.ПакетЗапросов[РазборСхемыЗапроса.СхемаЗапроса.ПакетЗапросов.Количество() - 1]);
			РазборСхемыЗапроса.Вставить("КолонкиЗапроса", Новый Структура);
			
			Для Каждого ТекущаяКолонка Из РазборСхемыЗапроса.ОписаниеЗапроса.Колонки Цикл
				РазборСхемыЗапроса.КолонкиЗапроса.Вставить(ТекущаяКолонка.Псевдоним);
			КонецЦикла;
			
			РазборСхемыЗапроса.Вставить("ВидОперации", ТекущаяОперацияДокумента.ВидОперации);
			
		Исключение

			ТекстОшибки = НСтр("ru='Невозможно выполнить разбор схемы запроса №%1 движений документа %2 по регистру %3'") + ":
				|" + КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстОшибки,
				НомерОперации,
				ПараметрыОтражения.МетаданныеДокумента.Имя,
				ПараметрыОтражения.ИмяРегистра);
				
			ВызватьИсключение ТекстОшибки;
			
		КонецПопытки;
		
		СхемыЗапросовДокумента.Добавить(РазборСхемыЗапроса);
		
		// Заполним описание полей для всех типов используемых операций
		ОписаниеОперации = ВидыОперацийДокумента.Получить(ТекущаяОперацияДокумента.ВидОперации);
		ЕстьОписаниеОперации = (ОписаниеОперации <> Неопределено);
		
		Если НЕ ЕстьОписаниеОперации Тогда
			ОписаниеОперации = ПолучитьОписаниеОперации(ПараметрыОтражения, ТекущаяОперацияДокумента.ВидОперации);
		КонецЕсли;
		
		ПроверитьПоляЗапросаВыборкиДанных(ПараметрыОтражения, ОписаниеОперации, РазборСхемыЗапроса);
		
		Если ЕстьОписаниеОперации Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОписаниеОперации = Неопределено Тогда
			
			ТекстОшибки = НСтр("ru='Некорректная операция учета себестоимости для документа ""%1""'");
			
			Если ЗначениеЗаполнено(ПараметрыОтражения.Документ) Тогда
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ТекстОшибки,
					СокрЛП(ПараметрыОтражения.Документ));
			Иначе
				
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ТекстОшибки,
					ПараметрыОтражения.МетаданныеДокумента);
				
			КонецЕсли;
			
			ВызватьИсключение ТекстОшибки; // некорректная операция учета себестоимости
			
		КонецЕсли;
		
		Для Каждого ОписаниеПоля Из ОписаниеОперации.Поля Цикл
			
			Если КолонкиТаблицыДанные.Свойство(ОписаниеПоля.Имя) Тогда
				СтрокаПоля = ТаблицаПолей[КолонкиТаблицыДанные[ОписаниеПоля.Имя]];
			Иначе
				СтрокаПоля = Неопределено;
			КонецЕсли;
			
			Если СтрокаПоля = Неопределено Тогда
				
				СтрокаПоля = ТаблицаПолей.Добавить();
				СтрокаПоля.Имя = ОписаниеПоля.Имя;
				СтрокаПоля.Тип = ?(ОписаниеПоля.Тип = Неопределено, Новый ОписаниеТипов, ОписаниеПоля.Тип);
				СтрокаПоля.ПрисутствуетВОперациях = Новый Соответствие;
				СтрокаПоля.Дополнительное = Новый Соответствие;
				
				КолонкиТаблицыДанные.Вставить(ОписаниеПоля.Имя, ТаблицаПолей.Количество() - 1);
				
			Иначе
				
				Если ОписаниеПоля.Тип <> Неопределено Тогда
					СтрокаПоля.Тип = Новый ОписаниеТипов(СтрокаПоля.Тип, ОписаниеПоля.Тип.Типы());
				КонецЕсли;
				
			КонецЕсли;
			
			СтрокаПоля.ПрисутствуетВОперациях.Вставить(ТекущаяОперацияДокумента.ВидОперации, Истина);
			
			Если ОписаниеПоля.Дополнительное Тогда
				СтрокаПоля.Дополнительное.Вставить(ТекущаяОперацияДокумента.ВидОперации, Истина);
			КонецЕсли;
			
		КонецЦикла;
		
		ВидыОперацийДокумента.Вставить(ТекущаяОперацияДокумента.ВидОперации, ОписаниеОперации);
		
	КонецЦикла;
	
	ПараметрыОтражения.РегистрыДляОтражения[ИмяРегистра].Вставить("ТаблицаПолей",  			ТаблицаПолей);
	ПараметрыОтражения.РегистрыДляОтражения[ИмяРегистра].Вставить("КолонкиТаблицыДанные",  	КолонкиТаблицыДанные);
	ПараметрыОтражения.РегистрыДляОтражения[ИмяРегистра].Вставить("СхемыЗапросовДокумента",	СхемыЗапросовДокумента);
	ПараметрыОтражения.РегистрыДляОтражения[ИмяРегистра].Вставить("ВидыОперацийДокумента", 	ВидыОперацийДокумента);
	
	ПараметрыОтражения.Вставить("ТекстыШаблоновОтражения",  	 Новый Структура);
	ПараметрыОтражения.Вставить("ТекстыШаблоновВТ", 			 Новый Структура);
	ПараметрыОтражения.Вставить("ТекстыЗапросовДанныхДокумента", Новый Структура);
	
	ДобавитьТекстЗапросаТаблицыДанные(ПараметрыОтражения);
	
	Для Каждого ТекущаяОперацияДокумента Из ВидыОперацийДокумента Цикл
		
		// Сформируем текст запроса формирвоания временной таблицы отражения операции документа.
		Если ТекущаяОперацияДокумента.Ключ = Перечисления.ОперацииУчетаСебестоимости.ВнешнееПоступление Тогда
			ОтразитьОперациюСебестоимостиВнешнееПоступление(ПараметрыОтражения);
		ИначеЕсли ТекущаяОперацияДокумента.Ключ = Перечисления.ОперацииУчетаСебестоимости.ВнутреннееПоступление Тогда
			ОтразитьОперациюСебестоимостиВнутреннееПоступление(ПараметрыОтражения);
		ИначеЕсли ТекущаяОперацияДокумента.Ключ = Перечисления.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости Тогда
			ОтразитьОперациюСебестоимостиВыбытиеПоФиксированнойСтоимости(ПараметрыОтражения);
		ИначеЕсли ТекущаяОперацияДокумента.Ключ = Перечисления.ОперацииУчетаСебестоимости.Перемещение Тогда
			ОтразитьОперациюСебестоимостиПеремещение(ПараметрыОтражения);
		ИначеЕсли ТекущаяОперацияДокумента.Ключ = Перечисления.ОперацииУчетаСебестоимости.Реализация Тогда
			ОтразитьОперациюСебестоимостиРеализация(ПараметрыОтражения);
		ИначеЕсли ТекущаяОперацияДокумента.Ключ = Перечисления.ОперацииУчетаСебестоимости.СписаниеНаДругиеПартии Тогда
			ОтразитьОперациюСебестоимостиСписаниеНаДругиеПартии(ПараметрыОтражения);
		ИначеЕсли ТекущаяОперацияДокумента.Ключ = Перечисления.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы Тогда
			ОтразитьОперациюСебестоимостиСписаниеНаРасходыАктивы(ПараметрыОтражения);
		КонецЕсли;
		
	КонецЦикла;
	
	// Добавим текст запроса выборки данных документа (или формирования ВТОперацииДокумента при использовании среднескользящей)
	ДобавитьТекстЗапросаФормированияДвижений(ПараметрыОтражения);
	
	Если ПараметрыОтражения.ИспользуетсяСреднескользящая Тогда
		
		// Рассчитываются дополнительные суммовые движения и формируется текст запроса выборки данных документа
		ДобавитьТекстЗапросаРасчетСреднескользящаяСтоимость(ПараметрыОтражения);
		ДобавитьТекстЗапросаДвиженияВыручкаИСебестоимостьПродаж(ПараметрыОтражения);
		ДобавитьТекстЗапросаКорДвиженияПрочиеРасходы(ПараметрыОтражения);
		ДобавитьТекстЗапросаКорДвиженияПрочиеДоходы(ПараметрыОтражения);
		ДобавитьТекстЗапросаКорДвиженияПрочиеАктивыПассивы(ПараметрыОтражения);
		ДобавитьТекстЗапросаКорДвиженияПоПрочимАктивамПассивам(ПараметрыОтражения);
		ДобавитьТекстЗапросаКорДвиженияНоменклатураДоходыРасходы(ПараметрыОтражения);
		ДобавитьТекстЗапросаКорДвиженияНоменклатураНоменклатура(ПараметрыОтражения);
		
	КонецЕсли;
	
	УстановитьДополнительныеПараметрыЗапроса(ПараметрыОтражения);
	
	// Дополним тексты запросов для проведения документа.
	ПроведениеДокументов.ДополнитьЗапросОтраженияДокумента(
		ПараметрыОтражения.Запрос,
		ПараметрыОтражения.ТекстыЗапроса,
		ПараметрыОтражения.ТекстыШаблоновОтражения,
		ПараметрыОтражения.ТекстыЗапросовДанныхДокумента,
		ПараметрыОтражения.ТекстыШаблоновВТ);
	
КонецПроцедуры

#Область Описание_ТекстыОперацийСебестоимость

// Описываются общие правила заполнения полей в движениях по регистру "Себестоимость товаров".
// 
// Правила заполнения поля "РазделУчета":
// - "МатериалыПринятыеВПереработку" - тип запасов "МатериалДавальца" и тип места хранения "Склад" или "Подразделение";
// - "МатериалыПринятыеВПереработкуКОформлениюСписания" - тип запасов "МатериалДавальца" и только для следующих хоз. операций:
// 		СписаниеТоваровДавальцаЗаСчетДавальца,
// 		СписаниеТоваровДавальцаНаРасходы;
// - "МатериалыПринятыеВПереработкуПереданныеПартнерам" - тип запасов "МатериалДавальца" и тип места хранения "Договор"
// 	с типом договора "СПереработчиком2_5" или "СПереработчиком2_5_ЕАЭС";
// - "НезавершенноеПроизводство" - если в поле "Партия" указана ссылка на справочник "ПартииПроизводства", партии
// 	производства могут быть отражены только в этом разделе учета;
// - "НеотфактурованныеПоставки" - тип запасов "СобственныйТоварПоНеотфактурованнойПоставке", но для услуг нельзя
// 	определить поэтому для них определяется по хоз. операциям:
// 		ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка,
// 		ЗакупкаУПоставщикаНеотфактурованнаяПоставка,
// 		ЗакупкаУПоставщикаФактуровкаПоставки,
// 		ЗакупкаВСтранахЕАЭСФактуровкаПоставки;
// - "ПроизводственныеЗатраты" - тип номенклатуры "Работа" или "Услуга", или тип места хранения "Склад" с реквизитом
// 	"ЦеховаяКладовая" = Истина, или тип места хранения "Подразделение";
// - "СобственныеТоварыВПути" - тип запасов "СобственныйТоварВПути";
// - "СобственныеТоварыПереданныеПартнерам" - тип места хранения "Договор" с типом договора "СХранителем";
// - "ТоварыВПути" - определеяется только по хоз. операции "РеализацияБезПереходаПраваСобственности";
// - "ТоварыНаСкладах" - тип запасов "Товар" и тип места хранения "Склад", как правило, устанавливается тогда, когда
// 	остальные варианты не подошли;
// - "ТоварыНаХраненииСПравомПродажи" - тип запасов "ТоварНаХраненииСПравомПродажи" и тип места хранения не "Договор";
// - "ТоварыНаХраненииСПравомПродажиКОформлениюСписания" - тип запасов "ТоварНаХраненииСПравомПродажи" и только для следующих хоз. операций:
// 		ОприходованиеИзлишковТоваровВПользуПоклажедателя,
// 		СписаниеПринятыхТоваровЗаСчетПоклажедателя,
// 		СписаниеПринятыхТоваровНаРасходы,
// 		СписаниеТоваров,
// 		СписаниеНедостачЗаСчетПоклажедателя,
// 		СписаниеТоваровУПереработчика,
// 		ПересортицаТоваров,
// 		ПересортицаТоваровСПереоценкой,
// 		ПорчаТоваров,
// 		ПорчаТоваровСПереоценкой;
// - "ТоварыНаХраненииСПравомПродажиПереданныеПартнерам" - тип запасов "ТоварНаХраненииСПравомПродажи" и тип места
// 	хранения "Договор" с типом договора не "СПереработчиком2_5" и не "СПереработчиком2_5_ЕАЭС";
// - "ТоварыПереданныеНаКомиссию" - тип запасов "Товар" и тип места хранения "Договор" с типом "СКомиссионером".
// 	Такое определение справедливо только для новой комиссии, для старой комиссии возможно определение только по хоз. операциям:
// 		ВводОстатковТоваровПереданныхНаКомиссию,
// 		ОприходованиеИзлишковТоваровВПользуКомитента,
// 		СписаниеНедостачЗаСчетКомитента,
// 		СписаниеТоваровУКомиссионера,
// 		РеализацияЧерезКомиссионера,
// 		РеализацияЧерезКомиссионераБезПереходаПраваСобственности,
// 		ВозвратТоваровЧерезКомиссионера,
// 		ВозвратОтКомиссионера,
// 		ПередачаНаКомиссию,
// 		ПередачаНаКомиссиюВДругуюОрганизацию,
// 		ОтчетКомиссионера,
// 		ОтчетКомиссионераОСписании;
// - "ТоварыПереданныеНаКомиссиюВПути" - определяется только по хоз. операции "РеализацияЧерезКомиссионераБезПереходаПраваСобственности";
// - "ТоварыПереданныеПереработчику" - тип места хранения "Договор" с типом договора "СПереработчиком2_5" и "СПереработчиком2_5_ЕАЭС",
// 	при этом тип номенклатуры не работа и не услуга.
// 	Такое определение справедливо только для новой переработки, для старой переработки возможно определение только по хоз. операциям:
// 		ВводОстатковМатериаловПереданныхПереработчикам,
// 		ПересортицаТоваровУПереработчика,
// 		СписаниеТоваровУПереработчика,
// 		ВозвратОтПереработчика,
// 		ПоступлениеОтПереработчика,
// 		ПорчаТоваровУПереработчика,
// 		ПередачаПереработчику,
// 		ВыкупТоваровПереработчиком;
// - "ТоварыПринятыеНаКомиссию" - тип запасов "КомиссионныйТовар";
// - "ТоварыПринятыеНаКомиссиюВПути" - тип запасов "КомиссионныйТовар" и только для следующих хоз. операций:
// 		РеализацияБезПереходаПраваСобственности,
// 		РеализацияЧерезКомиссионераБезПереходаПраваСобственности;
// - "ТоварыПринятыеНаОтветхранение" - тип запасов "ПолуфабрикатДавальца" или "ПродукцияДавальца" и тип места хранения "Склад" или "Подразделение";
// - "ТоварыПринятыеНаОтветхранениеКОформлениюСписания" - тип запасов "ПолуфабрикатДавальца" или "ПродукцияДавальца" и только для следующих хоз. операций:
// 		СписаниеТоваровДавальцаЗаСчетДавальца,
// 		СписаниеТоваровДавальцаНаРасходы;
// - "ТоварыПринятыеНаОтветхранениеПереданныеПартнерам" - тип запасов "ПолуфабрикатДавальца" или "ПродукцияДавальца"
// 	и тип места хранения "Договор" с типом договора "СПереработчиком2_5" или "СПереработчиком2_5_ЕАЭС".

#КонецОбласти

Процедура ОтразитьОперациюСебестоимостиВнешнееПоступление(ПараметрыОтражения)
	
	// Сформируем шаблон текста запроса для отражения операции.
	ТекстЗапросаОтражения =
	"ВЫБРАТЬ
	|	ДанныеДокумента.НомерОперации КАК НомерОперации,
	// Описание документа
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка))
	|		  И ДанныеДокумента.ЕстьПолеЗапроса_РазделУчета
	|		  И ДанныеДокумента.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику))
	|		  И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В (ТИП(Документ.ПриобретениеТоваровУслуг))
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ									КАК ВидДвижения,
	|	ДанныеДокумента.Период 					КАК Период,
	|
	// Поля учета номенклатуры
	|	ДанныеДокумента.Организация 															КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		  ИЛИ ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			  И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ВидЗапасов
	|	КОНЕЦ									КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_РазделУчета
	|			ТОГДА ДанныеДокумента.РазделУчета
	|		КОГДА ДанныеДокумента.Расчетное_РазделУчета <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДокумента.Расчетное_РазделУчета
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В (ТИП(Документ.ВводОстатковТоваров), ТИП(Документ.ВводОстатков))
	|		  И ДанныеДокумента.ХозяйственнаяОперацияДокумента = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПринятыхНаОтветственноеХранение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В (ТИП(Документ.ВводОстатковТоваров), ТИП(Документ.ВводОстатков))
	|		  И ДанныеДокумента.ХозяйственнаяОперацияДокумента = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В (ТИП(Документ.ВводОстатковТоваров), ТИП(Документ.ВводОстатков))
	|		 И ДанныеДокумента.ХозяйственнаяОперацияДокумента = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В (ТИП(Документ.ВводОстатковТоваров), ТИП(Документ.ВводОстатков))
	|		  И ДанныеДокумента.ХозяйственнаяОперацияДокумента = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	//++ Устарело_Переработка24
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В (ТИП(Документ.ВводОстатковТоваров), ТИП(Документ.ВводОстатков))
	|		  И ДанныеДокумента.ХозяйственнаяОперацияДокумента = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхПереработчикам)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	//-- Устарело_Переработка24
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаХранениеСПравомПродажи),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемкаПодПринципала))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.АналитикаУчетаНоменклатурыИсходнаяНазначениеТипНазначения, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыНазначений.ПоставкаПодПринципала)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварВПути)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ИЛИ ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая
	|			ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ 																					КАК РазделУчета,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорРазделУчета
	|		ТОГДА ДанныеДокумента.КорРазделУчета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК КорРазделУчета,
	|
	// Корреспондирующие поля
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК КорАналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК КорАналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		  ИЛИ ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			  И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.КорВидЗапасов
	|	КОНЕЦ 																					КАК КорВидЗапасов,
	|
	// Прочие поля
	|	ДанныеДокумента.ХозяйственнаяОперация 													КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение 															КАК Подразделение,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_АналитикаУчетаПоПартнерам
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПоПартнерам
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК АналитикаУчетаПоПартнерам,
	|
	// Количественные и суммовые показатели
	|	ДанныеДокумента.Количество 						КАК Количество,
	|	(ВЫБОР
	// При передаче между организациями стоимость заполняется, если организация-отправитель применяет метод оценки стоимости,
	// отличный от среднескользящей, а организация-получатель применяет среднескольящую.
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорОрганизация
	|			ТОГДА (ВЫБОР КОГДА ДанныеДокумента.УчетныеПолитикиОрганизацийСреднескользящаяОценка
	|		 	 	 И НЕ ЕСТЬNULL(ДанныеДокумента.КорУчетныеПолитикиОрганизацийСреднескользящаяОценка, ЛОЖЬ)
	|					ТОГДА ДанныеДокумента.Стоимость ИНАЧЕ 0 КОНЕЦ)
	|		ИНАЧЕ ДанныеДокумента.Стоимость КОНЕЦ)		КАК Стоимость,
	|	(ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорОрганизация
	|			ТОГДА (ВЫБОР КОГДА ДанныеДокумента.УчетныеПолитикиОрганизацийСреднескользящаяОценка
	|		 	 	 И НЕ ЕСТЬNULL(ДанныеДокумента.КорУчетныеПолитикиОрганизацийСреднескользящаяОценка, ЛОЖЬ)
	|					ТОГДА ДанныеДокумента.СтоимостьБезНДС ИНАЧЕ 0 КОНЕЦ)
	|		ИНАЧЕ ДанныеДокумента.СтоимостьБезНДС КОНЕЦ) КАК СтоимостьБезНДС,
	|	ДанныеДокумента.СтоимостьРегл					КАК СтоимостьРегл,
	|	ДанныеДокумента.НДСРегл							КАК НДСРегл,
	|	ВЫБОР КОГДА &Константа_ВестиУправленческийУчетОрганизаций
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаНачалаВеденияУправленческогоУчетаОрганизаций, МЕСЯЦ)
	|	  И &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.СтоимостьУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК СтоимостьУпр,
	|	ДанныеДокумента.НДСУпр							КАК НДСУпр,
	|	ДанныеДокумента.СтоимостьЗабалансовая			КАК СтоимостьЗабалансовая,
	|	ДанныеДокумента.СтоимостьЗабалансоваяРегл		КАК СтоимостьЗабалансоваяРегл,
	|	ДанныеДокумента.ДопРасходы						КАК ДопРасходы,
	|	ДанныеДокумента.ДопРасходыБезНДС				КАК ДопРасходыБезНДС,
	|	ДанныеДокумента.ДопРасходыРегл					КАК ДопРасходыРегл,
	|	ВЫБОР КОГДА &Константа_ВестиУправленческийУчетОрганизаций
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаНачалаВеденияУправленческогоУчетаОрганизаций, МЕСЯЦ)
	|	  И &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ДопРасходыУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК ДопРасходыУпр,
	|	ДанныеДокумента.ПостояннаяРазница				КАК ПостояннаяРазница,
	|	ДанныеДокумента.ВременнаяРазница				КАК ВременнаяРазница,
	// Стоимость НДД формируется по правилам стоимости НУ См. РасчетСебестоимостиНДД.ПодставитьСтоимостьНДДВЗапрос
	|	&СтоимостьНДД 									КАК СтоимостьНДД,
	|	ДанныеДокумента.РезервПодОбесценениеРегл		КАК РезервПодОбесценениеРегл,
	|	ВЫБОР КОГДА &Константа_ВестиУправленческийУчетОрганизаций
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаНачалаВеденияУправленческогоУчетаОрганизаций, МЕСЯЦ)
	|	  И &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.РезервПодОбесценениеУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК РезервПодОбесценениеУпр,
	|	ДанныеДокумента.КорСтоимость					КАК КорСтоимость,
	|
	// Поля партионного учета версии 2.2
	// Поля "Партия" и "Аналитика учета партий" заполняются всегда в разделах "Неотфактурованные поставки" и "Собственные товары в пути (от поставщиков)".
	// Для товаров раздел учета определяется по типу запасов, для работ и услуг - по разделу учета, определяемому в документе. 
	|	ВЫБОР
	|		КОГДА &Константа_ПартионныйУчетВерсии22
	|	  	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|	  	  И ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|	 	  ИЛИ ЕСТЬNULL(ДанныеДокумента.ВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварВПути)
	|	 	  ИЛИ ЕСТЬNULL(ДанныеДокумента.ВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке)
	|		  ИЛИ ДанныеДокумента.ЕстьПолеЗапроса_РазделУчета
	|			И ДанныеДокумента.РазделУчета В (
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки),
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути))
	|			ТОГДА ДанныеДокумента.Партия
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК Партия,
	|	ВЫБОР
	|		КОГДА &Константа_ПартионныйУчетВерсии22
	|		  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		  И ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|	 	  ИЛИ ЕСТЬNULL(ДанныеДокумента.ВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварВПути)
	|	 	  ИЛИ ЕСТЬNULL(ДанныеДокумента.ВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке)
	|		  ИЛИ ДанныеДокумента.ЕстьПолеЗапроса_РазделУчета
	|			И ДанныеДокумента.РазделУчета В (
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки),
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути))
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаУчетаПартий,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	// Причина НЕ перед ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка:
	// При учете по средней стоимости, КорАналитикаУчетаПартий заполняется, она используется для целей учета НДС
	|	  И НЕ ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|			ТОГДА ДанныеДокумента.КорАналитикаУчетаПартий
	|	  КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ДополнительныеРасходыСПартией),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ДополнительныеРасходыБезПартии),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями))
	|			ТОГДА ДанныеДокумента.КорАналитикаУчетаПартий
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК КорАналитикаУчетаПартий,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|			И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		КОГДА &Константа_ПартионныйУчетВерсии22 И ДанныеДокумента.ХозяйственнаяОперацияДокумента = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковСобственныхТоваров) 
	|		ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|		И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|	ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|	ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаФинансовогоУчетаДокумента,
	|	ВЫБОР КОГДА НЕ &Константа_ПартионныйУчетВерсии22
	|	  ИЛИ ДанныеДокумента.Период < НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ВидДеятельностиНДС
	|	КОНЕЦ 																				КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДСДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК ВидДеятельностиНДСДокумента,
	|	ВЫБОР
	|	  КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ДополнительныеРасходыСПартией),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ДополнительныеРасходыБезПартии),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки))
	|			ТОГДА ДанныеДокумента.ВидДеятельностиНДС
	|	  КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка))
	|			ТОГДА ВЫБОР КОГДА &Константа_ИспользоватьУчетНДС
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|			КОНЕЦ
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК КорВидДеятельностиНДС,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ТипЗаписи
	|			ТОГДА ДанныеДокумента.ТипЗаписи
	//++ Локализация
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) = ТИП(Документ.ЗаявлениеОВвозеТоваров)
	|			ТОГДА ВЫБОР
	|				КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией)
	|				КОГДА НАЧАЛОПЕРИОДА(ДанныеДокумента.ПериодДокументаИсточника, МЕСЯЦ) < НАЧАЛОПЕРИОДА(ДанныеДокумента.Период, МЕСЯЦ)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаСтоимости)
	|				КОНЕЦ
	//-- Локализация
	
	// Заполнение типа записей для неотфактурованной поставки
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	// При коррективки стоимости тип записи должен быть "Доп расходы (указана партия)", т.к. при такой корректировке заполнение
	// партионных измерений в себестоимости товаров нужно выполнить по движениям документа - источника (документа 
	// приобретения товаров и услуг на фактуровку поставки).
	|		КОГДА (ЕСТЬNULL(ДанныеДокумента.ВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке)
	|		 ИЛИ ДанныеДокумента.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки))) // для работ и услуг
	|		 И ДанныеДокумента.Количество = 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией)
	// При фактуровке поставки тип записи должен быть "Потребление", т.к. для фактуровки подбирается партия, образованная
	// документами "Поступление товаров на склад" и "Поступление услуг в подразделение". 
	|		КОГДА (ЕСТЬNULL(ДанныеДокумента.ВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке) 
	|		 ИЛИ ДанныеДокумента.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки))) // для работ и услуг
	|		 И ДанныеДокумента.Количество > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	// При уменьшении количества фактуровки поставки тип записи должен быть "Стороно потребления", т.к. для такой корректировки подбираются
	// партии, списанные документом - основанием "Приобретение товаров и услуг".
	|		КОГДА (ЕСТЬNULL(ДанныеДокумента.ВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке) 
	|		 ИЛИ ДанныеДокумента.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки))) // для работ и услуг
	|		 И ДанныеДокумента.Количество < 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СторноПотребления)
	|
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ДополнительныеРасходыБезПартии)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ДополнительныеРасходыСПартией)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику))
	|		  И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В (
	|				ТИП(Документ.ПриобретениеТоваровУслуг))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|		  И ДанныеДокумента.Количество = 0
	|		  И ДанныеДокумента.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаСтоимости)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|		  И ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		  И &Константа_ПартионныйУчетВерсии22
	|	  	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаПриобретенияПрошлогоПериода)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПоВозврату),
	//++ Устарело_Переработка24
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтДавальца),
	//-- Устарело_Переработка24
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтДавальца2_5))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|		КОГДА &Константа_ПартионныйУчетВерсии22
	|	  	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		  ИЛИ ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В (
	|			ТИП(Документ.ВводОстатков),
	|			ТИП(Документ.КорректировкаПриобретения))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПустаяСсылка)
	|	КОНЕЦ																				КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВнешнееПоступление) 				КАК ОперацияУчетаСебестоимости,
	|	ВЫБОР
	|		КОГДА ЛОЖЬ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ДокументИсточник
	|	КОНЕЦ																				КАК ДокументИсточник,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПоВозврату))
	|			ТОГДА ДанныеДокумента.Ссылка
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК ДокументДвижения,
	|	ДанныеДокумента.ИдентификаторСтроки 						  						КАК ИдентификаторСтроки,
	|	ДанныеДокумента.ИдентификаторФинЗаписи 						  						КАК ИдентификаторФинЗаписи,
	|	ДанныеДокумента.НастройкаХозяйственнойОперации 				  						КАК НастройкаХозяйственнойОперации,
	// Необязательные поля
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовСписания) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ДанныеДокумента.СтатьяРасходовСписания
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК СтатьяРасходовСписания,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовСписания) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ДанныеДокумента.АналитикаРасходов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК АналитикаРасходов,
	|	ДанныеДокумента.КорНаправлениеДеятельности			    								КАК КорНаправлениеДеятельности,
	|	ДанныеДокумента.УчетныеПолитикиМетодОценкиСтоимостиТоваров								КАК МетодОценкиСтоимостиТоваров,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ИзДокумента) 				КАК СпособОпределенияСебестоимости
	|ПОМЕСТИТЬ ВТОперация_ВнешнееПоступление
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВнешнееПоступление)
	|";
	
	РасчетСебестоимостиЛокализация.ПодставитьСтоимостьНДДВЗапрос(ТекстЗапросаОтражения, "ВТОперация_ВнешнееПоступление");
	
	ТекстЗапросаОтражения = СтрЗаменить(ТекстЗапросаОтражения, "&СтоимостьНДД", "0");
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТОперация_ВнешнееПоступление", ТекстЗапросаОтражения);
	
КонецПроцедуры

Процедура ОтразитьОперациюСебестоимостиВнутреннееПоступление(ПараметрыОтражения)
	
	// Сформируем шаблон текста запроса для отражения операции.
	ТекстЗапросаОтражения =
	"ВЫБРАТЬ
	|	ДанныеДокумента.НомерОперации КАК НомерОперации,
	// Описание документа
	|	ВЫБОР
	|		КОГДА ЛОЖЬ
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ									КАК ВидДвижения,
	|	ДанныеДокумента.Период 					КАК Период,
	|
	// Поля учета номенклатуры
	|	ДанныеДокумента.Организация 															КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ВидЗапасов
	|	КОНЕЦ																					КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_РазделУчета
	|			ТОГДА ДанныеДокумента.РазделУчета
	|		КОГДА ДанныеДокумента.Расчетное_РазделУчета <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДокумента.Расчетное_РазделУчета
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В (ТИП(Документ.ВводОстатковТоваров), ТИП(Документ.ВводОстатков))
	|		  И ДанныеДокумента.ХозяйственнаяОперацияДокумента = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПринятыхНаОтветственноеХранение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В (ТИП(Документ.ВводОстатковТоваров), ТИП(Документ.ВводОстатков))
	|		  И ДанныеДокумента.ХозяйственнаяОперацияДокумента = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПереданныхНаКомиссию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В (ТИП(Документ.ВводОстатковТоваров), ТИП(Документ.ВводОстатков))
	|		 И ДанныеДокумента.ХозяйственнаяОперацияДокумента = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковТоваровПолученныхНаКомиссию) 
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В (ТИП(Документ.ВводОстатковТоваров), ТИП(Документ.ВводОстатков))
	|		  И ДанныеДокумента.ХозяйственнаяОперацияДокумента = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВводОстатковМатериаловПереданныхВПроизводство)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперацияДокумента В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровУХранителя))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеИзлишковТоваровВПользуКомитента))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперацияДокумента В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровУХранителя),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровУПереработчика))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам)
	|					КОГДА ДанныеДокумента.ХозяйственнаяОперацияДокумента В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровУХранителя))
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		 ИЛИ ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		 ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая
	|		 ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ 																					КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорРазделУчета
	|			ТОГДА ДанныеДокумента.КорРазделУчета
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК КорРазделУчета,
	|
	// Корреспондирующие поля
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК КорАналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК КорАналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.КорВидЗапасов
	|	КОНЕЦ																					КАК КорВидЗапасов,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорПартия
	|		ТОГДА ДанныеДокумента.КорПартия
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК КорПартия,
	|
	// Прочие поля
	|	ДанныеДокумента.ХозяйственнаяОперация 													КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение 															КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ЛОЖЬ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            										КАК ГруппаПродукции,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_АналитикаУчетаПоПартнерам
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПоПартнерам
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК АналитикаУчетаПоПартнерам,
	|	ВЫБОР
	|		КОГДА ЛОЖЬ
	|			ТОГДА 0
	|			ИНАЧЕ 0
	|	КОНЕЦ																					КАК КодСтроки,
	|
	// Количественные и суммовые показатели
	|	ДанныеДокумента.Количество 						КАК Количество,
	|	(ВЫБОР
	// Плановая стоимость выпущенной продукции отражается отдельным движениям.
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ТОГДА 0
	|		ИНАЧЕ ДанныеДокумента.Стоимость КОНЕЦ)		КАК Стоимость,
	|	(ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ТОГДА 0
	|		ИНАЧЕ ДанныеДокумента.СтоимостьБезНДС КОНЕЦ) КАК СтоимостьБезНДС,
	|	(ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ТОГДА 0
	|		ИНАЧЕ ДанныеДокумента.СтоимостьРегл КОНЕЦ)	КАК СтоимостьРегл,
	|	ДанныеДокумента.НДСРегл							КАК НДСРегл,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ТОГДА 0 
	|		КОГДА &Константа_ВестиУправленческийУчетОрганизаций
	|		 И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаНачалаВеденияУправленческогоУчетаОрганизаций, МЕСЯЦ)
	|		 И &Константа_ПартионныйУчетВерсии22
	|		 И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА ДанныеДокумента.СтоимостьУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК СтоимостьУпр,
	|	ДанныеДокумента.НДСУпр							КАК НДСУпр,
	|	(ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ТОГДА 0
	|		ИНАЧЕ ДанныеДокумента.СтоимостьЗабалансовая КОНЕЦ) КАК СтоимостьЗабалансовая,
	|	(ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ТОГДА 0
	|		ИНАЧЕ ДанныеДокумента.СтоимостьЗабалансоваяРегл КОНЕЦ) КАК СтоимостьЗабалансоваяРегл,
	|	ДанныеДокумента.ДопРасходы						КАК ДопРасходы,
	|	ДанныеДокумента.ДопРасходыБезНДС				КАК ДопРасходыБезНДС,
	|	ДанныеДокумента.ДопРасходыРегл					КАК ДопРасходыРегл,
	|	ВЫБОР КОГДА &Константа_ВестиУправленческийУчетОрганизаций
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаНачалаВеденияУправленческогоУчетаОрганизаций, МЕСЯЦ)
	|	  И &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ДопРасходыУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК ДопРасходыУпр,
	|	(ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ТОГДА 0
	|		ИНАЧЕ ДанныеДокумента.ПостояннаяРазница КОНЕЦ) КАК ПостояннаяРазница,
	|	(ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|			ТОГДА 0
	|		ИНАЧЕ ДанныеДокумента.ВременнаяРазница КОНЕЦ) КАК ВременнаяРазница,
	// Стоимость НДД формируется по правилам стоимости НУ См. РасчетСебестоимостиНДД.ПодставитьСтоимостьНДДВЗапрос
	|	&СтоимостьНДД 									КАК СтоимостьНДД,
	|	ДанныеДокумента.РезервПодОбесценениеРегл		КАК РезервПодОбесценениеРегл,
	|	ВЫБОР КОГДА &Константа_ВестиУправленческийУчетОрганизаций
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаНачалаВеденияУправленческогоУчетаОрганизаций, МЕСЯЦ)
	|	  И &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.РезервПодОбесценениеУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК РезервПодОбесценениеУпр,
	|	ДанныеДокумента.КорСтоимость					КАК КорСтоимость,
	|
	// Поля партионного учета версии 2.2
	|	ВЫБОР
	|		КОГДА &Константа_ПартионныйУчетВерсии22
	|				И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|				И ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|			ТОГДА ДанныеДокумента.Партия
	|
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК Партия,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|	  И ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаУчетаПартий,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА ДанныеДокумента.КорАналитикаУчетаПартий
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК КорАналитикаУчетаПартий,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	 И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ) ТОГДА
	|		(ВЫБОР
	|			КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|					ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|					ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер))
	|				И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|			ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|			КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|					ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|					ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер))
	|				И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|			ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																				КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|			И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаФинансовогоУчетаДокумента,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|			И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР
	|				КОГДА ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО ТОГДА
	|					НЕОПРЕДЕЛЕНО
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКорКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКорКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|						ИЛИ ДанныеДокумента.СпрКорКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.КорГруппаПродукции) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|					И ДанныеДокумента.КорГруппаПродукции <> ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|				ТОГДА ДанныеДокумента.КорГруппаПродукции
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКорКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКорКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|						ИЛИ ДанныеДокумента.СпрКорКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.КорГруппаПродукции) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.КорГруппаПродукции
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|	  И ЕСТЬNULL(ДанныеДокумента.ВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДСДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК ВидДеятельностиНДСДокумента,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорВидДеятельностиНДС
	|			ТОГДА ДанныеДокумента.КорВидДеятельностиНДС
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|		  ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции))
	|			ТОГДА ДанныеДокумента.ВидДеятельностиНДС
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК КорВидДеятельностиНДС,
	|
	|	ВЫБОР
	// Тип записи определяется в процедуре ОписаниеОперацийУчетаСебестоимости у следующих документов:
	//	- ОтчетПереработчика
	//	- ОтчетПереработчика2_5 
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ТипЗаписи
	|			ТОГДА ДанныеДокумента.ТипЗаписи
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|		  И ДанныеДокумента.Количество = 0
	|		  И ДанныеДокумента.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаСтоимости)		
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|	КОНЕЦ																				КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВнутреннееПоступление) 			КАК ОперацияУчетаСебестоимости,
	|	ВЫБОР
	|		КОГДА ЛОЖЬ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ДокументИсточник
	|	КОНЕЦ																				КАК ДокументИсточник,
	|	ВЫБОР
	|		КОГДА ЛОЖЬ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																				КАК ДокументДвижения,
	|	ДанныеДокумента.ИдентификаторСтроки 												КАК ИдентификаторСтроки,
	|	ДанныеДокумента.ИдентификаторФинЗаписи												КАК ИдентификаторФинЗаписи,
	|	ДанныеДокумента.НастройкаХозяйственнойОперации 										КАК НастройкаХозяйственнойОперации,
	|	ДанныеДокумента.УчетныеПолитикиМетодОценкиСтоимостиТоваров							КАК МетодОценкиСтоимостиТоваров,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ИзДокумента) 			КАК СпособОпределенияСебестоимости
	|ПОМЕСТИТЬ ВТОперация_ВнутреннееПоступление
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ НастройкиПризнанияРасходовНДД КАК НастройкиПризнанияРасходовНДДПоПодразделению
	|		ПО ДанныеДокумента.Организация = НастройкиПризнанияРасходовНДДПоПодразделению.Организация
	|		И ДанныеДокумента.Подразделение = НастройкиПризнанияРасходовНДДПоПодразделению.ОбъектРаздельногоУчетаНДД
	|		И НастройкиПризнанияРасходовНДДПоПодразделению.РасходыВключаютсяВСтоимость
	|	ЛЕВОЕ СОЕДИНЕНИЕ НастройкиПризнанияРасходовНДД КАК НастройкиПризнанияРасходовНДДПоНаправлениюДеятельности
	|		ПО ДанныеДокумента.Организация = НастройкиПризнанияРасходовНДДПоНаправлениюДеятельности.Организация
	|		И ДанныеДокумента.АналитикаУчетаНоменклатурыНазначениеНаправлениеДеятельности = НастройкиПризнанияРасходовНДДПоНаправлениюДеятельности.ОбъектРаздельногоУчетаНДД
	|		И НастройкиПризнанияРасходовНДДПоНаправлениюДеятельности.РасходыВключаютсяВСтоимость
	|ГДЕ
	|	ДанныеДокумента.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВнутреннееПоступление)
	|
	// Плановую стоимость выпуска выделяем отдельным движением, т.к. для этой записи нет корреспондирующего движения и
	// плановая стоимость сторнируется после расчета. 
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.НомерОперации КАК НомерОперации,
	// Описание документа
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	ДанныеДокумента.Период 					КАК Период,
	|
	// Поля учета номенклатуры
	|	ДанныеДокумента.Организация 															КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ВидЗапасов
	|	КОНЕЦ 																					КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_РазделУчета
	|			ТОГДА ДанныеДокумента.РазделУчета
	|		КОГДА ДанныеДокумента.Расчетное_РазделУчета <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДокумента.Расчетное_РазделУчета
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		 ИЛИ ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		 ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая
	|		 ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ 																					КАК РазделУчета,
	|	НЕОПРЕДЕЛЕНО																			КАК КорРазделУчета,
	|
	// Корреспондирующие поля
	|	НЕОПРЕДЕЛЕНО 																			КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО 																			КАК КорАналитикаУчетаНоменклатурыИсходная,
	|	НЕОПРЕДЕЛЕНО 																			КАК КорВидЗапасов,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорПартия
	|		ТОГДА ДанныеДокумента.КорПартия
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК КорПартия,
	|
	// Прочие поля
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеПлановойСтоимостиВыпуска)			КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение 															КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ЛОЖЬ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            										КАК ГруппаПродукции,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_АналитикаУчетаПоПартнерам
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПоПартнерам
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК АналитикаУчетаПоПартнерам,
	|	0																						КАК КодСтроки,
	|
	// Количественные и суммовые показатели
	|	0												КАК Количество,
	|	ДанныеДокумента.Стоимость						КАК Стоимость,
	|	ДанныеДокумента.СтоимостьБезНДС					КАК СтоимостьБезНДС,
	|	ДанныеДокумента.СтоимостьРегл					КАК СтоимостьРегл,
	|	0												КАК НДСРегл,
	|	ВЫБОР КОГДА &Константа_ВестиУправленческийУчетОрганизаций
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаНачалаВеденияУправленческогоУчетаОрганизаций, МЕСЯЦ)
	|	  И &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.СтоимостьУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК СтоимостьУпр,
	|	0												КАК НДСУпр,
	|	ДанныеДокумента.СтоимостьЗабалансовая			КАК СтоимостьЗабалансовая,
	|	ДанныеДокумента.СтоимостьЗабалансоваяРегл		КАК СтоимостьЗабалансоваяРегл,
	|	0												КАК ДопРасходы,
	|	0												КАК ДопРасходыБезНДС,
	|	0												КАК ДопРасходыРегл,
	|	0	 											КАК ДопРасходыУпр,
	|	ДанныеДокумента.ПостояннаяРазница				КАК ПостояннаяРазница,
	|	ДанныеДокумента.ВременнаяРазница				КАК ВременнаяРазница,
	|	0												КАК РезервПодОбесценениеРегл,
	|	0	 											КАК РезервПодОбесценениеУпр,
	|	0 												КАК СтоимостьНДД,
	|	ДанныеДокумента.КорСтоимость					КАК КорСтоимость,
	|
	// Поля партионного учета версии 2.2
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	 И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|	 И ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|		ТОГДА ДанныеДокумента.Партия
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК Партия,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|	  И ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаУчетаПартий,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА ДанныеДокумента.КорАналитикаУчетаПартий
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК КорАналитикаУчетаПартий,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|		И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ) 
	|		ТОГДА
	|			(ВЫБОР
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|		И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА
	|			(ВЫБОР
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаФинансовогоУчетаДокумента,
	|	НЕОПРЕДЕЛЕНО																		КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДС
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО																		КАК ВидДеятельностиНДСДокумента,
	|	НЕОПРЕДЕЛЕНО																		КАК КорВидДеятельностиНДС,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)										КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВнутреннееПоступление) 			КАК ОперацияУчетаСебестоимости,
	|	НЕОПРЕДЕЛЕНО																		КАК ДокументИсточник,
	|	ДанныеДокумента.Ссылка																КАК ДокументДвижения,
	|	ДанныеДокумента.ИдентификаторСтроки 						  						КАК ИдентификаторСтроки,
	|	ДанныеДокумента.ИдентификаторФинЗаписи 						  						КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтражениеПлановойСтоимостиВыпуска) КАК НастройкаХозяйственнойОперации,
	|	ДанныеДокумента.УчетныеПолитикиМетодОценкиСтоимостиТоваров							КАК МетодОценкиСтоимостиТоваров,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ИзДокумента) 			КАК СпособОпределенияСебестоимости
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ НастройкиПризнанияРасходовНДД КАК НастройкиПризнанияРасходовНДДПоПодразделению
	|		ПО ДанныеДокумента.Организация = НастройкиПризнанияРасходовНДДПоПодразделению.Организация
	|		И ДанныеДокумента.Подразделение = НастройкиПризнанияРасходовНДДПоПодразделению.ОбъектРаздельногоУчетаНДД
	|		И НастройкиПризнанияРасходовНДДПоПодразделению.РасходыВключаютсяВСтоимость
	|	ЛЕВОЕ СОЕДИНЕНИЕ НастройкиПризнанияРасходовНДД КАК НастройкиПризнанияРасходовНДДПоНаправлениюДеятельности
	|		ПО ДанныеДокумента.Организация = НастройкиПризнанияРасходовНДДПоНаправлениюДеятельности.Организация
	|		И ДанныеДокумента.АналитикаУчетаНоменклатурыНазначениеНаправлениеДеятельности = НастройкиПризнанияРасходовНДДПоНаправлениюДеятельности.ОбъектРаздельногоУчетаНДД
	|		И НастройкиПризнанияРасходовНДДПоНаправлениюДеятельности.РасходыВключаютсяВСтоимость
	|ГДЕ
	|	ДанныеДокумента.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВнутреннееПоступление)
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	|	И (ДанныеДокумента.Стоимость <> 0 ИЛИ ДанныеДокумента.СтоимостьРегл <> 0)
	|";
	
	РасчетСебестоимостиЛокализация.ПодставитьСтоимостьНДДВЗапрос(ТекстЗапросаОтражения, "ВТОперация_ВнутреннееПоступление", Истина);
	
	ТекстЗапросаОтражения = СтрЗаменить(ТекстЗапросаОтражения, "&СтоимостьНДД", "0");
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТОперация_ВнутреннееПоступление", ТекстЗапросаОтражения);
	
КонецПроцедуры

Процедура ОтразитьОперациюСебестоимостиВыбытиеПоФиксированнойСтоимости(ПараметрыОтражения)
	
	// Сформируем шаблон текста запроса для отражения операции.
	ТекстЗапросаОтражения =
	"ВЫБРАТЬ
	|	ДанныеДокумента.НомерОперации КАК НомерОперации,
	// Описание документа
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов))
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ									КАК ВидДвижения,
	|	ДанныеДокумента.Период 					КАК Период,
	|
	// Поля учета номенклатуры
	|	ДанныеДокумента.Организация 															КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	// При списании комиссионного товара на расходы в движениях не заполняется вид запасов, т.к. в отчете комитенту о списании 
	// нельзя определить вид запасов, по которому было выполнено списание. У таких движений в типе места хранения указан партнер.
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		 И ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		  ИЛИ ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			  И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ДанныеДокумента.ВидЗапасов
	|	КОНЕЦ 																				КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_РазделУчета
	|			ТОГДА ДанныеДокумента.РазделУчета
	|		КОГДА ДанныеДокумента.Расчетное_РазделУчета <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДокумента.Расчетное_РазделУчета
	// Заполнение раздела учета для работ и услуг
	|		КОГДА (ДанныеДокумента.ВидЗапасовТипЗапасов ЕСТЬ NULL
	|		 ИЛИ ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Работа))
	|		 И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасхожденийПоступлениеПриобретение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		  ИЛИ ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперацияДокумента В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровУХранителя),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровУПереработчика),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровУХранителя),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровУПереработчика),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровУПереработчика))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам)
	|					КОГДА ДанныеДокумента.ХозяйственнаяОперацияДокумента В
	|					 (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровУХранителя),
	|					  ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровУХранителя))
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварВПути)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНедостачЗаСчетКомитента))
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияПереданнойВозвратнойТары),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТары),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТарыВозвратНаДругойСклад))
	|		 И ДанныеДокумента.ХозяйственнаяОперацияДокумента В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионера),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионера))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|		КОГДА ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая
	|			ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ 																					КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорРазделУчета
	|			ТОГДА ДанныеДокумента.КорРазделУчета
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК КорРазделУчета,
	|
	// Корреспондирующие поля
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК КорАналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК КорАналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		  ИЛИ ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			  И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.КорВидЗапасов
	|	КОНЕЦ 															КАК КорВидЗапасов,
	|
	// Прочие поля
	|	ДанныеДокумента.ХозяйственнаяОперация 													КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение 															КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ДанныеДокумента.СтатьяРасходовАктивов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК СтатьяРасходовСписания,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ДанныеДокумента.АналитикаРасходовАктивов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|			ТОГДА ДанныеДокумента.СтатьяРасходовАктивов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК СтатьяАктивовПассивов,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|			ТОГДА ДанныеДокумента.АналитикаРасходовАктивов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК АналитикаАктивовПассивов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_НастройкаСчетовУчета
	|		 И ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|			ТОГДА ДанныеДокумента.НастройкаСчетовУчета
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК НастройкаСчетовУчета,
	|	ДанныеДокумента.СтатьяДоходов 															КАК СтатьяДоходов,
	|	ДанныеДокумента.АналитикаДоходов 														КАК АналитикаДоходов,
	|	ДанныеДокумента.ПериодДокументаИсточника												КАК ПериодПродажи,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_АналитикаУчетаПоПартнерам
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПоПартнерам
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК АналитикаУчетаПоПартнерам,
	|
	// Количественные и суммовые показатели
	|	ДанныеДокумента.Количество 						КАК Количество,
	|	ДанныеДокумента.Стоимость 						КАК Стоимость,
	|	ДанныеДокумента.СтоимостьБезНДС 				КАК СтоимостьБезНДС,
	|	ДанныеДокумента.СтоимостьРегл 					КАК СтоимостьРегл,
	|	ВЫБОР КОГДА &Константа_ВестиУправленческийУчетОрганизаций
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаНачалаВеденияУправленческогоУчетаОрганизаций, МЕСЯЦ)
	|	  И &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.СтоимостьУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК СтоимостьУпр,
	|	ДанныеДокумента.КорСтоимость 					КАК КорСтоимость,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_СтоимостьЗабалансовая
	|		ТОГДА ДанныеДокумента.СтоимостьЗабалансовая
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК СтоимостьЗабалансовая,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_СтоимостьЗабалансоваяРегл
	|		ТОГДА ДанныеДокумента.СтоимостьЗабалансоваяРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ 											КАК СтоимостьЗабалансоваяРегл,
	|
	// Поля партионного учета версии 2.2
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|		И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаФинансовогоУчетаДокумента,
	|	ДанныеДокумента.ВидДеятельностиНДС													КАК КорВидДеятельностиНДС,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДСДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК ВидДеятельностиНДСДокумента,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ТипЗаписи
	|			ТОГДА ДанныеДокумента.ТипЗаписи
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТары))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Сторно) 
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТарыВозвратНаДругойСклад))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СторноВозвратНаДругойСклад)
	// Для товаров в пути от поставщиков при отрицательном количестве тип записи должен быть СписаниеОстаткаБезПартии.
	// См. описание в функции ОписаниеОперацийУчетаСебестоимости документа СписаниеРасхожденийПоступлениеПриобретение
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварВПути)
	|		 И ДанныеДокумента.Количество < 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписаниеОстаткаБезПартии)
	// При неотфактурованной поставке и положительном количестве тип записи должен быть СписаниеОстаткаБезПартии.
	// См. описание в функции ОписаниеОперацийУчетаСебестоимости документа СписаниеРасхожденийПоступлениеПриобретение
	|		КОГДА (ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке)
	|		 ИЛИ (ДанныеДокумента.ВидЗапасовТипЗапасов ЕСТЬ NULL
	|		 	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасхожденийПоступлениеПриобретение))
	|			)
	|		 И ДанныеДокумента.Количество > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписаниеОстаткаБезПартии)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|	КОНЕЦ														  						КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости) 	КАК ОперацияУчетаСебестоимости,
	|	ДанныеДокумента.ДокументИсточник 												  	КАК ДокументИсточник,
	|	ДанныеДокумента.ИдентификаторСтроки 						  						КАК ИдентификаторСтроки,
	|	ДанныеДокумента.ИдентификаторФинЗаписи 						  						КАК ИдентификаторФинЗаписи,
	|	ДанныеДокумента.НастройкаХозяйственнойОперации 				  						КАК НастройкаХозяйственнойОперации,
	|	ДанныеДокумента.УчетныеПолитикиМетодОценкиСтоимостиТоваров							КАК МетодОценкиСтоимостиТоваров,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ИзДокумента) 			КАК СпособОпределенияСебестоимости
	|ПОМЕСТИТЬ ВТОперация_ВыбытиеПоФиксированнойСтоимости
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
	|";
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТОперация_ВыбытиеПоФиксированнойСтоимости", ТекстЗапросаОтражения);
	
КонецПроцедуры

Процедура ОтразитьОперациюСебестоимостиПеремещение(ПараметрыОтражения)
	
	// Сформируем шаблон текста запроса для отражения операции.
	ТекстЗапросаОтражения =
	"
	// РАСХОД - списание у отправителя
	|ВЫБРАТЬ
	|	ДанныеДокумента.НомерОперации КАК НомерОперации,
	// Описание документа
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 	КАК ВидДвижения,
	|	ДанныеДокумента.Период 					КАК Период,
	|
	// Поля учета номенклатуры
	|	ДанныеДокумента.Организация 														КАК Организация,
	|	ВЫБОР КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		  И ЕСТЬNULL(ДанныеДокумента.КорВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		  И НЕ ДанныеДокумента.ХозяйственнаяОперация В
	|	  	    (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет))
	|		ТОГДА ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыКомитента, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ 																				КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		  И ЕСТЬNULL(ДанныеДокумента.КорВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		  И НЕ ДанныеДокумента.ХозяйственнаяОперация В
	|	  	    (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет))
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		 И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ВидЗапасов
	|	КОНЕЦ 																				КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_РазделУчета
	|			ТОГДА ДанныеДокумента.РазделУчета
	|		КОГДА ДанныеДокумента.Расчетное_РазделУчета <> НЕОПРЕДЕЛЕНО И НЕ
	//	Переопределяем раздел учета только тогда, когда у нас не переопределяется аналитика учета и вид запасов. Для комиссионного товара
	//	она переопределяется, а потому раздел учета, определенный по общим принципам, уже не подходит.
	|			(ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|				И ЕСТЬNULL(ДанныеДокумента.КорВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|				И НЕ ДанныеДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет)))
	|			ТОГДА ДанныеДокумента.Расчетное_РазделУчета
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ИЛИ ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет))
	|		  И ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		  И ЕСТЬNULL(ДанныеДокумента.КорВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНедостачЗаСчетКомитента))
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|				КОНЕЦ
	//++ Устарело_Переработка24
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	//-- Устарело_Переработка24
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуПодразделениями),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыВПути)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперацияДокумента В
	|				(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтХранителя),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровУХранителя),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровУХранителя),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНедостачЗаСчетПоклажедателя))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперацияДокумента В
	|				(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика2_5),
	//++ Устарело_Переработка24
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика),
	//-- Устарело_Переработка24
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика2_5),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровУПереработчика),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровУПереработчика),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровУПереработчика))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионера))
	|		И ДанныеДокумента.ВидЗапасовТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		  И ДанныеДокумента.КорВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		  И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В
	|			(ТИП(Документ.ПередачаТоваровМеждуОрганизациями),
	|			 ТИП(Документ.ВозвратТоваровОтКлиента),
	|			 ТИП(Документ.ВозвратТоваровМеждуОрганизациями))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|		КОГДА ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая
	|				ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ 																				КАК РазделУчета,
	|
	// Корреспондирующие поля
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорРазделУчета
	|			ТОГДА ДанныеДокумента.КорРазделУчета
	|		КОГДА ДанныеДокумента.Расчетное_КорРазделУчета <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДокумента.Расчетное_КорРазделУчета
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ИЛИ ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	// Товар на хранении с правом продажи
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		 И ДанныеДокумента.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваров),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваров),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровСПереоценкой),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНедостачЗаСчетПоклажедателя),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеИзлишковТоваровВПользуПоклажедателя),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровУПереработчика))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиКОформлениюСписания)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперацияДокумента В
	|				(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровУХранителя),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровУХранителя))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперацияДокумента В
	|				(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику2_5),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровУПереработчика),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровУПереработчика))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуПодразделениями),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	//++ Устарело_Переработка24
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	//-- Устарело_Переработка24
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеИзлишковТоваровВПользуКомитента))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНедостачЗаСчетКомитента))
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности))
	|		  И ДанныеДокумента.ВидЗапасовТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности))
	|		  И ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссиюВПути)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности))
	|		  И ДанныеДокумента.ВидЗапасовТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссиюВПути)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности))
	|		  И ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссиюВПути)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионера))
	|		  И ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию))
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтХранителя),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика2_5))
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|					КОГДА ДанныеДокумента.КорАналитикаУчетаНоменклатурыСкладскаяТерриторияЦеховаяКладовая
	|		  			  ИЛИ ДанныеДокумента.КорАналитикаУчетаНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		  И ДанныеДокумента.КорВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|		КОГДА ДанныеДокумента.КорАналитикаУчетаНоменклатурыСкладскаяТерриторияЦеховаяКладовая
	|		  ИЛИ ДанныеДокумента.КорАналитикаУчетаНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ 																					КАК КорРазделУчета,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КорОрганизация = ДанныеДокумента.Организация
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ДанныеДокумента.КорОрганизация
	|	КОНЕЦ 																					КАК КорОрганизация,
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК КорАналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК КорАналитикаУчетаНоменклатурыИсходная,
	|	(ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		 И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		   (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваров),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваров),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровСПереоценкой))
	|		  И ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА ДанныеДокумента.ВидЗапасов
	|		ИНАЧЕ ДанныеДокумента.КорВидЗапасов КОНЕЦ)											КАК КорВидЗапасов,
	|
	// Прочие поля
	|	ДанныеДокумента.ХозяйственнаяОперация 													КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ЛОЖЬ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ДанныеДокумента.ГруппаПродукции
	|	КОНЕЦ                                            										КАК ГруппаПродукции,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ЗаказКлиента
	|		ТОГДА ДанныеДокумента.ЗаказКлиента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																					КАК ЗаказКлиента,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_АналитикаУчетаПоПартнерам
	|	 И ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПоПартнерам
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																					КАК АналитикаУчетаПоПартнерам,
	|
	// Количественные и суммовые показатели
	|	ДанныеДокумента.Количество 																КАК Количество,
	|	ДанныеДокумента.Стоимость 																КАК Стоимость,
	|	ДанныеДокумента.СтоимостьБезНДС 														КАК СтоимостьБезНДС,
	|	ДанныеДокумента.СтоимостьРегл 															КАК СтоимостьРегл,
	|	ВЫБОР КОГДА &Константа_ВестиУправленческийУчетОрганизаций
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаНачалаВеденияУправленческогоУчетаОрганизаций, МЕСЯЦ)
	|	  И &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.СтоимостьУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ 																					КАК СтоимостьУпр,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ПостояннаяРазница
	|		ТОГДА ДанныеДокумента.ПостояннаяРазница
	|		ИНАЧЕ 0
	|	КОНЕЦ 																					КАК ПостояннаяРазница,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ВременнаяРазница
	|		ТОГДА ДанныеДокумента.ВременнаяРазница
	|		ИНАЧЕ 0
	|	КОНЕЦ 																					КАК ВременнаяРазница,
	|
	// Поля партионного учета версии 2.2
	|	НЕОПРЕДЕЛЕНО 																			КАК Партия,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|		И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																					КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|		И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО ТОГДА
	|					НЕОПРЕДЕЛЕНО
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКорКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКорКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКорКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКорКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																					КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА НЕ &Константа_ПартионныйУчетВерсии22
	|		  ИЛИ ДанныеДокумента.Период < НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА НЕОПРЕДЕЛЕНО

	//++ Локализация
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В (
	|		  ТИП(Документ.КорректировкаВидаДеятельностиНДС))
	|			ТОГДА ДанныеДокумента.ВидДеятельностиНДС
	//-- Локализация
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности))
	|			ТОГДА ДанныеДокумента.ВидДеятельностиНДС
	//++ Локализация
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) = ТИП(Документ.КорректировкаВидаДеятельностиНДС)
	|			ТОГДА ДанныеДокумента.ВидДеятельностиНДСДокумента
	//-- Локализация
	|			ИНАЧЕ ДанныеДокумента.ВидДеятельностиНДС
	|	КОНЕЦ 																					КАК КорВидДеятельностиНДС,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &Константа_ПартионныйУчетВерсии22
	|		  ИЛИ ДанныеДокумента.Период < НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|			ТОГДА ДанныеДокумента.КорПартия
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО 																			КАК АналитикаУчетаПартий,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_АналитикаУчетаПартий
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК КорАналитикаУчетаПартий,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|			И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК АналитикаФинансовогоУчетаДокумента,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДСДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК ВидДеятельностиНДСДокумента,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионера))
	|		  И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В
	|			(ТИП(Документ.ВозвратТоваровОтКлиента),
	|			 ТИП(Документ.ВозвратТоваровМеждуОрганизациями))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратНаДругойСклад)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|	КОНЕЦ 														  							КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.Перемещение) 							КАК ОперацияУчетаСебестоимости,
	|	НЕОПРЕДЕЛЕНО 												  							КАК ДокументИсточник,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера))
	|			ТОГДА ДанныеДокумента.Ссылка
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК ДокументДвижения,
	|	ДанныеДокумента.ИдентификаторСтроки 						  							КАК ИдентификаторСтроки,
	|	ДанныеДокумента.ИдентификаторФинЗаписи 						  							КАК ИдентификаторФинЗаписи,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет))
	|		  И ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		  И ЕСТЬNULL(ДанныеДокумента.КорВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РеализацияКомиссионногоТовара)
	|		ИНАЧЕ ДанныеДокумента.НастройкаХозяйственнойОперации
	|	КОНЕЦ																					КАК НастройкаХозяйственнойОперации,
	|	ДанныеДокумента.УчетныеПолитикиМетодОценкиСтоимостиТоваров								КАК МетодОценкиСтоимостиТоваров,
	|	ДанныеДокумента.УчетныеПолитикиСпособОпределенияСебестоимости							КАК СпособОпределенияСебестоимости
	|ПОМЕСТИТЬ ВТОперация_Перемещение
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.Перемещение)
	|	И НЕ (НЕ (&Константа_ПартионныйУчетВерсии22
	|			И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ))
	|		И ДанныеДокумента.ХозяйственнаяОперация В
	|	  		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства))
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ПРИХОД - оприходование у получателя
	|ВЫБРАТЬ
	|	ДанныеДокумента.НомерОперации КАК НомерОперации,
	// Описание документа
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 	КАК ВидДвижения,
	|	ДанныеДокумента.Период 					КАК Период,
	|
	// Поля учета номенклатуры
	|	ЕСТЬNULL(ДанныеДокумента.КорОрганизацияСсылка, ДанныеДокумента.Организация) 							КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыИсходная,
	|	(ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		 И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		   (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваров),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваров),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровСПереоценкой))
	|		  И ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА ДанныеДокумента.ВидЗапасов
	|		ИНАЧЕ ДанныеДокумента.КорВидЗапасов КОНЕЦ)											КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорРазделУчета
	|			ТОГДА ДанныеДокумента.КорРазделУчета
	|		КОГДА ДанныеДокумента.Расчетное_КорРазделУчета <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДокумента.Расчетное_КорРазделУчета
	|		КОГДА ДанныеДокумента.СпрКорНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ИЛИ ДанныеДокумента.СпрКорНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	// Товар на хранении с правом продажи
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		 И ДанныеДокумента.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваров),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваров),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровСПереоценкой),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНедостачЗаСчетПоклажедателя),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеИзлишковТоваровВПользуПоклажедателя),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровУПереработчика))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиКОформлениюСписания)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперацияДокумента В
	|				(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровУХранителя),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровУХранителя))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперацияДокумента В
	|				(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику2_5),
	//++ Устарело_Переработка24
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику),
	//-- Устарело_Переработка24
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровУПереработчика),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровУПереработчика))
	|			ТОГДА
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуПодразделениями),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеИзлишковТоваровВПользуКомитента))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНедостачЗаСчетКомитента))
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности))
	|		  И ДанныеДокумента.КорВидЗапасовТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности))
	|		  И ДанныеДокумента.КорВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссиюВПути)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности))
	|		  И ДанныеДокумента.КорВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссиюВПути)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности))
	|		  И ДанныеДокумента.КорВидЗапасовТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссиюВПути)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионера))
	|		  И ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию))
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтХранителя),
	|		  ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика2_5))
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|					КОГДА ДанныеДокумента.КорАналитикаУчетаНоменклатурыСкладскаяТерриторияЦеховаяКладовая
	|		  			  ИЛИ ДанныеДокумента.КорАналитикаУчетаНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		  И ДанныеДокумента.КорВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|		КОГДА ДанныеДокумента.КорАналитикаУчетаНоменклатурыСкладскаяТерриторияЦеховаяКладовая
	|		  ИЛИ ДанныеДокумента.КорАналитикаУчетаНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ 																					КАК РазделУчета,
	|
	// Корреспондирующие поля
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатурыИсходная,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|
	// Прочие поля
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеРабот)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеТоваров)
	|		ИНАЧЕ ДанныеДокумента.ХозяйственнаяОперация
	|	КОНЕЦ 							КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА ЛОЖЬ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|
	|	КОНЕЦ							КАК ГруппаПродукции,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ЗаказКлиента
	|		ТОГДА ДанныеДокумента.ЗаказКлиента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ							КАК ЗаказКлиента,
	|	НЕОПРЕДЕЛЕНО					КАК АналитикаУчетаПоПартнерам,
	|
	// Количественные и суммовые показатели
	|	ДанныеДокумента.Количество 																КАК Количество,
	|	ДанныеДокумента.Стоимость 																КАК Стоимость,
	|	ДанныеДокумента.СтоимостьБезНДС 														КАК СтоимостьБезНДС,
	|	ДанныеДокумента.СтоимостьРегл 															КАК СтоимостьРегл,
	|	ВЫБОР КОГДА &Константа_ВестиУправленческийУчетОрганизаций
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаНачалаВеденияУправленческогоУчетаОрганизаций, МЕСЯЦ)
	|	  И &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.СтоимостьУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ 																					КАК СтоимостьУпр,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ПостояннаяРазница
	|		ТОГДА ДанныеДокумента.ПостояннаяРазница
	|		ИНАЧЕ 0
	|	КОНЕЦ 																					КАК ПостояннаяРазница,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ВременнаяРазница
	|		ТОГДА ДанныеДокумента.ВременнаяРазница
	|		ИНАЧЕ 0
	|	КОНЕЦ 																					КАК ВременнаяРазница,
	|
	// Поля партионного учета версии 2.2
	|	ВЫБОР
	|		КОГДА НЕ &Константа_ПартионныйУчетВерсии22
	|		  ИЛИ ДанныеДокумента.Период < НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности))
	|	      И ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|			ТОГДА ДанныеДокумента.Ссылка
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК Партия,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|			И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКорКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКорКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_КорАналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_КорАналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКорКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКорКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_КорАналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_КорАналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ															КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 													КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА НЕ &Константа_ПартионныйУчетВерсии22
	|		  ИЛИ ДанныеДокумента.Период < НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности))
	|			ТОГДА ДанныеДокумента.ВидДеятельностиНДС
	//++ Локализация
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) = ТИП(Документ.КорректировкаВидаДеятельностиНДС)
	|			ТОГДА ДанныеДокумента.ВидДеятельностиНДСДокумента
	//-- Локализация
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ВидДеятельностиНДС
	|	КОНЕЦ 															КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности))
	|			ТОГДА ДанныеДокумента.ВидДеятельностиНДС
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА ДанныеДокумента.ВидДеятельностиНДС
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК КорВидДеятельностиНДС,
	|
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|	  И НЕ ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности))
	|		ТОГДА ДанныеДокумента.КорПартия
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК КорПартия,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_АналитикаУчетаПартий
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО 													КАК КорАналитикаУчетаПартий,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|			И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКорКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКорКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_КорАналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_КорАналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКорКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКорКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_КорАналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_КорАналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаФинансовогоУчетаДокумента,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДСДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК ВидДеятельностиНДСДокумента,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПеремещениеОбособленно)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПеремещениеУпр)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПеремещениеОбособленно)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПеремещениеТоварыВПути)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение)
	|	КОНЕЦ 															КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.Перемещение) 	КАК ОперацияУчетаСебестоимости,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В 
	|		  (ТИП(Документ.ПоступлениеТоваровОтХранителя), ТИП(Документ.ПередачаТоваровХранителю))
	|			ТОГДА ДанныеДокумента.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК ДокументИсточник,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера))
	|			ТОГДА ДанныеДокумента.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК ДокументДвижения,
	|	ДанныеДокумента.ИдентификаторСтроки 						  	КАК ИдентификаторСтроки,
	|	ДанныеДокумента.ИдентификаторФинЗаписи 						  	КАК ИдентификаторФинЗаписи,
	|	ДанныеДокумента.НастройкаХозяйственнойОперации				  	КАК НастройкаХозяйственнойОперации,
	|	ДанныеДокумента.УчетныеПолитикиМетодОценкиСтоимостиТоваров		КАК МетодОценкиСтоимостиТоваров,
	|	ВЫБОР КОГДА ДанныеДокумента.УчетныеПолитикиОрганизацийСреднескользящаяОценка
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоКорДвижению)
	|		ИНАЧЕ ДанныеДокумента.УчетныеПолитикиСпособОпределенияСебестоимости
	|	КОНЕЦ 															КАК СпособОпределенияСебестоимости
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.Перемещение)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// РАСХОД - списание комиссионного товара
	|ВЫБРАТЬ
	|	ДанныеДокумента.НомерОперации КАК НомерОперации,
	// Описание документа
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 	КАК ВидДвижения,
	|	ДанныеДокумента.Период 					КАК Период,
	|
	// Поля учета номенклатуры
	|	ДанныеДокумента.Организация 														КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ВидЗапасов
	|	КОНЕЦ					 															КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию) 	КАК РазделУчета,
	|
	// Корреспондирующие поля
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатурыИсходная,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|
	// Прочие поля
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО						  КАК ГруппаПродукции,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ЗаказКлиента
	|		ТОГДА ДанныеДокумента.ЗаказКлиента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ								  КАК ЗаказКлиента,
	|	НЕОПРЕДЕЛЕНО						  КАК АналитикаУчетаПоПартнерам,
	|
	// Количественные и суммовые показатели
	|	ДанныеДокумента.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьУпр,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
	// Поля партионного учета версии 2.2
	|	НЕОПРЕДЕЛЕНО 																	КАК Партия,
	|	НЕОПРЕДЕЛЕНО 																	КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 																	КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 																	КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности))
	|			ТОГДА ДанныеДокумента.ВидДеятельностиНДС
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																			КАК КорВидДеятельностиНДС,
	|
	|	ВЫБОР
	|		КОГДА НЕ &Константа_ПартионныйУчетВерсии22
	|		  ИЛИ ДанныеДокумента.Период < НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|			ТОГДА ДанныеДокумента.КорПартия
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																			КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО 																	КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО 																	КАК КорАналитикаУчетаПартий,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|			И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																			КАК АналитикаФинансовогоУчетаДокумента,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДСДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																			КАК ВидДеятельностиНДСДокумента,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление) 		  					КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.Перемещение) 					КАК ОперацияУчетаСебестоимости,
	|	НЕОПРЕДЕЛЕНО 												  					КАК ДокументИсточник,
	|	НЕОПРЕДЕЛЕНО 																	КАК ДокументДвижения,
	|	ДанныеДокумента.ИдентификаторСтроки 						  					КАК ИдентификаторСтроки,
	|	ДанныеДокумента.ИдентификаторФинЗаписи 						  					КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеКомиссионныхТоваров)	КАК НастройкаХозяйственнойОперации,
	|	ДанныеДокумента.УчетныеПолитикиМетодОценкиСтоимостиТоваров						КАК МетодОценкиСтоимостиТоваров,
	|	ДанныеДокумента.УчетныеПолитикиСпособОпределенияСебестоимости					КАК СпособОпределенияСебестоимости
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.Перемещение)
	|	И ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И ЕСТЬNULL(ДанныеДокумента.КорВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И НЕ ДанныеДокумента.ХозяйственнаяОперация В
	|	  	(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет))
	|";
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТОперация_Перемещение", ТекстЗапросаОтражения);
	
КонецПроцедуры

// Описание принципов формирования движений модульной операции "Реализация".
// 
// При продаже типа запасов "Полуфабрикат давальца" если в исходных данных заполнен кор тип запасов "Продукция давальца":
// - балансовая себестоимость номенклатуры списывается на себестоимость продаж, в регистр "Выручка и себестоимость продаж"
// - забалансовая себестоимость переходит в себестоимость продукции давальца (тип запасов "Продукция давальца")   
// 	для этого формируется дополнительное приходное движение по кор виду запасов
//
Процедура ОтразитьОперациюСебестоимостиРеализация(ПараметрыОтражения)
	
	// Сформируем шаблон текста запроса для отражения операции.
	ТекстЗапросаОтражения =
	"ВЫБРАТЬ
	|	ДанныеДокумента.НомерОперации КАК НомерОперации,
	// Описание документа
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионераПрошлыхПериодов))
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ									КАК ВидДвижения,
	|	ДанныеДокумента.Период 					КАК Период,
	|
	// Поля учета номенклатуры
	|	ДанныеДокумента.Организация 															КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ВидЗапасов
	|	КОНЕЦ																					КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_РазделУчета
	|			ТОГДА ДанныеДокумента.РазделУчета
	|		КОГДА ДанныеДокумента.Расчетное_РазделУчета <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДокумента.Расчетное_РазделУчета
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				ИЛИ ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНедостачЗаСчетПоклажедателя))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеИзлишковТоваровВПользуКомитента),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНедостачЗаСчетКомитента),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионера))
	|		  И ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В(
	|		  ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтгрузкаПринятыхСПравомПродажиТоваровСХранения),
	|		  ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоставкаПодПринципала))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В(
	//++ Устарело_Переработка24
	|		  ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаДавальцу),
	//-- Устарело_Переработка24
	|		  ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыкупТоваровДавальца))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров))
	|			ТОГДА 
	|				ВЫБОР КОГДА ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыкупТоваровХранителем),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыкупТоваровПереработчиком))
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам)
	|					КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыкупТоваровПереработчиком)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности))
	|			И ДанныеДокумента.ВидЗапасовТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссиюВПути)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности))
	|			И ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссиюВПути)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности))
	|		  И ДанныеДокумента.ВидЗапасовТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности))
	|		  И ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссиюВПути)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперацияДокумента В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионера))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|		КОГДА ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая
	|				ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ 																					КАК РазделУчета,
	|
	// Корреспондирующие поля
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорРазделУчета
	|			ТОГДА ДанныеДокумента.КорРазделУчета
	// Условия заполнения поля КорРазделУчета из таблицы ВТРазделыУчета должны соответствовать условиям формирования 
	// движения Приход для модульной операции Реализация.
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.КорВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|		 И ЕСТЬNULL(ДанныеДокумента.ВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|		 И ДанныеДокумента.Расчетное_КорРазделУчета <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДокумента.Расчетное_КорРазделУчета
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация =
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|			ТОГДА ВЫБОР
	|				КОГДА ЕСТЬNULL(ДанныеДокумента.КорАналитикаУчетаНоменклатурыНоменклатураТипНоменклатуры, НЕОПРЕДЕЛЕНО)
	|						= ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|				КОГДА ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая
	|					ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация =
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																					КАК КорРазделУчета,
	|	ДанныеДокумента.КорОрганизация 															КАК КорОрганизация,
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК КорАналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК КорАналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.КорВидЗапасов
	|	КОНЕЦ 															КАК КорВидЗапасов,
	|
	// Прочие поля
	|	(ВЫБОР
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		 И ДанныеДокумента.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВРозницу))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКомиссионногоТовара)
	|		ИНАЧЕ ДанныеДокумента.ХозяйственнаяОперация КОНЕЦ) КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.АналитикаУчетаПоПартнерам 	КАК АналитикаУчетаПоПартнерам,
	|	ДанныеДокумента.Подразделение 				КАК Подразделение,
	|	ДанныеДокумента.ЗаказКлиента 				КАК ЗаказКлиента,
	|	ДанныеДокумента.ПериодДокументаИсточника	КАК ПериодПродажи,
	|
	// Количественные и суммовые показатели
	|	ДанныеДокумента.Количество 					КАК Количество,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_СтоимостьЗабалансовая
	|		ТОГДА ДанныеДокумента.СтоимостьЗабалансовая
	|		ИНАЧЕ 0
	|	КОНЕЦ 										КАК СтоимостьЗабалансовая,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_СтоимостьЗабалансоваяРегл
	|		ТОГДА ДанныеДокумента.СтоимостьЗабалансоваяРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ 										КАК СтоимостьЗабалансоваяРегл,
	|
	// Поля партионного учета версии 2.2
	|	ВЫБОР
	|		КОГДА НЕ &Константа_ПартионныйУчетВерсии22
	|		  ИЛИ ДанныеДокумента.Период < НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями))
	|			И ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|			ТОГДА ДанныеДокумента.Ссылка
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 														КАК Партия,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_АналитикаУчетаПартий
	|				И ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ														КАК АналитикаУчетаПартий,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		И ЕСТЬNULL(ДанныеДокумента.КорУчетныеПолитикиФИФОСкользящаяОценка, ИСТИНА) = ИСТИНА
	|		ТОГДА ДанныеДокумента.КорАналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 														  КАК КорАналитикаУчетаПартий,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|			И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 														КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|			И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			И (ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) = ТИП(Документ.РеализацияТоваровУслуг)
	|			И ДанныеДокумента.АналитикаУчетаНоменклатурыНоменклатураТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|		ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 														  КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА НЕ &Константа_ПартионныйУчетВерсии22
	|		  ИЛИ ДанныеДокумента.Период < НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА НЕ ДанныеДокумента.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ВидДеятельностиНДС
	|	КОНЕЦ 														  КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорВидДеятельностиНДС
	|			ТОГДА ДанныеДокумента.КорВидДеятельностиНДС
	|		ИНАЧЕ ДанныеДокумента.ВидДеятельностиНДС
	|	КОНЕЦ							 							  КАК КорВидДеятельностиНДС,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		И (ЕСТЬNULL(ДанныеДокумента.КорУчетныеПолитикиФИФОСкользящаяОценка, ИСТИНА) = ИСТИНА
	|			)
	|		ТОГДА ДанныеДокумента.КорПартия
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 														  КАК КорПартия,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|			И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 														КАК АналитикаФинансовогоУчетаДокумента,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДСДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 														  КАК ВидДеятельностиНДСДокумента,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ТипЗаписи
	|			ТОГДА ДанныеДокумента.ТипЗаписи
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5)
	|			И ДанныеДокумента.Количество < 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Сторно)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионераПрошлыхПериодов))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТарыВозвратНаДругойСклад),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализацииВозвратНаДругойСклад))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СторноВозвратНаДругойСклад)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера))
	|		  И ДанныеДокумента.Количество < 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТары),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионера),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Сторно)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПотреблениеТоварыВПути)	
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|	КОНЕЦ														  КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.Реализация)  КАК ОперацияУчетаСебестоимости,
	|	ДанныеДокумента.ДокументИсточник 							  КАК ДокументИсточник,
	|	ДанныеДокумента.ИдентификаторСтроки 						  КАК ИдентификаторСтроки,
	|	ДанныеДокумента.ИдентификаторФинЗаписи 						  КАК ИдентификаторФинЗаписи,
	|	(ВЫБОР
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		 И ДанныеДокумента.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВРозницу))
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РеализацияКомиссионногоТовара)
	|		ИНАЧЕ ДанныеДокумента.НастройкаХозяйственнойОперации КОНЕЦ) КАК НастройкаХозяйственнойОперации,
	|	ДанныеДокумента.УчетныеПолитикиМетодОценкиСтоимостиТоваров	  КАК МетодОценкиСтоимостиТоваров,
	|	ВЫБОР КОГДА ДанныеДокумента.УчетныеПолитикиОрганизацийСреднескользящаяОценка
	|		ТОГДА
	|			ВЫБОР КОГДА ДанныеДокумента.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоДвижениямДокументаИсточника)
	|				ИНАЧЕ ДанныеДокумента.УчетныеПолитикиСпособОпределенияСебестоимости
	|			КОНЕЦ
	|		ИНАЧЕ ДанныеДокумента.УчетныеПолитикиСпособОпределенияСебестоимости
	|	КОНЕЦ 															КАК СпособОпределенияСебестоимости
	|ПОМЕСТИТЬ ВТОперация_Реализация
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.Реализация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ПРИХОД - давальческий товар
	|ВЫБРАТЬ
	|	ДанныеДокумента.НомерОперации КАК НомерОперации,
	// Описание документа
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	ДанныеДокумента.Период 					КАК Период,
	|
	// Поля учета номенклатуры
	|	ДанныеДокумента.Организация 															КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.КорВидЗапасов
	|	КОНЕЦ															КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорРазделУчета
	|			ТОГДА ДанныеДокумента.КорРазделУчета
	|		КОГДА ДанныеДокумента.Расчетное_КорРазделУчета <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДокумента.Расчетное_КорРазделУчета
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК РазделУчета,
	|
	// Корреспондирующие поля
	|	НЕОПРЕДЕЛЕНО																			КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО																			КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО																			КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО																			КАК КорАналитикаУчетаНоменклатурыИсходная,
	|	НЕОПРЕДЕЛЕНО																			КАК КорВидЗапасов,
	|
	// Прочие поля
	|	ДанныеДокумента.ХозяйственнаяОперация		КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО								КАК АналитикаУчетаПоПартнерам,
	|	ДанныеДокумента.Подразделение 				КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО								КАК ЗаказКлиента,
	|	НЕОПРЕДЕЛЕНО								КАК ПериодПродажи,
	|
	// Количественные и суммовые показатели
	|	ДанныеДокумента.Количество 					КАК Количество,
	|	0	 										КАК СтоимостьЗабалансовая,
	|	0											КАК СтоимостьЗабалансоваяРегл,
	|
	// Поля партионного учета версии 2.2
	|	НЕОПРЕДЕЛЕНО													КАК Партия,
	|	НЕОПРЕДЕЛЕНО													КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО													КАК КорАналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО													КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|			И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА НЕ &Константа_ПартионныйУчетВерсии22
	|		  ИЛИ ДанныеДокумента.Период < НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ВидДеятельностиНДС
	|	КОНЕЦ 															КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО							 						КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО 													КАК КорПартия,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|			И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаФинансовогоУчетаДокумента,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДСДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК ВидДеятельностиНДСДокумента,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение)			КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.Реализация)	КАК ОперацияУчетаСебестоимости,
	|	ДанныеДокумента.Ссылка 											КАК ДокументИсточник,
	|	ДанныеДокумента.ИдентификаторСтроки 							КАК ИдентификаторСтроки,
	// Для прихода давальческой продукции идентификатор фин записи не заполняем, т.к. у давальческой продукции нет балансовой стоимости.
	|	&ИдентификаторНеиспользуемойФинЗаписи 							КАК ИдентификаторФинЗаписи,
	|	ДанныеДокумента.НастройкаХозяйственнойОперации					КАК НастройкаХозяйственнойОперации,
	|	ДанныеДокумента.УчетныеПолитикиМетодОценкиСтоимостиТоваров		КАК МетодОценкиСтоимостиТоваров,
	|	ВЫБОР КОГДА ДанныеДокумента.УчетныеПолитикиОрганизацийСреднескользящаяОценка
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоКорДвижению)
	|		ИНАЧЕ ДанныеДокумента.УчетныеПолитикиСпособОпределенияСебестоимости
	|	КОНЕЦ 															КАК СпособОпределенияСебестоимости
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.Реализация)
	|	И ЕСТЬNULL(ДанныеДокумента.КорВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)
	|	И ЕСТЬNULL(ДанныеДокумента.ВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|";
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТОперация_Реализация", ТекстЗапросаОтражения);
	
КонецПроцедуры

Процедура ОтразитьОперациюСебестоимостиСписаниеНаДругиеПартии(ПараметрыОтражения)
	
	// Сформируем шаблон текста запроса для отражения операции.
	ТекстЗапросаОтражения =
	"
	// РАСХОД - списание у отправителя
	|ВЫБРАТЬ
	|	ДанныеДокумента.НомерОперации КАК НомерОперации,
	// Описание документа
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 	КАК ВидДвижения,
	|	ДанныеДокумента.Период 					КАК Период,
	|
	// Поля учета номенклатуры
	|	ДанныеДокумента.Организация 														КАК Организация,
	|	ВЫБОР КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		  И ЕСТЬNULL(ДанныеДокумента.КорВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыКомитента, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ 																				КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		  И ЕСТЬNULL(ДанныеДокумента.КорВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		 И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ВидЗапасов
	|	КОНЕЦ 																				КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_РазделУчета
	|			ТОГДА ДанныеДокумента.РазделУчета
	|		КОГДА ДанныеДокумента.Расчетное_РазделУчета <> НЕОПРЕДЕЛЕНО И НЕ
	//	Переопределяем раздел учета только тогда, когда у нас не переопределяется аналитика учета и вид запасов. Для комиссионного товара
	//	она переопределяется, а потому раздел учета, определенный по общим принципам, уже не подходит.
	|			(ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|				И ЕСТЬNULL(ДанныеДокумента.КорВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|			ТОГДА ДанныеДокумента.Расчетное_РазделУчета
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		  ИЛИ ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	// Товар на хранении с правом продажи
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА (ВЫБОР
	|				КОГДА ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиПереданныеПартнерам)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи) КОНЕЦ)
	|		КОГДА (ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая
	|				ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ 																				КАК РазделУчета,
	|
	// Корреспондирующие поля
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорРазделУчета
	|			ТОГДА ДанныеДокумента.КорРазделУчета
	|		КОГДА ДанныеДокумента.Расчетное_КорРазделУчета <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДокумента.Расчетное_КорРазделУчета
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыкупТоваровДавальца)
	|		 И ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)
	|		 И ДанныеДокумента.СпрКлючиНоменклатурыДоговорТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СПереработчиком2_5)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
	|		КОГДА ДанныеДокумента.КорВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыкупТоваровДавальца)
	|		 И ДанныеДокумента.ВидЗапасовТипЗапасов В
	|		  (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
	|		   ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
	|		КОГДА ДанныеДокумента.КорАналитикаУчетаНоменклатурыСкладскаяТерриторияЦеховаяКладовая
	|		  ИЛИ ДанныеДокумента.КорАналитикаУчетаНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ 																					КАК КорРазделУчета,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КорОрганизация = ДанныеДокумента.Организация
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ДанныеДокумента.КорОрганизация
	|	КОНЕЦ 																					КАК КорОрганизация,
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК КорАналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК КорАналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.КорВидЗапасов
	|	КОНЕЦ 															КАК КорВидЗапасов,
	|
	// Прочие поля
	|	ДанныеДокумента.ХозяйственнаяОперация 													КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение 															КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ЛОЖЬ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																					КАК ГруппаПродукции,
	|
	// Количественные и суммовые показатели
	|	ДанныеДокумента.Количество 																КАК Количество,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_Стоимость
	|		ТОГДА ДанныеДокумента.Стоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ																					КАК Стоимость,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_СтоимостьБезНДС
	|		ТОГДА ДанныеДокумента.СтоимостьБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ																					КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_СтоимостьРегл
	|		ТОГДА ДанныеДокумента.СтоимостьРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ																					КАК СтоимостьРегл,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_СтоимостьУпр
	|		ТОГДА ДанныеДокумента.СтоимостьУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ																					КАК СтоимостьУпр,
	|
	// Поля партионного учета версии 2.2
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_Партия
	|		И &Константа_ПартионныйУчетВерсии22
	|		И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		И (ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|			)
	|		ТОГДА ДанныеДокумента.Партия
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																					КАК Партия,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_АналитикаУчетаПартий
	|			И (ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|			)
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																					КАК АналитикаУчетаПартий,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|			И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																					КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|			И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			И НЕ ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатуры ЕСТЬ NULL
	|		ТОГДА ВЫБОР
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКорКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКорКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКорКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКорКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА НЕ &Константа_ПартионныйУчетВерсии22
	|		  ИЛИ ДанныеДокумента.Период < НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ДанныеДокумента.ВидДеятельностиНДС
	|	КОНЕЦ 																					КАК ВидДеятельностиНДС,
	|	ДанныеДокумента.ВидДеятельностиНДС														КАК КорВидДеятельностиНДС,
	|
	|	ВЫБОР 
	|		КОГДА НЕ &Константа_ПартионныйУчетВерсии22
	|		  ИЛИ ДанныеДокумента.Период < НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|	  	КОГДА НЕ ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ДанныеДокумента.КорПартия
	|	КОНЕЦ 																					КАК КорПартия,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорАналитикаУчетаПартий
	|	  	И (ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|		  ИЛИ ЛОЖЬ)
	|		ТОГДА ДанныеДокумента.КорАналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК КорАналитикаУчетаПартий,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|		И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК АналитикаФинансовогоУчетаДокумента,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДСДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК ВидДеятельностиНДСДокумента,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ТипЗаписи
	|		ТОГДА ДанныеДокумента.ТипЗаписи
	|		ИНАЧЕ ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписаниеНаДругиеПартии)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|			КОНЕЦ
	|	КОНЕЦ																					КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаДругиеПартии)				КАК ОперацияУчетаСебестоимости,
	|	НЕОПРЕДЕЛЕНО 												  							КАК ДокументИсточник,
	|	ДанныеДокумента.ИдентификаторСтроки 						  							КАК ИдентификаторСтроки,
	|	ДанныеДокумента.ИдентификаторФинЗаписи 						  							КАК ИдентификаторФинЗаписи,
	|	ДанныеДокумента.НастройкаХозяйственнойОперации 				  							КАК НастройкаХозяйственнойОперации,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ДокументДвижения 
	|			ТОГДА ДанныеДокумента.ДокументДвижения
	|		КОГДА ДанныеДокумента.УчетныеПолитикиОрганизацийСреднескользящаяОценка
	|			ТОГДА ДанныеДокумента.Ссылка
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																					КАК ДокументДвижения,
	|	ДанныеДокумента.УчетныеПолитикиМетодОценкиСтоимостиТоваров								КАК МетодОценкиСтоимостиТоваров,
	|	ВЫБОР
	|		КОГДА НЕ ДанныеДокумента.УчетныеПолитикиОрганизацийСреднескользящаяОценка
	|			ТОГДА ДанныеДокумента.УчетныеПолитикиСпособОпределенияСебестоимости
	|		ИНАЧЕ ДанныеДокумента.УчетныеПолитикиСпособОпределенияСебестоимости
	|	КОНЕЦ 															КАК СпособОпределенияСебестоимости
	|ПОМЕСТИТЬ ВТОперация_СписаниеНаДругиеПартии
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаДругиеПартии)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ПРИХОД - оприходование у получателя
	|ВЫБРАТЬ
	|	ДанныеДокумента.НомерОперации КАК НомерОперации,
	// Описание документа
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 	КАК ВидДвижения,
	|	ДанныеДокумента.Период 					КАК Период,
	|
	// Поля учета номенклатуры
	|	ЕСТЬNULL(ДанныеДокумента.КорОрганизацияСсылка, ДанныеДокумента.Организация) 							КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.КорВидЗапасов
	|	КОНЕЦ 																					КАК ВидЗапасов,
	|	(ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорРазделУчета
	|			ТОГДА ДанныеДокумента.КорРазделУчета
	|		КОГДА ДанныеДокумента.Расчетное_КорРазделУчета <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДокумента.Расчетное_КорРазделУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство) КОНЕЦ) КАК РазделУчета,
	|
	// Корреспондирующие поля
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатурыИсходная,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|
	// Прочие поля
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение	КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ЛОЖЬ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ							КАК ГруппаПродукции,
	|
	// Количественные и суммовые показатели
	|	ДанныеДокумента.Количество									КАК Количество,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_Стоимость
	|		ТОГДА ДанныеДокумента.Стоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ														КАК Стоимость,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_СтоимостьБезНДС
	|		ТОГДА ДанныеДокумента.СтоимостьБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ														КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_СтоимостьРегл
	|		ТОГДА ДанныеДокумента.СтоимостьРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ														КАК СтоимостьРегл,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_СтоимостьУпр
	|		ТОГДА ДанныеДокумента.СтоимостьУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ														КАК СтоимостьУпр,
	|
	// Поля партионного учета версии 2.2
	|	ВЫБОР
	|		КОГДА НЕ &Константа_ПартионныйУчетВерсии22
	|		  ИЛИ ДанныеДокумента.Период < НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.КорПартия
	|	КОНЕЦ 															КАК Партия,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_АналитикаУчетаПартий
	|				ТОГДА ДанныеДокумента.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ															КАК АналитикаУчетаПартий,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|		И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА ВЫБОР
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКорКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКорКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_КорАналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_КорАналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКорКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКорКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_КорАналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_КорАналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 													КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА НЕ &Константа_ПартионныйУчетВерсии22
	|		  ИЛИ ДанныеДокумента.Период < НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ВидДеятельностиНДС
	|	КОНЕЦ 															КАК ВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО													КАК КорВидДеятельностиНДС,
	|
	|	НЕОПРЕДЕЛЕНО													КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО													КАК КорАналитикаУчетаПартий,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|		И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКорКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКорКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_КорАналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_КорАналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКорКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКорКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_КорАналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_КорАналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК АналитикаФинансовогоУчетаДокумента,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДСДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК ВидДеятельностиНДСДокумента,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)				КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаДругиеПартии) 	КАК ОперацияУчетаСебестоимости,
	|	НЕОПРЕДЕЛЕНО 												  	КАК ДокументИсточник,
	|	ДанныеДокумента.ИдентификаторСтроки 						  	КАК ИдентификаторСтроки,
	|	ДанныеДокумента.ИдентификаторФинЗаписи 						  	КАК ИдентификаторФинЗаписи,
	|	ДанныеДокумента.НастройкаХозяйственнойОперации					КАК НастройкаХозяйственнойОперации,
	|	ВЫБОР КОГДА ДанныеДокумента.УчетныеПолитикиОрганизацийСреднескользящаяОценка
	|		ТОГДА ДанныеДокумента.Ссылка
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 															КАК ДокументДвижения,
	|	ДанныеДокумента.УчетныеПолитикиМетодОценкиСтоимостиТоваров		КАК МетодОценкиСтоимостиТоваров,
	|	ВЫБОР КОГДА ДанныеДокумента.УчетныеПолитикиОрганизацийСреднескользящаяОценка
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоКорДвижению)
	|		ИНАЧЕ ДанныеДокумента.УчетныеПолитикиСпособОпределенияСебестоимости
	|	КОНЕЦ 															КАК СпособОпределенияСебестоимости
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаДругиеПартии)
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// РАСХОД - списание комиссионного товара
	|ВЫБРАТЬ
	|	ДанныеДокумента.НомерОперации КАК НомерОперации,
	// Описание документа
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 	КАК ВидДвижения,
	|	ДанныеДокумента.Период 					КАК Период,
	|
	// Поля учета номенклатуры
	|	ДанныеДокумента.Организация 														КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ВидЗапасов
	|	КОНЕЦ																				КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию) 	КАК РазделУчета,
	|
	// Корреспондирующие поля
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатурыИсходная,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|
	// Прочие поля
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) = ТИП(Документ.СборкаТоваров)
	|		ТОГДА ДанныеДокумента.ХозяйственнаяОперация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеКомиссионныхТоваров)
	|	КОНЕЦ								  КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение		  КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ЛОЖЬ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ								  КАК ГруппаПродукции,
	|
	// Количественные и суммовые показатели
	|	ДанныеДокумента.Количество 									КАК Количество,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_Стоимость
	|		ТОГДА ДанныеДокумента.Стоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ														КАК Стоимость,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_СтоимостьБезНДС
	|		ТОГДА ДанныеДокумента.СтоимостьБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ														КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_СтоимостьРегл
	|		ТОГДА ДанныеДокумента.СтоимостьРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ														КАК СтоимостьРегл,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_СтоимостьУпр
	|		ТОГДА ДанныеДокумента.СтоимостьУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ														КАК СтоимостьУпр,
	|
	// Поля партионного учета версии 2.2
	|	НЕОПРЕДЕЛЕНО 																	КАК Партия,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_АналитикаУчетаПартий
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																			КАК АналитикаУчетаПартий,
	|	НЕОПРЕДЕЛЕНО 																	КАК АналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 																	КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО 																	КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности))
	|			ТОГДА ДанныеДокумента.ВидДеятельностиНДС
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																			КАК КорВидДеятельностиНДС,
	|
	|	ВЫБОР
	|		КОГДА НЕ &Константа_ПартионныйУчетВерсии22
	|		  ИЛИ ДанныеДокумента.Период < НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|			ТОГДА ДанныеДокумента.КорПартия
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																			КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО																	КАК КорАналитикаУчетаПартий,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|		И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																			КАК АналитикаФинансовогоУчетаДокумента,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДСДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																			КАК ВидДеятельностиНДСДокумента,
	|
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) = ТИП(Документ.СборкаТоваров)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписаниеНаДругиеПартии)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|	КОНЕЦ 		  																	КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаДругиеПартии)		КАК ОперацияУчетаСебестоимости,
	|	НЕОПРЕДЕЛЕНО 												  					КАК ДокументИсточник,
	|	НЕОПРЕДЕЛЕНО 						  											КАК ИдентификаторСтроки,
	|	ДанныеДокумента.ИдентификаторФинЗаписи 						  					КАК ИдентификаторФинЗаписи,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) = ТИП(Документ.СборкаТоваров)
	|		ТОГДА ДанныеДокумента.НастройкаХозяйственнойОперации
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеКомиссионныхТоваров)
	|	КОНЕЦ 		  																	КАК НастройкаХозяйственнойОперации,
	|	НЕОПРЕДЕЛЕНО																	КАК ДокументДвижения,
	|	ДанныеДокумента.УчетныеПолитикиМетодОценкиСтоимостиТоваров						КАК МетодОценкиСтоимостиТоваров,
	|	ДанныеДокумента.УчетныеПолитикиСпособОпределенияСебестоимости					КАК СпособОпределенияСебестоимости
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаДругиеПартии)
	|	И ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И ЕСТЬNULL(ДанныеДокумента.КорВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|";
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТОперация_СписаниеНаДругиеПартии", ТекстЗапросаОтражения);
	
КонецПроцедуры

Процедура ОтразитьОперациюСебестоимостиСписаниеНаРасходыАктивы(ПараметрыОтражения)
	
	// Сформируем шаблон текста запроса для отражения операции.
	ТекстЗапросаОтражения =
	"
	// РАСХОД - списание на расходы
	|ВЫБРАТЬ
	|	ДанныеДокумента.НомерОперации КАК НомерОперации,
	// Описание документа
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы))
	|			ТОГДА ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(ДанныеДокумента.ПериодДокументаИсточника, МЕСЯЦ) < НАЧАЛОПЕРИОДА(ДанныеДокумента.Период, МЕСЯЦ)
	|					ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ									КАК ВидДвижения,
	|	ДанныеДокумента.Период 					КАК Период,
	|
	// Поля учета номенклатуры
	|	ДанныеДокумента.Организация 															КАК Организация,
	|	ВЫБОР КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыКомитента, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ 																					КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		 И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ВидЗапасов
	|	КОНЕЦ 																					КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_РазделУчета
	|			ТОГДА ДанныеДокумента.РазделУчета
	|		КОГДА ДанныеДокумента.Расчетное_РазделУчета <> НЕОПРЕДЕЛЕНО И НЕ
	//	Переопределяем раздел учета только тогда, когда у нас не переопределяется аналитика учета и вид запасов. Для комиссионного товара
	//	она переопределяется, а потому раздел учета, определенный по общим принципам, уже не подходит.
	|			ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ДанныеДокумента.Расчетное_РазделУчета
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		  ИЛИ ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|		 И ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПринятыхТоваровЗаСчетПоклажедателя),
	|		   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПринятыхТоваровНаРасходы))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажиКОформлениюСписания)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаХраненииСПравомПродажи)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионераОСписании),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНедостачЗаСчетКомитента))
	|			ТОГДА 
	|				ВЫБОР
	|					КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|						ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|				КОНЕЦ
	|
	|		КОГДА ДанныеДокумента.СпрКлючиНоменклатурыДоговорТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СХранителем)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам)
	|
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНедостачЗаСчетПоклажедателя))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.СобственныеТоварыПереданныеПартнерам)
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровУКомиссионера))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|		КОГДА ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая
	|		  ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ 																					КАК РазделУчета,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорРазделУчета
	|			ТОГДА ДанныеДокумента.КорРазделУчета
	//		При списании на расходы выполняется изменение раздела учета - приход в ...КОформлениюСписания
	//		Особенность документа ОтчетДавальцу2_5:
	//		для него выполняется только изменение типа запасов с ПолуфабрикатДавальца на ПродукцияДавальца (кор. раздел определяется ниже, как для всех давальческих товаров)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
	|			И НЕ ДанныеДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
	|															ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
	|															ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровДавальцаЗаСчетДавальца),
	|															ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровДавальцаНаРасходы))
	|			ТОГДА ВЫБОР КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработкуКОформлениюСписания)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.Расчетное_КорРазделУчета <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДокумента.Расчетное_КорРазделУчета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК КорРазделУчета,
	|
	// Корреспондирующие поля
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КорОрганизация = ДанныеДокумента.Организация
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ДанныеДокумента.КорОрганизация
	|	КОНЕЦ 																					КАК КорОрганизация,
	// Условия для КорАналитикаУчетаНоменклатуры должны синхронизироваться с условием формирования приходных движений по давальческим товарам в этой операции
	|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5)
	|	  И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы)
	|	  И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровДавальцаЗаСчетДавальца)
	|	  И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровДавальцаНаРасходы)
	|	  И ДанныеДокумента.ВидЗапасовТипЗапасов В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
	|			ТОГДА ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО)
	|			ИНАЧЕ ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ 																					КАК КорАналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК КорАналитикаУчетаНоменклатурыИсходная,
	// Условия для КорВидЗапасов должны синхронизироваться с условием формирования приходных движений по давальческим товарам в этой операции
	|	ВЫБОР КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	 И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|	КОГДА ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5)
	|	  И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы)
	|	  И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровДавальцаЗаСчетДавальца)
	|	  И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровДавальцаНаРасходы)
	|	  И ДанныеДокумента.ВидЗапасовТипЗапасов В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
	|			ТОГДА ДанныеДокумента.ВидЗапасов
	|			ИНАЧЕ ДанныеДокумента.КорВидЗапасов
	|	КОНЕЦ 																					КАК КорВидЗапасов,
	|	ДанныеДокумента.КорНаправлениеДеятельности			    								КАК КорНаправлениеДеятельности,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорПартия
	|		ТОГДА ДанныеДокумента.КорПартия
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК КорПартия,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорАналитикаУчетаПартий
	|		ТОГДА ДанныеДокумента.КорАналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК КорАналитикаУчетаПартий,
	|
	// Прочие поля
	|	ДанныеДокумента.ХозяйственнаяОперация 													КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение 															КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ДанныеДокумента.СтатьяРасходовАктивов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК СтатьяРасходовСписания,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ДанныеДокумента.АналитикаРасходовАктивов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|			ТОГДА ДанныеДокумента.СтатьяРасходовАктивов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК СтатьяАктивовПассивов,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|			ТОГДА ДанныеДокумента.АналитикаРасходовАктивов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК АналитикаАктивовПассивов,
	|	ДанныеДокумента.ПериодДокументаИсточника												КАК ПериодПродажи,
	|	ВЫБОР
	|		КОГДА ЛОЖЬ
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                            										КАК ГруппаПродукции,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_АналитикаУчетаПоПартнерам
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПоПартнерам
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК АналитикаУчетаПоПартнерам,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_НастройкаСчетовУчета
	|			ТОГДА ДанныеДокумента.НастройкаСчетовУчета
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК НастройкаСчетовУчета,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ЗаказКлиента
	|		ТОГДА ДанныеДокумента.ЗаказКлиента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																					КАК ЗаказКлиента,
	|
	// Количественные и суммовые показатели
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы))
	|			ТОГДА ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(ДанныеДокумента.ПериодДокументаИсточника, МЕСЯЦ) < НАЧАЛОПЕРИОДА(ДанныеДокумента.Период, МЕСЯЦ)
	|					ТОГДА ДанныеДокумента.Количество
	|					ИНАЧЕ -ДанныеДокумента.Количество
	|				КОНЕЦ
	|		ИНАЧЕ ДанныеДокумента.Количество
	|	КОНЕЦ																		КАК Количество,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_Стоимость
	|		ТОГДА ДанныеДокумента.Стоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ 																		КАК Стоимость,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_СтоимостьБезНДС
	|		ТОГДА ДанныеДокумента.СтоимостьБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ 																		КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_СтоимостьРегл
	|		ТОГДА ДанныеДокумента.СтоимостьРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ 																		КАК СтоимостьРегл,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_СтоимостьУпр
	|		ТОГДА ДанныеДокумента.СтоимостьУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ 																		КАК СтоимостьУпр,
	|
	// Поля партионного учета версии 2.2
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|		И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|	ТОГДА
	|		(ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																		КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|		И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																		КАК АналитикаФинансовогоУчетаДокумента,
	|	ВЫБОР
	|		КОГДА НЕ &Константа_ПартионныйУчетВерсии22
	|		  ИЛИ ДанныеДокумента.Период < НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ ДанныеДокумента.ВидДеятельностиНДС
	|	КОНЕЦ 																		КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДСДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																		КАК ВидДеятельностиНДСДокумента,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В (
	|				ТИП(Документ.ВнутреннееПотребление),
	|				ТИП(Документ.СписаниеНедостачТоваров),
	|				ТИП(Документ.ПередачаТоваровМеждуОрганизациями),
	|				ТИП(Документ.ОтчетКомиссионераОСписании),
	|				ТИП(Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании))
	|			ТОГДА ДанныеДокумента.ВидДеятельностиНДС
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																		КАК КорВидДеятельностиНДС,
	|	ВЫБОР
	|	  КОГДА ЛОЖЬ
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																		КАК КорАналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_Партия
	|		И &Константа_ПартионныйУчетВерсии22
	|		И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		И (ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|			)
	|		ТОГДА ДанныеДокумента.Партия
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																		КАК Партия,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_АналитикаУчетаПартий
	|			И (ДанныеДокумента.УчетныеПолитикиФИФОСкользящаяОценка
	|			)
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПартий
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																		КАК АналитикаУчетаПартий,
	|
	|	ВЫБОР
	// Тип записи определяется в процедуре ОписаниеОперацийУчетаСебестоимости у следующих документов:
	//	- ОтчетПереработчика
	//	- ОтчетПереработчика2_5
	//	- КорректировкаРеализации
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ТипЗаписи
	|			ТОГДА ДанныеДокумента.ТипЗаписи
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы))
	|			ТОГДА ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(ДанныеДокумента.ПериодДокументаИсточника, МЕСЯЦ) < НАЧАЛОПЕРИОДА(ДанныеДокумента.Период, МЕСЯЦ)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Сторно)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|	КОНЕЦ																		КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы) 	КАК ОперацияУчетаСебестоимости,
	|	ДанныеДокумента.ДокументИсточник							  				КАК ДокументИсточник,
	|	ДанныеДокумента.ИдентификаторСтроки 						  				КАК ИдентификаторСтроки,
	|	ДанныеДокумента.ИдентификаторФинЗаписи 						  				КАК ИдентификаторФинЗаписи,
	|	ДанныеДокумента.НастройкаХозяйственнойОперации 				  				КАК НастройкаХозяйственнойОперации,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ДокументДвижения 
	|		ТОГДА ДанныеДокумента.ДокументДвижения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																		КАК ДокументДвижения,
	|	ДанныеДокумента.УчетныеПолитикиМетодОценкиСтоимостиТоваров					КАК МетодОценкиСтоимостиТоваров,
	|	ВЫБОР КОГДА ДанныеДокумента.УчетныеПолитикиОрганизацийСреднескользящаяОценка
	|		ТОГДА
	|			ВЫБОР КОГДА ДанныеДокумента.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоДвижениямДокументаИсточника)
	|				ИНАЧЕ ДанныеДокумента.УчетныеПолитикиСпособОпределенияСебестоимости
	|			КОНЕЦ
	|		ИНАЧЕ ДанныеДокумента.УчетныеПолитикиСпособОпределенияСебестоимости
	|	КОНЕЦ 															КАК СпособОпределенияСебестоимости
	|ПОМЕСТИТЬ ВТОперация_СписаниеНаРасходыАктивы
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы)
	// Для передачи товаров между организациями со списанием на расходы это движение делать не надо, т.к. в отличии от переработки, тут не будет дополнительного приходного движения 
	|	И НЕ (ЕСТЬNULL(ДанныеДокумента.ВидЗапасовТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// РАСХОД - списание комиссионного товара
	|ВЫБРАТЬ
	|	ДанныеДокумента.НомерОперации КАК НомерОперации,
	// Описание документа
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы))
	|			ТОГДА ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(ДанныеДокумента.ПериодДокументаИсточника, МЕСЯЦ) < НАЧАЛОПЕРИОДА(ДанныеДокумента.Период, МЕСЯЦ)
	|					ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ									КАК ВидДвижения,
	|	ДанныеДокумента.Период 					КАК Период,
	|
	// Поля учета номенклатуры
	|	ДанныеДокумента.Организация 														КАК Организация,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатуры, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ВидЗапасов
	|	КОНЕЦ																				КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию) 	КАК РазделУчета,
	|	НЕОПРЕДЕЛЕНО 																		КАК КорРазделУчета,
	|
	// Корреспондирующие поля
	|	НЕОПРЕДЕЛЕНО 																		КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО 																		КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО 																		КАК КорАналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.КорВидЗапасов
	|	КОНЕЦ																				КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО			    														КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО 																		КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО 																		КАК КорАналитикаУчетаПартий,
	|
	// Прочие поля
	|	ДанныеДокумента.ХозяйственнаяОперация 												КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение 														КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ДанныеДокумента.СтатьяРасходовАктивов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК СтатьяРасходовСписания,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ДанныеДокумента.АналитикаРасходовАктивов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|			ТОГДА ДанныеДокумента.СтатьяРасходовАктивов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК СтатьяАктивовПассивов,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|			ТОГДА ДанныеДокумента.АналитикаРасходовАктивов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаАктивовПассивов,
	|	ДанныеДокумента.ПериодДокументаИсточника											КАК ПериодПродажи,
	|	НЕОПРЕДЕЛЕНО																		КАК ГруппаПродукции,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_АналитикаУчетаПоПартнерам
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПоПартнерам
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаУчетаПоПартнерам,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_НастройкаСчетовУчета
	|			ТОГДА ДанныеДокумента.НастройкаСчетовУчета
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК НастройкаСчетовУчета,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ЗаказКлиента
	|		ТОГДА ДанныеДокумента.ЗаказКлиента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																				КАК ЗаказКлиента,
	|
	// Количественные и суммовые показатели
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы))
	|			ТОГДА ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(ДанныеДокумента.ПериодДокументаИсточника, МЕСЯЦ) < НАЧАЛОПЕРИОДА(ДанныеДокумента.Период, МЕСЯЦ)
	|					ТОГДА ДанныеДокумента.Количество
	|					ИНАЧЕ -ДанныеДокумента.Количество
	|				КОНЕЦ
	|		ИНАЧЕ ДанныеДокумента.Количество
	|	КОНЕЦ																				КАК Количество,
	|	0 																					КАК Стоимость,
	|	0 																					КАК СтоимостьБезНДС,
	|	0 																					КАК СтоимостьРегл,
	|	0 																					КАК СтоимостьУпр,
	|
	// Поля партионного учета версии 2.2
	|	НЕОПРЕДЕЛЕНО 																		КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|		И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаФинансовогоУчетаДокумента,
	|	НЕОПРЕДЕЛЕНО																		КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДСДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК ВидДеятельностиНДСДокумента,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В (
	|		  ТИП(Документ.ВнутреннееПотребление),
	|	   	  ТИП(Документ.СписаниеНедостачТоваров))
	|			ТОГДА ДанныеДокумента.ВидДеятельностиНДС
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО 																		КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО																		КАК Партия,
	|	НЕОПРЕДЕЛЕНО																		КАК АналитикаУчетаПартий,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В
	|		  (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы))
	|			ТОГДА ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(ДанныеДокумента.ПериодДокументаИсточника, МЕСЯЦ) < НАЧАЛОПЕРИОДА(ДанныеДокумента.Период, МЕСЯЦ)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Сторно)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|	КОНЕЦ																				КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы) 			КАК ОперацияУчетаСебестоимости,
	|	ДанныеДокумента.ДокументИсточник							  						КАК ДокументИсточник,
	|	ДанныеДокумента.ИдентификаторСтроки 						  						КАК ИдентификаторСтроки,
	|	ДанныеДокумента.ИдентификаторФинЗаписи 						  						КАК ИдентификаторФинЗаписи,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.Ссылка) В (ТИП(Документ.ВнутреннееПотребление))
	|		ТОГДА ДанныеДокумента.НастройкаХозяйственнойОперации
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеКомиссионныхТоваров)
	|	КОНЕЦ 																				КАК НастройкаХозяйственнойОперации,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ДокументДвижения 
	|		ТОГДА ДанныеДокумента.ДокументДвижения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																				КАК ДокументДвижения,
	|	ДанныеДокумента.УчетныеПолитикиМетодОценкиСтоимостиТоваров							КАК МетодОценкиСтоимостиТоваров,
	|	ВЫБОР КОГДА ДанныеДокумента.УчетныеПолитикиОрганизацийСреднескользящаяОценка
	|		ТОГДА
	|			ВЫБОР КОГДА ДанныеДокумента.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоДвижениямДокументаИсточника)
	|				ИНАЧЕ ДанныеДокумента.УчетныеПолитикиСпособОпределенияСебестоимости
	|			КОНЕЦ
	|		ИНАЧЕ ДанныеДокумента.УчетныеПолитикиСпособОпределенияСебестоимости
	|	КОНЕЦ 															КАК СпособОпределенияСебестоимости
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы)
	|	И ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// ПРИХОД - давальческий товар
	|ВЫБРАТЬ
	|	ДанныеДокумента.НомерОперации КАК НомерОперации,
	// Описание документа
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	ДанныеДокумента.Период 					КАК Период,
	|
	// Поля учета номенклатуры
	|	ДанныеДокумента.Организация 															КАК Организация,
	|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы))
	|		ТОГДА ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатуры
	|		ИНАЧЕ ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатуры
	|	КОНЕЦ																					КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы))
	|		ТОГДА ДанныеДокумента.ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная
	|		ИНАЧЕ ДанныеДокумента.ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная
	|	КОНЕЦ																					КАК АналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР КОГДА ДанныеДокумента.СпрНоменклатураТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		 И НЕ ДанныеДокумента.СпрНоменклатураПрослеживаемыйТовар
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы))
	|		ТОГДА ДанныеДокумента.КорВидЗапасов
	|		ИНАЧЕ ДанныеДокумента.ВидЗапасов
	|	КОНЕЦ																					КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_КорРазделУчета
	|			ТОГДА ДанныеДокумента.КорРазделУчета
	//		При списании на расходы выполняется изменение раздела учета - приход в ...КОформлениюСписания
	//		Особенность документа ОтчетДавальцу2_5:
	//		для него выполняется только изменение типа запасов с ПолуфабрикатДавальца на ПродукцияДавальца (кор. раздел определяется ниже, как для всех давальческих товаров)
	|		КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
	|			И НЕ ДанныеДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
	|															ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
	|															ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровДавальцаЗаСчетДавальца),
	|															ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровДавальцаНаРасходы))
	|			ТОГДА ВЫБОР КОГДА ДанныеДокумента.ВидЗапасовТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработкуКОформлениюСписания)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
	|				КОНЕЦ
	|		КОГДА ДанныеДокумента.Расчетное_КорРазделУчета <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ДанныеДокумента.Расчетное_КорРазделУчета
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																					КАК РазделУчета,
	|	НЕОПРЕДЕЛЕНО 																			КАК КорРазделУчета,
	|
	// Корреспондирующие поля
	|	НЕОПРЕДЕЛЕНО 																		КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО 																		КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО 																		КАК КорАналитикаУчетаНоменклатурыИсходная,
	|	НЕОПРЕДЕЛЕНО																		КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО			    														КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО 																		КАК КорПартия,
	|	НЕОПРЕДЕЛЕНО 																		КАК КорАналитикаУчетаПартий,
	|
	// Прочие поля
	|	ДанныеДокумента.ХозяйственнаяОперация 												КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение 														КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ДанныеДокумента.СтатьяРасходовАктивов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК СтатьяРасходовСписания,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА ДанныеДокумента.АналитикаРасходовАктивов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|			ТОГДА ДанныеДокумента.СтатьяРасходовАктивов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК СтатьяАктивовПассивов,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДанныеДокумента.СтатьяРасходовАктивов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|			ТОГДА ДанныеДокумента.АналитикаРасходовАктивов
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаАктивовПассивов,
	|	ДанныеДокумента.ПериодДокументаИсточника											КАК ПериодПродажи,
	|	НЕОПРЕДЕЛЕНО																		КАК ГруппаПродукции,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_АналитикаУчетаПоПартнерам
	|		ТОГДА ДанныеДокумента.АналитикаУчетаПоПартнерам
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаУчетаПоПартнерам,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_НастройкаСчетовУчета
	|			ТОГДА ДанныеДокумента.НастройкаСчетовУчета
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК НастройкаСчетовУчета,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ЗаказКлиента
	|		ТОГДА ДанныеДокумента.ЗаказКлиента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																				КАК ЗаказКлиента,
	|
	// Количественные и суммовые показатели
	|	ДанныеДокумента.Количество															КАК Количество,
	|	0 																					КАК Стоимость,
	|	0 																					КАК СтоимостьБезНДС,
	|	0 																					КАК СтоимостьРегл,
	|	0 																					КАК СтоимостьУпр,
	|
	// Поля партионного учета версии 2.2
	|	НЕОПРЕДЕЛЕНО 																		КАК АналитикаФинансовогоУчета,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|		И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ВЫБОР 
	|				КОГДА (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) = ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				КОГДА НЕ (ЕСТЬNULL(ДанныеДокумента.СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая, ЛОЖЬ)
	|						ИЛИ ДанныеДокумента.СпрКлючиНоменклатурыТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение))
	|					И ТИПЗНАЧЕНИЯ(ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета) <> ТИП(Справочник.ГруппыАналитическогоУчетаНоменклатуры)
	|				ТОГДА ДанныеДокумента.Расчетное_АналитикаФинансовогоУчета
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК АналитикаФинансовогоУчетаДокумента,
	|	ВЫБОР
	|		КОГДА НЕ &Константа_ПартионныйУчетВерсии22
	|		  ИЛИ ДанныеДокумента.Период < НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДанныеДокумента.ВидДеятельностиНДС
	|	КОНЕЦ 																				КАК ВидДеятельностиНДС,
	|	ВЫБОР КОГДА &Константа_ПартионныйУчетВерсии22
	|	  И ДанныеДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаПереходаНаПартионныйУчетВерсии22, МЕСЯЦ)
	|		ТОГДА ДанныеДокумента.ВидДеятельностиНДСДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ 																				КАК ВидДеятельностиНДСДокумента,
	|	НЕОПРЕДЕЛЕНО																		КАК КорВидДеятельностиНДС,
	|	НЕОПРЕДЕЛЕНО 																		КАК КорАналитикаФинансовогоУчета,
	|	НЕОПРЕДЕЛЕНО																		КАК Партия,
	|	НЕОПРЕДЕЛЕНО																		КАК АналитикаУчетаПартий,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение)								КАК ТипЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы) 			КАК ОперацияУчетаСебестоимости,
	|	ДанныеДокумента.ДокументИсточник							  						КАК ДокументИсточник,
	|	ДанныеДокумента.ИдентификаторСтроки 						  						КАК ИдентификаторСтроки,
	// Для прихода давальческой продукции идентификатор фин записи не заполняем, т.к. у давальческой продукции нет балансовой стоимости.
	|	&ИдентификаторНеиспользуемойФинЗаписи 						  						КАК ИдентификаторФинЗаписи,
	|	ДанныеДокумента.НастройкаХозяйственнойОперации 										КАК НастройкаХозяйственнойОперации,
	|	ВЫБОР КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ДокументДвижения 
	|		ТОГДА ДанныеДокумента.ДокументДвижения
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ																				КАК ДокументДвижения,
	|	ДанныеДокумента.УчетныеПолитикиМетодОценкиСтоимостиТоваров							КАК МетодОценкиСтоимостиТоваров,
	|	ВЫБОР КОГДА ДанныеДокумента.УчетныеПолитикиОрганизацийСреднескользящаяОценка
	|		ТОГДА
	|			ВЫБОР КОГДА ДанныеДокумента.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоДвижениямДокументаИсточника)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоКорДвижению)
	|			КОНЕЦ
	|		ИНАЧЕ ДанныеДокумента.УчетныеПолитикиСпособОпределенияСебестоимости
	|	КОНЕЦ 															КАК СпособОпределенияСебестоимости
	|ИЗ
	|	ВТДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы)
	// Условие формирования приходных движений по давальческим товарам должны совпадать с условиями для КорАналитикаУчетаНоменклатуры и КорВидЗапасов в расходном движении в этой операции
	|	И ((ДанныеДокумента.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы))
	|		И ДанныеДокумента.АналитикаУчетаНоменклатурыНоменклатураТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|		ИЛИ 
	|		(ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5)
	|			И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы)
	|			И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровДавальцаЗаСчетДавальца)
	|			И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровДавальцаНаРасходы)
	|			И ДанныеДокумента.ВидЗапасовТипЗапасов В
	|				(ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
	|				 ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
	|				 ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))))
	|";
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТОперация_СписаниеНаРасходыАктивы", ТекстЗапросаОтражения);
	
КонецПроцедуры

#КонецОбласти

#Область ТекстыВспомогательныхВременныхТаблиц

Процедура ДобавитьТекстЗапросаТаблицыДанные(ПараметрыОтражения)
	
	ИмяРегистра 	   			= ПараметрыОтражения.ИмяРегистра;
	ТаблицаПолей 				= ПараметрыОтражения.РегистрыДляОтражения[ИмяРегистра].ТаблицаПолей;
	СхемыЗапросовДокумента		= ПараметрыОтражения.РегистрыДляОтражения[ИмяРегистра].СхемыЗапросовДокумента;
	
	ПримитивныеТипы = Новый ОписаниеТипов("Булево, Дата, Число, Строка, УникальныйИдентификатор");
	НесуммируемыеПоля = Новый Структура("КодСтроки");
	
	// Соберем схему запроса объединения выборки данных.
	СхемаЗапроса = Новый СхемаЗапроса;
	ТекстЗапроса = "";
	
	ПоляРегистра = ПараметрыОтражения.РегистрыДляОтражения[ПараметрыОтражения.ИмяРегистра].ПоляРегистра;
	
	Для Каждого ОписаниеПоля Из ТаблицаПолей Цикл
		
		ТекстЗапроса = ТекстЗапроса + ?(ТекстЗапроса = "", "", "," + Символы.ПС)
			+ "	" + ?(ПоляРегистра.Свойство(ОписаниеПоля.Имя), "Т." + ОписаниеПоля.Имя, "НЕОПРЕДЕЛЕНО") + " КАК " + ОписаниеПоля.Имя;
		
		ТекстЗапроса = ТекстЗапроса + "," + Символы.ПС + "	ЛОЖЬ КАК ЕстьПолеЗапроса_" + ОписаниеПоля.Имя;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "," + Символы.ПС + "	0 КАК НомерОперации";
	ТекстЗапроса = ТекстЗапроса + "," + Символы.ПС + "	ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ПустаяСсылка) КАК ОперацияУчетаСебестоимости";
	
	ШаблонТекстаЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 0
	|	&ПоляЗапроса
	|ИЗ
	|	#ИмяРегистра КАК Т";
	
	ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "#ИмяРегистра", "РегистрНакопления" + "." + ПараметрыОтражения.ИмяРегистра);
	ТекстЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&ПоляЗапроса", ТекстЗапроса);
	
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	
	ТекущийЗапросПакета = СхемаЗапроса.ПакетЗапросов.Получить(0); //ЗапросВыбораСхемыЗапроса
	ОператорыЗапроса  = ТекущийЗапросПакета.Операторы;
	КолонкиЗапроса    = ТекущийЗапросПакета.Колонки;
	КоличествоКолонок = ТекущийЗапросПакета.Колонки.Количество();
	
	НомерЗапроса = 0;
	
	Для Каждого ОписаниеСхемы Из СхемыЗапросовДокумента Цикл
		
		НомерЗапроса = НомерЗапроса + 1;
		
		ПакетЗапросов = ОписаниеСхемы.СхемаЗапроса.ПакетЗапросов; // ПакетЗапросовСхемыЗапроса
		ТекущийЗапросПакета = ПакетЗапросов.Получить(0); //ЗапросВыбораСхемыЗапроса
		ОператорПодзапроса = ТекущийЗапросПакета.Операторы[0];
		КолонкиПодзапроса  = ТекущийЗапросПакета.Колонки;
		
		ТекущийОператор = ОператорыЗапроса.Добавить(ОператорПодзапроса);
		ТекущийОператор.ВыбираемыеПоля.Очистить();
		
		НомерКолонки = 0;
		
		Для Каждого ОписаниеПоля Из ТаблицаПолей Цикл
			
			КолонкаПодзапроса = КолонкиПодзапроса.Найти(ОписаниеПоля.Имя);
			
			// Значение текущего поля
			Если КолонкаПодзапроса <> Неопределено Тогда
				КолонкиЗапроса.Получить(НомерКолонки).Поля.Установить(НомерЗапроса, КолонкаПодзапроса.Поля[0]);
			Иначе
				ТекущийОператор.ВыбираемыеПоля.Добавить("НЕОПРЕДЕЛЕНО", НомерКолонки);
			КонецЕсли;
			
			НомерКолонки = НомерКолонки + 1;
			
			// Значение поля "ЕстьПолеЗапроса_<текущее поле>"
			Если КолонкаПодзапроса = Неопределено Тогда
				ТекущийОператор.ВыбираемыеПоля.Добавить("ЛОЖЬ", НомерКолонки);
			Иначе
				ТекущийОператор.ВыбираемыеПоля.Добавить("ИСТИНА", НомерКолонки);
			КонецЕсли;
			
			НомерКолонки = НомерКолонки + 1;
			
		КонецЦикла;
		
		ТекущийОператор.ВыбираемыеПоля.Добавить(СокрЛП(НомерЗапроса), НомерКолонки);
		
		НомерКолонки = НомерКолонки + 1;
		ТекущийОператор.ВыбираемыеПоля.Добавить("ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости." + ОбщегоНазначения.ИмяЗначенияПеречисления(ОписаниеСхемы.ВидОперации) + ")", НомерКолонки);
		
	КонецЦикла;
	
	Пока КолонкиЗапроса.Количество() > КоличествоКолонок Цикл
		КолонкиЗапроса.Удалить(КолонкиЗапроса.Количество() - 1);
	КонецЦикла;
	
	ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "NULL,", "НЕОПРЕДЕЛЕНО,");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "null,", "НЕОПРЕДЕЛЕНО,");
	
	ТекстПоляВыборки = "";
	ТекстПоляВыборкиНеЧисловые = "";
	ТекстПоляВыборкиЧисловые = "";
	ТекстПоляТипизированные = "";
	
	Для Каждого ОписаниеПоля Из ТаблицаПолей Цикл
		
		ТекстПоляВыборки = ТекстПоляВыборки + ?(ТекстПоляВыборки = "", "", ",") + "
			|	ДанныеДокумента." + ОписаниеПоля.Имя + " КАК " + ОписаниеПоля.Имя;
		
		Если ОписаниеПоля.Тип.Типы().Количество() = 1
		 И ОписаниеПоля.Тип.Типы()[0] = Тип("Число")
		 И НЕ НесуммируемыеПоля.Свойство(ОписаниеПоля.Имя) Тогда
			
			ТекстПоляВыборкиЧисловые = ТекстПоляВыборкиЧисловые + ?(ТекстПоляВыборкиЧисловые = "", "", ",") + "
				|	ДанныеДокумента." + ОписаниеПоля.Имя + " КАК " + ОписаниеПоля.Имя;
			
	 	Иначе
			
			ТекстПоляВыборкиНеЧисловые = ТекстПоляВыборкиНеЧисловые + ?(ТекстПоляВыборкиНеЧисловые = "", "", ",") + "
				|	ДанныеДокумента." + ОписаниеПоля.Имя + " КАК " + ОписаниеПоля.Имя;
			
	 	КонецЕсли;
	 	
		Если ОписаниеПоля.Тип.Типы().Количество() = 1 Тогда
			
			ТипПоля = ОписаниеПоля.Тип.Типы()[0];
			
			Если НЕ ПримитивныеТипы.СодержитТип(ТипПоля) Тогда
				
				МетаданныеДляТипа = Метаданные.НайтиПоТипу(ТипПоля);
				
				Если МетаданныеДляТипа <> Неопределено Тогда
					ТекстПоляТипизированные = ТекстПоляТипизированные + ?(ТекстПоляТипизированные = "", "", ",") + "
						|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Т." + ОписаниеПоля.Имя + ") = ТИП(" + МетаданныеДляТипа.ПолноеИмя() + ")
						|		ТОГДА Т." + ОписаниеПоля.Имя + "
						|		ИНАЧЕ ЗНАЧЕНИЕ(" + МетаданныеДляТипа.ПолноеИмя() + ".ПустаяСсылка)
						|	КОНЕЦ КАК " + ОписаниеПоля.Имя;
				Иначе
					ТекстПоляТипизированные = ТекстПоляТипизированные + ?(ТекстПоляТипизированные = "", "", ",") + "
						|	Т." + ОписаниеПоля.Имя + " КАК " + ОписаниеПоля.Имя;
				КонецЕсли;
				
			Иначе
				
				Если ТипПоля = Тип("Дата") Тогда
					ТекстПоляТипизированные = ТекстПоляТипизированные + ?(ТекстПоляТипизированные = "", "", ",") + "
						|	ВЫРАЗИТЬ(ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Т." + ОписаниеПоля.Имя + ") = ТИП(ДАТА) ТОГДА Т." + ОписаниеПоля.Имя + " ИНАЧЕ ДАТАВРЕМЯ(1,1,1) КОНЕЦ КАК ДАТА) КАК " + ОписаниеПоля.Имя;
					
				ИначеЕсли ТипПоля = Тип("Число") Тогда
					
					Если ОписаниеПоля.Тип.КвалификаторыЧисла.Разрядность = 0 Тогда
						ФорматЧисла = "31,3";
					Иначе
						ФорматЧисла = Формат(ОписаниеПоля.Тип.КвалификаторыЧисла.Разрядность, "ЧН=0; ЧГ=") + ","
							+ Формат(ОписаниеПоля.Тип.КвалификаторыЧисла.РазрядностьДробнойЧасти, "ЧН=0; ЧГ=");
					КонецЕсли;
					
					ТекстПоляТипизированные = ТекстПоляТипизированные + ?(ТекстПоляТипизированные = "", "", ",") + "
						|	ВЫРАЗИТЬ(ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Т." + ОписаниеПоля.Имя + ") = ТИП(ЧИСЛО) ТОГДА Т." + ОписаниеПоля.Имя + " ИНАЧЕ 0 КОНЕЦ КАК ЧИСЛО (" + ФорматЧисла + ")) КАК " + ОписаниеПоля.Имя;
					
				ИначеЕсли ТипПоля = Тип("Булево") Тогда
					ТекстПоляТипизированные = ТекстПоляТипизированные + ?(ТекстПоляТипизированные = "", "", ",") + "
						|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Т." + ОписаниеПоля.Имя + ") = ТИП(БУЛЕВО) ТОГДА Т." + ОписаниеПоля.Имя + " ИНАЧЕ ЛОЖЬ КОНЕЦ КАК " + ОписаниеПоля.Имя;
					
				Иначе
					ТекстПоляТипизированные = ТекстПоляТипизированные + ?(ТекстПоляТипизированные = "", "", ",") + "
						|	Т." + ОписаниеПоля.Имя + " КАК " + ОписаниеПоля.Имя;
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			ТекстПоляТипизированные = ТекстПоляТипизированные + ?(ТекстПоляТипизированные = "", "", ",") + "
				|	Т." + ОписаниеПоля.Имя + " КАК " + ОписаниеПоля.Имя;
		КонецЕсли;
		
		ТекстПоляВыборки = ТекстПоляВыборки + ?(ТекстПоляВыборки = "", "", ",") + "
			|	ДанныеДокумента.ЕстьПолеЗапроса_" + ОписаниеПоля.Имя + " КАК ЕстьПолеЗапроса_" + ОписаниеПоля.Имя;
		ТекстПоляТипизированные = ТекстПоляТипизированные + ?(ТекстПоляТипизированные = "", "", ",") + "
			|	Т.ЕстьПолеЗапроса_" + ОписаниеПоля.Имя + " КАК ЕстьПолеЗапроса_" + ОписаниеПоля.Имя;
		ТекстПоляВыборкиНеЧисловые = ТекстПоляВыборкиНеЧисловые + ?(ТекстПоляВыборкиНеЧисловые = "", "", ",") + "
			|	ДанныеДокумента.ЕстьПолеЗапроса_" + ОписаниеПоля.Имя + " КАК ЕстьПолеЗапроса_" + ОписаниеПоля.Имя;
		
	КонецЦикла;
	
	// Дополнительные поля
	Если ПараметрыОтражения.МетаданныеДокумента.Реквизиты.Найти("ХозяйственнаяОперация") <> Неопределено Тогда
		ТекстПоляТипизированные = ТекстПоляТипизированные + ?(ТекстПоляТипизированные = "", "", ",") + "
			|	ВЫРАЗИТЬ(Т.Ссылка КАК Документ." + ПараметрыОтражения.МетаданныеДокумента.Имя + ").ХозяйственнаяОперация КАК ХозяйственнаяОперацияДокумента";
	Иначе
		ТекстПоляТипизированные = ТекстПоляТипизированные + ?(ТекстПоляТипизированные = "", "", ",") + "
			|	Т.ХозяйственнаяОперация КАК ХозяйственнаяОперацияДокумента";
	КонецЕсли;
	
	ТекстЗапросаВременнаяТаблица =
		"ВЫБРАТЬ
		|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
		|	Т.НомерОперации КАК НомерОперации,
		|	Т.ОперацияУчетаСебестоимости КАК ОперацияУчетаСебестоимости,
		|	&ТекстПоляТипизированные
		|ПОМЕСТИТЬ ВТДанныеДокументаПредварительная
		|ИЗ
		|	#ТекстЗапроса КАК Т
		|";
	
	ТекстЗапросаВременнаяТаблица = СтрЗаменить(ТекстЗапросаВременнаяТаблица, "&ТекстПоляТипизированные", СокрЛП(ТекстПоляТипизированные));
	ТекстЗапросаВременнаяТаблица = СтрЗаменить(ТекстЗапросаВременнаяТаблица, "#ТекстЗапроса", "(" + ТекстЗапроса + ")");
	ТекстЗапросаВременнаяТаблица = ТекстЗапросаВременнаяТаблица + "
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры
		|";
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТДанныеДокументаПредварительная", ТекстЗапросаВременнаяТаблица);
	
	// Сформируем вспомогательные временные таблицы
	ДобавитьТекстЗапросаФормированияАналитикНоменклатуры(ПараметрыОтражения);
	ДобавитьТекстЗапросаФормированияАналитикиФинансовогоУчета(ПараметрыОтражения);
	ДобавитьТекстЗапросаУчетныеПолитики(ПараметрыОтражения);
	ДобавитьТекстЗапросаРазделУчета(ПараметрыОтражения);
	ДобавитьТекстЗапросаНастроекПризнанияНДД(ПараметрыОтражения);
	
	// Сформируем таблицу ВТДанныеДокумента со всеми дополнительныим полями, необходимыми для формирования временных таблиц ВТОперация_<имя операции себестоимости>
	// Важно! В таблицах ВТОперация_<имя операции себестоимости> не следует
	// - обращаться к полям реквизитов "через две точки"
	// - добавлять соединения с другими временными таблицами.
	// Все необходимые поля и соединения следует добавлять в таблицу ВТДанныеДокумента.  
	ТекстЗапросаВременнаяТаблица =
		"ВЫБРАТЬ
		|	ДанныеДокумента.НомерОперации КАК НомерОперации,
		|	ДанныеДокумента.ОперацияУчетаСебестоимости КАК ОперацияУчетаСебестоимости,
		|	ДанныеДокумента.ХозяйственнаяОперацияДокумента КАК ХозяйственнаяОперацияДокумента,
		|	&ТекстПоляВыборкиНеЧисловые,
		|
		// Поля из таблицы ДанныеДокумента
		|	ДанныеДокумента.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КАК АналитикаУчетаНоменклатурыНазначениеНаправлениеДеятельности,
		|	ДанныеДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры КАК АналитикаУчетаНоменклатурыНоменклатураТипНоменклатуры,
		|	ДанныеДокумента.ВидЗапасов.ТипЗапасов КАК ВидЗапасовТипЗапасов,
		|	ДанныеДокумента.КорАналитикаУчетаНоменклатуры.СкладскаяТерритория.ЦеховаяКладовая КАК КорАналитикаУчетаНоменклатурыСкладскаяТерриторияЦеховаяКладовая,
		|	ДанныеДокумента.КорАналитикаУчетаНоменклатуры.ТипМестаХранения КАК КорАналитикаУчетаНоменклатурыТипМестаХранения,
		|	ДанныеДокумента.КорВидЗапасов.ТипЗапасов КАК КорВидЗапасовТипЗапасов,
		// Поля из таблицы ВТЗаменаАналитикУчетаНоменклатуры
		|	ВТАналитикиНоменклатуры.АналитикаУчетаНоменклатуры КАК ВТАналитикиНоменклатурыАналитикаУчетаНоменклатуры,
		|	ВТАналитикиНоменклатуры.АналитикаУчетаНоменклатурыКомитента КАК ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыКомитента,
		|	ВТАналитикиНоменклатуры.АналитикаУчетаНоменклатурыИсходная КАК ВТАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная,
		|	ВТКорАналитикиНоменклатуры.АналитикаУчетаНоменклатуры КАК ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатуры,
		|	ВТКорАналитикиНоменклатуры.АналитикаУчетаНоменклатурыКомитента КАК ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатурыКомитента,
		|	ВТКорАналитикиНоменклатуры.АналитикаУчетаНоменклатурыИсходная КАК ВТКорАналитикиНоменклатурыАналитикаУчетаНоменклатурыИсходная,
		|	ВТАналитикиНоменклатуры.АналитикаУчетаНоменклатурыИсходная.Назначение.ТипНазначения КАК АналитикаУчетаНоменклатурыИсходнаяНазначениеТипНазначения,
		|	ВТКорАналитикиНоменклатуры.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры КАК КорАналитикаУчетаНоменклатурыНоменклатураТипНоменклатуры,
		// Поля из аналитики номенклатуры
		|	СпрКлючиНоменклатуры.Договор.ТипДоговора КАК СпрКлючиНоменклатурыДоговорТипДоговора,
		|	СпрКлючиНоменклатуры.СкладскаяТерритория.ЦеховаяКладовая КАК СпрКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая,
		|	СпрКлючиНоменклатуры.ТипМестаХранения КАК СпрКлючиНоменклатурыТипМестаХранения,
		|	СпрНоменклатура.ТипНоменклатуры КАК СпрНоменклатураТипНоменклатуры,
		|	СпрНоменклатура.ПрослеживаемыйТовар КАК СпрНоменклатураПрослеживаемыйТовар,
		// Поля из кор. аналитики номенклатуры
		|	СпрКорКлючиНоменклатуры.СкладскаяТерритория.ЦеховаяКладовая КАК СпрКорКлючиНоменклатурыСкладскаяТерриторияЦеховаяКладовая,
		|	СпрКорКлючиНоменклатуры.ТипМестаХранения КАК СпрКорКлючиНоменклатурыТипМестаХранения,
		|	СпрКорНоменклатура.ТипНоменклатуры КАК СпрКорНоменклатураТипНоменклатуры,
		// Поля из организаций и учетных политик
		|	КорОрганизации.Ссылка  КАК КорОрганизацияСсылка,
		|	УчетныеПолитикиОрганизаций.МетодОценкиСтоимостиТоваров КАК УчетныеПолитикиМетодОценкиСтоимостиТоваров,
		|	УчетныеПолитикиОрганизаций.ФИФОСкользящаяОценка КАК УчетныеПолитикиФИФОСкользящаяОценка,
		|	УчетныеПолитикиОрганизаций.СреднескользящаяОценка КАК УчетныеПолитикиОрганизацийСреднескользящаяОценка,
		|	УчетныеПолитикиОрганизаций.СпособОпределенияСебестоимости КАК УчетныеПолитикиСпособОпределенияСебестоимости,
		|	УчетныеПолитикиОрганизаций.ПлательщикНДД КАК УчетныеПолитикиПлательщикНДД,
		|	КорУчетныеПолитикиОрганизаций.МетодОценкиСтоимостиТоваров КАК КорУчетныеПолитикиМетодОценкиСтоимостиТоваров,
		|	КорУчетныеПолитикиОрганизаций.ФИФОСкользящаяОценка КАК КорУчетныеПолитикиФИФОСкользящаяОценка,
		|	КорУчетныеПолитикиОрганизаций.СреднескользящаяОценка КАК КорУчетныеПолитикиОрганизацийСреднескользящаяОценка,
		|	КорУчетныеПолитикиОрганизаций.ПлательщикНДД КАК КорУчетныеПолитикиПлательщикНДД,
		// Разделы учета
		|	РазделыУчета.Расчетное_РазделУчета КАК Расчетное_РазделУчета,
		|	РазделыУчета.Расчетное_КорРазделУчета КАК Расчетное_КорРазделУчета,
		// Аналитики финансового учета
		|	ВТАналитикиФинансовогоУчета.АналитикаФинансовогоУчета КАК Расчетное_АналитикаФинансовогоУчета,
		|	ВТКорАналитикиФинансовогоУчета.АналитикаФинансовогоУчета КАК Расчетное_КорАналитикаФинансовогоУчета,
		|
		|	&ТекстПоляВыборкиЧисловые
		|ПОМЕСТИТЬ ВТДанныеДокумента
		|ИЗ
		|	#ДанныеДокумента КАК ДанныеДокумента
		// Аналитика номенклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаменаАналитикУчетаНоменклатуры КАК ВТАналитикиНоменклатуры
		|		ПО ДанныеДокумента.АналитикаУчетаНоменклатуры = ВТАналитикиНоменклатуры.АналитикаУчетаНоменклатурыИсходная
		|		И ДанныеДокумента.ВидЗапасов = ВТАналитикиНоменклатуры.ВидЗапасов
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СпрКлючиНоменклатуры
		|		ПО СпрКлючиНоменклатуры.Ссылка = ДанныеДокумента.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = СпрКлючиНоменклатуры.Номенклатура
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТАналитикиФинансовогоУчета КАК ВТАналитикиФинансовогоУчета
		|		ПО ДанныеДокумента.Сделка = ВТАналитикиФинансовогоУчета.Сделка
		|		И ДанныеДокумента.Менеджер = ВТАналитикиФинансовогоУчета.Менеджер
		|		И ДанныеДокумента.Подразделение = ВТАналитикиФинансовогоУчета.Подразделение
		|		И ДанныеДокумента.ГруппаПродукции = ВТАналитикиФинансовогоУчета.ГруппаПродукции
		|		И СпрНоменклатура.ТипНоменклатуры = ВТАналитикиФинансовогоУчета.ТипНоменклатуры
		// Кор. аналитика номенклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаменаАналитикУчетаНоменклатуры КАК ВТКорАналитикиНоменклатуры
		|		ПО ДанныеДокумента.КорАналитикаУчетаНоменклатуры = ВТКорАналитикиНоменклатуры.АналитикаУчетаНоменклатурыИсходная
		|		И ДанныеДокумента.КорВидЗапасов = ВТКорАналитикиНоменклатуры.ВидЗапасов
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СпрКорКлючиНоменклатуры
		|		ПО СпрКорКлючиНоменклатуры.Ссылка = ВТКорАналитикиНоменклатуры.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрКорНоменклатура
		|		ПО СпрКорНоменклатура.Ссылка = СпрКорКлючиНоменклатуры.Номенклатура
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТАналитикиФинансовогоУчета КАК ВТКорАналитикиФинансовогоУчета
		|		ПО ДанныеДокумента.Сделка = ВТКорАналитикиФинансовогоУчета.Сделка
		|		И ДанныеДокумента.Менеджер = ВТКорАналитикиФинансовогоУчета.Менеджер
		|		И ДанныеДокумента.Подразделение = ВТКорАналитикиФинансовогоУчета.Подразделение
		|		И ДанныеДокумента.ГруппаПродукции = ВТКорАналитикиФинансовогоУчета.ГруппаПродукции
		|		И СпрКорНоменклатура.ТипНоменклатуры = ВТКорАналитикиФинансовогоУчета.ТипНоменклатуры
		// Организации и учетные политики
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК КорОрганизации
		|		ПО ДанныеДокумента.КорОрганизация = КорОрганизации.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиОрганизаций КАК КорУчетныеПолитикиОрганизаций
		|		ПО ДанныеДокумента.КорОрганизация = КорУчетныеПолитикиОрганизаций.Организация
		|		И ДанныеДокумента.Период = КорУчетныеПолитикиОрганизаций.Период
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиОрганизаций КАК УчетныеПолитикиОрганизаций
		|		ПО ДанныеДокумента.Организация = УчетныеПолитикиОрганизаций.Организация
		|		И ДанныеДокумента.Период = УчетныеПолитикиОрганизаций.Период
		// Разделы учета
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТРазделыУчета КАК РазделыУчета
		|		ПО &УсловиеСоединениеСРазделамиУчета
		|";
	
	ТекстЗапросаВременнаяТаблица = ТекстЗапросаВременнаяТаблица + "
		|ИНДЕКСИРОВАТЬ ПО
		|	ОперацияУчетаСебестоимости,
		|	ХозяйственнаяОперация
		|";
	
	ТекстЗапросаВременнаяТаблица = СтрЗаменить(ТекстЗапросаВременнаяТаблица, "&ТекстПоляВыборкиНеЧисловые", СокрЛП(ТекстПоляВыборкиНеЧисловые));
	ТекстЗапросаВременнаяТаблица = СтрЗаменить(ТекстЗапросаВременнаяТаблица, "&ТекстПоляВыборкиЧисловые", СокрЛП(ТекстПоляВыборкиЧисловые));
	// При преобразовании таблицы #ДанныеДокумента механизмом проведения псевдоним таблицы ДанныеДокумента меняется на Т, но не в секции соединений
	ТекстЗапросаВременнаяТаблица = СтрЗаменить(ТекстЗапросаВременнаяТаблица, "&УсловиеСоединениеСРазделамиУчета", "Т.НомерЗаписи = РазделыУчета.НомерЗаписи");
	
	ТекстЗапросаДанные =
		"ВЫБРАТЬ
		|	Т.НомерОперации КАК НомерОперации,
		|	Т.ОперацияУчетаСебестоимости КАК ОперацияУчетаСебестоимости,
		|	Т.ХозяйственнаяОперацияДокумента КАК ХозяйственнаяОперацияДокумента,
		|	&ТекстПоляВыборки
		|ИЗ
		|	ВТДанныеДокументаПредварительная КАК Т
		|";
	
	ТекстЗапросаДанные = СтрЗаменить(ТекстЗапросаДанные, "&ТекстПоляВыборки", СтрЗаменить(СокрЛП(ТекстПоляВыборки), "ДанныеДокумента.", "Т."));
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТДанныеДокумента", ТекстЗапросаВременнаяТаблица);
	ПараметрыОтражения.ТекстыЗапросовДанныхДокумента.Вставить("ДанныеДокумента", ТекстЗапросаДанные);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаФормированияАналитикНоменклатуры(ПараметрыОтражения)
	
	ТекстЗапросаВременнаяТаблица =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(СпрВидыЗапасов.Ссылка, ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)) КАК ВидЗапасов,
	|	ДанныеДокумента.ВидЗапасов КАК ВидЗапасовИсходный,
	|	ДанныеДокумента.Период КАК Период
	|ПОМЕСТИТЬ ВТАналитикиУчетаНоменклатурыДокумента
	|ИЗ
	|	ВТДанныеДокументаПредварительная КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО ДанныеДокумента.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|";
	
	Если ЕстьПолеТаблицыДанные(ПараметрыОтражения, "КорАналитикаУчетаНоменклатуры") Тогда
		
		ТекстЗапросаВременнаяТаблица = ТекстЗапросаВременнаяТаблица + "
		|ОБЪЕДИНИТЬ
		|" + "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеДокумента.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ЕСТЬNULL(СпрВидыЗапасов.Ссылка, ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)) КАК ВидЗапасов,
		|	ДанныеДокумента.КорВидЗапасов КАК ВидЗапасовИсходный,
		|	ДанныеДокумента.Период КАК Период
		|ИЗ
		|	ВТДанныеДокументаПредварительная КАК ДанныеДокумента
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
		|	ПО ДанныеДокумента.КорВидЗапасов = СпрВидыЗапасов.Ссылка
		|";
		
	КонецЕсли;

	ТекстЗапросаВременнаяТаблица = ТекстЗапросаВременнаяТаблица + "
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры";
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТАналитикиУчетаНоменклатурыДокумента", ТекстЗапросаВременнаяТаблица);
	
	ТекстЗапросаВременнаяТаблица =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АналитикиДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатурыИсходная,
	|	ВЫБОР КОГДА &Константа_УчитыватьСебестоимостьТоваровПоНазначениям
	|	  И АналитикиДокумента.Период >= НАЧАЛОПЕРИОДА(&Константа_ДатаВключенияОбособленногоУчетаСебестоимостиПоНазначениям, МЕСЯЦ)
	|		ТОГДА АналитикиДокумента.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаБезНазначения.КлючАналитики
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(АналитикаКомитента.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыКомитента,
	|	АналитикиДокумента.ВидЗапасовИсходный КАК ВидЗапасов
	|ПОМЕСТИТЬ ВТЗаменаАналитикУчетаНоменклатуры
	|ИЗ
	|	ВТАналитикиУчетаНоменклатурыДокумента КАК АналитикиДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО АналитикиДокумента.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
	|		ПО Аналитика.Номенклатура = АналитикаБезНазначения.Номенклатура
	|		И Аналитика.Характеристика = АналитикаБезНазначения.Характеристика
	|		И Аналитика.Серия = АналитикаБезНазначения.Серия
	|		И Аналитика.МестоХранения = АналитикаБезНазначения.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаБезНазначения.Назначение
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомитента
	|	ПО	АналитикиДокумента.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаКомитента.Номенклатура
	|		И АналитикиДокумента.АналитикаУчетаНоменклатуры.Характеристика = АналитикаКомитента.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаКомитента.Назначение
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомитента.Серия
	|		И АналитикиДокумента.ВидЗапасов.ВладелецТовара = АналитикаКомитента.МестоХранения
	|		И АналитикиДокумента.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатурыИсходная
	|";
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТЗаменаАналитикУчетаНоменклатуры", ТекстЗапросаВременнаяТаблица);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаФормированияАналитикиФинансовогоУчета(ПараметрыОтражения)
	
	ТекстЗапросаВременнаяТаблица =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Сделка 			КАК Сделка,
	|	ДанныеДокумента.Менеджер 		КАК Менеджер,
	|	ДанныеДокумента.Подразделение 	КАК Подразделение,
	|	ДанныеДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры	КАК ТипНоменклатуры,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ЕстьПолеЗапроса_ГруппаПродукции
	|			ТОГДА ДанныеДокумента.ГруппаПродукции
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК ГруппаПродукции,
	|	ВЫБОР
	
	// Для работ и услуг подразделение, менеджер или сделка не учитываются в аналитике финансового учета.
	// Менеджер, подразделение и сделка учитываются только для товаров. 
	|		КОГДА ДанныеДокумента.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА &Константа_ФормироватьВидыЗапасовПоСделкам
	|			И ЕСТЬNULL(Сделки.Ссылка.ОбособленныйУчетТоваровПоСделке, ЛОЖЬ)
	|			ТОГДА ЕСТЬNULL(Сделки.Ссылка, НЕОПРЕДЕЛЕНО)
	|		КОГДА &Константа_ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|		 И ЕСТЬNULL(Подразделения.ВариантОбособленногоУчетаТоваров, ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПустаяСсылка))
	|			= ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|			ТОГДА ЕСТЬNULL(Пользователи.Ссылка, НЕОПРЕДЕЛЕНО)
	|		КОГДА &Константа_ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|		 И ЕСТЬNULL(Подразделения.ВариантОбособленногоУчетаТоваров, ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПустаяСсылка))
	|			= ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|			ТОГДА ЕСТЬNULL(Подразделения.Ссылка, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаФинансовогоУчета
	|ПОМЕСТИТЬ ВТАналитикиФинансовогоУчета
	|ИЗ
	|	ВТДанныеДокументаПредварительная КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК Подразделения
	|		ПО ДанныеДокумента.Подразделение = Подразделения.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СделкиСКлиентами КАК Сделки
	|		ПО ДанныеДокумента.Сделка = Сделки.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО ДанныеДокумента.Менеджер = Пользователи.Ссылка
	|";
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТАналитикиФинансовогоУчета", ТекстЗапросаВременнаяТаблица);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаУчетныеПолитики(ПараметрыОтражения)
	
	ТекстЗапросаВременнаяТаблица =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВЫБОР КОГДА ДанныеДокумента.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		ТОГДА ДанныеДокумента.Организация
	|		ИНАЧЕ ДанныеДокумента.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	ДанныеДокумента.Период КАК Период
	|ПОМЕСТИТЬ ВТОрганизацииДокумента
	|ИЗ
	|	ВТДанныеДокументаПредварительная КАК ДанныеДокумента
	|";
	
	Если ЕстьПолеТаблицыДанные(ПараметрыОтражения, "КорОрганизация") Тогда
		
		ТекстЗапросаВременнаяТаблица = ТекстЗапросаВременнаяТаблица + "
		|ОБЪЕДИНИТЬ
		|" + "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеДокумента.КорОрганизация КАК Организация,
		|	ВЫБОР КОГДА ДанныеДокумента.КорОрганизация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|		ТОГДА ДанныеДокумента.КорОрганизация
		|		ИНАЧЕ ДанныеДокумента.КорОрганизация.ГоловнаяОрганизация
		|	КОНЕЦ КАК ГоловнаяОрганизация,
		|	ДанныеДокумента.Период КАК Период
		|ИЗ
		|	ВТДанныеДокументаПредварительная КАК ДанныеДокумента
		|";
		
	КонецЕсли;

	ТекстЗапросаВременнаяТаблица = ТекстЗапросаВременнаяТаблица + "
	|ИНДЕКСИРОВАТЬ ПО
	|	ГоловнаяОрганизация";
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТОрганизацииДокумента", ТекстЗапросаВременнаяТаблица);
	
	ТекстЗапросаВременнаяТаблица =
	"ВЫБРАТЬ
	|	АналитикиДокумента.Организация КАК Организация,
	|	АналитикиДокумента.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	АналитикиДокумента.Период КАК Период,
	|	МАКСИМУМ(УчетныеПолитики.Период) КАК ПериодПолитики,
	|	МАКСИМУМ(НастройкиСистемыНалогообложения.Период) КАК ПериодНастройки
	|ПОМЕСТИТЬ ВТПериодыУчетныхПолитикОрганизаций
	|ИЗ
	|	ВТОрганизацииДокумента КАК АналитикиДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК УчетныеПолитики
	|			ПО АналитикиДокумента.ГоловнаяОрганизация = УчетныеПолитики.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
	|			ПО АналитикиДокумента.ГоловнаяОрганизация = НастройкиСистемыНалогообложения.Организация
	|ГДЕ
	|	УчетныеПолитики.Период <= КОНЕЦПЕРИОДА(АналитикиДокумента.Период, МЕСЯЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	АналитикиДокумента.Организация,
	|	АналитикиДокумента.ГоловнаяОрганизация,
	|	АналитикиДокумента.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодПолитики,
	|	ГоловнаяОрганизация
	|";
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТПериодыУчетныхПолитикОрганизаций", ТекстЗапросаВременнаяТаблица);
	
	ТекстЗапросаВременнаяТаблица =
	"ВЫБРАТЬ
	|	Т.Организация КАК Организация,
	|	Т.Период КАК Период,
	|	ЕСТЬNULL(УчетныеПолитики.МетодОценкиСтоимостиТоваров, НЕОПРЕДЕЛЕНО) КАК МетодОценкиСтоимостиТоваров,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетныеПолитики.МетодОценкиСтоимостиТоваров, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.ФИФОСкользящаяОценка)
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФИФОСкользящаяОценка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетныеПолитики.МетодОценкиСтоимостиТоваров, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СреднескользящаяОценка,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УчетныеПолитики.МетодОценкиСтоимостиТоваров, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.ФИФОСкользящаяОценка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоФИФО)
	|		КОГДА ЕСТЬNULL(УчетныеПолитики.МетодОценкиСтоимостиТоваров, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.СредняяЗаМесяц)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоСреднейЗаМесяц)
	|		КОГДА ЕСТЬNULL(УчетныеПолитики.МетодОценкиСтоимостиТоваров, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоСреднескользящей)
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СпособОпределенияСебестоимости,
	|	ЕСТЬNULL(НастройкиСистемыНалогообложения.ПлательщикНДД, ЛОЖЬ) КАК ПлательщикНДД
	|ПОМЕСТИТЬ ВТУчетныеПолитикиОрганизаций
	|ИЗ
	|	ВТПериодыУчетныхПолитикОрганизаций КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК УчетныеПолитики
	|			ПО Т.ГоловнаяОрганизация = УчетныеПолитики.Организация
	|			И Т.ПериодПолитики = УчетныеПолитики.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиСистемыНалогообложения КАК НастройкиСистемыНалогообложения
	|			ПО Т.ГоловнаяОрганизация = НастройкиСистемыНалогообложения.Организация
	|			И Т.ПериодНастройки = НастройкиСистемыНалогообложения.Период
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация";
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТУчетныеПолитикиОрганизаций", ТекстЗапросаВременнаяТаблица);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаРазделУчета(ПараметрыОтражения)
	
	ТекстЗапросаВременнаяТаблица =
	"ВЫБРАТЬ
	|	ДанныеДокумента.НомерЗаписи КАК НомерЗаписи,
	// Раздел учета
	|	ВЫБОР
	|		КОГДА НЕ ДанныеДокумента.ЕстьПолеЗапроса_ВидЗапасов
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Договор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СКомиссионером)
	|			И ДанныеДокумента.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|		КОГДА ДанныеДокумента.АналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)
	|			И ДанныеДокумента.АналитикаУчетаНоменклатуры.Договор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СКомиссионером)
	|			И ДанныеДокумента.ВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	//		Как правило это ТипЗапасов = КомиссионныйТовар
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Расчетное_РазделУчета,
	|
	// Кор. раздел учета
	|	ВЫБОР
	|		КОГДА НЕ ДанныеДокумента.ЕстьПолеЗапроса_КорВидЗапасов
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ДанныеДокумента.КорАналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)
	|			И ДанныеДокумента.КорАналитикаУчетаНоменклатуры.Договор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СКомиссионером)
	|			И ДанныеДокумента.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|		КОГДА ДанныеДокумента.КорАналитикаУчетаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)
	|			И ДанныеДокумента.КорАналитикаУчетаНоменклатуры.Договор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СКомиссионером)
	|			И ДанныеДокумента.КорВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	//		Как правило это ТипЗапасов = КомиссионныйТовар
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Расчетное_КорРазделУчета
	|ПОМЕСТИТЬ ВТРазделыУчета
	|ИЗ
	|	ВТДанныеДокументаПредварительная КАК ДанныеДокумента
	|";
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТРазделыУчета", ТекстЗапросаВременнаяТаблица);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаНастроекПризнанияНДД(ПараметрыОтражения)
	
	ТекстЗапросаВременнаяТаблица = РасчетСебестоимостиЛокализация.ТекстЗапросаНастроекНДД(
			"ВТДанныеДокументаПредварительная", 
			"РасчетСебестоимостиПроведениеДокументов_ДобавитьТекстЗапросаНастроекПризнанияНДД");
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("НастройкиПризнанияРасходовНДД", ТекстЗапросаВременнаяТаблица);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаФормированияДвижений(ПараметрыОтражения)
	
	ИмяРегистра = ПараметрыОтражения.ИмяРегистра;
	ВидыОперацийДокумента = ПараметрыОтражения.РегистрыДляОтражения[ИмяРегистра].ВидыОперацийДокумента;
	ОписаниеРегистра = РасчетСебестоимостиПовтИсп.СформироватьОписаниеРегистра("РегистрНакопления." + ИмяРегистра);
	СуммовыеПоля = Новый Структура(СтрЗаменить(ОписаниеРегистра.ПоляОтбораНепустыхДвижений, "%1", ""));
	
	КолонкиЗапроса = Новый Структура;
	МассивКолонокЗапроса = Новый Массив;
	КолонкиОпераций = Новый Соответствие;
	
	// Заполним перечень всех колонок всех операций себестоимости
	Для Каждого ТекущаяОперацияДокумента Из ВидыОперацийДокумента Цикл
		
		КолонкиТекущейОперации = Новый Структура;
		
		ИмяВременнойТаблицы = "ВТОперация_" + ОбщегоНазначения.ИмяЗначенияПеречисления(ТекущаяОперацияДокумента.Ключ);
		ТекстЗапроса = ПараметрыОтражения.ТекстыШаблоновВТ[ИмяВременнойТаблицы];
		
		Колонки = РасчетСебестоимостиПовтИсп.КолонкиЗапроса(ТекстЗапроса);
		
		Для Каждого ТекущаяКолонка Из Колонки Цикл
			
			КолонкиТекущейОперации.Вставить(ТекущаяКолонка);
			
			Если НЕ КолонкиЗапроса.Свойство(ТекущаяКолонка) Тогда
				КолонкиЗапроса.Вставить(ТекущаяКолонка);
				МассивКолонокЗапроса.Добавить(ТекущаяКолонка);
			КонецЕсли;
			
		КонецЦикла;
		
		КолонкиОпераций.Вставить(ТекущаяОперацияДокумента.Ключ, КолонкиТекущейОперации);
		
	КонецЦикла;
	
	ОтсутствующиеСуммовыеПоля = Новый Структура;
	
	Если ПараметрыОтражения.ИспользуетсяСреднескользящая Тогда
	
		ВозможныеСуммовыеПоля = Новый Структура(СуммовыеПоляСреднескользящей());
		Для Каждого КлючИЗначение Из ВозможныеСуммовыеПоля Цикл
			Если НЕ КолонкиЗапроса.Свойство(КлючИЗначение.Ключ) Тогда
				ОтсутствующиеСуммовыеПоля.Вставить(КлючИЗначение.Ключ);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	ТекстЗапроса = "";
	
	Для Каждого ТекущаяОперацияДокумента Из ВидыОперацийДокумента Цикл
		
		ТекстПоля = "";
		КолонкиТекущейОперации = КолонкиОпераций[ТекущаяОперацияДокумента.Ключ];
		
		Для Каждого ТекущаяКолонка Из МассивКолонокЗапроса Цикл
			
			Если КолонкиТекущейОперации.Свойство(ТекущаяКолонка) Тогда
				
				ТекстПоля = ТекстПоля + ?(ТекстПоля = "", "", ",") + "
					|	Т." + ТекущаяКолонка + " КАК " + ТекущаяКолонка;
				
			Иначе
				
				Если СуммовыеПоля.Свойство(ТекущаяКолонка) Тогда
					ТекстПоля = ТекстПоля + ?(ТекстПоля = "", "", ",") + "
						|	0 КАК " + ТекущаяКолонка;
				Иначе
					ТекстПоля = ТекстПоля + ?(ТекстПоля = "", "", ",") + "
						|	НЕОПРЕДЕЛЕНО КАК " + ТекущаяКолонка;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;

		Если ПараметрыОтражения.ИспользуетсяСреднескользящая Тогда
			
			Для Каждого КлючИЗначение Из ОтсутствующиеСуммовыеПоля Цикл
				ТекстПоля = ТекстПоля + ?(ТекстПоля = "", "", ",") + "
					|	0 КАК " + КлючИЗначение.Ключ;
			КонецЦикла;

			ТекстПоля = ТекстПоля + ?(ТекстПоля = "", "", ",") + "
				|	&ТекущаяДатаСеанса КАК ДатаОпределенияСебестоимости";
			
		КонецЕсли;
		
		Если ПараметрыОтражения.ИспользуетсяСреднескользящая И ТекстЗапроса = "" Тогда
			ШаблонТекстаЗапроса = 
			"ВЫБРАТЬ
			|	&ПоляЗапроса
			|ПОМЕСТИТЬ ВТОперацииДокумента 
			|ИЗ
			|	#ИмяВременнойТаблицы КАК Т";
		Иначе
			
			ШаблонТекстаЗапроса = 
			"ВЫБРАТЬ
			|	&ПоляЗапроса
			|ИЗ
			|	#ИмяВременнойТаблицы КАК Т";
			
		КонецЕсли;
		
		ИмяВременнойТаблицы = "ВТОперация_" + ОбщегоНазначения.ИмяЗначенияПеречисления(ТекущаяОперацияДокумента.Ключ);
		
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "#ИмяВременнойТаблицы", ИмяВременнойТаблицы);
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&ПоляЗапроса", СокрЛП(ТекстПоля));
			
		ТекстЗапроса = ТекстЗапроса
			+ ?(ТекстЗапроса = "", "", "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|")
			+ ШаблонТекстаЗапроса;
		
	КонецЦикла;
	
	Если ПараметрыОтражения.ИспользуетсяСреднескользящая Тогда
		
		Для Каждого КлючИЗначение Из ОтсутствующиеСуммовыеПоля Цикл
			МассивКолонокЗапроса.Добавить(КлючИЗначение.Ключ);
			КолонкиЗапроса.Вставить(КлючИЗначение.Ключ);
		КонецЦикла;
		
		МассивКолонокЗапроса.Добавить("ДатаОпределенияСебестоимости");
		КолонкиЗапроса.Вставить("ДатаОпределенияСебестоимости");
		
		ПараметрыОтражения.Вставить("МассивКолонокЗапроса", МассивКолонокЗапроса); // все колонки запроса выборки данных и ВТОперацииДокумента
		ПараметрыОтражения.Вставить("КолонкиЗапроса", КолонкиЗапроса); // аналогично, но в виде структуры
		
		ТекстЗапроса = ТекстЗапроса + "
		|ИНДЕКСИРОВАТЬ ПО
		|	АналитикаУчетаНоменклатуры";
		
		ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТОперацииДокумента", ТекстЗапроса);
		
	Иначе
		ПараметрыОтражения.ТекстыШаблоновОтражения.Вставить(ИмяРегистра, ТекстЗапроса);
	КонецЕсли;
	
КонецПроцедуры


Процедура УстановитьДополнительныеПараметрыЗапроса(ПараметрыОтражения)
	
	ПустаяДата = Дата(1,1,1);
	
	УстановитьКонстантуПараметраЗапроса(ПараметрыОтражения, "ПартионныйУчетВерсии22", Истина);
	УстановитьКонстантуПараметраЗапроса(ПараметрыОтражения, "ДатаПереходаНаПартионныйУчетВерсии22", ПустаяДата);
	
	УстановитьКонстантуПараметраЗапроса(ПараметрыОтражения, "ВестиУправленческийУчетОрганизаций", Истина);
	УстановитьКонстантуПараметраЗапроса(ПараметрыОтражения, "ДатаНачалаВеденияУправленческогоУчетаОрганизаций", ПустаяДата);
	
	УстановитьКонстантуПараметраЗапроса(ПараметрыОтражения, "УчитыватьСебестоимостьТоваровПоНазначениям", Ложь);
	УстановитьКонстантуПараметраЗапроса(ПараметрыОтражения, "ДатаВключенияОбособленногоУчетаСебестоимостиПоНазначениям", ПустаяДата);
	
	УстановитьКонстантуПараметраЗапроса(ПараметрыОтражения, "ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", Ложь);
	УстановитьКонстантуПараметраЗапроса(ПараметрыОтражения, "ФормироватьВидыЗапасовПоСделкам", Ложь);
	УстановитьКонстантуПараметраЗапроса(ПараметрыОтражения, "ФормироватьВидыЗапасовПоПодразделениямМенеджерам", Ложь);
	УстановитьКонстантуПараметраЗапроса(ПараметрыОтражения, "АналитическийУчетПоГруппамПродукции", Ложь);
	
	УстановитьКонстантуПараметраЗапроса(ПараметрыОтражения, "ИспользоватьУчетНДС", Ложь);
	
	
	// Установим значения прочих параметров
	ПараметрыОтражения.Запрос.УстановитьПараметр("ТекущаяДатаСеанса", ТекущаяДатаСеанса());
	ПараметрыОтражения.Запрос.УстановитьПараметр("НеКонтролироватьПоследовательность",
		РасчетСебестоимостиПовтИсп.ЗначенияТехнологическихПараметров().НеКонтролироватьПоследовательностьПриСреднескользящей);
	
	
КонецПроцедуры

Процедура УстановитьКонстантуПараметраЗапроса(ПараметрыОтражения, ИмяКонстанты, ЗначениеПоУмолчанию)
	
	ИмяПараметра = "Константа_" + ИмяКонстанты;
	
	Если Метаданные.Константы.Найти(ИмяКонстанты) = Неопределено Тогда
		ЗначениеКонстанты = ЗначениеПоУмолчанию;
	Иначе
		ЗначениеКонстанты = Константы[ИмяКонстанты].Получить();
	КонецЕсли;
	
	ПараметрыОтражения.Запрос.УстановитьПараметр(ИмяПараметра, ЗначениеКонстанты);
	
КонецПроцедуры
	
// Формирует текст запроса выбора кодов строк для аналитики учета партий.
// 
// Параметры:
//  ИмяДокумента - Строка - Имя документа
//  ИменаТабличныхЧастей - Строка - Имена табличных частей документа
//  ИмяРеквизитаАналитики - Строка - Имя реквизита аналитики учета номенклатуры
// 
// Возвращаемое значение:
//  Строка - Текст запроса
// 
Функция ТекстЗапросаКодыСтрокДляАналитикиУчетаПартий(ИмяДокумента, ИменаТабличныхЧастей, ИмяРеквизитаАналитики = "АналитикаУчетаНоменклатуры") Экспорт
	
	ШаблонЗапросаВыборки =
	"ВЫБРАТЬ
	|	&ИмяТабличнойЧасти КАК ИмяТабличнойЧасти,
	|	Т.ИмяРеквизитаАналитики.Номенклатура КАК Номенклатура,
	|	Т.ИмяРеквизитаАналитики.Характеристика КАК Характеристика,
	|	СУММА(1) КАК КоличествоСтрок
	|ПОМЕСТИТЬ ВТНоменклатураДокумента
	|ИЗ
	|	ИмяТаблицыДокумента КАК Т
	|ГДЕ
	|	Т.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	Т.ИмяРеквизитаАналитики.Номенклатура,
	|	Т.ИмяРеквизитаАналитики.Характеристика
	|";
	
	ШаблонЗапросаВыборки = СтрЗаменить(ШаблонЗапросаВыборки, "ИмяРеквизитаАналитики", ИмяРеквизитаАналитики);
	
	ШаблонЗапросаРезультата =
	"ВЫБРАТЬ
	|	&ИмяТабличнойЧасти КАК ИмяТабличнойЧасти,
	|	Т.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР КОГДА Итоги.КоличествоСтрок > 1
	|		ТОГДА Т.НомерСтроки
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КодСтроки
	|ПОМЕСТИТЬ ВТКодыСтрокДляАналитикиУчетаПартий
	|ИЗ
	|	ИмяТаблицыДокумента КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНоменклатураДокумента КАК Итоги
	|		ПО Т.ИмяРеквизитаАналитики.Номенклатура = Итоги.Номенклатура
	|		И Т.ИмяРеквизитаАналитики.Характеристика = Итоги.Характеристика
	|		И Итоги.ИмяТабличнойЧасти = &ИмяТабличнойЧасти
	|ГДЕ
	|	Т.Ссылка = &Ссылка
	|";
	
	ШаблонЗапросаРезультата = СтрЗаменить(ШаблонЗапросаРезультата, "ИмяРеквизитаАналитики", ИмяРеквизитаАналитики);
	
	СтруктураТабличныеЧасти = Новый Структура(ИменаТабличныхЧастей);
	ТекстЗапросаВыборки = "";
	ТекстЗапросаРезультата = "";
	
	Для Каждого КлючИЗначение Из СтруктураТабличныеЧасти Цикл
		
		ИмяТаблицы = КлючИЗначение.Ключ;
		ПолноеИмяТаблицы = Метаданные.Документы[ИмяДокумента].ПолноеИмя() + "." + ИмяТаблицы;
		
		ТекстПодзапроса = СтрЗаменить(ШаблонЗапросаВыборки, "&ИмяТабличнойЧасти", """" + ИмяТаблицы + """");
		ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "ИмяТаблицыДокумента", ПолноеИмяТаблицы);
		
		Если ЗначениеЗаполнено(ТекстЗапросаВыборки) Тогда
			ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "ПОМЕСТИТЬ ВТНоменклатураДокумента", "");
			ТекстЗапросаВыборки = ТекстЗапросаВыборки + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		ТекстЗапросаВыборки = ТекстЗапросаВыборки + ТекстПодзапроса;
		
		ТекстПодзапроса = СтрЗаменить(ШаблонЗапросаРезультата, "&ИмяТабличнойЧасти", """" + ИмяТаблицы + """");
		ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "ИмяТаблицыДокумента", ПолноеИмяТаблицы);
		
		Если ЗначениеЗаполнено(ТекстЗапросаРезультата) Тогда
			ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "ПОМЕСТИТЬ ВТКодыСтрокДляАналитикиУчетаПартий", "");
			ТекстЗапросаРезультата = ТекстЗапросаРезультата + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		ТекстЗапросаРезультата = ТекстЗапросаРезультата + ТекстПодзапроса;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапросаВыборки + "
		|;
		|
		|" + ТекстЗапросаРезультата + "
		|;
		|
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ТекстыУчетПоСреднескользящей

Процедура ДобавитьТекстЗапросаРасчетСреднескользящаяСтоимость(ПараметрыОтражения)
	
	// Состав суммовых полей
	ВозможныеСуммовыеПоля = Новый Структура(СуммовыеПоляСреднескользящей());
	СуммовыеПоляСреднескользящей = Новый Структура;
	
	Для Каждого КлючИЗначение Из ВозможныеСуммовыеПоля Цикл
		Если ПараметрыОтражения.КолонкиЗапроса.Свойство(КлючИЗначение.Ключ) Тогда
			СуммовыеПоляСреднескользящей.Вставить(КлючИЗначение.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	// Признаки, влияющие на состав пакета запросов
	ЕстьДокументИсточник = ПараметрыОтражения.КолонкиЗапроса.Свойство("ДокументИсточник");
	ЕстьКорНаправлениеДеятельности = ПараметрыОтражения.КолонкиЗапроса.Свойство("КорНаправлениеДеятельности");
	ЕстьНастройкаСчетовУчета = ПараметрыОтражения.КолонкиЗапроса.Свойство("НастройкаСчетовУчета");
	ЕстьСтатьяРасходовСписания = ПараметрыОтражения.КолонкиЗапроса.Свойство("СтатьяРасходовСписания");
	ЕстьСтатьяДоходов = ПараметрыОтражения.КолонкиЗапроса.Свойство("СтатьяДоходов");
	ЕстьСтатьяАктивовПассивов = ПараметрыОтражения.КолонкиЗапроса.Свойство("СтатьяАктивовПассивов");
	ЕстьАналитикаУчетаПоПартнерам = ПараметрыОтражения.КолонкиЗапроса.Свойство("АналитикаУчетаПоПартнерам");
	ЕстьЗаказКлиента = ПараметрыОтражения.КолонкиЗапроса.Свойство("ЗаказКлиента");
	ЕстьПодразделение = ПараметрыОтражения.КолонкиЗапроса.Свойство("Подразделение");
	ЕстьКорОрганизация = ПараметрыОтражения.КолонкиЗапроса.Свойство("КорОрганизация");
	
	ПараметрыОтражения.Вставить("ЕстьДокументИсточник", ЕстьДокументИсточник);
	ПараметрыОтражения.Вставить("ЕстьКорНаправлениеДеятельности", ЕстьКорНаправлениеДеятельности);
	ПараметрыОтражения.Вставить("ЕстьНастройкаСчетовУчета", ЕстьНастройкаСчетовУчета);
	ПараметрыОтражения.Вставить("ЕстьСтатьяРасходовСписания", ЕстьСтатьяРасходовСписания);
	ПараметрыОтражения.Вставить("ЕстьСтатьяДоходов", ЕстьСтатьяДоходов);
	ПараметрыОтражения.Вставить("ЕстьСтатьяАктивовПассивов", ЕстьСтатьяАктивовПассивов);
	ПараметрыОтражения.Вставить("ЕстьАналитикаУчетаПоПартнерам", ЕстьАналитикаУчетаПоПартнерам);
	ПараметрыОтражения.Вставить("ЕстьЗаказКлиента", ЕстьЗаказКлиента);
	ПараметрыОтражения.Вставить("ЕстьПодразделение", ЕстьПодразделение);
	ПараметрыОтражения.Вставить("ЕстьКорОрганизация", ЕстьКорОрганизация);
	
	ВидыОперацийДокумента = ПараметрыОтражения.РегистрыДляОтражения[ПараметрыОтражения.ИмяРегистра].ВидыОперацийДокумента; // Соответствие
	ЕстьВыбытияПоФиксированнойСтоимости =
		(ВидыОперацийДокумента.Получить(Перечисления.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости) <> Неопределено);
	ЕстьПеремещение =
		(ВидыОперацийДокумента.Получить(Перечисления.ОперацииУчетаСебестоимости.Перемещение) <> Неопределено);
	ЕстьСписаниеНаДругиеПартии =
		(ВидыОперацийДокумента.Получить(Перечисления.ОперацииУчетаСебестоимости.СписаниеНаДругиеПартии) <> Неопределено);
		
	ПараметрыОтражения.Вставить("ЕстьВыбытияПоФиксированнойСтоимости", ЕстьВыбытияПоФиксированнойСтоимости);
	ПараметрыОтражения.Вставить("ЕстьПеремещение", ЕстьПеремещение);
	ПараметрыОтражения.Вставить("ЕстьСписаниеНаДругиеПартии", ЕстьСписаниеНаДругиеПартии);
	
	#Область ШаблоныДляТекстовЗапросов
	
	// для &ПоляЗапросаПоСреднескользящейПоИсточнику
	ШаблонПоляСуммыПоСреднескользящейПоИсточнику = "
		|	ВЫРАЗИТЬ(
		|		ВЫБОР
		|			КОГДА ЕСТЬNULL(Источник.Количество, 0) = 0
		|				ТОГДА 0
		|			КОГДА Т.Количество = Источник.Количество
		|				ТОГДА Источник.ИмяПоляСуммы
		|				ИНАЧЕ ВЫРАЗИТЬ(Т.Количество * (Источник.ИмяПоляСуммы / Источник.Количество) КАК ЧИСЛО (31,2))
		|		КОНЕЦ
		|		- ВЫБОР КОГДА Т.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
		|			И ЕСТЬNULL(Источник.Количество, 0) <> 0
		// При объединении таблиц разных операций может получиться, что числовое поле будет иметь тип Неопределено (если такого поля нет в одной из операций)
		|			И ТИПЗНАЧЕНИЯ(Т.ИмяПоляСуммы) = ТИП(ЧИСЛО)
		|				ТОГДА ВЫРАЗИТЬ(Т.ИмяПоляСуммы КАК ЧИСЛО (31,2))
		|				ИНАЧЕ 0
		|	  	  КОНЕЦ КАК ЧИСЛО (31,2)) КАК ИмяПоляСуммы";
	
	ШаблонПоляСуммыВыборкаПоСреднескользящей = "
		|	Суммы.ИмяПоляСуммы КАК ИмяПоляСуммы";
	
	ТекстПоляОсновные = ""; // для &ПоляЗапросаОсновные
	ТекстПоляПоСреднескользящейПоИсточнику = "";  // для &ПоляЗапросаПоСреднескользящейПоИсточнику
	ТекстПоляОсновныеПоСреднескользящей = ""; // для &ПоляЗапросаОсновные
	ТекстПоляВыборкаПоСреднескользящей = ""; // для &ПоляЗапросаВыборкаПоСреднескользящей
	
	НеиспользуемыеИзмеренияПоСреднескользящей = Новый Структура;
	НеиспользуемыеИзмеренияПоСреднескользящей.Вставить("Партия", "НЕОПРЕДЕЛЕНО");
	НеиспользуемыеИзмеренияПоСреднескользящей.Вставить("АналитикаУчетаПартий", "ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)");
	НеиспользуемыеИзмеренияПоСреднескользящей.Вставить("АналитикаФинансовогоУчета", "НЕОПРЕДЕЛЕНО");
	НеиспользуемыеИзмеренияПоСреднескользящей.Вставить("ВидДеятельностиНДС", "ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)");
	
	Для Каждого ТекущаяКолонка Из ПараметрыОтражения.МассивКолонокЗапроса Цикл
		
		ТекстПоляОсновные = ТекстПоляОсновные + ?(ТекстПоляОсновные = "", "", ",") + "
			|	Т." + ТекущаяКолонка + " КАК " + ТекущаяКолонка;
		
		Если НеиспользуемыеИзмеренияПоСреднескользящей.Свойство(ТекущаяКолонка) Тогда
			
			ТекстПоляОсновныеПоСреднескользящей = ТекстПоляОсновныеПоСреднескользящей + ?(ТекстПоляОсновныеПоСреднескользящей = "", "", ",") + "
				|	ВЫБОР КОГДА Т.МетодОценкиСтоимостиТоваров = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
				|		ТОГДА " + НеиспользуемыеИзмеренияПоСреднескользящей[ТекущаяКолонка] + "
				|		ИНАЧЕ Т." + ТекущаяКолонка + "
				|	КОНЕЦ КАК " + ТекущаяКолонка;
			
			ТекстПоляВыборкаПоСреднескользящей = ТекстПоляВыборкаПоСреднескользящей + ?(ТекстПоляВыборкаПоСреднескользящей = "", "", ",") + "
				|	ВЫБОР КОГДА Т.МетодОценкиСтоимостиТоваров = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
				|		ТОГДА " + НеиспользуемыеИзмеренияПоСреднескользящей[ТекущаяКолонка] + "
				|		ИНАЧЕ Т." + ТекущаяКолонка + "
				|	КОНЕЦ КАК " + ТекущаяКолонка;
			
			ТекстПоляПоСреднескользящейПоИсточнику = ТекстПоляПоСреднескользящейПоИсточнику + ?(ТекстПоляПоСреднескользящейПоИсточнику = "", "", ",") + "
				|	Т." + ТекущаяКолонка + " КАК " + ТекущаяКолонка;
			
		ИначеЕсли СуммовыеПоляСреднескользящей.Свойство(ТекущаяКолонка) Тогда
			
			ТекстПоляПоСреднескользящейПоИсточнику = ТекстПоляПоСреднескользящейПоИсточнику + ?(ТекстПоляПоСреднескользящейПоИсточнику = "", "", ",")
				+ СтрЗаменить(ШаблонПоляСуммыПоСреднескользящейПоИсточнику, "ИмяПоляСуммы", ТекущаяКолонка);
			
			ТекстПоляВыборкаПоСреднескользящей = ТекстПоляВыборкаПоСреднескользящей + ?(ТекстПоляВыборкаПоСреднескользящей = "", "", ",")
				+ СтрЗаменить(ШаблонПоляСуммыВыборкаПоСреднескользящей, "ИмяПоляСуммы", ТекущаяКолонка);
				
			ТекстПоляОсновныеПоСреднескользящей = ТекстПоляОсновныеПоСреднескользящей + ?(ТекстПоляОсновныеПоСреднескользящей = "", "", ",") + "
				|	Т." + ТекущаяКолонка + " КАК " + ТекущаяКолонка;
			
		Иначе
			
			ТекстПоляПоСреднескользящейПоИсточнику = ТекстПоляПоСреднескользящейПоИсточнику + ?(ТекстПоляПоСреднескользящейПоИсточнику = "", "", ",") + "
				|	Т." + ТекущаяКолонка + " КАК " + ТекущаяКолонка;
			
			ТекстПоляВыборкаПоСреднескользящей = ТекстПоляВыборкаПоСреднескользящей + ?(ТекстПоляВыборкаПоСреднескользящей = "", "", ",") + "
				|	Т." + ТекущаяКолонка + " КАК " + ТекущаяКолонка;
			
			ТекстПоляОсновныеПоСреднескользящей = ТекстПоляОсновныеПоСреднескользящей + ?(ТекстПоляОсновныеПоСреднескользящей = "", "", ",") + "
				|	Т." + ТекущаяКолонка + " КАК " + ТекущаяКолонка;
			
		КонецЕсли;
		
	КонецЦикла;
	
	#КонецОбласти
	
	#Область ДобавитьТекстЗапросаСреднескользящаяСтоимость
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Организация КАК Организация
	|ПОМЕСТИТЬ ВТОтборОстаткиСреднескользящая
	|ИЗ
	|	ВТОперацииДокумента КАК Т
	|ГДЕ
	|	Т.МетодОценкиСтоимостиТоваров = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|	И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета,
	|	Т.ВидЗапасов,
	|	Т.Организация,
	|	Т.ИдентификаторФинЗаписи,
	|	Т.Период,
	|	СУММА(Т.Количество) КАК Количество,
	|	СУММА(Т.Стоимость) КАК Стоимость,
	|	СУММА(Т.СтоимостьБезНДС) КАК СтоимостьБезНДС,
	|	СУММА(Т.СтоимостьЗабалансовая) КАК СтоимостьЗабалансовая,
	|	СУММА(Т.СтоимостьРегл) КАК СтоимостьРегл,
	|	СУММА(Т.СтоимостьЗабалансоваяРегл) КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(Т.СтоимостьУпр) КАК СтоимостьУпр
	|ПОМЕСТИТЬ ВТСебестоимостьОстаток
	|ИЗ
	|(ВЫБРАТЬ
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК Период,
	|	Т.КоличествоОстаток КАК Количество,
	|	Т.СтоимостьОстаток КАК Стоимость,
	|	Т.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
	|	Т.СтоимостьЗабалансоваяОстаток КАК СтоимостьЗабалансовая,
	|	Т.СтоимостьРеглОстаток КАК СтоимостьРегл,
	|	Т.СтоимостьЗабалансоваяРеглОстаток КАК СтоимостьЗабалансоваяРегл,
	|	Т.СтоимостьУпрОстаток КАК СтоимостьУпр
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров.Остатки(,
	|		(АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, Организация)
	|			В (ВЫБРАТЬ Т.АналитикаУчетаНоменклатуры, Т.РазделУчета, Т.ВидЗапасов, Т.Организация ИЗ ВТОтборОстаткиСреднескользящая КАК Т)
	|		) КАК Т
	|ГДЕ
	|	Т.КоличествоОстаток <> 0
	|		ИЛИ &НеКонтролироватьПоследовательность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК Период,
	|	Т.Количество КАК Количество,
	|	Т.Стоимость КАК Стоимость,
	|	Т.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	Т.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	Т.СтоимостьРегл КАК СтоимостьРегл,
	|	Т.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	Т.СтоимостьУпр КАК СтоимостьУпр
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборОстаткиСреднескользящая КАК Отбор
	|		ПО Т.АналитикаУчетаНоменклатуры = Отбор.АналитикаУчетаНоменклатуры
	|		И Т.РазделУчета = Отбор.РазделУчета
	|		И Т.ВидЗапасов = Отбор.ВидЗапасов
	|		И Т.Организация = Отбор.Организация
	|ГДЕ
	|	Т.Регистратор = &Ссылка
	|	И Т.Количество <> 0
	|	И НЕ Т.РасчетПартий
	|	И НЕ Т.РасчетСебестоимости
	|	И Т.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоСреднескользящей)
	|	И &НеКонтролироватьПоследовательность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Организация КАК Организация,
	|	Т.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Т.Период КАК Период,
	|	Т.Количество КАК Количество,
	|	Т.Стоимость КАК Стоимость,
	|	Т.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	Т.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	Т.СтоимостьРегл КАК СтоимостьРегл,
	|	Т.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	Т.СтоимостьУпр КАК СтоимостьУпр
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборОстаткиСреднескользящая КАК Отбор
	|		ПО Т.АналитикаУчетаНоменклатуры = Отбор.АналитикаУчетаНоменклатуры
	|		И Т.РазделУчета = Отбор.РазделУчета
	|		И Т.ВидЗапасов = Отбор.ВидЗапасов
	|		И Т.Организация = Отбор.Организация
	|ГДЕ
	|	Т.Регистратор = &Ссылка
	|	И Т.Количество <> 0
	|	И НЕ Т.РасчетПартий
	|	И НЕ Т.РасчетСебестоимости
	|) КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета,
	|	Т.ВидЗапасов,
	|	Т.Организация,
	|	Т.ИдентификаторФинЗаписи,
	|	Т.Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Организация КАК Организация,
	|	Т.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	Т.Период КАК Период
	|ПОМЕСТИТЬ ВТИдентификаторыСебестоимости
	|ИЗ
	|	ВТСебестоимостьОстаток КАК Т
	|ГДЕ
	|	Т.ИдентификаторФинЗаписи <> НЕОПРЕДЕЛЕНО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|";
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТСебестоимостьОстаток", ТекстЗапроса);
	
	#КонецОбласти
	
	#Область ДобавитьТекстЗапросаРасчетаСтоимостиПоСреднескользящей
	
	// Для движений по новым строкам документа стоимость определяется по остаткам себестоимости.
	// Для движений по строкам, которые уже были у данного документа, стоимость определяется по его старым движениям.
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&ПоляЗапросаПоСреднескользящейПоИсточнику
	|ПОМЕСТИТЬ ВТДвиженияРасчетПоСреднескользящей
	|ИЗ
	|	ВТОперацииДокумента КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСебестоимостьОстаток КАК Источник
	|		ПО Т.АналитикаУчетаНоменклатуры = Источник.АналитикаУчетаНоменклатуры
	|		И Т.РазделУчета = Источник.РазделУчета
	|		И Т.ВидЗапасов = Источник.ВидЗапасов
	|		И Т.Организация = Источник.Организация
	|		И Источник.ИдентификаторФинЗаписи = НЕОПРЕДЕЛЕНО
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТИдентификаторыСебестоимости КАК Идентификаторы
	|		ПО Т.АналитикаУчетаНоменклатуры = Идентификаторы.АналитикаУчетаНоменклатуры
	|		И Т.РазделУчета = Идентификаторы.РазделУчета
	|		И Т.ВидЗапасов = Идентификаторы.ВидЗапасов
	|		И Т.Организация = Идентификаторы.Организация
	|		И Т.ИдентификаторФинЗаписи = Идентификаторы.ИдентификаторФинЗаписи
	|		И Т.Период = Идентификаторы.Период
	|ГДЕ
	|	Т.МетодОценкиСтоимостиТоваров = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|		И (Т.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоСреднескользящей)
	|			ИЛИ Т.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости))
	|	И Идентификаторы.ИдентификаторФинЗаписи ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ПоляЗапросаПоСреднескользящейПоИсточнику
	|ИЗ
	|	ВТОперацииДокумента КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСебестоимостьОстаток КАК Источник
	|		ПО Т.АналитикаУчетаНоменклатуры = Источник.АналитикаУчетаНоменклатуры
	|		И Т.РазделУчета = Источник.РазделУчета
	|		И Т.ВидЗапасов = Источник.ВидЗапасов
	|		И Т.Организация = Источник.Организация
	|		И Т.ИдентификаторФинЗаписи = Источник.ИдентификаторФинЗаписи
	|		И Т.Период = Источник.Период
	|ГДЕ
	|	Т.МетодОценкиСтоимостиТоваров = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|		И (Т.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоСреднескользящей)
	|			ИЛИ Т.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости))
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляЗапросаПоСреднескользящейПоИсточнику", СокрЛП(ТекстПоляПоСреднескользящейПоИсточнику));
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТДвиженияРасчетПоСреднескользящей", ТекстЗапроса);
	
	#КонецОбласти
	
	Если ЕстьДокументИсточник Тогда
		
	#Область ДобавитьТекстЗапросаСтоимостьПоДвижениямДокументаИсточника
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.ДокументИсточник,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Организация КАК Организация
	|ПОМЕСТИТЬ ВТОтборДокументыИсточникиСреднескользящая
	|ИЗ
	|	ВТОперацииДокумента КАК Т
	|ГДЕ
	|	Т.МетодОценкиСтоимостиТоваров = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|	И Т.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументИсточник
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Регистратор КАК ДокументИсточник,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.Организация КАК Организация,
	|	&АналитикаУчетаПоПартнерам,
	|	&ЗаказКлиента,
	|	&Подразделение,
	|	&СтатьяРасходовСписания,
	|	&АналитикаРасходов,
	|	СУММА(Т.Количество) КАК Количество,
	|	СУММА(Т.Стоимость) КАК Стоимость,
	|	СУММА(Т.СтоимостьБезНДС) КАК СтоимостьБезНДС,
	|	СУММА(Т.СтоимостьЗабалансовая) КАК СтоимостьЗабалансовая,
	|	СУММА(Т.СтоимостьРегл) КАК СтоимостьРегл,
	|	СУММА(Т.СтоимостьЗабалансоваяРегл) КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(Т.СтоимостьУпр) КАК СтоимостьУпр
	|ПОМЕСТИТЬ ВТСебестоимостьДокументаИсточника
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборДокументыИсточникиСреднескользящая КАК Отбор
	|		ПО Т.Регистратор = Отбор.ДокументИсточник
	|		И Т.АналитикаУчетаНоменклатуры = Отбор.АналитикаУчетаНоменклатуры
	|		И Т.РазделУчета = Отбор.РазделУчета
	|		И Т.ВидЗапасов = Отбор.ВидЗапасов
	|		И Т.Организация = Отбор.Организация
	|СГРУППИРОВАТЬ ПО
	|	Т.Регистратор,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.РазделУчета,
	|	Т.ВидЗапасов,
	|	Т.Организация,
	|	&АналитикаУчетаПоПартнерам,
	|	&ЗаказКлиента,
	|	&Подразделение,
	|	&СтатьяРасходовСписания,
	|	&АналитикаРасходов
	|ИМЕЮЩИЕ
	|	СУММА(Т.Количество) <> 0
	|	ИЛИ СУММА(Т.Стоимость) <> 0
	|	ИЛИ СУММА(Т.СтоимостьБезНДС) <> 0
	|	ИЛИ СУММА(Т.СтоимостьЗабалансовая) <> 0
	|	ИЛИ СУММА(Т.СтоимостьРегл) <> 0
	|	ИЛИ СУММА(Т.СтоимостьЗабалансоваяРегл) <> 0
	|	ИЛИ СУММА(Т.СтоимостьУпр) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ДокументИсточник
	|";
	
	Если ПараметрыОтражения.ЕстьСтатьяРасходовСписания Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатьяРасходовСписания", "Т.СтатьяРасходовСписания");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&АналитикаРасходов", "Т.АналитикаРасходов");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатьяРасходовСписания", "ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&АналитикаРасходов", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	Если ПараметрыОтражения.ЕстьАналитикаУчетаПоПартнерам Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&АналитикаУчетаПоПартнерам", "Т.АналитикаУчетаПоПартнерам");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&АналитикаУчетаПоПартнерам", "ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)");
	КонецЕсли;
	
	Если ПараметрыОтражения.ЕстьЗаказКлиента Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЗаказКлиента", "Т.ЗаказКлиента");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ЗаказКлиента", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	Если ПараметрыОтражения.ЕстьПодразделение Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Подразделение", "Т.Подразделение");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Подразделение", "ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)");
	КонецЕсли;
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТСебестоимостьДокументаИсточника", ТекстЗапроса);
	
	#КонецОбласти
	
	#Область ДобавитьТекстЗапросаРасчетаСтоимостиПоДокументуИсточнику
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&ПоляЗапросаПоСреднескользящейПоИсточнику
	|ПОМЕСТИТЬ ВТДвиженияРасчетПоДокументуИсточнику
	|ИЗ
	|	ВТОперацииДокумента КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСебестоимостьДокументаИсточника КАК Источник
	|		ПО Т.ДокументИсточник = Источник.ДокументИсточник
	|		И Т.АналитикаУчетаНоменклатуры = Источник.АналитикаУчетаНоменклатуры
	|		И Т.РазделУчета = Источник.РазделУчета
	|		И Т.ВидЗапасов = Источник.ВидЗапасов
	|		И Т.Организация = Источник.Организация
	|		И &СоединениеПоДопПолям
	|ГДЕ
	|	Т.МетодОценкиСтоимостиТоваров = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|		И (Т.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоДвижениямДокументаИсточника)
	|			ИЛИ Т.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости))
	|";
	
	ТекстСоединение = "";
	
	ПоляДокументаИсточника = Новый Структура;
	ПоляДокументаИсточника.Вставить("АналитикаУчетаПоПартнерам", "Справочник.КлючиАналитикиУчетаПоПартнерам");
	ПоляДокументаИсточника.Вставить("ЗаказКлиента", 			 "НЕОПРЕДЕЛЕНО");
	ПоляДокументаИсточника.Вставить("Подразделение", 			 "Справочник.СтруктураПредприятия");
	ПоляДокументаИсточника.Вставить("СтатьяРасходовСписания", 	 "ПланВидовХарактеристик.СтатьиРасходов");
	ПоляДокументаИсточника.Вставить("АналитикаРасходов", 		 "НЕОПРЕДЕЛЕНО");
	
	Для Каждого КлючИЗначение Из ПоляДокументаИсточника Цикл
		
		Если ПараметрыОтражения.КолонкиЗапроса.Свойство(КлючИЗначение.Ключ) Тогда
			
			ИмяТипа = КлючИЗначение.Значение;
			
			Если ИмяТипа = "НЕОПРЕДЕЛЕНО" Тогда
				
				ТекстСоединение = ТекстСоединение + ?(ТекстСоединение = "", "", Символы.ПС + "
					|		И ") + "Т." + КлючИЗначение.Ключ + " = Источник."+ КлючИЗначение.Ключ;
				
			Иначе

				ТекстСоединение = ТекстСоединение + ?(ТекстСоединение = "", "", Символы.ПС + "
					|		И ") + "ВЫБОР
					|  			КОГДА ТИПЗНАЧЕНИЯ(Т." + КлючИЗначение.Ключ + ") = ТИП(" + ИмяТипа + ")
					|				ТОГДА Т." + КлючИЗначение.Ключ + "
					|				ИНАЧЕ ЗНАЧЕНИЕ(" + ИмяТипа + ".ПустаяСсылка)
					|		КОНЕЦ = Источник."+ КлючИЗначение.Ключ;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СоединениеПоДопПолям", ?(ТекстСоединение = "", "ИСТИНА", СокрЛП(ТекстСоединение)));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляЗапросаПоСреднескользящейПоИсточнику", СокрЛП(ТекстПоляПоСреднескользящейПоИсточнику));
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТДвиженияРасчетПоДокументуИсточнику", ТекстЗапроса);
	
	#КонецОбласти
	
	КонецЕсли;

	Если ЕстьВыбытияПоФиксированнойСтоимости Тогда
		
	#Область ДобавитьТекстЗапросаРасчетаОтклоненийВСтоимости
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА Т.Количество > 0 ТОГДА 1 ИНАЧЕ -1 КОНЕЦ КАК Знак,
	|	&ПоляЗапросаОсновные
	|ПОМЕСТИТЬ ВТДвиженияОтклоненияВСтоимостиПредварительная
	|ИЗ
	|	ВТДвиженияРасчетПоСреднескользящей КАК Т
	|ГДЕ
	|	Т.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
	|";

	Если ЕстьДокументИсточник Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|	ОБЪЕДИНИТЬ ВСЕ
		|";
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	ВЫБОР КОГДА Т.Количество > 0 ТОГДА 1 ИНАЧЕ -1 КОНЕЦ КАК Знак,
		|	&ПоляЗапросаОсновные
		|ИЗ
		|	ВТДвиженияРасчетПоДокументуИсточнику КАК Т
		|ГДЕ
		|	Т.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
		|";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ЛОЖЬ КАК ЭтоПрочиеРасходы,
	|	ВЫБОР КОГДА СтатьиДоходов.Ссылка ЕСТЬ NULL
	|		ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ОтклонениеВСтоимостиТоваров)
	|		ИНАЧЕ СтатьиДоходов.Ссылка
	|	КОНЕЦ КАК СтатьяДоходов,
	|	ВЫБОР КОГДА СтатьиДоходов.Ссылка ЕСТЬ NULL
	|		ТОГДА АналитикаНоменклатуры.Номенклатура
	|		ИНАЧЕ Т.АналитикаДоходов
	|	КОНЕЦ КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтклонениеВСтоимостиТоваровДоходы) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтклонениеВСтоимостиТоваровДоходы) КАК НастройкаХозяйственнойОперации,
	|	ВЫБОР КОГДА Т.ИдентификаторСтроки В ("""", НЕОПРЕДЕЛЕНО)
	|		ТОГДА Т.ИдентификаторФинЗаписи
	|		ИНАЧЕ Т.ИдентификаторСтроки
	|	КОНЕЦ КАК ИдентификаторФинЗаписи,
	|	&ПоляЗапросаДоходы
	|ПОМЕСТИТЬ ВТДвиженияОтклоненияВСтоимости
	|ИЗ
	|	ВТДвиженияОтклоненияВСтоимостиПредварительная КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиДоходов КАК СтатьиДоходов
	|		ПО &СтатьяДоходов = СтатьиДоходов.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО Т.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|ГДЕ
	|	(&УсловияСуммыДоходы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА КАК ЭтоПрочиеРасходы,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	ВЫБОР КОГДА СтатьиРасходов.Ссылка ЕСТЬ NULL
	|		ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ОтклонениеВСтоимостиТоваров)
	|		ИНАЧЕ СтатьиРасходов.Ссылка
	|	КОНЕЦ КАК СтатьяРасходовСписания,
	|	ВЫБОР КОГДА СтатьиРасходов.Ссылка ЕСТЬ NULL
	|		ТОГДА АналитикаНоменклатуры.Номенклатура
	|		ИНАЧЕ Т.АналитикаРасходов
	|	КОНЕЦ КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтклонениеВСтоимостиТоваровРасходы) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтклонениеВСтоимостиТоваровРасходы) КАК НастройкаХозяйственнойОперации,
	|	ВЫБОР КОГДА Т.ИдентификаторСтроки В ("""", НЕОПРЕДЕЛЕНО)
	|		ТОГДА Т.ИдентификаторФинЗаписи
	|		ИНАЧЕ Т.ИдентификаторСтроки
	|	КОНЕЦ КАК ИдентификаторФинЗаписи,
	|	&ПоляЗапросаРасходы
	|ИЗ
	|	ВТДвиженияОтклоненияВСтоимостиПредварительная КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО &СтатьяРасходовСписания = СтатьиРасходов.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО Т.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|ГДЕ
	|	(&УсловияСуммыРасходы)
	|";
	
	Если ПараметрыОтражения.ЕстьСтатьяРасходовСписания Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатьяРасходовСписания", "Т.СтатьяРасходовСписания");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатьяРасходовСписания", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	Если ПараметрыОтражения.ЕстьСтатьяДоходов Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатьяДоходов", "Т.СтатьяДоходов");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатьяДоходов", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	// Перечень полей, используемых в запросе
	ПереопределенныеПоля = Новый Структура("СтатьяДоходов, АналитикаДоходов, СтатьяРасходовСписания, АналитикаРасходов,
		|ХозяйственнаяОперация, НастройкаХозяйственнойОперации, ИдентификаторФинЗаписи");
	
	ШаблонПоляСуммыДоходы  = "
		|	ВЫБОР КОГДА Т.Знак * Т.ИмяПоляСуммы < 0 ТОГДА Т.ИмяПоляСуммы ИНАЧЕ 0 КОНЕЦ КАК ИмяПоляСуммы";
	ШаблонПоляСуммыРасходы = "
		|	ВЫБОР КОГДА Т.Знак * Т.ИмяПоляСуммы > 0 ТОГДА Т.ИмяПоляСуммы ИНАЧЕ 0 КОНЕЦ КАК ИмяПоляСуммы";
	ШаблонУсловияСуммыДоходы  = "
		|	ВЫБОР КОГДА Т.Знак * Т.ИмяПоляСуммы < 0 ТОГДА Т.ИмяПоляСуммы ИНАЧЕ 0 КОНЕЦ <> 0";
	ШаблонУсловияСуммыРасходы = "
		|	ВЫБОР КОГДА Т.Знак * Т.ИмяПоляСуммы > 0 ТОГДА Т.ИмяПоляСуммы ИНАЧЕ 0 КОНЕЦ <> 0";
	
	ОписаниеРегистра = РасчетСебестоимостиПовтИсп.СформироватьОписаниеРегистра("РегистрНакопления." + ПараметрыОтражения.ИмяРегистра);
	ЧисловыеПоля = Новый Структура(СтрЗаменить(ОписаниеРегистра.ПоляОтбораНепустыхДвижений, "%1", "")); // все числовые поля регистра
	
	ТекстПоляЗапросаДоходы = ""; // для &ПоляЗапросаДоходы
	ТекстПоляЗапросаРасходы = ""; // для &ПоляЗапросаРасходы
	ТекстУсловияЗапросаДоходы = ""; // для &УсловияСуммыДоходы
	ТекстУсловияЗапросаРасходы = ""; // для &УсловияСуммыРасходы
	
	Для Каждого ТекущаяКолонка Из ПараметрыОтражения.МассивКолонокЗапроса Цикл
		
		Если ПереопределенныеПоля.Свойство(ТекущаяКолонка) Тогда
			Продолжить;
			
		ИначеЕсли СуммовыеПоляСреднескользящей.Свойство(ТекущаяКолонка) Тогда
			
			ТекстПоляЗапросаДоходы = ТекстПоляЗапросаДоходы + ?(ТекстПоляЗапросаДоходы = "", "", ",")
				+ СтрЗаменить(ШаблонПоляСуммыДоходы, "ИмяПоляСуммы", ТекущаяКолонка);
			
			ТекстПоляЗапросаРасходы = ТекстПоляЗапросаРасходы + ?(ТекстПоляЗапросаРасходы = "", "", ",")
				+ СтрЗаменить(ШаблонПоляСуммыРасходы, "ИмяПоляСуммы", ТекущаяКолонка);
			
			ТекстУсловияЗапросаДоходы = ТекстУсловияЗапросаДоходы + ?(ТекстУсловияЗапросаДоходы = "", "", Символы.ПС + "	ИЛИ ")
				+ СтрЗаменить(ШаблонУсловияСуммыДоходы, "ИмяПоляСуммы", ТекущаяКолонка);
			
			ТекстУсловияЗапросаРасходы = ТекстУсловияЗапросаРасходы + ?(ТекстУсловияЗапросаРасходы = "", "", Символы.ПС + "	ИЛИ ")
				+ СтрЗаменить(ШаблонУсловияСуммыРасходы, "ИмяПоляСуммы", ТекущаяКолонка);
			
		ИначеЕсли ЧисловыеПоля.Свойство(ТекущаяКолонка) Тогда
			
			ТекстПоляЗапросаДоходы = ТекстПоляЗапросаДоходы + ?(ТекстПоляЗапросаДоходы = "", "", ",") + "
				|	0 КАК " + ТекущаяКолонка;
			
			ТекстПоляЗапросаРасходы = ТекстПоляЗапросаРасходы + ?(ТекстПоляЗапросаРасходы = "", "", ",") + "
				|	0 КАК " + ТекущаяКолонка;
			
		Иначе
			
			ТекстПоляЗапросаДоходы = ТекстПоляЗапросаДоходы + ?(ТекстПоляЗапросаДоходы = "", "", ",") + "
				|	Т." + ТекущаяКолонка + " КАК " + ТекущаяКолонка;
			
			ТекстПоляЗапросаРасходы = ТекстПоляЗапросаРасходы + ?(ТекстПоляЗапросаРасходы = "", "", ",") + "
				|	Т." + ТекущаяКолонка + " КАК " + ТекущаяКолонка;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляЗапросаОсновные",  СокрЛП(ТекстПоляОсновные));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляЗапросаДоходы",    СокрЛП(ТекстПоляЗапросаДоходы));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляЗапросаРасходы",   СокрЛП(ТекстПоляЗапросаРасходы));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловияСуммыДоходы",   СокрЛП(ТекстУсловияЗапросаДоходы));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловияСуммыРасходы",  СокрЛП(ТекстУсловияЗапросаРасходы));
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТДвиженияОтклоненияВСтоимости", ТекстЗапроса);
	
	#КонецОбласти

	КонецЕсли;

	#Область ДобавитьТекстЗапросаДвиженияСоСтоимостью

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&ПоляЗапросаОсновные
	|ПОМЕСТИТЬ ВТИтоговыеДвиженияСебестоимостьТоваров
	|ИЗ
	|	ВТОперацииДокумента КАК Т
	|ГДЕ
	|	Т.МетодОценкиСтоимостиТоваров <> ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|	ИЛИ Т.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ИзДокумента)
	|	ИЛИ Т.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ПоляЗапросаОсновные
	|ИЗ
	|	ВТДвиженияРасчетПоСреднескользящей КАК Т
	|ГДЕ
	|	Т.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоСреднескользящей)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ПоляЗапросаВыборкаПоСреднескользящей
	|ИЗ
	|	ВТОперацииДокумента КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДвиженияРасчетПоСреднескользящей КАК Суммы
	|		ПО Т.Организация = Суммы.Организация
	|		И Т.ИдентификаторФинЗаписи = Суммы.ИдентификаторФинЗаписи
	|		И Т.НастройкаХозяйственнойОперации = Суммы.НастройкаХозяйственнойОперации
	|ГДЕ
	|	Т.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоКорДвижению)
	|";
	
	Если ЕстьДокументИсточник Тогда
		
		ТекстЗапроса = ТекстЗапроса  + "
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		
		ТекстЗапроса = ТекстЗапроса  + "
		|ВЫБРАТЬ
		|	&ПоляЗапросаОсновные
		|ИЗ
		|	ВТДвиженияРасчетПоДокументуИсточнику КАК Т
		|ГДЕ
		|	Т.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоДвижениямДокументаИсточника)
		|";
		
	КонецЕсли;
	
	Если ЕстьВыбытияПоФиксированнойСтоимости Тогда
		
		ТекстЗапроса = ТекстЗапроса  + "
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		
		ТекстЗапроса = ТекстЗапроса  + "
		|ВЫБРАТЬ
		|	&ПоляЗапросаОсновные
		|ИЗ
		|	ВТДвиженияОтклоненияВСтоимости КАК Т
		|";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляЗапросаОсновные", СокрЛП(ТекстПоляОсновныеПоСреднескользящей));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляЗапросаВыборкаПоСреднескользящей", СокрЛП(ТекстПоляВыборкаПоСреднескользящей));
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТИтоговыеДвиженияСебестоимостьТоваров", ТекстЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&ПоляЗапросаОсновные
	|ИЗ
	|	ВТИтоговыеДвиженияСебестоимостьТоваров КАК Т
	|";

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляЗапросаОсновные", СокрЛП(ТекстПоляОсновныеПоСреднескользящей));
	
	ПараметрыОтражения.ТекстыШаблоновОтражения.Вставить(ПараметрыОтражения.ИмяРегистра, ТекстЗапроса);
		
	#КонецОбласти
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаДвиженияВыручкаИСебестоимостьПродаж(ПараметрыОтражения)
	
	// Проверяем, есть ли у документа текст запроса проведения по регистру выручки
	ИндексЗапроса = -1;
	СтарыйТекстЗапроса = "";
	ИмяРегистра = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	
	Для Каждого ЭлементСписка Из ПараметрыОтражения.ТекстыЗапроса Цикл

		ИндексЗапроса = ИндексЗапроса + 1;
		Если ЭлементСписка.Представление = ИмяРегистра Тогда
			СтарыйТекстЗапроса = ЭлементСписка.Значение;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ПустаяСтрока(СтарыйТекстЗапроса) Тогда
		Возврат; // нет движений по выручке
	КонецЕсли;
	
	// Замена старого запроса выборка на новый запрос создания временной таблицы ДвиженияВыручкиИСебестоимости
	ОписаниеЗапроса = РасчетСебестоимостиПовтИсп.ЗапросФормированияВТИзЗапросаВыборки(СтарыйТекстЗапроса, "ДвиженияВыручкиИСебестоимости");
	
	НовыйТекстЗапроса = ОписаниеЗапроса.ТекстЗапроса + "
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторФинЗаписи,
	|	НастройкаХозяйственнойОперации";
	
	ПараметрыОтражения.ТекстыЗапроса[ИндексЗапроса].Значение = НовыйТекстЗапроса;
	ПараметрыОтражения.ТекстыЗапроса[ИндексЗапроса].Представление = "ДвиженияВыручкиИСебестоимости";
	
	// Создание вспомогательной таблицы ВТСтоимостьСреднескользящаяДляВыручки - суммы среднескользящей из себестоимости
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Т.Организация,
	|   Т.ИдентификаторФинЗаписи,
	|   Т.НастройкаХозяйственнойОперации,
	|   СУММА(Т.Стоимость) КАК Стоимость,
	|   СУММА(Т.СтоимостьБезНДС) КАК СтоимостьБезНДС,
	|   СУММА(Т.СтоимостьРегл) КАК СтоимостьРегл,
	|   СУММА(Т.СтоимостьУпр) КАК СтоимостьУпр,
	|   СУММА(Т.СтоимостьЗабалансовая) КАК СтоимостьЗабалансовая,
	|   СУММА(Т.СтоимостьЗабалансоваяРегл) КАК СтоимостьЗабалансоваяРегл
	|ПОМЕСТИТЬ ВТСтоимостьСреднескользящаяДляВыручки
	|ИЗ
	|	ВТИтоговыеДвиженияСебестоимостьТоваров КАК Т
	|ГДЕ
	|	Т.МетодОценкиСтоимостиТоваров = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|	И Т.СпособОпределенияСебестоимости В
	|		(ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоСреднескользящей),
	|		 ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимостиТоваров.ПоДвижениямДокументаИсточника))
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация,
	|   Т.ИдентификаторФинЗаписи,
	|   Т.НастройкаХозяйственнойОперации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ИдентификаторФинЗаписи,
	|	НастройкаХозяйственнойОперации
	|";
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВТСтоимостьСреднескользящаяДляВыручки", ТекстЗапроса);
	
	// Создание итогового запроса выборки данных для регистра выручки
	// Если суммы ресурсов среднескользящей уже заполнены в исходном запросе выборки данных для выручки,
	// то оставим их, иначе возьмем их из таблицы ВТСтоимостьСреднескользящаяДляВыручки
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&ПоляВыручки
	|ИЗ
	|	ДвиженияВыручкиИСебестоимости КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтоимостьСреднескользящаяДляВыручки КАК Суммы
	|		ПО Т.АналитикаУчетаПоПартнерам.Организация = Суммы.Организация
	|		И Т.ИдентификаторФинЗаписи = Суммы.ИдентификаторФинЗаписи
	|		И Т.НастройкаХозяйственнойОперации = Суммы.НастройкаХозяйственнойОперации
	|";
	
	ВозможныеСуммовыеПоля = Новый Структура(СуммовыеПоляСреднескользящей());
	ОтсутствующиеСуммовыеПоля = Новый Структура(СуммовыеПоляСреднескользящей());
	ТекстПоляВыручки = "";
	
	Для Каждого ИмяПоля Из ОписаниеЗапроса.Колонки Цикл
		
		Если ВозможныеСуммовыеПоля.Свойство(ИмяПоля) Тогда
			
			ОтсутствующиеСуммовыеПоля.Удалить(ИмяПоля);
			
			ТекстПоляВыручки = ТекстПоляВыручки + ?(ТекстПоляВыручки = "", "", ",
				|	") + "ВЫБОР КОГДА Т." + ИмяПоля + " <> 0 ТОГДА Т." + ИмяПоля
				+ " ИНАЧЕ ЕСТЬNULL(Суммы." + ИмяПоля + ", 0) КОНЕЦ КАК " + ИмяПоля;
			
		Иначе
			ТекстПоляВыручки = ТекстПоляВыручки + ?(ТекстПоляВыручки = "", "", ",
				|	") + "Т." + ИмяПоля + " КАК " + ИмяПоля;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого КлючИЗначение Из ОтсутствующиеСуммовыеПоля Цикл
		// Добавим ресурсы среднескользящей, которых не было в исходном запросе выборки данных для выручки
		ТекстПоляВыручки = ТекстПоляВыручки + ?(ТекстПоляВыручки = "", "", ",
			|	") + "ЕСТЬNULL(Суммы." + КлючИЗначение.Ключ + ", 0) КАК " + КлючИЗначение.Ключ;
		
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляВыручки", ТекстПоляВыручки);
	
	ПараметрыОтражения.ТекстыШаблоновОтражения.Вставить(ИмяРегистра, ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаКорДвиженияПрочиеРасходы(ПараметрыОтражения)
	
	Если НЕ ПараметрыОтражения.ЕстьСтатьяРасходовСписания Тогда
		Возврат;
	КонецЕсли;
	
	#Область ПроверкаТипаДокумента
	
	ДопустимыеДокументы = Новый Массив;

	ДопустимыеДокументы.Добавить(Метаданные.Документы.ВнутреннееПотребление);
	ДопустимыеДокументы.Добавить(Метаданные.Документы.ОтчетКомиссионераОСписании);
	ДопустимыеДокументы.Добавить(Метаданные.Документы.ОтчетОСписанииТоваровСХранения);
	ДопустимыеДокументы.Добавить(Метаданные.Документы.ОтчетОСписанииТоваровУХранителя);
	ДопустимыеДокументы.Добавить(Метаданные.Документы.ОтчетПоКомиссииМеждуОрганизациямиОСписании);
	ДопустимыеДокументы.Добавить(Метаданные.Документы.ПередачаТоваровМеждуОрганизациями);
	ДопустимыеДокументы.Добавить(Метаданные.Документы.ПрочееОприходованиеТоваров);
	ДопустимыеДокументы.Добавить(Метаданные.Документы.СписаниеНедостачТоваров);
	
	
	
	Если ДопустимыеДокументы.Найти(ПараметрыОтражения.МетаданныеДокумента) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ВтИсходныеПрочиеРасходы
	
	ШаблонТекстаЗапроса =
	"ВЫБРАТЬ
	|	Т.Период 										КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 			КАК ВидДвижения,
	|	ЕСТЬNULL(КорОрганизации.Ссылка, Т.Организация) 	КАК Организация,
	|	&Подразделение 									КАК Подразделение,
	|	Т.СтатьяРасходовСписания 						КАК СтатьяРасходов,
	|	Т.АналитикаРасходов 							КАК АналитикаРасходов,
	|	&НаправлениеДеятельности 						КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО 									КАК ВидДеятельностиНДС,
	|	Т.ХозяйственнаяОперация 		 				КАК ХозяйственнаяОперация,
	|	Т.АналитикаУчетаНоменклатуры 	 				КАК АналитикаУчетаНоменклатуры,
	|	Т.ИдентификаторФинЗаписи 		 				КАК ИдентификаторФинЗаписи,
	|	Т.НастройкаХозяйственнойОперации 				КАК НастройкаХозяйственнойОперации,
	|
	|	Т.Стоимость 				КАК СуммаСНДС,
	|	Т.СтоимостьБезНДС 			КАК СуммаБезНДС,
	|	Т.СтоимостьУпр 				КАК СуммаБезНДСУпр,
	|	Т.СтоимостьРегл 			КАК СуммаСНДСРегл,
	|	Т.СтоимостьРегл 			КАК СуммаБезНДСРегл,
	|	0 							КАК ПостояннаяРазница,
	|	0 							КАК ВременнаяРазница
	|ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы_1
	|ИЗ
	|	ИмяТаблицыДанныхПрочиеРасходы КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО Т.СтатьяРасходовСписания = СтатьиРасходов.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК КорОрганизации
	|		ПО &КорОрганизация = КорОрганизации.Ссылка
	|ГДЕ
	|	Т.МетодОценкиСтоимостиТоваров = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|	И (Т.Стоимость <> 0 ИЛИ Т.СтоимостьБезНДС <> 0 ИЛИ Т.СтоимостьРегл <> 0 ИЛИ Т.СтоимостьУпр <> 0)
	|	И &УсловиеОтбора
	|";
	
	Если ПараметрыОтражения.ЕстьКорНаправлениеДеятельности Тогда
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&НаправлениеДеятельности", "Т.КорНаправлениеДеятельности");
	Иначе
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&НаправлениеДеятельности", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	Если ПараметрыОтражения.ЕстьПодразделение Тогда
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&Подразделение", "Т.Подразделение");
	Иначе
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&Подразделение", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	Если ПараметрыОтражения.ЕстьКорОрганизация Тогда
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&КорОрганизация", "Т.КорОрганизация");
	Иначе
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&КорОрганизация", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	//ВТДвиженияРасчетПоСреднескользящей
	ТекстЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "ИмяТаблицыДанныхПрочиеРасходы", "ВТДвиженияРасчетПоСреднескользящей");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора",
		"Т.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы)");

	//ВТДвиженияРасчетПоДокументуИсточнику
	Если ПараметрыОтражения.ЕстьДокументИсточник Тогда

		ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|" + СтрЗаменить(ШаблонТекстаЗапроса, "ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы_1", "");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяТаблицыДанныхПрочиеРасходы", "ВТДвиженияРасчетПоДокументуИсточнику");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора",
			"Т.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы)");
		
	КонецЕсли;
	
	//ВТДвиженияОтклоненияВСтоимости
	Если ПараметрыОтражения.ЕстьВыбытияПоФиксированнойСтоимости Тогда

		ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|" + СтрЗаменить(ШаблонТекстаЗапроса, "ПОМЕСТИТЬ ВтИсходныеПрочиеРасходы_1", "");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяТаблицыДанныхПрочиеРасходы", "ВТДвиженияОтклоненияВСтоимости");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора", "ИСТИНА");
		
	КонецЕсли;
	
	// ВтИсходныеПрочиеРасходы_1
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВтИсходныеПрочиеРасходы_1", ТекстЗапроса);
	
	#КонецОбласти
	
	#Область ФормированиеДвижений
	
	// В запросах, формируемых в модуле менеджера регистра Прочие расходы надо заменить имена используемых временных таблиц.
	// Если это не сделать, то в случае, когда сам документ делает движения по регистру Прочие расходы, возникнет ошибка вида "Таблица уже существует".
	
	// ВтПрочиеРасходы_1
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы(,
		ПараметрыОтражения.ВозможныРазныеПериодыВДвижениях); // использует ВтИсходныеПрочиеРасходы, формирует ВтПрочиеРасходы
	
	ВременныеТаблицы = РасчетСебестоимостиПовтИсп.ВременныеТаблицыЗапроса(ТекстЗапроса);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВтИсходныеПрочиеРасходы", "ВтИсходныеПрочиеРасходы_1");
	
	Для Каждого ЭлементСписка Из ВременныеТаблицы Цикл
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ЭлементСписка.Представление, ЭлементСписка.Представление + "_" + "1");
	КонецЦикла;
	
	ПараметрыОтражения.ТекстыШаблоновВТ.Вставить("ВтПрочиеРасходы_1", ТекстЗапроса);

	// Кор. движения по прочим расходам
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы(,
		ПараметрыОтражения.ВозможныРазныеПериодыВДвижениях); // использует ВтПрочиеРасходы, формирует выборку движений

	ВременныеТаблицы = РасчетСебестоимостиПовтИсп.ВременныеТаблицыЗапроса(ТекстЗапроса);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВтПрочиеРасходы", "ВтПрочиеРасходы_1");

	Для Каждого ЭлементСписка Из ВременныеТаблицы Цикл
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ЭлементСписка.Представление, ЭлементСписка.Представление + "_" + "1");
	КонецЦикла;
	
	ПараметрыОтражения.ТекстыШаблоновОтражения.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя, ТекстЗапроса);
	
	#КонецОбласти
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаКорДвиженияПрочиеДоходы(ПараметрыОтражения)
	
	Если НЕ ПараметрыОтражения.ЕстьВыбытияПоФиксированнойСтоимости
	 ИЛИ НЕ ПараметрыОтражения.ЕстьСтатьяДоходов Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Т.Период 								КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 	КАК ВидДвижения,
	|	Т.Организация 							КАК Организация,
	|	&Подразделение 							КАК Подразделение,
	|	Т.СтатьяДоходов 						КАК СтатьяДоходов,
	|	Т.АналитикаДоходов 						КАК АналитикаДоходов,
	|	&НаправлениеДеятельности 				КАК НаправлениеДеятельности,
	|	Т.ХозяйственнаяОперация 		 		КАК ХозяйственнаяОперация,
	|	Т.ИдентификаторФинЗаписи 		 		КАК ИдентификаторФинЗаписи,
	|	Т.НастройкаХозяйственнойОперации 		КАК НастройкаХозяйственнойОперации,
	|
	|	Т.Стоимость 							КАК Сумма,
	|	Т.СтоимостьРегл 						КАК СуммаРегл,
	|	Т.СтоимостьУпр 							КАК СуммаУпр
	|ИЗ
	|	ВТДвиженияОтклоненияВСтоимости КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиДоходов КАК СтатьиДоходов
	|		ПО Т.СтатьяДоходов = СтатьиДоходов.Ссылка
	|ГДЕ
	|	Т.МетодОценкиСтоимостиТоваров = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|	И (Т.Стоимость <> 0 ИЛИ Т.СтоимостьРегл <> 0 ИЛИ Т.СтоимостьУпр <> 0)
	|";
	
	Если ПараметрыОтражения.ЕстьКорНаправлениеДеятельности Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НаправлениеДеятельности", "Т.КорНаправлениеДеятельности");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НаправлениеДеятельности", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	Если ПараметрыОтражения.ЕстьПодразделение Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Подразделение", "Т.Подразделение");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Подразделение", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	ПараметрыОтражения.ТекстыШаблоновОтражения.Вставить(Метаданные.РегистрыНакопления.ПрочиеДоходы.Имя, ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаКорДвиженияПрочиеАктивыПассивы(ПараметрыОтражения)
	
	Если НЕ ПараметрыОтражения.ЕстьСтатьяАктивовПассивов Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Т.Период 								КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 	КАК ВидДвижения,
	|	Т.Организация 							КАК Организация,
	|	&Подразделение 							КАК Подразделение,
	|	Т.СтатьяАктивовПассивов 				КАК Статья,
	|	Т.АналитикаАктивовПассивов 				КАК Аналитика,
	|	&НаправлениеДеятельности 				КАК НаправлениеДеятельности,
	|	Т.Стоимость 							КАК Сумма
	|ИЗ
	|	ВТДвиженияРасчетПоСреднескользящей КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
	|		ПО Т.СтатьяАктивовПассивов = СтатьиАктивовПассивов.Ссылка
	|ГДЕ
	|	Т.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы)
	|	И Т.МетодОценкиСтоимостиТоваров = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|	И Т.Стоимость <> 0
	|";
	
	Если ПараметрыОтражения.ЕстьДокументИсточник Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|" + СтрЗаменить(ТекстЗапроса, "ВТДвиженияРасчетПоСреднескользящей", "ВТДвиженияРасчетПоДокументуИсточнику");
		
	КонецЕсли;
	
	Если ПараметрыОтражения.ЕстьКорНаправлениеДеятельности Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НаправлениеДеятельности", "Т.КорНаправлениеДеятельности");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НаправлениеДеятельности", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	Если ПараметрыОтражения.ЕстьПодразделение Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Подразделение", "Т.Подразделение");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Подразделение", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	ПараметрыОтражения.ТекстыШаблоновОтражения.Вставить(Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя, ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаКорДвиженияПоПрочимАктивамПассивам(ПараметрыОтражения)
	
	Если НЕ ПараметрыОтражения.ЕстьСтатьяАктивовПассивов Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Т.Период 								КАК Период,
	|	Т.Организация 							КАК Организация,
	|	&Подразделение 							КАК Подразделение,
	|	Т.СтатьяАктивовПассивов 				КАК Статья,
	|	Т.АналитикаАктивовПассивов 				КАК Аналитика,
	|	&НаправлениеДеятельности 				КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	|	&НастройкаСчетовУчета 					КАК НастройкаСчетовУчета,
	|	Т.ИдентификаторФинЗаписи 		 		КАК ИдентификаторФинЗаписи,
	|	Т.НастройкаХозяйственнойОперации 		КАК НастройкаХозяйственнойОперации,
	|
	|	Т.Стоимость 							КАК СуммаСНДС,
	|	Т.СтоимостьБезНДС 						КАК СуммаБезНДС,
	|	Т.СтоимостьРегл 						КАК СуммаРегл,
	|	Т.СтоимостьУпр 							КАК СуммаУпр
	|ИЗ
	|	ВТДвиженияРасчетПоСреднескользящей КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
	|		ПО Т.СтатьяАктивовПассивов = СтатьиАктивовПассивов.Ссылка
	|ГДЕ
	|	Т.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы)
	|	И Т.МетодОценкиСтоимостиТоваров = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|	И (Т.Стоимость <> 0 ИЛИ Т.СтоимостьБезНДС <> 0 ИЛИ Т.СтоимостьРегл <> 0 ИЛИ Т.СтоимостьУпр <> 0)
	|";
	
	Если ПараметрыОтражения.ЕстьДокументИсточник Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|" + СтрЗаменить(ТекстЗапроса, "ВТДвиженияРасчетПоСреднескользящей", "ВТДвиженияРасчетПоДокументуИсточнику");
		
	КонецЕсли;
	
	Если ПараметрыОтражения.ЕстьКорНаправлениеДеятельности Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НаправлениеДеятельности", "Т.КорНаправлениеДеятельности");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НаправлениеДеятельности", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	Если ПараметрыОтражения.ЕстьНастройкаСчетовУчета Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НастройкаСчетовУчета", "Т.НастройкаСчетовУчета");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НастройкаСчетовУчета", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	Если ПараметрыОтражения.ЕстьПодразделение Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Подразделение", "Т.Подразделение");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Подразделение", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	ПараметрыОтражения.ТекстыШаблоновОтражения.Вставить(Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.Имя, ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаКорДвиженияНоменклатураДоходыРасходы(ПараметрыОтражения)
	
	ШаблонТекстаЗапроса =
	"ВЫБРАТЬ
	|	Т.Период 										КАК Период,
	|	Т.Организация 									КАК Организация,
	|	&Подразделение 									КАК Подразделение,
	|	Т.ХозяйственнаяОперация 		 				КАК ХозяйственнаяОперация,
	|	Т.АналитикаУчетаНоменклатуры 	 				КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов 	 								КАК ВидЗапасов,
	|	ВидыЗапасов.ТипЗапасов 	 						КАК ТипЗапасов,
	|	&НаправлениеДеятельности 						КАК НаправлениеДеятельностиСтатьи,
	|	&АналитикаРасходов 	 							КАК АналитикаРасходов,
	|	&АналитикаДоходов 	 							КАК АналитикаДоходов,
	|	&АналитикаАктивовПассивов 	 					КАК АналитикаАктивовПассивов,
	|
	|	АналитикаНоменклатуры.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	ВЫБОР КОГДА АналитикаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)
	|		ТОГДА АналитикаНоменклатуры.Договор.Партнер
	|		ИНАЧЕ АналитикаНоменклатуры.МестоХранения
	|	КОНЕЦ КАК Склад,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(&СтатьяРасходовСписания) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|	  	  И &СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|			ТОГДА &СтатьяРасходовСписания
	|		КОГДА ТИПЗНАЧЕНИЯ(&СтатьяДоходов) = ТИП(ПланВидовХарактеристик.СтатьиДоходов)
	|	  	  И &СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|			ТОГДА &СтатьяДоходов
	|			ИНАЧЕ &СтатьяАктивовПассивов
	|	КОНЕЦ КАК СтатьяДоходовРасходов,
	|	ВЫБОР
	|		КОГДА АналитикаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА АналитикаНоменклатуры.Номенклатура
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Т.ВидЗапасов
	|			ИНАЧЕ АналитикаНоменклатуры.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|
	|	Т.Стоимость 			КАК Стоимость,
	|	Т.СтоимостьБезНДС 		КАК СтоимостьБезНДС,
	|	Т.СтоимостьРегл 		КАК СтоимостьРегл,
	|	Т.СтоимостьУпр 			КАК СтоимостьУпр
	|ИЗ
	|	ИмяТаблицыДанныхДоходыРасходы КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО Т.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО Т.ВидЗапасов = ВидыЗапасов.Ссылка
	|ГДЕ
	|	Т.МетодОценкиСтоимостиТоваров = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|	И (Т.Стоимость <> 0 ИЛИ Т.СтоимостьБезНДС <> 0 ИЛИ Т.СтоимостьРегл <> 0 ИЛИ Т.СтоимостьУпр <> 0)
	|	И &УсловиеОтбора
	|";
	
	Если ПараметрыОтражения.ЕстьКорНаправлениеДеятельности Тогда
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&НаправлениеДеятельности", "Т.КорНаправлениеДеятельности");
	Иначе
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&НаправлениеДеятельности", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	Если ПараметрыОтражения.ЕстьСтатьяРасходовСписания Тогда
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&СтатьяРасходовСписания", "Т.СтатьяРасходовСписания");
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&АналитикаРасходов", "Т.АналитикаРасходов");
	Иначе
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&СтатьяРасходовСписания", "НЕОПРЕДЕЛЕНО");
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&АналитикаРасходов", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	Если ПараметрыОтражения.ЕстьСтатьяДоходов Тогда
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&СтатьяДоходов", "Т.СтатьяДоходов");
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&АналитикаДоходов", "Т.АналитикаДоходов");
	Иначе
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&СтатьяДоходов", "НЕОПРЕДЕЛЕНО");
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&АналитикаДоходов", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	Если ПараметрыОтражения.ЕстьСтатьяАктивовПассивов Тогда
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&СтатьяАктивовПассивов", "Т.СтатьяАктивовПассивов");
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&АналитикаАктивовПассивов", "Т.АналитикаАктивовПассивов");
	Иначе
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&СтатьяАктивовПассивов", "НЕОПРЕДЕЛЕНО");
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&АналитикаАктивовПассивов", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	Если ПараметрыОтражения.ЕстьПодразделение Тогда
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&Подразделение", "Т.Подразделение");
	Иначе
		ШаблонТекстаЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "&Подразделение", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	//ВТДвиженияРасчетПоСреднескользящей
	ТекстЗапроса = СтрЗаменить(ШаблонТекстаЗапроса, "ИмяТаблицыДанныхДоходыРасходы", "ВТДвиженияРасчетПоСреднескользящей");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора",
		"Т.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы)");

	//ВТДвиженияРасчетПоДокументуИсточнику
	Если ПараметрыОтражения.ЕстьДокументИсточник Тогда

		ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|" + ШаблонТекстаЗапроса;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяТаблицыДанныхДоходыРасходы", "ВТДвиженияРасчетПоДокументуИсточнику");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора",
			"Т.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы)");
		
	КонецЕсли;
	
	//ВТДвиженияОтклоненияВСтоимости
	Если ПараметрыОтражения.ЕстьВыбытияПоФиксированнойСтоимости Тогда

		ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|" + ШаблонТекстаЗапроса;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяТаблицыДанныхДоходыРасходы", "ВТДвиженияОтклоненияВСтоимости");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора", "ИСТИНА");
		
	КонецЕсли;
	
	ПараметрыОтражения.ТекстыШаблоновОтражения.Вставить(Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.Имя, ТекстЗапроса);
	
КонецПроцедуры

Процедура ДобавитьТекстЗапросаКорДвиженияНоменклатураНоменклатура(ПараметрыОтражения)
	
	Если НЕ ПараметрыОтражения.ЕстьПеремещение И НЕ ПараметрыОтражения.ЕстьСписаниеНаДругиеПартии Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Т.Период 										КАК Период,
	|	Т.Организация 									КАК Организация,
	|	&Подразделение 									КАК Подразделение,
	|	Т.ХозяйственнаяОперация 		 				КАК ХозяйственнаяОперация,
	|	Т.АналитикаУчетаНоменклатуры 	 				КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов 	 								КАК ВидЗапасов,
	|	ВидыЗапасов.ТипЗапасов 	 						КАК ТипЗапасов,
	|
	|	АналитикаНоменклатуры.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА АналитикаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)
	|		ТОГДА АналитикаНоменклатуры.Договор.Партнер
	|		ИНАЧЕ АналитикаНоменклатуры.МестоХранения
	|	КОНЕЦ КАК Склад,
	|	ВЫБОР
	|		КОГДА АналитикаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА АналитикаНоменклатуры.Номенклатура
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Т.ВидЗапасов
	|			ИНАЧЕ АналитикаНоменклатуры.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|
	|	Т.КорАналитикаУчетаНоменклатуры 	 			КАК КорАналитикаУчетаНоменклатуры,
	|	Т.КорВидЗапасов 	 							КАК КорВидЗапасов,
	|	КорВидыЗапасов.ТипЗапасов 	 					КАК КорТипЗапасов,
	|	&КорОрганизация 	 							КАК КорОрганизация,
	|
	|	КорАналитикаНоменклатуры.Назначение.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	ВЫБОР КОГДА КорАналитикаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента)
	|		ТОГДА КорАналитикаНоменклатуры.Договор.Партнер
	|		ИНАЧЕ КорАналитикаНоменклатуры.МестоХранения
	|	КОНЕЦ КАК КорСклад,
	|	ВЫБОР
	|		КОГДА КорАналитикаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА КорАналитикаНоменклатуры.Номенклатура
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА Т.КорВидЗапасов
	|			ИНАЧЕ КорАналитикаНоменклатуры.Номенклатура
	|	КОНЕЦ КАК КорИсточникГФУНоменклатуры,
	|
	|	Т.Стоимость 			КАК Стоимость,
	|	Т.СтоимостьБезНДС 		КАК СтоимостьБезНДС,
	|	Т.СтоимостьРегл 		КАК СтоимостьРегл,
	|	Т.СтоимостьУпр 			КАК СтоимостьУпр
	|ИЗ
	|	ВТДвиженияРасчетПоСреднескользящей КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО Т.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорАналитикаНоменклатуры
	|		ПО Т.КорАналитикаУчетаНоменклатуры = КорАналитикаНоменклатуры.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО Т.ВидЗапасов = ВидыЗапасов.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|		ПО Т.ВидЗапасов = КорВидыЗапасов.Ссылка
	|ГДЕ
	|	Т.ОперацияУчетаСебестоимости В
	|		(ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.Перемещение),
	|		 ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаДругиеПартии))
	|	И Т.МетодОценкиСтоимостиТоваров = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|	И (Т.Стоимость <> 0 ИЛИ Т.СтоимостьБезНДС <> 0 ИЛИ Т.СтоимостьРегл <> 0 ИЛИ Т.СтоимостьУпр <> 0)
	|";
	
	Если ПараметрыОтражения.ЕстьПодразделение Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Подразделение", "Т.Подразделение");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Подразделение", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	Если ПараметрыОтражения.ЕстьКорОрганизация Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КорОрганизация", "Т.КорОрганизация");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&КорОрганизация", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	ПараметрыОтражения.ТекстыШаблоновОтражения.Вставить(Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура.Имя, ТекстЗапроса);
	
КонецПроцедуры


Функция СуммовыеПоляСреднескользящей() Экспорт
	
	Возврат "Стоимость, СтоимостьБезНДС, СтоимостьРегл, СтоимостьУпр, СтоимостьЗабалансовая, СтоимостьЗабалансоваяРегл";
	
КонецФункции

#КонецОбласти

#Область Прочие

Процедура ПроверитьПоляЗапросаВыборкиДанных(ПараметрыОтражения, ОписаниеОперации, РазборСхемыЗапроса)
	
	Для Каждого Источники Из РазборСхемыЗапроса.ОписаниеЗапроса.Операторы[0].Источники Цикл
		Если НРег(Источники.Источник.Псевдоним) = НРег("ТаблицаДокумента") Тогда
			ИмяДокумента = Источники.Источник.ИмяТаблицы;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураПоляОперации = Новый Структура;
	СтруктураПоляЗапроса  = Новый Структура;
	
	Для Каждого Описание Из ОписаниеОперации.Поля Цикл
		СтруктураПоляОперации.Вставить(Описание.Имя, Описание.Дополнительное);
	КонецЦикла;
	
	Для Каждого Описание Из РазборСхемыЗапроса.КолонкиЗапроса Цикл
		СтруктураПоляЗапроса.Вставить(Описание.Ключ);
	КонецЦикла;
	
	ТекстПоляОперации = "";
	ТекстПоляЗапроса = "";
	
	Для Каждого Описание Из СтруктураПоляОперации Цикл
		Если НЕ СтруктураПоляЗапроса.Свойство(Описание.Ключ) И НЕ Описание.Значение Тогда
			ТекстПоляОперации = ТекстПоляОперации + ?(ТекстПоляОперации = "", "", ", ") + Описание.Ключ;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Описание Из СтруктураПоляЗапроса Цикл
		Если НЕ СтруктураПоляОперации.Свойство(Описание.Ключ) Тогда
			ТекстПоляЗапроса = ТекстПоляЗапроса + ?(ТекстПоляЗапроса = "", "", ", ") + Описание.Ключ;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекстПоляЗапроса)
	 ИЛИ ЗначениеЗаполнено(ТекстПоляОперации)
	 ИЛИ ИмяДокумента = ""
	 ИЛИ НРег(ПараметрыОтражения.МетаданныеДокумента.ПолноеИмя()) <> НРег(ИмяДокумента) И НРег("ДанныеДокументаШапка") <> НРег(ИмяДокумента) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Ошибка в подготовке данных для операции'") + ": " + РазборСхемыЗапроса.ВидОперации);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстПоляЗапроса) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Лишние поля в запросе выборки данных операции ""%1"" для проведения документа: ""%2""'"),
				ОписаниеОперации.ВидОперации,
				ТекстПоляЗапроса));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстПоляОперации) Тогда
		ОбщегоНазначения.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Не хватает обязательных полей в запросе выборки данных операции ""%1"" для проведения документа: ""%2""'"),
				ОписаниеОперации.ВидОперации,
				ТекстПоляОперации));
	КонецЕсли;
	
	Если ИмяДокумента = "" Тогда
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Для документа ""%1"" не найдена основная таблица запроса ""%2""'"),
			ПараметрыОтражения.МетаданныеДокумента.Имя,
			"ТаблицаДокумента");
			
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		
	ИначеЕсли НРег(ПараметрыОтражения.МетаданныеДокумента.ПолноеИмя()) <> НРег(ИмяДокумента) И Нрег("ДанныеДокументаШапка") <> НРег(ИмяДокумента) Тогда
		
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не совпадает имя документа ""%1"" с основной таблицей запроса ""%2""'"),
			ПараметрыОтражения.МетаданныеДокумента.Имя,
			ИмяДокумента);
			
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		
	КонецЕсли;
	
КонецПроцедуры

Функция МенеджерОбъектаПоСсылке(Документ)
	
	МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Документ);
	
	//++ Локализация
	МетаДокумент = Метаданные.НайтиПоТипу(ТипЗнч(Документ));
	
	Если МетаДокумент = Метаданные.Документы.МаркировкаТоваровГИСМ
	 ИЛИ МетаДокумент = Метаданные.Документы.ПеремаркировкаТоваровГИСМ Тогда
	 
		ИмяМодуля = Метаданные.ОбщиеМодули.МаркировкаТоваровГИСМУТ.Имя;
		МенеджерДокумента = ОбщегоНазначения.ОбщийМодуль(ИмяМодуля);
		
	КонецЕсли;
	//-- Локализация
	
	Возврат МенеджерДокумента;
	
КонецФункции

Функция ВсеПоляРегистра(МетаданныеРегистра)
	
	ПоляРегистра = Новый Структура;
	
	Для Каждого МетаПоле Из МетаданныеРегистра.Измерения Цикл
		ПоляРегистра.Вставить(МетаПоле.Имя);
	КонецЦикла; 
		
	Для Каждого МетаПоле Из МетаданныеРегистра.Ресурсы Цикл
		ПоляРегистра.Вставить(МетаПоле.Имя);
	КонецЦикла; 
	
	Для Каждого МетаПоле Из МетаданныеРегистра.Реквизиты Цикл
		ПоляРегистра.Вставить(МетаПоле.Имя);
	КонецЦикла; 
	
	Для Каждого МетаПоле Из МетаданныеРегистра.СтандартныеРеквизиты Цикл
		ПоляРегистра.Вставить(МетаПоле.Имя);
	КонецЦикла; 
	
	Возврат ПоляРегистра;
	
КонецФункции

#КонецОбласти

#КонецОбласти

// Встраивание в документ:
// Добавить область ПартионныйУчет в конец области Проведение
// Добавить в область процедуры
//	- ОписаниеРегистровУчетаЗатратИСебестоимости
//	- УстановитьДополнительныеПараметрыОперацийУчетаЗатратИСебестоимости
//	- СформироватьДополнительныеТаблицыОперацийУчетаЗатратИСебестоимости
//	- ОписаниеОперацийУчетаСебестоимости
// 	 (примеры заполнения текстов процедур см., например, в документе РеализацияТоваровУслуг)
// Добавить вызов РасчетСебестоимостиПроведениеДокументов. ОтразитьВМеханизмеУчетаЗатратИСебестоимости в процедуру ДанныеДокументаДляПроведения
