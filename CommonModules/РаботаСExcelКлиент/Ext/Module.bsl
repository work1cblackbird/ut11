////////////////////////////////////////////////////////////////////////////////
// Общие процедуры и функции работы с выгрузкой и загрузкой из Excel
//  
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Процедура - Выгрузить в excel
//
// Параметры:
//  Форма		 - ФормаКлиентскогоПриложения	 - Форма документа.
Процедура ВыгрузитьВExcel(Форма) Экспорт 
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВыгрузитьВExcelРасширениеПодключено",
		ЭтотОбъект,
		Новый Структура("Форма", Форма));
	
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(ОписаниеОповещения);
	
КонецПроцедуры

// Процедура - Выбрать присоединенный файл excel
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма документа:
//   * Объект   - ДанныеФормыСтруктура - Структура данных формы документа.
//   * Элементы - ВсеЭлементыФормы     - Элементы формы документа.
//  ИмяЭлементаВыбора - Строка - Имя элемента формы, в который вернется оповещение о выборе.
//
Процедура ВыбратьПрисоединенныйФайлExcel(Форма, ИмяЭлементаВыбора) Экспорт 

	Если НЕ ЗначениеЗаполнено(Форма.Объект.Ссылка) Тогда
		
		ДополнительныеПараметры = Новый Структура("Форма, ИмяЭлементаВыбора", Форма, ИмяЭлементаВыбора);
		Оповещение = Новый ОписаниеОповещения("ВыбратьПрисоединенныйФайлExcelОбработкаОтвета", ЭтотОбъект, ДополнительныеПараметры);
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Записать и продолжить'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Отмена'"));
		
		ПоказатьВопрос(
			Оповещение, 
			НСтр("ru = 'Перед загрузкой документ необходимо записать. Выполнить запись документа и продолжить?'"),
			Кнопки);
		Возврат;
		
	КонецЕсли; 
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВыбратьПрисоединенныйФайлExcelРасширениеПодключено",
		ЭтотОбъект,
		Новый Структура("ВладелецФайлов, ЭлементФормы", Форма.Объект.Ссылка, Форма.Элементы[ИмяЭлементаВыбора]));
	
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(ОписаниеОповещения);
	
КонецПроцедуры

// Функция - Загрузить из excel
//
// Параметры:
//  Форма					 - ФормаКлиентскогоПриложения - Форма документа.
//  ПрисоединенныйФайл		 - СправочникСсылка.ПланЗакупокПрисоединенныеФайлы - Ссылка на выбранный присоединенный файл.
//  						 - СправочникСсылка.ПланПродажПрисоединенныеФайлы - Ссылка на выбранный присоединенный файл.
//  						 - СправочникСсылка.ПланОстатковПрисоединенныеФайлы - Ссылка на выбранный присоединенный файл.
//  						 - СправочникСсылка.ПланПроизводстваПрисоединенныеФайлы - Ссылка на выбранный присоединенный файл.
//  						 - СправочникСсылка.ПланСборкиРазборкиПрисоединенныеФайлы - Ссылка на выбранный присоединенный файл.
//  						 - СправочникСсылка.ПланПродажПоКатегориямПрисоединенныеФайлы - Ссылка на выбранный присоединенный файл.
//  						 - СправочникСсылка.ПланВнутреннихПотребленийПрисоединенныеФайлы - Ссылка на выбранный присоединенный файл.
//  ПараметрыЗагрузкиИзExcel - Структура - Параметры загрузки из Excel.
//
Процедура ЗагрузитьИзExcel(Форма, ПрисоединенныйФайл, ПараметрыЗагрузкиИзExcel = Неопределено) Экспорт
	
	ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ПолучитьДанныеФайла(
		ПрисоединенныйФайл, 
		Форма.УникальныйИдентификатор, 
		Истина);
		
	РасширениеФайла = ДанныеФайла["Расширение"];
	Если НРЕГ(РасширениеФайла) <> "xls"
		И НРЕГ(РасширениеФайла) <> "xlsx" Тогда
		СообщениеОбОшибке  = НСтр("ru = 'Файл не является файлом формата Excel, выбор запрещен.'");
		
		ПоказатьПредупреждение(, СообщениеОбОшибке);
		Возврат;
		//ВызватьИсключение СообщениеОбОшибке;
	КонецЕсли;
	
	ДополнительныеПараметры = 
		Новый Структура("Форма, ПрисоединенныйФайл, ПараметрыЗагрузкиИзExcel", Форма, ПрисоединенныйФайл, ПараметрыЗагрузкиИзExcel);
		
	Если Не ДанныеФайла.ФайлРедактируетТекущийПользователь Тогда
		
		Оповещение = Новый ОписаниеОповещения(
			"ЗагрузитьИзExcelПолучениеФайла",
			ЭтотОбъект,
			ДополнительныеПараметры);
		
		РаботаСФайламиКлиент.ПолучитьПрисоединенныйФайл(
			Оповещение,
			ПрисоединенныйФайл,
			Форма.УникальныйИдентификатор,
			Новый Структура("ДанныеФайла, ДляРедактирования", ДанныеФайла, Ложь));
		
	Иначе
		
		// Не надо получать файл на диск чтобы не затереть несохраненные изменения
		РабочийКаталогПользователя = РаботаСФайламиСлужебныйКлиент.РабочийКаталогПользователя();
		ИмяВременногоФайла         = РабочийКаталогПользователя + ДанныеФайла.ОтносительныйПуть + ДанныеФайла.ИмяФайла;
		
		ЗагрузитьИзExcelПолучениеФайла(
			Новый Структура("ОписаниеОшибки, ПолноеИмяФайла", "", ИмяВременногоФайла),
			ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Параметры:
// 	Результат - КодВозвратаДиалога - 
// 	ДополнительныеПараметры - Структура - структура с обязательным реквизитом:
//    * Форма - ФормаКлиентскогоПриложения - в форме обязательный реквизит:
//      ** Объект - ДокументОбъект -
Процедура ВыгрузитьВExcelРасширениеПодключено(Результат, ДополнительныеПараметры) Экспорт 
	
	Форма 		 = ДополнительныеПараметры.Форма;
	Объект 		 = Форма.Объект;
	
	Если Форма.Модифицированность ИЛИ НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ДополнительныеПараметры = Новый Структура("Форма", Форма);
		Оповещение = Новый ОписаниеОповещения("ВыгрузитьВExcelОбработкаОтвета", ЭтотОбъект, ДополнительныеПараметры);
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Записать и продолжить'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Отмена'"));
		
		ПоказатьВопрос(
			Оповещение, 
			НСтр("ru = 'Перед выгрузкой документ необходимо записать. Выполнить запись документа и продолжить?'"),
			Кнопки);
		Возврат;
		
	КонецЕсли;
	
	СоздатьИОбработатьПрисоединенныйФайлExcel(Форма);
	
КонецПроцедуры

// Параметры:
// 	Результат - КодВозвратаДиалога - 
// 	ДополнительныеПараметры - Структура - структура с обязательным реквизитом:
//    * Форма - ФормаКлиентскогоПриложения, РасширениеУправляемойФормыДляОбъектов - 
Процедура ВыгрузитьВExcelОбработкаОтвета(Результат, ДополнительныеПараметры) Экспорт 
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПараметрыЗаписи = Новый Структура;
		Форма.ОповещениеПослеЗаписи = Новый ОписаниеОповещения("ВыгрузитьВExcelПослеЗаписи", ЭтотОбъект, ДополнительныеПараметры);
		Форма.Записать();
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
// 	Результат - КодВозвратаДиалога - 
// 	ДополнительныеПараметры - Структура - структура с обязательным реквизитом:
//    * Форма - ФормаКлиентскогоПриложения - в форме обязательный реквизит:
//      ** Объект - ДокументОбъект -
Процедура ВыгрузитьВExcelПослеЗаписи(Результат, ДополнительныеПараметры) Экспорт 
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если Результат <> Истина ИЛИ НЕ ЗначениеЗаполнено(Форма.Объект.Ссылка) ИЛИ Форма.Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьИОбработатьПрисоединенныйФайлExcel(Форма);
	
КонецПроцедуры


Процедура ВыбратьПрисоединенныйФайлExcelРасширениеПодключено(Результат, ДополнительныеПараметры) Экспорт 
	
	РаботаСФайламиКлиент.ОткрытьФормуВыбораФайлов(
		ДополнительныеПараметры.ВладелецФайлов,
		ДополнительныеПараметры.ЭлементФормы);
	
КонецПроцедуры

// Параметры:
// 	Результат - КодВозвратаДиалога - 
// 	ДополнительныеПараметры - Структура - структура с обязательным реквизитом:
//    * Форма - ФормаКлиентскогоПриложения, РасширениеУправляемойФормыДляОбъектов -
Процедура ВыбратьПрисоединенныйФайлExcelОбработкаОтвета(Результат, ДополнительныеПараметры) Экспорт 
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Форма.ОповещениеПослеЗаписи = Новый ОписаниеОповещения("ВыбратьПрисоединенныйФайлExcelПослеЗаписи", ЭтотОбъект, ДополнительныеПараметры);
		
		Форма.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

// Параметры:
// 	Результат - КодВозвратаДиалога - 
// 	ДополнительныеПараметры - Структура - структура с обязательным реквизитом:
//    * Форма - ФормаКлиентскогоПриложения - в форме обязательный реквизит:
//      ** Объект - ДокументОбъект -
Процедура ВыбратьПрисоединенныйФайлExcelПослеЗаписи(Результат, ДополнительныеПараметры) Экспорт 
	
	Форма = ДополнительныеПараметры.Форма;
	
	Если Результат <> Истина ИЛИ НЕ ЗначениеЗаполнено(Форма.Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ВыбратьПрисоединенныйФайлExcelРасширениеПодключено",
		ЭтотОбъект,
		Новый Структура("ВладелецФайлов, ЭлементФормы", Форма.Объект.Ссылка, Форма.Элементы[ДополнительныеПараметры.ИмяЭлементаВыбора]));
	
	ОбщегоНазначенияКлиент.ПроверитьРасширениеРаботыСФайламиПодключено(ОписаниеОповещения);
	
КонецПроцедуры


Процедура ЗагрузитьИзExcelПолучениеФайла(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПустаяСтрока(Результат.ОписаниеОшибки) Тогда
		ВызватьИсключение Результат.ОписаниеОшибки;
	КонецЕсли;
	
	Попытка
		COMОбъект = Новый COMОбъект("Excel.Application");
		COMОбъект.AutomationSecurity = 3;
	Исключение
		СообщениеОбОшибке =
			НСтр("ru = 'Не удалось загрузить цены из файла Excel. 
				|Убедитесь, что на сервере установлена программа Microsoft Excel. 
				|Подробности:'") + "
				|" + КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СообщениеОбОшибке;
	КонецПопытки;
	
	ИмяВременногоФайла 		 = Результат.ПолноеИмяФайла;
	Форма 		 			 = ДополнительныеПараметры.Форма;
	ПрисоединенныйФайл 		 = ДополнительныеПараметры.ПрисоединенныйФайл;
	ПараметрыЗагрузкиИзExcel = ДополнительныеПараметры.ПараметрыЗагрузкиИзExcel;
	
	Попытка
		Workbook      = COMОбъект.Workbooks.Open(ИмяВременногоФайла);
		Sheet         = Workbook.Worksheets(1);
	Исключение
		COMОбъект.Quit();
		COMОбъект = 0;
		СообщениеОбОшибке = НСтр("ru = 'Не удалось прочитать данные из файла. Подробности:'") + " "
		                    + КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СообщениеОбОшибке;
	КонецПопытки;
	
	СоответствиеКомментарии = Новый Соответствие;
	
	// Массивы структур
	ДанныеЗагрузки  = Новый Массив;
	
	ЕстьДобавленныеСтроки = Ложь;
	
	// Загрузка данных
	Попытка
		
		Если ПараметрыЗагрузкиИзExcel.Свойство("КолонкиПоиска") Тогда
			КолонкиПоиска = ПараметрыЗагрузкиИзExcel.КолонкиПоиска;
		Иначе
			СтруктураПоиска = Новый Структура;
		КонецЕсли;
		
		Если ПараметрыЗагрузкиИзExcel.Свойство("СтруктураПоиска") Тогда
			СтруктураПоиска = ПараметрыЗагрузкиИзExcel.СтруктураПоиска;
		Иначе
			СтруктураПоиска = Новый Структура;
		КонецЕсли;
		
		Для НомерКолонки=1 По Sheet.Cells.SpecialCells(11).Column Цикл
		
			КлючПоиска = "";
			Значение = Sheet.Cells(1, НомерКолонки).Value;
			Если ТипЗнч(Значение) = Тип("Строка") ИЛИ ТипЗнч(Значение) = Тип("Число") Тогда
				Если ТипЗнч(Значение) = Тип("Число") Тогда
					Значение = Формат(Значение, "ЧГ=0");
				КонецЕсли; 
				ЗначениеПоиска = СокрЛП(Значение);
				КолонкаПоиска = КолонкиПоиска.НайтиПоЗначению(ЗначениеПоиска);
				Если КолонкаПоиска <> Неопределено Тогда
					КлючПоиска = КолонкаПоиска.Представление;
				КонецЕсли; 
			КонецЕсли;
			Если ТипЗнч(Значение) = Тип("Дата") ИЛИ СтрНайти(КлючПоиска,"Период_") > 0 Тогда
				ИмяКолонки = "";
				Если СтрНайти(КлючПоиска,"Период_") > 0 Тогда
					ИмяКолонки = СтрЗаменить(КлючПоиска, "Период_", "");
					КлючПоиска = "";
				ИначеЕсли ПараметрыЗагрузкиИзExcel.Свойство("Периоды") Тогда
					НайденныеСтроки = ПараметрыЗагрузкиИзExcel.Периоды.НайтиСтроки(Новый Структура("ДатаНачала, Активная", Значение, Истина));
					Если НайденныеСтроки.Количество() > 0 Тогда
						ИмяКолонки = НайденныеСтроки[0].ИмяКолонки;
					КонецЕсли;
				КонецЕсли; 
				
				Если ЗначениеЗаполнено(ИмяКолонки) И ПараметрыЗагрузкиИзExcel.Свойство("РеквизитыПериода") Тогда
					СуффиксКолонки = 0;
					Для каждого РеквизитПериода Из ПараметрыЗагрузкиИзExcel.РеквизитыПериода Цикл
						СтруктураПоиска.Вставить(РеквизитПериода+ИмяКолонки, НомерКолонки+ СуффиксКолонки);
						СуффиксКолонки = СуффиксКолонки + 1;
						Если РеквизитПериода = "Количество_" Тогда
							СоответствиеКомментарии.Вставить(НомерКолонки, "Комментарий_" + ИмяКолонки);
						КонецЕсли;
					КонецЦикла; 
				КонецЕсли; 
			КонецЕсли; 
			
			Если ЗначениеЗаполнено(КлючПоиска) Тогда
				СтруктураПоиска.Вставить(КлючПоиска, НомерКолонки);
			КонецЕсли; 
			
			Если Значение = "Количество" Тогда
				СоответствиеКомментарии.Вставить(НомерКолонки, "Комментарий");
			КонецЕсли;
			
		КонецЦикла; 
		
		Если ПараметрыЗагрузкиИзExcel.Свойство("НомерСтрокиНачалаДанных") Тогда
			НомерСтроки = ПараметрыЗагрузкиИзExcel.НомерСтрокиНачалаДанных;
		Иначе
			НомерСтроки = 1;
		КонецЕсли; 
		
		Пока НомерСтроки <= Sheet.Cells.SpecialCells(11).Row Цикл
			
			НоваяСтрока = Новый Структура("КодСтроки");
			
			Для каждого КлючЗначение Из СтруктураПоиска Цикл
				
				Значение = Неопределено;
				Если КлючЗначение.Значение > 0 Тогда
					
					Значение = Sheet.Cells(НомерСтроки, КлючЗначение.Значение).Value;
					Если ТипЗнч(Значение) = Тип("Строка") 
						И (Найти(КлючЗначение.Ключ,"Количество") > 0
						ИЛИ СтрНайти(КлючЗначение.Ключ,"Цена") > 0
						ИЛИ СтрНайти(КлючЗначение.Ключ,"Сумма") > 0) Тогда
						
						Попытка
							Значение = Число(Значение);
						Исключение
							Значение = Неопределено;
						КонецПопытки;
					ИначеЕсли ТипЗнч(Значение) = Тип("Строка") 
						И СтрНайти(КлючЗначение.Ключ,"Дата") > 0 Тогда
						
						Попытка
							// Преобразование к дате для строки формата "dd.MM.yyyy"
							Значение = Дата(Прав(Значение,4) + Сред(Значение,4,2) + Лев(Значение,2)); 
						Исключение
							Значение = Неопределено;
						КонецПопытки;
						
					КонецЕсли; 
					
				КонецЕсли; 
				
				НоваяСтрока.Вставить(КлючЗначение.Ключ, Значение);
				
				ИмяКолонкиКомментарий = СоответствиеКомментарии.Получить(КлючЗначение.Значение);
				Если ИмяКолонкиКомментарий<>Неопределено Тогда
					Комментарий = Sheet.Cells(НомерСтроки, КлючЗначение.Значение).Comment;
					Если Комментарий <> Неопределено Тогда
						НоваяСтрока.Вставить(ИмяКолонкиКомментарий, Комментарий.Text());
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;
			
			ДанныеЗагрузки.Добавить(НоваяСтрока);
			
			НомерСтроки = НомерСтроки + 1;
				
		КонецЦикла;
		
		Workbook.Close();
		
	Исключение
		COMОбъект.Quit();
		COMОбъект = 0;
		СообщениеОбОшибке = НСтр("ru = 'Не удалось прочитать данные из файла. Подробности:'") + " "
		                    + КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СообщениеОбОшибке;
	КонецПопытки;
	
	COMОбъект.Quit();
	COMОбъект = 0;
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ДанныеЗагрузки", ДанныеЗагрузки);
	СтруктураВозврата.Вставить("УникальныйИдентификаторФормы", ДополнительныеПараметры.Форма.УникальныйИдентификатор);
	Оповестить("РаботаСExcelКлиент_ЗагрузитьИзExcel", СтруктураВозврата);
	
КонецПроцедуры


Процедура СоздатьИОбработатьПрисоединенныйФайлExcel(Форма)
	
	Информация = РаботаСExcelВызовСервера.СоздатьПрисоединенныйФайлExcel(Форма.Объект.Ссылка, Форма.УникальныйИдентификатор);
	Если Информация = Неопределено Тогда
		СообщениеОбОшибке = НСтр("ru = 'Не удалось выгрузить документ в Excel.'");
		ВызватьИсключение СообщениеОбОшибке;
	КонецЕсли;
	
	Если НЕ Информация.Свойство("СтруктураДействийExcel")
	 ИЛИ НЕ ЗначениеЗаполнено(Информация.СтруктураДействийExcel) Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры =
		Новый Структура("Форма, Информация", Форма, Информация);
	
	Оповещение = Новый ОписаниеОповещения(
		"СоздатьИОбработатьПрисоединенныйФайлExcelПолучениеФайла",
		ЭтотОбъект,
		ДополнительныеПараметры);
	
	РаботаСФайламиКлиент.ПолучитьПрисоединенныйФайл(
		Оповещение,
		Информация.Файл,
		Форма.УникальныйИдентификатор,
		Новый Структура("ДанныеФайла, ДляРедактирования", Информация.ДанныеФайла, Истина));
		
КонецПроцедуры

Процедура СоздатьИОбработатьПрисоединенныйФайлExcelПолучениеФайла(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПустаяСтрока(Результат.ОписаниеОшибки) Тогда
		ВызватьИсключение Результат.ОписаниеОшибки;
	КонецЕсли;
	
	#Если Не ВебКлиент Тогда
		
	Попытка
		COMОбъект = Новый COMОбъект("Excel.Application");
		COMОбъект.AutomationSecurity = 3;
	Исключение
		СообщениеОбОшибке =
			НСтр("ru = 'Не удалось выгрузить документ в Excel.
				|Убедитесь, что на компьютере установлена программа Microsoft Excel.
				|Подробности:'") + "
				|" + КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СообщениеОбОшибке;
	КонецПопытки;
	
	#КонецЕсли
	
	ИмяВременногоФайла 	= Результат.ПолноеИмяФайла;
	Форма 		 		= ДополнительныеПараметры.Форма;
	Информация   		= ДополнительныеПараметры.Информация;
	
	Попытка
		
	#Если Не ВебКлиент Тогда
		
		Workbook = COMОбъект.Workbooks.Open(ИмяВременногоФайла);
		Sheet = Workbook.Worksheets(1);
		
		СтруктураДействийExcel = Информация.СтруктураДействийExcel;
		
		Если СтруктураДействийExcel.Свойство("AutoFilter") Тогда
			
			Автофильтр = СтруктураДействийExcel.AutoFilter;
			
			// Установка автофильтра на колонки цен
			Sheet.Range(Sheet.Cells(Автофильтр.СтрокаНачало, Автофильтр.КолонкаНачало), Sheet.Cells(Автофильтр.СтрокаНачало, Sheet.Cells.SpecialCells(11).Column)).AutoFilter();
		
		КонецЕсли;
		
		Если СтруктураДействийExcel.Свойство("HiddenColumns") Тогда
			// Скрытие колонок 
			Для каждого НомерКолонки Из СтруктураДействийExcel.HiddenColumns Цикл
				Sheet.Columns(НомерКолонки).Hidden = Истина;
			КонецЦикла; 
		КонецЕсли;
		
		Workbook.Save();
		Workbook.Close();
		
		COMОбъект.Quit();
		COMОбъект = 0;
		
	#КонецЕсли
		
		Оповещение = Новый ОписаниеОповещения(
			"СоздатьИОбработатьПрисоединенныйФайлExcelПомещениеФайла",
			ЭтотОбъект,
			ДополнительныеПараметры);
		
		РаботаСФайламиКлиент.ПоместитьПрисоединенныйФайл(
			Оповещение,
			Информация.Файл,
			Форма.УникальныйИдентификатор);
		
	Исключение
		#Если Не ВебКлиент Тогда
		COMОбъект.Quit();
		COMОбъект = 0;
		#КонецЕсли
		
		СообщениеОбОшибке = НСтр("ru = 'Не удалось записать данные в файл. Подробности:'") + "
			|" + КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ВызватьИсключение СообщениеОбОшибке;
		
	КонецПопытки;
	
КонецПроцедуры

Процедура СоздатьИОбработатьПрисоединенныйФайлExcelПомещениеФайла(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПустаяСтрока(Результат.ОписаниеОшибки) Тогда
		ВызватьИсключение Результат.ОписаниеОшибки;
	КонецЕсли;
	
	Информация = ДополнительныеПараметры.Информация;
	
	РаботаСФайламиКлиент.ОткрытьФормуФайла(Информация.Файл);
	
КонецПроцедуры

#КонецОбласти
