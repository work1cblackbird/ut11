#Область ПрограммныйИнтерфейс

// Формирует текст запроса на получение учетных остатков алкогольной продукции.
//   Ожидаемые действия:
//   * Создание временной таблицы "Остатки" с колонками
//     ** Номенклатура   - ОпределяемыйТип.Номенклатура
//     ** Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатуры
//     ** Серия          - ОпределяемыйТип.СерияНоменклатуры
//     ** Остаток        - Число
//     ** ОбъемДАЛ       - Число (объем ДАЛ единицы хранения номенклатуры, используется для неупакованной продукции для пересчета)
//   * Установка необходимых параметров запроса (например получение склада из организации ЕГАИС)
//
// Параметры:
//   Запрос            - Запрос - создаваемый запрос,
//   ОрганизацияЕГАИС  - СправочникСсылка.КлассификаторОрганизацийЕГАИС - ссылка сопоставленную собственной организации организацию ЕГАИС,
//   ТолькоМаркируемая - Булево - переключатель маркируемая/вся алкогольная продукция
//
Процедура ПриФормированииЗапросаУчетныхОстатков(Запрос, ОрганизацияЕГАИС, ТолькоМаркируемая) Экспорт
	
	//++ НЕ ГОСИС
	Запрос.УстановитьПараметр("ТорговыйОбъект", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОрганизацияЕГАИС, "ТорговыйОбъект"));
	Запрос.УстановитьПараметр("ВключаяНемаркируемую", НЕ ТолькоМаркируемая);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура                    КАК Номенклатура,
	|	ТоварыНаСкладахОстатки.Характеристика                  КАК Характеристика,
	|	ТоварыНаСкладахОстатки.Серия                           КАК Серия,
	|	СУММА(ТоварыНаСкладахОстатки.ВНаличииОстаток)          КАК Остаток,
	|	МАКСИМУМ(ТоварыНаСкладахОстатки.Номенклатура.ОбъемДАЛ) КАК ОбъемДАЛ
	|
	|ПОМЕСТИТЬ Остатки
	|ИЗ РегистрНакопления.ТоварыНаСкладах.Остатки(, Склад = &ТорговыйОбъект
	|	И Номенклатура.АлкогольнаяПродукция
	|	И НЕ Номенклатура.АлкогольнаяПродукцияВоВскрытойТаре
	|	И (&ВключаяНемаркируемую ИЛИ ЕСТЬNULL(Номенклатура.ВидАлкогольнойПродукции.Маркируемый, ЛОЖЬ)))
	|	КАК ТоварыНаСкладахОстатки
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.Характеристика,
	|	ТоварыНаСкладахОстатки.Серия

	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия;";
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// В процедуре необходимо определить значения переменных ЭтоСклад и ЭтоТорговыйЗал в зависимости от типа торгового объекта.
//
// Параметры:
//  ОрганизацияЕГАИС - ОпределяемыйТип.ТорговыйОбъектЕГАИС - ссылка на собственный торговый объект,
//  ЭтоСклад - Булево - признак того, что торговый объект является складским помещением. Выходной параметр,
//  ЭтоТорговыйЗал - Булево - признак того, что торговый объект является торговым залом. Выходной параметр.
//
Процедура ПриОпределенииТипаТорговогоОбъекта(ОрганизацияЕГАИС, ЭтоСклад, ЭтоТорговыйЗал) Экспорт
	
	//++ НЕ ГОСИС
	ТипСклада = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОрганизацияЕГАИС, "ТорговыйОбъект.ТипСклада");
	
	ЭтоСклад = ТипСклада = Перечисления.ТипыСкладов.ОптовыйСклад;
	ЭтоТорговыйЗал = ТипСклада = Перечисления.ТипыСкладов.РозничныйМагазин;
	//-- НЕ ГОСИС
	
	Возврат;
	
КонецПроцедуры

// Проверяет состояние инвентаризации по складу.
//   Можно вывести текущее состояние (проводится/не проводится) и рекомендации (провести инвентаризацию),
//   активировать доступность отчетов по расхождениям
//
// Параметры:
//   Организация - ОпределяемыйТип.ОрганизацияКонтрагентЕГАИС - ссылка на собственную организацию,
//   ТорговыйОбъект - ОпределяемыйТип.ТорговыйОбъектЕГАИС - ссылка на собственный торговый объект,
//   ТекстПроверкиСклад - Строка, ФорматированнаяСтрока - результат проверки инвентаризации на складе. Выходной параметр,
//   ТекстПроверкиТорговыйЗал - Строка, ФорматированнаяСтрока - результат проверки инвентаризации в торговом зале. Выходной параметр,
//   ОтчетПоРасхождениямСклад - Булево - флаг доступности формирования отчета по излишкам/недостачам (на складе). Выходной параметр,
//   ОтчетПоРасхождениямТорговыйЗал - Булево - флаг доступности ссылка на формирование отчета по излишкам/недостачам (в торговом зале). Выходной параметр.
//
Процедура ПриПроверкеИнвентаризации(Организация, ТорговыйОбъект, ТекстПроверкиСклад, ТекстПроверкиТорговыйЗал, ОтчетПоРасхождениямСклад, ОтчетПоРасхождениямТорговыйЗал) Экспорт
	
	//++ НЕ ГОСИС
	ТипСклада = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТорговыйОбъект, "ТипСклада");
	
	Если СкладыСервер.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач(ТорговыйОбъект) Тогда
		ЕстьРасхождения = Обработки.ПомощникОформленияСкладскихАктов.ТоварыКОформлениюСкладскихАктов(ТорговыйОбъект).Количество() > 0;
		ОтчетПоРасхождениямСклад       = ЕстьРасхождения И ТипСклада = Перечисления.ТипыСкладов.ОптовыйСклад;
		ОтчетПоРасхождениямТорговыйЗал = ЕстьРасхождения И ТипСклада = Перечисления.ТипыСкладов.РозничныйМагазин;
	КонецЕсли;
	
	РезультатПроверки = "";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Склад", ТорговыйОбъект);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПересчетТоваров.Ссылка КАК Ссылка,
	|	ПересчетТоваров.Дата КАК Дата,
	|	ПересчетТоваров.Статус КАК Статус
	|ИЗ
	|	Документ.ПересчетТоваров КАК ПересчетТоваров
	|ГДЕ
	|	ПересчетТоваров.Проведен
	|	И ПересчетТоваров.Склад = &Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Описания = Новый Массив;
	Описания.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Инвентаризация товаров'"),,,, "ОткрытьСписокИнвентаризаций"));
	Описания.Добавить(" ");
	Описания.Добавить(?(ТипСклада = Перечисления.ТипыСкладов.ОптовыйСклад, НСтр("ru='на складе'"), НСтр("ru='в торговом зале'")));
	Описания.Добавить(" ");
	Описания.Добавить(Новый ФорматированнаяСтрока(Строка(ТорговыйОбъект),,,, ПолучитьНавигационнуюСсылку(ТорговыйОбъект)));
	Описания.Добавить(" ");
	
	ТребуетсяВывестиРезультатПользователю = Ложь;
	
	Если НЕ Выборка.Следующий() Тогда
		
		Описания.Добавить(НСтр("ru='не проводилась.'"));
		ТребуетсяВывестиРезультатПользователю = Истина;
		
	ИначеЕсли НачалоДня(Выборка.Дата) < НачалоДня(ДобавитьМесяц(ТекущаяДатаСеанса(), -1)) Тогда
		
		Описания.Добавить(НСтр("ru='проводилась больше месяца назад.'"));
		Описания.Добавить(Символы.ПС);
		Описания.Добавить(НСтр("ru='Рекомендуется провести повторную инвентаризацию.'"));
		ТребуетсяВывестиРезультатПользователю = Истина;
		
	ИначеЕсли Выборка.Статус <> Перечисления.СтатусыПересчетовТоваров.Выполнено Тогда
		
		Описания.Добавить(НСтр("ru='не завершена.'"));
		Описания.Добавить(Символы.ПС);
		Описания.Добавить(НСтр("ru='Перед корректировкой остатков по регистрам ЕГАИС рекомендуется завершить инвентаризацию.'"));
		ТребуетсяВывестиРезультатПользователю = Истина;
		
	КонецЕсли;
	
	Если ТребуетсяВывестиРезультатПользователю Тогда
		
		РезультатПроверки = Новый ФорматированнаяСтрока(Описания);
		Если ТипСклада = Перечисления.ТипыСкладов.ОптовыйСклад Тогда
			ТекстПроверкиСклад = РезультатПроверки;
		Иначе
			ТекстПроверкиТорговыйЗал = РезультатПроверки;
		КонецЕсли;
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

#КонецОбласти