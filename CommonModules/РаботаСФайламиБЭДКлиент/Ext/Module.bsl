
#Область СлужебныйПрограммныйИнтерфейс

// Устанавливает путь к каталогу временных файлов в операционной системе Windows.
// 
// Параметры:
// 	Путь - Строка
// Возвращаемое значение:
//  Булево - Истина, если установка прошла успешно
Функция УстановитьПутьККаталогуВременныхФайлов(Путь) Экспорт
	
	Если Не ОбщегоНазначенияКлиент.ЭтоWindowsКлиент() Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Установка пути к каталогу временных файлов не поддерживается для данной операционной системы'"));
		Возврат Ложь;
	КонецЕсли;
	
	#Если Не МобильныйКлиент Тогда
		
		Если Не ЗначениеЗаполнено(Путь) Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Не заполнен путь к каталогу временных файлов'"));
			Возврат Ложь;
		КонецЕсли;
		Оболочка = Новый COMОбъект("Wscript.Shell");
		Оболочка.RegWrite("HKEY_CURRENT_USER\Environment\TMP", Путь, "REG_EXPAND_SZ");
		
		Возврат Истина;
	#КонецЕсли
	
	Возврат Ложь;
	
КонецФункции

// Выполняет корректировку имени файла и предлагает пользователю исправить, если в имени были обнаружены некорректные символы.
//
// Параметры:
// 	ОповещениеОЗавершении - ОписаниеОповещения - описание процедуры, которая будет вызвана после проверки имени файла со
// 							следующими параметрами:
// 							 * ИмяФайла - Строка
// 							 			- Неопределено - Если пользователь отказался от ввода имени файла.
// 							 * АдресВХранилище - Строка
// 	ИмяФайла - Строка
//	Кодировка - Строка
//
Процедура СкорректироватьИмяФайлаСУчетомКодировки(ОповещениеОЗавершении, ИмяФайла, Кодировка = "windows-1251") Экспорт 
	
	РезультатПроверки = РаботаСФайламиБЭДКлиентСервер.ПроверитьИмяФайлаСУчетомКодировки(ИмяФайла, Кодировка);
	
	Если РезультатПроверки.ИмеютсяНекорректныеСимволы Тогда 
		
		ПараметрыОповещения = 
			Новый Структура("ОповещениеОЗавершении, Кодировка", ОповещениеОЗавершении, Кодировка);
		
		ОповещениеПослеВводаСтроки = 
			Новый ОписаниеОповещения("СкорректироватьИмяФайлаПослеВводаСтроки", ЭтотОбъект, ПараметрыОповещения); 
			
		ДополнительноеОписание = 
			СтрШаблон(НСтр("ru = 'В имени файла ""%1"" присутствовали недопустимые символы, имя файла было скорректировано системой.
			|Проверьте и при необходимости отредактируйте имя файла.'"), РезультатПроверки.ИмяФайлаДоКорректировки);
			
		КомментарийОбязательностиВвода = 
			НСтр("ru = 'Имя файла не может быть пустым. Введите имя файла.'");
			
		ДополнительныеПараметры = ОбщегоНазначенияБЭДКлиент.ПараметрыВводаСтроки();
		ДополнительныеПараметры.ЗаголовокФормы = НСтр("ru = 'Изменение имени файла'");
		ДополнительныеПараметры.Строка = РезультатПроверки.ИмяФайлаПослеКорректировки;
		ДополнительныеПараметры.ДополнительноеОписание = ДополнительноеОписание;
		ДополнительныеПараметры.Обязательность = Истина;
		ДополнительныеПараметры.КомментарийОбязательностиВвода = КомментарийОбязательностиВвода;
		
		ОбщегоНазначенияБЭДКлиент.ПоказатьВводСтрокиБЭД(ОповещениеПослеВводаСтроки, ДополнительныеПараметры);
	Иначе
		ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, РезультатПроверки.ИмяФайлаПослеКорректировки);
	КонецЕсли;
	
КонецПроцедуры 

// Продолжение процедуры СкорректироватьИмяФайлаСУчетомКодировки после ввода строки пользователем.
//
// Параметры:
//  ИмяФайла - Строка
//  ДополнительныеПараметры - Структура:
//  * ОповещениеОЗавершении - ОписаниеОповещения 
//  * Кодировка - Строка
//
Процедура СкорректироватьИмяФайлаПослеВводаСтроки(ИмяФайла, ДополнительныеПараметры) Экспорт
	Если ИмяФайла = Неопределено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОЗавершении, ИмяФайла);
		Возврат;
	КонецЕсли;
	СкорректироватьИмяФайлаСУчетомКодировки(
		ДополнительныеПараметры.ОповещениеОЗавершении, ИмяФайла, ДополнительныеПараметры.Кодировка);
КонецПроцедуры 

// Выполняет преобазование имени файла в латиницу, если это требуется 
//
// Параметры:
//  ИмяФайла - Строка
//  ОтключитьТранслитерацию - Булево - Истина, если не переводить в латиницу.
//  
//  Возвращаемое значение:
//   Строка - Имя файла после преобразования.
//
Функция ПреобразоватьИмяФайлаСУчетомТранслитерации(ИмяФайла, ОтключитьТранслитерацию) Экспорт
	
	Результат = ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ИмяФайла, "_");

	Если Не ОтключитьТранслитерацию Тогда
		Результат = СтроковыеФункцииКлиент.СтрокаЛатиницей(Результат);
		Результат = СтрЗаменить(Результат, " ", "_");
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

#КонецОбласти
