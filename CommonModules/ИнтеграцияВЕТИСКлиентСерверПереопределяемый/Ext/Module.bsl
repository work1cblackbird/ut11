#Область СлужебныйПрограммныйИнтерфейс

// Заполняет соответствие полей документов-оснований и исходящей транспортной операции
// 
// Возвращаемое значение:
//  Соответствие - соответствие со свойствами:
//  * ИмяДокумента — Соответствие — ключом свойства является имя документа, например "РеализацияТоваровУслуг",
//                                  а значением — соответствие со свойствами:
//  ** ГрузоотправительХозяйствующийСубъект — Строка — имя поля документа, которое соответствует контрагенту
//  	                                               хозяйствующего субъекта грузоотправителя
//  ** ГрузоотправительПредприятие — Строка — имя поля документа, которое соответствует предприятию грузоотправителя
//  ** ГрузополучательХозяйствующийСубъект — Строка — имя поля документа, которое соответствует контрагенту
//  	                                              хозяйствующего субъекта грузополучателя
//  ** ГрузополучательПредприятие — Строка — имя поля документа, которое соответствует предприятию грузополучателя
Процедура ЗаполнитьСоответствиеПолейДокументовОснованийИИсходящейТранспортнойОперации(СоответствиеПолей) Экспорт
	
	//++ НЕ ГОСИС
	
	СоответствиеПолей.Вставить("ВозвратТоваровПоставщику", Новый Соответствие);
	СоответствиеПолей["ВозвратТоваровПоставщику"].Вставить("ГрузоотправительХозяйствующийСубъект", "Организация");
	СоответствиеПолей["ВозвратТоваровПоставщику"].Вставить("ГрузоотправительПредприятие", "Склад");
	СоответствиеПолей["ВозвратТоваровПоставщику"].Вставить("ГрузополучательХозяйствующийСубъект", "Контрагент");
	СоответствиеПолей["ВозвратТоваровПоставщику"].Вставить("ГрузополучательПредприятие", "Партнер");
	
	СоответствиеПолей.Вставить("ПеремещениеТоваров", Новый Соответствие);
	СоответствиеПолей["ПеремещениеТоваров"].Вставить("ГрузоотправительХозяйствующийСубъект", "Организация");
	СоответствиеПолей["ПеремещениеТоваров"].Вставить("ГрузоотправительПредприятие", "СкладОтправитель");
	СоответствиеПолей["ПеремещениеТоваров"].Вставить("ГрузополучательХозяйствующийСубъект", Неопределено);
	СоответствиеПолей["ПеремещениеТоваров"].Вставить("ГрузополучательПредприятие", "СкладПолучатель");
	
	
	СоответствиеПолей.Вставить("РеализацияТоваровУслуг", Новый Соответствие);
	СоответствиеПолей["РеализацияТоваровУслуг"].Вставить("ГрузоотправительХозяйствующийСубъект", "Организация");
	СоответствиеПолей["РеализацияТоваровУслуг"].Вставить("ГрузоотправительПредприятие", "Склад");
	СоответствиеПолей["РеализацияТоваровУслуг"].Вставить("ГрузополучательХозяйствующийСубъект", "Контрагент");
	СоответствиеПолей["РеализацияТоваровУслуг"].Вставить("ГрузополучательПредприятие", "Партнер");
	
	СоответствиеПолей.Вставить("ВозвратТоваровМеждуОрганизациями", Новый Соответствие);
	СоответствиеПолей["ВозвратТоваровМеждуОрганизациями"].Вставить("ГрузоотправительХозяйствующийСубъект", "Организация");
	СоответствиеПолей["ВозвратТоваровМеждуОрганизациями"].Вставить("ГрузоотправительПредприятие", "Склад");
	СоответствиеПолей["ВозвратТоваровМеждуОрганизациями"].Вставить("ГрузополучательХозяйствующийСубъект", "ОрганизацияПолучатель");
	СоответствиеПолей["ВозвратТоваровМеждуОрганизациями"].Вставить("ГрузополучательПредприятие", "Склад");
	
	СоответствиеПолей.Вставить("ПередачаТоваровМеждуОрганизациями", Новый Соответствие);
	СоответствиеПолей["ПередачаТоваровМеждуОрганизациями"].Вставить("ГрузоотправительХозяйствующийСубъект", "Организация");
	СоответствиеПолей["ПередачаТоваровМеждуОрганизациями"].Вставить("ГрузоотправительПредприятие", "Склад");
	СоответствиеПолей["ПередачаТоваровМеждуОрганизациями"].Вставить("ГрузополучательХозяйствующийСубъект", "ОрганизацияПолучатель");
	СоответствиеПолей["ПередачаТоваровМеждуОрганизациями"].Вставить("ГрузополучательПредприятие", "Склад");
	
	
	
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Заполняет соответствие полей документов-оснований и входящей транспортной операции
//
// Возвращаемое значение:
//  Соответствие - соответствие со свойствами:
//  * ИмяДокумента — Соответствие — ключом свойства является имя документа, например "РеализацияТоваровУслуг",
//                                  а значением — соответствие со свойствами:
//  ** ГрузоотправительХозяйствующийСубъект — Строка — имя поля документа, которое соответствует контрагенту
//                                                     хозяйствующего субъекта грузоотправителя
//  ** ГрузоотправительПредприятие — Строка — имя поля документа, которое соответствует предприятию грузоотправителя
//  ** ГрузополучательХозяйствующийСубъект — Строка — имя поля документа, которое соответствует контрагенту
//                                                    хозяйствующего субъекта грузополучателя
//  ** ГрузополучательПредприятие — Строка — имя поля документа, которое соответствует предприятию грузополучателя
Процедура ЗаполнитьСоответствиеПолейДокументовОснованийИВходящейТранспортнойОперации(СоответствиеПолей) Экспорт
	
	//++ НЕ ГОСИС
	
	СоответствиеПолей.Вставить("ВозвратТоваровОтКлиента", Новый Соответствие);
	СоответствиеПолей["ВозвратТоваровОтКлиента"].Вставить("ГрузоотправительХозяйствующийСубъект", "Контрагент");
	СоответствиеПолей["ВозвратТоваровОтКлиента"].Вставить("ГрузоотправительПредприятие", "Партнер");
	СоответствиеПолей["ВозвратТоваровОтКлиента"].Вставить("ГрузополучательХозяйствующийСубъект", "Организация");
	СоответствиеПолей["ВозвратТоваровОтКлиента"].Вставить("ГрузополучательПредприятие", "Склад");
	
	СоответствиеПолей.Вставить("ПриобретениеТоваровУслуг", Новый Соответствие);
	СоответствиеПолей["ПриобретениеТоваровУслуг"].Вставить("ГрузоотправительХозяйствующийСубъект", "Контрагент");
	СоответствиеПолей["ПриобретениеТоваровУслуг"].Вставить("ГрузоотправительПредприятие", "Партнер");
	СоответствиеПолей["ПриобретениеТоваровУслуг"].Вставить("ГрузополучательХозяйствующийСубъект", "Организация");
	СоответствиеПолей["ПриобретениеТоваровУслуг"].Вставить("ГрузополучательПредприятие", "Склад");
	
	
	
	СоответствиеПолей.Вставить("ПеремещениеТоваров", Новый Соответствие);
	СоответствиеПолей["ПеремещениеТоваров"].Вставить("ГрузоотправительХозяйствующийСубъект", "Организация");
	СоответствиеПолей["ПеремещениеТоваров"].Вставить("ГрузоотправительПредприятие", "СкладОтправитель");
	СоответствиеПолей["ПеремещениеТоваров"].Вставить("ГрузополучательХозяйствующийСубъект", Неопределено);
	СоответствиеПолей["ПеремещениеТоваров"].Вставить("ГрузополучательПредприятие", "СкладПолучатель");
	
	
	СоответствиеПолей.Вставить("ВозвратТоваровМеждуОрганизациями", Новый Соответствие);
	СоответствиеПолей["ВозвратТоваровМеждуОрганизациями"].Вставить("ГрузоотправительХозяйствующийСубъект", "Организация");
	СоответствиеПолей["ВозвратТоваровМеждуОрганизациями"].Вставить("ГрузоотправительПредприятие", "Склад");
	СоответствиеПолей["ВозвратТоваровМеждуОрганизациями"].Вставить("ГрузополучательХозяйствующийСубъект", "ОрганизацияПолучатель");
	СоответствиеПолей["ВозвратТоваровМеждуОрганизациями"].Вставить("ГрузополучательПредприятие", "Склад");
	
	СоответствиеПолей.Вставить("ПередачаТоваровМеждуОрганизациями", Новый Соответствие);
	СоответствиеПолей["ПередачаТоваровМеждуОрганизациями"].Вставить("ГрузоотправительХозяйствующийСубъект", "Организация");
	СоответствиеПолей["ПередачаТоваровМеждуОрганизациями"].Вставить("ГрузоотправительПредприятие", "Склад");
	СоответствиеПолей["ПередачаТоваровМеждуОрганизациями"].Вставить("ГрузополучательХозяйствующийСубъект", "ОрганизацияПолучатель");
	СоответствиеПолей["ПередачаТоваровМеждуОрганизациями"].Вставить("ГрузополучательПредприятие", "Склад");
	
	//-- НЕ ГОСИС
	Возврат ;
	
КонецПроцедуры

// Заполняет соответствие полей документов-оснований и производственных операций
//
// Возвращаемое значение:
//  Соответствие - соответствие со свойствами:
//  * ИмяДокумента — Соответствие — ключом свойства является имя документа, например "СборкаТоваров",
//                                  а значением — соответствие со свойствами:
//  ** ХозяйствующийСубъект — Строка — имя поля документа, которое соответствует хозяйствующему субъекту
//  ** Предприятие — Строка — имя поля документа, которое соответствует предприятию хозяйствующего субъекта
Процедура ЗаполнитьСоответствиеПолейДокументовОснованийИПроизводственнойОперации(СоответствиеПолей) Экспорт
	
	//++ НЕ ГОСИС
	
	
	СоответствиеПолей.Вставить("СборкаТоваров", Новый Соответствие);
	СоответствиеПолей["СборкаТоваров"].Вставить("ХозяйствующийСубъект", "Организация");
	СоответствиеПолей["СборкаТоваров"].Вставить("Предприятие", "Склад");
	
	
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Заполняет соответствие полей документов-оснований и инвентаризации продукции
//
// Возвращаемое значение:
//  Соответствие - соответствие со свойствами:
//  * ИмяДокумента — Соответствие — ключом свойства является имя документа, например "СписаниеНедостачТоваров",
//                                  а значением — соответствие со свойствами:
//  ** ХозяйствующийСубъект — Строка — имя поля документа, которое соответствует хозяйствующему субъекту
//  ** Предприятие — Строка — имя поля документа, которое соответствует предприятию хозяйствующего субъекта
Процедура ЗаполнитьСоответствиеПолейДокументовОснованийИИнвентаризацииПродукции(СоответствиеПолей) Экспорт
	
	//++ НЕ ГОСИС
	
	СоответствиеПолей.Вставить("ВнутреннееПотребление", Новый Соответствие);
	СоответствиеПолей["ВнутреннееПотребление"].Вставить("ХозяйствующийСубъект", "Организация");
	СоответствиеПолей["ВнутреннееПотребление"].Вставить("Предприятие", "Склад");
	
	СоответствиеПолей.Вставить("СписаниеНедостачТоваров", Новый Соответствие);
	СоответствиеПолей["СписаниеНедостачТоваров"].Вставить("ХозяйствующийСубъект", "Организация");
	СоответствиеПолей["СписаниеНедостачТоваров"].Вставить("Предприятие", "Склад");
	
	СоответствиеПолей.Вставить("ПересортицаТоваров", Новый Соответствие);
	СоответствиеПолей["ПересортицаТоваров"].Вставить("ХозяйствующийСубъект", "Организация");
	СоответствиеПолей["ПересортицаТоваров"].Вставить("Предприятие", "Склад");
	
	СоответствиеПолей.Вставить("ОприходованиеИзлишковТоваров", Новый Соответствие);
	СоответствиеПолей["ОприходованиеИзлишковТоваров"].Вставить("ХозяйствующийСубъект", "Организация");
	СоответствиеПолей["ОприходованиеИзлишковТоваров"].Вставить("Предприятие", "Склад");
	
	СоответствиеПолей.Вставить("ПрочееОприходованиеТоваров", Новый Соответствие);
	СоответствиеПолей["ПрочееОприходованиеТоваров"].Вставить("ХозяйствующийСубъект", "Организация");
	СоответствиеПолей["ПрочееОприходованиеТоваров"].Вставить("Предприятие", "Склад");
	
	СоответствиеПолей.Вставить("ПорчаТоваров", Новый Соответствие);
	СоответствиеПолей["ПорчаТоваров"].Вставить("ХозяйствующийСубъект", "Организация");
	СоответствиеПолей["ПорчаТоваров"].Вставить("Предприятие", "Склад");
	
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Заполняет свойства (например, Видимость, Доступность итп) отдельных элементов формы документа 
// 'ПроизводственнаяОперацияВЕТИС' в зависимости от документа-основания.
//
// Параметры:
//  ДокументОснование - ОпределяемыйТип.ОснованиеПроизводственнаяОперацияВЕТИС - Основание документа.
//  Свойства          - Структура                                              - Свойства элементов.
Процедура ЗаполнитьСвойстваЭлементовПроизводственнойТранзакцииПоДокументуОснованию(Свойства, ДокументОснование) Экспорт
	
	//++ НЕ ГОСИС
	РазрешитьСтроковыйИдентификатор = Истина;
	
	
	Если РазрешитьСтроковыйИдентификатор Тогда
		Свойства.Видимость      = Истина;
		Свойства.ТолькоПросмотр = Ложь;
		ДоступныеТипы = Новый Массив;
		ДоступныеТипы.Добавить(Тип("Строка"));
		Свойства.ОграничениеТипа = Новый ОписаниеТипов(ДоступныеТипы);
	КонецЕсли;
	
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Заполняет признак необходимости заполнения реквизита 'ТорговыйОбъект' документа 'ПроизводственнаяОперацияВЕТИС'.
//
// Параметры:
//  ДокументОснование - ОпределяемыйТип.ОснованиеПроизводственнаяОперацияВЕТИС - Основание документа.
//  Заполнять         - Булево                                                 - Необходимость заполнения.
Процедура ЗаполнятьТорговыйОбъектПоДокументуОснованию(ДокументОснование, Заполнять) Экспорт
	
	//++ НЕ ГОСИС
	Если ЗначениеЗаполнено(ДокументОснование)
		И ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СборкаТоваров") Тогда
		
		Заполнять = Истина;
		
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Заполняет структуру, содержащую поля кэшируемых значений.
// 
// Параметры:
//   КэшированныеЗначения - (см. ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения) - результат.
//
Процедура ЗаполнитьСтруктуруКэшируемыеЗначения(КэшированныеЗначения) Экспорт
	
	//++ НЕ ГОСИС
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Возвращает параметры формы подбора товаров.
//
// Параметры:
// ПараметрыПодбора - Структура - Структура со свойствами:
//  * СкрыватьКнопкуЗапрашиватьКоличество     - Булево - Признак необходимости сокрытия кнопки указания количества.
//  * РежимПодбораБезКоличественныхПараметров - Булево - Признак работы формы подбора товаров с выключенным режимом 
//                                                       использования количественных параметров.
//  * Склад - ОпределяемыйТип.ТорговыйОбъектВЕТИС - Склад, на котором осуществляется подбор товаров.
//  Форма - ФормаКлиентскогоПриложения - Форма, в которой вызывается команда открытия формы подбора товаров.
//  ПараметрыУказанияСерий - Произвольный - См. ИнтеграцияИС.ПараметрыУказанияСерий. 
Процедура ЗаполнитьПараметрыФормыПодбораТоваров(ПараметрыПодбора, Форма, ПараметрыУказанияСерий) Экспорт
	
	//++ НЕ ГОСИС
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("СкрыватьКнопкуЗапрашиватьКоличество",     Ложь);
	ПараметрыПодбора.Вставить("РежимПодбораБезКоличественныхПараметров", Ложь);
	ПараметрыПодбора.Вставить("Склад",                                   Неопределено);
	ПараметрыПодбора.Вставить("ПараметрыУказанияСерий",                  Неопределено);
	
	Если ПараметрыУказанияСерий <> Неопределено Тогда
		
		ПараметрыПодбора.ПараметрыУказанияСерий = ПараметрыУказанияСерий;
		
		ИмяИсточникаЗначений = ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта;
		ИмяПоляСклад         = ПараметрыУказанияСерий.ИмяПоляСклад;
		
		Если ЗначениеЗаполнено(ИмяПоляСклад)
			И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма[ИмяИсточникаЗначений], ИмяПоляСклад) Тогда
			
			ПараметрыПодбора.Склад = Форма[ИмяИсточникаЗначений][ИмяПоляСклад];
			
		КонецЕсли;
		
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Пересчитывает количество из базовой единицы измерения номенклатуры в единицу измерения ВЕТИС.
//
Процедура ЗаполнитьКоличествоЕдиницВЕТИС(КоличествоВЕТИС, Количество, Номенклатура, ЕдиницаИзмеренияВЕТИС, КэшированныеЗначения, ТекстОшибки) Экспорт
	
	//++ НЕ ГОСИС
	КоличествоВЕТИС = ИнтеграцияВЕТИСУТКлиентСервер.ПересчитатьКоличествоЕдиницВЕТИС(
		Количество,
		Номенклатура,
		ЕдиницаИзмеренияВЕТИС,
		Истина,
		КэшированныеЗначения,
		ТекстОшибки);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Пересчитывает количество из единицы измерения ВЕТИС в базовую единицу измерения номенклатуры.
//
Процедура ЗаполнитьКоличествоЕдиницПоВЕТИС(Количество, КоличествоВЕТИС, Номенклатура, ЕдиницаИзмеренияВЕТИС, КэшированныеЗначения, ТекстОшибки = Неопределено) Экспорт
	
	//++ НЕ ГОСИС
	Количество = ИнтеграцияВЕТИСУТКлиентСервер.ПересчитатьКоличествоЕдиниц(
		КоличествоВЕТИС,
		Номенклатура,
		ЕдиницаИзмеренияВЕТИС,
		Истина,
		КэшированныеЗначения,
		ТекстОшибки);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Заполняет параметры оформления серии по данным строки (если использование условного оформления не возможно).
//
// Параметры:
//   ПараметрыОформленияСерии - Структура - поля, на основании которых можно оформить элемент формы.
//   ДанныеСтроки - Структура, ДанныеФормыЭлементКоллекции - данные, в которых содержится информация по оформлению серии.
Процедура ЗаполнитьПараметрыОформленияСерииПоДаннымСтроки(ПараметрыОформленияСерии, ДанныеСтроки) Экспорт
	
	//++ НЕ ГОСИС
	ПараметрыОформленияСерии = ИнтеграцияВЕТИСУТКлиентСервер.ПараметрыОформленияСерииПоДаннымСтроки(
		"СерииВсегдаВТЧТовары", ДанныеСтроки);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

#КонецОбласти