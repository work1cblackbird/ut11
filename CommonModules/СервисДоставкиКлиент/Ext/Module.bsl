////////////////////////////////////////////////////////////////////////////////
// Подсистема "Сервис доставки".
// ОбщийМодуль.СервисДоставкиКлиент.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Открывает форму списка заказов из обработки "СервисДоставки".
//
// Параметры:
//  Параметры - Структура - структура с ключами:
//    * ДокументОснование - ОпределяемыйТип.ОснованиеЗаказаСервисДоставки - ссылка на документ основание.
//    * Отправитель - ОпределяемыйТип.УчастникГрузоперевозкиСервисДоставки - отправитель груза.
//    * Получатель - ОпределяемыйТип.УчастникГрузоперевозкиСервисДоставки - получатель груза.
//    * РежимВыбора - Булево - Режим выбора таблицы формы.
//    * ОбработкаВыбора - Строка - Имя процедуры обработки выбора строки в форме выбора.
//      В форме уже есть библиотечная процедура обработки выбора - 
//      "СервисДоставкиКлиентСервер.ИмяПроцедурыДобавитьДокументОснованиеВВыбранныйЗаказНаДоставку()".
//      Можно указать свою, тогда при выборе строки заказа в переопределяемую процедуру
//      "ОбработатьРезультатВыбораЗаказаНаДоставку" будет передано имя этой процедуры.
//
Процедура ОткрытьФормуСпискаЗаказовНаДоставку(Параметры = Неопределено) Экспорт
	
	Если Параметры = Неопределено Тогда
		Параметры = Новый Структура();
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ТипГрузоперевозки = Неопределено;
	Параметры.Свойство("ТипГрузоперевозки", ТипГрузоперевозки);
	
	Если ЗначениеЗаполнено(ТипГрузоперевозки) Тогда
		
		Результат = Новый Структура();
		Результат.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
		ОткрытьФормуСпискаЗаказовНаДоставкуЗавершениеПослеВыбораТипаГрузоперевозки(Результат, Параметры);
		
	Иначе
		
		ДоступныеСервисы = СервисДоставкиВызовСервера.ДоступныеСервисыДоставки();
		
		Если Параметры.Свойство("ДокументОснование")
			И (ДоступныеСервисы.Найти(СервисДоставкиКлиентСервер.ТипГрузоперевозкиСервис1СКурьерика()) <> Неопределено)
			И СервисДоставкиКлиентСервер.ТипыДокументовОснованийКурьерика().Найти(ТипЗнч(Параметры.ДокументОснование)) = Неопределено Тогда
			ДоступныеСервисы.Удалить(ДоступныеСервисы.Найти(СервисДоставкиКлиентСервер.ТипГрузоперевозкиСервис1СКурьерика()));
		КонецЕсли;
		
		КоличествоДоступныхСервисов = ДоступныеСервисы.Количество();
		Если КоличествоДоступныхСервисов = 0 Тогда
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не включены сервисы доставки товаров'"));
			Возврат;
			
		ИначеЕсли КоличествоДоступныхСервисов = 1 Тогда
			
			Результат = Новый Структура();
			Результат.Вставить("ТипГрузоперевозки", ДоступныеСервисы[0]);
			
			Если Параметры.Свойство("Форма") Тогда
				Параметры.Удалить("Форма");
			КонецЕсли;
			
			Если Параметры.Свойство("Элемент") Тогда
				Параметры.Удалить("Элемент");
			КонецЕсли;
			
			ОткрытьФормуСпискаЗаказовНаДоставкуЗавершениеПослеВыбораТипаГрузоперевозки(Результат, Параметры);
			
		Иначе
		
			Если Параметры.Свойство("Форма") Тогда
				
				СписокГрузоперевозчиков = Новый СписокЗначений;
				
				Для Каждого ИдентификаторСервиса Из ДоступныеСервисы Цикл
					
					НовыйЭлемент = СписокГрузоперевозчиков.Добавить();
					НовыйЭлемент.Значение = Новый Структура;
					
					Для Каждого ЭлементСтруктуры Из Параметры Цикл
						
						Если ЭлементСтруктуры.Ключ <> "Форма" Тогда
							НовыйЭлемент.Значение.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
						КонецЕсли;
						
					КонецЦикла;
					
					НовыйЭлемент.Значение.Вставить("ТипГрузоперевозки", ИдентификаторСервиса);
					НовыйЭлемент.Представление = СервисДоставкиКлиентСервер.ПредставлениеТипаГрузоперевозки(ИдентификаторСервиса);
					
				КонецЦикла;
				
				Форма = Параметры.Форма; // ФормаКлиентскогоПриложения
				Элемент = Форма.ТекущийЭлемент;
				
				Параметры.Удалить("Форма");
				
				Форма.ПоказатьВыборИзМеню(
					Новый ОписаниеОповещения("ОткрытьФормуСпискаЗаказовНаДоставкуЗавершениеПослеВыбораТипаГрузоперевозки",
						ЭтотОбъект,
						Параметры),
					СписокГрузоперевозчиков,
					Элемент);
					
			Иначе
					
				ОткрытьФорму("Обработка.СервисДоставки.Форма.ФормаВыбораТипаГрузоперевозки",,
					ЭтотОбъект,,,,
					Новый ОписаниеОповещения("ОткрытьФормуСпискаЗаказовНаДоставкуЗавершениеПослеВыбораТипаГрузоперевозки", ЭтотОбъект, Параметры));
					
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Открывает форму отслеживания заказов из обработки "СервисДоставки".
//
// Параметры:
//  Параметры - Структура - структура параметров открытия формы.
//
Процедура ОткрытьФормуОтслеживанияЗаказа(Параметры = Неопределено) Экспорт
	
	Если Параметры = Неопределено Тогда
		Параметры = Новый Структура();
	КонецЕсли;

	ОчиститьСообщения();
	
	ТипГрузоперевозки = Неопределено;
	Параметры.Свойство("ТипГрузоперевозки", ТипГрузоперевозки);
	
	Если ЗначениеЗаполнено(ТипГрузоперевозки) Тогда
		
		Результат = Новый Структура();
		Результат.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
		ОткрытьФормуОтслеживанияЗаказаЗавершениеПослеВыбораТипаГрузоперевозки(Результат, Параметры);
		
	Иначе
		
		ДоступныеСервисы = СервисДоставкиВызовСервера.ДоступныеСервисыДоставки();
		
		Если Параметры.Свойство("ДокументОснование")
			И (ДоступныеСервисы.Найти(СервисДоставкиКлиентСервер.ТипГрузоперевозкиСервис1СКурьерика()) <> Неопределено)
			И СервисДоставкиКлиентСервер.ТипыДокументовОснованийКурьерика().Найти(ТипЗнч(Параметры.ДокументОснование)) = Неопределено Тогда
			ДоступныеСервисы.Удалить(ДоступныеСервисы.Найти(СервисДоставкиКлиентСервер.ТипГрузоперевозкиСервис1СКурьерика()));
		КонецЕсли;
		
		КоличествоДоступныхСервисов = ДоступныеСервисы.Количество();
		Если КоличествоДоступныхСервисов = 0 Тогда
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не включены сервисы доставки товаров'"));
			Возврат;
			
		ИначеЕсли КоличествоДоступныхСервисов = 1 Тогда
			
			Результат = Новый Структура();
			Результат.Вставить("ТипГрузоперевозки", ДоступныеСервисы[0]);
			
			Если Параметры.Свойство("Форма") Тогда
				Параметры.Удалить("Форма");
			КонецЕсли;
			
			Если Параметры.Свойство("Элемент") Тогда
				Параметры.Удалить("Элемент");
			КонецЕсли;
			
			ОткрытьФормуОтслеживанияЗаказаЗавершениеПослеВыбораТипаГрузоперевозки(Результат, Параметры);
			
		Иначе
			
			Если Параметры.Свойство("Форма")
				И Параметры.Свойство("Элемент") Тогда
				
				СписокГрузоперевозчиков = Новый СписокЗначений;
				
				Для Каждого ИдентификаторСервиса Из ДоступныеСервисы Цикл
					
					НовыйЭлемент = СписокГрузоперевозчиков.Добавить();
					НовыйЭлемент.Значение = Новый Структура;
					
					Для Каждого ЭлементСтруктуры Из Параметры Цикл
						
						Если ЭлементСтруктуры.Ключ <> "Форма"
							И ЭлементСтруктуры.Ключ <> "Элемент" Тогда
							НовыйЭлемент.Значение.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
						КонецЕсли;
						
					КонецЦикла;
					
					НовыйЭлемент.Значение.Вставить("ТипГрузоперевозки", ИдентификаторСервиса);
					НовыйЭлемент.Представление = СервисДоставкиКлиентСервер.ПредставлениеТипаГрузоперевозки(ИдентификаторСервиса);
					
				КонецЦикла;
				
				Форма = Параметры.Форма;
				Элемент = Параметры.Элемент;
				
				Параметры.Удалить("Форма");
				Параметры.Удалить("Элемент");
				
				Форма.ПоказатьВыборИзМеню(
					Новый ОписаниеОповещения("ОткрытьФормуОтслеживанияЗаказаЗавершениеПослеВыбораТипаГрузоперевозки",
						ЭтотОбъект,
						Параметры),
					СписокГрузоперевозчиков,
					Элемент);
				
			Иначе
					
				ОткрытьФорму("Обработка.СервисДоставки.Форма.ФормаВыбораТипаГрузоперевозки",,
					ЭтотОбъект,,,,
					Новый ОписаниеОповещения("ОткрытьФормуОтслеживанияЗаказаЗавершениеПослеВыбораТипаГрузоперевозки", ЭтотОбъект, Параметры));
					
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Открывает форму карточки заказа на доставку из обработки "СервисДоставки".
//
// Параметры:
//  Параметры - см. СервисДоставки.НовыйПараметрыЗаказаНаДоставку
//
Процедура ОткрытьФормуКарточкиЗаказаНаДоставку(Параметры = Неопределено) Экспорт
	
	Если Параметры = Неопределено Тогда
		Параметры = Новый Структура();
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ТипГрузоперевозки = Неопределено;
	Параметры.Свойство("ТипГрузоперевозки", ТипГрузоперевозки);
	
	Если ЗначениеЗаполнено(ТипГрузоперевозки) Тогда
		
		Результат = Новый Структура();
		Результат.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
		ОткрытьФормуКарточкиЗаказаНаДоставкуЗавершениеПослеВыбораТипаГрузоперевозки(Результат, Параметры);
		
	Иначе
		
		ДоступныеСервисы = СервисДоставкиВызовСервера.ДоступныеСервисыДоставки();
		
		Если Параметры.Свойство("ДокументОснование")
			И (ДоступныеСервисы.Найти(СервисДоставкиКлиентСервер.ТипГрузоперевозкиСервис1СКурьерика()) <> Неопределено)
			И СервисДоставкиКлиентСервер.ТипыДокументовОснованийКурьерика().Найти(ТипЗнч(Параметры.ДокументОснование)) = Неопределено Тогда
			ДоступныеСервисы.Удалить(ДоступныеСервисы.Найти(СервисДоставкиКлиентСервер.ТипГрузоперевозкиСервис1СКурьерика()));
		КонецЕсли;
		
		КоличествоДоступныхСервисов = ДоступныеСервисы.Количество();
		Если КоличествоДоступныхСервисов = 0 Тогда
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не включены сервисы доставки товаров'"));
			Возврат;
			
		ИначеЕсли КоличествоДоступныхСервисов = 1 Тогда
			
			Результат = Новый Структура();
			Результат.Вставить("ТипГрузоперевозки", ДоступныеСервисы[0]);
			
			Если Параметры.Свойство("Форма") Тогда
				Параметры.Удалить("Форма");
			КонецЕсли;
			
			Если Параметры.Свойство("Элемент") Тогда
				Параметры.Удалить("Элемент");
			КонецЕсли;
			
			ОткрытьФормуКарточкиЗаказаНаДоставкуЗавершениеПослеВыбораТипаГрузоперевозки(Результат, Параметры);
			
		Иначе
			
		Если Параметры.Свойство("Форма")
				И Параметры.Свойство("Элемент") Тогда
				
				СписокГрузоперевозчиков = Новый СписокЗначений;
				
				Для Каждого ИдентификаторСервиса Из ДоступныеСервисы Цикл
					
					НовыйЭлемент = СписокГрузоперевозчиков.Добавить();
					НовыйЭлемент.Значение = Новый Структура;
					
					Для Каждого ЭлементСтруктуры Из Параметры Цикл
						
						Если ЭлементСтруктуры.Ключ <> "Форма"
							И ЭлементСтруктуры.Ключ <> "Элемент" Тогда
							НовыйЭлемент.Значение.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
						КонецЕсли;
						
					КонецЦикла;
					
					НовыйЭлемент.Значение.Вставить("ТипГрузоперевозки", ИдентификаторСервиса);
					НовыйЭлемент.Представление = СервисДоставкиКлиентСервер.ПредставлениеТипаГрузоперевозки(ИдентификаторСервиса);
					
				КонецЦикла;
				
				Форма = Параметры.Форма;
				Элемент = Параметры.Элемент;
				
				Параметры.Удалить("Форма");
				Параметры.Удалить("Элемент");
				
				Форма.ПоказатьВыборИзМеню(
					Новый ОписаниеОповещения("ОткрытьФормуКарточкиЗаказаНаДоставкуЗавершениеПослеВыбораТипаГрузоперевозки",
						ЭтотОбъект,
						Параметры),
					СписокГрузоперевозчиков,
					Элемент);
				
			Иначе
					
				ОткрытьФорму("Обработка.СервисДоставки.Форма.ФормаВыбораТипаГрузоперевозки",,
					ЭтотОбъект,,,,
					Новый ОписаниеОповещения("ОткрытьФормуКарточкиЗаказаНаДоставкуЗавершениеПослеВыбораТипаГрузоперевозки", ЭтотОбъект, Параметры));
					
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Открывает форму карточки заказа на доставку из обработки "СервисДоставки".
//
// Параметры:
//  Параметры - см. СервисДоставки.НовыйПараметрыЗаказаНаДоставку
//
Процедура ОткрытьФормуКарточкиМультизаказаНаДоставку(Параметры = Неопределено) Экспорт
	
	Если Параметры = Неопределено Тогда
		Параметры = Новый Структура();
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ТипГрузоперевозки = Неопределено;
	Параметры.Свойство("ТипГрузоперевозки", ТипГрузоперевозки);
	
	Если ЗначениеЗаполнено(ТипГрузоперевозки) Тогда
		
		Результат = Новый Структура();
		Результат.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
		ОткрытьФормуКарточкиМультизаказаНаДоставкуЗавершениеПослеВыбораТипаГрузоперевозки(Результат, Параметры);
		
	Иначе
		
		ДоступныеСервисы = СервисДоставкиВызовСервера.ДоступныеСервисыДоставки();
		
		Если Параметры.Свойство("ДокументОснование")
			И (ДоступныеСервисы.Найти(СервисДоставкиКлиентСервер.ТипГрузоперевозкиСервис1СКурьерика()) <> Неопределено)
			И СервисДоставкиКлиентСервер.ТипыДокументовОснованийКурьерика().Найти(ТипЗнч(Параметры.ДокументОснование)) = Неопределено Тогда
			ДоступныеСервисы.Удалить(ДоступныеСервисы.Найти(СервисДоставкиКлиентСервер.ТипГрузоперевозкиСервис1СКурьерика()));
		КонецЕсли;
		
		КоличествоДоступныхСервисов = ДоступныеСервисы.Количество();
		Если КоличествоДоступныхСервисов = 0 Тогда
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не включены сервисы доставки товаров'"));
			Возврат;
			
		ИначеЕсли КоличествоДоступныхСервисов = 1 Тогда
			
			Результат = Новый Структура();
			Результат.Вставить("ТипГрузоперевозки", ДоступныеСервисы[0]);
			
			Если Параметры.Свойство("Форма") Тогда
				Параметры.Удалить("Форма");
			КонецЕсли;
			
			Если Параметры.Свойство("Элемент") Тогда
				Параметры.Удалить("Элемент");
			КонецЕсли;
			
			ОткрытьФормуКарточкиМультизаказаНаДоставкуЗавершениеПослеВыбораТипаГрузоперевозки(Результат, Параметры);
			
		Иначе
			
			Если Параметры.Свойство("Форма")
				И Параметры.Свойство("Элемент") Тогда
				
				СписокГрузоперевозчиков = Новый СписокЗначений;
				
				Для Каждого ИдентификаторСервиса Из ДоступныеСервисы Цикл
					
					НовыйЭлемент = СписокГрузоперевозчиков.Добавить();
					НовыйЭлемент.Значение = Новый Структура;
					
					Для Каждого ЭлементСтруктуры Из Параметры Цикл
						
						Если ЭлементСтруктуры.Ключ <> "Форма"
							И ЭлементСтруктуры.Ключ <> "Элемент" Тогда
							НовыйЭлемент.Значение.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
						КонецЕсли;
						
					КонецЦикла;
					
					НовыйЭлемент.Значение.Вставить("ТипГрузоперевозки", ИдентификаторСервиса);
					НовыйЭлемент.Представление = СервисДоставкиКлиентСервер.ПредставлениеТипаГрузоперевозки(ИдентификаторСервиса);
					
				КонецЦикла;
				
				Форма = Параметры.Форма;
				Элемент = Параметры.Элемент;
				
				Параметры.Удалить("Форма");
				Параметры.Удалить("Элемент");
				
				Форма.ПоказатьВыборИзМеню(
					Новый ОписаниеОповещения("ОткрытьФормуКарточкиМультизаказаНаДоставкуЗавершениеПослеВыбораТипаГрузоперевозки",
						ЭтотОбъект,
						Параметры),
					СписокГрузоперевозчиков,
					Элемент);
				
			Иначе
					
				ОткрытьФорму("Обработка.СервисДоставки.Форма.ФормаВыбораТипаГрузоперевозки",,
					ЭтотОбъект,,,,
					Новый ОписаниеОповещения("ОткрытьФормуКарточкиМультизаказаНаДоставкуЗавершениеПослеВыбораТипаГрузоперевозки", ЭтотОбъект, Параметры));
					
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Открывает форму доступных грузоперевозчиков из обработки "СервисДоставки".
//
// Параметры:
//  Параметры - Структура - структура параметров открытия формы.
//
Процедура ОткрытьФормуДоступныхПеревозчиков(Параметры = Неопределено) Экспорт
	
	Если Параметры = Неопределено Тогда
		Параметры = Новый Структура();
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ТипГрузоперевозки = Неопределено;
	Параметры.Свойство("ТипГрузоперевозки", ТипГрузоперевозки);
	
	Если ЗначениеЗаполнено(ТипГрузоперевозки) Тогда
		
		Результат = Новый Структура();
		Результат.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
		ОткрытьФормуДоступныхПеревозчиковЗавершениеПослеВыбораТипаГрузоперевозки(Результат, Параметры);
		
	Иначе
		
		ДоступныеСервисы = СервисДоставкиВызовСервера.ДоступныеСервисыДоставки();
		
		Если Параметры.Свойство("ДокументОснование")
			И (ДоступныеСервисы.Найти(СервисДоставкиКлиентСервер.ТипГрузоперевозкиСервис1СКурьерика()) <> Неопределено)
			И СервисДоставкиКлиентСервер.ТипыДокументовОснованийКурьерика().Найти(ТипЗнч(Параметры.ДокументОснование)) = Неопределено Тогда
			ДоступныеСервисы.Удалить(ДоступныеСервисы.Найти(СервисДоставкиКлиентСервер.ТипГрузоперевозкиСервис1СКурьерика()));
		КонецЕсли;
		
		КоличествоДоступныхСервисов = ДоступныеСервисы.Количество();
		Если КоличествоДоступныхСервисов = 0 Тогда
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не включены сервисы доставки товаров'"));
			Возврат;
			
		ИначеЕсли КоличествоДоступныхСервисов = 1 Тогда
			
			Результат = Новый Структура();
			Результат.Вставить("ТипГрузоперевозки", ДоступныеСервисы[0]);
			
			Если Параметры.Свойство("Форма") Тогда
				Параметры.Удалить("Форма");
			КонецЕсли;
			
			Если Параметры.Свойство("Элемент") Тогда
				Параметры.Удалить("Элемент");
			КонецЕсли;
			
			ОткрытьФормуДоступныхПеревозчиковЗавершениеПослеВыбораТипаГрузоперевозки(Результат, Параметры);
			
		Иначе
			
			Если Параметры.Свойство("Форма")
				И Параметры.Свойство("Элемент") Тогда
				
				СписокГрузоперевозчиков = Новый СписокЗначений;
				
				Для Каждого ИдентификаторСервиса Из ДоступныеСервисы Цикл
					
					НовыйЭлемент = СписокГрузоперевозчиков.Добавить();
					НовыйЭлемент.Значение = Новый Структура;
					
					Для Каждого ЭлементСтруктуры Из Параметры Цикл
						
						Если ЭлементСтруктуры.Ключ <> "Форма"
							И ЭлементСтруктуры.Ключ <> "Элемент" Тогда
							НовыйЭлемент.Значение.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
						КонецЕсли;
						
					КонецЦикла;
					
					НовыйЭлемент.Значение.Вставить("ТипГрузоперевозки", ИдентификаторСервиса);
					НовыйЭлемент.Представление = СервисДоставкиКлиентСервер.ПредставлениеТипаГрузоперевозки(ИдентификаторСервиса);
					
				КонецЦикла;
				
				Форма = Параметры.Форма;
				Элемент = Параметры.Элемент;
				
				Параметры.Удалить("Форма");
				Параметры.Удалить("Элемент");
				
				Форма.ПоказатьВыборИзМеню(
					Новый ОписаниеОповещения("ОткрытьФормуДоступныхПеревозчиковЗавершениеПослеВыбораТипаГрузоперевозки",
						ЭтотОбъект,
						Параметры),
					СписокГрузоперевозчиков,
					Элемент);
				
			Иначе
					
				ОткрытьФорму("Обработка.СервисДоставки.Форма.ФормаВыбораТипаГрузоперевозки",,
					ЭтотОбъект,,,,
					Новый ОписаниеОповещения("ОткрытьФормуДоступныхПеревозчиковЗавершениеПослеВыбораТипаГрузоперевозки", ЭтотОбъект, Параметры));
					
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Открывает форму настроек, если требуется
// 
Процедура ОткрытьФормуНастройкиСозданиеПлатежныхДокументов() Экспорт
	
	СервисДоставкиКлиентПереопределяемый.ОткрытьФормуНастройкиСозданиеПлатежныхДокументов();
	
КонецПроцедуры

Процедура ОткрытьФормуПодчиненныхЗаказовНаДоставку(ПараметрыОткрытия) Экспорт
	
	ВладелецФормы = ПараметрыОткрытия.Форма;
	ПараметрыОткрытия.Удалить("Форма");
	
	ОткрытьФорму("Обработка.СервисДоставки.Форма.ФормаПодчиненныхЗаказовНаДоставку",
		ПараметрыОткрытия,
		ВладелецФормы,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбработатьРезультатФоновогоЗадания(Результат, ДополнительныеПараметры, Отказ = Ложь) Экспорт
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		// Фоновое задание отменено пользователем.
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.ВыводитьОкноОжидания = Неопределено
		ИЛИ Не ДополнительныеПараметры.ВыводитьОкноОжидания Тогда
		Если ТипЗнч(Результат) = Тип("Структура") И Результат.Свойство("Сообщения") Тогда
			
			Для каждого ЭлементКоллекции Из Результат.Сообщения Цикл
				ОбщегоНазначенияКлиент.СообщитьПользователю(ЭлементКоллекции.Текст,
					ЭлементКоллекции.КлючДанных, ЭлементКоллекции.Поле, ЭлементКоллекции.ПутьКДанным);
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Структура") И Результат.Свойство("Статус") И Результат.Статус = "Ошибка" Тогда
		
		Если ЗначениеЗаполнено(Результат.ПодробноеПредставлениеОшибки) Тогда
			ТекстСообщения = Результат.ПодробноеПредставлениеОшибки;
		ИначеЕсли ЗначениеЗаполнено(Результат.КраткоеПредставлениеОшибки) Тогда
			ТекстСообщения = Результат.КраткоеПредставлениеОшибки;
		Иначе
			ТекстСообщения = НСтр("ru = 'Ошибка выполнения операции'");
		КонецЕсли;
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередОткрытиемФормыВыбора(Параметры, ИмяСправочника) Экспорт
	
	Если ИмяСправочника = "АдресКонтрагентаСервисДоставки" Тогда
		Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("Контрагент") Тогда
			Параметры.Вставить("Контрагент", Параметры.Отбор.Контрагент);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуКарточкиЗаказаНаДоставкуЗавершениеПослеВыбораТипаГрузоперевозки(Результат, Параметры) Экспорт
	
	ТипГрузоперевозки = Неопределено;
	
	Если ТипЗнч(Результат) = Тип("ЭлементСпискаЗначений") Тогда
		Результат = Результат.Значение;
	КонецЕсли;
	
	Если Не Результат = Неопределено Тогда
		Результат.Свойство("ТипГрузоперевозки", ТипГрузоперевозки);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТипГрузоперевозки) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
	
	ЕстьПодключениеКСервису = Неопределено;
	СервисДоставкиВызовСервера.ПроверитьПодключениеИнтернетПоддержки(ЕстьПодключениеКСервису);
	
	Если Не ЕстьПодключениеКСервису Тогда
		
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(
			Новый ОписаниеОповещения("ОткрытьФормуКарточкиЗаказаНаДоставкуЗавершение", ЭтотОбъект, Параметры),
			ЭтотОбъект);
		
	Иначе
		ОткрытьФормуКарточкиЗаказаНаДоставкуЗавершение(Новый Структура(), Параметры);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуКарточкиМультизаказаНаДоставкуЗавершениеПослеВыбораТипаГрузоперевозки(Результат, Параметры) Экспорт
	
	ТипГрузоперевозки = Неопределено;
	
	Если ТипЗнч(Результат) = Тип("ЭлементСпискаЗначений") Тогда
		Результат = Результат.Значение;
	КонецЕсли;
	
	Если Не Результат = Неопределено Тогда
		Результат.Свойство("ТипГрузоперевозки", ТипГрузоперевозки);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТипГрузоперевозки) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
	
	ЕстьПодключениеКСервису = Неопределено;
	СервисДоставкиВызовСервера.ПроверитьПодключениеИнтернетПоддержки(ЕстьПодключениеКСервису);
	
	Если Не ЕстьПодключениеКСервису Тогда
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(
			Новый ОписаниеОповещения("ОткрытьФормуКарточкиМультизаказаНаДоставкуЗавершение", ЭтотОбъект, Параметры), ЭтотОбъект);
		
	Иначе
		ОткрытьФормуКарточкиМультизаказаНаДоставкуЗавершение(Новый Структура(), Параметры);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуКарточкиЗаказаНаДоставкуЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("ЭлементСпискаЗначений") Тогда
		Результат = Результат.Значение;
	КонецЕсли;
	
	ДокументыОснования = Неопределено;
	Параметры.Свойство("ДокументыОснования", ДокументыОснования);
	
	Если ДокументыОснования = Неопределено 
		Или ТипЗнч(ДокументыОснования) = Тип("СписокЗначений")
			И ДокументыОснования.Количество() = 0 Тогда
		
		ДокументОснование = Неопределено;
		Параметры.Свойство("ДокументОснование", ДокументОснование);
		
		Если ДокументОснование <> Неопределено Тогда
			
			ДокументыОснования = Новый СписокЗначений();
			ДокументыОснования.Добавить(ДокументОснование);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Не Параметры.Свойство("РежимМастера") Тогда
		Параметры.Вставить("РежимМастера", 0);
	КонецЕсли;
	
	Уникальность = Неопределено;
	
	Если Параметры.ТипГрузоперевозки = СервисДоставкиКлиентСервер.ТипГрузоперевозкиСервис1СКурьерика() Тогда
		ИмяФормы = "КарточкаЗаказаКурьерика";
	Иначе
		ИмяФормы = "КарточкаЗаказа";
	КонецЕсли;
	
	Если Параметры.РежимМастера = 0 Тогда
		
		Если ЗначениеЗаполнено(ДокументыОснования) Тогда
			
			ПараметрыЗаказа = ПараметрыЗаказаНаДоставкуПоДокументамОснованиям(Параметры.ТипГрузоперевозки, ДокументыОснования);
			Если Параметры.Свойство("РедактированиеБыстрогоЗаказа") Тогда
				ПараметрыЗаказа.Вставить("РедактированиеБыстрогоЗаказа", Истина);
			КонецЕсли;
			
			Параметры.Вставить("ОрганизацияБизнесСетиСсылка", ПараметрыЗаказа.ОрганизацияБизнесСетиСсылка);
			Параметры.Вставить("ПараметрыЗаказа", ПараметрыЗаказа);
			ИмяФормы = ПараметрыЗаказа.ИмяФормы;
			Уникальность = ДокументОснование;
			
		КонецЕсли;
		
	Иначе
		
		Если Параметры.РежимМастера <> 0 Тогда
			Уникальность = Параметры.ИдентификаторЗаказа;
		КонецЕсли;
		
	КонецЕсли;
	
	ОрганизацияБизнесСетиСсылка = Неопределено;
	Параметры.Свойство("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	Если Не ЗначениеЗаполнено(ОрганизацияБизнесСетиСсылка) Тогда
		
		ОрганизацияБизнесСетиСсылка = СервисДоставкиВызовСервера.ОрганизацияПоУмолчанию(Параметры.ТипГрузоперевозки);
		Параметры.Вставить("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.ОрганизацияБизнесСетиСсылка) Тогда
		
		Параметры.Вставить("ИмяФормы", ИмяФормы);
		ОткрытьФормуВыбора("ОрганизацияСервисДоставки", Параметры, "ВыборОрганизацииПродолжение");
		Возврат;
		
	КонецЕсли;
	
	ОткрытьФормуСервисаДоставкиСВопросом(Параметры, ИмяФормы, Уникальность);
	
КонецПроцедуры

Процедура ОткрытьФормуКарточкиМультизаказаНаДоставкуЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("ЭлементСпискаЗначений") Тогда
		Результат = Результат.Значение;
	КонецЕсли;
	
	ОрганизацияБизнесСетиСсылка = Неопределено;
	Параметры.Свойство("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	
	Если Не ЗначениеЗаполнено(ОрганизацияБизнесСетиСсылка) Тогда
		ОрганизацияБизнесСетиСсылка = СервисДоставкиВызовСервера.ОрганизацияПоУмолчанию(Параметры.ТипГрузоперевозки);
		
		Если Не ЗначениеЗаполнено(ОрганизацияБизнесСетиСсылка) Тогда
			
			Параметры.Вставить("ИмяФормы", "КарточкаМультизаказа");
			ОткрытьФормуВыбора("ОрганизацияСервисДоставки",Параметры,"ВыборОрганизацииПродолжение");
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Параметры.Вставить("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	
	ОткрытьФормуСервисаДоставкиСВопросом(Параметры, "КарточкаМультизаказа", Параметры.ИдентификаторЗаказа);
	
КонецПроцедуры

Процедура ОткрытьФормуСпискаЗаказовНаДоставкуЗавершениеПослеВыбораТипаГрузоперевозки(Результат, Параметры) Экспорт
	
	ТипГрузоперевозки = Неопределено;
	
	Если ТипЗнч(Результат) = Тип("ЭлементСпискаЗначений") Тогда
		Результат = Результат.Значение;
	КонецЕсли;
	
	Если Не Результат = Неопределено Тогда
		Результат.Свойство("ТипГрузоперевозки", ТипГрузоперевозки);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТипГрузоперевозки) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
	
	ЕстьПодключениеКСервису = Неопределено;
	СервисДоставкиВызовСервера.ПроверитьПодключениеИнтернетПоддержки(ЕстьПодключениеКСервису);
	
	Если Не ЕстьПодключениеКСервису Тогда
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(
			Новый ОписаниеОповещения("ОткрытьФормуСпискаЗаказовНаДоставкуЗавершение", ЭтотОбъект, Параметры), ЭтотОбъект);
		
	Иначе
		ОткрытьФормуСпискаЗаказовНаДоставкуЗавершение(Новый Структура(), Параметры);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуСпискаЗаказовНаДоставкуЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("ЭлементСпискаЗначений") Тогда
		Результат = Результат.Значение;
	КонецЕсли;
	
	ОрганизацияБизнесСетиСсылка = Неопределено;
	Параметры.Свойство("ОрганизацияБизнесСети", ОрганизацияБизнесСетиСсылка);
	
	Если Не ЗначениеЗаполнено(ОрганизацияБизнесСетиСсылка) Тогда
		
		ОрганизацияБизнесСетиСсылка = СервисДоставкиВызовСервера.ОрганизацияПоУмолчанию(Параметры.ТипГрузоперевозки);
		
		Если Не ЗначениеЗаполнено(ОрганизацияБизнесСетиСсылка) Тогда
			
			Параметры.Вставить("ИмяФормы", "СписокЗаказов");
			ОткрытьФормуВыбора("ОрганизацияСервисДоставки",Параметры,"ВыборОрганизацииПродолжение");
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Параметры.Вставить("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	
	ОткрытьФормуСервисаДоставкиСВопросом(Параметры, "СписокЗаказов");
	
КонецПроцедуры

Процедура ОткрытьФормуОтслеживанияЗаказаЗавершениеПослеВыбораТипаГрузоперевозки(Результат, Параметры) Экспорт
	
	ТипГрузоперевозки = Неопределено;
	
	Если ТипЗнч(Результат) = Тип("ЭлементСпискаЗначений") Тогда
		Результат = Результат.Значение;
	КонецЕсли;
	
	Если Не Результат = Неопределено Тогда
		Результат.Свойство("ТипГрузоперевозки", ТипГрузоперевозки);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТипГрузоперевозки) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
	
	ЕстьПодключениеКСервису = Неопределено;
	СервисДоставкиВызовСервера.ПроверитьПодключениеИнтернетПоддержки(ЕстьПодключениеКСервису);
	
	Если Не ЕстьПодключениеКСервису Тогда
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(
			Новый ОписаниеОповещения("ОткрытьФормуОтслеживанияЗаказаЗавершение", ЭтотОбъект, Параметры), ЭтотОбъект);
		
	Иначе
		ОткрытьФормуОтслеживанияЗаказаЗавершение(Новый Структура(), Параметры);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуОтслеживанияЗаказаЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("ЭлементСпискаЗначений") Тогда
		Результат = Результат.Значение;
	КонецЕсли;
	
	ОрганизацияБизнесСетиСсылка = Неопределено;
	Параметры.Свойство("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	
	Если Не ЗначениеЗаполнено(ОрганизацияБизнесСетиСсылка) Тогда
		
		ОрганизацияБизнесСетиСсылка = СервисДоставкиВызовСервера.ОрганизацияПоУмолчанию(Параметры.ТипГрузоперевозки);
		
		Если Не ЗначениеЗаполнено(ОрганизацияБизнесСетиСсылка) Тогда
			
			Параметры.Вставить("ИмяФормы", "ОтслеживаниеЗаказа");
			ОткрытьФормуВыбора("ОрганизацияСервисДоставки",Параметры,"ВыборОрганизацииПродолжение");
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Параметры.Вставить("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	
	ОткрытьФормуСервисаДоставкиСВопросом(Параметры, "ОтслеживаниеЗаказа")
	
КонецПроцедуры

Процедура ОткрытьФормуДоступныхПеревозчиковЗавершениеПослеВыбораТипаГрузоперевозки(Результат, Параметры) Экспорт
	
	ТипГрузоперевозки = Неопределено;
	
	Если ТипЗнч(Результат) = Тип("ЭлементСпискаЗначений") Тогда
		Результат = Результат.Значение;
	КонецЕсли;
	
	Если Не Результат = Неопределено Тогда
		Результат.Свойство("ТипГрузоперевозки", ТипГрузоперевозки);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТипГрузоперевозки) Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
	
	ЕстьПодключениеКСервису = Неопределено;
	СервисДоставкиВызовСервера.ПроверитьПодключениеИнтернетПоддержки(ЕстьПодключениеКСервису);
	
	Если Не ЕстьПодключениеКСервису Тогда
		ИнтернетПоддержкаПользователейКлиент.ПодключитьИнтернетПоддержкуПользователей(
			Новый ОписаниеОповещения("ОткрытьФормуДоступныхПеревозчиковЗавершение", ЭтотОбъект, Параметры), ЭтотОбъект);
		
	Иначе
		ОткрытьФормуДоступныхПеревозчиковЗавершение(Новый Структура(), Параметры);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуДоступныхПеревозчиковЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("ЭлементСпискаЗначений") Тогда
		Результат = Результат.Значение;
	КонецЕсли;
	
	ОрганизацияБизнесСетиСсылка = Неопределено;
	Параметры.Свойство("ОрганизацияБизнесСети", ОрганизацияБизнесСетиСсылка);
	
	Если Не ЗначениеЗаполнено(ОрганизацияБизнесСетиСсылка) Тогда
		
		ОрганизацияБизнесСетиСсылка = СервисДоставкиВызовСервера.ОрганизацияПоУмолчанию(Параметры.ТипГрузоперевозки);
		
		Если Не ЗначениеЗаполнено(ОрганизацияБизнесСетиСсылка) Тогда
			
			Параметры.Вставить("ИмяФормы", "ДоступныеПеревозчики");
			ОткрытьФормуВыбора("ОрганизацияСервисДоставки",Параметры,"ВыборОрганизацииПродолжение");
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Параметры.Вставить("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	
	ОткрытьФормуСервисаДоставкиСВопросом(Параметры, "ДоступныеПеревозчики")
	
КонецПроцедуры

Процедура ОбработатьВыборЗначения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыборОрганизацииПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры.Вставить("ОрганизацияБизнесСетиСсылка", Результат);
	
	НастройкиФормы = Новый Соответствие();
	НастройкиФормы.Вставить("ОрганизацияБизнесСетиСсылка", Результат);
	СервисДоставкиВызовСервера.СохранитьНастройкиФормыСпискаЗаказов(НастройкиФормы);
	
	ОткрытьФормуСервисаДоставкиСВопросом(ДополнительныеПараметры, ДополнительныеПараметры.ИмяФормы);
	
КонецПроцедуры

Процедура ПроверитьОрганизациюБизнесСетиСВопросом(Параметры, Отказ) Экспорт
	
	ОрганизацияБизнесСетиСсылка = Неопределено;
	Параметры.Свойство("ОрганизацияБизнесСетиСсылка", ОрганизацияБизнесСетиСсылка);
	
	Если Не СервисДоставкиВызовСервера.ОрганизацияПодключена(ОрганизацияБизнесСетиСсылка) Тогда
		ТекстВопроса = НСтр("ru='Организация ""%1"" не подключена в сервисе 1С:Бизнес-сеть. Подключить сейчас?'") + Символы.ПС + Символы.ПС
		+ НСтр("ru='При нажатии ""Да"" откроется форма подключения организации,'") + Символы.ПС
		+ НСтр("ru='при нажатии ""Нет"" откроется форма выбора подключенной организации,'") + Символы.ПС
		+ НСтр("ru='при нажатии ""Отмена"" текущее действие будет отменено.'");
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, ОрганизацияБизнесСетиСсылка);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПодключитьОрганизациюПослеВопроса", ЭтотОбъект, Параметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодключитьОрганизациюПослеВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ПодключитьОрганизациюЗавершение", ЭтотОбъект, Параметры);
		БизнесСетьСлужебныйКлиент.ОткрытьФормуПодключенияОрганизации(Параметры.ОрганизацияБизнесСетиСсылка, ЭтотОбъект, ОписаниеОповещенияОЗакрытии);
	Иначе
		ОткрытьФормуВыбора("ОрганизацияСервисДоставки", Параметры, "ВыборОрганизацииПродолжение");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодключитьОрганизациюЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ИмяФормы") Тогда
		
		Уникальность = Неопределено;
		
		Параметры.Свойство("Уникальность", Уникальность);
		
		ОткрытьФорму("Обработка.СервисДоставки.Форма." + Параметры.ИмяФормы,
			Параметры,,
			Уникальность,
			,
			,
			,
			?(Параметры.Свойство("ПараметрыЗаказа") И Параметры.ПараметрыЗаказа.Свойство("РежимОткрытияОкнаФормы"),
				Параметры.ПараметрыЗаказа.РежимОткрытияОкнаФормы,
				РежимОткрытияОкнаФормы.Независимый));
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьБлокОшибок(Результат, ОперацияВыполнена) Экспорт
	
	Если Результат.Свойство("Ошибки") Тогда
		Если ТипЗнч(Результат.Ошибки) = Тип("Массив") Тогда
			Для Каждого ТекущаяОшибка Из Результат.Ошибки Цикл
				ОбщегоНазначенияКлиент.СообщитьПользователю(ТекущаяОшибка);
			КонецЦикла;
		КонецЕсли;
		ОперацияВыполнена = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Функция ТолькоЦифры(Знач Строка) Экспорт
	
	ЛишниеСимволы = СтрСоединить(СтрРазделить(Строка, "0123456789"), "");
	Результат = СтрСоединить(СтрРазделить(Строка, ЛишниеСимволы), "");
	
	Возврат Результат;
	
КонецФункции

Функция ПредставлениеЗаказаНаДоставку(Параметры, ПолноеНаименование = Ложь) Экспорт
	
	Возврат СервисДоставкиКлиентСервер.ПредставлениеЗаказаНаДоставку(Параметры, ПолноеНаименование);
	
КонецФункции

#Область НаложенныеПлатежи

// Возвращаемое значение:
// Булево
Функция ЭтотДокументДоступенДляНаложенногоПлатежа(Знач ДокументОснование) Экспорт
	
	Результат = Ложь;
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ДоступныеТипыДок = Новый Массив; // Массив из Тип
	СервисДоставкиКлиентПереопределяемый.ТипыОснованийДляНаложенногоПлатежа(ДоступныеТипыДок);
	
	Результат = ДоступныеТипыДок.Найти(ТипЗнч(ДокументОснование)) <> Неопределено;
	Возврат Результат;
	
КонецФункции

#КонецОбласти
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПараметрыЗаказаНаДоставкуПоДокументамОснованиям(ТипГрузоперевозки, Основания)
	
	Возврат СервисДоставкиВызовСервера.ПараметрыЗаказаНаДоставкуПоДокументамОснованиям(ТипГрузоперевозки, Основания);
	
КонецФункции

Процедура ОткрытьФормуВыбора(ИмяСправочника, ПараметрыОтбора = Неопределено, ИмяПроцедурыОбработки="ОбработатьВыборЗначения")
	
	ИмяФормыВыбора = СервисДоставкиВызовСервера.ИмяФормыВыбораПоОпределяемомуТипу(ИмяСправочника);
	
	Если ИмяФормыВыбора <> "" Тогда
		
		ПараметрыОткрытия = Новый Структура();
		ПараметрыОткрытия.Вставить("Отбор", ПараметрыОтбора);
		ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
		
		ПередОткрытиемФормыВыбора(ПараметрыОткрытия, ИмяСправочника);
		ОписаниеОповещения = Новый ОписаниеОповещения(ИмяПроцедурыОбработки, ЭтотОбъект, ПараметрыОтбора);
		ОткрытьФорму(
			ИмяФормыВыбора,
			ПараметрыОткрытия,
			,,,,ОписаниеОповещения,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуСервисаДоставкиСВопросом(Параметры, ИмяФормы, Уникальность = Неопределено)
	
	Если Уникальность = Неопределено Тогда
		Параметры.Свойство("ТипГрузоперевозки", Уникальность);
		ДокументОснование = Неопределено;
		Если Параметры.Свойство("ДокументОснование", ДокументОснование) Тогда
			Уникальность = "" + Уникальность + ДокументОснование.УникальныйИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
	Отказ = Ложь;
	Параметры.Вставить("ИмяФормы", ИмяФормы);
	Параметры.Вставить("Уникальность", Уникальность);
	
	ПроверитьОрганизациюБизнесСетиСВопросом(Параметры, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяФормы = "КарточкаЗаказа" 
		И Параметры.РежимМастера = 0 Тогда
		Если Параметры.Свойство("ДокументыОснования")
			И ЗначениеЗаполнено(Параметры.ДокументыОснования) Тогда
			ОткрытьФормуНовогоЗаказаНаОсновании(Параметры, Уникальность, РежимОткрытияОкнаФормы.Независимый);
		Иначе
			ОткрытьФормуНовогоЗаказа(Параметры, Уникальность, РежимОткрытияОкнаФормы.Независимый);
		КонецЕсли;
	Иначе
		ОткрытьФорму("Обработка.СервисДоставки.Форма." + ИмяФормы,
			Параметры,,
			Уникальность,
			,
			,
			,
			?(Параметры.Свойство("ПараметрыЗаказа") И Параметры.ПараметрыЗаказа.Свойство("РежимОткрытияОкнаФормы"),
				Параметры.ПараметрыЗаказа.РежимОткрытияОкнаФормы,
				РежимОткрытияОкнаФормы.Независимый));
	КонецЕсли;

КонецПроцедуры

Процедура ОткрытьФормуНовогоЗаказаНаОсновании(Параметры, Уникальность, РежимОткрытияОкнаФормы)
	
	// &ЗамерПроизводительности
	УИДЗамера = ОценкаПроизводительностиКлиент.ЗамерВремени("ОбщийМодуль.СервисДоставкиКлиент.ОткрытьФормуНовогоЗаказаНаОсновании");
	
	ОткрытьФорму("Обработка.СервисДоставки.Форма.КарточкаЗаказа",
		Параметры,,
		Уникальность,
		,
		,
		,
		РежимОткрытияОкнаФормы);
		
	ОценкаПроизводительностиКлиент.ЗавершитьЗамерВремени(УИДЗамера);
	
КонецПроцедуры

Процедура ОткрытьФормуНовогоЗаказа(Параметры, Уникальность, РежимОткрытияОкнаФормы)
	
	// &ЗамерПроизводительности
	УИДЗамера = ОценкаПроизводительностиКлиент.ЗамерВремени("ОбщийМодуль.СервисДоставкиКлиент.ОткрытьФормуНовогоЗаказа");
	
	ОткрытьФорму("Обработка.СервисДоставки.Форма.КарточкаЗаказа",
		Параметры,,
		Уникальность,
		,
		,
		,
		РежимОткрытияОкнаФормы);
			
	ОценкаПроизводительностиКлиент.ЗавершитьЗамерВремени(УИДЗамера);
	
КонецПроцедуры

#КонецОбласти
