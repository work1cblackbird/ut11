#Область ПрограммныйИнтерфейс

//++ Локализация


//-- Локализация

// Выполняет проверку документа "Приобретение товаров и услуг" и "Приобретение услуг и прочих активов" перед загрузкой 
// чека самозанятого.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма документа приобретения.
//
Процедура ПередЗагрузкойЧекаСамозанятогоВДокумент(Форма) Экспорт

	//++ Локализация
	Объект = Форма.Объект; // ДанныеФормыСтруктура
	
	ТекстПередЗаписью = "";
	
	ДополнительныеПараметры = ПараметрыЗагрузкиЧекаСамозанятого();
	
	ДополнительныеПараметры.Вставить("Форма", Форма);
	
	ТаблицаЧеков = Форма.ЧекиСамозанятого;
	ДанныеЧека = НовыеДанныеЧека();
	
	Если ТаблицаЧеков.Количество() <> 0 Тогда
		
		СтрокаТаблицы = ТаблицаЧеков.Получить(0);
		ЗаполнитьЗначенияСвойств(ДанныеЧека, СтрокаТаблицы);
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ДополнительныеПараметры.Вставить("Записывать", Истина);
		ТекстПередЗаписью = НСтр("ru = 'Документ будет записан в процессе загрузки чека.'");
		
	ИначеЕсли ЗначениеЗаполнено(Объект.Ссылка)
		И Форма.Модифицированность Тогда
		
		ДополнительныеПараметры.Вставить("Записывать", Истина);
		ТекстПередЗаписью = НСтр("ru = 'Данные изменены и будут записаны в процессе загрузки чека.'");
		
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекстПередЗаписью) Тогда
		ТекстВопроса = СтрШаблон(Нстр("ru = '%1
											|Продолжить загрузку чека?'"), ТекстПередЗаписью);
	Иначе
		
		ДанныеЧека.Вставить("ДокументВладелец", Объект.Ссылка);
		Оповещение = Новый ОписаниеОповещения("ОткрытьФормуЧекаСамозанятого", ЭтотОбъект, ДополнительныеПараметры);
		ВыполнитьОбработкуОповещения(Оповещение, ДанныеЧека);
		
		Возврат;
		
	КонецЕсли;
	
	ДополнительныеПараметры.Вставить("ТекущиеДанные", ДанныеЧека);
	ОповещенияОЗавершении = Новый ОписаниеОповещения(
		"ПередЗагрузкойЧекаСамозанятогоВДокументЗавершение",
		ЭтотОбъект,
		ДополнительныеПараметры);
	Кнопки = РежимДиалогаВопрос.ДаНет;
	
	ПоказатьВопрос(ОповещенияОЗавершении, ТекстВопроса, Кнопки);
	//-- Локализация
	
	Возврат;

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ОткрытьРезультатОплатыСтрокГрафика(ЭлементФормы, Результат, Оповещение) Экспорт
	
	//++ Локализация


	//-- Локализация
	
	Возврат Ложь;
	
КонецФункции

//++ Локализация

#Область РаботаСФайлами

Процедура ОткрытьФормуСпискаФайловДляПередачиВБанк(Форма) Экспорт
	
	Обработчик = Новый ОписаниеОповещения("ОткрытьФормуСпискаФайловДляПередачиВБанкЗавершение", ЭтотОбъект, Форма);
	
	Если Форма.Объект.Ссылка.Пустая() Тогда
		ТекстВопроса = НСтр("ru = 'Данные еще не записаны.
			|Переход к файлам возможен только после записи данных.
			|Данные будут записаны.'");
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
	Иначе
		ВыполнитьОбработкуОповещения(Обработчик, КодВозвратаДиалога.Пропустить);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьФормуСпискаФайловДляПередачиВБанкЗавершение(Ответ, Форма) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		Форма.Записать();
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВладелецФайла",  Форма.Объект.Ссылка);
	ПараметрыФормы.Вставить("ТолькоПросмотр", Форма.ТолькоПросмотр);
	
	Отбор = Новый Структура;
	Отбор.Вставить("ДляПередачиВБанк", Истина);
	ПараметрыФормы.Вставить("Отбор", Отбор);
	
	ОткрытьФорму("Обработка.РаботаСФайлами.Форма.ПрисоединенныеФайлы",
		ПараметрыФормы,
		Форма,
		Истина,
		Форма.Окно);
	
КонецПроцедуры

#КонецОбласти


// Формирует дополнительный отбор для выбора объектов расчета.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Данные формы, в которой выполняется выбор объектов расчета.
//  ДополнительныйОтбор - Соответствие из Строка, Неопределено - дополнительный отбор
//  Подбор - Булево - признак выполнения подбора в форме.
//
Процедура ДополнитьОтборОбъектовРасчета(Форма, ДополнительныйОтбор, Подбор = Ложь) Экспорт

	Если Форма.Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОплатаПоставщику")
		И Форма.Объект.ОперацияССамозанятым
		И Форма.Объект.СписокКонтрагентов Тогда
		
		Если ДополнительныйОтбор = Неопределено Тогда
			ДополнительныйОтбор = Новый Соответствие;
		КонецЕсли;
		
		ДополнительныйОтбор.Вставить(
			"Контрагент.ЮридическоеФизическоеЛицо",
			ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо"));
		ДобавитьОтборПоПризнакуОперацияССамозанятым(Истина, ДополнительныйОтбор, Подбор);
		
	КонецЕсли;
	
	Если Форма.Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ОплатаПоставщику")
		И (Форма.КонтрагентЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ФизЛицо")
		ИЛИ Форма.КонтрагентЮрФизЛицо = ПредопределенноеЗначение("Перечисление.ЮрФизЛицо.ИндивидуальныйПредприниматель")) Тогда
		ДобавитьОтборПоПризнакуОперацияССамозанятым(Форма.Объект.ОперацияССамозанятым, ДополнительныйОтбор, Подбор);
	КонецЕсли;

КонецПроцедуры

// Установливает параметры выбора контрагента в табличной части "Расшифровка платежа".
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма документа.
//
Процедура УстановитьПараметрыВыбораКонтрагентаРасшифровкиПлатежа(Форма) Экспорт

	СтрокаТабличнойЧасти = Форма.Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Партнер) Тогда
		ДенежныеСредстваКлиентСерверЛокализация.УстановитьПараметрыВыбораПолучателя(
			Форма, Форма.Объект, Форма.Элементы.РасшифровкаПлатежаКонтрагент, СтрокаТабличнойЧасти.Партнер);
	Иначе
		ДенежныеСредстваКлиентСерверЛокализация.УстановитьПараметрыВыбораПолучателя(
			Форма, Форма.Объект, Форма.Элементы.РасшифровкаПлатежаКонтрагент);
	КонецЕсли;

КонецПроцедуры

//-- Локализация

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация

Процедура ДобавитьОтборПоПризнакуОперацияССамозанятым(Признак, Отбор, ЭтоПодбор)

	Если Отбор = Неопределено Тогда
		Отбор = Новый Соответствие;
	КонецЕсли;
	
	Отбор.Вставить("ОперацияССамозанятым", Признак);
	
	Если Признак Тогда
		
		РежимНалогообложения = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС");
		Отбор.Вставить("НалогообложениеНДС", РежимНалогообложения);
		
	КонецЕсли;

КонецПроцедуры

Процедура ОткрытьФормуЧекаСамозанятого(Чек, Параметры) Экспорт

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", Параметры.Форма);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОткрытиеФормыЧекаСамозанятогоЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы = ОбщегоНазначенияКлиент.СкопироватьРекурсивно(Чек, Ложь);
	
	ОткрытьФорму("ОбщаяФорма.ФормаЧекаСамозанятого", 
		ПараметрыФормы, , , , ,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

Процедура ОткрытиеФормыЧекаСамозанятогоЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Отмена Или Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	
	Оповещение = Новый ОписаниеОповещения("ПослеЗагрузкиЧекаСамозанятого", Форма);
	ВыполнитьОбработкуОповещения(Оповещение, Результат);

КонецПроцедуры

// Выполняет действия перед открытием формы загрузки чека в документе.
//
// Параметры:
//  Ответ - КодВозвратаДиалога - результат диалога с пользователем
//  ДополнительныеПараметры - см. ПараметрыЗагрузкиЧекаСамозанятого.
//
Процедура ПередЗагрузкойЧекаСамозанятогоВДокументЗавершение(Ответ, ДополнительныеПараметры) Экспорт

	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		Результат = Истина;
		
		Форма = ДополнительныеПараметры.Форма;
		Объект = Форма.Объект; // ДанныеФормыСтруктура
		
		Если ДополнительныеПараметры.Записывать Тогда
			
			ПараметрыЗаписи = Новый Структура;
			ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Запись);
			Результат = ОбщегоНазначенияУТКлиент.ОбработатьЗаписьОбъектаВФорме(Форма, ПараметрыЗаписи);
			
		КонецЕсли;
		
		Если Результат Тогда
		
			ДанныеЧека = ДополнительныеПараметры.ТекущиеДанные;
			ДанныеЧека.Вставить("ДокументВладелец", Объект.Ссылка);
			
			Оповещение = Новый ОписаниеОповещения(
				"ОткрытьФормуЧекаСамозанятого", ЭтотОбъект, ДополнительныеПараметры);
			ВыполнитьОбработкуОповещения(Оповещение, ДанныеЧека);
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

// Параметры загрузки чека самозанятого в документы приобретения.
// 
// Возвращаемое значение:
//   Структура:
//   * Форма - Неопределено, ФормаКлиентскогоПриложения - форма документа, в которой выполняется привязка.
//   * Записывать - Булево - признак необходимости записи документа перед загрузкой файла чека в документ.
//   * ТекущиеДанные - см. НовыеДанныеЧека.
//
Функция ПараметрыЗагрузкиЧекаСамозанятого()

	Результат = Новый Структура;
	Результат.Вставить("Форма", Неопределено);
	Результат.Вставить("Записывать", Ложь);
	Результат.Вставить("ТекущиеДанные", НовыеДанныеЧека());
	
	Возврат Результат;

КонецФункции

Функция НовыеДанныеЧека()

	ДанныеЧека = Новый Структура;
	
	ДанныеЧека.Вставить("СсылкаНаЧек", "");
	ДанныеЧека.Вставить("НомерЧека", "");
	ДанныеЧека.Вставить("ФайлЧека", Неопределено);
	ДанныеЧека.Вставить("ЧекСамозанятого", Неопределено);
	ДанныеЧека.Вставить("ДокументВладелец", Неопределено);
	
	Возврат ДанныеЧека

КонецФункции

//-- Локализация

#КонецОбласти