
#Область ПрограммныйИнтерфейс

#Область Конструкторы

// Конструктор параметров документа к публикации.
//
// Возвращаемое значение:
//  Структура - содержит набор данных документа для скачивания:
//   * ЭлектронныйДокумент - Неопределено, ДокументСсылка, СправочникСсылка - ссылка на электронный документ.
//   * ФайлыДокумента - Массив из См. НовыеДанныеФайлаДляВыбораКПубликации- исходные файлы документа. 
//   * РезультатПроверкиПакета - См. НовыйРезультатПроверкиПакета
//   * ДанныеОпубликованногоДокумента - См. НовыеДанныеОпубликованногоДокумента
//
Функция НовыеПараметрыДокументаКПубликации() Экспорт
	
	ПараметрыДокумента = Новый Структура();
	ПараметрыДокумента.Вставить("ЭлектронныйДокумент", Неопределено);
	ПараметрыДокумента.Вставить("ФайлыДокумента", Новый Массив);
	ПараметрыДокумента.Вставить("РезультатПроверкиПакета", НовыйРезультатПроверкиПакета());
	ПараметрыДокумента.Вставить("ДанныеОпубликованногоДокумента", НовыеДанныеОпубликованногоДокумента());
	
	Возврат ПараметрыДокумента;
	
КонецФункции

// Конструктор параметров результата проверки пакета электронного документа и его присоединенных файлов
// для публикации в сервис 1С:Share.
//
// Возвращаемое значение:
//  Структура - содержит параметры формы выбора файлов документа перед публикацией:
//   * ДанныеФайловКПубликации - Массив из См. НовыеДанныеФайлаДляВыбораКПубликации
//   * ПревышенРазмерПакета - Булево - признак превышения максимального размера пакета.
//   * РазмерПакетаБезПрисоединенныхФайлов - Число - размер пакета электронного документа для публикации
//                                                   без размера присоединенных файлов. Размер заполняется в байтах.
//   * МаксимальныйРазмерПакета - Число - максимальный допустимый размер в байтах всех публикуемых данных.
//
Функция НовыйРезультатПроверкиПакета() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ДанныеФайловКПубликации", Новый Массив);
	Результат.Вставить("ПревышенРазмерПакета", Ложь);
	Результат.Вставить("РазмерПакетаБезПрисоединенныхФайлов", 0);
	Результат.Вставить("МаксимальныйРазмерПакета", 0);
	
	Возврат Результат;
	
КонецФункции

// Конструктор данных опубликованного документа в сервис 1С:Share.
//
// Возвращаемое значение:
//  Структура - содержит набор данных документа для скачивания:
//   * ЭлектронныйДокумент          - Неопределено, ДокументСсылка, СправочникСсылка - ссылка на электронный документ
//   * СсылкаДляСкачиванияДокумента - Строка - короткая ссылка для скачивания документа.
//   * ОрганизацияНаименование      - Строка - наименование организации из документа.
//   * КонтрагентНаименование       - Строка - наименование контрагента из документа.
//   * Контрагент                   - Неопределено, ОпределяемыйТип.КонтрагентБЭД - контрагент документа.
//   * СуммаДокумента               - Число - сумма документа.
//   * ВалютаДокумента              - Строка - валюта документа.
//   * ПредставлениеДокумента       - Строка - представление электронного документа.
//
Функция НовыеДанныеОпубликованногоДокумента() Экспорт
	
	ДанныеДокумента = Новый Структура;
	ДанныеДокумента.Вставить("ЭлектронныйДокумент", Неопределено);
	ДанныеДокумента.Вставить("СсылкаДляСкачиванияДокумента", "");
	ДанныеДокумента.Вставить("ОрганизацияНаименование", "");
	ДанныеДокумента.Вставить("КонтрагентНаименование", "");
	ДанныеДокумента.Вставить("Контрагент", Неопределено);
	ДанныеДокумента.Вставить("СуммаДокумента", 0);
	ДанныеДокумента.Вставить("ВалютаДокумента", "");
	ДанныеДокумента.Вставить("ПредставлениеДокумента", "");
	
	Возврат ДанныеДокумента;
	
КонецФункции

// Конструктор контактной информации по владельцу.
//
// Возвращаемое значение:
//  Структура - содержит контактную информацию по владельцу:
//   * ВладелецКонтакта      - ЛюбаяСсылка - владелец контактной информации.
//   * КодСтраны             - Строка - код страны. По умолчанию Российская Федерация: "+7"
//   * НомерТелефонаБезКодов - Строка - номер телефона, без кода страны и только цифры.
//
Функция НовыйКонтактнаяИнформация() Экспорт
	
	КонтактнаяИнформация = Новый Структура();
	КонтактнаяИнформация.Вставить("ВладелецКонтакта");
	КонтактнаяИнформация.Вставить("КодСтраны", "+7");
	КонтактнаяИнформация.Вставить("НомерТелефонаБезКодов", "");
	
	Возврат КонтактнаяИнформация;
	
КонецФункции

// Конструктор параметров формы для выбора файлов перед публикацией.
//
// Возвращаемое значение:
//  Структура - содержит данные файла для выбора к публикации:
//   * СсылкаНаФайл - ОпределяемыйТип.ПрисоединенныйФайл, Неопределено - ссылка на файл документа к публикации.
//   * Наименование - Строка - наименование файла без расширения.
//   * ИмяФайла - Строка - наименование файла с расширением.
//   * Расширение - Строка - расширение файла без точки.
//   * Размер - Строка - размер файла в байтах.
//   * ДвоичныеДанныеФайла - Строка - адрес хранилища двочных данных файла.
//   * ФайлВыбран - Булево - признак выбранного файла.
//
Функция НовыеДанныеФайлаДляВыбораКПубликации() Экспорт
	
	ДанныеФайла = Новый Структура;
	ДанныеФайла.Вставить("СсылкаНаФайл", Неопределено);
	ДанныеФайла.Вставить("Наименование", "");
	ДанныеФайла.Вставить("Расширение", "");
	ДанныеФайла.Вставить("ИмяФайла", "");
	ДанныеФайла.Вставить("Размер", "");
	ДанныеФайла.Вставить("ДвоичныеДанныеФайла", "");
	ДанныеФайла.Вставить("ФайлВыбран", Ложь);
	
	Возврат ДанныеФайла;
	
КонецФункции

// Конструктор параметров документа для установки отметки о загрузке в прикладную базу в сервисе 1С:Share.
//
// Возвращаемое значение:
//  Структура - содержит данные файла для выбора к публикации:
//   * ИдентификаторЭлектронногоДокумента - Строка  - идентификатор объекта учета в прикладной базе.
//   * ОбъектУчета - ДокументСсылка, СправочникСсылка - ссылка на объект учета.
//   * ТипМетаданныхДокументаВладельца - Строка - полное имя типа метаданных объекта учета в прикладной базе.
//                                                Например: "Документ.ЗаказПоставщику", "Справочник.Договоры"
//   * СпособЗагрузки - Строка - вариант способа загрузки в прикладную базу.
//                               См. СпособыЗагрузкиДокумента. По умолчанию "КакНовыйДокумент".
Функция НовыеПараметрыДокументаДляОтметкиЗагрузкиВБазу() Экспорт
	
	ПараметрыДокумента = Новый Структура;
	ПараметрыДокумента.Вставить("ИдентификаторЭлектронногоДокумента");
	ПараметрыДокумента.Вставить("ОбъектУчета");
	ПараметрыДокумента.Вставить("ТипМетаданныхДокументаВладельца");
	ПараметрыДокумента.Вставить("СпособЗагрузки", СпособыЗагрузкиДокумента().КакНовыйДокумент);
	
	Возврат ПараметрыДокумента;
	
КонецФункции

// Конструктор параметров загруженного документа в прикладную базу.
//
// Возвращаемое значение:
//  Структура - данные объекта учета загруженного из сервиса 1С:Share:
//   * ОбъектУчета - ДокументСсылка, СправочникСсылка - ссылка на созданный объект учета по электронного документу.
//   * ДополнительныеФайлыДокумента - ХранилищеЗначения из См. НовоеОписаниеДополнительныхФайлов - дополнительные 
//                                                                    файлы переданные вместе с электронным документом.
//   * ФайлыВизуализации - Массив из См. НовыеФайлВизуализации - файлы представления электронного документа.
Функция НовыеДанныеЗагруженногоДокумента() Экспорт
	
	ДанныеДокумента = Новый Структура;
	ДанныеДокумента.Вставить("ОбъектУчета");
	ДанныеДокумента.Вставить("ДополнительныеФайлыДокумента");
	ДанныеДокумента.Вставить("ФайлыВизуализации", Новый Массив);
	
	Возврат ДанныеДокумента;
		
КонецФункции

#КонецОбласти

#Область Словарь

// Возвращает адрес сервиса 1С:Share.
// 
// Возвращаемое значение:
//  Строка - адрес сервиса.
//
Функция АдресСервиса() Экспорт
	
	Возврат "sh.1cfresh.com";
	
КонецФункции

// Возвращает имя подсистемы Share.
// 
// Возвращаемое значение:
//  Строка - имя подсистемы.
//
Функция ИмяПодсистемы() Экспорт
	
	Возврат ОбщегоНазначенияБЭДКлиентСервер.ПодсистемыБЭД().СервисShare;
	
КонецФункции

// Возвращает имя сервиса Share.
// 
// Возвращаемое значение:
//  Строка - имя сервиса.
//
Функция ИмяСервиса() Экспорт
	
	Возврат "Share";
	
КонецФункции

// Возвращает запрещенные расширения файлов к публикации, которые могут нанести вред: программы, скрипты, ярлыки.
// 
// Возвращаемое значение:
//  Строка - форматы файла.
//
Функция ЗапрещенныеРасширенияФайла() Экспорт

	Возврат ".exe;.application;.msi;.msp;.pif;.com;.scr;.msc;.cpl;.gadget;.jar;.hta;.bat;.cmd;.vb;.vbs;.vbe;.ws;.wsf;.wsc;.wsh;.js;.jse;.ps1;.ps1xml;.ps2;.ps2xml;.psc1;.psc2;.msh;.msh1;.msh2;.mshxml;.msh1xml;.msh2xml;.scf;.inf;.lnk;.reg;.xml;";

КонецФункции

// Возвращает доступные расширения файлов визуализации публикуемого документа.
// 
// Возвращаемое значение:
//  Строка - форматы файла визуализации.
//
Функция ДоступныеРасширенияФайловВизуализации() Экспорт
	
	Возврат "pdf;";
	
КонецФункции

// Возвращает способы загрузки документа в учетную базу.
//
// Возвращаемое значение:
//  Структура - способы загрузки документа:
//   * КакПрисоединенныйФайл - Строка
//   * КакНовыйДокумент - Строка
//
Функция СпособыЗагрузкиДокумента() Экспорт
	
	ВидыФайлов = Новый Структура;
	ВидыФайлов.Вставить("КакПрисоединенныйФайл", "КакПрисоединенныйФайл");
	ВидыФайлов.Вставить("КакНовыйДокумент", "КакНовыйДокумент");
	
	Возврат ВидыФайлов;
	
КонецФункции

// Возвращает виды файлов электронного документа.
//
// Возвращаемое значение:
//  Структура - виды файлов документа:
//   * ФайлВизуализации - Строка
//   * ГлавныйФайл - Строка
//
Функция ВидыФайловДокумента() Экспорт
	
	ВидыФайлов = Новый Структура;
	ВидыФайлов.Вставить("ФайлВизуализации", "ФайлВизуализации");
	ВидыФайлов.Вставить("ГлавныйФайл", "ГлавныйФайл");
	
	Возврат ВидыФайлов;
	
КонецФункции

// Возвращает схемы публикации электронного документа в сервисе.
//
// Возвращаемое значение:
//  Структура - схемы публикации:
//   * Стандартная - Строка
//   * ТолькоПубликация - Строка
//
Функция СхемыПубликацииДокумента() Экспорт
	
	СхемыПубликации = Новый Структура;
	СхемыПубликации.Вставить("Стандартная", "Стандартная");
	СхемыПубликации.Вставить("ТолькоПубликация", "ТолькоПубликация");
	
	Возврат СхемыПубликации;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область Словарь

Функция ИмяПроцедурыЗагрузитьЭлектронныйДокументПоИдентификаторуДокумента() Экспорт
	
	Возврат "ИнтеграцияShare.ЗагрузитьЭлектронныйДокументПоИдентификаторуДокумента";
	
КонецФункции

Функция ИмяПроцедурыСоздатьВУчетеЭлектронныйДокумент() Экспорт
	
	Возврат "ИнтеграцияShare.СоздатьВУчетеЭлектронныйДокумент";
	
КонецФункции

Функция ИмяПроцедурыОпубликоватьЭлектронныйДокумент() Экспорт
	
	Возврат "ИнтеграцияShare.ОпубликоватьИПолучитьСсылкуНаСкачиваниеДокументаВФоне";
	
КонецФункции

Функция ИмяПроцедурыЗагрузитьЭлектронныйДокументаПоПубличнойСсылкеИзСервиса() Экспорт
	
	Возврат "ИнтеграцияShare.ЗагрузитьЭлектронныйДокументаПоПубличнойСсылкеИзСервиса";
	
КонецФункции

Функция ИмяПроцедурыЗагрузитьЭлектронныйДокументВОбъектУчета() Экспорт
	
	Возврат "ИнтеграцияShare.ЗагрузитьЭлектронныйДокументВОбъектУчета";
	
КонецФункции

Функция ИмяРезультатаГлобальногоПоискаЗагрузитьДокумент() Экспорт
	
	Возврат "ЗагрузитьДокументСервисShare";
	
КонецФункции

#КонецОбласти

#Область РаботаСФайлами

// Параметры:
//  РасширениеФайла - Строка - расширение файла. Пример: "png"
//
// Возвращаемое значение:
//  Число - индекс картинки КоллекцияПиктограммФайлов.
//
Функция ПолучитьИндексПиктограммыФайла(Знач РасширениеФайла) Экспорт
	
	Если РасширениеФайла = Неопределено Тогда
		Возврат 0;
	КонецЕсли;
	
	РасширениеФайлаБезТочки = ОбщегоНазначенияКлиентСервер.РасширениеБезТочки(РасширениеФайла);
	
	Расширение = "." + НРег(РасширениеФайлаБезТочки) + ";";
	
	Если СтрНайти(".dt;.1cd;.cf;.cfu;", Расширение) <> 0 Тогда
		Возврат 6; // Файлы 1С.
		
	ИначеЕсли Расширение = ".mxl;" Тогда
		Возврат 8; // Табличный Файл.
		
	ИначеЕсли СтрНайти(".txt;.log;.ini;", Расширение) <> 0 Тогда
		Возврат 10; // Текстовый Файл.
		
	ИначеЕсли Расширение = ".epf;" Тогда
		Возврат 12; // Внешние обработки.
		
	ИначеЕсли СтрНайти(".ico;.wmf;.emf;",Расширение) <> 0 Тогда
		Возврат 14; // Картинки.
		
	ИначеЕсли СтрНайти(".htm;.html;.url;.mht;.mhtml;",Расширение) <> 0 Тогда
		Возврат 16; // HTML.
		
	ИначеЕсли СтрНайти(".doc;.dot;.rtf;",Расширение) <> 0 Тогда
		Возврат 18; // Файл Microsoft Word.
		
	ИначеЕсли СтрНайти(".xls;.xlw;",Расширение) <> 0 Тогда
		Возврат 20; // Файл Microsoft Excel.
		
	ИначеЕсли СтрНайти(".ppt;.pps;",Расширение) <> 0 Тогда
		Возврат 22; // Файл Microsoft PowerPoint.
		
	ИначеЕсли СтрНайти(".vsd;",Расширение) <> 0 Тогда
		Возврат 24; // Файл Microsoft Visio.
		
	ИначеЕсли СтрНайти(".mpp;",Расширение) <> 0 Тогда
		Возврат 26; // Файл Microsoft Visio.
		
	ИначеЕсли СтрНайти(".mdb;.adp;.mda;.mde;.ade;",Расширение) <> 0 Тогда
		Возврат 28; // База данных Microsoft Access.
		
	ИначеЕсли СтрНайти(".xml;",Расширение) <> 0 Тогда
		Возврат 30; // xml.
		
	ИначеЕсли СтрНайти(".msg;.eml;",Расширение) <> 0 Тогда
		Возврат 32; // Письмо электронной почты.
		
	ИначеЕсли СтрНайти(".zip;.rar;.arj;.cab;.lzh;.ace;",Расширение) <> 0 Тогда
		Возврат 34; // Архивы.
		
	ИначеЕсли СтрНайти(".exe;.com;.bat;.cmd;",Расширение) <> 0 Тогда
		Возврат 36; // Исполняемые файлы.
		
	ИначеЕсли СтрНайти(".grs;",Расширение) <> 0 Тогда
		Возврат 38; // Графическая схема.
		
	ИначеЕсли СтрНайти(".geo;",Расширение) <> 0 Тогда
		Возврат 40; // Географическая схема.
		
	ИначеЕсли СтрНайти(".jpg;.jpeg;.jp2;.jpe;",Расширение) <> 0 Тогда
		Возврат 42; // jpg.
		
	ИначеЕсли СтрНайти(".bmp;.dib;",Расширение) <> 0 Тогда
		Возврат 44; // bmp.
		
	ИначеЕсли СтрНайти(".tif;.tiff;",Расширение) <> 0 Тогда
		Возврат 46; // tif.
		
	ИначеЕсли СтрНайти(".gif;",Расширение) <> 0 Тогда
		Возврат 48; // gif.
		
	ИначеЕсли СтрНайти(".png;",Расширение) <> 0 Тогда
		Возврат 50; // png.
		
	ИначеЕсли СтрНайти(".pdf;",Расширение) <> 0 Тогда
		Возврат 52; // pdf.
		
	ИначеЕсли СтрНайти(".odt;",Расширение) <> 0 Тогда
		Возврат 54; // Open Office writer.
		
	ИначеЕсли СтрНайти(".odf;",Расширение) <> 0 Тогда
		Возврат 56; // Open Office math.
		
	ИначеЕсли СтрНайти(".odp;",Расширение) <> 0 Тогда
		Возврат 58; // Open Office Impress.
		
	ИначеЕсли СтрНайти(".odg;",Расширение) <> 0 Тогда
		Возврат 60; // Open Office draw.
		
	ИначеЕсли СтрНайти(".ods;",Расширение) <> 0 Тогда
		Возврат 62; // Open Office calc.
		
	ИначеЕсли СтрНайти(".mp3;",Расширение) <> 0 Тогда
		Возврат 64;
		
	ИначеЕсли СтрНайти(".erf;",Расширение) <> 0 Тогда
		Возврат 66; // Внешние отчеты.
		
	ИначеЕсли СтрНайти(".docx;",Расширение) <> 0 Тогда
		Возврат 68; // Файл Microsoft Word docx.
		
	ИначеЕсли СтрНайти(".xlsx;",Расширение) <> 0 Тогда
		Возврат 70; // Файл Microsoft Excel xlsx.
		
	ИначеЕсли СтрНайти(".pptx;.ppt",Расширение) <> 0 Тогда
		Возврат 72; // Файл Microsoft PowerPoint pptx.
		
	ИначеЕсли СтрНайти(".p7s;.sgn;.sig;.sign;",Расширение) <> 0 Тогда
		Возврат 74; // Файл подписи.
		
	ИначеЕсли СтрНайти(".p7m;",Расширение) <> 0 Тогда
		Возврат 76; // зашифрованное сообщение.

	ИначеЕсли СтрНайти(".json;.csv;",Расширение) <> 0 Тогда
		Возврат 4; // Файлы без специальной картинки.

	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

// Параметры:
//  РазмерФайла - Число - размер файла в байтах.
//
// Возвращаемое значение:
//  Число - размер файла в мегабайтах.
//
Функция РазмерФайлаИзБайтовВМегабайты(Знач РазмерФайла) Экспорт
	
	Возврат Окр(РазмерФайла/(1024*1024));
	
КонецФункции

#КонецОбласти

#КонецОбласти