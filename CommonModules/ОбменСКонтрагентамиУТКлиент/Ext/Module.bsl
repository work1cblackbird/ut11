#Область ПрограммныйИнтерфейс

// См. ОбменСКонтрагентамиКлиентПереопределяемый.ОткрытьФормуПодбораТоваров.
Процедура ОткрытьФормуПодбораТоваров(ИдентификаторФормы, ОбработкаПродолжения) Экспорт
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Заголовок",               	НСтр("ru = 'Подбор товаров'"));
	ПараметрыФормы.Вставить("ЗаголовокКнопкиПеренести", НСтр("ru = 'Сформировать электронный документ'"));
	ПараметрыФормы.Вставить("УникальныйИдентификатор",	ИдентификаторФормы);
	ПараметрыФормы.Вставить("ОтборПоТипуНоменклатуры", 	НоменклатураКлиентСервер.ОтборПоТоваруМногооборотнойТареУслугеРаботе(Ложь));
	
	ОткрытьФорму("Обработка.ПодборТоваровПоОтбору.Форма", ПараметрыФормы, , , ,	, ОбработкаПродолжения);
	
КонецПроцедуры

// См. ОбменСКонтрагентамиКлиентПереопределяемый.ПриВыбореДоговораКонтрагента.
Процедура ПриВыбореДоговораКонтрагента(Параметры, Владелец, ОповещениеОЗакрытии, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Отбор = Новый Структура;
	Если ТипЗнч(Параметры.Контрагент) = Тип("СправочникСсылка.Организации") Тогда
		Если ОбщегоНазначенияУТВызовСервера.ЗначениеФункциональнойОпции("ИспользоватьДоговорыМеждуОрганизациями") Тогда
			Отбор.Вставить("ОрганизацияПолучатель"   , Параметры.Контрагент);
			Отбор.Вставить("Организация", Параметры.Организация);
			
			ПараметрыФормы = Новый Структура("Отбор", Отбор);
			ОткрытьФорму("Справочник.ДоговорыМеждуОрганизациями.ФормаВыбора", ПараметрыФормы, Владелец,,,,ОповещениеОЗакрытии);
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Использование договор между организациями отключено!'"));
		КонецЕсли;
	Иначе
		Отбор.Вставить("Контрагент"   , Параметры.Контрагент);
		Отбор.Вставить("Организация", Параметры.Организация);
		
		ПараметрыФормы = Новый Структура("Отбор", Отбор);
		ОткрытьФорму("Справочник.ДоговорыКонтрагентов.ФормаВыбора", ПараметрыФормы, Владелец,,,,ОповещениеОЗакрытии);
	КонецЕсли;
	
КонецПроцедуры

// См. ОбменСКонтрагентамиКлиентПереопределяемый.ПроверитьИспользованиеИнтернетПоддержкаПользователей.
Процедура ПроверитьИспользованиеИнтернетПоддержкаПользователей(Использование) Экспорт
	
	Если СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиента().РазделениеВключено Тогда
		Использование = Ложь;
	Иначе
		Использование = Истина;
	КонецЕсли;
	
КонецПроцедуры

// См. ОбменСКонтрагентамиКлиентПереопределяемый.ПриПодбореУчетногоДокумента.
Процедура ПриПодбореУчетногоДокумента(Знач Настройки, Знач ОповещениеОВыборе, СтандартнаяОбработка = Истина) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура("РежимВыбора, ЗакрыватьПриВыборе", Истина, Истина);
	Отбор = Новый Структура("Контрагент, Организация", Настройки.Контрагент, Настройки.Организация);
	ПараметрыФормы.Вставить("Отбор", Отбор);
	
	Если Настройки.ИмяОбъектаМетаданных = "Документ.СчетФактураПолученный" Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ПараметрыФормы", ПараметрыФормы);
		ДополнительныеПараметры.Вставить("ОповещениеОВыборе", ОповещениеОВыборе);
		
		Оповещение = Новый ОписаниеОповещения("ПриПодбореУчетногоДокументаЗавершение", ЭлектронноеВзаимодействиеУТКлиент, ДополнительныеПараметры);
		
		ТекстВопроса = НСтр("ru='Какой список счетов-фактур открыть?'");
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить("1", НСтр("ru = 'СФ полученные'"));
		Кнопки.Добавить("2", НСтр("ru = 'СФ полученные (аванс)'"));
		Кнопки.Добавить("3", НСтр("ru = 'СФ полученные налогового агента'"));
		Кнопки.Добавить("4", НСтр("ru = 'СФ между организациями'"));
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки);
	ИначеЕсли Настройки.ИмяОбъектаМетаданных = "Документ.ПередачаТоваровМеждуОрганизациями"
		Или Настройки.ИмяОбъектаМетаданных = "Документ.ВозвратТоваровМеждуОрганизациями" Тогда
		Отбор = Новый Структура("Организация, ОрганизацияПолучатель", Настройки.Контрагент, Настройки.Организация);
		ПараметрыФормы.Вставить("Отбор", Отбор);
		
		ОткрытьФорму(Настройки.ИмяОбъектаМетаданных + ".ФормаВыбора", 
			ПараметрыФормы,,,,, ОповещениеОВыборе, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	Иначе
		ОткрытьФорму(Настройки.ИмяОбъектаМетаданных + ".ФормаВыбора", 
			ПараметрыФормы,,,,, ОповещениеОВыборе, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

// См. ОбменСКонтрагентамиКлиентПереопределяемый.СоздатьКонтрагентаИнтерактивно
Процедура СоздатьКонтрагентаИнтерактивно(РеквизитыКонтрагента, ОписаниеОповещенияОСозданииКонтрагента) Экспорт
	
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Наименование", РеквизитыКонтрагента.Наименование);
	СтруктураЗаполнения.Вставить("НаименованиеПолное", РеквизитыКонтрагента.Наименование);
	СтруктураЗаполнения.Вставить("ИНН", РеквизитыКонтрагента.ИНН);
	СтруктураЗаполнения.Вставить("КПП", РеквизитыКонтрагента.КПП);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураЗаполнения", СтруктураЗаполнения);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОписаниеОповещенияОСозданииКонтрагента", ОписаниеОповещенияОСозданииКонтрагента);
	
	ИспользоватьПартнеровКакКонтрагентов = Ложь;
	ИспользоватьПартнеровКакКонтрагентов = ЭлектронноеВзаимодействиеУТВызовСервера.ПолучитьЗначениеФО("ИспользоватьПартнеровКакКонтрагентов");
	
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения(Неопределено,, ДополнительныеПараметры);
	Если Не ИспользоватьПартнеровКакКонтрагентов Тогда
		ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаЭлемента", ПараметрыФормы,,,,, ОписаниеОповещенияОЗакрытии);
	Иначе
		ОткрытьФорму("Справочник.Партнеры.Форма.ФормаЭлементаРеквизитыКонтрагента", ПараметрыФормы,,,,, ОписаниеОповещенияОЗакрытии);
	КонецЕсли;
	
КонецПроцедуры

// См. ОбменСКонтрагентамиКлиентПереопределяемый.ВыбратьКонтрагента
Процедура ВыбратьКонтрагента(РеквизитыОтбораКонтрагента, ОписаниеОповещенияОЗакрытии) Экспорт
	
	Отбор = Новый Структура;
	Если ЗначениеЗаполнено(РеквизитыОтбораКонтрагента.Наименование) Тогда
		Отбор.Вставить("Наименование", РеквизитыОтбораКонтрагента.Наименование);
	КонецЕсли;
	Если ЗначениеЗаполнено(РеквизитыОтбораКонтрагента.ИНН) Тогда
		Отбор.Вставить("ИНН", РеквизитыОтбораКонтрагента.ИНН);
	КонецЕсли;
	Если ЗначениеЗаполнено(РеквизитыОтбораКонтрагента.КПП) Тогда
		Отбор.Вставить("КПП", РеквизитыОтбораКонтрагента.КПП);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Отбор);

	ОткрытьФорму("Справочник.Контрагенты.ФормаВыбора", ПараметрыФормы,,,,, ОписаниеОповещенияОЗакрытии)
	
КонецПроцедуры

// Изменяет доступность команды перезаполнения по ЭД
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма учетного документа.
//  Доступность - Булево - Значение доступности.
//
Процедура ИзменитьДоступностьКомандыПерезаполнить(Форма, Доступность = Ложь) Экспорт
	
	МассивЭлементовДляПоиска = Новый Массив;
	МассивЭлементовДляПоиска.Добавить("ПодменюЭДОПерезаполнитьДокумент1");
	МассивЭлементовДляПоиска.Добавить("ПодменюЭДОПерезаполнитьДокумент2");
	МассивЭлементовДляПоиска.Добавить("ПодменюЭДОПерезаполнитьДокумент3");
	МассивЭлементовДляПоиска.Добавить("ПодменюЭДОПерезаполнитьДокумент4");
		
	Для Каждого ИскомыйЭлемент Из МассивЭлементовДляПоиска Цикл
		КомандаПерезаполнить = Форма.Элементы.Найти(ИскомыйЭлемент);
		Если КомандаПерезаполнить <> Неопределено Тогда
			КомандаПерезаполнить.Доступность = Доступность;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПередВыполнениемКомандыЭДОСправочник() Экспорт
	
	ИмяПараметра = "ЭлектронноеВзаимодействие.ФормаФорматДоговорныйДокумент101";
	Если ПараметрыПриложения[ИмяПараметра] = Неопределено Тогда
		ПараметрыПриложения.Вставить(ИмяПараметра, Новый Соответствие);
	КонецЕсли;
	
	Форма = ПараметрыПриложения[ИмяПараметра].Получить("ФормаВыполнениеКлиентскихМетодов");
	
	Если Форма = Неопределено Тогда
		Форма = ПолучитьФорму("Обработка.ФорматДоговорнойДокумент101XML.Форма.ФормаВыбораФайлаПДФ_А3ДляЭД");
		ПараметрыПриложения[ИмяПараметра].Вставить("ФормаВыполнениеКлиентскихМетодов", Форма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
