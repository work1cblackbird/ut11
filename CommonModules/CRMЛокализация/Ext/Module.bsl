
#Область ПрограммныйИнтерфейс

#Область Сделки

Процедура ДополнитьЗапросДляРасчетаПотенциалаСделки(ТекстЗапроса) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКоммерческиеПредложенияКлиентам") Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаУпорядочить = "
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДПОРЯДОК";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, СтрокаУпорядочить, "");
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КоммерческоеПредложениеКлиенту.Ссылка,
	|	2.5,
	|	ВЫБОР
	|		КОГДА КоммерческоеПредложениеКлиенту.Валюта = КурсыВалютыУпр.Валюта
	|			ТОГДА КоммерческоеПредложениеКлиенту.СуммаДокумента
	|		ИНАЧЕ КоммерческоеПредложениеКлиенту.СуммаДокумента * ЕСТЬNULL(КурсыВалютыДокумента.КурсЧислитель, 1) * ЕСТЬNULL(КурсыВалютыУпр.КурсЗнаменатель, 1) / (ЕСТЬNULL(КурсыВалютыУпр.КурсЧислитель, 1) * ЕСТЬNULL(КурсыВалютыДокумента.КурсЗнаменатель, 1))
	|	КОНЕЦ,
	|	ПРЕДСТАВЛЕНИЕ(КоммерческоеПредложениеКлиенту.Статус)
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(, БазоваяВалюта = &БазоваяВалюта) КАК КурсыВалютыДокумента
	|		ПО КоммерческоеПредложениеКлиенту.Валюта = КурсыВалютыДокумента.Валюта,
	|	РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(
	|			,
	|			Валюта В
	|				(ВЫБРАТЬ
	|					Константы.ВалютаУправленческогоУчета
	|				ИЗ
	|					Константы КАК Константы)
	|			И БазоваяВалюта = &БазоваяВалюта) КАК КурсыВалютыУпр
	|ГДЕ
	|	КоммерческоеПредложениеКлиенту.ПометкаУдаления = ЛОЖЬ
	|	И КоммерческоеПредложениеКлиенту.Сделка = &ОтборДокумента
	|	И КоммерческоеПредложениеКлиенту.СуммаДокумента > 0
	|";
	
	ТекстЗапроса = ТекстЗапроса + СтрокаУпорядочить;
	
КонецПроцедуры

#КонецОбласти

#Область ДокументыПоПартнеруИСделке

Процедура ДополнитьУсловиеЗапросаПоАктуальностиДокумента(ИмяДокумента, ТекстУсловия) Экспорт
	
	Если ИмяДокумента = "КоммерческоеПредложениеКлиенту" Тогда
		
		ТекстУсловия = ТекстУсловия 
		               + ?(ПустаяСтрока(ТекстУсловия),"", " И ")
		               + " %ПутьКТаблицеРеквизита%.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыКоммерческихПредложенийКлиентам.Отменено)";
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОтчетСоставПродажи

Процедура ДополнитьСписокДокументовФормирующихОтчетСоставПродажи(СписокИменТабличныхЧастейДокументов) Экспорт
	
	СписокИменТабличныхЧастейДокументов.Вставить(0, "КоммерческоеПредложениеКлиенту.Товары", НСтр("ru = 'В коммерческих предложениях'"));
	
КонецПроцедуры

#КонецОбласти

#Область ДосьеПартнера

Процедура ДополнитьТекстЗапросаОтчетДосьеПартнера(ОтчетОбъект, Запрос, СоответствиеЗапросыДанные, НомерПоследнегоПакета) Экспорт
	
	//++ Локализация
	
	Если ОтчетОбъект.ДанныеКлиента Тогда
		
		Запрос.Текст = Запрос.Текст + ТекстЗапросаОДействующихЗапросахКоммерческихПредложенийОтКлиента(СоответствиеЗапросыДанные,НомерПоследнегоПакета);
		Запрос.Текст = Запрос.Текст + ТекстЗапросаОДействующихКоммерческихПредложенияхКлиенту(СоответствиеЗапросыДанные,НомерПоследнегоПакета);
		
	КонецЕсли;
	
	Если ОтчетОбъект.ДанныеПоставщика Тогда
		
		Запрос.Текст = Запрос.Текст + ТекстЗапросаОДействующихКоммерческихПредложенияхПоставщика(СоответствиеЗапросыДанные,НомерПоследнегоПакета);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПриВыводеДанныхКлиентаОтчетДосьеПартнера(ОтчетОбъект, МассивРезультатовЗапросовПоПартнеру, СоответствиеЗапросыДанные, ТаблицаОтчета, Макет) Экспорт
	
	//++ Локализация
	
	Если СоответствиеЗапросыДанные["ЗапросКоммерческогоПредложенияОтКлиента"] <> Неопределено Тогда
		ВывестиДанныеОАктуальныхЗапросахКоммерческихПредложений(ОтчетОбъект,
		                                                        МассивРезультатовЗапросовПоПартнеру[СоответствиеЗапросыДанные["ЗапросКоммерческогоПредложенияОтКлиента"]],
		                                                        ТаблицаОтчета,
		                                                        Макет);
	КонецЕсли;
	
	Если СоответствиеЗапросыДанные["КоммерческиеПредложения"] <> Неопределено Тогда
		ВывестиДанныеОДействующихКоммерческихПредложениях(ОтчетОбъект, 
		                                                  МассивРезультатовЗапросовПоПартнеру[СоответствиеЗапросыДанные["КоммерческиеПредложения"]],
		                                                  ТаблицаОтчета,
		                                                  Макет, 
		                                                  "Клиенту");
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПриВыводеДанныхПоставщикаОтчетДосьеПартнера(ОтчетОбъект, МассивРезультатовЗапросовПоПартнеру, СоответствиеЗапросыДанные, ТаблицаОтчета, Макет) Экспорт
	
	//++ Локализация
	
	Если СоответствиеЗапросыДанные["КоммерческиеПредложенияПоставщика"] <> Неопределено Тогда
		ВывестиДанныеОДействующихКоммерческихПредложениях(ОтчетОбъект,
		                                                  МассивРезультатовЗапросовПоПартнеру[СоответствиеЗапросыДанные["КоммерческиеПредложенияПоставщика"]],
		                                                  ТаблицаОтчета,
		                                                  Макет,
		                                                  "Поставщику");
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область КалендарьСобытий

Процедура ПриПолученииТекстаЗапросаПоВидуСобытия(ОтчетОбъект, ВидСобытия, Запрос, ТекстЗапроса, СтруктураФормированияОтчета) Экспорт
	
	Если ВидСобытия = "КоммерческиеПредложения" Тогда
		ТекстЗапроса = ТекстЗапросаКоммерческиеПредложенияКалендарьСобытий(ОтчетОбъект, Запрос, ТекстЗапроса, СтруктураФормированияОтчета);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьДеревоСобытийОтчетКалендарьСобытий(РодительскийУзел) Экспорт
	
	ЕстьПравоКоммерческиеПредложенияКлиентов    = ПравоДоступа("Чтение",Метаданные.Документы.КоммерческоеПредложениеКлиенту);
	ИспользуютсяКоммерческиеПредложенияКлиентам = ПолучитьФункциональнуюОпцию("ИспользоватьКоммерческиеПредложенияКлиентам");
	
	Если РодительскийУзел.ВидСобытия = "Продажи" 
		И ЕстьПравоКоммерческиеПредложенияКлиентов
		И ИспользуютсяКоммерческиеПредложенияКлиентам Тогда
		
		ДобавитьВДеревоВидСобытия(РодительскийУзел, "КоммерческиеПредложения", НСтр("ru = 'Коммерческие предложения клиентам'"));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация

#Область ДосьеПартнера

Функция ТекстЗапросаОДействующихЗапросахКоммерческихПредложенийОтКлиента(СоответствиеЗапросыДанные,НомерПоследнегоПакета)
	
	Если (Не ПравоДоступа("Чтение",Метаданные.Документы.ЗапросКоммерческогоПредложенияОтКлиента))
		Или (Не ПолучитьФункциональнуюОпцию("ИспользоватьЗапросыКоммерческихПредложенийОтКлиента")) Тогда
		Возврат "";
	КонецЕсли;
	
	СоответствиеЗапросыДанные.Вставить("ЗапросКоммерческогоПредложенияОтКлиента",НомерПоследнегоПакета + 1);
	НомерПоследнегоПакета = НомерПоследнегоПакета + 1;
	
	Возврат "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапросКоммерческогоПредложенияОтКлиента.Ссылка                     КАК Ссылка,
	|	ЗапросКоммерческогоПредложенияОтКлиента.Номер                      КАК Номер,
	|	ЗапросКоммерческогоПредложенияОтКлиента.Дата                       КАК Дата,
	|	ЗапросКоммерческогоПредложенияОтКлиента.Менеджер                   КАК Ответственный,
	|	 ЗапросКоммерческогоПредложенияОтКлиента.ДатаОкончанияРассмотрения КАК ДатаОкончанияРассмотрения
	|ИЗ
	|	Документ.ЗапросКоммерческогоПредложенияОтКлиента КАК ЗапросКоммерческогоПредложенияОтКлиента
	|ГДЕ
	|	НЕ ЗапросКоммерческогоПредложенияОтКлиента.ПометкаУдаления
	|	И ЗапросКоммерческогоПредложенияОтКлиента.ДатаОкончанияРассмотрения >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|	И ЗапросКоммерческогоПредложенияОтКлиента.Клиент = &Партнер
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Ссылка)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
КонецФункции

Функция ТекстЗапросаОДействующихКоммерческихПредложенияхКлиенту(СоответствиеЗапросыДанные,НомерПоследнегоПакета)
	
	Если (НЕ ПравоДоступа("Чтение",Метаданные.Документы.КоммерческоеПредложениеКлиенту))
		Или (НЕ ПолучитьФункциональнуюОпцию("ИспользоватьКоммерческиеПредложенияКлиентам")) Тогда
		Возврат "";
	КонецЕсли;
	
	СоответствиеЗапросыДанные.Вставить("КоммерческиеПредложения",НомерПоследнегоПакета + 1);
	НомерПоследнегоПакета = НомерПоследнегоПакета + 1;

	Возврат "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КоммерческоеПредложениеКлиенту.Ссылка КАК Ссылка,
	|	КоммерческоеПредложениеКлиенту.Номер КАК Номер,
	|	КоммерческоеПредложениеКлиенту.Дата КАК Дата,
	|	КоммерческоеПредложениеКлиенту.СуммаДокумента КАК СуммаДокумента,
	|	КоммерческоеПредложениеКлиенту.Валюта КАК Валюта,
	|	КоммерческоеПредложениеКлиенту.Менеджер КАК Ответственный,
	|
	|ВЫБОР
	|	КОГДА КоммерческоеПредложениеКлиенту.СрокДействия = ДАТАВРЕМЯ(1, 1, 1)
	|		ТОГДА &СтрокаБезОграничения
	|	ИНАЧЕ КоммерческоеПредложениеКлиенту.СрокДействия
	|КОНЕЦ КАК СрокДействия
	|
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
	|ГДЕ
	|	КоммерческоеПредложениеКлиенту.Проведен
	|	И (КоммерческоеПредложениеКлиенту.СрокДействия >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ИЛИ КоммерческоеПредложениеКлиенту.СрокДействия = ДАТАВРЕМЯ(1, 1, 1))
	|	И КоммерческоеПредложениеКлиенту.Клиент = &Партнер
	|	И КоммерческоеПредложениеКлиенту.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКоммерческихПредложенийКлиентам.Действует)
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Ссылка),
	|	СУММА(СуммаДокумента)
	|ПО
	|	ОБЩИЕ,
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
КонецФункции

Функция ТекстЗапросаОДействующихКоммерческихПредложенияхПоставщика(СоответствиеЗапросыДанные,НомерПоследнегоПакета)
	
	Если (Не ПравоДоступа("Чтение",Метаданные.Документы.КоммерческоеПредложениеПоставщика))
		Или (Не ПолучитьФункциональнуюОпцию("ИспользоватьКоммерческиеПредложенияПоставщиков")) Тогда
		Возврат "";
	КонецЕсли;
	
	СоответствиеЗапросыДанные.Вставить("КоммерческиеПредложенияПоставщика",НомерПоследнегоПакета + 1);
	НомерПоследнегоПакета = НомерПоследнегоПакета + 1;

	Возврат "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КоммерческоеПредложениеПоставщика.Ссылка         КАК Ссылка,
	|	КоммерческоеПредложениеПоставщика.Номер          КАК Номер,
	|	КоммерческоеПредложениеПоставщика.Дата           КАК Дата,
	|	КоммерческоеПредложениеПоставщика.СуммаДокумента КАК СуммаДокумента,
	|	КоммерческоеПредложениеПоставщика.Валюта         КАК Валюта,
	|	КоммерческоеПредложениеПоставщика.Менеджер       КАК Ответственный,
	|
	|ВЫБОР
	|	КОГДА КоммерческоеПредложениеПоставщика.СрокДействия = ДАТАВРЕМЯ(1, 1, 1)
	|		ТОГДА &СтрокаБезОграничения
	|	ИНАЧЕ КоммерческоеПредложениеПоставщика.СрокДействия
	|КОНЕЦ КАК СрокДействия
	|
	|ИЗ
	|	Документ.КоммерческоеПредложениеПоставщика КАК КоммерческоеПредложениеПоставщика
	|ГДЕ
	|	КоммерческоеПредложениеПоставщика.Проведен
	|	И (КоммерческоеПредложениеПоставщика.СрокДействия >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ИЛИ КоммерческоеПредложениеПоставщика.СрокДействия = ДАТАВРЕМЯ(1, 1, 1))
	|	И КоммерческоеПредложениеПоставщика.Поставщик = &Партнер
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Ссылка),
	|	СУММА(СуммаДокумента)
	|ПО
	|	ОБЩИЕ,
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
КонецФункции

Процедура ВывестиДанныеОДействующихКоммерческихПредложениях(ОтчетОбъект, РезультатЗапросаПоКоммерческимПредложениям, ТаблицаОтчета, Макет, ТипКоммерческогоПредложения)

	Если РезультатЗапросаПоКоммерческимПредложениям.Пустой() Тогда
		Возврат;
	КонецЕсли;

	// Вывод шапки
	ОтчетОбъект.ВывестиОбластьБезПараметров("ПустаяСтрока",Макет,ТаблицаОтчета);
	
	ВыборкаИтоги = РезультатЗапросаПоКоммерческимПредложениям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаИтоги.Следующий();
	
	ВсегоЗаказов = ВыборкаИтоги.Ссылка;
	
	Если ТипКоммерческогоПредложения = "Поставщику" Тогда
		СтрокаТипПредложения = НСтр("ru = 'поставщика'");
	Иначе
		СтрокаТипПредложения = НСтр("ru = 'клиенту'");
	КонецЕсли;
	
	ТекстЗаголовка = НСтр("ru='Действующих коммерческих предложений'") +" " + СтрокаТипПредложения + " - " + ВсегоЗаказов;

	ПерваяВалюта = Истина;
	ВыборкаВалюты = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаВалюты.Следующий() Цикл
		
		Если ВыборкаВалюты.Ссылка = ВсегоЗаказов Тогда
			ТекстЗаголовка =  ТекстЗаголовка + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(" " + НСтр("ru='на сумму %1 %2'") + ", ", 
			                                                                                           ВыборкаВалюты.СуммаДокумента,
			                                                                                           ВыборкаВалюты.Валюта);
		Иначе
			ТекстЗаголовка =  ТекстЗаголовка + ?(ПерваяВалюта,", " + НСтр("ru='в том числе:'"), "") 
			                                 + Символы.ПС
			                                 + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(" " + НСтр("ru='%1 КП на сумму %2 %3'") + ", ",
			                                                                                             ВыборкаВалюты.Ссылка,
			                                                                                             ВыборкаВалюты.СуммаДокумента,
			                                                                                             ВыборкаВалюты.Валюта);
			ПерваяВалюта =  Ложь;
		КонецЕсли;
	
	КонецЦикла;
	
	ТекстЗаголовка = Лев(ТекстЗаголовка,СтрДлина(ТекстЗаголовка)-2) + ".";
	ОтчетОбъект.ВывестиЗаголовокПодраздела(Макет,ТаблицаОтчета,ТекстЗаголовка);
	
	// Вывод таблицы
	ТаблицаОтчета.НачатьГруппуСтрок("КоммерческиеПредложения");
	ОтчетОбъект.ВывестиОбластьБезПараметров("КоммерческиеПредложенияШапка",Макет,ТаблицаОтчета);
	
	ЧетнаяСтрока = Ложь;
	ВыборкаВалюты.Сбросить();
	Пока ВыборкаВалюты.Следующий() Цикл
		ВыборкаДетали = ВыборкаВалюты.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			
			Область = Макет.ПолучитьОбласть("КоммерческиеПредложенияСтрока");
			ЗаполнитьЗначенияСвойств(Область.Параметры,ВыборкаДетали);
			Область.Параметры.НомерДата = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='№ %1 от %2'"),
			                                                                                      ВыборкаДетали.Номер, 
			                                                                                      ВыборкаДетали.Дата);
			Если ЧетнаяСтрока Тогда
				ОбластьКоммерческоеПредложение = Область.Области.СтрокаТаблицыКП; // ОбластьЯчеекТабличногоДокумента 
				ОбластьКоммерческоеПредложение.ЦветФона = ЦветаСтиля.АльтернативныйЦветФонаПоля;
			КонецЕсли;
			ТаблицаОтчета.Вывести(Область,2);
			
			ЧетнаяСтрока = НЕ ЧетнаяСтрока;
			
		КонецЦикла;
	КонецЦикла;
	
	ТаблицаОтчета.ЗакончитьГруппуСтрок();
	
КонецПроцедуры

Процедура ВывестиДанныеОАктуальныхЗапросахКоммерческихПредложений(ОтчетОбъект, РезультатЗапросаЗапросыКоммерческихПредложений, ТаблицаОтчета, Макет)
	
	Если РезультатЗапросаЗапросыКоммерческихПредложений.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ОтчетОбъект.ВывестиОбластьБезПараметров("ПустаяСтрока", Макет, ТаблицаОтчета);
	ВыборкаИтоги = РезультатЗапросаЗапросыКоммерческихПредложений.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаИтоги.Следующий();
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Актуальных запросов коммерческих предложений от клиентов - %1.'"),
	                                                                         ВыборкаИтоги.Ссылка);
	
	ОтчетОбъект.ВывестиЗаголовокПодраздела(Макет,ТаблицаОтчета,ТекстЗаголовка);
	ТаблицаОтчета.НачатьГруппуСтрок("ЗапросыКоммерческихПредложений");
	
	// Вывод таблицы
	ОтчетОбъект.ВывестиОбластьБезПараметров("ЗапросыКоммерческихПредложенийШапка",Макет,ТаблицаОтчета);
	
	ЧетнаяСтрока = Ложь;
	ВыборкаДетали = ВыборкаИтоги.Выбрать();
	Пока ВыборкаДетали.Следующий() Цикл
		
		Область = Макет.ПолучитьОбласть("ЗапросыКоммерческихПредложенийСтрока");
		ЗаполнитьЗначенияСвойств(Область.Параметры, ВыборкаДетали);
		Область.Параметры.НомерДата = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='№ %1 от %2'"),
		                                                                                      ВыборкаДетали.Номер, 
		                                                                                      ВыборкаДетали.Дата);
		Если ЧетнаяСтрока Тогда
			ОбластьЗКП = Область.Области.СтрокаТаблицыЗКП; // ОбластьЯчеекТабличногоДокумента 
			ОбластьЗКП.ЦветФона = ЦветаСтиля.АльтернативныйЦветФонаПоля;
		КонецЕсли;
		ТаблицаОтчета.Вывести(Область,2);
		
		ЧетнаяСтрока = НЕ ЧетнаяСтрока;
		
	КонецЦикла;
	
	ТаблицаОтчета.ЗакончитьГруппуСтрок()
	
КонецПроцедуры

#КонецОбласти

//-- Локализация

#Область КалендарьСобытий

Функция ТекстЗапросаКоммерческиеПредложенияКалендарьСобытий(ОтчетОбъект, Запрос, ТекстЗапроса, СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	КоммерческоеПредложениеКлиенту.Ссылка КАК СсылкаНаОбъектСобытия,
	|	КоммерческоеПредложениеКлиенту.Ссылка КАК Предмет,
	|	&СогласованиеКП КАК ТипСобытия,
	|	КоммерческоеПредложениеКлиенту.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ) КАК ДатаСобытия,
	|	КоммерческоеПредложениеКлиенту.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	&Текущее КАК Статус,
	|	КоммерческоеПредложениеКлиенту.Клиент  КАК Партнер,
	|	КоммерческоеПредложениеКлиенту.Менеджер КАК Ответственный
	|   ,&ТекстПоместить
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
	|ГДЕ
	|	КоммерческоеПредложениеКлиенту.Проведен
	|	И КоммерческоеПредложениеКлиенту.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКоммерческихПредложенийКлиентам.НеСогласовано)
	|	И ВЫБОР
	|			КОГДА КоммерческоеПредложениеКлиенту.СрокДействия = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ КоммерческоеПредложениеКлиенту.СрокДействия >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		КОНЕЦ 
	|	И &ТекстУсловияОтбор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КоммерческоеПредложениеКлиенту.Ссылка,
	|	КоммерческоеПредложениеКлиенту.Ссылка КАК Предмет,
	|	&ОкончаниеСрокаДействияКП,
	|	КоммерческоеПредложениеКлиенту.Дата,
	|	ВЫБОР
	|		КОГДА КоммерческоеПредложениеКлиенту.СрокДействия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(КоммерческоеПредложениеКлиенту.СрокДействия,ДЕНЬ)
	|	КОНЕЦ,
	|	КоммерческоеПредложениеКлиенту.Представление,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА КоммерческоеПредложениеКлиенту.СрокДействия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Текущее
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КоммерческоеПредложениеКлиенту.СрокДействия = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|					ТОГДА &Текущее
	|				ИНАЧЕ &Предстоящее
	|			КОНЕЦ
	|	КОНЕЦ,
	|	КоммерческоеПредложениеКлиенту.Клиент,
	|	КоммерческоеПредложениеКлиенту.Менеджер
	|   ,&ТекстПустаяСтрока
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
	|ГДЕ
	|	КоммерческоеПредложениеКлиенту.Проведен
	|	И КоммерческоеПредложениеКлиенту.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКоммерческихПредложенийКлиентам.Действует)
	|	И КоммерческоеПредложениеКлиенту.СрокДействия <> ДАТАВРЕМЯ(1, 1, 1)
	|	И КоммерческоеПредложениеКлиенту.СрокДействия < &ДатаОкончания
	|	И КоммерческоеПредложениеКлиенту.СрокДействия >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) 
	|	И &ТекстУсловияОтбор";
	
	Запрос.УстановитьПараметр("ОкончаниеСрокаДействияКП",НСтр("ru = 'Окончание срока действия коммерческого предложения'"));
	Запрос.УстановитьПараметр("СогласованиеКП",НСтр("ru = 'Согласовать коммерческое предложения'"));
	
	ОтчетОбъект.ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.КоммерческоеПредложениеКлиенту",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И КоммерческоеПредложениеКлиенту.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"И &ТекстУсловияОтбор",ТекстУсловияОтбор);
	ОтчетОбъект.ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса, СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ОтчетОбъект.ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.КоммерческоеПредложениеКлиенту");
	
	Возврат ТекстЗапроса;

КонецФункции

// Добавляет новый вид события в дерево событий
// 
// Параметры:
//  СтрокаРодитель  - ДанныеФормыДерево - группа событий.
//  ВидСобытия      - Строка - имя события.
//  Представление   - Строка - представление события.
//
// Возвращаемое значение:
//   СтрокаДереваЗначений
// 	
Функция ДобавитьВДеревоВидСобытия(СтрокаРодитель, ВидСобытия, Представление)
	
	НоваяСтрока = СтрокаРодитель.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ВидСобытия = ВидСобытия;
	НоваяСтрока.Представление = Представление;
	Возврат НоваяСтрока

КонецФункции

#КонецОбласти

#КонецОбласти


