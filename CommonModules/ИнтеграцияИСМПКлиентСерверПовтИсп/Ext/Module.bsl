#Область ПрограммныйИнтерфейс

// Возвращает дату обязательной маркировки маркируемой продукци переданного вида.
// 
// Параметры:
//  ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС - вид маркируемой продукции
// Возвращаемое значение:
// 	Дата - дата обязательной маркировки маркируемой продукции.
//
Функция ДатаОбязательнойМаркировкиПродукции(ВидМаркируемойПродукции) Экспорт
	
	Возврат ИнтеграцияИСМПВызовСервера.ДатаОбязательнойМаркировкиПродукции(ВидМаркируемойПродукции);
	
КонецФункции

// Возвращает признак ведения учета маркируемой продукци переданного вида.
// 
// Параметры:
//  ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС - вид маркируемой продукции
// Возвращаемое значение:
// 	Булево - признак ведения учета маркируемой продукции переданного вида.
//
Функция ВестиУчетМаркируемойПродукции(ВидМаркируемойПродукции = Неопределено) Экспорт
	
	Возврат ОбщегоНазначенияИСМПВызовСервера.ВестиУчетМаркируемойПродукции(ВидМаркируемойПродукции);
	
КонецФункции

// Проверяет необходимость обязательной регистрации оборота маркируемой продукции переданного вида на переданную дату.
// 
// Параметры:
//  ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС - вид маркируемой продукции
//  НаДату - Дата - дата оборота маркируемой продукции
// Возвращаемое значение:
//  Булево - Истина, если на переданную дату в системе установлен признак ведения учета по переданному виду маркируемой продукции.
//
Функция ОбязательнаяРегистрацияОборотаМаркируемойПродукции(ВидМаркируемойПродукции, НаДату) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ВидМаркируемойПродукции) Тогда
		Возврат Ложь;
	ИначеЕсли НЕ ИнтеграцияИСМПКлиентСерверПовтИсп.ВестиУчетМаркируемойПродукции(ВидМаркируемойПродукции) Тогда
		Возврат Ложь;
	Иначе
		Возврат НаДату >= ИнтеграцияИСМПКлиентСерверПовтИсп.ДатаОбязательнойМаркировкиПродукции(ВидМаркируемойПродукции);
	КонецЕсли;
	
КонецФункции

// Проверяет что регистрация оборота маркируемой продукции переданного вида производится в тестовом режиме на переданную дату.
// 
// Параметры:
//  ВидМаркируемойПродукции - ПеречислениеСсылка.ВидыПродукцииИС - вид маркируемой продукции
//  НаДату - Дата - дата оборота маркируемой продукции
// Возвращаемое значение:
//  Булево - Истина, если в системе установлен признак ведения учета по переданному виду маркируемой продукции и дата оборота менее даты обязательной регистрации.
//
Функция ТестоваяРегистрацияОборотаМаркируемойПродукции(ВидМаркируемойПродукции, НаДату) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ВидМаркируемойПродукции) Тогда
		Возврат Ложь;
	ИначеЕсли НЕ ИнтеграцияИСМПКлиентСерверПовтИсп.ВестиУчетМаркируемойПродукции(ВидМаркируемойПродукции) Тогда
		Возврат Ложь;
	Иначе
		Возврат НаДату < ИнтеграцияИСМПКлиентСерверПовтИсп.ДатаОбязательнойМаркировкиПродукции(ВидМаркируемойПродукции);
	КонецЕсли;
	
КонецФункции

//Возвращает виды маркируемой продукции в тестовом режиме на переданную дату.
//
//Параметры:
//   НаДату - Дата - дата оборота маркируемой продукции
//
//Возвращаемое значение:
//   ФиксированныйМассив Из ПеречислениеСсылка.ВидыПродукцииИС - виды маркируемой продукции, по которым установлен 
//   признак ведения учета и дата оборота менее даты обязательной регистрации.
//
Функция ВидыПродукцииТестовогоПериода(НаДату) Экспорт
	
	Возврат ОбщегоНазначенияИСМПВызовСервера.УчитываемыеВидыМаркируемойПродукции(НаДату, Истина);
	
КонецФункции

// Возвращает настройки сканирования кодов маркировки ИС МП.
//
// Возвращаемое значение:
//  Булево - Истина, в случае необходимости контроля статусов.
Функция НастройкиСканированияКодовМаркировки() Экспорт
	
	Возврат ОбщегоНазначенияИСМПВызовСервера.НастройкиСканированияКодовМаркировки();

КонецФункции

Функция СлужебныйШтрихкодПечатиУпаковки() Экспорт
	
	Возврат ОбщегоНазначенияИСМПВызовСервера.НастройкиСканированияКодовМаркировки().СлужебныйШтрихкодПечатиУпаковки;
	
КонецФункции

// Определяет признак учета в системе МРЦ.
// 
// Возвращаемое значение:
// 	Булево - Включено ведение учетаю
Функция УчитыватьМРЦ() Экспорт
	
	Возврат ИнтеграцияИСМПКлиентСерверПовтИсп.НастройкиСканированияКодовМаркировки().УчитыватьМРЦ;
	
КонецФункции

// Возвращает признак включения режима работы с тестовым контуром ИС МП
//
// Возвращаемое значение:
//  Булево - Истина, если включен режим работы с тестовым контуром ИС МП.
//
Функция РежимРаботыСТестовымКонтуромИСМП() Экспорт
	
	Возврат ОбщегоНазначенияИСМПВызовСервера.РежимРаботыСТестовымКонтуромИСМП();
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ВидПродукцииПоддерживаетОбъемноСортовойУчет(ВидПродукции) Экспорт
	Возврат (ВидыПродукцииОбъемноСортовогоУчета().Найти(ВидПродукции) <> Неопределено);
КонецФункции

Функция ВидыПродукцииОбъемноСортовогоУчета() Экспорт
	
	ВидыПродукции = Новый Массив();
	
	ВидыПродукции.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.УпакованнаяВода"));
	ВидыПродукции.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.МолочнаяПродукцияБезВЕТИС"));
	ВидыПродукции.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.МолочнаяПродукцияПодконтрольнаяВЕТИС"));
	ВидыПродукции.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Антисептики"));
	ВидыПродукции.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.БАДы"));
	ВидыПродукции.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.СоковаяПродукция"));
	ВидыПродукции.Добавить(ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.БезалкогольныеНапитки"));
	
	Возврат ВидыПродукции;
	
КонецФункции

Функция ДоступноНесколькоПотребительскихШаблоновКодовДляВидаПродукции(ВидПродукции) Экспорт
	
	Если ВидПродукции = ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.АльтернативныйТабак") Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КОнецФункции

// Возвращает редакцию библиотеки подключаемого оборудования(БПО).
// В редакции 2 данные возвращаются как первый элемент массива, возращаемого в свойстве ВыходныеПараметры.
// В редакции 3 данные возвращаются в составе возвращаемого значение.
// 
// Возвращаемое значение:
//  Число - Редакция БПО. Первая цифра номера версии.
Функция РедакцияБПО() Экспорт
	
	ВерсияБиблиотеки = МенеджерОборудованияВызовСервера.ВерсияБиблиотеки();
	
	Возврат Число(СтрРазделить(ВерсияБиблиотеки, ".")[0]);
	
КонецФункции

Функция ФоноваяПроверкаДокументовГИСМТРазрешена() Экспорт
	Возврат СоответствиеТребованиямГИСМТВызовСервера.ФоноваяПроверкаДокументовГИСМТРазрешена();
КонецФункции

#КонецОбласти
