#Область ПрограммныйИнтерфейс

// Обработчик команды формы, требующей контекстного вызова сервера.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - форма, из которой выполняется команда.
//   ПараметрыВызова - Структура - параметры вызова.
//   Источник - ТаблицаФормы, ДанныеФормыСтруктура - объект или список формы с полем "Ссылка".
//   Результат - Структура - результат выполнения команды.
//
Процедура ВыполнитьПереопределяемуюКоманду(Знач Форма, Знач ПараметрыВызова, Знач Источник, Результат) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область МодификацияФормы

Процедура ДобавитьСлужебныеРеквизиты(Форма, ПутьКТабличнойЧасти = "Объект.Товары") Экспорт
	
	//++ НЕ ГОСИС
	ДобавляемыеРеквизиты = Новый Массив;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ПараметрыУказанияСерий") Тогда
		Возврат;
	КонецЕсли;
	
	// Реквизиты шапки
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПараметрыУказанияСерий",Новый ОписаниеТипов));
	
	// Реквизиты табличной части
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Код",
		Новый ОписаниеТипов("Строка"), ПутьКТабличнойЧасти, НСтр("ru = 'Код'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Артикул",
		Метаданные.ОпределяемыеТипы.Артикул.Тип, ПутьКТабличнойЧасти, НСтр("ru = 'Артикул'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ТипНоменклатуры",
		Метаданные.ОпределяемыеТипы.ТипНоменклатуры.Тип, ПутьКТабличнойЧасти, НСтр("ru = 'Тип номенклатуры'")));
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("СтатусУказанияСерий",
		Новый ОписаниеТипов("Число"), ПутьКТабличнойЧасти, НСтр("ru = 'Статус указания серий'")));
	
	Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	//-- НЕ ГОСИС
	
КонецПроцедуры

Процедура МодификацияРеквизитовФормы(Форма, ПараметрыИнтеграции, ДобавляемыеРеквизиты) Экспорт
	
	//++ НЕ ГОСИС
	Если Форма.ИмяФормы = "Документ.ПриобретениеТоваровУслуг.Форма.ФормаДокумента" Тогда
		
		// Документ-основание для заполнения текущим документом после записи
		Реквизит = Новый РеквизитФормы("ТТНВходящаяЕГАИС",Новый ОписаниеТипов("ДокументСсылка.ТТНВходящаяЕГАИС"));
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		// Признак учета алкогольной продукции
		Реквизит = Новый РеквизитФормы("ВестиСведенияДляДекларацийПоАлкогольнойПродукции", Новый ОписаниеТипов("Булево"));
		ДобавляемыеРеквизиты.Добавить(Реквизит);
		
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

Процедура ЗаполнениеРеквизитовФормы(Форма) Экспорт
	
	//++ НЕ ГОСИС
	ИнтеграцияЕГАИСУТ.ЗаполнениеРеквизитовФормы(Форма);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Переопределение параметров интеграции ЕГАИС (расположения форматированной строки).
//
// Параметры:
//   Форма            - ФормаКлиентскогоПриложения - прикладная форма для встраивания форматированной строки.
//   ПараметрыНадписи - Структура        - (см. СобытияФормЕГАИС.ПараметрыИнтеграцииЕГАИС).
//
Процедура ПриОпределенииПараметровИнтеграцииЕГАИС(Форма, ПараметрыНадписи) Экспорт
	
	//++ НЕ ГОСИС
	Если Форма.ИмяФормы = "Справочник.ШаблоныЭтикетокИЦенников.Форма.ПомощникНового"
		ИЛИ Форма.ИмяФормы = "Справочник.ШаблоныЭтикетокИЦенников.Форма.ФормаРедактированияШаблонаЭтикетокИЦенников"
		ИЛИ СтрНачинаетсяС(Форма.ИмяФормы, "Документ.ЧекККМ.")
		ИЛИ СтрНачинаетсяС(Форма.ИмяФормы, "Документ.ЧекККМВозврат.")
		Или Форма.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаВыбора"
		ИЛИ Форма.ИмяФормы = "Обработка.ПодборСерийВДокументы.Форма.УказаниеСерииВСтрокеТоваров"
		ИЛИ Форма.ИмяФормы = "Справочник.НастройкиРМК.Форма.ФормаЭлемента" Тогда
			ПараметрыНадписи.ИмяРеквизитаФормы = "";
			ПараметрыНадписи.ИмяЭлементаФормы = "";
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Элементы, "ГруппаСостояние") Тогда
		ПараметрыНадписи.РазмещениеВ = "ГруппаСостояние";
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

// Переопределение параметров интеграции ЕГАИС (расположения команды проверки и подбора)
//
// Параметры:
//   Форма                - ФормаКлиентскогоПриложения - прикладная форма для встраивания форматированной строки
//   СтандартнаяОбработка - Булево - стандартная работа с элементами проверки подбора
//   ПараметрыИнтеграции  - Соответствие - автоматически заданные параметры интеграции
//
Процедура ПриОпределенииПараметровИнтеграции(Форма, СтандартнаяОбработка, ПараметрыИнтеграции) Экспорт
	
	//++ НЕ ГОСИС
	Если Форма.ИмяФормы = "Документ.АктОРасхожденияхПоПриемке.Форма.ФормаДокумента"
		Или Форма.ИмяФормы = "Документ.АктОРасхожденияхПоОтгрузке.Форма.ФормаДокумента"
		Тогда
			СтандартнаяОбработка = Ложь;
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

Процедура ПослеЗаписиНаСервере(Форма) Экспорт
	
	//++ НЕ ГОСИС
	Если Форма.ИмяФормы = "Документ.ПриобретениеТоваровУслуг.Форма.ФормаДокумента" Тогда
	
		ТТН = Форма.ТТНВходящаяЕГАИС;
		Если ЗначениеЗаполнено(ТТН)
			И НЕ ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТТН, "ДокументОснование")) Тогда
			
			ИнтеграцияЕГАИСВызовСервера.ЗаписатьСвязьДокументаПоступленияИТТНЕГАИС(
				ТТН,
				Форма.Объект.Ссылка);
		Иначе
			ТТН = Неопределено;
		КонецЕсли;
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.НастройкиРМК.Форма.ФормаЭлемента" Тогда
		
		ИнтеграцияИСУТ.ЗаполнитьПараметрыПодключенияЕГАИСВФормеСправочникаНастроекРМК(Форма);
		
	КонецЕсли;
	
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	//++ НЕ ГОСИС
	Если Форма.ИмяФормы = "Документ.ПриобретениеТоваровУслуг.Форма.ФормаДокумента" Тогда
	
		Если ТипЗнч(Форма.Параметры.Основание) = Тип("ДокументСсылка.ТТНВходящаяЕГАИС") Тогда
			Форма.ТТНВходящаяЕГАИС = Форма.Параметры.Основание;
			Форма.ТекстДокументаЕГАИС = ИнтеграцияЕГАИСВызовСервераУТ.ТекстДокументаЕГАИСВПриобретенииТоваровВРаботе(Форма.ТТНВходящаяЕГАИС);
		КонецЕсли;
		Форма.ВестиСведенияДляДекларацийПоАлкогольнойПродукции = ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийПоАлкогольнойПродукции");
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.НастройкиРМК.Форма.ФормаЭлемента" Тогда
		
		ИнтеграцияИСУТ.МодифицироватьИнициализироватьФормуНастройкиРМК(Форма);
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокументаРМК"
		Или Форма.ИмяФормы = "Документ.ЧекККМВозврат.Форма.ФормаДокументаРМК" Тогда
		
		ИнтеграцияИСУТ.МодифицироватьИнициализироватьФормуРМК(Форма);
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокумента"
		Или Форма.ИмяФормы = "Документ.ЧекККМВозврат.Форма.ФормаДокумента" Тогда
			
		ИнтеграцияИСУТ.МодифицироватьИнициализироватьФормуЧека(Форма);
		
	ИначеЕсли Форма.ИмяФормы = "Справочник.Номенклатура.Форма.ФормаВыбора" Тогда
		
		Если Форма.Параметры.Свойство("ВидАлкогольнойПродукцииМаркируемый") Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Форма.СписокНоменклатура, 
				"ВидАлкогольнойПродукцииМаркируемый",
				Форма.Параметры.ВидАлкогольнойПродукцииМаркируемый,
				ВидСравненияКомпоновкиДанных.Равно, 
				"ОтборВидАлкогольнойПродукцииМаркируемый", Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт
	
	//++ НЕ ГОСИС
	Если Форма.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокументаРМК"
		Или Форма.ИмяФормы = "Документ.ЧекККМВозврат.Форма.ФормаДокументаРМК" Тогда
		
		ИнтеграцияИСУТ.МодифицироватьИнициализироватьФормуРМК(Форма);
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокумента"
		Или Форма.ИмяФормы = "Документ.ЧекККМВозврат.Форма.ФормаДокумента" Тогда
			
		ИнтеграцияИСУТ.МодифицироватьИнициализироватьФормуЧека(Форма);
		
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

#Область СобытияЭлементовФорм

// Серверная переопределяемая процедура, вызываемая из обработчика события элемента.
//
// Параметры:
//   Форма                   - ФормаКлиентскогоПриложения - форма, из которой происходит вызов процедуры.
//   Элемент                 - Строка           - имя элемента-источника события "При изменении".
//   ДополнительныеПараметры - Структура        - значения дополнительных параметров влияющих на обработку.
//
Процедура ПриИзмененииЭлемента(Форма, Элемент, ДополнительныеПараметры) Экспорт
	
	//++ НЕ ГОСИС
	Если Форма.ИмяФормы = "Справочник.НастройкиРМК.Форма.ФормаЭлемента" Тогда
		
		Если Элемент = "КассаККМ" Тогда
			
			ИнтеграцияИСУТ.ЗаполнитьПараметрыПодключенияЕГАИСВСтрокеВФормеСправочникаНастроекРМК(Форма, ДополнительныеПараметры.ИдентификаторСтроки);
			
		ИначеЕсли Элемент = "Оповещение" Тогда
			
			Если ДополнительныеПараметры.ИмяСобытия = "Запись_ПараметрыПодключенияЕГАИС" Тогда
				
				ИнтеграцияИСУТ.ЗаполнитьПараметрыПодключенияЕГАИСВФормеСправочникаНастроекРМК(Форма);
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли Форма.ИмяФормы = "Документ.ЧекККМ.Форма.ФормаДокументаРМК"
		Или Форма.ИмяФормы = "Документ.ЧекККМВозврат.Форма.ФормаДокументаРМК" Тогда
		
		Если Элемент = "Событие" И ДополнительныеПараметры.ИмяСобытия = "ЗакрытиеФормыПроверкиИПодбораЕГАИС" Тогда
			
			ПроверкаИПодборПродукцииЕГАИСУТВызовСервера.ПриЗакрытииФормыПроверкиИПодбораВФормеРМК(Форма, ДополнительныеПараметры.Параметр);
			
		КонецЕсли;
		
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

//Выполняет действия при изменении номенклатуры в таблице Товары.
//
//Параметры:
//   Форма         - ФормаКлиентскогоПриложения            - форма, в которой произошло событие.
//   ТекущаяСтрока - ДанныеФормыЭлементКоллекции - строка таблицы товаров.
//   КэшированныеЗначения - Структура - сохраненные значения параметров, используемых при обработке.
//   ПараметрыЗаполнения  - (См. ИнтеграцияЕГАИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти).
//   ПараметрыУказанияСерий - Произвольный - параметры указания серий формы.
//
Процедура ПриИзмененииНоменклатуры(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыЗаполнения, Знач ПараметрыУказанияСерий = Неопределено) Экспорт
	
	//++ НЕ ГОСИС
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекущаяСтрока.Характеристика);
	СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	
	Если ПараметрыЗаполнения.ОбработатьУпаковки Тогда
		СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", ТекущаяСтрока.Упаковка);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПересчитатьКоличествоЕдиниц Тогда
		СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	КонецЕсли;
	
	Если ПараметрыЗаполнения.МаркируемаяПродукцияВТЧ Тогда
		СтруктураДействий.Вставить("ЗаполнитьПризнакМаркируемаяПродукция", Новый Структура("Номенклатура", "МаркируемаяПродукция"));
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЗаполнитьЕдиницуИзмерения Тогда
		СтруктураДействий.Вставить("ЗаполнитьПризнакЕдиницаИзмерения", Новый Структура("Номенклатура", "ЕдиницаИзмерения"));
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЗаполнитьТипНоменклатуры Тогда
		СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЗаполнитьАртикул Тогда
		СтруктураДействий.Вставить("ЗаполнитьПризнакАртикул", Новый Структура("Номенклатура", "Артикул"));
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЗаполнитьКод Тогда
		СтруктураДействий.Вставить("ЗаполнитьПризнакКод", Новый Структура("Номенклатура", "Код"));
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПерезаполнитьНоменклатуруЕГАИС Тогда
		ПараметрыЗаполненияНоменклатурыЕГАИС = Новый Структура;
		ПараметрыЗаполненияНоменклатурыЕГАИС.Вставить("ЗаполнитьФлагАлкогольнаяПродукция", Ложь);
		ПараметрыЗаполненияНоменклатурыЕГАИС.Вставить("ИмяКолонки", "АлкогольнаяПродукция");
		
		СтруктураДействий.Вставить("ЗаполнитьНоменклатуруЕГАИС", ПараметрыЗаполненияНоменклатурыЕГАИС);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПересчитатьСумму Тогда
		СтруктураДействий.Вставить("ПересчитатьСумму");
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЗаполнитьИндексАкцизнойМарки Тогда
		СтруктураДействий.Вставить("ЗаполнитьИндексАкцизнойМарки");
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПроверитьСериюРассчитатьСтатус Тогда
		Если Форма.ИмяФормы = "Документ.ОтчетОПроизводствеЕГАИС.Форма.ФормаДокумента" Тогда
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "Крепость") Тогда
				ПараметрыУказанияСерий = ПараметрыУказанияСерий.Товары;
			Иначе
				ПараметрыУказанияСерий = ПараметрыУказанияСерий.Сырье;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ПараметрыУказанияСерий <> Неопределено
			И ЗначениеЗаполнено(ПараметрыУказанияСерий.ИмяПоляСклад)
			И ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Форма[ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта], ПараметрыУказанияСерий.ИмяПоляСклад) Тогда
			Склад = Форма[ПараметрыУказанияСерий.ИмяИсточникаЗначенийВФормеОбъекта][ПараметрыУказанияСерий.ИмяПоляСклад];
		Иначе
			Склад = Неопределено;
		КонецЕсли;
		
		СтруктураДействий.Вставить("ПроверитьСериюРассчитатьСтатус", Новый Структура("ПараметрыУказанияСерий, Склад", ПараметрыУказанияСерий, Склад));
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЗаполнитьАлкогольнуюПродукцию Тогда
		СтруктураДействий.Вставить("ЗаполнитьАлкогольнуюПродукцию", ПараметрыЗаполнения);
	КонецЕсли;
	
	СтруктураДействий.Вставить("НоменклатураПриИзмененииПереопределяемый", Новый Структура("ИмяФормы, ИмяТабличнойЧасти",
		Форма.ИмяФормы, "Товары"));
	
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

//Выполняет действия при изменении номенклатуры в таблице Товары.
//
//Параметры:
//   Форма                - ФормаКлиентскогоПриложения            - форма, в которой произошло событие.
//   ТекущаяСтрока        - ДанныеФормыЭлементКоллекции - строка таблицы товаров.
//   КэшированныеЗначения - Структура                   - сохраненные значения параметров, используемых при обработке.
//   ПараметрыЗаполнения  - (См. ИнтеграцияЕГАИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти).
//
Процедура ПриИзмененииХарактеристики(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыЗаполнения) Экспорт
	
	//++ НЕ ГОСИС
	СтруктураДействий = Новый Структура;
	
	Если ПараметрыЗаполнения.ПерезаполнитьНоменклатуруЕГАИС Тогда
		ПараметрыЗаполненияНоменклатурыЕГАИС = Новый Структура;
		ПараметрыЗаполненияНоменклатурыЕГАИС.Вставить("ЗаполнитьФлагАлкогольнаяПродукция", Ложь);
		ПараметрыЗаполненияНоменклатурыЕГАИС.Вставить("ИмяКолонки", "АлкогольнаяПродукция");
		
		СтруктураДействий.Вставить("ЗаполнитьНоменклатуруЕГАИС", ПараметрыЗаполненияНоменклатурыЕГАИС);
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЗаполнитьАлкогольнуюПродукцию Тогда
		СтруктураДействий.Вставить("ЗаполнитьАлкогольнуюПродукцию", ПараметрыЗаполнения);
	КонецЕсли;
	
	СтруктураДействий.Вставить("ХарактеристикаПриИзмененииПереопределяемый", Новый Структура("ИмяФормы, ИмяТабличнойЧасти",
		Форма.ИмяФормы, "Товары"));
	
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

//Выполняет действия при изменении количества упаковок в таблице Товары.
//
//Параметры:
//   Форма                - ФормаКлиентскогоПриложения - форма, в которой произошло событие.
//   ТекущаяСтрока        - ДанныеФормыЭлементКоллекции - строка таблицы товаров.
//   КэшированныеЗначения - Структура - сохраненные значения параметров, используемых при обработке.
//   ПараметрыЗаполнения  - (См. ИнтеграцияЕГАИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти).
//
Процедура ПриИзмененииКоличестваУпаковок(Форма, ТекущаяСтрока, КэшированныеЗначения, ПараметрыЗаполнения) Экспорт
	
	//++ НЕ ГОСИС
	СтруктураДействий = Новый Структура;
	
	Если ПараметрыЗаполнения.ПересчитатьКоличествоЕдиниц Тогда
		СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	ИначеЕсли ПараметрыЗаполнения.ПересчитатьКоличествоУпаковок Тогда
		СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ПересчитатьСумму Тогда
		СтруктураДействий.Вставить("ПересчитатьСумму");
	КонецЕсли;
	
	Если ПараметрыЗаполнения.ЗаполнитьИндексАкцизнойМарки Тогда
		СтруктураДействий.Вставить("ЗаполнитьИндексАкцизнойМарки");
	КонецЕсли;
	
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

#КонецОбласти

//Заполняет табличную часть Товары подобранными товарами.
//
//Параметры:
//   Форма               - ФормаКлиентскогоПриложения - форма, в которой производится подбор.
//   ВыбранноеЗначение   - Произвольный     - данные, содержащие подобранную пользователем номенклатуру.
//   ПараметрыЗаполнения - (См. ИнтеграцияЕГАИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти).
Процедура ОбработкаРезультатаПодбораНоменклатуры(Форма, ВыбранноеЗначение, ПараметрыЗаполнения) Экспорт
	
	//++ НЕ ГОСИС
	ПараметрыЗаполненияНоменклатурыЕГАИС = Новый Структура;
	ПараметрыЗаполненияНоменклатурыЕГАИС.Вставить("ЗаполнитьФлагАлкогольнаяПродукция", Ложь);
	ПараметрыЗаполненияНоменклатурыЕГАИС.Вставить("ИмяКолонки", "АлкогольнаяПродукция");
	
	Если НЕ ПараметрыЗаполнения.ЗаполнитьИндексАкцизнойМарки Тогда
		ПараметрыЗаполненияНоменклатурыЕГАИС.Вставить("ЗаполнитьФлагМаркируемаяАлкогольнаяПродукция", Ложь);
	КонецЕсли;
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	
	ТекущаяСтрока = Неопределено;
	Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
		
		ТекущаяСтрока = Форма.Объект.Товары.Добавить();
		
		СписокСвойств = "Номенклатура, Характеристика, Упаковка";
		Если ТекущаяСтрока.Свойство("КоличествоУпаковок") Тогда
			СписокСвойств = СписокСвойств + ", КоличествоУпаковок";
		КонецЕсли;
		
		Если ТекущаяСтрока.Свойство("ИдентификаторСтроки") Тогда
			ТекущаяСтрока.ИдентификаторСтроки = Новый УникальныйИдентификатор;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, СписокСвойств);
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекущаяСтрока.Характеристика);
		СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", ТекущаяСтрока.Упаковка);
		
		Если ПараметрыЗаполнения.ПересчитатьКоличествоЕдиниц Тогда
			СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
		КонецЕсли;
		
		Если ПараметрыЗаполнения.ЗаполнитьИндексАкцизнойМарки Тогда
			СтруктураДействий.Вставить("ЗаполнитьИндексАкцизнойМарки");
		КонецЕсли;
		
		Если ПараметрыЗаполнения.МаркируемаяПродукцияВТЧ Тогда
			СтруктураДействий.Вставить("ЗаполнитьПризнакМаркируемаяАлкогольнаяПродукция", Новый Структура("Номенклатура", "МаркируемаяПродукция"));
		КонецЕсли;
		
		Если ПараметрыЗаполнения.ПересчитатьСумму Тогда
			СтруктураДействий.Вставить("ПересчитатьСумму");
		КонецЕсли;
		
		СтруктураДействий.Вставить("ЗаполнитьНоменклатуруЕГАИС", ПараметрыЗаполненияНоменклатурыЕГАИС);
		СтруктураДействий.Вставить("НоменклатураПриИзмененииПереопределяемый",
			Новый Структура("ИмяФормы, ИмяТабличнойЧасти", Форма.ИмяФормы, "Товары"));
		
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	КонецЦикла;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		Форма.Элементы.Товары.ТекущаяСтрока = ТекущаяСтрока.ПолучитьИдентификатор();
	КонецЕсли;
	//-- НЕ ГОСИС
	Возврат;
	
КонецПроцедуры

#КонецОбласти