#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры


#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПодарочныеСертификаты") Тогда
		
		//++ Локализация
		
		// КМ-3
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиентЛокализация.ПечатьКМ3";
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьКМ3";
		КомандаПечати.Идентификатор = "КМ3";
		КомандаПечати.Представление = НСтр("ru = 'КМ-3'");
		
		//-- Локализация
		
	КонецЕсли;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
КонецПроцедуры

// Функция получает данные для формирования печатной формы КМ-3.
//
// Возвращаемое значение:
// 	Структура:
// 		* РезультатЗапроса - РезультатЗапроса
// 		* ЗаголовокДокумента - Строка
//
Функция ПолучитьДанныеДляПечатнойФормыКМ3(ПараметрыПечати, МассивОбъектов) Экспорт
	
	СтруктураДанныхДляПечати = Неопределено;
	
	//++ Локализация
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокЧек.Ссылка КАК Ссылка,
	|	ДокЧек.Номер КАК Номер,
	|	ДокЧек.Дата КАК ДатаДокумента,
	|	ДокЧек.КассаККМ КАК КассаККМ,
	|	ДокЧек.КассаККМ.ТипКассы КАК ТипКассы,
	|	ДокЧек.КассаККМ.Представление КАК Покупатель,
	|	ДокЧек.Кассир.ФизическоеЛицо КАК КассирККМ,
	|	ДокЧек.Валюта КАК Валюта,
	|	ДокЧек.Организация КАК Организация,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ДокЧек.Организация.Представление КАК Поставщик,
	|	ДокЧек.КассаККМ.СерийныйНомер КАК СерийныйНомерККМ,
	|	ДокЧек.КассаККМ.РегистрационныйНомер КАК РегистрационныйНомерККМ,
	|	ДокЧек.КассаККМ.Наименование КАК ПредставлениеККМ
	|ИЗ
	|	Документ.ВозвратПодарочныхСертификатов КАК ДокЧек
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ДокЧек.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	ДокЧек.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокЧек.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокЧек.Ссылка                                           КАК Документ,
	|	ФискальныеОперации.НомерЧекаККМ 						КАК НомерЧека,
	|	ДокЧек.СуммаДокумента                                   КАК СуммаДокумента
	|ИЗ
	|	Документ.ВозвратПодарочныхСертификатов КАК ДокЧек
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФискальныеОперации КАК ФискальныеОперации
	|		ПО ФискальныеОперации.ДокументОснование = ДокЧек.РеализацияПодарочныхСертификатов
	|ГДЕ
	|	ДокЧек.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документ
	|ИТОГИ ПО
	|	Документ";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати    = Новый Структура("РезультатЗапроса, ЗаголовокДокумента",
		РезультатЗапроса, НСтр("ru = 'КМ-3'"));
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	//-- Локализация
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

#КонецОбласти

#Область Фискализация

//++ Локализация

// Определяет систему налогообложения по документу
// 
// Параметры:
// 	ДокументСсылка - ДокументСсылка - Документ для определения системы налогообложения
// Возвращаемое значение:
// 	ПеречислениеСсылка.ТипыСистемНалогообложенияККТ - Система налогообложения по документу
Функция СистемаНалогообложенияПоДокументу(ДокументСсылка) Экспорт
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Организация, КассаККМ");
	РеквизитыКассыККМ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РеквизитыДокумента.КассаККМ, "Склад, Подразделение");
	
	НалогообложениеНДС = УчетНДСУП.ПараметрыУчетаПоОрганизации(РеквизитыДокумента.Организация, ТекущаяДатаСеанса(), РеквизитыКассыККМ.Склад, РеквизитыКассыККМ.Подразделение).НалогообложениеНДСРозничнойПродажи;
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
		СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ЕНВД;
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту Тогда
		СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.Патент;
	Иначе
		СистемаНалогообложения = РозничныеПродажиЛокализация.СистемаНалогообложенияФискальнойОперации(РеквизитыДокумента.Организация);
	КонецЕсли;
	
	Возврат СистемаНалогообложения;
	
КонецФункции

// Получить основные данные по таблице товаров для чека о розничной продаже
//
// Параметры:
//  ДокументСсылка - ДокументОбъект.ВозвратПодарочныхСертификатов - Документ.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Данные о продажах.
//
Функция ПредметыРасчетовПоДокументу(ДокументСсылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "НалогообложениеНДС");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодарочныеСертификаты.НомерСтроки,
	|	ПодарочныеСертификаты.ПодарочныйСертификат.Наименование КАК Номенклатура,
	|	""""                                             		КАК Характеристика,
	|	""""                                             		КАК Упаковка,
	|
	|	1 														КАК Количество,
	|	1 														КАК КоличествоУпаковок,
	|
	|	ПодарочныеСертификаты.Сумма 							КАК Цена,
	|	ПодарочныеСертификаты.Сумма								КАК СуммаСНДС,
	|
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаПоПатенту))
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)
	|		ИНАЧЕ &СтавкаНДС20_120
	|	КОНЕЦ 													КАК СтавкаНДС,
	|
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаПоПатенту))
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПодарочныеСертификаты.Сумма / 120 * 20 КАК ЧИСЛО(31,2))
	|	КОНЕЦ 													КАК СуммаНДС,
	|	
	|	0														КАК СуммаСкидки
	|
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ВозвратПодарочныхСертификатов.ПодарочныеСертификаты КАК ПодарочныеСертификаты
	|ГДЕ
	|	ПодарочныеСертификаты.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|
	|	НЕОПРЕДЕЛЕНО					КАК ТипНоменклатуры,
	|	ЛОЖЬ							КАК ПодакцизныйТовар,
	|	
	|	Товары.Номенклатура   			КАК НоменклатураНаименование,
	|	Товары.Характеристика 			КАК ХарактеристикаНаименование,
	|	Товары.Упаковка                 КАК Упаковка,
	|	Товары.Упаковка					КАК УпаковкаНаименование,
	|	
	|	Товары.Характеристика,
	|	Товары.Количество,
	|	Товары.КоличествоУпаковок,
	|	Товары.Цена,
	|	Товары.СуммаСНДС,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаНДС,
	|	Товары.СуммаСкидки
	|ИЗ
	|	ТаблицаТовары КАК Товары
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки
	|";
		
	Запрос.УстановитьПараметр("Ссылка"			  , ДокументСсылка);
	Запрос.УстановитьПараметр("НалогообложениеНДС", РеквизитыДокумента.НалогообложениеНДС);
	Запрос.УстановитьПараметр("СтавкаНДС20_120"	  , УчетНДСРФКлиентСерверПовтИсп.СтавкаНДСПоЗначениюПеречисления(Перечисления.СтавкиНДС.НДС20_120));
	
	ПредметыРасчетов = Запрос.Выполнить().Выгрузить();
	
	Возврат ПредметыРасчетов;
	
КонецФункции

//-- Локализация

// Определяет и возвращает статус, является ли организации плательщиком НДС
// 
// Параметры:
// 	Организация - СправочникСсылка.Организации - Организация, по которой определяется, облагается ли она НДС
// 	ОрганизацияПлательщикНДС - Булево - Параметр для сохранения и передачи во вне значения
Процедура ОбновитьОрганизацияПлательщикНДС(Организация, ОрганизацияПлательщикНДС) Экспорт
	
	//++ Локализация
	ОрганизацияПлательщикНДС = УчетнаяПолитика.ПлательщикНДС(Организация, ТекущаяДатаСеанса())
		И НЕ УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС(Организация, ТекущаяДатаСеанса());
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти