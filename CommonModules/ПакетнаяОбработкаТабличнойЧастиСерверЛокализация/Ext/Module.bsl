#Область ПрограммныйИнтерфейс

// Заполняет служебные реквизиты в табличной части формы зависящие от локализации
//
// Параметры:
//   Форма               - ФормаКлиентскогоПриложения - заполняемая форма
//   ПараметрыЗаполнения - Произвольный     - сценарий и параметры заполнения
//
Процедура ЗаполнитьСлужебныеРеквизиты(Форма, ПараметрыЗаполнения = Неопределено) Экспорт
	
	//++ Локализация
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Описание обработчиков строк коллекции:
// 
// Параметры:
//  ОбработчикиСтрок - СписокЗначений из Строка - Наименование обработчика строки табличной части:
//  * Представление - Строка - экспортного метода к выполнению.
//
Процедура ПриДобавленииОбработчиковСтрокКоллекции(ОбработчикиСтрок) Экспорт
	
	//++ Локализация
	
	ОбработчикиСтрок.Добавить("ЗаполнитьСчетФактуруПеревыставленнуюВОтчетеКомитентуОЗакупках",
		"ПакетнаяОбработкаТабличнойЧастиСерверЛокализация.ЗаполнитьСчетФактуруПеревыставленнуюВОтчетеКомитентуОЗакупках");
	
	ОбработчикиСтрок.Добавить("ЗаполнитьКодОКПД2",
		"ПакетнаяОбработкаТабличнойЧастиСерверЛокализация.ЗаполнитьКодОКПД2ПоНоменклатуреВСтрокеТЧ");
	
	ОбработчикиСтрок.Добавить("ПересчитатьКоличествоЕдиницПоЗЕРНО",
		"ПакетнаяОбработкаТабличнойЧастиСерверЛокализация.ДействияПередПересчетомКоличестваЕдиницЗЕРНО");
		
	ОбработчикиСтрок.Добавить("ПересчитатьКоличествоЕдиницПоЗЕРНО",
		"ПакетнаяОбработкаТабличнойЧастиСерверЛокализация.ПересчитатьКоличествоЕдиницПоЗЕРНОВСтрокеТЧ");
	
	ОбработчикиСтрок.Добавить("ЗаполнитьАлкогольнуюПродукцию",
		"ПакетнаяОбработкаТабличнойЧастиСерверЛокализация.ЗаполнитьАлкогольнуюПродукцию");
	
	ОбработчикиСтрок.Добавить("ЗаполнитьПродукциюВЕТИС",
		"ПакетнаяОбработкаТабличнойЧастиСерверЛокализация.ЗаполнитьПродукциюВЕТИС");
	
	ОбработчикиСтрок.Добавить("ПересчитатьКоличествоЕдиницВЕТИС",
		"ПакетнаяОбработкаТабличнойЧастиСерверЛокализация.ДействияПередПересчетомКоличестваЕдиницВЕТИС");

	ОбработчикиСтрок.Добавить("ПересчитатьКоличествоЕдиницВЕТИС",
		"ПакетнаяОбработкаТабличнойЧастиСерверЛокализация.ПересчитатьКоличествоЕдиницВЕТИСВСтрокеТЧ");
	
	ОбработчикиСтрок.Добавить("ПересчитатьКоличествоЕдиницВЕТИС",
		"ПакетнаяОбработкаТабличнойЧастиСерверЛокализация.ПересчитатьКоличествоЕдиницПоВЕТИСВСтрокеТЧ");
	
	ОбработчикиСтрок.Добавить("ЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках",
		"ПакетнаяОбработкаТабличнойЧастиСерверЛокализация.ЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках");
	
	ОбработчикиСтрок.Добавить("ЗаполнитьВидПродукцииИС",
		 "ПакетнаяОбработкаТабличнойЧастиСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтрокеТЧ");
	ОбработчикиСтрок.Добавить("ЗаполнитьПризнакМаркируемаяПродукция",
		 "ПакетнаяОбработкаТабличнойЧастиСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтрокеТЧ");

	ОбработчикиСтрок.Добавить("ЗаполнитьПродукциюСАТУРН",
		"ПакетнаяОбработкаТабличнойЧастиСерверЛокализация.ЗаполнитьПродукциюСАТУРН");
	ОбработчикиСтрок.Добавить("ПересчитатьТипИзмеряемойВеличиныСАТУРН",
		"ПакетнаяОбработкаТабличнойЧастиСерверЛокализация.КешированиеУпаковокСАТУРН");
	ОбработчикиСтрок.Добавить("ПересчитатьТипИзмеряемойВеличиныСАТУРН",
		"ПакетнаяОбработкаТабличнойЧастиКлиентСерверЛокализация.ПересчитатьТипИзмеряемойВеличиныСАТУРН");
	ОбработчикиСтрок.Добавить("ПересчитатьКоличествоДляСАТУРН",
		"ПакетнаяОбработкаТабличнойЧастиСерверЛокализация.КешированиеУпаковокСАТУРН");
	ОбработчикиСтрок.Добавить("ПересчитатьКоличествоДляСАТУРН",
		"ПакетнаяОбработкаТабличнойЧастиКлиентСерверЛокализация.ПересчитатьКоличествоДляСАТУРН");
	
	//-- Локализация
	
КонецПроцедуры

// Описание текстов запросов, которые требуется выполнить для получения всех необходимых данных, необходимых для 
// обработки строк.
// 
// Параметры:
//  Действия - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧВЦикле.Действия.
//  ОписаниеЗапроса - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОписаниеЗапроса
//  КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения.
//
Процедура ДополнитьТекстыЗапросовИсточниковДанных(Действия, ОписаниеЗапроса, КэшированныеЗначения) Экспорт
	
	//++ Локализация
	
	УчетНДСРФ.ДополнитьТекстЗапросаСчетФактурыПеревыставленныеВОтчетеКомитентуОЗакупках(Действия, ОписаниеЗапроса, КэшированныеЗначения);
	УчетНДСРФ.ДополнитьТекстЗапросаЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках(Действия, ОписаниеЗапроса, КэшированныеЗначения);
	
	ДополнитьТекстЗапросаКодОКПД2ПоНоменклатуре(Действия, ОписаниеЗапроса, КэшированныеЗначения);
	
	ДополнитьТекстЗапросаАлкогольнойПродукцииЕГАИС(Действия, ОписаниеЗапроса, КэшированныеЗначения);
	ДополнитьТекстЗапросаПродукцииВЕТИС(Действия, ОписаниеЗапроса, КэшированныеЗначения);
	ДополнитьТекстЗапросаКоэффициентыПересчетаУпаковкиВЕТИС(Действия, ОписаниеЗапроса, КэшированныеЗначения);
	ДополнитьТекстЗапросаКоэффициентыПересчетаЗЕРНО(Действия, ОписаниеЗапроса, КэшированныеЗначения);
	ДополнитьТекстЗапросаПродукцииСАТУРН(Действия, ОписаниеЗапроса, КэшированныеЗначения);
	ДополнитьТекстЗапросаУпаковкиСАТУРН(Действия, ОписаниеЗапроса, КэшированныеЗначения);
	//-- Локализация
	
КонецПроцедуры

Процедура ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВСтрокеТЧ(СтруктураДействий, СтруктураДействийЗаполнения) Экспорт
	
	//++ Локализация
	Перем СтруктураПараметровДействия;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакМаркируемаяПродукция", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакМаркируемаяПродукция", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьВидПродукцииИС", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьВидПродукцииИС", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакПодакцизныйТовар", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакПодакцизныйТовар", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакТребуетВзвешивания", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакТребуетВзвешивания", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакПроизвольнаяЕдиницаУчета", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакПроизвольнаяЕдиницаУчета", СтруктураПараметровДействия);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ЗаполнитьПризнакСкоропортящаясяПродукция", СтруктураПараметровДействия)
		И ЗначениеЗаполнено(СтруктураПараметровДействия) Тогда
		
		СтруктураДействийЗаполнения.Вставить("ЗаполнитьПризнакСкоропортящаясяПродукция", СтруктураПараметровДействия);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ПриОпределенииШаблонаПоляВыборкиПоКлючуДействия(КлючДействия, Шаблон) Экспорт
	
	//++ Локализация
	
	Если КлючДействия = "ЗаполнитьПризнакМаркируемаяПродукция" Тогда
		
		Шаблон =  ", " + ИнтеграцияИСУТ.ОпределениеПризнакаМаркируемаяПродукцияТекстаЗапроса("втТаблицаНоменклатуры.%Ключ%");
		Шаблон = Шаблон + " КАК %ЗначениеЗамены%";
		
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьВидПродукцииИС" Тогда
		
		Шаблон = ",
		|	&ОпределениеВидаПродукции КАК %ЗначениеЗамены%";
		ИнтеграцияИСУТ.ОпределитьВидПродукцииТекстаЗапроса(Шаблон, "втТаблицаНоменклатуры.%Ключ%");
		
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакПодакцизныйТовар" Тогда
		Шаблон = ",
		|	втТаблицаНоменклатуры.%Ключ%.ПодакцизныйТовар КАК %ЗначениеЗамены%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакТребуетВзвешивания" Тогда
		Шаблон = ",
		|	1 НЕ В
		|		(ВЫБРАТЬ ПЕРВЫЕ 1
		|			1
		|		ИЗ
		|			РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеИС
		|		ГДЕ
		|			втТаблицаНоменклатуры.%Ключ% = ОписаниеИС.Номенклатура
		|			Или втТаблицаНоменклатуры.%Ключ%.НаборУпаковок = ОписаниеИС.Номенклатура)
		|	И втТаблицаНоменклатуры.%Ключ%.ОсобенностьУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС),
		|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияБезВЕТИС),
		|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Пиво),
		|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПивоВПотребительскихУпаковках),
		|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.БезалкогольноеПиво),
		|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС))
		|	И втТаблицаНоменклатуры.%Ключ%.ЕдиницаИзмерения.ТипИзмеряемойВеличины В(
		|		ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь)) КАК %ЗначениеЗамены%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакПроизвольнаяЕдиницаУчета" Тогда
		Шаблон = ",
		|	1 В
		|		(ВЫБРАТЬ ПЕРВЫЕ 1
		|			1
		|		ИЗ
		|			РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеИС
		|		ГДЕ
		|			(втТаблицаНоменклатуры.%Ключ% = ОписаниеИС.Номенклатура
		|			Или втТаблицаНоменклатуры.%Ключ%.НаборУпаковок = ОписаниеИС.Номенклатура)
		|			И (ОписаниеИС.КоличествоВПотребительскойУпаковке <> 1
		|			Или ОписаниеИС.ЕмкостьПотребительскойУпаковки > 1))
		|	Или (
		|	1 НЕ В
		|		(ВЫБРАТЬ ПЕРВЫЕ 1
		|			1
		|		ИЗ
		|			РегистрСведений.ОписаниеНоменклатурыИС КАК ОписаниеИС
		|		ГДЕ
		|			втТаблицаНоменклатуры.%Ключ% = ОписаниеИС.Номенклатура
		|			Или втТаблицаНоменклатуры.%Ключ%.НаборУпаковок = ОписаниеИС.Номенклатура)
		|	И втТаблицаНоменклатуры.%Ключ%.ОсобенностьУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС),
		|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияБезВЕТИС),
		|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.Пиво),
		|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПивоВПотребительскихУпаковках),
		|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.БезалкогольноеПиво),
		|		ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС))
		|	И втТаблицаНоменклатуры.%Ключ%.ЕдиницаИзмерения.ТипИзмеряемойВеличины В(
		|		ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь))
		|	) КАК %ЗначениеЗамены%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьПризнакСкоропортящаясяПродукция" Тогда
		Шаблон = ",
		|	втТаблицаНоменклатуры.%Ключ%.ЕдиницаИзмеренияСрокаГодности = ЗНАЧЕНИЕ(Перечисление.ЕдиницыИзмеренияВремени.Час) КАК %ЗначениеЗамены%";
	КонецЕсли;
	
	Если КлючДействия = "ЗаполнитьКодОКПД2" Тогда
		Шаблон = ",
		|	ЕСТЬNULL(втТаблицаНоменклатуры.%Ключ%.КодОКПД2.Код, """") КАК %ЗначениеЗамены%";
	КонецЕсли;   
	
	Если КлючДействия = "ЗаполнитьКодОКПД2Представление" Тогда
		Шаблон = ",
		|	ЕСТЬNULL(втТаблицаНоменклатуры.%Ключ%.КодОКПД2.Наименование, """") КАК %ЗначениеЗамены%";
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация

#Область ОписанияЗапросов

Процедура ДополнитьТекстЗапросаКодОКПД2ПоНоменклатуре(СтруктураДействий, ОписаниеЗапроса, КэшированныеЗначения) Экспорт
	
	Если ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
			"ЗаполнитьКодОКПД2",
			СтруктураДействий,
			КэшированныеЗначения) Тогда
				
		ТекстЗапроса = "ВЫБРАТЬ
		|	Товары.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
		|	КлассификаторОКПД2.Код,
		|	КлассификаторОКПД2.Наименование
		|ПОМЕСТИТЬ ВтКодОКПД2ПоНоменклатуре
		|ИЗ
		|	ВтИсточникДанных КАК Товары
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО СправочникНоменклатура.Ссылка = Товары.Номенклатура 
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторОКПД2 КАК КлассификаторОКПД2
		|		ПО СправочникНоменклатура.КодОКПД2 = КлассификаторОКПД2.Ссылка
		|";
		
		ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаКоэффициентыПересчетаУпаковкиВЕТИС(СтруктураДействий, ОписаниеЗапроса, КэшированныеЗначения)
		
	Если Не ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
			"ПересчитатьКоличествоЕдиницВЕТИС,ПересчитатьКоличествоЕдиницПоВЕТИС",
			СтруктураДействий,
			КэшированныеЗначения) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеЕдиницИзмеренияВЕТИС.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
	|	ДанныеЕдиницИзмеренияВЕТИС.Номенклатура,
	|	ДанныеЕдиницИзмеренияВЕТИС.ЕдиницаИзмеренияВЕТИС,
	|	ЕСТЬNULL(ЕдиницыИзмеренияВЕТИС.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК
	|		Упаковка,
	|	ЕСТЬNULL(ЕдиницыИзмеренияВЕТИС.БазоваяЕдиницаИзмерения.ЕдиницаИзмерения, НЕОПРЕДЕЛЕНО) КАК Базовая,
	|	ЕСТЬNULL(ЕдиницыИзмеренияВЕТИС.Коэффициент, 1) КАК КоэффициентВЕТИС
	|ПОМЕСТИТЬ ДанныеУпаковок
	|ИЗ
	|	ВтИсточникДанных КАК ДанныеЕдиницИзмеренияВЕТИС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмеренияВЕТИС КАК ЕдиницыИзмеренияВЕТИС
	|		ПО ЕдиницыИзмеренияВЕТИС.Ссылка = ДанныеЕдиницИзмеренияВЕТИС.ЕдиницаИзмеренияВЕТИС";
	
	ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "ДанныеУпаковок");
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеУпаковок.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
	|	ДанныеУпаковок.Номенклатура КАК Номенклатура,
	|	ДанныеУпаковок.Упаковка КАК Упаковка,
	|	ДанныеУпаковок.ЕдиницаИзмеренияВЕТИС КАК ЕдиницаИзмеренияВЕТИС,
	|	ВЫБОР
	|		КОГДА ДанныеУпаковок.ЕдиницаИзмеренияВЕТИС = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмеренияВЕТИС.ПустаяСсылка)
	|			ТОГДА 1
	|		КОГДА ДанныеУпаковок.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА 1
	|		КОГДА ДанныеУпаковок.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1)
	|		КОГДА ДанныеУпаковок.Упаковка.ТипИзмеряемойВеличины <> ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
	|			ТОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 0)
	|		КОГДА ДанныеУпаковок.Упаковка = СправочникНоменклатура.ЕдиницаИзмерения
	|			ТОГДА 1
	|		КОГДА ДанныеУпаковок.Базовая = СправочникНоменклатура.ЕдиницаИзмерения
	|			ТОГДА ДанныеУпаковок.КоэффициентВЕТИС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Коэффициент,
	|	ВЫБОР
	|		КОГДА ДанныеУпаковок.ЕдиницаИзмеренияВЕТИС = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмеренияВЕТИС.ПустаяСсылка)
	|			ТОГДА Неопределено
	|		КОГДА ДанныеУпаковок.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА -1
	|		ИНАЧЕ ДанныеУпаковок.Упаковка.ТипИзмеряемойВеличины
	|	КОНЕЦ КАК ТипИзмеряемойВеличиныДляПроверки,
	|	ВЫБОР
	|		КОГДА ДанныеУпаковок.ЕдиницаИзмеренияВЕТИС = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмеренияВЕТИС.ПустаяСсылка)
	|			ТОГДА Неопределено
	|		КОГДА ДанныеУпаковок.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА Неопределено
	|		КОГДА ДанныеУпаковок.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА Неопределено
	|		ИНАЧЕ ЕСТЬNULL(ЕдиницыХранения.ТипИзмеряемойВеличины, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК ТипИзмеряемойВеличиныНоменклатуры
	|ИЗ
	|	ДанныеУпаковок КАК ДанныеУпаковок
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО СправочникНоменклатура.Ссылка = ДанныеУпаковок.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ЕдиницыХранения
	|		ПО СправочникНоменклатура.ЕдиницаИзмерения = ЕдиницыХранения.Ссылка";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки("Упаковка", "Номенклатура"));

	ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "КоэффициентыПересчетаУпаковкиВЕТИС");
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаКоэффициентыПересчетаЗЕРНО(СтруктураДействий, ОписаниеЗапроса, КэшированныеЗначения)

	Перем ПараметрыЗаполнения;
	
	Если Не ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
				"ПересчитатьКоличествоЕдиницПоЗЕРНО",
				СтруктураДействий,
				КэшированныеЗначения,
				ПараметрыЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Номенклатура,
	|	Килограмм.Значение КАК Упаковка
	|ИЗ
	|	ВтИсточникДанных КАК Товары,
	|	Константа.ЕдиницаИзмеренияКилограммИС КАК Килограмм
	|";
	
	ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "УпаковкиПересчетаЗЕРНО");
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаПродукцииВЕТИС(СтруктураДействий, ОписаниеЗапроса, КэшированныеЗначения)
	
	ПараметрыЗаполнения = Неопределено;
	
	Если Не ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
			"ЗаполнитьПродукциюВЕТИС",
			СтруктураДействий,
			КэшированныеЗначения,
			ПараметрыЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыЗаполнения.ЗаполнитьПродукциюВЕТИС Тогда
		Возврат;
	КонецЕсли;
	Отбор = Неопределено;
	ПараметрыЗаполнения.Свойство("ОтборПродукция",Отбор);
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Товары.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
		|	СоответствиеНоменклатурыВЕТИС.Продукция КАК Продукция,
		|	СоответствиеНоменклатурыВЕТИС.Продукция.ФасовкаЕдиницаИзмерения КАК ЕдиницаИзмеренияВЕТИС,
		|	СоответствиеНоменклатурыВЕТИС.Продукция.Продукция.Идентификатор КАК ПродукцияИдентификатор,
		|	СоответствиеНоменклатурыВЕТИС.Продукция.ТипПродукции.Идентификатор КАК ТипПродукцииИдентификатор,
		|	ЕСТЬNULL(СоответствиеНоменклатурыВЕТИС.Продукция.ВидПродукции.Идентификатор,
		|		СоответствиеНоменклатурыВЕТИС.Продукция.Идентификатор) КАК ВидПродукцииИдентификатор
		|ИЗ
		|	ВтИсточникДанных КАК Товары
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
		|	ПО СоответствиеНоменклатурыВЕТИС.Номенклатура = Товары.Номенклатура
		|	И СоответствиеНоменклатурыВЕТИС.Характеристика = Товары.Характеристика
		|	И (СоответствиеНоменклатурыВЕТИС.Серия = Товары.Серия
		|		ИЛИ Товары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
		|ГДЕ
		|	(СоответствиеНоменклатурыВЕТИС.Продукция.Производители.Производитель = &Предприятие
		|		ИЛИ &Предприятие = ЗНАЧЕНИЕ(Справочник.ПредприятияВЕТИС.ПустаяСсылка))
		|	И (СоответствиеНоменклатурыВЕТИС.Продукция.ХозяйствующийСубъектПроизводитель = &ХозяйствующийСубъект
		|		ИЛИ &ХозяйствующийСубъект = ЗНАЧЕНИЕ(Справочник.ХозяйствующиеСубъектыВЕТИС.ПустаяСсылка))
		|	И (НЕ &ИсключатьПродукциюТретьегоУровня
		|		ИЛИ СоответствиеНоменклатурыВЕТИС.Продукция.Идентификатор <> """")";
	
	ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "СоответствиеНоменклатурыВЕТИС");
	
	ОписаниеЗапроса.ПараметрыЗапроса.Вставить("ИсключатьПродукциюТретьегоУровня", ПараметрыЗаполнения.ИсключатьПродукциюТретьегоУровня);
	ОписаниеЗапроса.ПараметрыЗапроса.Вставить("Предприятие", Справочники.ПредприятияВЕТИС.ПустаяСсылка());
	ОписаниеЗапроса.ПараметрыЗапроса.Вставить("ХозяйствующийСубъект", Справочники.ХозяйствующиеСубъектыВЕТИС.ПустаяСсылка());
	
	Если ЗначениеЗаполнено(Отбор) Тогда
		Если Отбор.Свойство("ХозяйствующийСубъект") Тогда
			ОписаниеЗапроса.ПараметрыЗапроса.Вставить("ХозяйствующийСубъект", Отбор.ХозяйствующийСубъект);
		КонецЕсли;
		Если Отбор.Свойство("Предприятие") Тогда
			ОписаниеЗапроса.ПараметрыЗапроса.Вставить("Предприятие", Отбор.Предприятие);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаАлкогольнойПродукцииЕГАИС(СтруктураДействий, ОписаниеЗапроса, КэшированныеЗначения)
	
	ПараметрыЗаполнения = Неопределено;
	Если Не ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
			"ЗаполнитьАлкогольнуюПродукцию",
			СтруктураДействий,
			КэшированныеЗначения,
			ПараметрыЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	Если Не ПараметрыЗаполнения.ЗаполнитьАлкогольнуюПродукцию Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция КАК АлкогольнаяПродукция,
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.Крепость КАК Крепость
	|ИЗ
	|	ВтИсточникДанных КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|	ПО СоответствиеНоменклатурыЕГАИС.Номенклатура = Товары.Номенклатура
	|	И СоответствиеНоменклатурыЕГАИС.Характеристика = Товары.Характеристика
	|	И (СоответствиеНоменклатурыЕГАИС.Серия = Товары.Серия
	|		ИЛИ Товары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|ГДЕ
	|	&ОтборМаркируемаяПродукция
	|	И &ОтборИмпортПроизводство
	|";
	
	ОписаниеЗапроса.ПараметрыЗапроса.Вставить("ОтборМаркируемаяПродукция", Истина);
	ОписаниеЗапроса.ПараметрыЗапроса.Вставить("ОтборИмпортПроизводство", Истина);
	
	Если ПараметрыЗаполнения.МаркируемаяАлкогольнаяПродукция <> Неопределено Тогда
		ОписаниеЗапроса.ПараметрыЗапроса.Вставить("ОтборМаркируемаяПродукция", ПараметрыЗаполнения.МаркируемаяАлкогольнаяПродукция);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборМаркируемаяПродукция",
		"СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.ВидПродукции.Маркируемый = &ОтборМаркируемаяПродукция");
	КонецЕсли;
	Если ПараметрыЗаполнения.ИмпортПроизводство <> Неопределено Тогда
		Если ПараметрыЗаполнения.ИмпортПроизводство Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборИмпортПроизводство",
			"СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.Производитель.ТипОрганизации В(
			|	ЗНАЧЕНИЕ(Перечисление.ТипыОрганизацийЕГАИС.ЮридическоеЛицоРФ),
			|	ЗНАЧЕНИЕ(Перечисление.ТипыОрганизацийЕГАИС.ИндивидуальныйПредпринимательРФ))");
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборИмпортПроизводство",
			"СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.Производитель.ТипОрганизации В(
			|	ЗНАЧЕНИЕ(Перечисление.ТипыОрганизацийЕГАИС.КонтрагентТаможенногоСоюза),
			|	ЗНАЧЕНИЕ(Перечисление.ТипыОрганизацийЕГАИС.ИностранныйКонтрагент))");
		КонецЕсли;
	КонецЕсли;
	
	ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "СоответствиеНоменклатурыЕГАИС");
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаПродукцииСАТУРН(СтруктураДействий, ОписаниеЗапроса, КэшированныеЗначения)
	
	ПараметрыЗаполнения = Неопределено;
	
	Если Не ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
			"ЗаполнитьПродукциюСАТУРН",
			СтруктураДействий,
			КэшированныеЗначения,
			ПараметрыЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПараметрыЗаполнения.ЗаполнитьПродукциюСАТУРН Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Товары.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
		|	СоответствиеНоменклатурыСАТУРН.ПАТ КАК ПАТ
		|ИЗ
		|	ВтИсточникДанных КАК Товары
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыСАТУРН КАК СоответствиеНоменклатурыСАТУРН
		|	ПО СоответствиеНоменклатурыСАТУРН.Номенклатура = Товары.Номенклатура
		|	И СоответствиеНоменклатурыСАТУРН.Характеристика = Товары.Характеристика
		|	И СоответствиеНоменклатурыСАТУРН.Серия = Товары.Серия
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Товары.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
		|	СоответствиеНоменклатурыСАТУРН.ПАТ КАК ПАТ
		|ИЗ
		|	ВтИсточникДанных КАК Товары
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыСАТУРН КАК ПолноеСоответствие
		|	ПО ПолноеСоответствие.Номенклатура = Товары.Номенклатура
		|	И ПолноеСоответствие.Характеристика = Товары.Характеристика
		|	И ПолноеСоответствие.Серия = Товары.Серия
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыСАТУРН КАК СоответствиеНоменклатурыСАТУРН
		|	ПО СоответствиеНоменклатурыСАТУРН.Номенклатура = Товары.Номенклатура
		|	И СоответствиеНоменклатурыСАТУРН.Характеристика = Товары.Характеристика
		|ГДЕ
		|	ПолноеСоответствие.Номенклатура ЕСТЬ NULL
		|";
	
	ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "СоответствиеНоменклатурыСАТУРН");
	
КонецПроцедуры

Процедура ДополнитьТекстЗапросаУпаковкиСАТУРН(СтруктураДействий, ОписаниеЗапроса, КэшированныеЗначения)
	
	ПараметрыЗаполнения = Неопределено;
	
	Если Не ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
			"ПересчитатьТипИзмеряемойВеличиныСАТУРН", СтруктураДействий, КэшированныеЗначения, ПараметрыЗаполнения)
		И Не ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
			"ПересчитатьКоличествоДляСАТУРН", СтруктураДействий, КэшированныеЗначения, ПараметрыЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не КэшированныеЗначения.Свойство("КоэффициентВесОбъемУпаковки") Тогда
		КэшированныеЗначения.Вставить("КоэффициентВесОбъемУпаковки", Новый Соответствие);
	КонецЕсли;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ЕдиницаИзмеренияКилограммИС.Значение.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
		|			И ЕСТЬNULL(ЕдиницаИзмеренияКилограммИС.Значение.Знаменатель, 1) <> 0
		|		ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ЕдиницаИзмеренияКилограммИС.Значение.Числитель, 1) / ЕСТЬNULL(ЕдиницаИзмеренияКилограммИС.Значение.Знаменатель, 1) КАК Число(17,7))
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоэффициентВеса,
		|	ВЫБОР
		|		КОГДА ЕдиницаИзмеренияЛитрИС.Значение.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
		|			И ЕСТЬNULL(ЕдиницаИзмеренияЛитрИС.Значение.Знаменатель, 1) <> 0
		|		ТОГДА ВЫРАЗИТЬ(ЕСТЬNULL(ЕдиницаИзмеренияЛитрИС.Значение.Числитель, 1) / ЕСТЬNULL(ЕдиницаИзмеренияЛитрИС.Значение.Знаменатель, 1) КАК Число(17,7))
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК КоэффициентОбъема
		|ПОМЕСТИТЬ КоэффициентыВесаИОбъема
		|ИЗ
		|	Константа.ЕдиницаИзмеренияКилограммИС КАК ЕдиницаИзмеренияКилограммИС,
		|	Константа.ЕдиницаИзмеренияЛитрИС КАК ЕдиницаИзмеренияЛитрИС";
	ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "ЕдиницыИзмеренияИС");
	
	ТекстЗапроса = "ВЫБРАТЬ
		|	Товары.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
		|	Товары.Номенклатура КАК Номенклатура,
		|	ВЫБОР
		|		КОГДА Товары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|		ТОГДА СправочникНоменклатура.ЕдиницаИзмерения
		|		ИНАЧЕ Товары.Упаковка
		|	КОНЕЦ КАК Упаковка,
		|	СправочникНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ПОМЕСТИТЬ ИсточникиУпаковок
		|ИЗ
		|	ВтИсточникДанных КАК Товары
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|	ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка";
	ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "ИсточникиУпаковокИС");
	
	ИсточникУпаковки        = "Данные.Упаковка";
	ИсточникУпаковкиБазовая = "Данные.ЕдиницаИзмерения";
	ИсточникНоменклатуры    = "Данные.Номенклатура";
	ТекстЗапроса = СтрШаблон("ВЫБРАТЬ
		|	Данные.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
		|	%1 КАК Коэффициент,
		|	ВЫБОР
		|		КОГДА ЕстьNULL(КоэффициентыВесаИОбъема.КоэффициентВеса, 0) = 0
		|		ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(%2 / КоэффициентыВесаИОбъема.КоэффициентВеса КАК ЧИСЛО(18, 6))
		|	КОНЕЦ КАК ВесЕдиницы,
		|	ВЫБОР
		|		КОГДА ЕстьNULL(КоэффициентыВесаИОбъема.КоэффициентОбъема, 0) = 0
		|		ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ(%3 / КоэффициентыВесаИОбъема.КоэффициентОбъема КАК ЧИСЛО(18, 6))
		|	КОНЕЦ КАК ОбъемЕдиницы,
		|	Данные.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
		|		ИЛИ Данные.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес) КАК ТипИзмеряемойВеличиныВес,
		|	Данные.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
		|		ИЛИ Данные.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем) КАК ТипИзмеряемойВеличиныОбъем
		|ИЗ
		|	ИсточникиУпаковок КАК Данные,
		|	КоэффициентыВесаИОбъема КАК КоэффициентыВесаИОбъема",
	Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(ИсточникУпаковки, ИсточникНоменклатуры),
	Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(ИсточникУпаковкиБазовая, ИсточникНоменклатуры, Ложь),
	Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки(ИсточникУпаковкиБазовая, ИсточникНоменклатуры, Ложь));
	
	ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "ДанныеУпаковокИС");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСтрок

Процедура ЗаполнитьСчетФактуруПеревыставленнуюВОтчетеКомитентуОЗакупках(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	ДанныеДляОбработкиСтроки = ПакетнаяОбработкаТабличнойЧастиСервер.ДанныеДляОбработкиСтроки(
									"СчетФактурыПеревыставленныеВОтчетеКомитентуОЗакупках",
									КэшированныеЗначения);
									
	ТекущаяСтрока.СчетФактураВыданныйКомитенту = Документы.СчетФактураВыданный.ПустаяСсылка();

	Если ДанныеДляОбработкиСтроки <> Неопределено Тогда
		ТекущаяСтрока.СчетФактураВыданныйКомитенту = ДанныеДляОбработкиСтроки[0].СчетФактураВыданныйКомитенту; 
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьКодОКПД2ПоНоменклатуреВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	ПараметрыЗаполнения = Неопределено;
	
	СтруктураДействий.Свойство("ЗаполнитьКодОКПД2", ПараметрыЗаполнения);
	
	Реквизиты = ПакетнаяОбработкаТабличнойЧастиСервер.ДанныеДляОбработкиСтроки("ВтКодОКПД2ПоНоменклатуре", КэшированныеЗначения); 
	Если Не Реквизиты = Неопределено Тогда
		ТекущаяСтрока.ОКПД2 = Реквизиты.КодОКПД2Код;
		Если ЗначениеЗаполнено(ТекущаяСтрока.ОКПД2) Тогда
			ТекущаяСтрока.ОКПД2Представление = ИнтеграцияЗЕРНОКлиентСервер.ПредставлениеОКПД2(Реквизиты.КодОКПД2Наименование, ТекущаяСтрока.ОКПД2);
		Иначе
			ТекущаяСтрока.ОКПД2Представление = "";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПродукциюВЕТИС(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения = Неопределено) Экспорт
	
	ПараметрыЗаполнения = Неопределено;
	Если Не СтруктураДействий.Свойство("ЗаполнитьПродукциюВЕТИС", ПараметрыЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ПараметрыЗаполнения.ЗаполнитьПродукциюВЕТИС Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ПакетнаяОбработкаТабличнойЧастиСервер.ДанныеДляОбработкиСтроки("СоответствиеНоменклатурыВЕТИС", КэшированныеЗначения);
	
	ТекущаяСтрока.НоменклатураДляВыбора.Очистить();
	Если Реквизиты = Неопределено Тогда
		КоличествоСопоставлено = 0;
	Иначе
		КоличествоСопоставлено = Реквизиты.Количество();
		Для Каждого ЭлементСопоставления Из Реквизиты Цикл
			ТекущаяСтрока.НоменклатураДляВыбора.Добавить(ЭлементСопоставления.Продукция);
		КонецЦикла;
	КонецЕсли;
		
	Если КоличествоСопоставлено = 0 Тогда
		ТекущаяСтрока.Продукция = Неопределено;
		ТекущаяСтрока.СопоставлениеТекст = НСтр("ru = '<Не сопоставлено>'");
	ИначеЕсли КоличествоСопоставлено > 1 Тогда
		ТекущаяСтрока.СопоставлениеТекст = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), КоличествоСопоставлено);
	Иначе
		ТекущаяСтрока.СопоставлениеТекст = "";
		ТекущаяСтрока.Продукция = Реквизиты[0].Продукция;
		ЕдиницаИзмеренияВЕТИСДо = ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС;
		ИнтеграцияВЕТИС.ПроверитьОчиститьЕдиницуИзмеренияВЕТИС(ТекущаяСтрока, Реквизиты[0]);
	// После получения новой единицы измерения ВЕТИС, выполненный пакетный запрос для пересчета количества 
	// ВЕТИС по количеству становится неактуальным
		Если ЕдиницаИзмеренияВЕТИСДо <> ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС Тогда
			Если Не КэшированныеЗначения.Свойство("ЕдиницаИзмеренияВЕТИСИзменена") Тогда
				КэшированныеЗначения.Вставить("ЕдиницаИзмеренияВЕТИСИзменена", Новый Соответствие);
				КэшированныеЗначения.ЕдиницаИзмеренияВЕТИСИзменена.Вставить("ЗаполнениеПроизведено", Ложь);
				ТаблицаДозаполнения = Новый ТаблицаЗначений;
				ТаблицаДозаполнения.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
				ТаблицаДозаполнения.Колонки.Добавить("ЕдиницаИзмеренияВЕТИС", Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмеренияВЕТИС"));
				КэшированныеЗначения.ЕдиницаИзмеренияВЕТИСИзменена.Вставить("ДанныеСтрокВЕТИС", ТаблицаДозаполнения);
			КонецЕсли;
			НоваяСтрока = КэшированныеЗначения.ЕдиницаИзмеренияВЕТИСИзменена.ДанныеСтрокВЕТИС.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияПередПересчетомКоличестваЕдиницВЕТИС(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Если Не СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницВЕТИС") Тогда
		Возврат;
	КонецЕсли;
	Если Не КэшированныеЗначения.Свойство("ЕдиницаИзмеренияВЕТИСИзменена") Тогда
		Возврат;
	КонецЕсли;
	Если КэшированныеЗначения.ЕдиницаИзмеренияВЕТИСИзменена.Получить("ЗаполнениеПроизведено") Тогда
		Возврат;
	КонецЕсли;
	КоэффициентыЕдиницИзмеренияПоВЕТИС = ИнтеграцияВЕТИСУТ.КоэффициентыЕдиницИзмеренияПоВЕТИС(
		КэшированныеЗначения.ЕдиницаИзмеренияВЕТИСИзменена.ДанныеСтрокВЕТИС);
	КэшированныеЗначения.ЕдиницаИзмеренияВЕТИСИзменена.Вставить("Коэффициенты", КоэффициентыЕдиницИзмеренияПоВЕТИС);
	КэшированныеЗначения.ЕдиницаИзмеренияВЕТИСИзменена.Вставить("ЗаполнениеПроизведено", Истина);
	
КонецПроцедуры

Процедура ДействияПередПересчетомКоличестваЕдиницЗЕРНО(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Если Не СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницПоЗЕРНО") Тогда
		Возврат;
	КонецЕсли;
	Если КэшированныеЗначения.Свойство("КоэффициентыПересчетаЗЕРНО") Тогда
		Возврат;
	КонецЕсли;
	КоэффициентыПересчетаЗЕРНО = Справочники.УпаковкиЕдиницыИзмерения.КоэффициентыУпаковок(
		КэшированныеЗначения.ДанныеДляОбработки.УпаковкиПересчетаЗЕРНО);
	КэшированныеЗначения.Вставить("КоэффициентыПересчетаЗЕРНО", КоэффициентыПересчетаЗЕРНО);
	
КонецПроцедуры

// Пересчитывает количество товара ВЕТИС в текущей строке табличной части документа.
//
// Параметры:
//	ТекущаяСтрока			- Структура - Структура со свойствами строки документа.
//	СтруктураДействий		- Структура - Структура с действиями, которые нужно произвести.
//	КэшированныеЗначения	- Структура - Сохраненные значения параметров, используемых при обработке строки таблицы.
//
Процедура ПересчитатьКоличествоЕдиницВЕТИСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Перем ПараметрыПересчетаКоличества, ТекстОшибки;
	
	Если Не СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницВЕТИС", ПараметрыПересчетаКоличества) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяКоличества = "Количество" + ПараметрыПересчетаКоличества.Суффикс;
	ИмяКоличестваВЕТИС = "Количество" + ПараметрыПересчетаКоличества.Суффикс + "ВЕТИС";
	
	ПараметрыПересчета = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.НормализоватьПараметрыПересчетаЕдиниц(ТекущаяСтрока, ПараметрыПересчетаКоличества);
	НужноОкруглять = ПараметрыПересчета.НужноОкруглять;
	
	// Если в процессе менялась единица ВетИС
	Если КэшированныеЗначения.Свойство("ЕдиницаИзмеренияВЕТИСИзменена") Тогда
		ДанныеПоНоменклатуре = КэшированныеЗначения.ЕдиницаИзмеренияВЕТИСИзменена.Получить(ТекущаяСтрока.Номенклатура);
		Если ДанныеПоНоменклатуре <> Неопределено Тогда
			ДанныеПоЕдинице = ДанныеПоНоменклатуре.Получить(ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС);
			Если ДанныеПоЕдинице <> Неопределено Тогда
				Если ДанныеПоЕдинице.КодОшибки = 0 Тогда
					ТекущаяСтрока[ИмяКоличестваВЕТИС] = ТекущаяСтрока[ИмяКоличества] / ДанныеПоЕдинице.Коэффициент;
					Если НужноОкруглять И ДанныеПоЕдинице.НужноОкруглятьКоличествоВЕТИС Тогда
						ТекущаяСтрока[ИмяКоличестваВЕТИС] = Окр(ТекущаяСтрока[ИмяКоличестваВЕТИС], 0, РежимОкругления.Окр15как20);
					КонецЕсли;
				Иначе
					ТекстОшибки = ИнтеграцияВЕТИСУТКлиентСервер.ТекстОшибкиПересчетаЕдиницыИзмеренияВЕТИС(
						ДанныеПоЕдинице.КодОшибки,
						ТекущаяСтрока.Номенклатура,
						ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС,
						ДанныеПоЕдинице.ТипИзмеряемойВеличины,
						"ВЕТИС");
					ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
				КонецЕсли;
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Реквизиты = ПакетнаяОбработкаТабличнойЧастиСервер.ДанныеДляОбработкиСтроки("КоэффициентыПересчетаУпаковкиВЕТИС", КэшированныеЗначения);
	Если Реквизиты = Неопределено Тогда
		ТекстОшибки = ИнтеграцияВЕТИСУТКлиентСервер.ТекстОшибкиПересчетаЕдиницыИзмеренияВЕТИС(
			ДанныеПоЕдинице.КодОшибки,
			ТекущаяСтрока.Номенклатура,
			ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС,
			ДанныеПоЕдинице.ТипИзмеряемойВеличины,
			"ВЕТИС");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;
	
	МерныеТипыЕдиницИзмерений = Справочники.УпаковкиЕдиницыИзмерения.МерныеТипыЕдиницИзмерений();
	ДанныеПересчета = Реквизиты[0];
	Коэффициент = 1;
	КодОшибки = 0;
	ТипИзмеряемойВеличины = Неопределено;
	Если ДанныеПересчета.ТипИзмеряемойВеличиныДляПроверки = -1 Тогда
		КодОшибки = 1;
	ИначеЕсли НЕ ЗначениеЗаполнено(ДанныеПересчета.ЕдиницаИзмеренияВЕТИС) Тогда
	Иначе
		Если ДанныеПересчета.Коэффициент = 0 Тогда
			Если МерныеТипыЕдиницИзмерений.Найти(ДанныеПересчета.ТипИзмеряемойВеличиныДляПроверки) <> Неопределено Тогда
				КодОшибки = 2;
				ТипИзмеряемойВеличины = ДанныеПересчета.ТипИзмеряемойВеличиныДляПроверки;
			Иначе
				КодОшибки = 3;
			КонецЕсли;
		Иначе
			Коэффициент = ДанныеПересчета.Коэффициент;
		КонецЕсли;
	КонецЕсли;
	
	НужноОкруглять = НужноОкруглять
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура)
		И ДанныеПересчета.ТипИзмеряемойВеличиныДляПроверки = Перечисления.ТипыИзмеряемыхВеличин.КоличествоШтук
		И МерныеТипыЕдиницИзмерений.Найти(ДанныеПересчета.ТипИзмеряемойВеличиныНоменклатуры) <> Неопределено;
	Если КодОшибки = 0 Тогда
		ТекущаяСтрока[ИмяКоличестваВЕТИС] = ТекущаяСтрока[ИмяКоличества] / Коэффициент;
		Если НужноОкруглять Тогда
			ТекущаяСтрока[ИмяКоличестваВЕТИС] = Окр(ТекущаяСтрока[ИмяКоличестваВЕТИС], 0, РежимОкругления.Окр15как20);
		КонецЕсли;
	Иначе
		ТекстОшибки = ИнтеграцияВЕТИСУТКлиентСервер.ТекстОшибкиПересчетаЕдиницыИзмеренияВЕТИС(
			КодОшибки, ТекущаяСтрока.Номенклатура, ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС, ТипИзмеряемойВеличины, "ВЕТИС");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

// Пересчитывает количество товара (в единицах хранения) в текущей строке табличной части документа.
//
// Параметры:
//	ТекущаяСтрока			- Структура - Структура со свойствами строки документа.
//	СтруктураДействий		- Структура - Структура с действиями, которые нужно произвести.
//	КэшированныеЗначения	- Структура - Сохраненные значения параметров, используемых при обработке строки таблицы.
//
Процедура ПересчитатьКоличествоЕдиницПоВЕТИСВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Перем ПараметрыПересчетаКоличества, ТекстОшибки;
	
	Если Не СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницПоВЕТИС", ПараметрыПересчетаКоличества) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПересчета = ПакетнаяОбработкаТабличнойЧастиКлиентСервер.НормализоватьПараметрыПересчетаЕдиниц(ТекущаяСтрока, ПараметрыПересчетаКоличества);
	НужноОкруглять = ПараметрыПересчета.НужноОкруглять;
	ИмяКоличества = "Количество" + ПараметрыПересчетаКоличества.Суффикс;
	ИмяКоличестваВЕТИС = "Количество" + ПараметрыПересчетаКоличества.Суффикс + "ВЕТИС";
	
	// Если в процессе менялась единица ВетИС
	Если КэшированныеЗначения.Свойство("ЕдиницаИзмеренияВЕТИСИзменена") Тогда
		ДанныеПоНоменклатуре = КэшированныеЗначения.ЕдиницаИзмеренияВЕТИСИзменена.Получить(ТекущаяСтрока.Номенклатура);
		Если ДанныеПоНоменклатуре <> Неопределено Тогда
			ДанныеПоЕдинице = ДанныеПоНоменклатуре.Получить(ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС);
			Если ДанныеПоЕдинице <> Неопределено Тогда
				Если ДанныеПоЕдинице.КодОшибки = 0 Тогда
					ТекущаяСтрока[ИмяКоличества] = ТекущаяСтрока[ИмяКоличестваВЕТИС] * ДанныеПоЕдинице.Коэффициент;
					Если НужноОкруглять
						И ДанныеПоЕдинице.НужноОкруглятьКоличество Тогда
						ТекущаяСтрока[ИмяКоличества] = Окр(ТекущаяСтрока[ИмяКоличества], 0, РежимОкругления.Окр15как20);
					КонецЕсли;
				Иначе
					ТекстОшибки = ИнтеграцияВЕТИСУТКлиентСервер.ТекстОшибкиПересчетаЕдиницыИзмеренияВЕТИС(
						ДанныеПоЕдинице.КодОшибки,
						ТекущаяСтрока.Номенклатура,
						ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС,
						ДанныеПоЕдинице.ТипИзмеряемойВеличины,
						"ВЕТИС");
					ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
				КонецЕсли;
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Реквизиты = ПакетнаяОбработкаТабличнойЧастиСервер.ДанныеДляОбработкиСтроки("КоэффициентыПересчетаУпаковкиВЕТИС", КэшированныеЗначения);
	Если Реквизиты = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МерныеТипыЕдиницИзмерений = Справочники.УпаковкиЕдиницыИзмерения.МерныеТипыЕдиницИзмерений();
	ДанныеПересчета = Реквизиты[0];
	Коэффициент = 1;
	ТипИзмеряемойВеличины = Неопределено;
	Если ДанныеПересчета.ТипИзмеряемойВеличиныДляПроверки = -1 Тогда
		КодОшибки = 1;
	ИначеЕсли НЕ ЗначениеЗаполнено(ДанныеПересчета.ЕдиницаИзмеренияВЕТИС) Тогда
	Иначе
		Если ДанныеПересчета.Коэффициент = 0 Тогда
			Если МерныеТипыЕдиницИзмерений.Найти(ДанныеПересчета.ТипИзмеряемойВеличиныДляПроверки) <> Неопределено Тогда
				КодОшибки = 2;
				ТипИзмеряемойВеличины = ДанныеПересчета.ТипИзмеряемойВеличиныДляПроверки;
			Иначе
				КодОшибки = 3;
			КонецЕсли;
		Иначе
			Коэффициент = ДанныеПересчета.Коэффициент;
		КонецЕсли;
	КонецЕсли;
	
	НужноОкруглять = НужноОкруглять
		И ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура)
		И ДанныеПересчета.ТипИзмеряемойВеличиныНоменклатуры = Перечисления.ТипыИзмеряемыхВеличин.КоличествоШтук
		И МерныеТипыЕдиницИзмерений.Найти(ДанныеПересчета.ТипИзмеряемойВеличиныДляПроверки) <> Неопределено;
	
	Если КодОшибки = 0 Тогда
		ТекущаяСтрока[ИмяКоличества] = ТекущаяСтрока[ИмяКоличестваВЕТИС] * Коэффициент;
		Если НужноОкруглять Тогда
			ТекущаяСтрока[ИмяКоличества] = Окр(ТекущаяСтрока[ИмяКоличества], 0, РежимОкругления.Окр15как20);
		КонецЕсли;
	Иначе
		ТекстОшибки = ИнтеграцияВЕТИСУТКлиентСервер.ТекстОшибкиПересчетаЕдиницыИзмеренияВЕТИС(
			КодОшибки, ТекущаяСтрока.Номенклатура, ТекущаяСтрока.ЕдиницаИзмеренияВЕТИС, ТипИзмеряемойВеличины, "ВЕТИС");
		ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
	КонецЕсли;
	
КонецПроцедуры

// Заполнить алкогольную продукцию строки табличной части.
// 
// Параметры:
//  ТекущаяСтрока - Произвольный - строка (документа), в которой происходит заполнение
//  ПараметрыЗаполнения - См. ИнтеграцияЕГАИСКлиентСервер.ПараметрыЗаполненияТабличнойЧасти
//	КэшированныеЗначения	- Структура - Сохраненные значения параметров, используемых при обработке строки таблицы.
Процедура ЗаполнитьАлкогольнуюПродукцию(ТекущаяСтрока, ПараметрыЗаполнения, КэшированныеЗначения) Экспорт
	
	ПараметрыЗаполнения = Неопределено;
	Если Не ПараметрыЗаполнения.Свойство("ЗаполнитьАлкогольнуюПродукцию", ПараметрыЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ПараметрыЗаполнения.ЗаполнитьАлкогольнуюПродукцию Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьПоляВыбора = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "НоменклатураДляВыбора");
	Если ЕстьПоляВыбора Тогда
		ТекущаяСтрока.НоменклатураДляВыбора.Очистить();
	КонецЕсли;
	
	Реквизиты = ПакетнаяОбработкаТабличнойЧастиСервер.ДанныеДляОбработкиСтроки("СоответствиеНоменклатурыЕГАИС", КэшированныеЗначения);
	
	Если Реквизиты = Неопределено Тогда
		КоличествоСопоставлено = 0;
	Иначе
		КоличествоСопоставлено = Реквизиты.Количество();
		Если ЕстьПоляВыбора Тогда
			Для Каждого ЭлементСопоставления Из Реквизиты Цикл
				ТекущаяСтрока.НоменклатураДляВыбора.Добавить(ЭлементСопоставления.АлкогольнаяПродукция);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если КоличествоСопоставлено = 0 Тогда
		ТекущаяСтрока.АлкогольнаяПродукция = Неопределено;
		Если ЕстьПоляВыбора Тогда
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = НСтр("ru = '<Не сопоставлено>'");
		КонецЕсли;
	ИначеЕсли КоличествоСопоставлено = 1 Тогда
		ТекущаяСтрока.АлкогольнаяПродукция = Реквизиты[0].АлкогольнаяПродукция;
		Если ПараметрыЗаполнения.ЗаполнитьКрепость Тогда
			ТекущаяСтрока.Крепость = Реквизиты[0].Крепость;
		КонецЕсли;
		Если ЕстьПоляВыбора Тогда
			ТекущаяСтрока.ПредставлениеКрепости = Реквизиты[0].Крепость;
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = "";
		КонецЕсли;
	Иначе
		Если ЕстьПоляВыбора Тогда
			ТекущаяСтрока.СопоставлениеАлкогольнаяПродукция = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), КоличествоСопоставлено);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Пересчитывает количество товара (в единицах хранения ФГИС Зерно) в текущей строке табличной части документа.
//
// Параметры:
//	ТекущаяСтрока			- Структура - Структура со свойствами строки документа.
//	СтруктураДействий		- Структура - Структура с действиями, которые нужно произвести.
//	КэшированныеЗначения	- Структура - Сохраненные значения параметров, используемых при обработке строки таблицы.
//
Процедура ПересчитатьКоличествоЕдиницПоЗЕРНОВСтрокеТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Если Не СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиницПоЗЕРНО") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не КэшированныеЗначения.Свойство("КоэффициентыПересчетаЗЕРНО") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициент = КэшированныеЗначения.КоэффициентыПересчетаЗЕРНО.Получить(ТекущаяСтрока.Номенклатура);
	Если Коэффициент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	// в соответствии ровно 1 элемент - коэффициент для килограмма
	Для Каждого КлючИЗначение Из Коэффициент Цикл
		Коэффициент = КлючИЗначение.Значение;
	КонецЦикла;
	
	Если ТекущаяСтрока.Количество > 0 Тогда
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) Тогда
			Если Не ЗначениеЗаполнено(Коэффициент) Тогда
				Коэффициент = 1;
			КонецЕсли;
			ТекущаяСтрока.КоличествоЗЕРНО = ТекущаяСтрока.Количество / Коэффициент;
		Иначе
			ТекущаяСтрока.Количество = 0;
		КонецЕсли;
		
	ИначеЕсли ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура)
		И ТекущаяСтрока.КоличествоЗЕРНО > 0 Тогда
		ТекущаяСтрока.Количество = ТекущаяСтрока.КоличествоЗЕРНО * Коэффициент;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает сведения о коэффициенте пересчета единицы измерения ВЕТИС.
//
// Параметры:
//	ЕдиницаИзмеренияВЕТИС - СправочникСсылка.ЕдиницыИзмеренияВЕТИС	- Единица измерения ВЕТИС, коэффициент которой нужно 
//																		получить.
//	Номенклатура - СправочникСсылка.Номенклатура - Номенклатура для единицы хранения, которой осуществляется получение 
//		коэффициента пересчета.
//	КэшированныеЗначения - Структура - Сохраненные значения параметров, используемых при обработке строки таблицы.
//
// Возвращаемое значение:
//	см. ИнтеграцияВЕТИСУТ.КоэффициентЕдиницыИзмеренияПоВЕТИС.
//
Функция ДанныеЕдиницыИзмеренияВЕТИС(ЕдиницаИзмеренияВЕТИС, Номенклатура, КэшированныеЗначения) Экспорт
	
	КлючКоэффициента = ОбработкаТабличнойЧастиКлиентСервер.КлючКэшаУпаковки(Номенклатура, ЕдиницаИзмеренияВЕТИС);
	
	ДанныеЕдиницыИзмеренияВЕТИС = КэшированныеЗначения.КоэффициентыУпаковок.Получить(КлючКоэффициента);
	Если ДанныеЕдиницыИзмеренияВЕТИС = Неопределено Тогда
		
		ДанныеЕдиницыИзмеренияВЕТИС = ИнтеграцияВЕТИСУТ.КоэффициентЕдиницыИзмеренияПоВЕТИС(
			ЕдиницаИзмеренияВЕТИС, Номенклатура);
		
		Если ДанныеЕдиницыИзмеренияВЕТИС.КэшироватьДанные Тогда
			
			ИменаКлючей = "КодОшибки, Коэффициент, ТипИзмеряемойВеличины, НужноОкруглятьКоличество,"
							+ "НужноОкруглятьКоличествоВЕТИС";
			
			ДанныеКлюча = Новый Структура(ИменаКлючей);
			ЗаполнитьЗначенияСвойств(ДанныеКлюча, ДанныеЕдиницыИзмеренияВЕТИС);
			
			КэшированныеЗначения.КоэффициентыУпаковок.Вставить(КлючКоэффициента, ДанныеКлюча);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДанныеЕдиницыИзмеренияВЕТИС;
	
КонецФункции

Процедура ЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения) Экспорт
	
	Перем ПараметрыДействия;
	
	СтруктураДействий.Свойство("ЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках", ПараметрыДействия);
	
	ДанныеПоСтроке = ПакетнаяОбработкаТабличнойЧастиСервер.ДанныеДляОбработкиСтроки("ЗаполнитьСчетФактуруПолученнуюВОтчетеКомитентуОЗакупках", КэшированныеЗначения);
	Если ДанныеПоСтроке <> Неопределено Тогда
		
		ВидыДокументов = Новый Массив;
		ВидыДокументов.Добавить("ЗаявлениеОВвозеТоваров");
		ВидыДокументов.Добавить("ИнойДокументПодтвержденияНДС");
		ВидыДокументов.Добавить("СчетФактураПолученный");
		ВидыДокументов.Добавить("СчетФактураПолученныйНалоговыйАгент");
		
		Для Каждого ВидДокумента Из ВидыДокументов Цикл
			
			СтруктураПоиска = Новый Структура("ВидДокумента", ВидДокумента);
			ПоискСтрок = ДанныеПоСтроке.НайтиСтроки(СтруктураПоиска);
			Если ПоискСтрок.Количество() > 0 Тогда
				
				ТекущаяСтрока.СчетФактураПолученный = ПоискСтрок.Получить(0).Ссылка;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Заполнить ПАТ САТУРН строки табличной части.
// 
// Параметры:
//  ТекущаяСтрока - Произвольный - строка (документа), в которой происходит заполнение
//  ПараметрыЗаполнения - Структура - Параметры заполнения
//  КэшированныеЗначения - Неопределено - Кэшированные значения
Процедура ЗаполнитьПродукциюСАТУРН(ТекущаяСтрока, ПараметрыЗаполнения, КэшированныеЗначения) Экспорт
	
	ПараметрыЗаполнения = Неопределено;
	Если Не ПараметрыЗаполнения.Свойство("ЗаполнитьПродукциюСАТУРН", ПараметрыЗаполнения) Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ПараметрыЗаполнения.ЗаполнитьПродукциюСАТУРН Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьПоляВыбора = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "НоменклатураДляВыбора");
	Если ЕстьПоляВыбора Тогда
		ТекущаяСтрока.НоменклатураДляВыбора.Очистить();
	КонецЕсли;
	
	Реквизиты = ПакетнаяОбработкаТабличнойЧастиСервер.ДанныеДляОбработкиСтроки("СоответствиеНоменклатурыСАТУРН", КэшированныеЗначения);
	
	Если Реквизиты = Неопределено Тогда
		КоличествоСопоставлено = 0;
	Иначе
		КоличествоСопоставлено = Реквизиты.Количество();
		Если ЕстьПоляВыбора Тогда
			Для Каждого ЭлементСопоставления Из Реквизиты Цикл
				ТекущаяСтрока.НоменклатураДляВыбора.Добавить(ЭлементСопоставления.ПАТ);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если КоличествоСопоставлено = 0 Тогда
		ТекущаяСтрока.ПАТ = Неопределено;
		Если ЕстьПоляВыбора Тогда
			ТекущаяСтрока.СопоставлениеТекст = НСтр("ru = '<Не сопоставлено>'");
		КонецЕсли;
	ИначеЕсли КоличествоСопоставлено = 1 Тогда
		ТекущаяСтрока.ПАТ = Реквизиты[0].ПАТ;
		Если ЕстьПоляВыбора Тогда
			ТекущаяСтрока.СопоставлениеТекст = "";
		КонецЕсли;
	Иначе
		Если ЕстьПоляВыбора Тогда
			ТекущаяСтрока.СопоставлениеТекст = СтрШаблон(НСтр("ru = '<Несколько позиций (%1)>'"), КоличествоСопоставлено);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КешированиеУпаковокСАТУРН(ТекущаяСтрока, ПараметрыЗаполнения, КэшированныеЗначения) Экспорт
	
	Если Не ПараметрыЗаполнения.Свойство("ПересчитатьТипИзмеряемойВеличиныСАТУРН")
		И Не ПараметрыЗаполнения.Свойство("ПересчитатьКоличествоДляСАТУРН") Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ПакетнаяОбработкаТабличнойЧастиСервер.ДанныеДляОбработкиСтроки("ДанныеУпаковокИС", КэшированныеЗначения); 
	Если Не Реквизиты = Неопределено Тогда
		ДанныеНоменклатуры = КэшированныеЗначения.КоэффициентВесОбъемУпаковки[ТекущаяСтрока.Номенклатура];
		Если ДанныеНоменклатуры = Неопределено Тогда
			КэшированныеЗначения.КоэффициентВесОбъемУпаковки.Вставить(ТекущаяСтрока.Номенклатура, Новый Соответствие);
			ДанныеНоменклатуры = КэшированныеЗначения.КоэффициентВесОбъемУпаковки[ТекущаяСтрока.Номенклатура];
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекущаяСтрока.Упаковка) Тогда
			КлючУпаковки = ИнтеграцияИСКлиентСерверПовтИсп.ПустоеЗначениеУпаковки();
			Если КлючУпаковки = Неопределено Тогда
				КлючУпаковки = "";
			КонецЕсли;
		Иначе
			КлючУпаковки = ТекущаяСтрока.Упаковка;
		КонецЕсли;
		
		ДанныеУпаковки = ДанныеНоменклатуры[КлючУпаковки];
		
		Если ДанныеУпаковки = Неопределено Тогда
			ДанныеУпаковки = Новый Структура;
			ДанныеУпаковки.Вставить("Коэффициент");
			ДанныеУпаковки.Вставить("Вес");
			ДанныеУпаковки.Вставить("Объем");
			ДанныеУпаковки.Вставить("ТипИзмеряемойВеличиныВес");
			ДанныеУпаковки.Вставить("ТипИзмеряемойВеличиныОбъем");
			ЗаполнитьЗначенияСвойств(ДанныеУпаковки, Реквизиты[0]);
			ДанныеНоменклатуры.Вставить(КлючУпаковки, ДанныеУпаковки);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

//-- Локализация

#КонецОбласти