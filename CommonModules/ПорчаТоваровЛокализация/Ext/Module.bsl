
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	УчетПрослеживаемыхТоваровЛокализация.ПроверитьКорректностьУказанияНоменклатурыПорчиТоваров(Объект, Отказ);
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация
	ДоступностьПечатныхФормМХ = ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение");
	
	Если ДоступностьПечатныхФормМХ Тогда
		// МХ-1 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ1";
		КомандаПечати.Представление = НСтр("ru='Акт о приеме-передаче ТМЦ на хранение (МХ-1)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ФункциональныеОпции = "ИспользоватьКачествоТоваров";
		
		// МХ-3 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ3";
		КомандаПечати.Представление = НСтр("ru = 'Акт о возврате ТМЦ, сданных на хранение (МХ-3)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ФункциональныеОпции = "ИспользоватьКачествоТоваров";
	КонецЕсли;
	
	
	Если ПравоДоступа("Изменение", Метаданные.Документы.ПорчаТоваров) Тогда
		// Акт о порче, бое, ломе ТМЦ (ТОРГ-15)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ТОРГ15";
		КомандаПечати.Представление = НСтр("ru = 'Акт о порче, бое, ломе ТМЦ (ТОРГ-15)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ФункциональныеОпции = "ИспользоватьКачествоТоваров";
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	//++ Локализация
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ15") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"ТОРГ15",
			НСтр("ru = 'Акт о порче, бое, ломе товарно-материальных ценностей (ТОРГ - 15)'"),
			СформироватьПечатнуюФормуТОРГ15(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

//++ Локализация
Функция СформироватьПечатнуюФормуТОРГ15(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	ЗапросПоДокументам = Новый Запрос;
	ЗапросПоДокументам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПоДокументам.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ЗапросПоДокументам.Текст =
	"ВЫБРАТЬ
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет КАК ПредварительныйРасчет,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация.КодПоОКПО) КАК ОрганизацияПоОКПО,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация.Префикс) КАК Префикс,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Подразделение) КАК ПодразделениеПредставление,
	|	Документ.ПриходоватьТоварыПоСебестоимостиСписания КАК ПриходоватьТоварыПоСебестоимостиСписания,
	|	Документ.ПричинаПорчи КАК НаименованиеПричины,
	|	Документ.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(Документ.ИсправляемыйДокумент.Номер, Документ.Номер) КАК Номер,
	|	ЕСТЬNULL(Документ.ИсправляемыйДокумент.Дата, Документ.Дата) КАК ДатаДокумента,
	|	Документ.Дата КАК Дата,
	|	Документ.Организация КАК Организация,
	|	Документ.Валюта КАК ВалютаДокумента,
	|	Документ.Склад.ТекущийОтветственный КАК Кладовщик,
	|	Документ.Склад.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщика,
	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	Документ.ВидЦены КАК ВидЦен,
	|	Документ.ВидЦены.ВалютаЦены КАК ВалютаВидаЦены,
	|	Документ.Склад КАК Склад,
	|	Документ.Ответственный.ФизическоеЛицо КАК Расчетчик,
	|	Документ.ИсточникИнформацииОЦенахДляПечати КАК ИсточникИнформацииОЦенахДляПечати
	|ИЗ
	|	Документ.ПорчаТоваров КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО Документ.Организация = РасчетСебестоимостиТоваровОрганизации.Организация
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(Документ.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(Документ.Дата, МЕСЯЦ))
	|			И (РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО Документ.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ВыборкаПоДокументам		= ЗапросПоДокументам.Выполнить().Выбрать();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПорчаТоваров.ПФ_MXL_ТОРГ15_ru");
	Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
	
	ТабДокумент = Новый ТабличныйДокумент;
	// Зададим параметры макета по-умолчанию
	ТабДокумент.ПолеСверху = 10;
	ТабДокумент.ПолеСлева = 10;
	ТабДокумент.ПолеСнизу = 10;
	ТабДокумент.ПолеСправа = 10;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПорчаТоваров_ТОРГ15";
	
	ОбластьШапки 						= Макет.ПолучитьОбласть("Шапка");     
	ОбластьЗаголовокТаблицы				= Макет.ПолучитьОбласть("ЗаголовокТаблицыТоварыУценка");
	ОбластьСтрока 						= Макет.ПолучитьОбласть("СтрокаТоварыУценка");
	ОбластьИтого 						= Макет.ПолучитьОбласть("ИтогоТоварыУценка");
	ОбластьПодвал 						= Макет.ПолучитьОбласть("ПодвалТоварыУценка");
	ОбластьЗаголовокТаблицыУтиль		= Макет.ПолучитьОбласть("ЗаголовокТаблицыУтиль");
	ОбластьСтрокаУтиль					= Макет.ПолучитьОбласть("СтрокаУтиль");
	ОбластьИтогоУтиль 					= Макет.ПолучитьОбласть("ИтогоУтиль");
	ОбластьПодписи						= Макет.ПолучитьОбласть("ПодвалПодписи");
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	
	НомерДокумента = 0;
	КоличествоДокументов = ВыборкаПоДокументам.Количество();
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;

	Пока ВыборкаПоДокументам.Следующий() Цикл
		
		ЗапросПоТоварам = Новый Запрос;
		
		Если ВыборкаПоДокументам.ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен Тогда
		
			ИспользуетсяЦенообразование25 = ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25(ВыборкаПоДокументам.Дата);
	
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	ПорчаТоваровТовары.Ссылка КАК Ссылка,
			|	ПорчаТоваровТовары.НомерСтроки КАК НомерСтроки,
			|	ПорчаТоваровТовары.Номенклатура КАК Номенклатура,
			|	ПорчаТоваровТовары.Характеристика КАК Характеристика,
			|	ПорчаТоваровТовары.Серия КАК Серия,
			|	ПорчаТоваровТовары.НоменклатураОприходование КАК НоменклатураОприходование,
			|	ПорчаТоваровТовары.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
			|	ПорчаТоваровТовары.НоменклатураОприходование.Качество КАК ГрадацияКачества,
			|	ПорчаТоваровТовары.Количество КАК Количество,
			|	ПорчаТоваровТовары.Цена КАК Цена,
			|	&ПоляДляЦенообразованияВыборка,
			|	ПорчаТоваровТовары.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания КАК ПриходоватьТоварыПоСебестоимостиСписания
			|ПОМЕСТИТЬ ПорчаТоваровТовары
			|ИЗ
			|	Документ.ПорчаТоваров.Товары КАК ПорчаТоваровТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
			|		ПО ВидыНоменклатуры.Ссылка = ПорчаТоваровТовары.Номенклатура.ВидНоменклатуры
			|ГДЕ
			|	ПорчаТоваровТовары.Ссылка = &ТекущийДокумент
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПорчаТоваровТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
			|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровТовары.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
			|	ПорчаТоваровТовары.НомерСтроки КАК НомерСтроки,
			|	ПорчаТоваровТовары.Количество КАК Количество,
			|	ВЫБОР
			|		КОГДА ПорчаТоваровТовары.ГрадацияКачества = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
			|			ТОГДА 0
			|		ИНАЧЕ ПорчаТоваровТовары.Количество
			|	КОНЕЦ КАК УценкаКоличество,
			|	ВЫРАЗИТЬ(ВЫБОР
			|		КОГДА ПорчаТоваровТовары.ГрадацияКачества = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
			|			ТОГДА 0
			|		КОГДА ПорчаТоваровТовары.ПриходоватьТоварыПоСебестоимостиСписания
			|			ТОГДА ВЫБОР
			|					КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки1 ЕСТЬ NULL 
			|							И &ТекстЗапросаКоэффициентУпаковки1 <> 0
			|						ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки1
			|					ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
			|				КОНЕЦ * &КоэффициентПересчетаВалютыВидаЦенВВалютуРегл
			|		ИНАЧЕ ПорчаТоваровТовары.Цена * &КоэффициентПересчетаВалютыДокументаВВалютуРегл
			|	КОНЕЦ КАК ЧИСЛО(31,2)) КАК УценкаЦена,
			|	ВЫРАЗИТЬ(ВЫБОР
			|		КОГДА ПорчаТоваровТовары.ГрадацияКачества = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
			|			ТОГДА 0
			|		КОГДА ПорчаТоваровТовары.ПриходоватьТоварыПоСебестоимостиСписания
			|			ТОГДА ВЫБОР
			|					КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки1 ЕСТЬ NULL 
			|							И &ТекстЗапросаКоэффициентУпаковки1 <> 0
			|						ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки1
			|					ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
			|				КОНЕЦ * &КоэффициентПересчетаВалютыВидаЦенВВалютуРегл
			|		ИНАЧЕ ПорчаТоваровТовары.Цена * &КоэффициентПересчетаВалютыДокументаВВалютуРегл
			|	КОНЕЦ КАК ЧИСЛО(31,2)) * ПорчаТоваровТовары.Количество КАК УценкаСтоимость,
			|	ПорчаТоваровТовары.Номенклатура.Код КАК ТоварКод,
			|	ПорчаТоваровТовары.Номенклатура.Артикул КАК ТоварАртикул,
			|	ВЫРАЗИТЬ(ВЫБОР
			|		КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки1 ЕСТЬ NULL 
			|				И &ТекстЗапросаКоэффициентУпаковки1 <> 0
			|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки1
			|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
			|	КОНЕЦ * &КоэффициентПересчетаВалютыВидаЦенВВалютуРегл КАК ЧИСЛО(31,2)) КАК Цена,
			|	ПорчаТоваровТовары.ГрадацияКачества КАК ГрадацияКачества,
			|	ПорчаТоваровТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
			|	ПорчаТоваровТовары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ
			|ИЗ
			|	ПорчаТоваровТовары КАК ПорчаТоваровТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ &ЦеныНоменклатурыСрезПоследних1 КАК ЦеныНоменклатуры
			|		ПО 
			|			&УсловиеСоедиенияЦеныНоменклатурыСрезПоследних1
			|
			|УПОРЯДОЧИТЬ ПО
			|	ПорчаТоваровТовары.Ссылка,
			|	ПорчаТоваровТовары.НомерСтроки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПорчаТоваровТовары.НоменклатураОприходование.НаименованиеПолное КАК УтильНоменклатура,
			|	ПорчаТоваровТовары.ХарактеристикаОприходование.НаименованиеПолное КАК УтильХарактеристика,
			|	&ТекстЗапросаКолонкаКодов КАК УтильКод,
			|	СУММА(ПорчаТоваровТовары.Количество) КАК Количество,
			|	ПорчаТоваровТовары.ГрадацияКачества КАК ГрадацияКачества,
			|	ПорчаТоваровТовары.НоменклатураОприходование.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
			|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровТовары.НоменклатураОприходование.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
			|	ВЫРАЗИТЬ(ВЫБОР
			|		КОГДА ПорчаТоваровТовары.ПриходоватьТоварыПоСебестоимостиСписания
			|			ТОГДА ВЫБОР
			|					КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки2 ЕСТЬ NULL 
			|							И &ТекстЗапросаКоэффициентУпаковки2 <> 0
			|						ТОГДА ЕСТЬNULL(ЦеныУтиль.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки2
			|					ИНАЧЕ ЕСТЬNULL(ЦеныУтиль.Цена, 0)
			|				КОНЕЦ * &КоэффициентПересчетаВалютыВидаЦенВВалютуРегл
			|		ИНАЧЕ ПорчаТоваровТовары.Цена * &КоэффициентПересчетаВалютыДокументаВВалютуРегл
			|	КОНЕЦ КАК ЧИСЛО(31,2)) КАК Цена
			|ИЗ
			|	ПорчаТоваровТовары КАК ПорчаТоваровТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ &ЦеныНоменклатурыСрезПоследних КАК ЦеныУтиль
			|		ПО 
			|			&УсловиеСоедиенияЦеныНоменклатурыСрезПоследних
			|ГДЕ
			|	ПорчаТоваровТовары.ГрадацияКачества = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
			|
			|СГРУППИРОВАТЬ ПО
			|	ПорчаТоваровТовары.НоменклатураОприходование.НаименованиеПолное,
			|	ПорчаТоваровТовары.ХарактеристикаОприходование.НаименованиеПолное,
			|	&ТекстЗапросаКолонкаКодов,
			|	ВЫРАЗИТЬ(ВЫБОР
			|		КОГДА ПорчаТоваровТовары.ПриходоватьТоварыПоСебестоимостиСписания
			|			ТОГДА ВЫБОР
			|					КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки2 ЕСТЬ NULL 
			|							И &ТекстЗапросаКоэффициентУпаковки2 <> 0
			|						ТОГДА ЕСТЬNULL(ЦеныУтиль.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки2
			|					ИНАЧЕ ЕСТЬNULL(ЦеныУтиль.Цена, 0)
			|				КОНЕЦ * &КоэффициентПересчетаВалютыВидаЦенВВалютуРегл
			|		ИНАЧЕ ПорчаТоваровТовары.Цена * &КоэффициентПересчетаВалютыДокументаВВалютуРегл
			|	КОНЕЦ КАК ЧИСЛО(31,2)),
			|	ПорчаТоваровТовары.ГрадацияКачества,
			|	ПорчаТоваровТовары.НоменклатураОприходование.ЕдиницаИзмерения.Код,
			|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровТовары.НоменклатураОприходование.ЕдиницаИзмерения)";

			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"&ТекстЗапросаКоэффициентУпаковки1",
				Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
				"ЦеныНоменклатуры.Упаковка",
				"ЦеныНоменклатуры.Номенклатура"));
				
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"&ТекстЗапросаКоэффициентУпаковки2",
				Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
				"ЦеныУтиль.Упаковка",
				"ЦеныУтиль.Номенклатура"));
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"&ТекстЗапросаКолонкаКодов",
				"ПорчаТоваровТовары.НоменклатураОприходование." + КолонкаКодов);
				
			НастройкаЦенообразования = ЦенообразованиеКлиентСервер.НастройкиДляВременнойТаблицыСДополнениемДляЦенообразования();
			НастройкаЦенообразования.ИсточникТоваров = "ПорчаТоваровТовары";
			НастройкаЦенообразования.ПолеУпаковка = "";
			
			ТекстЗамены = ЦенообразованиеКлиентСервер.ТекстПолейДляЦенообразования(НастройкаЦенообразования,
																					,
																					ИспользуетсяЦенообразование25);
			Если ЗначениеЗаполнено(ТекстЗамены) Тогда
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляДляЦенообразованияВыборка", ТекстЗамены);
			Иначе
				ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПоляДляЦенообразованияВыборка,", "");
			КонецЕсли;
	
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"&ЦеныНоменклатурыСрезПоследних1",
				ЦенообразованиеКлиентСервер.ТекстЗапросаРегистрСведенийЦеныНоменклатуры(
									"ПорчаТоваровТовары",
									"&ДатаЦен",
									Новый Структура("ВТаблице", "&ВидЦен"), ИспользуетсяЦенообразование25));
		
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"&УсловиеСоедиенияЦеныНоменклатурыСрезПоследних1",
				ЦенообразованиеКлиентСервер.ТекстЗапросаРегистрСведенийЦеныНоменклатурыУсловиеСоединения(
				"ПорчаТоваровТовары",
				"ЦеныНоменклатуры",,ИспользуетсяЦенообразование25));
	
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"&ЦеныНоменклатурыСрезПоследних",
				ЦенообразованиеКлиентСервер.ТекстЗапросаРегистрСведенийЦеныНоменклатуры(
									"ПорчаТоваровТовары",
									"&ДатаЦен",
									Новый Структура("ВТаблице", "&ВидЦен"), ИспользуетсяЦенообразование25));
		
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
				"&УсловиеСоедиенияЦеныНоменклатурыСрезПоследних",
				ЦенообразованиеКлиентСервер.ТекстЗапросаРегистрСведенийЦеныНоменклатурыУсловиеСоединения(
				"ПорчаТоваровТовары",
				"ЦеныУтиль",,ИспользуетсяЦенообразование25));
	
			ЗапросПоТоварам.Текст = ТекстЗапроса;
			ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", ВыборкаПоДокументам.Ссылка);
			ЗапросПоТоварам.УстановитьПараметр("ДатаЦен", ВыборкаПоДокументам.Дата);
			ЗапросПоТоварам.УстановитьПараметр("ВидЦен", ВыборкаПоДокументам.ВидЦен);
			
			КоэффицентыВалютыДокумента = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
					ВыборкаПоДокументам.ВалютаДокумента, Неопределено, ВыборкаПоДокументам.Дата, ВыборкаПоДокументам.Организация);
			КоэффицентыВалютыВидаЦен = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
					ВыборкаПоДокументам.ВалютаВидаЦены, Неопределено, ВыборкаПоДокументам.Дата, ВыборкаПоДокументам.Организация);
			
			ЗапросПоТоварам.УстановитьПараметр("КоэффициентПересчетаВалютыДокументаВВалютуРегл",
				КоэффицентыВалютыДокумента.КоэффициентПересчетаВВалютуРегл);
			ЗапросПоТоварам.УстановитьПараметр("КоэффициентПересчетаВалютыВидаЦенВВалютуРегл",
				КоэффицентыВалютыВидаЦен.КоэффициентПересчетаВВалютуРегл);
			
			РезультатыПоТоварам = ЗапросПоТоварам.ВыполнитьПакет(); 
			ВыборкаСтрокТовары	= РезультатыПоТоварам[1].Выбрать();
			ВыборкаСтрокУтиль	= РезультатыПоТоварам[2].Выбрать();
						
		ИначеЕсли ВыборкаПоДокументам.ИсточникИнформацииОЦенахДляПечати = Перечисления.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости Тогда
			
			Если ВыборкаПоДокументам.ПредварительныйРасчет = Null Тогда
				ТекстСообщения = НСтр("ru = 'Не удалось получить цены по себестоимости для документа %Документ%: на %Период% не произведен расчет себестоимости.'");
				
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ВыборкаПоДокументам.Ссылка);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Период%", Формат(НачалоМесяца(ВыборкаПоДокументам.Дата),"ДЛФ=DD"));
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
				Продолжить;
			КонецЕсли;
			
			ИтераторНомераЗапроса = 0;
				
			Если ВыборкаПоДокументам.ПредварительныйРасчет Тогда
				
				ТекстСообщения = НСтр("ru = 'При печати документа %Документ% использовались данные предварительного расчета себестоимости.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ВыборкаПоДокументам.Ссылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
				ЗапросПоТоварам.Текст =
				"ВЫБРАТЬ
				|	ПорчаТоваровОбщая.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
				|	ПорчаТоваровОбщая.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
				|	ПорчаТоваровОбщая.ВидЗапасов                  КАК ВидЗапасов,
				|	ПорчаТоваровОбщая.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
				|	ПорчаТоваровОбщая.Количество                  КАК Количество,
				|	ПорчаТоваровОбщая.НомерСтроки                 КАК НомерСтроки,
				|	ПорчаТоваровОбщая.НоменклатураОприходование   КАК НоменклатураОприходование,
				|	ПорчаТоваровОбщая.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
				|	ПорчаТоваровОбщая.Цена                        КАК Цена,
				|	ПорчаТоваровОбщая.Ссылка                      КАК Ссылка
				|ПОМЕСТИТЬ ПорчаТоваровСКлючамиАналитики
				|ИЗ
				|	(ВЫБРАТЬ
				|		ПорчаТоваровВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
				|		ПорчаТоваровВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
				|		ПорчаТоваровВидыЗапасов.Количество КАК Количество,
				|		ПорчаТоваровВидыЗапасов.НомерСтроки КАК НомерСтроки,
				|		ПорчаТоваровВидыЗапасов.АналитикаУчетаНоменклатурыОприходование.Номенклатура КАК НоменклатураОприходование,
				|		ПорчаТоваровВидыЗапасов.АналитикаУчетаНоменклатурыОприходование.Характеристика КАК ХарактеристикаОприходование,
				|		ВЫРАЗИТЬ(ПорчаТоваровТовары.Цена * &КоэффициентПересчетаВалютыДокументаВВалютуРегл КАК ЧИСЛО(31,2)) КАК Цена,
				|		ПорчаТоваровВидыЗапасов.Ссылка КАК Ссылка
				|	ИЗ
				|		Документ.ПорчаТоваров.ВидыЗапасов КАК ПорчаТоваровВидыЗапасов
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПорчаТоваров.Товары КАК ПорчаТоваровТовары
				|			ПО ПорчаТоваровВидыЗапасов.АналитикаУчетаНоменклатуры = ПорчаТоваровТовары.АналитикаУчетаНоменклатуры
				|				И ПорчаТоваровВидыЗапасов.Ссылка = ПорчаТоваровТовары.Ссылка
				|	) КАК ПорчаТоваровОбщая
				|
				|ГДЕ
				|	ПорчаТоваровОбщая.Ссылка = &ТекущийДокумент
				|	И ПорчаТоваровОбщая.Ссылка.Организация = &Организация
				|	И ПорчаТоваровОбщая.Ссылка.Проведен
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.НаименованиеПолное КАК УтильНоменклатура,
				|	ПорчаТоваровСКлючамиАналитики.ХарактеристикаОприходование.НаименованиеПолное КАК УтильХарактеристика,
				|	&ТекстЗапросаКолонкаКодов КАК УтильКод,
				|	СУММА(ПорчаТоваровСКлючамиАналитики.Количество) КАК Количество,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество КАК ГрадацияКачества,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ЕСТЬNULL(ЦеныУтиль.СтоимостьРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ДопРасходыРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ТрудозатратыРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ПостатейныеПостоянныеРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ПостатейныеПеременныеРегл, 0)
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК Цена
				|ИЗ
				|	ПорчаТоваровСКлючамиАналитики КАК ПорчаТоваровСКлючамиАналитики
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров.СрезПоследних(
				|				КОНЕЦПЕРИОДА(&ДатаЦен, ДЕНЬ),
				|				(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
				|					(ВЫБРАТЬ
				|						Таблица.АналитикаУчетаНоменклатуры,
				|						&Организация,
				|						Таблица.ВидЗапасов
				|					ИЗ
				|						ПорчаТоваровСКлючамиАналитики КАК Таблица)) КАК ЦеныУтиль
				|		ПО ПорчаТоваровСКлючамиАналитики.АналитикаУчетаНоменклатуры = ЦеныУтиль.АналитикаУчетаНоменклатуры
				|			И ПорчаТоваровСКлючамиАналитики.ВидЗапасов = ЦеныУтиль.ВидЗапасов
				|			И (ЦеныУтиль.Организация = &Организация)
				|ГДЕ
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|
				|СГРУППИРОВАТЬ ПО
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.НаименованиеПолное,
				|	ПорчаТоваровСКлючамиАналитики.ХарактеристикаОприходование.НаименованиеПолное,
				|	&ТекстЗапросаКолонкаКодов,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ЕСТЬNULL(ЦеныУтиль.СтоимостьРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ДопРасходыРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ТрудозатратыРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ПостатейныеПостоянныеРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ПостатейныеПеременныеРегл, 0)
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения.Код,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения)
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПорчаТоваровСКлючамиАналитики.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
				|	ПорчаТоваровСКлючамиАналитики.НомерСтроки КАК НомерСтроки,
				|	ПорчаТоваровСКлючамиАналитики.Количество КАК Количество,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Количество
				|	КОНЕЦ КАК УценкаКоличество,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.СтоимостьРегл, 0)
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК УценкаЦена,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.СтоимостьРегл, 0) * ПорчаТоваровСКлючамиАналитики.Количество
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена * ПорчаТоваровСКлючамиАналитики.Количество
				|	КОНЕЦ КАК УценкаСтоимость,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.Код КАК ТоварКод,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.Артикул КАК ТоварАртикул,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.СтоимостьРегл, 0)
				|				+ ЕСТЬNULL(ЦеныНоменклатуры.ДопРасходыРегл, 0)
				|				+ ЕСТЬNULL(ЦеныНоменклатуры.ТрудозатратыРегл, 0)
				|				+ ЕСТЬNULL(ЦеныУтиль.ПостатейныеПостоянныеРегл, 0)
				|				+ ЕСТЬNULL(ЦеныНоменклатуры.ПостатейныеПеременныеРегл, 0)
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК Цена,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество КАК ГрадацияКачества,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ
				|ИЗ
				|	ПорчаТоваровСКлючамиАналитики КАК ПорчаТоваровСКлючамиАналитики
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров.СрезПоследних(
				|				КОНЕЦПЕРИОДА(&ДатаЦен, ДЕНЬ),
				|				(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
				|					(ВЫБРАТЬ
				|						Таблица.АналитикаУчетаНоменклатуры,
				|						&Организация,
				|						Таблица.ВидЗапасов
				|					ИЗ
				|						ПорчаТоваровСКлючамиАналитики КАК Таблица)) КАК ЦеныНоменклатуры
				|		ПО ПорчаТоваровСКлючамиАналитики.АналитикаУчетаНоменклатуры = ЦеныНоменклатуры.АналитикаУчетаНоменклатуры
				|			И ПорчаТоваровСКлючамиАналитики.ВидЗапасов = ЦеныНоменклатуры.ВидЗапасов
				|			И (ЦеныНоменклатуры.Организация = &Организация)
				|
				|УПОРЯДОЧИТЬ ПО
				|	ПорчаТоваровСКлючамиАналитики.Ссылка,
				|	ПорчаТоваровСКлючамиАналитики.НомерСтроки";
								
			Иначе
				// Фактический расчет
				ЗапросПоТоварам.Текст =
				"ВЫБРАТЬ
				|	ПорчаТоваровОбщая.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
				|	ПорчаТоваровОбщая.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
				|	ПорчаТоваровОбщая.ВидЗапасов КАК ВидЗапасов,
				|	ПорчаТоваровОбщая.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
				|	ПорчаТоваровОбщая.Количество КАК Количество,
				|	ПорчаТоваровОбщая.НомерСтроки КАК НомерСтроки,
				|	ПорчаТоваровОбщая.НоменклатураОприходование КАК НоменклатураОприходование,
				|	ПорчаТоваровОбщая.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
				|	ПорчаТоваровОбщая.Цена КАК Цена,
				|	ПорчаТоваровОбщая.Ссылка КАК Ссылка
				|ПОМЕСТИТЬ ПорчаТоваровСКлючамиАналитики
				|ИЗ
				|	(ВЫБРАТЬ
				|		ПорчаТоваровВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
				|		ПорчаТоваровВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
				|		ПорчаТоваровВидыЗапасов.Количество КАК Количество,
				|		ПорчаТоваровВидыЗапасов.НомерСтроки КАК НомерСтроки,
				|		ПорчаТоваровВидыЗапасов.АналитикаУчетаНоменклатурыОприходование.Номенклатура КАК НоменклатураОприходование,
				|		ПорчаТоваровВидыЗапасов.АналитикаУчетаНоменклатурыОприходование.Характеристика КАК ХарактеристикаОприходование,
				|		ВЫРАЗИТЬ(ПорчаТоваровТовары.Цена * &КоэффициентПересчетаВалютыДокументаВВалютуРегл КАК ЧИСЛО(31, 2)) КАК Цена,
				|		ПорчаТоваровВидыЗапасов.Ссылка КАК Ссылка
				|	ИЗ
				|		Документ.ПорчаТоваров.ВидыЗапасов КАК ПорчаТоваровВидыЗапасов
				|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПорчаТоваров.Товары КАК ПорчаТоваровТовары
				|			ПО ПорчаТоваровВидыЗапасов.АналитикаУчетаНоменклатуры = ПорчаТоваровТовары.АналитикаУчетаНоменклатуры
				|			И ПорчаТоваровВидыЗапасов.Ссылка = ПорчаТоваровТовары.Ссылка) КАК ПорчаТоваровОбщая
				|ГДЕ
				|	ПорчаТоваровОбщая.Ссылка = &ТекущийДокумент
				|	И ПорчаТоваровОбщая.Ссылка.Организация = &Организация
				|	И ПорчаТоваровОбщая.Ссылка.Проведен
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
				|	СебестоимостьТоваров.ВидЗапасов КАК ВидЗапасов,
				|	СУММА(СебестоимостьТоваров.Количество) КАК Количество,
				|	СУММА(СебестоимостьТоваров.СтоимостьРегл) КАК СтоимостьРегл,
				|	СУММА(СебестоимостьТоваров.СтоимостьРегл + СебестоимостьТоваров.СтоимостьЗабалансоваяРегл +
				|		СебестоимостьТоваров.ДопРасходыРегл + СебестоимостьТоваров.ТрудозатратыРегл +
				|		СебестоимостьТоваров.ПостатейныеПостоянныеРегл + СебестоимостьТоваров.ПостатейныеПеременныеРегл) КАК Стоимость
				|ПОМЕСТИТЬ СебестоимостьТоваров
				|ИЗ
				|	РегистрНакопления.СебестоимостьТоваров КАК СебестоимостьТоваров
				|ГДЕ
				|	СебестоимостьТоваров.Регистратор = &ТекущийДокумент
				|СГРУППИРОВАТЬ ПО
				|	СебестоимостьТоваров.АналитикаУчетаНоменклатуры,
				|	СебестоимостьТоваров.ВидЗапасов
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.НаименованиеПолное КАК УтильНоменклатура,
				|	ПорчаТоваровСКлючамиАналитики.ХарактеристикаОприходование.НаименованиеПолное КАК УтильХарактеристика,
				|	&ТекстЗапросаКолонкаКодов КАК УтильКод,
				|	СУММА(ПорчаТоваровСКлючамиАналитики.Количество) КАК Количество,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество КАК ГрадацияКачества,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения) КАК
				|		ЕдиницаИзмеренияНаименование,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ВЫБОР
				|				КОГДА ЕСТЬNULL(СебестоимостьТоваров.Количество, 0) = 0
				|					ТОГДА 0
				|				ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.Стоимость, 0) / СебестоимостьТоваров.Количество
				|			КОНЕЦ
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК Цена
				|ИЗ
				|	ПорчаТоваровСКлючамиАналитики КАК ПорчаТоваровСКлючамиАналитики
				|		ЛЕВОЕ СОЕДИНЕНИЕ СебестоимостьТоваров КАК СебестоимостьТоваров
				|		ПО ПорчаТоваровСКлючамиАналитики.АналитикаУчетаНоменклатуры = СебестоимостьТоваров.АналитикаУчетаНоменклатуры
				|		И ПорчаТоваровСКлючамиАналитики.ВидЗапасов = СебестоимостьТоваров.ВидЗапасов
				|ГДЕ
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|СГРУППИРОВАТЬ ПО
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.НаименованиеПолное,
				|	ПорчаТоваровСКлючамиАналитики.ХарактеристикаОприходование.НаименованиеПолное,
				|	&ТекстЗапросаКолонкаКодов,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения.Код,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.ЕдиницаИзмерения),
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ВЫБОР
				|				КОГДА ЕСТЬNULL(СебестоимостьТоваров.Количество, 0) = 0
				|					ТОГДА 0
				|				ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.Стоимость, 0) / СебестоимостьТоваров.Количество
				|			КОНЕЦ
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ПорчаТоваровСКлючамиАналитики.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
				|	ПРЕДСТАВЛЕНИЕ(ПорчаТоваровСКлючамиАналитики.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияНаименование,
				|	ПорчаТоваровСКлючамиАналитики.НомерСтроки КАК НомерСтроки,
				|	ПорчаТоваровСКлючамиАналитики.Количество КАК Количество,
				|	ВЫБОР
				|		КОГДА
				|			ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Количество
				|	КОНЕЦ КАК УценкаКоличество,
				|	ВЫБОР
				|		КОГДА
				|			ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ВЫБОР
				|				КОГДА ЕСТЬNULL(СебестоимостьТоваров.Количество, 0) = 0
				|					ТОГДА 0
				|				ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРегл, 0) / СебестоимостьТоваров.Количество
				|			КОНЕЦ
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК УценкаЦена,
				|	ВЫБОР
				|		КОГДА
				|			ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество = ЗНАЧЕНИЕ(Перечисление.ГрадацииКачества.НеГоден)
				|			ТОГДА 0
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ВЫБОР
				|				КОГДА ЕСТЬNULL(СебестоимостьТоваров.Количество, 0) = 0
				|					ТОГДА 0
				|				ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.СтоимостьРегл, 0) / СебестоимостьТоваров.Количество *
				|					ПорчаТоваровСКлючамиАналитики.Количество
				|			КОНЕЦ
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Количество * ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК УценкаСтоимость,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.Код КАК ТоварКод,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.Артикул КАК ТоварАртикул,
				|	ВЫБОР
				|		КОГДА ПорчаТоваровСКлючамиАналитики.Ссылка.ПриходоватьТоварыПоСебестоимостиСписания
				|			ТОГДА ВЫБОР
				|					КОГДА ЕСТЬNULL(СебестоимостьТоваров.Количество, 0) = 0
				|						ТОГДА 0
				|					ИНАЧЕ ЕСТЬNULL(СебестоимостьТоваров.Стоимость, 0) / СебестоимостьТоваров.Количество
				|				КОНЕЦ
				|		ИНАЧЕ ПорчаТоваровСКлючамиАналитики.Цена
				|	КОНЕЦ КАК Цена,
				|	ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование.Качество КАК ГрадацияКачества,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
				|	ПорчаТоваровСКлючамиАналитики.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодПоОКЕИ
				|ИЗ
				|	ПорчаТоваровСКлючамиАналитики КАК ПорчаТоваровСКлючамиАналитики
				|		ЛЕВОЕ СОЕДИНЕНИЕ СебестоимостьТоваров КАК СебестоимостьТоваров
				|		ПО ПорчаТоваровСКлючамиАналитики.АналитикаУчетаНоменклатуры = СебестоимостьТоваров.АналитикаУчетаНоменклатуры
				|		И ПорчаТоваровСКлючамиАналитики.ВидЗапасов = СебестоимостьТоваров.ВидЗапасов";
				
				ИтераторНомераЗапроса = 1;
				
			КонецЕсли;
			
			ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", ВыборкаПоДокументам.Ссылка);
			ЗапросПоТоварам.УстановитьПараметр("ДатаЦен", ВыборкаПоДокументам.Дата);
			ЗапросПоТоварам.УстановитьПараметр("Организация", ВыборкаПоДокументам.Организация);
			ЗапросПоТоварам.УстановитьПараметр("Склад", ВыборкаПоДокументам.Склад);
			
			КоэффицентыВалютыДокумента = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
					ВыборкаПоДокументам.ВалютаДокумента, Неопределено, ВыборкаПоДокументам.Дата, ВыборкаПоДокументам.Организация);
			
			ЗапросПоТоварам.УстановитьПараметр("КоэффициентПересчетаВалютыДокументаВВалютуРегл",
				КоэффицентыВалютыДокумента.КоэффициентПересчетаВВалютуРегл);

			ЗапросПоТоварам.Текст = СтрЗаменить(ЗапросПоТоварам.Текст,
				"&ТекстЗапросаКолонкаКодов",
				"ПорчаТоваровСКлючамиАналитики.НоменклатураОприходование." + КолонкаКодов);

			РезультатыПоТоварам = ЗапросПоТоварам.ВыполнитьПакет(); 
			ВыборкаСтрокТовары	= РезультатыПоТоварам[2 + ИтераторНомераЗапроса].Выбрать();
			ВыборкаСтрокУтиль	= РезультатыПоТоварам[1 + ИтераторНомераЗапроса].Выбрать();
			
		КонецЕсли;
		
		НомерСтраницы			= 1;
		ОбластьШапки.Параметры.Заполнить(ВыборкаПоДокументам);
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ВыборкаПоДокументам.Организация, ВыборкаПоДокументам.ДатаДокумента);
		ОбластьШапки.Параметры.ОрганизацияПредставление 	= ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ЮридическийАдрес");
		ОбластьШапки.Параметры.НомерДокумента 				= ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаПоДокументам.Номер);
		ОбластьШапки.Параметры.ФИОРуководителя 				= ВыборкаПоДокументам.Руководитель;
		ОбластьШапки.Параметры.ПодразделениеПредставление 	= СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаПоДокументам.СкладПредставление);
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьШапки, ВыборкаПоДокументам.Ссылка);
		ТабДокумент.Вывести(ОбластьШапки);
		
		ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		
		ИтогоСтоимость 		  = 0;
		ИтогоКоличество 	  = 0;
		ИтогоУценкаКоличество = 0;
		ИтогоУценкаСтоимость  = 0;
		ИтогоУценкаСумма      = 0;
		// Выводим многострочную часть документа
		
		КоличествоСтрок 	= ВыборкаСтрокТовары.Количество();
		ПерваяСтрока		= Истина;
		
		ДопПараметрыПредставлениеНоменклатуры = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
		ДопПараметрыПредставлениеНоменклатуры.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			ОбластьСтрока.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			ОбластьСтрока.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаСтрокТовары.НоменклатураПредставление,
				ВыборкаСтрокТовары.ХарактеристикаПредставление,
				,
				,
				ДопПараметрыПредставлениеНоменклатуры);
			
			ЦенаНеЗадана = НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Цена);
			ОбластьСтрока.Параметры.Цена	= ?(ЦенаНеЗадана, 0, ВыборкаСтрокТовары.Цена);
			ОбластьСтрока.Параметры.Сумма	= ?(ЦенаНеЗадана, 0, ВыборкаСтрокТовары.Цена * ВыборкаСтрокТовары.Количество);
			
			ЦенаУценкиНеЗадана = Не ЗначениеЗаполнено(ВыборкаСтрокТовары.УценкаЦена);
			
			ОбластьСтрока.Параметры.УценкаЦена		= ?(ЦенаУценкиНеЗадана, 0, ВыборкаСтрокТовары.УценкаЦена);
			ОбластьСтрока.Параметры.УценкаСтоимость	= ?(ЦенаУценкиНеЗадана, 0, ВыборкаСтрокТовары.УценкаЦена * ВыборкаСтрокТовары.Количество);
			
			Если Не (ЦенаНеЗадана)
				И ВыборкаСтрокТовары.ГрадацияКачества <> Перечисления.ГрадацииКачества.НеГоден
				И Не ВыборкаПоДокументам.ПриходоватьТоварыПоСебестоимостиСписания Тогда
				ОбластьСтрока.Параметры.УценкаСумма = ОбластьСтрока.Параметры.Сумма - ОбластьСтрока.Параметры.УценкаСтоимость;
				ОбластьСтрока.Параметры.ПроцентСкидки = ОбластьСтрока.Параметры.УценкаСумма/ОбластьСтрока.Параметры.Сумма*100;
			Иначе
				ОбластьСтрока.Параметры.УценкаСумма = 0;
				ОбластьСтрока.Параметры.ПроцентСкидки = 0;
			КонецЕсли;
			
			Если ПерваяСтрока Тогда
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
				ПерваяСтрока = Ложь;
			Иначе
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьСтрока);
				МассивВыводимыхОбластей.Добавить(ОбластьИтого);
				Если ВыборкаСтрокТовары.НомерСтроки = КоличествоСтрок Тогда
					МассивВыводимыхОбластей.Добавить(ОбластьПодвал);
				КонецЕсли;
				
				Если Не ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьСтрока);
			
			// Обновим итоги по документу
			ИтогоСтоимость = ИтогоСтоимость + ОбластьСтрока.Параметры.Сумма;
			ИтогоКоличество = ИтогоКоличество + ВыборкаСтрокТовары.Количество;
			ИтогоУценкаКоличество = ИтогоУценкаКоличество + ВыборкаСтрокТовары.УценкаКоличество;
			Если Не ВыборкаПоДокументам.ПриходоватьТоварыПоСебестоимостиСписания Тогда
				ИтогоУценкаСтоимость = ИтогоУценкаСтоимость + ОбластьСтрока.Параметры.УценкаСтоимость;
				ИтогоУценкаСумма = ИтогоУценкаСумма + ОбластьСтрока.Параметры.УценкаСумма;
			КонецЕсли;
		КонецЦикла;
		
		// Выводим итоги по документу в общем
		ОбластьИтого.Параметры.ИтогоСумма = ИтогоСтоимость;
		ОбластьИтого.Параметры.ИтогоКоличество = ИтогоКоличество;
		ОбластьИтого.Параметры.ИтогоУценкаКоличество = ИтогоУценкаКоличество;
		ОбластьИтого.Параметры.ИтогоУценкаСумма = ИтогоУценкаСумма;
		ОбластьИтого.Параметры.ИтогоУценкаСтоимость = ИтогоУценкаСтоимость;
		СуммаРасходовПорчи = ?(ИтогоУценкаСумма = 0, ИтогоСтоимость, ИтогоУценкаСтоимость);
		ТабДокумент.Вывести(ОбластьИтого);
		
		ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, ВыборкаПоДокументам);
		ТабДокумент.Вывести(ОбластьПодвал);
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		ПерваяСтрока = Истина;
		НомерСтраницы    = НомерСтраницы + 1;
		ОбластьЗаголовокТаблицыУтиль.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		
		ИтогоУтильКоличество 	= 0;
		ИтогоУтильСумма 		= 0;
		
		ДопПараметрыПредставлениеНоменклатуры = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
		ДопПараметрыПредставлениеНоменклатуры.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
		
		Пока ВыборкаСтрокУтиль.Следующий() Цикл
		
			ОбластьСтрокаУтиль.Параметры.Заполнить(ВыборкаСтрокУтиль);
			ОбластьСтрокаУтиль.Параметры.УтильНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(ВыборкаСтрокУтиль.УтильНоменклатура,
																																ВыборкаСтрокУтиль.УтильХарактеристика,
																																,
																																,
																																ДопПараметрыПредставлениеНоменклатуры);
			
			ЦенаНеЗадана = НЕ ЗначениеЗаполнено(ВыборкаСтрокУтиль.Цена);
			ОбластьСтрокаУтиль.Параметры.Цена	= ?(ЦенаНеЗадана, 0, ВыборкаСтрокУтиль.Цена);
			ОбластьСтрокаУтиль.Параметры.Сумма	= ?(ЦенаНеЗадана, 0, ОбластьСтрокаУтиль.Параметры.Цена * ОбластьСтрокаУтиль.Параметры.Количество);
			
			Если ПерваяСтрока Тогда
				ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ОбластьЗаголовокТаблицыУтиль);
				ПерваяСтрока = Ложь;
			Иначе
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьСтрокаУтиль);
				МассивВыводимыхОбластей.Добавить(ОбластьИтогоУтиль);
				МассивВыводимыхОбластей.Добавить(ОбластьПодвал);
				Если Не ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					
					НомерСтраницы = НомерСтраницы + 1;
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ОбластьЗаголовокТаблицыУтиль.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабДокумент.Вывести(ОбластьЗаголовокТаблицыУтиль);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьСтрокаУтиль);
			// Обновим итоги по документу
			ИтогоУтильКоличество = ИтогоУтильКоличество + ОбластьСтрокаУтиль.Параметры.Количество;
			ИтогоУтильСумма = ИтогоУтильСумма + ОбластьСтрокаУтиль.Параметры.Сумма;
			
		КонецЦикла;
		
		Если ВыборкаСтрокУтиль.Количество() > 0 Тогда
			ОбластьИтогоУтиль.Параметры.ИтогоСумма = ИтогоУтильСумма;
			ОбластьИтогоУтиль.Параметры.ИтогоКоличество = ИтогоУтильКоличество;
			ТабДокумент.Вывести(ОбластьИтогоУтиль);
		КонецЕсли;
		
		// Выводим подписи документа
		ОбластьПодписи.Параметры.Заполнить(ВыборкаПоДокументам);
		ОбластьПодписи.Параметры.СуммаСписанияПрописью 	  = РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(Цел(ИтогоУценкаСумма), Справочники.Валюты.ПустаяСсылка(), Истина);
		СписанияКопеек = (ИтогоУценкаСумма - Цел(ИтогоУценкаСумма)) * 100;
		ОбластьПодписи.Параметры.СписанияКопеек = Формат(СписанияКопеек, "ЧЦ=2; ЧДЦ=0; ЧН='00'");
		
		ОбластьПодписи.Параметры.СуммаСписанияУтиляЛомаПрописью = РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(Цел(ИтогоУтильСумма), Справочники.Валюты.ПустаяСсылка(), Истина);
		УтильКопеек = (ИтогоУтильСумма - Цел(ИтогоУтильСумма)) * 100;
		ОбластьПодписи.Параметры.УтильКопеек = Формат(УтильКопеек, "ЧЦ=2; ЧДЦ=0; ЧН='00'");
		
		ОбластьПодписи.Параметры.ДолжностьПредседателя	  = ВыборкаПоДокументам.ДолжностьРуководителя;
		ОбластьПодписи.Параметры.ФИОпредседателя     	  = ВыборкаПоДокументам.Руководитель;
		ОбластьПодписи.Параметры.ДолжностьЧленаКомиссии2  = НСтр("ru='Главный бухгалтер'", Метаданные.Языки.Русский.КодЯзыка);
		ОбластьПодписи.Параметры.ФИОЧленаКомиссии2        = ВыборкаПоДокументам.ГлавныйБухгалтер;
		ОбластьПодписи.Параметры.ДолжностьЧленаКомиссии3  = ВыборкаПоДокументам.ДолжностьКладовщика;
		ОбластьПодписи.Параметры.ФИОЧленаКомиссии3        = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Кладовщик, ВыборкаПоДокументам.ДатаДокумента);
		ОбластьПодписи.Параметры.ФИОЧленаРасчетчика       = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Расчетчик, ВыборкаПоДокументам.ДатаДокумента);
		
		ТабДокумент.Вывести(ОбластьПодписи);
		
		НомерДокумента = НомерДокумента + 1;
		Если НомерДокумента < КоличествоДокументов Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
		
	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабДокумент;
КонецФункции

// Возвращает данные для формирования печатной формы МХ - 1.
//
// Параметры:
//	ПараметрыПечати	- Структура -дополнительные настройки печати.
//	МассивОбъектов	- Массив из ДокументСсылка.ПорчаТоваров - коллекция значений ссылок на документы,
//																по которым необходимо получить данные.
//
// Возвращаемое значение:
//	Структура - коллекция данных, используемых для печати, содержащая следующие следующие свойства:
//		* РезультатПоШапке			- РезультатЗапроса - данные шапки документа.
//		* РезультатПоСкладам		- РезультатЗапроса - данные о складе ответственного хранения.
//		* РезультатПоТабличнойЧасти	- РезультатЗапроса - данные табличной части документа.
//		* РезультатПоОшибкам		- РезультатЗапроса - данные об ошибках, возникающих при печати документа.
//
Функция ПолучитьДанныеДляПечатнойФормыМХ1(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка									КАК Ссылка,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Номер, ДанныеДокумента.Номер)	КАК Номер,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Дата, ДанныеДокумента.Дата)	КАК Дата,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Дата, ДанныеДокумента.Дата)	КАК ДатаДокумента,
	|	ДанныеДокумента.Организация								КАК Организация,
	|	ДанныеДокумента.Склад									КАК Склад,
	|	ЕСТЬNULL(Склады.СкладОтветственногоХранения, ЛОЖЬ)		КАК СкладОтветственногоХранения,
	|	ДанныеДокумента.Организация = Склады.Поклажедержатель	КАК ОрганизацияПоклажедержатель,
	|	Склады.ИсточникИнформацииОЦенахДляПечати				КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены									КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены						КАК ВалютаЦены,
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет	КАК ПредварительныйРасчет,
	|	ДанныеДокумента.Дата									КАК ДатаПолученияСебестоимости
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.ПорчаТоваров КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ)
	|			И РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен
	|			И ДанныеДокумента.Организация = РасчетСебестоимостиТоваровОрганизации.Организация
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ДанныеДокумента.Склад = Склады.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.Ссылка В(&МассивДокументов)
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка								КАК Ссылка,
	|	ДанныеДокумента.Номер								КАК Номер,
	|	ДанныеДокумента.Дата								КАК Дата,
	|	ДанныеДокумента.ДатаДокумента						КАК ДатаДокумента,
	|	ДанныеДокумента.Организация							КАК Организация,
	|	ДанныеДокумента.Склад								КАК Склад,
	|	ДанныеДокумента.ИсточникИнформацииОЦенахДляПечати	КАК ИсточникИнформацииОЦенахДляПечати,
	|	ДанныеДокумента.ВидЦены								КАК ВидЦены,
	|	ДанныеДокумента.ВалютаЦены							КАК ВалютаЦены,
	|	ДанныеДокумента.ПредварительныйРасчет				КАК ПредварительныйРасчет,
	|	ДанныеДокумента.ДатаПолученияСебестоимости			КАК ДатаПолученияСебестоимости
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.СкладОтветственногоХранения
	|	И НЕ ДанныеДокумента.ОрганизацияПоклажедержатель
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.НоменклатураОприходование.ЕдиницаИзмерения КАК Упаковка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.НоменклатураОприходование КАК Номенклатура,
	|	Товары.ХарактеристикаОприходование КАК Характеристика,
	|	Товары.НоменклатураОприходование.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	Товары.НоменклатураОприходование.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Товары.НоменклатураОприходование.ЕдиницаИзмерения.Представление КАК ВидУпаковки,
	|	Товары.Количество КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	Товары.Серия КАК Серия,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.НоменклатураОприходование.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ВидыЗапасов.АналитикаУчетаНоменклатурыОприходование.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ВидыЗапасов.АналитикаУчетаНоменклатурыОприходование.Номенклатура КАК Номенклатура,
	|	ВидыЗапасов.АналитикаУчетаНоменклатурыОприходование.Характеристика КАК Характеристика,
	|	ВидыЗапасов.АналитикаУчетаНоменклатурыОприходование.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВидыЗапасов.АналитикаУчетаНоменклатурыОприходование.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ВидыЗапасов.АналитикаУчетаНоменклатурыОприходование.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасов.Количество КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены КАК ВидЦены,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПорчаТоваров.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	ВидыЗапасов.АналитикаУчетаНоменклатурыОприходование.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[МассивРезультатов.ВГраница() - 3];
	РезультатПоСкладам			= МассивРезультатов[МассивРезультатов.ВГраница() - 2];
	РезультатПоТабличнойЧасти	= МассивРезультатов[МассивРезультатов.ВГраница() - 1];
	РезультатПоОшибкам			= МассивРезультатов[МассивРезультатов.ВГраница()];
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",			РезультатПоШапке);
	СтруктураДанныхДляПечати.Вставить("РезультатПоСкладам",			РезультатПоСкладам);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти",	РезультатПоТабличнойЧасти);
	СтруктураДанныхДляПечати.Вставить("РезультатПоОшибкам",			РезультатПоОшибкам);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Возвращает данные для формирования печатной формы МХ - 3.
//
// Параметры:
//	ПараметрыПечати	- Структура -дополнительные настройки печати.
//	МассивОбъектов	- Массив из ДокументСсылка.ПорчаТоваров - коллекция значений ссылок на документы,
//																по которым необходимо получить данные.
//
// Возвращаемое значение:
//	Структура - коллекция данных, используемых для печати, содержащая следующие следующие свойства:
//		* РезультатПоШапке			- РезультатЗапроса - данные шапки документа.
//		* РезультатПоСкладам		- РезультатЗапроса - данные о складе ответственного хранения.
//		* РезультатПоТабличнойЧасти	- РезультатЗапроса - данные табличной части документа.
//		* РезультатПоОшибкам		- РезультатЗапроса - данные об ошибках, возникающих при печати документа.
//
Функция ПолучитьДанныеДляПечатнойФормыМХ3(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка									КАК Ссылка,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Номер, ДанныеДокумента.Номер)	КАК Номер,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Дата, ДанныеДокумента.Дата)	КАК Дата,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Дата, ДанныеДокумента.Дата)	КАК ДатаДокумента,
	|	ДанныеДокумента.Организация								КАК Организация,
	|	ДанныеДокумента.Склад									КАК Склад,
	|	ЕСТЬNULL(Склады.СкладОтветственногоХранения, ЛОЖЬ)		КАК СкладОтветственногоХранения,
	|	ДанныеДокумента.Организация = Склады.Поклажедержатель	КАК ОрганизацияПоклажедержатель,
	|	Склады.ИсточникИнформацииОЦенахДляПечати				КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены									КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены						КАК ВалютаЦены,
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет	КАК ПредварительныйРасчет,
	|	ДанныеДокумента.Дата									КАК ДатаПолученияСебестоимости
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.ПорчаТоваров КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ)
	|			И РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен
	|			И ДанныеДокумента.Организация = РасчетСебестоимостиТоваровОрганизации.Организация
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ДанныеДокумента.Склад = Склады.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.Ссылка В(&МассивДокументов)
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка								КАК Ссылка,
	|	ДанныеДокумента.Номер								КАК Номер,
	|	ДанныеДокумента.Дата								КАК Дата,
	|	ДанныеДокумента.ДатаДокумента						КАК ДатаДокумента,
	|	ДанныеДокумента.Организация							КАК Организация,
	|	ДанныеДокумента.Склад								КАК Склад,
	|	ДанныеДокумента.ИсточникИнформацииОЦенахДляПечати	КАК ИсточникИнформацииОЦенахДляПечати,
	|	ДанныеДокумента.ВидЦены								КАК ВидЦены,
	|	ДанныеДокумента.ВалютаЦены							КАК ВалютаЦены,
	|	ДанныеДокумента.ПредварительныйРасчет				КАК ПредварительныйРасчет,
	|	ДанныеДокумента.ДатаПолученияСебестоимости			КАК ДатаПолученияСебестоимости
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.СкладОтветственногоХранения
	|	И НЕ ДанныеДокумента.ОрганизацияПоклажедержатель
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Представление КАК ВидУпаковки,
	|	Товары.Количество КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	Товары.Серия КАК Серия,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасов.Количество КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены КАК ВидЦены,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПорчаТоваров.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[МассивРезультатов.ВГраница() - 3];
	РезультатПоСкладам			= МассивРезультатов[МассивРезультатов.ВГраница() - 2];
	РезультатПоТабличнойЧасти	= МассивРезультатов[МассивРезультатов.ВГраница() - 1];
	РезультатПоОшибкам			= МассивРезультатов[МассивРезультатов.ВГраница()];
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",			РезультатПоШапке);
	СтруктураДанныхДляПечати.Вставить("РезультатПоСкладам",			РезультатПоСкладам);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти",	РезультатПоТабличнойЧасти);
	СтруктураДанныхДляПечати.Вставить("РезультатПоОшибкам",			РезультатПоОшибкам);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции
//-- Локализация
#КонецОбласти


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса провведения.
//  Регистры - Строка, Структура - Список регистров продения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

//++ Локализация


//-- Локализация

#КонецОбласти

//++ Локализация


//-- Локализация

#КонецОбласти
