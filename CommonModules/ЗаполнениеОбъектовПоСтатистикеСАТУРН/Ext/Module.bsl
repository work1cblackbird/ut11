#Область СлужебныйПрограммныйИнтерфейс

// Заполнение документа АктИнвентаризацииСАТУРН по статистике
// Параметры:
//  ОрганизацияСАТУРН - СправочникСсылка.КлассификаторОрганизацийСАТУРН
//
// Возвращаемое значение:
//	Структура - данные заполнения:
//  * ОрганизацияСАТУРН - СправочникСсылка.КлассификаторОрганизацийСАТУРН
//  * МестоХранения     - СправочникСсылка.МестаХраненияСАТУРН
Функция ДанныеЗаполненияАктИнвентаризацииСАТУРН(ОрганизацияСАТУРН) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 3
	|	1                          КАК Количество,
	|	Документ.ОрганизацияСАТУРН КАК ОрганизацияСАТУРН,
	|	Документ.МестоХранения     КАК МестоХранения
	|ИЗ
	|	Документ.АктИнвентаризацииСАТУРН КАК Документ
	|ГДЕ
	|	(Документ.ОрганизацияСАТУРН = &ОрганизацияСАТУРН Или &БезУчетаОрганизации)
	|	И Документ.Проведен
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Дата УБЫВ");
	
	Запрос.УстановитьПараметр("ОрганизацияСАТУРН",   ОрганизацияСАТУРН);
	Запрос.УстановитьПараметр("БезУчетаОрганизации", Не ЗначениеЗаполнено(ОрганизацияСАТУРН));
	
	РезультатЗапроса = Запрос.Выполнить();
	ДанныеПоследнихДокументов = РезультатЗапроса.Выгрузить();
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ОрганизацияСАТУРН", ОрганизацияСАТУРН(ДанныеПоследнихДокументов));
	ДанныеЗаполнения.Вставить("МестоХранения",     Справочники.МестаХраненияСАТУРН.ПустаяСсылка());
	
	ЗаполнитьПоСтатистике("МестоХранения", ДанныеЗаполнения, ДанныеПоследнихДокументов);
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

// Заполнение документа ПроизводственнаяОперацияСАТУРН по статистике
// Параметры:
//  ОрганизацияСАТУРН - СправочникСсылка.КлассификаторОрганизацийСАТУРН
//
// Возвращаемое значение:
//	Структура - данные заполнения:
//  * ОрганизацияСАТУРН - СправочникСсылка.КлассификаторОрганизацийСАТУРН
//  * МестоХранения     - СправочникСсылка.МестаХраненияСАТУРН
Функция ДанныеЗаполненияПроизводственнаяОперацияСАТУРН(ОрганизацияСАТУРН) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 3
	|	1                          КАК Количество,
	|	Документ.ОрганизацияСАТУРН КАК ОрганизацияСАТУРН,
	|	Документ.МестоХранения     КАК МестоХранения
	|ИЗ
	|	Документ.ПроизводственнаяОперацияСАТУРН КАК Документ
	|ГДЕ
	|	(Документ.ОрганизацияСАТУРН = &ОрганизацияСАТУРН Или &БезУчетаОрганизации)
	|	И Документ.Проведен
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Дата УБЫВ");
	
	Запрос.УстановитьПараметр("ОрганизацияСАТУРН",   ОрганизацияСАТУРН);
	Запрос.УстановитьПараметр("БезУчетаОрганизации", Не ЗначениеЗаполнено(ОрганизацияСАТУРН));
	
	РезультатЗапроса = Запрос.Выполнить();
	ДанныеПоследнихДокументов = РезультатЗапроса.Выгрузить();
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ОрганизацияСАТУРН", ОрганизацияСАТУРН(ДанныеПоследнихДокументов));
	ДанныеЗаполнения.Вставить("МестоХранения",     Справочники.МестаХраненияСАТУРН.ПустаяСсылка());
	
	ЗаполнитьПоСтатистике("МестоХранения", ДанныеЗаполнения, ДанныеПоследнихДокументов);
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

// Заполнение документа ЗапросОстатковПартийСАТУРН по статистике
// Параметры:
//  ОрганизацияСАТУРН - СправочникСсылка.КлассификаторОрганизацийСАТУРН
//
// Возвращаемое значение:
//	Структура - данные заполнения:
//  * ОрганизацияСАТУРН - СправочникСсылка.КлассификаторОрганизацийСАТУРН
//  * МестоХранения     - СправочникСсылка.МестаХраненияСАТУРН
Функция ДанныеЗаполненияЗапросаОстатковСАТУРН(ОрганизацияСАТУРН) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 3
	|	1                          КАК Количество,
	|	Документ.ОрганизацияСАТУРН КАК ОрганизацияСАТУРН,
	|	Документ.МестоХранения     КАК МестоХранения
	|ИЗ
	|	Документ.ЗапросОстатковПартийСАТУРН КАК Документ
	|ГДЕ
	|	(Документ.ОрганизацияСАТУРН = &ОрганизацияСАТУРН Или &БезУчетаОрганизации)
	|	И Документ.Проведен
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Дата УБЫВ");
	
	Запрос.УстановитьПараметр("ОрганизацияСАТУРН",   ОрганизацияСАТУРН);
	Запрос.УстановитьПараметр("БезУчетаОрганизации", Не ЗначениеЗаполнено(ОрганизацияСАТУРН));
	
	РезультатЗапроса = Запрос.Выполнить();
	ДанныеПоследнихДокументов = РезультатЗапроса.Выгрузить();
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ОрганизацияСАТУРН", ОрганизацияСАТУРН(ДанныеПоследнихДокументов));
	ДанныеЗаполнения.Вставить("МестоХранения",     Справочники.МестаХраненияСАТУРН.ПустаяСсылка());
	
	ЗаполнитьПоСтатистике("МестоХранения", ДанныеЗаполнения, ДанныеПоследнихДокументов);
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

// Заполнение документа НакладнаяСАТУРН по статистике
// Параметры:
//  ОрганизацияСАТУРН - СправочникСсылка.КлассификаторОрганизацийСАТУРН
//  ГрузополучательОрганизацияСАТУРН - СправочникСсылка.КлассификаторОрганизацийСАТУРН
//
// Возвращаемое значение:
//	Структура - данные заполнения:
//  * ГрузоотправительОрганизацияСАТУРН - СправочникСсылка.КлассификаторОрганизацийСАТУРН
//  * ГрузоотправительМестоХранения     - СправочникСсылка.МестаХраненияСАТУРН
//  * ГрузополучательОрганизацияСАТУРН  - СправочникСсылка.КлассификаторОрганизацийСАТУРН
//  * ГрузополучательМестоХранения      - СправочникСсылка.МестаХраненияСАТУРН
//  * Операция                          - ПеречислениеСсылка.ВидыОперацийСАТУРН
Функция ДанныеЗаполненияНакладнаяСАТУРН(ОрганизацияСАТУРН, ГрузополучательОрганизацияСАТУРН) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 3
	|	1                                          КАК Количество,
	|	Документ.Операция                          КАК Операция,
	|	Документ.ГрузоотправительОрганизацияСАТУРН КАК ОрганизацияСАТУРН,
	|	Документ.ГрузоотправительМестоХранения     КАК ГрузоотправительМестоХранения,
	|	Документ.ГрузополучательОрганизацияСАТУРН  КАК ГрузополучательОрганизацияСАТУРН,
	|	Документ.ГрузополучательМестоХранения      КАК ГрузополучательМестоХранения
	|ИЗ
	|	Документ.НакладнаяСАТУРН КАК Документ
	|ГДЕ
	|	(Документ.ГрузоотправительОрганизацияСАТУРН = &ОрганизацияСАТУРН Или &БезУчетаОрганизации)
	|	И (Документ.ГрузополучательОрганизацияСАТУРН = &ГрузополучательОрганизацияСАТУРН Или &БезУчетаГрузополучателя)
	|	И Документ.Проведен
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Дата УБЫВ");
	
	Запрос.УстановитьПараметр("ОрганизацияСАТУРН",   ОрганизацияСАТУРН);
	Запрос.УстановитьПараметр("БезУчетаОрганизации", Не ЗначениеЗаполнено(ОрганизацияСАТУРН));
	
	Запрос.УстановитьПараметр("ГрузополучательОрганизацияСАТУРН", ГрузополучательОрганизацияСАТУРН);
	Запрос.УстановитьПараметр("БезУчетаГрузополучателя",          Не ЗначениеЗаполнено(ГрузополучательОрганизацияСАТУРН));
	
	РезультатЗапроса = Запрос.Выполнить();
	ДанныеПоследнихДокументов = РезультатЗапроса.Выгрузить();
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ГрузоотправительОрганизацияСАТУРН", ОрганизацияСАТУРН(ДанныеПоследнихДокументов));
	ДанныеЗаполнения.Вставить("ГрузоотправительМестоХранения",     Справочники.МестаХраненияСАТУРН.ПустаяСсылка());
	ДанныеЗаполнения.Вставить("ГрузополучательОрганизацияСАТУРН",  Справочники.КлассификаторОрганизацийСАТУРН.ПустаяСсылка());
	ДанныеЗаполнения.Вставить("ГрузополучательМестоХранения",      Справочники.МестаХраненияСАТУРН.ПустаяСсылка());
	ДанныеЗаполнения.Вставить("Операция",                          Перечисления.ВидыОперацийСАТУРН.ПустаяСсылка());
	
	ДанныеПоследнихДокументов.Колонки["ОрганизацияСАТУРН"].Имя = "ГрузоотправительОрганизацияСАТУРН";
	
	Если ЗначениеЗаполнено(ГрузополучательОрганизацияСАТУРН) Тогда
		ЗаполнитьПоСтатистике(
			"ГрузоотправительМестоХранения, Операция",
			ДанныеЗаполнения,
			ДанныеПоследнихДокументов,
			"ГрузоотправительОрганизацияСАТУРН");
		ЗаполнитьПоСтатистике(
			"ГрузополучательМестоХранения",
			ДанныеЗаполнения,
			ДанныеПоследнихДокументов,
			"ГрузоотправительОрганизацияСАТУРН, ГрузополучательОрганизацияСАТУРН");
	Иначе
		ЗаполнитьПоСтатистике(
			"ГрузоотправительМестоХранения, ГрузополучательОрганизацияСАТУРН, ГрузополучательМестоХранения, Операция",
			ДанныеЗаполнения,
			ДанныеПоследнихДокументов,
		"ГрузоотправительОрганизацияСАТУРН");
	КонецЕсли;
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

// Заполнение документа ПланПримененияСАТУРН по статистике
// Параметры:
//  ОрганизацияСАТУРН - СправочникСсылка.КлассификаторОрганизацийСАТУРН
//
// Возвращаемое значение:
//	Структура - данные заполнения:
//  * ОрганизацияСАТУРН  - СправочникСсылка.КлассификаторОрганизацийСАТУРН
//  * СрокОграничений    - Строка
//  * СпособПримененияПАТ - ПеречислениеСсылка.СпособыПримененияПАТСАТУРН
Функция ДанныеЗаполненияПланПримененияСАТУРН(ОрганизацияСАТУРН) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 3
	|	1                            КАК Количество,
	|	Документ.ОрганизацияСАТУРН   КАК ОрганизацияСАТУРН,
	|	Документ.СрокОграничений     КАК СрокОграничений,
	|	Документ.СпособПримененияПАТ КАК СпособПримененияПАТ
	|ИЗ
	|	Документ.ПланПримененияСАТУРН КАК Документ
	|ГДЕ
	|	(Документ.ОрганизацияСАТУРН = &ОрганизацияСАТУРН Или &БезУчетаОрганизации)
	|	И Документ.Проведен
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Дата УБЫВ");
	
	Запрос.УстановитьПараметр("ОрганизацияСАТУРН",   ОрганизацияСАТУРН);
	Запрос.УстановитьПараметр("БезУчетаОрганизации", Не ЗначениеЗаполнено(ОрганизацияСАТУРН));
	
	РезультатЗапроса = Запрос.Выполнить();
	ДанныеПоследнихДокументов = РезультатЗапроса.Выгрузить();
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ОрганизацияСАТУРН",   ОрганизацияСАТУРН(ДанныеПоследнихДокументов));
	ДанныеЗаполнения.Вставить("СрокОграничений",     "");
	ДанныеЗаполнения.Вставить("СпособПримененияПАТ", Перечисления.СпособыПримененияПАТСАТУРН.ПустаяСсылка());
	
	ЗаполнитьПоСтатистике("СрокОграничений, СпособПримененияПАТ", ДанныеЗаполнения, ДанныеПоследнихДокументов);
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

// Заполнение документа АктПримененияСАТУРН по статистике
// Параметры:
//  ОрганизацияСАТУРН - СправочникСсылка.КлассификаторОрганизацийСАТУРН
//
// Возвращаемое значение:
//	Структура - данные заполнения:
//  * ОрганизацияСАТУРН  - СправочникСсылка.КлассификаторОрганизацийСАТУРН
//  * МестоХранения       - СправочникСсылка.МестаХраненияСАТУРН
//  * СпособПримененияПАТ - ПеречислениеСсылка.СпособыПримененияПАТСАТУРН
Функция ДанныеЗаполненияАктПримененияСАТУРН(ОрганизацияСАТУРН) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 3
	|	1                            КАК Количество,
	|	Документ.ОрганизацияСАТУРН   КАК ОрганизацияСАТУРН,
	|	Документ.СпособПримененияПАТ КАК СпособПримененияПАТ,
	|	Документ.МестоХранения       КАК МестоХранения
	|ИЗ
	|	Документ.АктПримененияСАТУРН КАК Документ
	|ГДЕ
	|	(Документ.ОрганизацияСАТУРН = &ОрганизацияСАТУРН Или &БезУчетаОрганизации)
	|	И Документ.Проведен
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Дата УБЫВ");
	
	Запрос.УстановитьПараметр("ОрганизацияСАТУРН",   ОрганизацияСАТУРН);
	Запрос.УстановитьПараметр("БезУчетаОрганизации", Не ЗначениеЗаполнено(ОрганизацияСАТУРН));
	
	РезультатЗапроса = Запрос.Выполнить();
	ДанныеПоследнихДокументов = РезультатЗапроса.Выгрузить();
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ОрганизацияСАТУРН",   ОрганизацияСАТУРН(ДанныеПоследнихДокументов));
	ДанныеЗаполнения.Вставить("МестоХранения",       Справочники.МестаХраненияСАТУРН.ПустаяСсылка());
	ДанныеЗаполнения.Вставить("СпособПримененияПАТ", Перечисления.СпособыПримененияПАТСАТУРН.ПустаяСсылка());
	
	ЗаполнитьПоСтатистике("МестоХранения,СпособПримененияПАТ", ДанныеЗаполнения, ДанныеПоследнихДокументов);
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

// Заполнение документа ИмпортПродукцииСАТУРН по статистике
// Параметры:
//  ОрганизацияСАТУРН - СправочникСсылка.КлассификаторОрганизацийСАТУРН
//
// Возвращаемое значение:
//	Структура - данные заполнения:
//  * ОрганизацияСАТУРН  - СправочникСсылка.КлассификаторОрганизацийСАТУРН
//  * МестоХранения       - СправочникСсылка.МестаХраненияСАТУРН
Функция ДанныеЗаполненияИмпортПродукцииСАТУРН(ОрганизацияСАТУРН) Экспорт

	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 3
	|	1                            КАК Количество,
	|	Документ.ОрганизацияСАТУРН   КАК ОрганизацияСАТУРН,
	|	Документ.МестоХранения       КАК МестоХранения
	|ИЗ
	|	Документ.ИмпортПродукцииСАТУРН КАК Документ
	|ГДЕ
	|	(Документ.ОрганизацияСАТУРН = &ОрганизацияСАТУРН Или &БезУчетаОрганизации)
	|	И Документ.Проведен
	|УПОРЯДОЧИТЬ ПО
	|	Документ.Дата УБЫВ");
	
	Запрос.УстановитьПараметр("ОрганизацияСАТУРН",   ОрганизацияСАТУРН);
	Запрос.УстановитьПараметр("БезУчетаОрганизации", Не ЗначениеЗаполнено(ОрганизацияСАТУРН));
	
	РезультатЗапроса = Запрос.Выполнить();
	ДанныеПоследнихДокументов = РезультатЗапроса.Выгрузить();
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ОрганизацияСАТУРН",   ОрганизацияСАТУРН(ДанныеПоследнихДокументов));
	ДанныеЗаполнения.Вставить("МестоХранения",       Справочники.МестаХраненияСАТУРН.ПустаяСсылка());
	
	ЗаполнитьПоСтатистике("МестоХранения", ДанныеЗаполнения, ДанныеПоследнихДокументов);
	
	Возврат ДанныеЗаполнения;

КонецФункции

Процедура ЗаполнитьПустойРеквизит(Объект, ДанныеСтатистики, ИмяРеквизита) Экспорт
	
	Если Не ЗначениеЗаполнено(Объект[ИмяРеквизита])
		Или ТипЗнч(Объект[ИмяРеквизита]) = Тип("Булево") Тогда
		Объект[ИмяРеквизита] = ДанныеСтатистики[ИмяРеквизита];
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоСтатистике(Поля, ДанныеЗаполнения, ДанныеПоследнихДокументов, ПоляОтбора = "ОрганизацияСАТУРН")
	
	Отбор = Новый Структура;
	ОтбираемыеПоля = СтрРазделить(ПоляОтбора, ",");
	
	Для Каждого ПолеОтбора Из ОтбираемыеПоля Цикл
		ИмяПоля = СокрЛП(ПолеОтбора);
		Если ДанныеЗаполнения[ИмяПоля] <> Неопределено Тогда
			Отбор.Вставить(ИмяПоля, ДанныеЗаполнения[ИмяПоля]);
		КонецЕсли;
	КонецЦикла;
	
	Если Отбор.Количество() = 0 Тогда
		Отбор = Неопределено;
	КонецЕсли;
	
	ЗаполняемыеПоля = СтрРазделить(Поля, ",");
	
	РезультатыАнализа = ДанныеПоследнихДокументов.Скопировать(
		Отбор, Поля + ", Количество");
	
	РезультатыАнализа.Свернуть(Поля, "Количество");
	РезультатыАнализа.Сортировать("Количество Убыв");
	Если РезультатыАнализа.Количество() > 0 Тогда
		Для Каждого Поле Из ЗаполняемыеПоля Цикл
			ИмяПоля = СокрЛП(Поле);
			ДанныеЗаполнения[ИмяПоля] = РезультатыАнализа[0][ИмяПоля];
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция ОрганизацияСАТУРН(ДанныеПоследнихДокументов)
	
	ДанныеАнализа = ДанныеПоследнихДокументов.Скопировать(,"ОрганизацияСАТУРН, Количество");
	ДанныеАнализа.Свернуть("ОрганизацияСАТУРН", "Количество");
	ДанныеАнализа.Сортировать("Количество Убыв");
	Если ДанныеАнализа.Количество() = 0 Тогда
		Возврат Справочники.КлассификаторОрганизацийСАТУРН.ПустаяСсылка();
	Иначе
		Возврат ДанныеАнализа[0].ОрганизацияСАТУРН;
	КонецЕсли;
	
КонецФункции

#КонецОбласти
