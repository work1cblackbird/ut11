////////////////////////////////////////////////////////////////////////////////
// Подсистема "Объекты УТ11, КА2, УП2".
// ОбщийМодуль.КоммерческиеПредложенияДокументыУТ.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ИнициализацияДокументов

// См. КоммерческиеПредложенияДокументыПереопределяемый.ОбработкаЗаполненияДокумента.
//
Процедура ОбработкаЗаполненияДокумента(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт

	Если Не Объект.ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.КоммерческоеПредложениеКлиенту") Тогда
		
		КоммерческоеПредложениеКлиентуОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		ОтветственныеЛицаСервер.ЗаполнитьМенеджера(Объект, Ложь, "Клиент.ОсновнойМенеджер");

	//++ Локализация	
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.КоммерческоеПредложениеПоставщика") Тогда
		
		ОтветственныеЛицаСервер.ЗаполнитьМенеджера(Объект, Ложь, "Поставщик.ОсновнойМенеджер");
	//-- Локализация	
	
	КонецЕсли;
	
	КоммерческиеПредложенияДокументыЛокализация.ОбработкаЗаполненияДокумента(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	Если Не ЗначениеЗаполнено(Объект.Менеджер) Тогда
		Объект.Менеджер = Пользователи.ТекущийПользователь();
	КонецЕсли;

	Если Не ЗначениеЗаполнено(Объект.Автор) Тогда
		Объект.Автор = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	ОписаниеРеквизитов = Новый Структура;
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьВсегда = "Автор";
	Если ТипЗнч(Объект) = Тип("ДокументОбъект.КоммерческоеПредложениеКлиенту") Тогда
		Параметры.РазрезыСбораСтатистики.ИспользоватьТолькоЗаполненные = "Клиент";
	
	//++ Локализация	
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.ЗапросКоммерческогоПредложенияОтКлиента") Тогда
		Параметры.РазрезыСбораСтатистики.ИспользоватьТолькоЗаполненные = "Клиент";			
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.КоммерческоеПредложениеПоставщика") Тогда
		Параметры.РазрезыСбораСтатистики.ИспользоватьТолькоЗаполненные = "Поставщик";
	//-- Локализация	
				
	КонецЕсли;
	Параметры.ЗаполнятьПриУсловии.ПоляОбъектаЗаполнены = "Автор";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов,
		"Организация", Параметры);
	
	ЗаполнениеОбъектовПоСтатистике.ЗаполнитьРеквизитыОбъекта(Объект, ДанныеЗаполнения, ОписаниеРеквизитов);

	Объект.Организация  = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Объект.Организация);
	Если Не ЗначениеЗаполнено(Объект.Валюта) Тогда
		Объект.Валюта = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Объект.Организация);
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриЗаполненииСпискаТекущихДелКоммерческихПредложений
//
// Параметры:
//  ТекущиеДела - См. КоммерческиеПредложенияДокументыПереопределяемый.ПриЗаполненииСпискаТекущихДелКоммерческихПредложений.ТекущиеДела
//  ИмяДокумента - См. КоммерческиеПредложенияДокументыПереопределяемый.ПриЗаполненииСпискаТекущихДелКоммерческихПредложений.ИмяДокумента
//
Процедура ПриЗаполненииСпискаТекущихДелКоммерческихПредложений(ТекущиеДела, ИмяДокумента) Экспорт
	
	Если ИмяДокумента = "КоммерческоеПредложениеКлиенту"
		И ОбщегоНазначения.ПодсистемаСуществует(
		"ЭлектронноеВзаимодействие.КоммерческиеПредложения.КоммерческиеПредложенияДокументы.КоммерческоеПредложениеКлиенту") Тогда
		
		ОбщиеПараметрыЗапросов = ТекущиеДелаСервер.ОбщиеПараметрыЗапросов();
		ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаСписка";
		
		Доступность =
			ПравоДоступа("Редактирование", Метаданные.Документы.КоммерческоеПредложениеКлиенту)
			И ПравоДоступа("Чтение"      , Метаданные.РегистрыСведений.СостоянияКоммерческихПредложенийКлиентам)
			И ПолучитьФункциональнуюОпцию("ИспользоватьКоммерческиеПредложенияКлиентам");
			
		Если Доступность Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
			|			КОГДА СостоянияКоммерческихПредложенийКлиентам.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКоммерческихПредложенийКлиентам.ОжидаетсяСогласование)
			|				ТОГДА СостоянияКоммерческихПредложенийКлиентам.КоммерческоеПредложениеКлиенту
			|		КОНЕЦ) КАК КоммерческиеПредложенияНаСогласовании,
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
			|			КОГДА СостоянияКоммерческихПредложенийКлиентам.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКоммерческихПредложенийКлиентам.Подготавливается)
			|				ТОГДА СостоянияКоммерческихПредложенийКлиентам.КоммерческоеПредложениеКлиенту
			|		КОНЕЦ) КАК КоммерческиеПредложенияПодготавливаются,
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
			|			КОГДА СостоянияКоммерческихПредложенийКлиентам.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияКоммерческихПредложенийКлиентам.Действует)
			|					И &ДатаАктуальности <= СостоянияКоммерческихПредложенийКлиентам.КоммерческоеПредложениеКлиенту.СрокДействия
			|				ТОГДА СостоянияКоммерческихПредложенийКлиентам.КоммерческоеПредложениеКлиенту
			|		КОНЕЦ) КАК КоммерческиеПредложенияДействующие
			|ИЗ
			|	Документ.КоммерческоеПредложениеКлиенту КАК ДокументКоммерческоеПредложениеКлиенту
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияКоммерческихПредложенийКлиентам КАК СостоянияКоммерческихПредложенийКлиентам
			|		ПО (СостоянияКоммерческихПредложенийКлиентам.КоммерческоеПредложениеКлиенту = ДокументКоммерческоеПредложениеКлиенту.Ссылка)
			|ГДЕ
			|	ДокументКоммерческоеПредложениеКлиенту.Менеджер = &Пользователь
			|	И ДокументКоммерческоеПредложениеКлиенту.Проведен
			|	И СостоянияКоммерческихПредложенийКлиентам.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияКоммерческихПредложенийКлиентам.Отменено)";
			
			Результат = ТекущиеДелаСервер.ЧисловыеПоказателиТекущихДел(Запрос, ОбщиеПараметрыЗапросов);
			
			// Заполнение дел.
			// КоммерческиеПредложенияКлиентам
			ДелоРодитель = ТекущиеДела.Добавить();
			ДелоРодитель.Идентификатор  = "КоммерческиеПредложенияКлиентам";
			ДелоРодитель.Представление  = НСтр("ru = 'Коммерческие предложения клиентам'");
			ДелоРодитель.Владелец       = Метаданные.Подсистемы.Продажи;
			
			// КоммерческиеПредложенияКлиентамНаСогласовании
			СписокСостояний = Новый СписокЗначений;
			СписокСостояний.Добавить(Перечисления.СостоянияКоммерческихПредложенийКлиентам.ОжидаетсяСогласование);
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("СостояниеОтбор",   СписокСостояний);
			ПараметрыОтбора.Вставить("Актуальность",     "");
			ПараметрыОтбора.Вставить("ДатаАктуальности", ОбщиеПараметрыЗапросов.ПустаяДата);
			ПараметрыОтбора.Вставить("Менеджер",         ОбщиеПараметрыЗапросов.Пользователь);
			
			Дело = ТекущиеДела.Добавить();
			Дело.Идентификатор  = "КоммерческиеПредложенияКлиентамНаСогласовании";
			Дело.ЕстьДела       = Результат.КоммерческиеПредложенияНаСогласовании > 0;
			Дело.Представление  = НСтр("ru = 'На согласовании'");
			Дело.Количество     = Результат.КоммерческиеПредложенияНаСогласовании;
			Дело.Важное         = Ложь;
			Дело.Форма          = ИмяФормы;
			Дело.ПараметрыФормы = Новый Структура("СтруктураБыстрогоОтбора", ПараметрыОтбора);
			Дело.Владелец       = "КоммерческиеПредложенияКлиентам";
			
			// КоммерческиеПредложенияКлиентамПодготавливаются
			СписокСостояний = Новый СписокЗначений;
			СписокСостояний.Добавить(Перечисления.СостоянияКоммерческихПредложенийКлиентам.Подготавливается);
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("СостояниеОтбор",   СписокСостояний);
			ПараметрыОтбора.Вставить("Актуальность",     "");
			ПараметрыОтбора.Вставить("ДатаАктуальности", ОбщиеПараметрыЗапросов.ПустаяДата);
			ПараметрыОтбора.Вставить("Менеджер",         ОбщиеПараметрыЗапросов.Пользователь);
			
			Дело = ТекущиеДела.Добавить();
			Дело.Идентификатор  = "КоммерческиеПредложенияПодготавливаются";
			Дело.ЕстьДела       = Результат.КоммерческиеПредложенияПодготавливаются > 0;
			Дело.Представление  = НСтр("ru = 'Подготавливается'");
			Дело.Количество     = Результат.КоммерческиеПредложенияПодготавливаются;
			Дело.Важное         = Ложь;
			Дело.Форма          = ИмяФормы;
			Дело.ПараметрыФормы = Новый Структура("СтруктураБыстрогоОтбора", ПараметрыОтбора);
			Дело.Владелец       = "КоммерческиеПредложенияКлиентам";
			
			// КоммерческиеПредложенияКлиентамДействуют
			СписокСостояний = Новый СписокЗначений;
			СписокСостояний.Добавить(Перечисления.СостоянияКоммерческихПредложенийКлиентам.Действует);
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("СостояниеОтбор",   СписокСостояний);
			ПараметрыОтбора.Вставить("Актуальность",     НСтр("ru = 'Не истек'"));
			ПараметрыОтбора.Вставить("ДатаАктуальности", ОбщиеПараметрыЗапросов.ПустаяДата);
			ПараметрыОтбора.Вставить("Менеджер",         ОбщиеПараметрыЗапросов.Пользователь);
			
			Дело = ТекущиеДела.Добавить();
			Дело.Идентификатор  = "КоммерческиеПредложенияКлиентамДействуют";
			Дело.ЕстьДела       = Результат.КоммерческиеПредложенияДействующие > 0;
			Дело.Представление  = НСтр("ru = 'Действует'");
			Дело.Количество     = Результат.КоммерческиеПредложенияДействующие;
			Дело.Важное         = Ложь;
			Дело.Форма          = ИмяФормы;
			Дело.ПараметрыФормы = Новый Структура("СтруктураБыстрогоОтбора", ПараметрыОтбора);
			Дело.Владелец       = "КоммерческиеПредложенияКлиентам";
			
			Если Результат.КоммерческиеПредложенияНаСогласовании > 0
				Или Результат.КоммерческиеПредложенияПодготавливаются > 0
				Или Результат.КоммерческиеПредложенияДействующие > 0 Тогда
				ДелоРодитель.ЕстьДела = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	КоммерческиеПредложенияДокументыЛокализация.ПриЗаполненииСпискаТекущихДелКоммерческихПредложений(ТекущиеДела, ИмяДокумента);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ИнициализацияКомандФормы.
//
Процедура ИнициализацияКомандФормы(ИмяСобытия, ИмяОбъекта, Контекст, Результат = Неопределено, Параметры = Неопределено) Экспорт
	
	Если ИмяСобытия = "ДобавитьКомандыСозданияНаОсновании" Тогда
		ДобавитьКомандыСозданияНаОсновании(ИмяОбъекта, Контекст, Параметры);
	ИначеЕсли ИмяСобытия = "ДобавитьКомандуСоздатьНаОсновании" Тогда
		Результат = ДобавитьКомандуСоздатьНаОсновании(ИмяОбъекта, Контекст);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеДанныхИнформационнойБазы

// См. КоммерческиеПредложенияДокументыПереопределяемый.АнализируемыеИсточникиПредложений.
//
// Параметры:
//  Источники - ТаблицаЗначений:
//
Процедура АнализируемыеИсточникиПредложений(Источники) Экспорт
	
	СоглашенияСПоставщиками = Метаданные.Справочники.СоглашенияСПоставщиками;
	
	НоваяСтрока = Источники.Добавить();
	НоваяСтрока.ИмяИсточника           = СоглашенияСПоставщиками.Имя;
	НоваяСтрока.ПредставлениеИсточника = СоглашенияСПоставщиками.Синоним;
	НоваяСтрока.КраткоеПредставление   =  НСтр("ru = 'Условия закупок'");
	НоваяСтрока.КартинкаИсточника      = БиблиотекаКартинок.УстановитьСтатусСоглашенияСПоставщикомДействует;
	НоваяСтрока.Использовать           = Истина;
	НоваяСтрока.Использовать           = Истина;
	НоваяСтрока.ПоддерживаетСохранение = Ложь;
	
	ЦеныНоменклатурыПоставщиков = Метаданные.РегистрыСведений.ЦеныНоменклатурыПоставщиков;
	
	НоваяСтрока = Источники.Добавить();
	НоваяСтрока.ИмяИсточника           = ЦеныНоменклатурыПоставщиков.Имя;
	НоваяСтрока.ПредставлениеИсточника = ЦеныНоменклатурыПоставщиков.Синоним;
	НоваяСтрока.КраткоеПредставление   = НСтр("ru = 'Цены поставщиков'");
	НоваяСтрока.КартинкаИсточника      = БиблиотекаКартинок.ЗагрузитьДействующиеЦены;
	НоваяСтрока.Использовать           = Истина;
	НоваяСтрока.ПоддерживаетСохранение = Ложь;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьДанныеНоменклатуры.
//
Процедура ЗаполнитьДанныеНоменклатуры(Знач СписокНоменклатуры, ЗначенияПолей) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Номенклатура.Ссылка КАК НоменклатураСсылка,
		|	Номенклатура.НаименованиеПолное КАК НоменклатураНаименование
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка В(&СписокНоменклатуры)";
	
	Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(
			ЗначенияПолей[ВыборкаДетальныеЗаписи.НоменклатураСсылка],
			ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьДанныеХарактеристикНоменклатуры.
//
Процедура ЗаполнитьДанныеХарактеристикНоменклатуры(Знач Характеристики, ЗначенияПолей) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ХарактеристикиНоменклатуры.Ссылка КАК ХарактеристикаСсылка,
		|	ХарактеристикиНоменклатуры.НаименованиеПолное КАК ХарактеристикаНаименование
		|ИЗ
		|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|ГДЕ
		|	ХарактеристикиНоменклатуры.Ссылка В(&СписокХарактеристик)";
	
	Запрос.УстановитьПараметр("СписокХарактеристик", Характеристики);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(
			ЗначенияПолей[ВыборкаДетальныеЗаписи.ХарактеристикаСсылка],
			ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьДанныеЕдиницИзмерения.
//
Процедура ЗаполнитьДанныеЕдиницИзмерения(Знач ЕдиницыИзмерения, ЗначенияПолей) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЕдиницыИзмерения.Наименование КАК ЛогистическаяУпаковкаНаименование,
		|	ВЫБОР
		|		КОГДА ЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|			ТОГДА ЕдиницыИзмерения.ЕдиницаИзмерения.Наименование
		|		ИНАЧЕ ЕдиницыИзмерения.Наименование
		|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
		|	ВЫБОР
		|		КОГДА ЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
		|			ТОГДА ЕдиницыИзмерения.ЕдиницаИзмерения.Код
		|		ИНАЧЕ ЕдиницыИзмерения.Код
		|	КОНЕЦ КАК ЕдиницаИзмеренияКодОКЕИ,
		|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмеренияСсылка,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЕдиницыИзмерения.Числитель, 0) = 0
		|			ТОГДА 1
		|		ИНАЧЕ ЕдиницыИзмерения.Числитель
		|	КОНЕЦ КАК Числитель,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ЕдиницыИзмерения.Знаменатель, 0) = 0
		|			ТОГДА 1
		|		ИНАЧЕ ЕдиницыИзмерения.Знаменатель
		|	КОНЕЦ КАК Знаменатель
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК ЕдиницыИзмерения
		|ГДЕ
		|	ЕдиницыИзмерения.Ссылка В(&ЕдиницыИзмерения)";
	
	Запрос.УстановитьПараметр("ЕдиницыИзмерения", ЕдиницыИзмерения);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(
			ЗначенияПолей[ВыборкаДетальныеЗаписи.ЕдиницаИзмеренияСсылка],
			ВыборкаДетальныеЗаписи);
	КонецЦикла;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьДанныеШтрихКодовНоменклатуры.
//
Процедура ЗаполнитьДанныеШтрихКодовНоменклатуры(СписокНоменклатуры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
		|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика,
		|	ШтрихкодыНоменклатуры.ЕдиницаИзмерения КАК ЕдиницаИзмерения
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&СписокНоменклатуры КАК ШтрихкодыНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Штрихкоды.Штрихкод КАК ШтрихКод
		|ИЗ
		|	Товары КАК Товары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
		|		ПО Товары.Номенклатура = Штрихкоды.Номенклатура
		|			И Товары.Характеристика = Штрихкоды.Характеристика
		|			И Товары.ЕдиницаИзмерения = Штрихкоды.Упаковка";
	
	Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СписокНоменклатуры = РезультатЗапроса.Выгрузить();
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ДанныеУчастникаКоммерческихПредложений.
//
Процедура ДанныеУчастникаКоммерческихПредложений(Знач Участник, ДанныеУчастника) Экспорт
	
	СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Участник, ТекущаяДатаСеанса());
	
	ДанныеУчастника = Новый Структура;
	ДанныеУчастника.Вставить("Ссылка", Участник);
	ДанныеУчастника.Вставить("Наименование", СведенияОбОрганизации.СокращенноеНаименование);
	ДанныеУчастника.Вставить("Вид", Новый Структура);
	
	Если СведенияОбОрганизации.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель Тогда
		
		ИндивидуальныйПредприниматель = Новый Структура("ИНН, Имя, Фамилия, Отчество");
		ЗаполнитьЗначенияСвойств(ИндивидуальныйПредприниматель, СведенияОбОрганизации);
		
		КоммерческиеПредложенияДокументыЛокализация.ЗаполнитьЧастиИмениПредпринимателя(
			СведенияОбОрганизации.ОфициальноеНаименование, ИндивидуальныйПредприниматель);
		
		ДанныеУчастника.Вид.Вставить("ИндивидуальныйПредприниматель", ИндивидуальныйПредприниматель);
		
	ИначеЕсли СведенияОбОрганизации.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
		
		ЮридическоеЛицо = Новый Структура("ИНН, КПП");
		ЗаполнитьЗначенияСвойств(ЮридическоеЛицо, СведенияОбОрганизации);
		
		ДанныеУчастника.Вид.Вставить("ЮридическоеЛицо", ЮридическоеЛицо);
		
	КонецЕсли;
	
	ЮридическийАдрес = Новый Структура("Представление, Код");
	ЮридическийАдрес.Представление = СведенияОбОрганизации.ЮридическийАдрес;
	
	ДанныеУчастника.Вставить("ЮридическийАдрес", ЮридическийАдрес);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьАдресПоСкладу.
//
Процедура ЗаполнитьАдресПоСкладу(Знач Склад, АдресДоставки) Экспорт
	
	ТаблицаКонтактнойИнформации = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Склад,
		Справочники.ВидыКонтактнойИнформации.АдресСклада, ТекущаяДатаСеанса(), Ложь);
		
	Если ЗначениеЗаполнено(ТаблицаКонтактнойИнформации) Тогда
		
		АдресДоставки.Представление = ТаблицаКонтактнойИнформации[0].Представление;
		КоммерческиеПредложенияДокументыЛокализация.ЗаполнитьСведенияОбАдресе(ТаблицаКонтактнойИнформации[0].ЗначенияПолей, АдресДоставки);
		
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПолучитьПартнераПоКонтрагенту.
//
Процедура ПолучитьПартнераПоКонтрагенту(Знач Контрагент, Партнер) Экспорт
	Партнер = ДенежныеСредстваСервер.ПолучитьПартнераПоКонтрагенту(Контрагент);
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьКонтактноеЛицоДокументаПоДаннымЭлектронногоДокумента.
//
Процедура ЗаполнитьКонтактноеЛицоДокументаПоДаннымЭлектронногоДокумента(Контрагент, ДанныеКонтактногоЛица, КонтактноеЛицо) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.КонтактноеЛицо КАК КонтактноеЛицо,
	|	ВложенныйЗапрос.ЗначениеУпорядочивания КАК ЗначениеУпорядочивания
	|ИЗ
	|	(ВЫБРАТЬ
	|		КонтактныеЛицаПартнеров.Ссылка КАК КонтактноеЛицо,
	|		3 КАК ЗначениеУпорядочивания
	|	ИЗ
	|		Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|			ПО КонтактныеЛицаПартнеров.Владелец = Контрагенты.Партнер
	|	ГДЕ
	|		КонтактныеЛицаПартнеров.Наименование = &Наименование
	|		И Контрагенты.Ссылка = &Контрагент
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КонтактныеЛицаПартнеров.Ссылка,
	|		2
	|	ИЗ
	|		Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
	|			ПО КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка = КонтактныеЛицаПартнеров.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|			ПО КонтактныеЛицаПартнеров.Владелец = Контрагенты.Партнер
	|	ГДЕ
	|		Контрагенты.Ссылка = &Контрагент
	|		И КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = &ТипКонтактнойИнформацииТелефон
	|		И КонтактныеЛицаПартнеровКонтактнаяИнформация.НомерТелефона = &НомерТелефона
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КонтактныеЛицаПартнеров.Ссылка,
	|		1
	|	ИЗ
	|		Справочник.КонтактныеЛицаПартнеров.КонтактнаяИнформация КАК КонтактныеЛицаПартнеровКонтактнаяИнформация
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
	|			ПО КонтактныеЛицаПартнеровКонтактнаяИнформация.Ссылка = КонтактныеЛицаПартнеров.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|			ПО КонтактныеЛицаПартнеров.Владелец = Контрагенты.Партнер
	|	ГДЕ
	|		Контрагенты.Ссылка = &Контрагент
	|		И КонтактныеЛицаПартнеровКонтактнаяИнформация.Тип = &ТипКонтактнойИнформацииАдресЭлектроннойПочты
	|		И КонтактныеЛицаПартнеровКонтактнаяИнформация.АдресЭП = &АдресЭлектроннойПочты) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗначениеУпорядочивания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Контрагенты.Партнер КАК Партнер
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Контрагент";
	
	Запрос.УстановитьПараметр("Контрагент",                                   Контрагент);
	Запрос.УстановитьПараметр("Наименование",                                 ДанныеКонтактногоЛица.ФИО);
	Запрос.УстановитьПараметр("ТипКонтактнойИнформацииТелефон",               Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("НомерТелефона",                                ДанныеКонтактногоЛица.Телефон);
	Запрос.УстановитьПараметр("ТипКонтактнойИнформацииАдресЭлектроннойПочты", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Запрос.УстановитьПараметр("АдресЭлектроннойПочты",                        ДанныеКонтактногоЛица.ЭлектроннаяПочта);
	
	Результат = Запрос.ВыполнитьПакет(); 
	
	ВыборкаНайденные = Результат[0].Выбрать();
	
	Если ВыборкаНайденные.Следующий() Тогда
		КонтактноеЛицо = ВыборкаНайденные.КонтактноеЛицо;
	ИначеЕсли ПравоДоступа("Добавление", Метаданные.Справочники.КонтактныеЛицаПартнеров) Тогда 
		
		ПараметрыСоздания = Справочники.КонтактныеЛицаПартнеров.ПараметрыСозданияКонтактногоЛица();
		ПараметрыСоздания.Наименование          = ДанныеКонтактногоЛица.ФИО;
		ПараметрыСоздания.АдресЭлектроннойПочты = ДанныеКонтактногоЛица.ЭлектроннаяПочта;
		ПараметрыСоздания.Телефон               = ДанныеКонтактногоЛица.Телефон;
		
		ВыборкаПартнер = Результат[1].Выбрать();
		ВыборкаПартнер.Следующий();
		
		ПараметрыСоздания.Партнер = ВыборкаПартнер.Партнер;
		
		РезультатСоздания = Справочники.КонтактныеЛицаПартнеров.РезультатСозданияКонтактногоЛица(ПараметрыСоздания);
		
		Если РезультатСоздания.Ошибки.Количество() = 0 Тогда
			КонтактноеЛицо = РезультатСоздания.КонтактноеЛицо;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Получает построчную информацию из найденных предложениях по запросу коммерческих предложений.
//
// Параметры:
//  СсылкаНаОбъект         - ДокументСсылка.ЗапросКоммерческихПредложенийПоставщиков - запрос коммерческих предложений.
//  АнализируемыеИсточники - ТаблицаЗначений - таблица анализируемых источников.
//  НайденныеПредложения   - ТаблицаЗначений - Дерево данных:
//   * КоммерческоеПредложениеСсылка - ОпределяемыйТип.КоммерческоеПредложениеПоставщика - ссылка на документ.
//   * ДокументОснование             - ОпределяемыйТип.ЗапросКоммерческихПредложенийПоставщиков - ссылка на документ основание.
//   * ПоставщикПредставление        - Строка - представление контрагента.
//   * ПоставщикСсылка               - ОпределяемыйТип.КонтрагентБЭД - ссылка на справочник контрагенты.
//   * УсловияОплатыТекст            - Строка - описание условий оплаты.
//   * УсловияПоставкиТекст          - Строка - описание условий поставки.
//   * ПрочаяДополнительнаяИнформацияТекст - Строка - описание прочей информации о предложении.
//   * СуммаМинимум                  - Число  - минимальная сумма по всем позициям предложения.
//   * СуммаМаксимум                 - Число  - максимальная сумма по всем позициям предложения.
//   * СрокПоставки                  - Дата, Число - срок поставки в днях с момента оплаты заказа, либо конкретная дата поставки.
//   * Охват                         - Число  - охват позиций запроса.
//   * ИмяИсточника                  - Число  - имя источника получения коммерческого предложения.
//   * Налогообложение               - Булево - облагается ли продажа НДС.
//   * ЦенаВключаетНДС               - Булево - включает ли цена НДС.
//   * КоммерческоеПредложениеНомер  - Число  - номер предложения.
//   * КоммерческоеПредложениеДата   - Дата   - дата предложения.
//   * МожетВыкупатьсяЧастично       - Булево - можно ли выкупать только часть предложений.
//   * Валюта                        - СправочникСсылка.Валюты - валюта предложения.
//   * Товары                        - ТаблицаЗначений         - товары предложения, колонки:
//      ** НоменклатураПоставщика               - Строка - номенклатура.
//      ** ИдентификаторСтрокиЗапроса           - Строка - идентификатор запроса.
//      ** ИдентификаторСтрокиИсточника         - Строка - идентификатор источника.
//      ** ИдентификаторНоменклатурыПоставщика  - Строка - идентификатор номенклатуры поставщика.
//      ** СрокПоставки                         - Число, Дата - количество дней или дата поставки.
//      ** Количество                           - Число  - количество товара.
//      ** Цена                                 - Число  - цена товара.
//      ** ПроцентСкидки                        - Число  - скидка.
//      ** СуммаСНДС                            - Число  - сумму с учетом НДС.
//      ** ДополнительнаяИнформацияОтПоставщика - Строка - дополнительная информация поставщика.
//      ** Комментарий                          - Строка - комментарий.
//      ** ЕдиницаИзмерения                     - Строка - единица измерения номенклатуры.
//      ** СнятСРассмотрения                    - Булево - признак снятия с рассмотрения.
//      ** СтавкаНДС                            - ОпределяемыйТип.СтавкаНДСКоммерческихПредложений.
//
Процедура ПредложенияИсточниковПоЗапросуКоммерческихПредложений(Знач СсылкаНаОбъект, Знач АнализируемыеИсточники, НайденныеПредложения) Экспорт
	
	КоммерческиеПредложенияДокументыЛокализация.ПредложенияИсточниковПоЗапросуКоммерческихПредложений(СсылкаНаОбъект, АнализируемыеИсточники, НайденныеПредложения);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ОбработкаРезультатаПодбораНоменклатуры.
//
Процедура ОбработкаРезультатаПодбораНоменклатуры(Форма, ВыбранноеЗначение, ДополнительныеПараметры, РезультатОбработки) Экспорт
	
	Если Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаДокумента" Тогда
		
		КоммерческоеПредложениеКлиентуОбработкаРезультатаПодбораНоменклатуры(Форма, ВыбранноеЗначение, ДополнительныеПараметры, РезультатОбработки);
		
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ЗагрузитьПолученныеИзВнешнегоФайлаДанные.
//
Процедура ЗагрузитьПолученныеИзВнешнегоФайлаДанные(Форма, ВыбранноеЗначение) Экспорт
	
	Если Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаДокумента" Тогда
		
		КоммерческоеПредложениеКлиентуЗагрузитьПолученныеИзВнешнегоФайлаДанные(Форма, ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ОбработатьВводШтрихкода.
//
Процедура ОбработатьВводШтрихкода(Форма, ДанныеШтрихкода, РезультатОбработки) Экспорт
	
	Если Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаДокумента" Тогда
		
		КоммерческоеПредложениеКлиентуОбработатьВводШтрихкода(Форма, ДанныеШтрихкода, РезультатОбработки);
		
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ОбработатьВводШтрихкода.
//
Процедура ОбработатьПолученныеДанныеТСД(Форма, ТаблицаТоваров, РезультатОбработки) Экспорт
	
	КоммерческоеПредложениеКлиентуОбработатьВводШтрихкода(Форма, ТаблицаТоваров, РезультатОбработки);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьЦеныПоВидуЦен.
//
Процедура ЗаполнитьЦеныПоВидуЦен(Форма, ВидЦены, ДополнительныеПараметры) Экспорт
	
	КоммерческоеПредложениеКлиентуЗаполнитьЦеныПоВидуЦен(Форма, ВидЦены, ДополнительныеПараметры);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьЦеныПоУсловиюПродаж.
//
Процедура ЗаполнитьЦеныПоУсловиюПродаж(Форма, УсловиеПродаж, ДополнительныеПараметры) Экспорт
	
	КоммерческоеПредложениеКлиентуЗаполнитьЦеныПоУсловиюПродаж(Форма, УсловиеПродаж, ДополнительныеПараметры);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.РассчитатьСкидкиНаСервере.
//
Процедура РассчитатьСкидкиНаСервере(Форма, РезультатОбработки)  Экспорт
	
	КоммерческоеПредложениеКлиентуРассчитатьСкидки(Форма, РезультатОбработки);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПодготовитьОткрытиеИнформацииОСкидкахНаСервере.
//
Процедура ПодготовитьОткрытиеИнформацииОСкидкахНаСервере(Форма, РезультатОбработки) Экспорт
	
	КоммерческоеПредложениеКлиентуПодготовитьОткрытиеИнформацииОСкидкахНаСервере(Форма, РезультатОбработки);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриОтменеРучныхСкидокНаСервере.
//
Процедура ПриОтменеРучныхСкидокНаСервере(Форма, РезультатОбработки) Экспорт
	
	КоммерческоеПредложениеКлиентуПриОтменеРучныхСкидокНаСервере(Форма, РезультатОбработки);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриНазначенииРучнойСкидкиНаСервере.
//
Процедура ПриНазначенииРучнойСкидкиНаСервере(Форма, РезультатОбработки) Экспорт
	
	КоммерческоеПредложениеКлиентуПриНазначенииРучнойСкидкиНаСервере(Форма, РезультатОбработки);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПослеНазначенияРучнойСкидкиНаСервере.
//
Процедура ПослеНазначенияРучнойСкидкиНаСервере(Форма, ВыделенныеСтроки, РезультатОбработки, ДополнительныеПараметры) Экспорт
	
	КоммерческоеПредложениеКлиентуПослеНазначенияРучнойСкидкиНаСервере(Форма, ВыделенныеСтроки, РезультатОбработки, ДополнительныеПараметры);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПослеНазначенияАвтоматическойСкидкиНаСервере.
//
Процедура ПослеНазначенияАвтоматическойСкидкиНаСервере(Форма, Результат, ДополнительныеПараметры) Экспорт
	
	КоммерческоеПредложениеКлиентуПослеНазначенияАвтоматическойСкидкиНаСервере(Форма, Результат, ДополнительныеПараметры);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПослеНазначенияРучнойСкидкиНаСервере.
//
Процедура ПриНазначенииАвтоматическихСкидокНаСервере(Форма, Результат) Экспорт
	
	КоммерческоеПредложениеКлиентуПриНазначенииАвтоматическихСкидокНаСервере(Форма, Результат);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриВыполненииПереопределяемойКоманды.
//
Процедура ПриВыполненииПереопределяемойКоманды(Форма, ИмяКоманды, РезультатОбработки) Экспорт
	
	КоммерческоеПредложениеКлиентуПриВыполненииПереопределяемойКоманды(Форма, ИмяКоманды, РезультатОбработки);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриВыполненииПереопределяемойКоманды.
//
Процедура ТоварыВыборСервер(Форма, ИмяПоля, РезультатОбработки) Экспорт
	
	Если ИмяПоля <> "ТоварыКомментарийДляПокупателя"
		Или ИмяПоля <> "ТоварыКомментарийВнутренний" Тогда
			
		РезультатОбработки = ПараметрыОткрытияСоставаНабора(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриДобавленииКомандОтчетов(ИмяОбъекта, КомандыОтчетов, Параметры) Экспорт
	
	Если ИмяОбъекта = "Документ.КоммерческоеПредложениеКлиенту" Тогда
		
		КоммерческоеПредложениеКлиентуПриДобавленииКомандОтчетов(КомандыОтчетов, Параметры);
		
	КонецЕсли;
	
	КоммерческиеПредложенияДокументыЛокализация.ПриДобавленииКомандОтчетов(ИмяОбъекта, КомандыОтчетов, Параметры);
		
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.СохранитьПользовательскиеИзмененияВДокументахИсточниках
//
Процедура СохранитьПользовательскиеИзмененияВДокументахИсточниках(Источники, Отказ) Экспорт
	
	ТаблицаИсточники = Источники.Скопировать(, "Источник"); // См. КоммерческиеПредложенияДокументыПереопределяемый.СохранитьПользовательскиеИзмененияВДокументахИсточниках.Источники
	ТаблицаИсточники.Свернуть("Источник");
	
	Для Каждого СтрокаТаблицы Из ТаблицаИсточники Цикл
		
		Источник = СтрокаТаблицы.Источник;
		
		Если Метаданные.Документы.Содержит(Источник.Метаданные()) Тогда
			
			Отбор = Новый Структура("Источник", Источник);
			НайденныеСтроки = Источники.НайтиСтроки(Отбор);
			
			НачатьТранзакцию();
			
			Попытка
				Блокировка = Новый БлокировкаДанных();
				ЭлементБлокировки = Блокировка.Добавить(Источник.Метаданные().ПолноеИмя());
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Источник);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				Блокировка.Заблокировать();
				
				ДокументОбъект = Источник.ПолучитьОбъект(); // ДокументОбъект
				
				Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
					
					Отбор = Новый Структура("ИдентификаторСтроки", НайденнаяСтрока.ИдентификаторСтрокиИсточника);
					Строки = ДокументОбъект.Товары.НайтиСтроки(Отбор);
					
					Если Строки.Количество() > 0 Тогда
						
						Строки[0].СнятСРассмотрения = НайденнаяСтрока.СнятСРассмотрения;
						Строки[0].Комментарий       = НайденнаяСтрока.Комментарий;
						
					КонецЕсли;
					
				КонецЦикла;
				
				ДокументОбъект.Записать();
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				
				Отказ = Истина;
				
				ЗаписьЖурналаРегистрации(
					СтрШаблон("%1.%2", НСтр("ru = 'Коммерческие предложения.'", НСтр("ru = 'Сохранение настроек'")),
					ОбщегоНазначения.КодОсновногоЯзыка()), УровеньЖурналаРегистрации.Ошибка,, Источник,
					НСтр("ru = 'Сохранение настроек запроса коммерческих предложений'"));
					
				Возврат;
				
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет данные возможных получателей печатных форм.
//
// Параметры:
//  ПолноеИмяОбъектаМетаданных  - Строка - полное имя объекта метаданных, для печатных форм которого определяются получатели.
//  СтруктураДанныхОбъектаПечати  - Структура - описание возможных получателей
//
Процедура ЗаполнитьДанныеСтруктурыПолучателяПечатнойФормыПоТипуОбъекта(ПолноеИмяОбъектаМетаданных, СтруктураДанныхОбъектаПечати) Экспорт
	
	Если ПолноеИмяОбъектаМетаданных = "Документ.КоммерческоеПредложениеКлиенту" Тогда
		
		КоммерческоеПредложениеКлиентуЗаполнитьДанныеСтруктурыПолучателяПечатнойФормы(СтруктураДанныхОбъектаПечати);
		
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПолучитьКоммерческиеПредложенияКлиентуНаОсновании.
//
Процедура ПолучитьКоммерческиеПредложенияКлиентуНаОсновании(Знач СсылкаНаОбъект, КоммерческиеПредложенияКлиенту) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КоммерческоеПредложениеКлиенту.Ссылка КАК Ссылка,
	|	КоммерческоеПредложениеКлиенту.Номер КАК Номер,
	|	КоммерческоеПредложениеКлиенту.Дата КАК Дата,
	|	КоммерческоеПредложениеКлиенту.Менеджер КАК Менеджер
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
	|ГДЕ
	|	КоммерческоеПредложениеКлиенту.ДокументОснование = &ДокументОснование";
	
	Запрос.УстановитьПараметр("ДокументОснование", СсылкаНаОбъект);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	КоммерческиеПредложенияКлиенту = РезультатЗапроса.Выгрузить();
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриЗаполненииДанныхЭлектронногоДокумента.
//
Процедура ПриЗаполненииДанныхЭлектронногоДокумента(СсылкаНаОбъект, ПодготовленныеДанные , СтандартнаяОбработка) Экспорт
	
	ДокументОснование = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СсылкаНаОбъект, "ДокументОснование", Истина);
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНаборы")
		Или (ЗначениеЗаполнено(ДокументОснование)
			И ТипЗнч(ДокументОснование) <> Тип("ДокументСсылка.КоммерческоеПредложениеКлиенту")) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	Товары.НомерСтроки       КАК НомерСтроки,
	|	Товары.Номенклатура      КАК Номенклатура,
	|	Товары.Характеристика    КАК Характеристика,
	|	ВЫБОР
	|		КОГДА Товары.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ Товары.ЕдиницаИзмерения
	|	КОНЕЦ                   КАК ЕдиницаИзмерения,
	|	Товары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТоварыДокумента
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &СсылкаНаОбъект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыДокумента.НомерСтроки,
	|	ТоварыДокумента.НоменклатураНабора,
	|	ТоварыДокумента.ХарактеристикаНабора,
	|	ТоварыДокумента.НоменклатураНабора.ЕдиницаИзмерения,
	|	ТоварыДокумента.Ссылка
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту.Товары КАК ТоварыДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	|		ПО ВариантыКомплектацииНоменклатуры.Владелец      = ТоварыДокумента.НоменклатураНабора
	|		И ВариантыКомплектацииНоменклатуры.Характеристика = ТоварыДокумента.ХарактеристикаНабора
	|		И ВариантыКомплектацииНоменклатуры.Основной
	|		И ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор)
	|ГДЕ
	|	ТоварыДокумента.Ссылка = &СсылкаНаОбъект
	|	И ТоварыДокумента.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Номенклатура КАК Номенклатура
	|ИЗ
	|	ТоварыДокумента КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Характеристика КАК Характеристика
	|ИЗ
	|	ТоварыДокумента КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	ТоварыДокумента КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////4
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Номенклатура     КАК Номенклатура,
	|	Товары.Характеристика   КАК Характеристика,
	|	Товары.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	ТоварыДокумента КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////5
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КоммерческоеПредложениеКлиентуТовары.Ссылка                                                                             КАК Ссылка,
	|	КоммерческоеПредложениеКлиентуТовары.НомерСтроки                                                                        КАК НомерСтроки,
	|	КоммерческоеПредложениеКлиентуТовары.ИдентификаторСтрокиЗапроса                                                         КАК ИдентификаторСтроки,
	|	КоммерческоеПредложениеКлиентуТовары.Номенклатура                                                                       КАК Номенклатура,
	|	КоммерческоеПредложениеКлиентуТовары.Характеристика                                                                     КАК Характеристика,
	|	ВЫБОР
	|		КОГДА КоммерческоеПредложениеКлиентуТовары.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА КоммерческоеПредложениеКлиентуТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ КоммерческоеПредложениеКлиентуТовары.ЕдиницаИзмерения
	|	КОНЕЦ                                                                                                                   КАК ЕдиницаИзмерения,
	|	КоммерческоеПредложениеКлиентуТовары.Количество                                                                         КАК Количество,
	|	КоммерческоеПредложениеКлиентуТовары.Цена                                                                               КАК Цена,
	|	КоммерческоеПредложениеКлиентуТовары.СтавкаНДС                                                                          КАК СтавкаНДС,
	|	КоммерческоеПредложениеКлиентуТовары.СуммаНДС                                                                           КАК СуммаНДС,
	|	КоммерческоеПредложениеКлиентуТовары.Сумма                                                                              КАК СуммаБезНДС,
	|	КоммерческоеПредложениеКлиентуТовары.СуммаСНДС                                                                          КАК СуммаСНДС,
	|	КоммерческоеПредложениеКлиентуТовары.СуммаРучнойСкидки + КоммерческоеПредложениеКлиентуТовары.СуммаАвтоматическойСкидки КАК СуммаСкидки,
	|	ВЫБОР
	|		КОГДА КоммерческоеПредложениеКлиентуТовары.ПроцентАвтоматическойСкидки = 0 И КоммерческоеПредложениеКлиентуТовары.ПроцентРучнойСкидки = 0 ТОГДА 0
	|		КОГДА КоммерческоеПредложениеКлиентуТовары.ПроцентАвтоматическойСкидки <> 0 И КоммерческоеПредложениеКлиентуТовары.ПроцентРучнойСкидки <> 0 ТОГДА -1
	|		КОГДА КоммерческоеПредложениеКлиентуТовары.ПроцентАвтоматическойСкидки <> 0 И КоммерческоеПредложениеКлиентуТовары.ПроцентРучнойСкидки = 0  ТОГДА КоммерческоеПредложениеКлиентуТовары.ПроцентАвтоматическойСкидки
	|		КОГДА КоммерческоеПредложениеКлиентуТовары.ПроцентАвтоматическойСкидки = 0 И КоммерческоеПредложениеКлиентуТовары.ПроцентРучнойСкидки <> 0 ТОГДА КоммерческоеПредложениеКлиентуТовары.ПроцентРучнойСкидки
	|	КОНЕЦ                                                                                                                   КАК ПроцентСкидки,
	|	КоммерческоеПредложениеКлиентуТовары.СрокПоставки                                                                       КАК СрокПоставки,
	|	КоммерческоеПредложениеКлиентуТовары.КомментарийДляПокупателя                                                           КАК Комментарий,
	|	КоммерческоеПредложениеКлиенту.ВариантУказанияСрокаПоставки                                                             КАК ВариантУказанияСрокаПоставки,
	|
	|	ВариантыКомплектацииНоменклатуры.Ссылка                                                                                 КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах                                              КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора                                                               КАК ВариантРасчетаЦеныНабора,
	|	КоммерческоеПредложениеКлиентуТовары.НоменклатураНабора                                                                 КАК НоменклатураНабора,
	|	КоммерческоеПредложениеКлиентуТовары.ХарактеристикаНабора                                                               КАК ХарактеристикаНабора
	|
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту.Товары КАК КоммерческоеПредложениеКлиентуТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
	|			ПО КоммерческоеПредложениеКлиентуТовары.Ссылка = КоммерческоеПредложениеКлиенту.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	|			ПО ВариантыКомплектацииНоменклатуры.Владелец      = КоммерческоеПредложениеКлиентуТовары.НоменклатураНабора
	|			И ВариантыКомплектацииНоменклатуры.Характеристика = КоммерческоеПредложениеКлиентуТовары.ХарактеристикаНабора
	|			И ВариантыКомплектацииНоменклатуры.Основной
	|ГДЕ
	|	КоммерческоеПредложениеКлиентуТовары.Ссылка = &СсылкаНаОбъект
	|;
	|////////////////////////////////////////////////////////////////////////////////6
	|ВЫБРАТЬ
	|	Таблица.Ссылка                              КАК Ссылка,
	|	Таблица.НоменклатураНабора                  КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора                КАК ХарактеристикаНабора,
	|	Таблица.НоменклатураНабора.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	МИНИМУМ(Таблица.НомерСтроки)                КАК НомерСтроки,
	|	СУММА(Таблица.СуммаБезНДС)                  КАК СуммаБезНДС,
	|	СУММА(Таблица.СуммаНДС)                     КАК СуммаНДС,
	|	СУММА(Таблица.СуммаСНДС)                    КАК СуммаСНДС,
	|	СУММА(Таблица.СуммаСкидки)                  КАК СуммаСкидки
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
	|ИЗ
	|	Товары КАК Таблица
	|
	|ГДЕ
	|	Таблица.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////7
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТоварыРазличные
	|ИЗ
	|	Товары КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////8
	|ВЫБРАТЬ
	|	Товары.Ссылка                                    КАК Ссылка,
	|	Товары.ВариантКомплектацииНоменклатуры           КАК ВариантКомплектацииНоменклатуры,
	|	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Товары.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ВЫБОР КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
	|		И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОсновнаяКомплектующая,
	|	Товары.СрокПоставки КАК СрокПоставки,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК КоличествоПоУмолчанию,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьПервая
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	Товары.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыРазличные.Ссылка                                                                  КАК Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка                                           КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец                                  КАК НоменклатураНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика                            КАК ХарактеристикаНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура                                     КАК Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика                                   КАК Характеристика,
	|	ЛОЖЬ КАК ОсновнаяКомплектующая,
	|	NULL КАК СрокПоставки,
	|	NULL КАК СтавкаНДС,
	|	СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество) КАК КоличествоПоУмолчанию,
	|	0 КАК Количество
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыРазличные КАК ТоварыРазличные
	|		ПО ИСТИНА
	|ГДЕ
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.ВариантКомплектацииНоменклатуры ИЗ Товары КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыРазличные.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////9
	|ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	МАКСИМУМ(Таблица.СтавкаНДС) КАК СтавкаНДС,
	|	МАКСИМУМ(Таблица.СрокПоставки) КАК СрокПоставки,
	|	МАКСИМУМ(Таблица.ОсновнаяКомплектующая) КАК ОсновнаяКомплектующая,
	|	СУММА(Таблица.КоличествоПоУмолчанию) КАК КоличествоПоУмолчанию,
	|	СУММА(Таблица.Количество) КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьВторая
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьПервая КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////10
	|ВЫБРАТЬ
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.СтавкаНДС
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК СтавкаНДС,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.СрокПоставки
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК СрокПоставки,
	|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
	|			КОГДА Результат.КоличествоПоУмолчанию <> 0 И Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
	|			ИНАЧЕ NULL
	|		КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьВторая КАК Результат
	|СГРУППИРОВАТЬ ПО
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////11
	|ВЫБРАТЬ
	|	ВременнаяТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатурыВариантКомплектацииНоменклатуры,
	|	ВЫБОР КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКоммерческихПредложений.ПриемНаКомиссию) ТОГДА
	|		ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|		ИНАЧЕ
	|			ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|	КОНЕЦ                                                      КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВЫБОР КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКоммерческихПредложений.ПриемНаКомиссию) ТОГДА
	|		ВЫБОР КОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|			ИНАЧЕ
	|				ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|			И ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора В (ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам),ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям)) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих)
	|		ИНАЧЕ
	|			ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|	КОНЕЦ                                                       КАК ВариантРасчетаЦеныНабора,
	|	Таблица.Ссылка                                              КАК Ссылка,
	|	Таблица.НоменклатураНабора                                  КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора                                КАК ХарактеристикаНабора,
	|	Таблица.ЕдиницаИзмерения                                    КАК ЕдиницаИзмерения,
	|	Таблица.НомерСтроки                                         КАК НомерСтроки,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК Количество,
	|	Таблица.СуммаБезНДС                                         КАК СуммаБезНДС,
	|	Таблица.СуммаНДС                                            КАК СуммаНДС,
	|	Таблица.СуммаСНДС                                           КАК СуммаСНДС,
	|	Таблица.СуммаСкидки                                         КАК СуммаСкидки,
	|	ВременнаяТаблицаНаборыДополнительно.СрокПоставки            КАК СрокПоставки,
	|	ВременнаяТаблицаНаборыДополнительно.СтавкаНДС               КАК СтавкаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборы
	|ИЗ
	|	ВременнаяТаблицаНаборыПодготовка КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ВременнаяТаблицаНаборыДополнительно
	|		ПО Таблица.НоменклатураНабора = ВременнаяТаблицаНаборыДополнительно.НоменклатураНабора
	|		И Таблица.ХарактеристикаНабора = ВременнаяТаблицаНаборыДополнительно.ХарактеристикаНабора
	|		И Таблица.Ссылка = ВременнаяТаблицаНаборыДополнительно.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////12
	|ВЫБРАТЬ
	|	
	|	Товары.Ссылка                                           КАК Ссылка,
	|	Товары.ВариантПредставленияНабораВПечатныхФормах        КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Товары.ВариантРасчетаЦеныНабора                         КАК ВариантРасчетаЦеныНабора,
	|	Товары.НоменклатураНабора                               КАК НоменклатураНабора,
	|	Товары.ХарактеристикаНабора                             КАК ХарактеристикаНабора,
	|	Товары.ЭтоНабор                                         КАК ЭтоНабор,
	|	Товары.ЭтоКомплектующие                                 КАК ЭтоКомплектующие,
	|
	|	Товары.НомерСтроки                                      КАК НомерСтроки,
	|	Товары.Номенклатура                                     КАК Номенклатура,
	|	Товары.ЕдиницаИзмерения                                 КАК ЕдиницаИзмерения,
	|	Товары.Количество                                       КАК Количество,
	|
	|	Товары.Цена КАК Цена,
	|
	|	Товары.СтавкаНДС                                         КАК СтавкаНДС,
	|	Товары.СуммаБезНДС                                       КАК СуммаБезНДС,
	|	Товары.СуммаНДС                                          КАК СуммаНДС,
	|	Товары.СуммаСНДС                                         КАК СуммаСНДС,
	|	Товары.СрокПоставки                                      КАК СрокПоставки,
	|	ЕСТЬNULL(Товары.Характеристика, """")                    КАК Характеристика,
	|	Товары.СуммаСкидки                                       КАК СуммаСкидки,
	|	Товары.ПроцентСкидки                                     КАК ПроцентСкидки,
	|	Товары.Комментарий                                       КАК Комментарий,
	|	Товары.ВариантУказанияСрокаПоставки                      КАК ВариантУказанияСрокаПоставки
	|
	|ИЗ (
	|
	|	ВЫБРАТЬ
	|		Таблица.Ссылка,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)
	|		КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)
	|		КОНЕЦ КАК ВариантРасчетаЦеныНабора,
	|		Таблица.НоменклатураНабора,
	|		Таблица.ХарактеристикаНабора,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|		КОНЕЦ КАК ЭтоКомплектующие,
	|		ЛОЖЬ КАК ЭтоНабор,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.НомерСтроки
	|		ИНАЧЕ
	|			Таблица.НомерСтроки
	|		КОНЕЦ КАК НомерСтроки,
	|		Таблица.Номенклатура,
	|		Таблица.Количество,
	|		Таблица.Цена,
	|		Таблица.СтавкаНДС,
	|		Таблица.СуммаБезНДС,
	|		Таблица.СуммаНДС,
	|		Таблица.СуммаСНДС,
	|		Таблица.СрокПоставки,
	|		Таблица.Характеристика,
	|		Таблица.ЕдиницаИзмерения,
	|		Таблица.СуммаСкидки,
	|		Таблица.ПроцентСкидки,
	|		Таблица.Комментарий,
	|		Таблица.ВариантУказанияСрокаПоставки
	|	ИЗ
	|		Товары КАК Таблица
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|			ПО ВременнаяТаблицаНаборы.НоменклатураНабора = Таблица.НоменклатураНабора
	|			 И ВременнаяТаблицаНаборы.ХарактеристикаНабора = Таблица.ХарактеристикаНабора
	|			 И ВременнаяТаблицаНаборы.Ссылка = Таблица.Ссылка
	|
	|	ГДЕ
	|		Таблица.НоменклатураНабора = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ИЛИ (Таблица.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	        И ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие),
	|	                                                                              ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВременнаяТаблицаНаборы.Ссылка,
	|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах,
	|		ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора,
	|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
	|		ЛОЖЬ КАК ЭтоКомплектующие,
	|		ИСТИНА КАК ЭтоНабор,
	|		ВременнаяТаблицаНаборы.НомерСтроки,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора,
	|		ВременнаяТаблицаНаборы.Количество,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1) <> 0 ТОГДА
	|			(ВременнаяТаблицаНаборы.СуммаСНДС) / ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК Цена,
	|		ВременнаяТаблицаНаборы.СтавкаНДС,
	|		ВременнаяТаблицаНаборы.СуммаБезНДС,
	|		ВременнаяТаблицаНаборы.СуммаНДС,
	|		ВременнаяТаблицаНаборы.СуммаСНДС,
	|		ВременнаяТаблицаНаборы.СрокПоставки,
	|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
	|		ВременнаяТаблицаНаборы.ЕдиницаИзмерения,
	|		ВременнаяТаблицаНаборы.СуммаСкидки,
	|		-1,
	|		"""",
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыСроковПоставкиКоммерческихПредложений.ПустаяСсылка) 
	|	ИЗ
	|		ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|	ГДЕ
	|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор)
	|) КАК Товары
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки,
	|	ЭтоНабор УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////13
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КоммерческоеПредложениеКлиенту.ИдентификаторЗКПВСервисе                                                                           КАК ИдентификаторЗапроса,
	|	КоммерческоеПредложениеКлиенту.Статус                                                                                             КАК Статус,
	|	КоммерческоеПредложениеКлиенту.Проведен                                                                                           КАК Проведен,
	|	КоммерческоеПредложениеКлиенту.Ссылка                                                                                             КАК Ссылка,
	|	КоммерческоеПредложениеКлиенту.Организация                                                                                        КАК Организация,
	|	КоммерческоеПредложениеКлиенту.Контрагент                                                                                         КАК Контрагент,
	|	КоммерческоеПредложениеКлиенту.Менеджер                                                                                           КАК Менеджер,
	|	Пользователи.Наименование                                                                                                         КАК ПредставлениеМенеджера,
	|	КоммерческоеПредложениеКлиенту.УсловияДоставкиТекст                                                                               КАК УсловияДоставки,
	|	КоммерческоеПредложениеКлиенту.УсловияОплатыТекст                                                                                 КАК УсловияОплаты,
	|	КоммерческоеПредложениеКлиенту.ПрочаяДополнительнаяИнформацияТекст                                                                КАК УсловияПрочие,
	|	КоммерческоеПредложениеКлиенту.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКоммерческихПредложений.ПриемНаКомиссию) КАК ПриемПередачаНаКомиссию,
	|	НЕ КоммерческоеПредложениеКлиенту.МожетВыкупатьсяЧастично                                                                         КАК ВсеИлиНичего,
	|	КоммерческоеПредложениеКлиенту.ЦенаВключаетНДС                                                                                    КАК ЦенаВключаетНДС,
	|	КоммерческоеПредложениеКлиенту.Валюта.Код                                                                                         КАК ВалютаКод,
	|	КоммерческоеПредложениеКлиенту.Валюта.Наименование                                                                                КАК ВалютаНаименование,
	|	НЕ КоммерческоеПредложениеКлиенту.Налогообложение                                                                                 КАК УСН,
	|	КоммерческоеПредложениеКлиенту.СрокДействия                                                                                       КАК СрокДействия,
	|	КоммерческоеПредложениеКлиенту.ДополнительнаяИнформацияКлиентуHTML                                                                КАК ДополнительнаяИнформацияКлиентуHTML
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Валюты КАК Валюты
	|		ПО КоммерческоеПредложениеКлиенту.Валюта = Валюты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|		ПО (Пользователи.Ссылка = КоммерческоеПредложениеКлиенту.Менеджер)
	|ГДЕ
	|	КоммерческоеПредложениеКлиенту.Ссылка = &СсылкаНаОбъект";
	
	Запрос.УстановитьПараметр("СсылкаНаОбъект", СсылкаНаОбъект);
	
	ОбщегоНазначенияУТ.ПоказатьВременнуюТаблицу(Запрос, "ТоварыДокумента");
	ОбщегоНазначенияУТ.ПоказатьВременнуюТаблицу(Запрос, "ВременнаяТаблицаНаборы");
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ПодготовленныеДанные.РезультатЗапросаНоменклатура               = РезультатЗапроса[1];
	ПодготовленныеДанные.РезультатЗапросаХарактеристика             = РезультатЗапроса[2];
	ПодготовленныеДанные.РезультатЗапросаЕдиницыИзмерения           = РезультатЗапроса[3];
	ПодготовленныеДанные.РезультатЗапросаДляПолученияШтрихкодов     = РезультатЗапроса[4];
	ПодготовленныеДанные.РезультатЗапросаТовары                     = РезультатЗапроса[12];
	ПодготовленныеДанные.РезультатЗапросаШапка                      = РезультатЗапроса[13];
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриЗаполненииПараметровСравненияЗапрошеноПредложено.
//
Процедура ПриЗаполненииПараметровСравненияЗапрошеноПредложено(Параметры, ДанныеПоСтрокеЗапроса, ДанныеТекущейСтроки) Экспорт
	
	Если Не ЗначениеЗаполнено(ДанныеТекущейСтроки.ЕдиницаИзмерения)
		И ЗначениеЗаполнено(ДанныеТекущейСтроки.Номенклатура) Тогда
		
		Параметры.ЕдиницаИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеТекущейСтроки.Номенклатура, "ЕдиницаИзмерения");
		
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПослеДобавленияСтрокИзЗапросаВКоммерческомПредложениеКлиенту.
//
Процедура ПослеДобавленияСтрокИзЗапросаВКоммерческомПредложениеКлиенту(Форма, МассивИдентификаторовДобавленныхСтрок) Экспорт
	
	Объект = Форма.Объект;
	
	СтруктураДействий = Новый Структура;
	ПараметрыЗаполненияСтавкиНДС = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыЗаполненияСтавкиНДС(Объект);
	ПараметрыЗаполненияСтавкиНДС.Дата = ТекущаяДатаСеанса();
	ПараметрыЗаполненияСтавкиНДС.НалогообложениеНДС = КоммерческиеПредложенияДокументыКлиентСерверУТ.НалогообложениеНДСПоНалогообложениюКоммерческихПредложений(Объект.Налогообложение);
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", ПараметрыЗаполненияСтавкиНДС);
	
	Для Каждого ЭлементМассива Из МассивИдентификаторовДобавленныхСтрок Цикл
		ПараметрыПоиска = Новый Структура;
		ПараметрыПоиска.Вставить("ИдентификаторСтрокиЗапроса", ЭлементМассива);
		НайденныеСтроки = Объект.Товары.НайтиСтроки(ПараметрыПоиска);
		Если НайденныеСтроки.Количество() = 1 Тогда
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НайденныеСтроки[0], СтруктураДействий, Неопределено);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПолучитьТекстЗапросаПолученияЕдиницыИзмерения.
//
Процедура ПолучитьТекстЗапросаПолученияЕдиницыИзмерения(ТекстЗапроса) Экспорт
	
	ТекстЗапроса =
	"	ВЫБОР
	|		КОГДА Товары.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА Товары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ Товары.ЕдиницаИзмерения
	|	КОНЕЦ";
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.КоммерческоеПредложениеКлиентуПриФормированииСтруктурыДанныхПечати.
//
Процедура КоммерческоеПредложениеКлиентуПриФормированииСтруктурыДанныхПечати(МассивОбъектов, СтруктураДанныхДляПечати, ПараметрыПечати, СтандартнаяОбработка) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНаборы") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов",   МассивОбъектов);
	
	ОтображатьСкидки = Истина;
	Если ПараметрыПечати.Свойство("ОтображатьСкидки")
		И Не ПараметрыПечати.ОтображатьСкидки Тогда
		ОтображатьСкидки = Ложь;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОтображатьСкидки", ОтображатьСкидки);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	КоммерческоеПредложениеКлиенту.Ссылка                              КАК Ссылка,
	|	КоммерческоеПредложениеКлиенту.Дата                                КАК Дата,
	|	КоммерческоеПредложениеКлиенту.Номер                               КАК Номер,
	|	КоммерческоеПредложениеКлиенту.Менеджер                            КАК Менеджер,
	|	КоммерческоеПредложениеКлиенту.КонтактноеЛицо                      КАК КонтактноеЛицо,
	|	КоммерческоеПредложениеКлиенту.Организация                         КАК Организация,
	|	КоммерческоеПредложениеКлиенту.СрокДействия                        КАК СрокДействия,
	|	КоммерческоеПредложениеКлиенту.Валюта                              КАК Валюта,
	|	КоммерческоеПредложениеКлиенту.ЦенаВключаетНДС                     КАК ЦенаВключаетНДС,
	|	КоммерческоеПредложениеКлиенту.Налогообложение                     КАК УчитыватьНДС,
	|	КоммерческоеПредложениеКлиенту.УсловияДоставкиТекст                КАК УсловияДоставки,
	|	КоммерческоеПредложениеКлиенту.УсловияОплатыТекст                  КАК УсловияОплаты,
	|	КоммерческоеПредложениеКлиенту.ПрочаяДополнительнаяИнформацияТекст КАК ПрочиеУсловия,
	|	КоммерческоеПредложениеКлиенту.Клиент                              КАК Клиент,
	|	КоммерческоеПредложениеКлиенту.Контрагент                          КАК Контрагент,
	|	КоммерческоеПредложениеКлиенту.ВариантУказанияСрокаПоставки        КАК ВариантУказанияСрокаПоставки,
	|	КоммерческоеПредложениеКлиенту.МожетВыкупатьсяЧастично             КАК МожетВыкупатьсяЧастично
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
	|ГДЕ
	|	КоммерческоеПредложениеКлиенту.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                                                          КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки                                                     КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура                                                    КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                                                  КАК Характеристика,
	|	ТаблицаТовары.СуммаРучнойСкидки + ТаблицаТовары.СуммаАвтоматическойСкидки     КАК СуммаСкидки,
	|	ТаблицаТовары.ПроцентРучнойСкидки + ТаблицаТовары.ПроцентАвтоматическойСкидки КАК ПроцентСкидки,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ТаблицаТовары.ЕдиницаИзмерения
	|	КОНЕЦ                                                                         КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.Количество                                                      КАК Количество,
	|	ВЫБОР
	|		КОГДА &ОтображатьСкидки
	|			ТОГДА ТаблицаТовары.Цена
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ТаблицаТовары.Количество = 0
	|				ТОГДА 0
	|			ИНАЧЕ ТаблицаТовары.Сумма / ТаблицаТовары.Количество
	|		КОНЕЦ
	|	КОНЕЦ                                                                         КАК Цена,
	|	ТаблицаТовары.СуммаСНДС                                                       КАК СуммаСНДС,
	|	ТаблицаТовары.Сумма                                                           КАК Сумма,
	|	ТаблицаТовары.СуммаНДС                                                        КАК СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС                                                       КАК СтавкаНДС,
	|	ТаблицаТовары.СрокПоставки                                                    КАК СрокПоставки,
	|
	|	ВариантыКомплектацииНоменклатуры.Ссылка                                       КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах    КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора                     КАК ВариантРасчетаЦеныНабора,
	|	ТаблицаТовары.НоменклатураНабора                                              КАК НоменклатураНабора,
	|	ТаблицаТовары.ХарактеристикаНабора                                            КАК ХарактеристикаНабора
	|
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту.Товары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	|		ПО ВариантыКомплектацииНоменклатуры.Владелец      = ТаблицаТовары.НоменклатураНабора
	|		И ВариантыКомплектацииНоменклатуры.Характеристика = ТаблицаТовары.ХарактеристикаНабора
	|		И ВариантыКомплектацииНоменклатуры.Основной
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|ВЫБРАТЬ
	|	Таблица.Ссылка                 КАК Ссылка,
	|	Таблица.НоменклатураНабора     КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора   КАК ХарактеристикаНабора,
	|	МИНИМУМ(Таблица.НомерСтроки)   КАК НомерСтроки,
	|	СУММА(Таблица.Сумма)           КАК Сумма,
	|	СУММА(Таблица.СуммаНДС)        КАК СуммаНДС,
	|	СУММА(Таблица.СуммаСНДС)       КАК СуммаСНДС,
	|	СУММА(Таблица.СуммаСкидки)     КАК СуммаСкидки
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
	|ИЗ
	|	Товары КАК Таблица
	|
	|ГДЕ
	|	Таблица.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТоварыРазличные
	|ИЗ
	|	Товары КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////4
	|ВЫБРАТЬ
	|	Товары.Ссылка                                    КАК Ссылка,
	|	Товары.ВариантКомплектацииНоменклатуры           КАК ВариантКомплектацииНоменклатуры,
	|	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Товары.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ВЫБОР КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
	|		И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ОсновнаяКомплектующая,
	|	Товары.СрокПоставки КАК СрокПоставки,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК КоличествоПоУмолчанию,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьПервая
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	Товары.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыРазличные.Ссылка                                                                  КАК Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка                                           КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец                                  КАК НоменклатураНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика                            КАК ХарактеристикаНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура   КАК Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика КАК Характеристика,
	|	ЛОЖЬ КАК ОсновнаяКомплектующая,
	|	NULL КАК СрокПоставки,
	|	NULL КАК СтавкаНДС,
	|	СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество) КАК КоличествоПоУмолчанию,
	|	0 КАК Количество
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыРазличные КАК ТоварыРазличные
	|		ПО ИСТИНА
	|ГДЕ
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.ВариантКомплектацииНоменклатуры ИЗ Товары КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыРазличные.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////5
	|ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	МАКСИМУМ(Таблица.СтавкаНДС) КАК СтавкаНДС,
	|	МАКСИМУМ(Таблица.СрокПоставки) КАК СрокПоставки,
	|	МАКСИМУМ(Таблица.ОсновнаяКомплектующая) КАК ОсновнаяКомплектующая,
	|	СУММА(Таблица.КоличествоПоУмолчанию) КАК КоличествоПоУмолчанию,
	|	СУММА(Таблица.Количество) КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьВторая
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьПервая КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////6
	|ВЫБРАТЬ
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.СтавкаНДС
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК СтавкаНДС,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.СрокПоставки
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК СрокПоставки,
	|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
	|			КОГДА Результат.КоличествоПоУмолчанию <> 0 И Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
	|			ИНАЧЕ NULL
	|		КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьВторая КАК Результат
	|СГРУППИРОВАТЬ ПО
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////7
	|ВЫБРАТЬ
	|	ВременнаяТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатурыВариантКомплектацииНоменклатуры,
	|	ВЫБОР КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКоммерческихПредложений.ПриемНаКомиссию) ТОГДА
	|		ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|		ИНАЧЕ
	|			ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|	КОНЕЦ                                                      КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВЫБОР КОГДА Таблица.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийКоммерческихПредложений.ПриемНаКомиссию) ТОГДА
	|		ВЫБОР КОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|			ИНАЧЕ
	|				ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|			И ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора В (ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам),ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям)) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих)
	|		ИНАЧЕ
	|			ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|	КОНЕЦ                                                       КАК ВариантРасчетаЦеныНабора,
	|	Таблица.Ссылка                                              КАК Ссылка,
	|	Таблица.НоменклатураНабора                                  КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора                                КАК ХарактеристикаНабора,
	|	Таблица.НомерСтроки                                         КАК НомерСтроки,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК Количество,
	|	Таблица.Сумма                                               КАК Сумма,
	|	Таблица.СуммаНДС                                            КАК СуммаНДС,
	|	Таблица.СуммаСНДС                                           КАК СуммаСНДС,
	|	Таблица.СуммаСкидки                                         КАК СуммаСкидки,
	|	ВременнаяТаблицаНаборыДополнительно.СрокПоставки            КАК СрокПоставки,
	|	ВременнаяТаблицаНаборыДополнительно.СтавкаНДС               КАК СтавкаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборы
	|ИЗ
	|	ВременнаяТаблицаНаборыПодготовка КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ВременнаяТаблицаНаборыДополнительно
	|		ПО Таблица.НоменклатураНабора = ВременнаяТаблицаНаборыДополнительно.НоменклатураНабора
	|		И Таблица.ХарактеристикаНабора = ВременнаяТаблицаНаборыДополнительно.ХарактеристикаНабора
	|		И Таблица.Ссылка = ВременнаяТаблицаНаборыДополнительно.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////8
	|ВЫБРАТЬ
	|	
	|	Товары.Ссылка                                           КАК Ссылка,
	|	Товары.ВариантПредставленияНабораВПечатныхФормах        КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Товары.ВариантРасчетаЦеныНабора                         КАК ВариантРасчетаЦеныНабора,
	|	Товары.НоменклатураНабора                               КАК НоменклатураНабора,
	|	Товары.ХарактеристикаНабора                             КАК ХарактеристикаНабора,
	|	Товары.ЭтоНабор                                         КАК ЭтоНабор,
	|	Товары.ЭтоКомплектующие                                 КАК ЭтоКомплектующие,
	|
	|	Товары.НомерСтроки                                      КАК НомерСтроки,
	|	Товары.Номенклатура                                     КАК Номенклатура,
	|	Товары.ЕдиницаИзмерения                                 КАК ЕдиницаИзмерения,
	|	Товары.Количество                                       КАК Количество,
	|
	|	Товары.Цена КАК Цена,
	|
	|	Товары.Сумма                                             КАК Сумма,
	|	Товары.СтавкаНДС                                         КАК СтавкаНДС,
	|	Товары.СуммаНДС                                          КАК СуммаНДС,
	|	Товары.СуммаСНДС                                         КАК СуммаСНДС,
	|	Товары.СрокПоставки                                      КАК СрокПоставки,
	|	ЕСТЬNULL(Товары.Характеристика, """")                    КАК Характеристика,
	|	Товары.СуммаСкидки                                       КАК СуммаСкидки
	|
	|ИЗ (
	|
	|	ВЫБРАТЬ
	|		Таблица.Ссылка,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)
	|		КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)
	|		КОНЕЦ КАК ВариантРасчетаЦеныНабора,
	|		Таблица.НоменклатураНабора,
	|		Таблица.ХарактеристикаНабора,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|		КОНЕЦ КАК ЭтоКомплектующие,
	|		ЛОЖЬ КАК ЭтоНабор,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.НомерСтроки
	|		ИНАЧЕ
	|			Таблица.НомерСтроки
	|		КОНЕЦ КАК НомерСтроки,
	|		Таблица.Номенклатура,
	|		Таблица.Количество,
	|		Таблица.Цена,
	|		Таблица.Сумма,
	|		Таблица.СтавкаНДС,
	|		Таблица.СуммаНДС,
	|		Таблица.СуммаСНДС,
	|		Таблица.СрокПоставки,
	|		Таблица.Характеристика,
	|		Таблица.ЕдиницаИзмерения,
	|		Таблица.СуммаСкидки
	|	ИЗ
	|		Товары КАК Таблица
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|			ПО ВременнаяТаблицаНаборы.НоменклатураНабора = Таблица.НоменклатураНабора
	|			 И ВременнаяТаблицаНаборы.ХарактеристикаНабора = Таблица.ХарактеристикаНабора
	|			 И ВременнаяТаблицаНаборы.Ссылка = Таблица.Ссылка
	|
	|	ГДЕ
	|		Таблица.НоменклатураНабора = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ИЛИ (Таблица.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	        И ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие),
	|	                                                                              ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВременнаяТаблицаНаборы.Ссылка,
	|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах,
	|		ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора,
	|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
	|		ЛОЖЬ КАК ЭтоКомплектующие,
	|		ИСТИНА КАК ЭтоНабор,
	|		ВременнаяТаблицаНаборы.НомерСтроки,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора,
	|		ВременнаяТаблицаНаборы.Количество,
	|		ВЫБОР
	|			КОГДА &ОтображатьСкидки ТОГДА
	|				ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1) <> 0 ТОГДА
	|					(ВременнаяТаблицаНаборы.Сумма) / ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1)
	|				ИНАЧЕ
	|					0
	|				КОНЕЦ
	|			ИНАЧЕ
	|				ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1) <> 0 ТОГДА
	|					(ВременнаяТаблицаНаборы.Сумма) / ЕСТЬNULL(ВременнаяТаблицаНаборы.Количество, 1)
	|				ИНАЧЕ
	|					0
	|				КОНЕЦ
	|		КОНЕЦ КАК Цена,
	|		ВременнаяТаблицаНаборы.Сумма КАК Сумма,
	|		ВременнаяТаблицаНаборы.СтавкаНДС,
	|		ВременнаяТаблицаНаборы.СуммаНДС,
	|		ВременнаяТаблицаНаборы.СуммаСНДС,
	|		ВременнаяТаблицаНаборы.СрокПоставки,
	|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора.ЕдиницаИзмерения,
	|		ВременнаяТаблицаНаборы.СуммаСкидки
	|	ИЗ
	|		ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|	ГДЕ
	|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор),
	|	                                                                        ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие))
	|) КАК Товары
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки,
	|	ЭтоНабор УБЫВ
	|";
	
	УсловияЕдиницыИзмерения = "Товары.ЕдиницаИзмерения";
	КоммерческиеПредложенияДокументыПереопределяемый.ПолучитьТекстЗапросаПолученияЕдиницыИзмерения(УсловияЕдиницыИзмерения);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловияЕдиницыИзмерения", УсловияЕдиницыИзмерения);
	
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",        ПакетРезультатовЗапроса[0]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТоварам",      ПакетРезультатовЗапроса[8]);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ДополнитьДанныеОбъектаДляПечати.
//
Процедура ДополнитьДанныеОбъектаДляПечати(СтрокаТаблицыТовары, СтрокаТовары, ДанныеОбъекта) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНаборы") Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТаблицыТовары.Вставить("ВариантПредставленияНабораВПечатныхФормах", СтрокаТовары.ВариантПредставленияНабораВПечатныхФормах);
	СтрокаТаблицыТовары.Вставить("ВариантРасчетаЦеныНабора",                  СтрокаТовары.ВариантРасчетаЦеныНабора);
	СтрокаТаблицыТовары.Вставить("ЭтоКомплектующие",                          СтрокаТовары.ЭтоКомплектующие);
	СтрокаТаблицыТовары.Вставить("ЭтоНабор",                                  СтрокаТовары.ЭтоНабор);
	
	Если Не ЗначениеЗаполнено(СтрокаТовары.НоменклатураНабора) Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрокаТовары.ЭтоНабор
		И СтрокаТовары.ВариантПредставленияНабораВПечатныхФормах <> Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор Тогда
		
		ДанныеОбъекта.КоличествоТоваров = ДанныеОбъекта.КоличествоТоваров - 1;
		ДанныеОбъекта.СуммаВсего        = ДанныеОбъекта.СуммаВсего    - СтрокаТовары.Сумма;
		ДанныеОбъекта.СуммаВсегоНДС     = ДанныеОбъекта.СуммаВсегоНДС - СтрокаТовары.СуммаНДС;
		
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ЗаполнитьДанныеОрганизации.
//
Процедура ЗаполнитьДанныеОрганизации(Знач Организация, Сведения) Экспорт
	
	ДатаСведений = ТекущаяДатаСеанса();
	СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Организация, ДатаСведений);
	ЗаполнитьЗначенияСвойств(Сведения, СведенияОбОрганизации);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриПолученииПредставленияПартнераКонтрагента.
//
Процедура ПриПолученииПредставленияПартнераКонтрагента(ПредставлениеПартнераКонтрагента, Партнер, Контрагент, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		ПредставлениеПартнераКонтрагента = Контрагент.НаименованиеПолное;
	ИначеЕсли ЗначениеЗаполнено(Партнер) Тогда
		ПредставлениеПартнераКонтрагента = Партнер.НаименованиеПолное;
	Иначе
		СтандартнаяОбработка = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеДоступом

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриЗаполненииВидовОграниченийПравОбъектовМетаданных.
//
Процедура ПриЗаполненииВидовОграниченийПравОбъектовМетаданных(ИмяОбъекта, Описание) Экспорт
	
	Если ИмяОбъекта = "Документ.КоммерческоеПредложениеКлиенту" Тогда
		
		Описание = Описание + "
		|Документ.КоммерческоеПредложениеКлиенту.Чтение.Организации
		|Документ.КоммерческоеПредложениеКлиенту.Изменение.Организации
		|Документ.КоммерческоеПредложениеКлиенту.Чтение.ГруппыПартнеров
		|Документ.КоммерческоеПредложениеКлиенту.Изменение.ГруппыПартнеров
		|";
		
	ИначеЕсли ИмяОбъекта = "Справочник.КоммерческоеПредложениеКлиентуПрисоединенныеФайлы" Тогда
		
		Описание = Описание + "
		|Справочник.КоммерческоеПредложениеКлиентуПрисоединенныеФайлы.Чтение.Организации
		|Справочник.КоммерческоеПредложениеКлиентуПрисоединенныеФайлы.Изменение.Организации
		|Справочник.КоммерческоеПредложениеКлиентуПрисоединенныеФайлы.Чтение.ГруппыПартнеров
		|Справочник.КоммерческоеПредложениеКлиентуПрисоединенныеФайлы.Изменение.ГруппыПартнеров
		|";
		
	КонецЕсли;
	
	КоммерческиеПредложенияДокументыЛокализация.ПриЗаполненииВидовОграниченийПравОбъектовМетаданных(ИмяОбъекта, Описание)
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриЗаполненииОграниченияДоступа.
//
Процедура ПриЗаполненииОграниченияДоступа(ИмяОбъекта, Ограничение) Экспорт
	
	Если ИмяОбъекта = "Документ.КоммерческоеПредложениеКлиенту" Тогда
		
		Ограничение.Текст =
		"РазрешитьЧтениеИзменение
		|ГДЕ
		|	ЗначениеРазрешено(Организация)
		|	И ЗначениеРазрешено(Клиент)";
		
	ИначеЕсли ИмяОбъекта = "Справочник.КоммерческоеПредложениеКлиентуПрисоединенныеФайлы" Тогда
		
		Ограничение.Текст =
		"РазрешитьЧтение
		|ГДЕ
		|	ЧтениеОбъектаРазрешено(ВладелецФайла)
		|;
		|РазрешитьИзменениеЕслиРазрешеноЧтение
		|ГДЕ
		|	ИзменениеОбъектаРазрешено(ВладелецФайла)";
		
	КонецЕсли;
		
	КоммерческиеПредложенияДокументыЛокализация.ПриЗаполненииОграниченияДоступа(ИмяОбъекта, Ограничение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриСозданииНаСервере
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт 
	
	Если Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаДокумента" Тогда
		
		КоммерческоеПредложениеКлиентуПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
		
	ИначеЕсли Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаСписка" Тогда
		
		Форма.Элементы.ПодменюСоздатьНаОсновании.Картинка = БиблиотекаКартинок.ЗаполнитьПоШаблону;
		
	КонецЕсли;

	КоммерческиеПредложенияДокументыЛокализация.ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриЧтенииНаСервере.
//
Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт

	Если Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаДокумента" Тогда
		
		КоммерческоеПредложениеКлиентуПриЧтенииНаСервере(Форма, ТекущийОбъект);
		
	КонецЕсли;
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(Форма, ТекущийОбъект);

КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПослеЗаписиНаСервере.
//
Процедура ПослеЗаписиНаСервере(Форма, ТекущийОбъект) Экспорт

	Если Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаДокумента" Тогда
		
		КоммерческоеПредложениеКлиентуПослеЗаписиНаСервере(Форма, ТекущийОбъект);
		
	КонецЕсли;

	КоммерческиеПредложенияДокументыЛокализация.ПослеЗаписиНаСервере(Форма, ТекущийОбъект);	

КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ОбработкаПроверкиЗаполнения.
//
Процедура ОбработкаПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов) Экспорт
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КоммерческоеПредложениеКлиенту") Тогда
		
		КоммерческоеПредложениеКлиентуОбработкаПроверкиЗаполненияНаСервере(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
		
	КонецЕсли;

	КоммерческиеПредложенияДокументыЛокализация.ОбработкаПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ОбработкаПроведения.
//
Процедура ОбработкаПроведения(ДокументОбъект, Отказ, РежимПроведения) Экспорт

	КоммерческиеПредложенияДокументыЛокализация.ОбработкаПроведения(ДокументОбъект, Отказ, РежимПроведения);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ОбработкаУдаленияПроведения.
//
Процедура ОбработкаУдаленияПроведения(ДокументОбъект, Отказ) Экспорт

	КоммерческиеПредложенияДокументыЛокализация.ОбработкаУдаленияПроведения(ДокументОбъект, Отказ);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийДокументов

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриЗаписи.
//
Процедура ПриЗаписи(ДокументОбъект, Отказ) Экспорт
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КоммерческоеПредложениеКлиенту") Тогда
		
		ОбработкаСобытияПриЗаписиКоммерческоеПредложениеКлиенту(ДокументОбъект, Отказ);
		
	КонецЕсли;
	
	КоммерческиеПредложенияДокументыЛокализация.ПриЗаписи(ДокументОбъект, Отказ);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПередЗаписью.
//
Процедура ПередЗаписью(ДокументОбъект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	КоммерческиеПредложенияДокументыЛокализация.ПередЗаписью(ДокументОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

#КонецОбласти

#Область УсловноеОформление

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриУстановкеУсловногоОформления
//
Процедура ПриУстановкеУсловногоОформления(Форма) Экспорт
	
	Если Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаДокумента" Тогда
		
		КоммерческоеПредложениеКлиентуПриУстановкеУсловногоОформления(Форма);
		
	КонецЕсли;

	КоммерческиеПредложенияДокументыЛокализация.ПриУстановкеУсловногоОформления(Форма);	
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриОпределенииНастроекУчета
//
Процедура ПриОпределенииНастроекУчета(Настройки) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не Справочники.Организации.ИспользуетсяНесколькоОрганизаций() Тогда
		Настройки.ИспользуетсяЕдинственнаяОрганизация = Истина;
		Настройки.ЕдинственнаяОрганизация = Справочники.Организации.ОрганизацияПоУмолчанию();
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют") Тогда
		
		Настройки.ИспользуетсяЕдинственнаяВалюта = Истина;
		Настройки.ЕдинственнаяВалюта = ЗначениеНастроекПовтИсп.БазоваяВалютаПоУмолчанию();
		
	КонецЕсли;
	
	Настройки.ИспользуютсяПартнеры = Истина;
	Настройки.НезависимоеВедениеПартнеровИКонтрагентов             = ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов");
	Настройки.ИспользуютсяХарактеристикиНоменклатуры               = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	Настройки.ИспользуютсяВидыЦен                                  = Истина;
	Настройки.ИспользуютсяРучныеСкидкиВПродажах                    = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВПродажах");
	Настройки.ИспользуютсяАвтоматическиеСкидкиВПродажах            = ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическиеСкидкиВПродажах");
	Настройки.ИспользуютсяНазначаемыеАвтоматическиеСкидкиВПродажах = ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическиеСкидкиВПродажах");
	Настройки.ВыбиратьВариантВыводаСкидокПриПечатиДокументовПродажи = ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическиеСкидкиВПродажах");
	Настройки.НеВыводитьСкидкиВДокументахПродажи                    = (Константы.ОтображениеСкидокВПечатныхФормахДокументовПродажи.Получить()
	                                                                  = Перечисления.ВариантыВыводаСкидокВПечатныхФормах.НеВыводитьСкидки);
	Настройки.РеализованаФормаПросмотраСкидок                      = ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическиеСкидкиВПродажах");
	Настройки.РеализованоЗаполнениеЦенПоУсловиямПродаж             = Истина;
	Настройки.РеализованоЗаполнениеЦенПоВидамЦен                   = Истина;
	Настройки.РеализованоЗаполнениеУсловийОплаты                   = Истина;
	Настройки.РеализованПодборНоменклатуры                         = Истина;
	Настройки.РеализованПоискПоШтрихкоду                           = Истина;
	Настройки.РеализованоРазбиениеСтрок                            = Истина;
	Настройки.РеализованаЗагрузкаДанныхТСД                         = Истина;
	Настройки.РеализованоЗаполнениеДокументовИзВнешнегоФайла       = Истина;
	Настройки.ИспользуютсяСтатусыКоммерческихПредложенийКлиентам   = Истина;
	Настройки.ИспользуютсяСостоянияКоммерческихПредложенийКлиентам = Истина;
	Настройки.РегистрироватьЦеныПоставщиков                        = Истина;
	Настройки.ИмяРеквизитаВладельцаНоменклатурыКонтрагента         = "Клиент";

	СтатусыКоммерческихПредложенийКлиентамДействует = Настройки.СтатусыКоммерческихПредложенийКлиентамДействует; // Массив
	СтатусыКоммерческихПредложенийКлиентамДействует.Добавить(Перечисления.СтатусыКоммерческихПредложенийКлиентам.Действует);
	
	СтатусыКоммерческихПредложенийКлиентамЧерновик = Настройки.СтатусыКоммерческихПредложенийКлиентамЧерновик; // Массив
	СтатусыКоммерческихПредложенийКлиентамЧерновик.Добавить(Перечисления.СтатусыКоммерческихПредложенийКлиентам.Черновик);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.УстановитьУсловноеОформлениеХарактеристикНоменклатуры.
//
Процедура УстановитьУсловноеОформлениеХарактеристикНоменклатуры(Форма, ИмяПоляВводаХарактеристики, ПутьКПолюОтбора) Экспорт
	
	НоменклатураСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(Форма);
	
КонецПроцедуры 

#КонецОбласти

#Область СерверныеОбработчикиСобытийЭлементовФормы

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриСозданииНаСервере.
//
Процедура ПриИзмененииПартнера(Форма) Экспорт
	
	Если Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаДокумента" Тогда
		
		КоммерческоеПредложениеКлиентуПриИзмененииПартнера(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриСозданииНаСервере.
//
Процедура ПриИзмененииНалогообложенияНДС(Форма) Экспорт
	
	Если Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаДокумента" Тогда
		
		КоммерческоеПредложениеКлиентуПриИзмененииНалогообложенияНДС(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриИзмененииЦенаВключаетНДС.
//
Процедура ПриИзмененииЦенаВключаетНДС(Форма, Налогообложение) Экспорт
	
	Если Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаДокумента" Тогда
		
		КоммерческоеПредложениеКлиентуПриИзмененииЦенаВключаетНДС(Форма, Налогообложение);
		
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриИзмененииВалюты.
//
Процедура ПриИзмененииВалюты(Форма) Экспорт
	
	Если Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаДокумента" Тогда
		
		КоммерческоеПредложениеКлиентуПриИзмененииВалюты(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриИзмененииОрганизации.
//
Процедура ПриИзмененииОрганизации(Форма) Экспорт
	
	Если Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаДокумента" Тогда
		
		КоммерческоеПредложениеКлиентуПриИзмененииОрганизации(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриИзмененииОрганизации.
//
Процедура ПриИзмененииХозяйственнойОперации(Форма) Экспорт
	
	Если Форма.ИмяФормы = "Документ.КоммерческоеПредложениеКлиенту.Форма.ФормаДокумента" Тогда
		
		КоммерческоеПредложениеКлиентуПриИзмененииХозяйственнойОперации(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриВыводеШтриховогоКодаВПечатныеФормы
//
Процедура ПриВыводеШтриховогоКодаВПечатныеФормы(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати) Экспорт
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ДанныеПечатиШтрихКода = ДанныеПечати; // Структура
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовок, ДанныеПечатиШтрихКода.Ссылка);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриФормированииЗаголовкаПечатнойФормы.
//
Процедура ПриФормированииЗаголовкаПечатнойФормы(Макет, ОбластьМакета, ДанныеОбъекта) Экспорт
	
	ФормированиеПечатныхФорм.ВывестиЛоготипВТабличныйДокумент(Макет, ОбластьМакета, "ЗаголовокЛоготип", ДанныеОбъекта.Организация);
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриВыводеСтрокиТоварыПечатнуюФорму
//
// Параметры:
//  ТабличныйДокумент              - ТабличныйДокумент.
//  СтрокаТовары                   - СтрокаТаблицыЗначений.
//  ОбластьСтрокаТаблицыТовары     - ТабличныйДокумент.
//  ИменованнаяОбластьСтрокаТовары - Строка.
//  ДополнительныеПараметрыВывода  - Неопределено.
//  СтандартнаяОбработка           - Булево.
//
Процедура ПриВыводеСтрокиТоварыПечатнуюФорму(ТабличныйДокумент, СтрокаТовары, ОбластьСтрокаТаблицыТовары, ИменованнаяОбластьСтрокаТовары, ДополнительныеПараметрыВывода, СтандартнаяОбработка) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНаборы") Тогда 
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если ДополнительныеПараметрыВывода = Неопределено Тогда
		 ДополнительныеПараметрыВывода = Новый Структура;
	КонецЕсли;
	
	Если НЕ ДополнительныеПараметрыВывода.Свойство("НомерСтроки")  Тогда
		 ДополнительныеПараметрыВывода.Вставить("НомерСтроки", 0);
	КонецЕсли;
	
	Если НаборыСервер.ИспользоватьОбластьНабор(СтрокаТовары, Истина) Тогда
		
		Если СтрокаТовары.ВариантПредставленияНабораВПечатныхФормах = Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие Тогда
			
			Если СтрокаТовары.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих Тогда
			
				ДанныеСтроки = Новый Структура;
				ДанныеСтроки.Вставить("НомерСтроки",      "");
				ДанныеСтроки.Вставить("Номенклатура",     "");
				ДанныеСтроки.Вставить("Количество",       "");
				ДанныеСтроки.Вставить("ЕдиницаИзмерения", "");
				ДанныеСтроки.Вставить("СрокПоставки",     "");
				ДанныеСтроки.Вставить("Цена",             "");
				ДанныеСтроки.Вставить("СуммаСкидки",      "");
				ДанныеСтроки.Вставить("СуммаСНДС",        "");
			
				ОбластьСтрокаТаблицыТовары.Параметры.Заполнить(ДанныеСтроки);
				ОбластьСтрокаТаблицыТовары.Параметры.Номенклатура = СтрокаТовары.Номенклатура;
				
			Иначе
				
				ЗаполнитьЗначенияСвойств(ОбластьСтрокаТаблицыТовары.Параметры, СтрокаТовары);
				
			КонецЕсли;
			
		Иначе
			
			ДополнительныеПараметрыВывода.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки + 1;
			ОбластьСтрокаТаблицыТовары.Параметры.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки;
			
		КонецЕсли;
		
		ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1, 0);
		ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
		ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыТовары);
		
	ИначеЕсли НаборыСервер.ИспользоватьОбластьКомплектующие(СтрокаТовары, Истина) Тогда
		
		ДополнительныеПараметрыВывода.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки + 1;
		
		Если СтрокаТовары.ВариантПредставленияНабораВПечатныхФормах = Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие Тогда
			
			Если СтрокаТовары.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих Тогда
				
				ЗаполнитьЗначенияСвойств(ОбластьСтрокаТаблицыТовары.Параметры, СтрокаТовары);
				
			Иначе
				
				ДанныеСтроки = Новый Структура;
				ДанныеСтроки.Вставить("НомерСтроки",      "");
				ДанныеСтроки.Вставить("Номенклатура",     "");
				ДанныеСтроки.Вставить("Количество",       "");
				ДанныеСтроки.Вставить("ЕдиницаИзмерения", "");
				ДанныеСтроки.Вставить("СрокПоставки",     "");
				ДанныеСтроки.Вставить("Цена",             "");
				ДанныеСтроки.Вставить("СуммаСкидки",      "");
				ДанныеСтроки.Вставить("СуммаСНДС",        "");
			
				ОбластьСтрокаТаблицыТовары.Параметры.Заполнить(ДанныеСтроки);
				СтрокаТовары.Номенклатура = СтрШаблон(НСтр("ru = '%1, %2 %3'"), СтрокаТовары.Номенклатура, СтрокаТовары.Количество, СтрокаТовары.ЕдиницаИзмерения);
				
			КонецЕсли;
			
		Иначе
			
			ЗаполнитьЗначенияСвойств(ОбластьСтрокаТаблицыТовары.Параметры, СтрокаТовары);
			
		КонецЕсли;
		
		ПараметрыОбласти = ОбластьСтрокаТаблицыТовары.Параметры; // ПараметрыМакетаТабличногоДокумента
		ПараметрыОбласти.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки;
		ОбластьСтрокаТаблицыТовары.Параметры.Номенклатура = " - " + СтрокаТовары.Номенклатура;
		
		ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
		
		ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыТовары);
		
	Иначе
		
		ДополнительныеПараметрыВывода.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки + 1;
		
		ЗаполнитьЗначенияСвойств(ОбластьСтрокаТаблицыТовары.Параметры, СтрокаТовары);
		ОбластьСтрокаТаблицыТовары.Параметры.НомерСтроки = ДополнительныеПараметрыВывода.НомерСтроки;
		
		ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1, 0);
		ОбластьСтрокаТаблицыТовары.Области[ИменованнаяОбластьСтрокаТовары].ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1, 0);
		
		ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицыТовары);
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриВставкеСтрокИзБуфераОбмена
//
Процедура ПриВставкеСтрокИзБуфераОбмена(Форма, КоличествоСтрок, СтандартнаяОбработка) Экспорт
	
	НастройкиУчета                    = КоммерческиеПредложенияДокументы.НастройкиУчета();
	
	Объект = Форма.Объект; // ДокументОбъект.КоммерческоеПредложениеКлиенту
	
	СтандартнаяОбработка = Ложь;
	ДанныеБуфера = РаботаСТабличнымиЧастями.СтрокиИзБуфераОбмена();
	Если Не ЗначениеЗаполнено(ДанныеБуфера) Тогда
		Возврат;
	КонецЕсли;
	
	ИспользоватьНаборы = ПолучитьФункциональнуюОпцию("ИспользоватьНаборы");
	
	Для каждого СтрокаТовара Из ДанныеБуфера Цикл
		
		ТекущаяСтрока = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара);
		Если ДанныеБуфера.Колонки.Найти("Упаковка") <> Неопределено Тогда
			ТекущаяСтрока.ЕдиницаИзмерения = СтрокаТовара.Упаковка;
		КонецЕсли;
		Если ДанныеБуфера.Колонки.Найти("КоличествоУпаковок") <> Неопределено Тогда
			//@skip-warning
			ТекущаяСтрока.КоличествоВременное = СтрокаТовара.Количество;
			ТекущаяСтрока.Количество = СтрокаТовара.КоличествоУпаковок;
		КонецЕсли;
		
		Если ИспользоватьНаборы Тогда
			//@skip-warning
			ТекущаяСтрока.ИндексНабора = ?(ЗначениеЗаполнено(ТекущаяСтрока.НоменклатураНабора), 1, 0);
		КонецЕсли;
		Если НЕ НастройкиУчета.ИспользуютсяРучныеСкидкиВПродажах Тогда
			ТекущаяСтрока.ПроцентРучнойСкидки = 0;
			ТекущаяСтрока.СуммаРучнойСкидки = 0;
		КонецЕсли;
		
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
		ПараметрыДействия =  ОбработкаТабличнойЧастиКлиентСервер.ПараметрыЗаполненияСтавкиНДС(Объект);
		ПараметрыДействия.НалогообложениеНДС = КоммерческиеПредложенияДокументыКлиентСерверУТ.НалогообложениеНДСПоНалогообложениюКоммерческихПредложений(Объект.Налогообложение);
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры",             Новый Структура("Номенклатура", "ТипНоменклатуры"));
		СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС",                          ПараметрыДействия);
		СтруктураДействий.Вставить("ПересчитатьСуммуНДС",                         СтруктураПересчетаСуммы);
		СтруктураДействий.Вставить("ПересчитатьСуммуСНДС",                        СтруктураПересчетаСуммы);
		СтруктураДействий.Вставить("ПересчитатьСумму",                            "Количество");
		СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки",         Новый Структура("Очищать, ИмяКоличества", Ложь, "Количество"));
		СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомАвтоматическойСкидки", Новый Структура("Очищать, ИмяКоличества", Истина, "Количество"));
		
		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
		
	КонецЦикла;
	
	СтруктураХарактеристикиНоменклатуры = Новый Структура;
	СтруктураХарактеристикиНоменклатуры.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются",Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Объект.Товары, СтруктураХарактеристикиНоменклатуры);
	
	КоличествоСтрок = ДанныеБуфера.Количество();
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриКопированииСтрокВБуферОбмена.
//
Процедура ПриКопированииСтрокВБуферОбмена(Форма, ТабличнаяЧасть, ВыделенныеСтроки, ИмяТабличнойЧасти, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	РаботаСТабличнымиЧастями.СкопироватьСтрокиВБуферОбмена(ТабличнаяЧасть, ВыделенныеСтроки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область КоммерческоеПредложениеКлиенту

Процедура КоммерческоеПредложениеКлиентуПриИзмененииПартнера(Форма)
	
	Объект = Форма.Объект;
	
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Объект.Клиент, Объект.Контрагент);
	ПартнерыИКонтрагенты.ЗаполнитьКонтактноеЛицоПартнераПоУмолчанию(Объект.Клиент, Объект.КонтактноеЛицо);
	
	ОтветственныеЛицаСервер.ЗаполнитьМенеджера(Объект, , "Клиент.ОсновнойМенеджер");
	
КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриСозданииНаСервере
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения.
//  Отказ - Булево.
//  СтандартнаяОбработка - Булево.
//
Процедура КоммерческоеПредложениеКлиентуПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка)
	
	Объект = Форма.Объект; // ДокументОбъект
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, Форма);
	
	Если Объект.Ссылка.Пустая() Тогда
		КоммерческоеПредложениеКлиентуПриСозданииЧтенииНаСервере(Форма);
	КонецЕсли;
	
#Область СвязиПараметровВыбора

	// Контрагент
	НовыеСвязи = Новый Массив;
	НовыеСвязи.Добавить(Новый СвязьПараметраВыбора("Отбор.Партнер", "Объект.Клиент"));
	Форма.Элементы.Контрагент.СвязиПараметровВыбора = Новый ФиксированныйМассив(НовыеСвязи);
	
	// Контактное лицо 
	НовыеСвязи = Новый Массив;
	НовыеСвязи.Добавить(Новый СвязьПараметраВыбора("Отбор.Владелец", "Объект.Клиент"));
	Форма.Элементы.КонтактноеЛицо.СвязиПараметровВыбора = Новый ФиксированныйМассив(НовыеСвязи);
	
	// Единица измерения
	НовыеСвязи = Новый Массив;
	НовыеСвязи.Добавить(Новый СвязьПараметраВыбора("Номенклатура", "Элементы.Товары.ТекущиеДанные.Номенклатура", РежимИзмененияСвязанногоЗначения.НеИзменять));
	Форма.Элементы.ТоварыЕдиницаИзмерения.СвязиПараметровВыбора = Новый ФиксированныйМассив(НовыеСвязи);
	
	// Вид цены
	НовыеСвязи = Новый Массив;
	НовыеСвязи.Добавить(Новый СвязьПараметраВыбора("Отбор.ЦенаВключаетНДС", "Объект.ЦенаВключаетНДС"));
	Форма.Элементы.ТоварыВидЦены.СвязиПараметровВыбора = Новый ФиксированныйМассив(НовыеСвязи);
	
#КонецОбласти

#Область ПараметрыВыбора
	
	// Партнер
	НовыеПараметры = Новый Массив;
	НовыеПараметры.Добавить(Новый ПараметрВыбора("Отбор.Клиент", Истина));
	Форма.Элементы.Клиент.ПараметрыВыбора = Новый ФиксированныйМассив(НовыеПараметры);
	
	// Контрагент
	НовыеПараметры = Новый Массив;
	НовыеПараметры.Добавить(Новый ПараметрВыбора("ЗаголовокПоПартнеру", НСтр("ru = 'По клиенту'")));
	Форма.Элементы.Контрагент.ПараметрыВыбора = Новый ФиксированныйМассив(НовыеПараметры);
	
	// Номенклатура
	НовыеПараметры = Новый Массив;
	
	МассивТиповНоменклатуры = Новый Массив;
	МассивТиповНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Работа);
	МассивТиповНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Товар);
	МассивТиповНоменклатуры.Добавить(Перечисления.ТипыНоменклатуры.Услуга);
	
	НовыеПараметры.Добавить(Новый ПараметрВыбора("Отбор.ТипНоменклатуры", МассивТиповНоменклатуры));
	Форма.Элементы.ТоварыНоменклатура.ПараметрыВыбора = Новый ФиксированныйМассив(НовыеПараметры);
	
	// Вид цены
	НовыеПараметры = Новый Массив;
	НовыеПараметры.Добавить(Новый ПараметрВыбора("ВыводитьПроизвольныйВидЦен", Истина));
	НовыеПараметры.Добавить(Новый ПараметрВыбора("Отбор.ИспользоватьПриПродаже", Истина));
	НовыеПараметры.Добавить(Новый ПараметрВыбора("Отбор.Статус", Перечисления.СтатусыДействияВидовЦен.Действует));
	Форма.Элементы.ТоварыВидЦены.ПараметрыВыбора = Новый ФиксированныйМассив(НовыеПараметры);
	
#КонецОбласти

#Область УправлениеОтображениемРеквизитов
	
	Форма.Элементы.ТоварыСуммаСНДС.ТолькоПросмотр                   = Истина;
	Форма.Элементы.ТоварыЕдиницаИзмерения.АвтоОтметкаНезаполненного = Ложь;
	
#КонецОбласти

#Область ДобавлениеЭлементовФормы

	ДобавитьЭлементФормыЕдиницаИзмерения(Форма);
	
	КомандаФормы = Форма.Команды.Добавить("ПоказатьСообщения");
	КомандаФормы.Заголовок   = НСтр("ru = 'Есть сообщения'");
	КомандаФормы.Действие    = "Подключаемый_ПереопределяемаяКоманда";
	КомандаФормы.Картинка    = БиблиотекаКартинок.Предупреждение;
	
	Элемент             = Форма.Элементы.Добавить("ПоказатьСообщения", Тип("КнопкаФормы"), Форма.Элементы.ГруппаКлиентКонтрагент);
	Элемент.Вид         = ВидКнопкиФормы.Гиперссылка;
	Элемент.ИмяКоманды  = "ПоказатьСообщения";
	
#Область Сделка

	Если ПолучитьФункциональнуюОпцию("ИспользоватьСделкиСКлиентами") Тогда
		
		Элемент = Форма.Элементы.Вставить("Сделка", Тип("ПолеФормы"), Форма.Элементы.ГруппаДополнительноПраво, Форма.Элементы.Организация);
		Элемент.ПутьКДанным            = "Объект.Сделка";
		Элемент.Вид                    = ВидПоляФормы.ПолеВвода;
		Элемент.АвтоМаксимальнаяШирина = Ложь;
		Элемент.МаксимальнаяШирина     = 28;
		
		НовыеСвязи = Новый Массив;
		НовыеСвязи.Добавить(Новый СвязьПараметраВыбора("Отбор.Партнер", "Объект.Клиент"));
		Элемент.СвязиПараметровВыбора = Новый ФиксированныйМассив(НовыеСвязи);
		
	КонецЕсли;

#КонецОбласти

#Область КартаЛояльности

	Если ПолучитьФункциональнуюОпцию("ИспользоватьКартыЛояльности") Тогда
		
		Элемент = Форма.Элементы.Вставить("КартаЛояльности", Тип("ПолеФормы"), Форма.Элементы.ГруппаДополнительноПраво, Форма.Элементы.ДекорацияДополнительноПравоПустая);
		Элемент.ПутьКДанным            = "Объект.КартаЛояльности";
		Элемент.Вид                    = ВидПоляФормы.ПолеВвода;
		Элемент.АвтоМаксимальнаяШирина = Ложь;
		Элемент.МаксимальнаяШирина     = 28;
		
		НовыеСвязи = Новый Массив;
		НовыеСвязи.Добавить(Новый СвязьПараметраВыбора("Отбор.Партнер", "Объект.Клиент"));
		Элемент.СвязиПараметровВыбора = Новый ФиксированныйМассив(НовыеСвязи);
		
	КонецЕсли;

#КонецОбласти	
	
#Область Наборы

	ИспользоватьНаборы = ПолучитьФункциональнуюОпцию("ИспользоватьНаборы");

	Если ИспользоватьНаборы
		И Не Форма.ПоЗапросу Тогда
	
		Элемент = Форма.Элементы.Вставить("ТоварыИндексНабора", Тип("ПолеФормы"), Форма.Элементы.Товары, Форма.Элементы.ТоварыНоменклатура);
		
		Элемент.ПутьКДанным        = "Объект.Товары.ИндексНабора";
		Элемент.Вид                = ВидПоляФормы.ПолеКартинки;
		Элемент.КартинкаЗначений   = БиблиотекаКартинок.Наборы;
		Элемент.КартинкаШапки      = БиблиотекаКартинок.Набор;
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		Элемент = Форма.Элементы.Вставить("ТоварыГруппаНаборы", Тип("ГруппаФормы"), Форма.Элементы.Товары, Форма.Элементы.ТоварыНоменклатура);
		Элемент.Заголовок        = НСтр("ru = 'Наборы'");
		Элемент.Группировка      = ГруппировкаКолонок.ВЯчейке;
		Элемент.ОтображатьВШапке = Истина;
		Элемент.Видимость        = Ложь;
		
		Элемент = Форма.Элементы.Вставить("ТоварыНоменклатураНабора", Тип("ПолеФормы"), Форма.Элементы.ТоварыГруппаНаборы);
		Элемент.ПутьКДанным = "Объект.Товары.НоменклатураНабора";
		Элемент.ОтображатьВШапке = Ложь;
		
		Элемент = Форма.Элементы.Вставить("ТоварыХарактеристикаНабора", Тип("ПолеФормы"), Форма.Элементы.ТоварыГруппаНаборы);
		Элемент.ПутьКДанным = "Объект.Товары.ХарактеристикаНабора";
		Элемент.ОтображатьВШапке = Ложь;
		
		КомандаФормы = Форма.Команды.Добавить("СоставНабора");
		КомандаФормы.Заголовок                 = НСтр("ru = 'Состав набора'");
		КомандаФормы.Действие                  = "Подключаемый_ПереопределяемаяКоманда";
		КомандаФормы.Картинка                  = БиблиотекаКартинок.Набор;
		КомандаФормы.Отображение               = ОтображениеКнопки.Картинка;
		КомандаФормы.ИзменяетСохраняемыеДанные = Истина;
		
		Элемент             = Форма.Элементы.Вставить("СоставНабора", Тип("КнопкаФормы"), Форма.Элементы.ГруппаКоманднаяПанельТоварыСрокПоставки, Форма.Элементы.ТоварыПоискПоШтрихкоду);
		Элемент.Вид         = ВидКнопкиФормы.КнопкаКоманднойПанели;
		Элемент.Ширина      = 3;
		Элемент.ИмяКоманды  = "СоставНабора";
		
		КомандаФормы = Форма.Команды.Добавить("ПоказатьНаборы");
		КомандаФормы.Заголовок   = НСтр("ru = 'Показать наборы'");
		КомандаФормы.Действие    = "Подключаемый_ПереопределяемаяКоманда";
		КомандаФормы.Отображение = ОтображениеКнопки.Текст;
		
		Элемент                       = Форма.Элементы.Добавить("ПоказатьНаборы", Тип("КнопкаФормы"), Форма.Элементы.КоманднаяПанельТовары);
		Элемент.Вид                   = ВидКнопкиФормы.ОбычнаяКнопка;
		Элемент.ТолькоВоВсехДействиях = Истина;
		Элемент.ИмяКоманды            = "ПоказатьНаборы";
	
	КонецЕсли;
	
#КонецОбласти
	
#КонецОбласти
	
#Область Локализация
	
	// Скрытие элементов по учету НДС.
	ИспользоватьУчетНДС = ПолучитьФункциональнуюОпцию("ИспользоватьУчетНДС");
	
	Если Не ИспользоватьУчетНДС Тогда
		
		МассивЭлементов = Новый Массив;
		МассивЭлементов.Добавить("ТоварыСтавкаНДС");
		МассивЭлементов.Добавить("ТоварыСуммаНДС");
		МассивЭлементов.Добавить("ТоварыСуммаСНДС");
		МассивЭлементов.Добавить("Налогообложение");
		МассивЭлементов.Добавить("ЦенаВключаетНДС");
		МассивЭлементов.Добавить("ГруппаСтраницыНДС");
		МассивЭлементов.Добавить("СтраницаВсегоСНДС");
		
		Для каждого ЭлементКоллекции Из МассивЭлементов Цикл
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы,
				ЭлементКоллекции, "Видимость", ИспользоватьУчетНДС);
		КонецЦикла;
		
	КонецЕсли;
	
#КонецОбласти
	
	ОбновитьЗависимыеРеквизитыНоменклатуры(Форма);
	ЗаполнитьВременноеКоличествовТабличнойЧастиТовары(Форма);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяРеквизитаПартнер",             "Клиент");
	ДополнительныеПараметры.Вставить("НеВыводитьСообщенияПоСоглашению", Истина);
	
	СкидкиНаценкиЗаполнениеСервер.НастроитьКомандуПоказатьСообщения(Объект, Форма.Элементы.ПоказатьСообщения,,ДополнительныеПараметры);
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах") Тогда
		
		ЭлементСписка = Форма.Элементы.Операция.СписокВыбора.НайтиПоЗначению(Перечисления.ВидыОперацийКоммерческихПредложений.ПриемНаКомиссию);
			
		Если ЭлементСписка <> Неопределено Тогда
			Форма.Элементы.Операция.СписокВыбора.Удалить(ЭлементСписка);
		КонецЕсли;
		
	КонецЕсли;
	
	Форма.Элементы.ТоварыСтавкаНДС.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СтавкиНДС");
	
	Форма.Элементы.ПодменюСоздатьНаОсновании.Картинка = БиблиотекаКартинок.ЗаполнитьПоШаблону;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда
		Форма.Элементы.Контрагент.АвтоОтметкаНезаполненного = Ложь;
	КонецЕсли;
	
	СобытияФорм.ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуПриЧтенииНаСервере(Форма, ТекущийОбъект)
	
	КоммерческоеПредложениеКлиентуПриСозданииЧтенииНаСервере(Форма);
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуПриСозданииЧтенииНаСервере(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ТекущаяДата = ТекущаяДатаСеанса();
	
	КоммерческоеПредложениеКлиентуСоздатьДополнительныеРеквизитыФормы(Форма);
	КоммерческиеПредложенияДокументыКлиентСерверУТ.СформироватьПредставлениеСостоянияПоСтатусу(Форма, Форма.Объект.Статус, ТекущаяДата);
	
	Форма.ВалютаДокумента = Объект.Валюта;
	Форма.ИспользоватьСоглашенияСКлиентами = ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами");
	Форма.ИспользоватьГрафикиОплаты        = ПолучитьФункциональнуюОпцию("ИспользоватьГрафикиОплаты");
	
	Элементы.ЗаполнитьУсловияОплаты.Видимость = Форма.ИспользоватьСоглашенияСКлиентами 
	                                            Или Форма.ИспользоватьГрафикиОплаты;
	
	ОпределитьВидЦеныПоУмолчанию(Форма);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНаборы") Тогда
		НаборыСервер.ЗаполнитьСлужебныеРеквизиты(Форма);
	КонецЕсли;
	
	ПараметрыЗаполнения = КоммерческоеПредложениеКлиентуПараметрыЗаполненияНалогообложенияНДСПродажи(Объект);
	НалогообложениеНДС = КоммерческиеПредложенияДокументыКлиентСерверУТ.НалогообложениеНДСПоНалогообложениюКоммерческихПредложений(Объект.Налогообложение);
	УчетНДСУП.ЗаполнитьНалогообложениеНДСПродажи(НалогообложениеНДС, ПараметрыЗаполнения, Форма.УчетНДСКэшированныеЗначенияПараметров);
	
	Налогообложение = КоммерческиеПредложенияДокументыКлиентСерверУТ.НалогообложениеКоммерческихПредложенийПоНалогообложениюНДС(НалогообложениеНДС);
	Если Налогообложение <> Объект.Налогообложение Тогда
		Объект.Налогообложение = Налогообложение;
		КоммерческоеПредложениеКлиентуПриИзмененииНалогообложенияНДС(Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуПослеЗаписиНаСервере(Форма, ТекущийОбъект)

	ОбновитьЗависимыеРеквизитыНоменклатуры(Форма);
	
	ТекущаяДата = ТекущаяДатаСеанса();
	Если Форма.Объект.Товары.Количество() > 0
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма.Объект.Товары[0], "ИндексНабора") Тогда
		НаборыСервер.ЗаполнитьСлужебныеРеквизиты(Форма);
	КонецЕсли;
	КоммерческиеПредложенияДокументыКлиентСерверУТ.СформироватьПредставлениеСостоянияПоСтатусу(Форма, Форма.Объект.Статус, ТекущаяДата);

КонецПроцедуры

// См. КоммерческиеПредложенияДокументыПереопределяемый.ПриУстановкеУсловногоОформления
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, для которой определяется условное оформление.
//
Процедура КоммерческоеПредложениеКлиентуПриУстановкеУсловногоОформления(Форма)
	
	УсловноеОформление = Форма.УсловноеОформление;
	Элементы           = Форма.Элементы; // ЭлементыФормы
	
	ЦеныПредприятияЗаполнениеСервер.УстановитьУсловноеОформлениеВидовЦен(Форма);
	НаборыСервер.УстановитьУсловноеОформление(Форма, "Товары");
	
#Область Цена
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеТоварыЦена = Элементы.ТоварыЦена; // ПолеФормы
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ПолеТоварыЦена.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.ВидЦены");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
#КонецОбласти

#Область Сумма

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеТоварыСумма = Элементы.ТоварыЦена; // ПолеФормы
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ПолеТоварыСумма.Имя);

	ГруппаОтбора1 = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;

	ГруппаОтбора2 = ГруппаОтбора1.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;

	ОтборЭлемента = ГруппаОтбора2.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.ВидЦены");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;

	ГруппаОтбора3 = ГруппаОтбора2.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора3.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;

	ОтборЭлемента = ГруппаОтбора3.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИспользоватьРучныеСкидкиВПродажах");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	ОтборЭлемента = ГруппаОтбора3.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ХозяйственнаяОперация");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ВидыОперацийКоммерческихПредложений.ПриемНаКомиссию;

	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
#КонецОбласти

КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.СделкиСКлиентами") Тогда
		ЗаполнитьКоммерческоеПредложениеКлиентуНаОснованииСделкиСКлиентом(Объект, ДанныеЗаполнения);
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КоммерческоеПредложениеКлиенту") Тогда
		ЗаполнитьКоммерческоеПредложениеКлиентуНаОснованииКоммерческогоПредложенияКлиенту(Объект, ДанныеЗаполнения);
	КонецЕсли;
	
	КоммерческиеПредложенияДокументыЛокализация.КоммерческоеПредложениеКлиентуОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
	Если Не ЗначениеЗаполнено(Объект.Статус) Тогда
		Объект.Статус = Перечисления.СтатусыКоммерческихПредложенийКлиентам.Черновик;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Налогообложение = Истина;
	КонецЕсли;
	
	ПараметрыЗаполнения = ПараметрыЗаполненияНалогообложенияНДСПродажи(Объект);
	НалогобложениеНДС   = КоммерческиеПредложенияДокументыКлиентСерверУТ.НалогообложениеНДСПоНалогообложениюКоммерческихПредложений(Объект.Налогообложение);
	УчетНДСУП.ЗаполнитьНалогообложениеНДСПродажи(НалогобложениеНДС,
	                                             ПараметрыЗаполнения);
	Объект.Налогообложение = КоммерческиеПредложенияДокументыКлиентСерверУТ.НалогообложениеКоммерческихПредложенийПоНалогообложениюНДС(НалогобложениеНДС);
	
КонецПроцедуры

// Возвращает структуру параметров для заполнения налогообложения НДС продажи.
//
// Параметры:
//  Объект - ДокументОбъект.КоммерческоеПредложениеКлиенту - документ, по которому необходимо сформировать параметры.
//
// Возвращаемое значение:
//  См. УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи
//
Функция ПараметрыЗаполненияНалогообложенияНДСПродажи(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи();
	
	ПараметрыЗаполнения.Организация = Объект.Организация;
	ПараметрыЗаполнения.Дата        = Объект.Дата;
	ПараметрыЗаполнения.ЭтоЗаказ    = Истина;
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ВидыОперацийКоммерческихПредложений.ЗакупкаУПоставщика Тогда
		
		ПараметрыЗаполнения.РеализацияТоваров = Истина;
		ПараметрыЗаполнения.РеализацияРаботУслуг = Истина;
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ВидыОперацийКоммерческихПредложений.ПриемНаКомиссию Тогда
		
		ПараметрыЗаполнения.ПередачаНаКомиссию = Истина;
		
	КонецЕсли;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Процедура КоммерческоеПредложениеКлиентуПриИзмененииНалогообложенияНДС(Форма)

	Объект = Форма.Объект;
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВТЧ(Объект);
	
	СтруктураЗаполненияСтавкиНДС = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыЗаполненияСтавкиНДС(Объект);
	НалогообложениеНДС = КоммерческиеПредложенияДокументыКлиентСерверУТ.НалогообложениеНДСПоНалогообложениюКоммерческихПредложений(Объект.Налогообложение);
	СтруктураЗаполненияСтавкиНДС.Вставить("НалогообложениеНДС", НалогообложениеНДС);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС",              СтруктураЗаполненияСтавкиНДС);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС",             СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС",            СтруктураПересчетаСуммы);
	
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.Товары, СтруктураДействий, Неопределено);
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуПриИзмененииЦенаВключаетНДС(Форма, Налогообложение)

	Объект = Форма.Объект;
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВТЧ(Объект);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.Товары, СтруктураДействий, Неопределено);
	
	ОпределитьВидЦеныПоУмолчанию(Форма);
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуПриИзмененииВалюты(Форма)

	Объект = Форма.Объект;
	
	НоваяВалюта                 = Объект.Валюта;
	СтараяВалюта                = Форма.ВалютаДокумента;
	ВалютаРегламентированногоУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Объект.Организация);
	СтруктураКурсовСтаройВалюты = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(СтараяВалюта, Объект.Дата, ВалютаРегламентированногоУчета);
	СтруктураКурсовНовойВалюты  = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(НоваяВалюта, Объект.Дата, ВалютаРегламентированногоУчета);
	
	Ценообразование.ПересчитатьСуммыТабличнойЧастиВВалюту(
		Объект.Товары,
		Объект.ЦенаВключаетНДС,
		СтараяВалюта,
		НоваяВалюта,
		СтруктураКурсовСтаройВалюты,
		СтруктураКурсовНовойВалюты,
		Истина,
		Истина,
		"Количество");
		
	Форма.ВалютаДокумента = Объект.Валюта;
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуПриИзмененииОрганизации(Форма)

	КоммерческоеПредложениеКлиентуЗаполнитьНалогообложениеНДСПродажи(Форма);

	ВалютаРеглУчета = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Форма.Объект.Организация);
	Если Не ЗначениеЗаполнено(Форма.Объект.Валюта) Тогда
		Форма.Объект.Валюта = ВалютаРеглУчета;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуПриИзмененииХозяйственнойОперации(Форма)
	
	КоммерческоеПредложениеКлиентуЗаполнитьНалогообложениеНДСПродажи(Форма);
	
КонецПроцедуры

Процедура ОпределитьВидЦеныПоУмолчанию(Форма)
	
	Объект = Форма.Объект;
	
	ПараметрыВыбораВидаЦены = ЗначениеНастроекПовтИсп.ПараметрыВыбораВидаЦеныПоУмолчанию();
	
	ПараметрыВыбораВидаЦены.ЦенаВключаетНДС        = Объект.ЦенаВключаетНДС;
	ПараметрыВыбораВидаЦены.ИспользоватьПриПродаже = Истина;
	ПараметрыВыбораВидаЦены.Статус                 = Перечисления.СтатусыДействияВидовЦен.Действует;
	
	Форма.ВидЦеныПоУмолчанию = ЗначениеНастроекПовтИсп.ВидЦеныПоУмолчанию(ПараметрыВыбораВидаЦены);
	
КонецПроцедуры

Процедура ОбновитьЗависимыеРеквизитыНоменклатуры(Форма)
	
	Объект = Форма.Объект;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры",            Новый Структура("Номенклатура", "ТипНоменклатуры"));
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Объект.Товары, СтруктураДействий);
	
КонецПроцедуры

Процедура ЗаполнитьВременноеКоличествовТабличнойЧастиТовары(Форма)
	
	Объект = Форма.Объект;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
	Для Каждого ТекущаяСтрока Из Объект.Товары Цикл
		
		ТекущаяСтрокаСтруктура = ПолучитьТекущуюСтрокуСтруктурой(ТекущаяСтрока, СтруктураДействий);
		ТекущаяСтрокаСтруктура.Вставить("Упаковка", ТекущаяСтрока.ЕдиницаИзмерения);
		ТекущаяСтрокаСтруктура.Вставить("КоличествоУпаковок", ТекущаяСтрока.Количество);
		ТекущаяСтрокаСтруктура.Количество = ТекущаяСтрока.КоличествоВременное;
		
		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрокаСтруктура, СтруктураДействий, КэшированныеЗначения);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ТекущаяСтрокаСтруктура);
	
		ТекущаяСтрока.КоличествоВременное = ТекущаяСтрокаСтруктура.Количество;
		ТекущаяСтрока.Количество = ТекущаяСтрокаСтруктура.КоличествоУпаковок;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьТекущуюСтрокуСтруктурой(ТекущаяСтрока, СтруктураДействий)
	Перем СтруктураПараметровДействия;

	СтруктураПолейТЧ = Новый Структура;

	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиниц") Тогда
		СтруктураПолейТЧ.Вставить("Номенклатура");
		СтруктураПолейТЧ.Вставить("Упаковка");
		СтруктураПолейТЧ.Вставить("КоличествоУпаковок", 0);
		СтруктураПолейТЧ.Вставить("Количество", 0);
		СтруктураПолейТЧ.Вставить("КоличествоВременное", 0);
	КонецЕсли;
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиниц", СтруктураПараметровДействия)
	   И СтруктураПараметровДействия <> Неопределено 
	   И СтруктураПараметровДействия.Свойство("НужноОкруглять")
	   И ТекущаяСтрока.Свойство("НужноОкруглять") Тогда
		СтруктураПолейТЧ.Вставить("НужноОкруглять");	
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СтруктураПолейТЧ, ТекущаяСтрока);
	
	Возврат СтруктураПолейТЧ;
	
КонецФункции

Процедура КоммерческоеПредложениеКлиентуЗаполнитьНалогообложениеНДСПродажи(Форма)
	
	Объект = Форма.Объект;
	
	ПараметрыЗаполнения = КоммерческоеПредложениеКлиентуПараметрыЗаполненияНалогообложенияНДСПродажи(Объект);
	НалогообложениеНДС = КоммерческиеПредложенияДокументыКлиентСерверУТ.НалогообложениеНДСПоНалогообложениюКоммерческихПредложений(Объект.Налогообложение);
	УчетНДСУП.ЗаполнитьНалогообложениеНДСПродажи(НалогообложениеНДС, ПараметрыЗаполнения, Форма.УчетНДСКэшированныеЗначенияПараметров);
	
	Налогообложение = КоммерческиеПредложенияДокументыКлиентСерверУТ.НалогообложениеКоммерческихПредложенийПоНалогообложениюНДС(НалогообложениеНДС);
	Если Налогообложение <> Объект.Налогообложение Тогда
		Объект.Налогообложение = Налогообложение;
		КоммерческоеПредложениеКлиентуПриИзмененииНалогообложенияНДС(Форма);
	КонецЕсли;
	
	Если Налогообложение Тогда
		ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(ПараметрыЗаполнения.Организация,ПараметрыЗаполнения.Дата);
		Форма.НалогообложениеНДС = ПараметрыУчетаОрганизации.ОсновноеНалогообложениеНДСПродажи;
	Иначе
		Форма.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;
	КонецЕсли;
	
КонецПроцедуры

Функция КоммерческоеПредложениеКлиентуПараметрыЗаполненияНалогообложенияНДСПродажи(Объект)
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияНалогообложенияНДСПродажи();
	
	ПараметрыЗаполнения.Организация = Объект.Организация;
	ПараметрыЗаполнения.Дата        = Объект.Дата;
	ПараметрыЗаполнения.ЭтоЗаказ    = Истина;
	
	Если Объект.ХозяйственнаяОперация = Перечисления.ВидыОперацийКоммерческихПредложений.ЗакупкаУПоставщика Тогда
		
		ПараметрыЗаполнения.РеализацияТоваров    = Истина;
		ПараметрыЗаполнения.РеализацияРаботУслуг = Истина;
		
	ИначеЕсли Объект.ХозяйственнаяОперация = Перечисления.ВидыОперацийКоммерческихПредложений.ПриемНаКомиссию Тогда
		
		ПараметрыЗаполнения.ПередачаНаКомиссию = Истина;
		
	КонецЕсли;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Процедура КоммерческоеПредложениеКлиентуСоздатьДополнительныеРеквизитыФормы(Форма)
	
	Если Не Форма.ДополнительныеРеквизитыСозданы Тогда
		
		ИспользоватьНаборы = ПолучитьФункциональнуюОпцию("ИспользоватьНаборы");
		
		ДобавляемыеРеквизиты = Новый Массив;
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ТипНоменклатуры",
		                                                  Новый ОписаниеТипов("ПеречислениеСсылка.ТипыНоменклатуры"),
		                                                  "Объект.Товары"));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ВидЦеныПоУмолчанию",
		                                                  Новый ОписаниеТипов("СправочникСсылка.ВидыЦен")));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ВалютаДокумента",
		                                                  Новый ОписаниеТипов("СправочникСсылка.Валюты")));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("УчетНДСКэшированныеЗначенияПараметров",
		                                                  Новый ОписаниеТипов()));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПоддерживаемыеТипыПодключаемогоОборудования",
		                                                  Новый ОписаниеТипов("Строка")));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИспользоватьПодключаемоеОборудование",
		                                                  Новый ОписаниеТипов("Булево")));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("АдресПримененныхСкидокВоВременномХранилище",
		                                                  Новый ОписаниеТипов("Строка")));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("УправляемыеСкидки",
		                                                  Новый ОписаниеТипов("СписокЗначений")));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИспользоватьСоглашенияСКлиентами",
		                                                  Новый ОписаниеТипов("Булево")));
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИспользоватьГрафикиОплаты",
		                                                  Новый ОписаниеТипов("Булево")));
		
		Если ИспользоватьНаборы Тогда
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ИндексНабора",
			                                                  ОбщегоНазначения.ОписаниеТипаЧисло(10),
			                                                  "Объект.Товары"));
		КонецЕсли;
		
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("КоличествоВременное",
		                                                  Новый ОписаниеТипов("Число"),
		                                                  "Объект.Товары"));

		Форма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		Форма.ДополнительныеРеквизитыСозданы = Истина;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуОбработкаРезультатаПодбораНоменклатуры(Форма, ВыбранноеЗначение, ДополнительныеПараметры, РезультатОбработки)
	
	ТипОперации = "ПодборНоменклатуры";
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		Если ВыбранноеЗначение.Свойство("РедактированиеНабора") Тогда
		
			ТипОперации = "РедактированиеНабора";
			
		ИначеЕсли ВыбранноеЗначение.Свойство("РедактироватьНабор") Тогда 
			
			ТипОперации = "РедактироватьНабор";
			
		КонецЕсли;
			
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Строка")
		И ВыбранноеЗначение = "УдалитьВесьНабор" Тогда
		
		ТипОперации = "УдалениеНабора";
		
	КонецЕсли;
	
	Если ТипОперации = "ПодборНоменклатуры" Тогда
		
		Объект = Форма.Объект; // ДокументОбъект.КоммерческоеПредложениеКлиенту
		
		ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
		
		Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
			
			ТекущаяСтрока = Объект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(
				ТекущаяСтрока,
				СтрокаТовара,
				" НоменклатураНабора, ХарактеристикаНабора, Номенклатура, Характеристика, ВидЦены, Цена, ПроцентРучнойСкидки");
				
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТекущаяСтрока, "ИндексНабора") Тогда
				//@skip-warning
				ТекущаяСтрока.ИндексНабора = ?(ЗначениеЗаполнено(ТекущаяСтрока.НоменклатураНабора), 1, 0);
			КонецЕсли;
				
			ТекущаяСтрока.ЕдиницаИзмерения    = СтрокаТовара.Упаковка;
			//@skip-warning
			ТекущаяСтрока.КоличествоВременное = СтрокаТовара.Количество;
			ТекущаяСтрока.Количество          = СтрокаТовара.КоличествоУпаковок;
			
			СтруктураЗаполнитьСтавкуНДС = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыЗаполненияСтавкиНДС(Объект);
			СтруктураЗаполнитьСтавкуНДС.НалогообложениеНДС = КоммерческиеПредложенияДокументыКлиентСерверУТ.НалогообложениеНДСПоНалогообложениюКоммерческихПредложений(Объект.Налогообложение);
			СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
			
			СтруктураДействий = Новый Структура;
			СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры",             Новый Структура("Номенклатура", "ТипНоменклатуры"));
			СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС",                          СтруктураЗаполнитьСтавкуНДС);
			СтруктураДействий.Вставить("ПересчитатьСуммуНДС",                         СтруктураПересчетаСуммы);
			СтруктураДействий.Вставить("ПересчитатьСуммуСНДС",                        СтруктураПересчетаСуммы);
			СтруктураДействий.Вставить("ПересчитатьСумму",                            "Количество");
			СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки",         Новый Структура("Очищать, ИмяКоличества", Ложь, "Количество"));
			СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомАвтоматическойСкидки", Новый Структура("Очищать, ИмяКоличества", Истина, "Количество"));
			
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
			
		КонецЦикла;
		
		СтруктураХарактеристикиНоменклатуры = Новый Структура;
		СтруктураХарактеристикиНоменклатуры.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются",Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
		
		НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Объект.Товары, СтруктураХарактеристикиНоменклатуры);
		
	ИначеЕсли ТипОперации = "УдалениеНабора" Тогда
		
		НаборыСервер.ПриУдаленииКомплектующих(Форма, "Товары", ДополнительныеПараметры);
		
	ИначеЕсли ТипОперации = "РедактированиеНабора" Тогда
		
		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
		
		СтруктураДействийСДобавленнымиСтроками = Новый Структура;
		СтруктураДействийСДобавленнымиСтроками.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
	
		ПараметрыДанных = Новый Структура;
		ПараметрыДанных.Вставить("Данные", ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресВоВременномХранилище));
		ПараметрыДанных.Вставить("СтруктураДействийСИзмененнымиСтроками", Новый Структура);
		ПараметрыДанных.Вставить("СтруктураДействийСДобавленнымиСтроками", СтруктураДействийСДобавленнымиСтроками);
		ПараметрыДанных.Вставить("КолонкиНабора", КолонкиНабора(Форма));
		
		СоответствиеИменКолонок = СоответствиеИменКолонокДляНабора();
		
		ПараметрыДанных.Вставить("СоответствиеИменКолонок", СоответствиеИменКолонок);
		
		НаборыСервер.ПриОкончанииРедактированияНабора(Форма, "Товары", ПараметрыДанных);
		
	ИначеЕсли ТипОперации = "РедактироватьНабор" Тогда
		
		РезультатОбработки = ПараметрыОткрытияСоставаНабора(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуЗагрузитьПолученныеИзВнешнегоФайлаДанные(Форма, ВыбранноеЗначение)
	
	Объект = Форма.Объект; // ДокументОбъект.КоммерческоеПредложениеКлиенту
	
	СтруктураДействий = Новый Структура;
	
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС",                         СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС",                        СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму",                            "Количество");
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки",         Новый Структура("Очищать, ИмяКоличества", Ложь, "Количество"));
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомАвтоматическойСкидки", Новый Структура("Очищать, ИмяКоличества", Истина, "Количество"));
	
	ТоварыИзХранилища = ПолучитьИзВременногоХранилища(ВыбранноеЗначение);
	
	Для Каждого СтрокаТоваров Из ТоварыИзХранилища Цикл
		
		СтрокаТЧТовары = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЧТовары, СтрокаТоваров);
		СтрокаТЧТовары.ЕдиницаИзмерения     = СтрокаТоваров.Упаковка;
		//@skip-warning
		СтрокаТЧТовары.КоличествоВременное = СтрокаТоваров.Количество;
		СтрокаТЧТовары.Количество          = СтрокаТоваров.КоличествоУпаковок;
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТЧТовары, СтруктураДействий, КэшированныеЗначения);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуОбработатьВводШтрихкода(Форма, ДанныеШтрихкода, РезультатОбработки)
	
	Объект = Форма.Объект;
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	СтруктураЗаполнитьСтавкуНДС = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыЗаполненияСтавкиНДС(Объект);
	СтруктураЗаполнитьСтавкуНДС.НалогообложениеНДС = КоммерческиеПредложенияДокументыКлиентСерверУТ.НалогообложениеНДСПоНалогообложениюКоммерческихПредложений(Объект.Налогообложение);
	
	СтруктураДействийСДобавленнымиСтроками = Новый Структура;
	СтруктураДействийСДобавленнымиСтроками.Вставить("ЗаполнитьПризнакТипНоменклатуры",            Новый Структура("Номенклатура", "ТипНоменклатуры"));
	СтруктураДействийСДобавленнымиСтроками.Вставить("ЗаполнитьСтавкуНДС",                         СтруктураЗаполнитьСтавкуНДС);
	СтруктураДействийСДобавленнымиСтроками.Вставить("ЗаполнитьЦенуПродажи",                       ОбработкаТабличнойЧастиКлиентСервер.ПараметрыЗаполненияЦеныВСтрокеТЧ(Объект));
	СтруктураДействийСДобавленнымиСтроками.Вставить("ПересчитатьСуммуНДС",                        СтруктураПересчетаСуммы);
	СтруктураДействийСДобавленнымиСтроками.Вставить("ПересчитатьСуммуСНДС",                       СтруктураПересчетаСуммы);
	СтруктураДействийСДобавленнымиСтроками.Вставить("ПересчитатьСумму",                           "Количество");
	СтруктураДействийСДобавленнымиСтроками.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки",        Новый Структура("Очищать, ИмяКоличества", Ложь, "Количество"));
	СтруктураДействийСДобавленнымиСтроками.Вставить("ПересчитатьСуммуСУчетомАвтоматическойСкидки",Новый Структура("Очищать, ИмяКоличества", Истина, "Количество"));
	
	СтруктураДействийСИзмененнымиСтроками = Новый Структура;
	СтруктураДействийСИзмененнымиСтроками.Вставить("ПересчитатьСуммуНДС",                        СтруктураПересчетаСуммы);
	СтруктураДействийСИзмененнымиСтроками.Вставить("ПересчитатьСуммуСНДС",                       СтруктураПересчетаСуммы);
	СтруктураДействийСИзмененнымиСтроками.Вставить("ПересчитатьСумму",                           "Количество");
	СтруктураДействийСИзмененнымиСтроками.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки",        Новый Структура("Очищать, ИмяКоличества", Ложь, "Количество"));
	СтруктураДействийСИзмененнымиСтроками.Вставить("ПересчитатьСуммуСУчетомАвтоматическойСкидки",Новый Структура("Очищать, ИмяКоличества", Истина, "Количество"));
	
	СтруктураДействий =  ШтрихкодированиеНоменклатурыКлиентСервер.ПараметрыОбработкиШтрихкодов();

	СтруктураДействий.Штрихкоды                              = ДанныеШтрихкода;
	СтруктураДействий.СтруктураДействийСДобавленнымиСтроками = СтруктураДействийСДобавленнымиСтроками;
	СтруктураДействий.СтруктураДействийСИзмененнымиСтроками  = СтруктураДействийСИзмененнымиСтроками;
	СтруктураДействий.ПараметрыУказанияСерий                 = Неопределено;
	СтруктураДействий.ИзменятьКоличество                     = Истина;
	СтруктураДействий.ИмяКолонкиУпаковка                     = "ЕдиницаИзмерения";
	СтруктураДействий.ИмяКолонкиКоличество                   = "Количество";

	Если Объект.ХозяйственнаяОперация = Перечисления.ВидыОперацийКоммерческихПредложений.ЗакупкаУПоставщика Тогда
		СтруктураДействий.ТолькоТоварыИРабота = Истина;
	Иначе
		СтруктураДействий.ТолькоТовары = Истина;
	КонецЕсли;
	
	КэшированныеЗначения = Неопределено;
	ШтрихкодированиеНоменклатурыСервер.ОбработатьШтрихкоды(Форма,Объект, СтруктураДействий, КэшированныеЗначения);
	РезультатОбработки = СтруктураДействий;
	РезультатОбработки.Вставить("КэшированныеЗначения", КэшированныеЗначения);
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуЗаполнитьЦеныПоВидуЦен(Форма, ВидЦены, ДополнительныеПараметры)
	
	Объект = Форма.Объект;
	ВыделенныеСтроки = ДополнительныеПараметры.ВыделенныеСтроки;
	
	МассивСтрок = Новый Массив;
	Для Каждого Строка Из ВыделенныеСтроки Цикл
		МассивСтрок.Добавить(Объект.Товары.НайтиПоИдентификатору(Строка));
	КонецЦикла;
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСумму",                    "Количество");
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС",                 СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС",                СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуРучнойСкидки",        "Количество");
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать, ИмяКоличества", Ложь, "Количество"));
	СтруктураДействий.Вставить("ОчиститьАвтоматическуюСкидку");
	
	ПараметрыЗаполнения = Новый Структура();
	ПараметрыЗаполнения.Вставить("Дата",               Объект.Дата);
	ПараметрыЗаполнения.Вставить("Валюта",             Объект.Валюта);
	ПараметрыЗаполнения.Вставить("ВидЦены",            ВидЦены);
	ПараметрыЗаполнения.Вставить("Организация", Объект.Организация);
	ПараметрыЗаполнения.Вставить("РассчитыватьНаборы", Ложь);
	ПараметрыЗаполнения.Вставить("ПоляЗаполнения",     "Цена, ВидЦены");
	ПараметрыЗаполнения.Вставить("ИмяКолонкиУпаковка", "ЕдиницаИзмерения");
	
	ЦеныРассчитаны = ЦеныПредприятияЗаполнениеСервер.ЗаполнитьЦены(
		Объект.Товары,
		МассивСтрок, // Массив строк или структура отбора
		ПараметрыЗаполнения,
		СтруктураДействий);
		
	Если ЦеныРассчитаны Тогда
		Объект.СкидкиРассчитаны = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуЗаполнитьЦеныПоУсловиюПродаж(Форма, УсловиеПродаж, ДополнительныеПараметры)

	Объект = Форма.Объект;
	ВыделенныеСтроки = ДополнительныеПараметры.ВыделенныеСтроки;
	
	МассивСтрок = Новый Массив;
	Для Каждого Строка Из ВыделенныеСтроки Цикл
		МассивСтрок.Добавить(Объект.Товары.НайтиПоИдентификатору(Строка));
	КонецЦикла;
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПараметрыПересчетаСуммыНДСВСтрокеТЧ(Объект);
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСумму",                    "Количество");
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС",                 СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС",                СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуРучнойСкидки",        "Количество");
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать, ИмяКоличества", Ложь, "Количество"));
	СтруктураДействий.Вставить("ОчиститьАвтоматическуюСкидку");
	
	НалогообложениеНДС = КоммерческиеПредложенияДокументыКлиентСерверУТ.НалогообложениеКоммерческихПредложенийПоНалогообложениюНДС(Объект.Налогообложение);
	
	ПараметрыЗаполнения = Новый Структура();
	ПараметрыЗаполнения.Вставить("Дата",               Объект.Дата);
	ПараметрыЗаполнения.Вставить("Валюта",             Объект.Валюта);
	ПараметрыЗаполнения.Вставить("Соглашение",         УсловиеПродаж);
	ПараметрыЗаполнения.Вставить("Организация",        Объект.Организация);
	ПараметрыЗаполнения.Вставить("РассчитыватьНаборы", Ложь);
	ПараметрыЗаполнения.Вставить("НалогообложениеНДС", НалогообложениеНДС);
	ПараметрыЗаполнения.Вставить("ИмяКолонкиУпаковка", "ЕдиницаИзмерения");
	ПараметрыЗаполнения.Вставить("ПоляЗаполнения",     "Цена, ВидЦены, СрокПоставки");
	
	ЦеныРассчитаны = ЦеныПредприятияЗаполнениеСервер.ЗаполнитьЦены(
		Объект.Товары,
		МассивСтрок, 
		ПараметрыЗаполнения,
		СтруктураДействий);
	
	Если ЦеныРассчитаны Тогда
		Объект.СкидкиРассчитаны = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуПриВыполненииПереопределяемойКоманды(Форма, ИмяКоманды, РезультатОбработки)
	
	Если ИмяКоманды = "ПоказатьСообщения" Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ИмяРеквизитаПартнер", "Клиент");
		РезультатОбработки = СкидкиНаценкиЗаполнениеСервер.СтруктураСообщений(Форма.Объект, ДополнительныеПараметры);
		
	ИначеЕсли ИмяКоманды = "СоставНабора" Тогда
		
		РезультатОбработки = ПараметрыОткрытияСоставаНабора(Форма);
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает параметры открытия состава набора.
// 
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения.
// Возвращаемое значение:
// 	Структура, Неопределено - Описание:
// * НеПодбиратьМногооборотнуюТару - Булево.
// * СкрыватьКомандуОстаткиНаСкладах - Булево.
// * НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС.
// * АдресВоВременномХранилище - Строка.
//
Функция ПараметрыОткрытияСоставаНабора(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Товары = Элементы.Товары; // ТаблицаФормы
	ВыбраннаяСтрока = Товары.ТекущаяСтрока;
	
	Если ВыбраннаяСтрока = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекущаяСтрока = Объект.Товары.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.НоменклатураНабора) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыКомплекта = Новый Структура;
	ПараметрыКомплекта.Вставить("НоменклатураНабора", ТекущаяСтрока.НоменклатураНабора);
	ПараметрыКомплекта.Вставить("ХарактеристикаНабора", ТекущаяСтрока.ХарактеристикаНабора);
	ПараметрыКомплекта.Вставить("КолонкиНабора", КолонкиНабора(Форма));
	ПараметрыКомплекта.Вставить("СоответствиеИменКолонокДляНабора", СоответствиеИменКолонокДляНабора());
	
	АдресНабораВоВременномХранилище = НаборыСервер.АдресНабораВоВременномХранилище(Форма, ПараметрыКомплекта);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("АдресВоВременномХранилище", АдресНабораВоВременномХранилище);
	ПараметрыОткрытия.Вставить("НоменклатураНабора", ТекущаяСтрока.НоменклатураНабора);
	ПараметрыОткрытия.Вставить("ХарактеристикаНабора", ТекущаяСтрока.ХарактеристикаНабора);
	ПараметрыОткрытия.Вставить("ЦенаВключаетНДС", Объект.ЦенаВключаетНДС);
	ПараметрыОткрытия.Вставить("НалогообложениеНДС", КоммерческиеПредложенияДокументыКлиентСерверУТ.НалогообложениеНДСПоНалогообложениюКоммерческихПредложений(Объект.Налогообложение));
	ПараметрыОткрытия.Вставить("Валюта", Объект.Валюта);
	ПараметрыОткрытия.Вставить("Дата", Объект.Дата);
	ПараметрыОткрытия.Вставить("Ссылка", Объект.Ссылка);
	ПараметрыОткрытия.Вставить("СкрыватьКомандуОстаткиНаСкладах", Истина);
	ПараметрыОткрытия.Вставить("НеПодбиратьМногооборотнуюТару", Истина);
	
	Возврат ПараметрыОткрытия;
	
КонецФункции

Функция КолонкиНабора(Форма)
	
	Колонки = Новый Массив;
	Колонки.Добавить("Номенклатура");
	Колонки.Добавить("Характеристика");
	
	Колонки.Добавить("Цена");
	Колонки.Добавить("ВидЦены");
	Колонки.Добавить("Количество");
	Колонки.Добавить("КоличествоУпаковок");
	Колонки.Добавить("Упаковка");
	
	Если Форма.Объект.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ВидыОперацийКоммерческихПредложений.ЗакупкаУПоставщика") Тогда
		Если Форма.НастройкиУчета.ИспользуютсяРучныеСкидкиВПродажах Тогда
			Колонки.Добавить("ПроцентРучнойСкидки");
			Колонки.Добавить("СуммаРучнойСкидки");
		КонецЕсли;
		Если Форма.НастройкиУчета.ИспользуютсяАвтоматическиеСкидкиВПродажах Тогда
			Колонки.Добавить("ПроцентАвтоматическойСкидки");
			Колонки.Добавить("СуммаАвтоматическойСкидки");
		КонецЕсли;
	КонецЕсли;
	
	Колонки.Добавить("СтавкаНДС");
	Колонки.Добавить("СуммаНДС");
	Колонки.Добавить("СуммаСНДС");
	Колонки.Добавить("Сумма");
	
	Возврат Колонки;
	
КонецФункции

Функция СоответствиеИменКолонокДляНабора()
	
	ИменаКолонок = Новый Соответствие;
	ИменаКолонок.Вставить("Упаковка", "ЕдиницаИзмерения");
	ИменаКолонок.Вставить("КоличествоУпаковок", "Количество");
	
	Возврат ИменаКолонок;
	
КонецФункции

Процедура КоммерческоеПредложениеКлиентуПриДобавленииКомандОтчетов(КомандыОтчетов, Параметры)
	
	Отчеты.ПримененныеСкидкиВДокументе.ДобавитьКомандуОтчета(КомандыОтчетов);
	
	Если ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25() Тогда
		Отчеты.ОценкаРентабельностиПродаж2_5.ДобавитьКомандуОтчета(КомандыОтчетов);
	Иначе
		Отчеты.ОценкаРентабельностиПродаж.ДобавитьКомандуОтчета(КомандыОтчетов);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуРассчитатьСкидки(Форма, РезультатОбработки)
	
	ПараметрыРасчета = СкидкиНаценкиЗаполнениеСервер.НовыйПараметрыРассчитать();
	ПараметрыРасчета.ПрименятьКОбъекту					 = Истина;
	ПараметрыРасчета.ТолькоПредварительныйРасчет		 = Ложь;
	ПараметрыРасчета.ВосстанавливатьУправляемыеСкидки	 = Истина;
	ПараметрыРасчета.УправляемыеСкидки					 = Форма.УправляемыеСкидки;
	ПараметрыРасчета.ИмяКолонкиУпаковка					 = "ЕдиницаИзмерения";
	ПараметрыРасчета.ИмяКолонкиКоличествоУпаковок		 = "Количество";
	
	РезультатОбработки = РезультатРасчетаСкидок(Форма, ПараметрыРасчета);
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуПодготовитьОткрытиеИнформацииОСкидкахНаСервере(Форма, РезультатОбработки)
	
	Объект = Форма.Объект;
	
	Если НЕ Объект.СкидкиРассчитаны Тогда
		
		ПараметрыРасчета = СкидкиНаценкиЗаполнениеСервер.НовыйПараметрыРассчитать();
		ПараметрыРасчета.ПрименятьКОбъекту					 = Истина;
		ПараметрыРасчета.ТолькоПредварительныйРасчет		 = Ложь;
		ПараметрыРасчета.ВосстанавливатьУправляемыеСкидки	 = Истина;
		ПараметрыРасчета.УправляемыеСкидки					 = Форма.УправляемыеСкидки;
		ПараметрыРасчета.ИмяКолонкиУпаковка					 = "ЕдиницаИзмерения";
		ПараметрыРасчета.ИмяКолонкиКоличествоУпаковок		 = "Количество";
		
		РезультатОбработки = РезультатРасчетаСкидок(Форма, ПараметрыРасчета);
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Форма.АдресПримененныхСкидокВоВременномХранилище) Тогда
		РассчитатьСкидкиБезПримененияКОбъекту(Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуПриОтменеРучныхСкидокНаСервере(Форма, РезультатОбработки)
	
	Объект = Форма.Объект;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяКолонкиКоличество", "Количество");
	СкидкиНаценкиЗаполнениеСервер.ОтменитьРучныеСкидки(Объект, "Товары", Истина, Истина, Ложь, Ложь, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуПриНазначенииРучнойСкидкиНаСервере(Форма, РезультатОбработки)
	
	СтруктураПараметров = СкидкиНаценкиЗаполнениеСервер.НовыйПараметрыАдресДанныхДляРасчетаРучныхСкидок();
	СтруктураПараметров.ТолькоДляВыделенныхСтрок = Истина;
	СтруктураПараметров.ИмяТаблицы = "Товары";
	РезультатОбработки = СкидкиНаценкиЗаполнениеСервер.АдресДанныхДляРасчетаРучныхСкидокВоВременномХранилище(
		Форма, Форма.УникальныйИдентификатор, СтруктураПараметров);
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуПослеНазначенияРучнойСкидкиНаСервере(Форма, ВыделенныеСтроки, РезультатОбработки, ДополнительныеПараметры)
	
	Объект = Форма.Объект;
	
	ПараметрыСкидки = СкидкиНаценкиЗаполнениеСервер.НовыйПараметрыНазначитьРучнуюСкидку();
	ПараметрыСкидки.ИспользуютсяАвтоматическиеСкидки = Истина;
	ПараметрыСкидки.РассчитыватьСуммуСНДС			 = Истина;
	ПараметрыСкидки.ВыделенныеСтроки				 = ВыделенныеСтроки;
	ПараметрыСкидки.АдресВоВременномХранилище		 = ДополнительныеПараметры.АдресВоВременномХранилище;
	ПараметрыСкидки.ИмяКолонкиКоличество			 = "Количество";
	
	СкидкиНаценкиЗаполнениеСервер.НазначитьРучнуюСкидку(Объект, "Товары", РезультатОбработки, ПараметрыСкидки);
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуПослеНазначенияАвтоматическойСкидкиНаСервере(Форма, Результат, ДополнительныеПараметры)
	
	ПараметрыРасчета = СкидкиНаценкиЗаполнениеСервер.НовыйПараметрыРассчитать();
	ПараметрыРасчета.ПрименятьКОбъекту					 = Истина;
	ПараметрыРасчета.ТолькоПредварительныйРасчет		 = Ложь;
	ПараметрыРасчета.ВосстанавливатьУправляемыеСкидки	 = Ложь;
	ПараметрыРасчета.УправляемыеСкидки					 = Форма.УправляемыеСкидки;
	ПараметрыРасчета.ИмяКолонкиУпаковка					 = "ЕдиницаИзмерения";
	ПараметрыРасчета.ИмяКолонкиКоличествоУпаковок		 = "Количество";
	
	Результат = РезультатРасчетаСкидок(Форма, ПараметрыРасчета);
	
КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуПриНазначенииАвтоматическихСкидокНаСервере(Форма, Результат)
	
	Объект = Форма.Объект;
	
	ПараметрыРасчета = СкидкиНаценкиЗаполнениеСервер.НовыйПараметрыРассчитать();
	ПараметрыРасчета.ПрименятьКОбъекту					 = Ложь;
	ПараметрыРасчета.ТолькоПредварительныйРасчет		 = Истина;
	ПараметрыРасчета.ВосстанавливатьУправляемыеСкидки	 = Истина;
	ПараметрыРасчета.УправляемыеСкидки					 = Форма.УправляемыеСкидки;
	ПараметрыРасчета.ИмяКолонкиУпаковка					 = "ЕдиницаИзмерения";
	ПараметрыРасчета.ИмяКолонкиКоличествоУпаковок		 = "Количество";
	РассчитанныеСкидки = СкидкиНаценкиЗаполнениеСервер.Рассчитать(Объект, ПараметрыРасчета);
	Результат = ПоместитьВоВременноеХранилище(РассчитанныеСкидки, Форма.УникальныйИдентификатор);
	
КонецПроцедуры

// Параметры:
// 	СтруктураДанныхОбъектаПечати - Структура:
//   * ОсновнойПолучатель - Строка. 
//   * МассивРеквизитовПолучателей - Массив.
//
Процедура КоммерческоеПредложениеКлиентуЗаполнитьДанныеСтруктурыПолучателяПечатнойФормы(СтруктураДанныхОбъектаПечати)
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Клиент";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Клиент");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	КонецЕсли;
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("КонтактноеЛицо");

КонецПроцедуры

Процедура КоммерческоеПредложениеКлиентуОбработкаПроверкиЗаполненияНаСервере(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов)
	
	НепроверяемыеРеквизиты = МассивНепроверяемыхРеквизитов; // Массив Из Строка
	НепроверяемыеРеквизиты.Добавить("Товары.ЕдиницаИзмерения");
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, НепроверяемыеРеквизиты, Отказ);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда
		НепроверяемыеРеквизиты.Добавить("Контрагент");
	КонецЕсли;
	
КонецПроцедуры

Функция РезультатРасчетаСкидок(Форма, ПараметрыРасчета, ВзятьИзВременногоХранилища = Ложь)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если ВзятьИзВременногоХранилища Тогда
		ПримененныеСкидки = ПолучитьИзВременногоХранилища(Форма.АдресПримененныхСкидокВоВременномХранилище);
		СкидкиНаценкиЗаполнениеСервер.ПрименитьРезультатРасчета(Объект, ПримененныеСкидки);
	Иначе
		ПримененныеСкидки = СкидкиНаценкиЗаполнениеСервер.Рассчитать(Объект, ПараметрыРасчета);
		Форма.АдресПримененныхСкидокВоВременномХранилище = ПоместитьВоВременноеХранилище(ПримененныеСкидки, Форма.УникальныйИдентификатор);
	КонецЕсли;
	
	Объект.СкидкиРассчитаны = Истина;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяРеквизитаПартнер", "Клиент");
	ДополнительныеПараметры.Вставить("НеВыводитьСообщенияПоСоглашению", Истина);
	
	РезультатОбработки = СкидкиНаценкиЗаполнениеСервер.СтруктураСообщений(Объект, ДополнительныеПараметры);
	СкидкиНаценкиЗаполнениеСервер.НастроитьКомандуПоказатьСообщения(Объект, Элементы.ПоказатьСообщения,,ДополнительныеПараметры);
	
	Возврат РезультатОбработки;
	
КонецФункции

Процедура РассчитатьСкидкиБезПримененияКОбъекту(Форма)
	
	Объект = Форма.Объект;
	
	ПараметрыРасчета = СкидкиНаценкиЗаполнениеСервер.НовыйПараметрыРассчитать();
	ПараметрыРасчета.ПрименятьКОбъекту					 = Ложь;
	ПараметрыРасчета.ТолькоПредварительныйРасчет		 = Ложь;
	ПараметрыРасчета.ВосстанавливатьУправляемыеСкидки	 = Истина;
	ПараметрыРасчета.УправляемыеСкидки					 = Форма.УправляемыеСкидки;
	ПараметрыРасчета.ИмяКолонкиУпаковка					 = "ЕдиницаИзмерения";
	ПараметрыРасчета.ИмяКолонкиКоличествоУпаковок		 = "Количество";
	
	ПримененныеСкидки = СкидкиНаценкиЗаполнениеСервер.Рассчитать(Объект, ПараметрыРасчета);
	
	ПоместитьВоВременноеХранилище(ПримененныеСкидки, Форма.УникальныйИдентификатор);
	
КонецПроцедуры

Процедура ОбработкаСобытияПриЗаписиКоммерческоеПредложениеКлиенту(ДокументОбъект, Отказ)
	
	Состояние = СостояниеКоммерческогоПредложения(ДокументОбъект);
	
	РегистрыСведений.СостоянияКоммерческихПредложенийКлиентам.ЗаписатьСостояние(ДокументОбъект.Ссылка, Состояние);
	
КонецПроцедуры

Процедура ЗаполнитьКоммерческоеПредложениеКлиентуНаОснованииСделкиСКлиентом(Объект, ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СделкиСКлиентами.Ссылка                                КАК Сделка,
	|	СделкиСКлиентами.Партнер                               КАК Клиент,
	|	СделкиСКлиентами.СоглашениеСКлиентом                   КАК Соглашение,
	|	СделкиСКлиентамиПартнерыИКонтактныеЛица.КонтактноеЛицо КАК КонтактноеЛицо
	|ИЗ
	|	Справочник.СделкиСКлиентами КАК СделкиСКлиентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СделкиСКлиентами.ПартнерыИКонтактныеЛица КАК СделкиСКлиентамиПартнерыИКонтактныеЛица
	|		ПО СделкиСКлиентамиПартнерыИКонтактныеЛица.Ссылка = СделкиСКлиентами.Ссылка
	|			И (СделкиСКлиентамиПартнерыИКонтактныеЛица.Партнер = СделкиСКлиентами.Партнер
	|				И СделкиСКлиентамиПартнерыИКонтактныеЛица.КонтактноеЛицо <> ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаПартнеров.ПустаяСсылка))
	|ГДЕ
	|	СделкиСКлиентами.Ссылка = &Основание";
	
	Запрос.УстановитьПараметр("Основание", ДанныеЗаполнения);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОснованииСделкиПоПродаже(Выборка.Клиент);
	ЗаполнитьЗначенияСвойств(Объект, Выборка);
	
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Объект.Клиент,    Объект.Контрагент);
	ПартнерыИКонтрагенты.ЗаполнитьКонтактноеЛицоПартнераПоУмолчанию(Объект.Клиент, Объект.КонтактноеЛицо);
	
	Если ЗначениеЗаполнено(Выборка.Соглашение) Тогда
		Соглашение = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Выборка.Соглашение, "Организация, Валюта, ЦенаВключаетНДС", Истина);
		
		Объект.Организация        = Соглашение.Организация;
		Объект.Валюта             = Соглашение.Валюта;
		Объект.ЦенаВключаетНДС    = Соглашение.ЦенаВключаетНДС;
		Объект.УсловияОплатыТекст = КоммерческиеПредложенияДокументыУТВызовСервера.УсловияОплатыТекстом(Выборка.Соглашение);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьКоммерческоеПредложениеКлиентуНаОснованииКоммерческогоПредложенияКлиенту(Объект, ДанныеЗаполнения)

	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КоммерческоеПредложениеКлиенту.Организация                         КАК Организация,
	|	КоммерческоеПредложениеКлиенту.Клиент                              КАК Клиент,
	|	КоммерческоеПредложениеКлиенту.Сделка                              КАК Сделка,
	|	КоммерческоеПредложениеКлиенту.Контрагент                          КАК Контрагент,
	|	КоммерческоеПредложениеКлиенту.КонтактноеЛицо                      КАК КонтактноеЛицо,
	|	КоммерческоеПредложениеКлиенту.ХозяйственнаяОперация               КАК ХозяйственнаяОперация,
	|	КоммерческоеПредложениеКлиенту.Валюта                              КАК Валюта,
	|	КоммерческоеПредложениеКлиенту.Налогообложение                     КАК Налогообложение,
	|	КоммерческоеПредложениеКлиенту.ЦенаВключаетНДС                     КАК ЦенаВключаетНДС,
	|	КоммерческоеПредложениеКлиенту.СрокДействия                        КАК СрокДействия,
	|	КоммерческоеПредложениеКлиенту.УсловияДоставкиТекст                КАК УсловияДоставкиТекст,
	|	КоммерческоеПредложениеКлиенту.УсловияОплатыТекст                  КАК УсловияОплатыТекст,
	|	КоммерческоеПредложениеКлиенту.ПрочаяДополнительнаяИнформацияТекст КАК ПрочаяДополнительнаяИнформацияТекст,
	|	КоммерческоеПредложениеКлиенту.МожетВыкупатьсяЧастично             КАК МожетВыкупатьсяЧастично,
	|	КоммерческоеПредложениеКлиенту.Менеджер                            КАК Менеджер,
	|	КоммерческоеПредложениеКлиенту.ВариантУказанияСрокаПоставки        КАК ВариантУказанияСрокаПоставки,
	|	КоммерческоеПредложениеКлиенту.СуммаДокумента                      КАК СуммаДокумента,
	|	КоммерческоеПредложениеКлиенту.ДополнительнаяИнформацияКлиентуHTML КАК ДополнительнаяИнформацияКлиентуHTML,
	|	КоммерческоеПредложениеКлиенту.Комментарий                         КАК Комментарий,
	|	КоммерческоеПредложениеКлиенту.ХэшСуммаЗапроса                     КАК ХэшСуммаЗапроса,
	|	КоммерческоеПредложениеКлиенту.КартаЛояльности                     КАК КартаЛояльности,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(КоммерческоеПредложениеКлиенту.ДокументОснование) = &ТипОбщегоОснования
	|			ТОГДА КоммерческоеПредложениеКлиенту.ДокументОснование
	|		ИНАЧЕ КоммерческоеПредложениеКлиенту.Ссылка
	|	КОНЕЦ                                                              КАК ДокументОснование,
	|	КоммерческоеПредложениеКлиенту.ИдентификаторЗКПВСервисе            КАК ИдентификаторЗКПВСервисе,
	|	НЕ КоммерческоеПредложениеКлиенту.Проведен                         КАК ЕстьОшибкиПроведен
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
	|ГДЕ
	|	КоммерческоеПредложениеКлиенту.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КоммерческоеПредложениеКлиентуТовары.ВидЦены                                   КАК ВидЦены,
	|	КоммерческоеПредложениеКлиентуТовары.ЕдиницаИзмерения                          КАК ЕдиницаИзмерения,
	|	КоммерческоеПредложениеКлиентуТовары.ЗапросЕдиницаИзмерения                    КАК ЗапросЕдиницаИзмерения,
	|	КоммерческоеПредложениеКлиентуТовары.ЗапросКоличество                          КАК ЗапросКоличество,
	|	КоммерческоеПредложениеКлиентуТовары.ЗапросСрокПоставки                        КАК ЗапросСрокПоставки,
	|	КоммерческоеПредложениеКлиентуТовары.ЗапросЦена                                КАК ЗапросЦена,
	|	КоммерческоеПредложениеКлиентуТовары.ИдентификаторДляСопоставленияНоменклатуры КАК ИдентификаторДляСопоставленияНоменклатуры,
	|	КоммерческоеПредложениеКлиентуТовары.ИдентификаторСтрокиЗапроса                КАК ИдентификаторСтрокиЗапроса,
	|	КоммерческоеПредложениеКлиентуТовары.КлючСвязи                                 КАК КлючСвязи,
	|	КоммерческоеПредложениеКлиентуТовары.Количество                                КАК Количество,
	|	КоммерческоеПредложениеКлиентуТовары.КомментарийВнутренний                     КАК КомментарийВнутренний,
	|	КоммерческоеПредложениеКлиентуТовары.КомментарийДляПокупателя                  КАК КомментарийДляПокупателя,
	|	КоммерческоеПредложениеКлиентуТовары.Номенклатура                              КАК Номенклатура,
	|	КоммерческоеПредложениеКлиентуТовары.НоменклатураВСервисеИдентификатор         КАК НоменклатураВСервисеИдентификатор,
	|	КоммерческоеПредложениеКлиентуТовары.НоменклатураНабора                        КАК НоменклатураНабора,
	|	КоммерческоеПредложениеКлиентуТовары.НоменклатураПокупателяИдентификатор       КАК НоменклатураПокупателяИдентификатор,
	|	КоммерческоеПредложениеКлиентуТовары.НоменклатураПокупателяПредставление       КАК НоменклатураПокупателяПредставление,
	|	КоммерческоеПредложениеКлиентуТовары.НомерСтроки                               КАК НомерСтроки,
	|	КоммерческоеПредложениеКлиентуТовары.ПроцентАвтоматическойСкидки               КАК ПроцентАвтоматическойСкидки,
	|	КоммерческоеПредложениеКлиентуТовары.ПроцентРучнойСкидки                       КАК ПроцентРучнойСкидки,
	|	КоммерческоеПредложениеКлиентуТовары.СрокПоставки                              КАК СрокПоставки,
	|	КоммерческоеПредложениеКлиентуТовары.СтавкаНДС                                 КАК СтавкаНДС,
	|	КоммерческоеПредложениеКлиентуТовары.Сумма                                     КАК Сумма,
	|	КоммерческоеПредложениеКлиентуТовары.СуммаАвтоматическойСкидки                 КАК СуммаАвтоматическойСкидки,
	|	КоммерческоеПредложениеКлиентуТовары.СуммаНДС                                  КАК СуммаНДС,
	|	КоммерческоеПредложениеКлиентуТовары.СуммаРучнойСкидки                         КАК СуммаРучнойСкидки,
	|	КоммерческоеПредложениеКлиентуТовары.СуммаСНДС                                 КАК СуммаСНДС,
	|	КоммерческоеПредложениеКлиентуТовары.Характеристика                            КАК Характеристика,
	|	КоммерческоеПредложениеКлиентуТовары.ХарактеристикаВСервисеИдентификатор       КАК ХарактеристикаВСервисеИдентификатор,
	|	КоммерческоеПредложениеКлиентуТовары.ХарактеристикаНабора                      КАК ХарактеристикаНабора,
	|	КоммерческоеПредложениеКлиентуТовары.ХешСуммаСтрокиЗапроса                     КАК ХешСуммаСтрокиЗапроса,
	|	КоммерческоеПредложениеКлиентуТовары.Цена КАК Цена
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту.Товары КАК КоммерческоеПредложениеКлиентуТовары
	|ГДЕ
	|	КоммерческоеПредложениеКлиентуТовары.Ссылка = &ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КоммерческоеПредложениеКлиентуСкидкиНаценки.НомерСтроки    КАК НомерСтроки,
	|	КоммерческоеПредложениеКлиентуСкидкиНаценки.КлючСвязи      КАК КлючСвязи,
	|	КоммерческоеПредложениеКлиентуСкидкиНаценки.СкидкаНаценка  КАК СкидкаНаценка,
	|	КоммерческоеПредложениеКлиентуСкидкиНаценки.Сумма          КАК Сумма,
	|	КоммерческоеПредложениеКлиентуСкидкиНаценки.НапомнитьПозже КАК НапомнитьПозже
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту.СкидкиНаценки КАК КоммерческоеПредложениеКлиентуСкидкиНаценки
	|ГДЕ
	|	КоммерческоеПредложениеКлиентуСкидкиНаценки.Ссылка = &ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ТипОбщегоОснования", 
		КоммерческиеПредложенияДокументыЛокализация.ТипОснованияКоммерческоеПредложениеКлиентуПоУмолчанию());
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет(); 
	
	ВыборкаШапка = РезультатЗапроса[0].Выбрать();
	
	ВыборкаШапка.Следующий();
	
	МассивДопустимыхСтатусов = Новый Массив();
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыКоммерческихПредложенийКлиентам.Действует);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.ДокументОснование,
		,
		ВыборкаШапка.ЕстьОшибкиПроведен);
	
	ЗаполнитьЗначенияСвойств(Объект, ВыборкаШапка);
	
	ВыборкаТовары = РезультатЗапроса[1].Выбрать();
	Пока ВыборкаТовары.Следующий() Цикл
		НоваяСтрокаТовары = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, ВыборкаТовары);
	КонецЦикла;
	
	ВыборкаСкидки = РезультатЗапроса[2].Выбрать();
	Пока ВыборкаСкидки.Следующий() Цикл
		НоваяСтрокаСкидки = Объект.СкидкиНаценки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСкидки, ВыборкаСкидки);
	КонецЦикла;

КонецПроцедуры

Функция СостояниеКоммерческогоПредложения(ДокументОбъект)
	
	Состояние = Неопределено;
	
	Если ДокументОбъект.ПометкаУдаления Тогда
		
		Состояние = Неопределено;
	
	ИначеЕсли Не ДокументОбъект.Проведен
		Или ДокументОбъект.Статус = Перечисления.СтатусыКоммерческихПредложенийКлиентам.Черновик Тогда
		
		Состояние = Перечисления.СостоянияКоммерческихПредложенийКлиентам.Подготавливается;
		
	ИначеЕсли ДокументОбъект.Статус = Перечисления.СтатусыКоммерческихПредложенийКлиентам.НеСогласовано Тогда
		
		Состояние = Перечисления.СостоянияКоммерческихПредложенийКлиентам.ОжидаетсяСогласование;
		
	ИначеЕсли ДокументОбъект.Статус = Перечисления.СтатусыКоммерческихПредложенийКлиентам.Отменено Тогда
		
		Состояние = Перечисления.СостоянияКоммерческихПредложенийКлиентам.Отменено;
		
	Иначе
		
		Состояние = Перечисления.СостоянияКоммерческихПредложенийКлиентам.Действует;
		
	КонецЕсли;
		
	Возврат Состояние;
	
КонецФункции

#КонецОбласти

#Область ОбщиеПроцедурыИФункции

Процедура ДобавитьЭлементФормыЕдиницаИзмерения(Форма) Экспорт
	
	Перем Элемент;
	
	Элемент     = Форма.Элементы.Добавить("ТоварыНоменклатураЕдиницаИзмерения", Тип("ПолеФормы"), Форма.Элементы.ТоварыУпаковкаЕдиницаИзмерения);
	Элемент.Вид                       = ВидПоляФормы.ПолеВвода;
	Элемент.КнопкаОткрытия            = Ложь;
	Элемент.ТолькоПросмотр            = Истина;
	Элемент.ОтображатьВШапке          = Ложь;
	Элемент.Ширина                    = 8;
	Элемент.ПутьКДанным               = "Объект.Товары.Номенклатура.ЕдиницаИзмерения";
	Элемент.АвтоОтметкаНезаполненного = Ложь;
	
	ПараметрыУсловногоОформления = НоменклатураСервер.НовыеПараметрыУсловногоОформленияЕдиницИзмерения();
	ПараметрыУсловногоОформления.ПутьКПолюУпаковка = "Объект.Товары.ЕдиницаИзмерения";
	НоменклатураСервер.УстановитьУсловноеОформлениеЕдиницИзмерения(Форма, ПараметрыУсловногоОформления);

КонецПроцедуры

#КонецОбласти

#Область КомандыСозданияНаОсновании

// Определяет список команд создания на основании.
//
// Параметры:
//   ИмяОбъекта - Строка - имя объекта добавления команд.
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(ИмяОбъекта, КомандыСозданияНаОсновании, Параметры)
	
	Если ИмяОбъекта = Метаданные.Документы.КоммерческоеПредложениеКлиенту.Имя Тогда
		
		Документы.ЗаказКлиента.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
		Документы.КоммерческоеПредложениеКлиенту.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
		БизнесПроцессы.Задание.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
		
	КонецЕсли;
	
	КоммерческиеПредложенияДокументыЛокализация.ДобавитьКомандыСозданияНаОсновании(ИмяОбъекта, КомандыСозданияНаОсновании, Параметры)
	
КонецПроцедуры

// Добавляет команду создания документа на основании.
//
// Параметры:
//   ИмяОбъекта - Строка - имя объекта метаданных.
//   КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//   СтрокаТаблицыЗначений, Неопределено - содержит описание добавленной команды.
//
Функция ДобавитьКомандуСоздатьНаОсновании(ИмяОбъекта, КомандыСозданияНаОсновании)
	
	Если ИмяОбъекта = Метаданные.Документы.КоммерческоеПредложениеКлиенту.Имя Тогда
		
		Если ПравоДоступа("Добавление", Метаданные.Документы.КоммерческоеПредложениеКлиенту) Тогда
			КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
			КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.КоммерческоеПредложениеКлиенту.ПолноеИмя();
			КомандаСоздатьНаОсновании.Представление = ОбщегоНазначенияУТ.ПредставлениеОбъекта(Метаданные.Документы.КоммерческоеПредложениеКлиенту);
			КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
			КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьКоммерческиеПредложенияКлиентам";
			
			Возврат КомандаСоздатьНаОсновании;
			
		КонецЕсли;
		
	КонецЕсли;
	
	КоммерческиеПредложенияДокументыЛокализация.ДобавитьКомандуСоздатьНаОсновании(ИмяОбъекта, КомандыСозданияНаОсновании);
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#КонецОбласти
