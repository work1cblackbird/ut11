///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Механизм расчета себестоимости
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ОсновнойИнтерфейсМеханизма

// Выполняется формирование движений по регистрам.
// Перечень исходящих регистров см. РасчетСебестоимости.ИсходящиеДанныеМеханизма
//
// Параметры:
//	ПараметрыЗапуска - Структура - параметры запуска процедуры 
//	ПараметрыРасчета - Структура - параметры расчета, сформированные в вызывающем механизме.
//	ПараметрыОтладки - Структура - предназначена для переопределения одноименных свойств структуры ПараметрыРасчета.
//		Подробнее см. пояснения в коде РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыРасчетаПартий к параметру ПараметрыОтладки. 
//
Процедура СформироватьДвиженияПоРегистрам(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки) Экспорт
	
	Если НЕ ПараметрыРасчета.ИспользоватьУчетСебестоимости Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыОтладки = Неопределено Тогда
		ПараметрыОтладки = Новый Структура; // для упрощения дальнейших обращений к этому свойству
	КонецЕсли;
	
	ПараметрыЗапуска.Вставить("ТолькоРасчетСебестоимости", Ложь);
	ПараметрыЗапуска.Вставить("РегламентноеЗадание", Ложь);
	ПараметрыЗапуска.Вставить("ПредварительныйРасчет", Ложь);
	
	// Инициализируем параметры расчета
	ИнициализироватьОбщиеПараметрыРасчетаСебестоимости(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки);
	
	СформироватьДвиженияПоОтклонениямВСтоимостиТоваров(ПараметрыРасчета);
	// Формирует движения по регистрам:
	// - СебестоимостьТоваров
	// - ПрочиеРасходы
	// - ПрочиеДоходы
	// - ДвиженияНоменклатураДоходыРасходы
	// - ДвиженияНоменклатураНоменклатура
	// - ПрочиеАктивыПассивы
	СкорректироватьСтоимостьСписанияЗапасов(ПараметрыРасчета);
		
		
	// Формирует движения по регистрам:
	// - ВыручкаИСебестоимостьПродаж
	// - Закупки
	СкорректироватьСтоимостьПродаж(ПараметрыРасчета);
		
	// Формирует движения по регистрам:
	// - ВыручкаИСебестоимостьПродаж
	// - ПрочиеРасходы
	// - ДвиженияНоменклатураДоходыРасходы
	РасчетСебестоимостиЛокализация.ВключитьИсключитьНДСВСтоимостьПродаж(ПараметрыРасчета);
	
	
	// Этап Формирования движений по фактическим расходам НДД по себестоимости товаров и трудозатратам НЗП.
	// По прочим расходам движения формируются на этапе см. СформироватьДвиженияПоРегистрамФинансовыйРезультат,
	// т.к. для них необходимы данные по погрешностям расчета себестоимости.
	//
	// Формирует движения по регистрам:
	// - СебестоимостьТоваров
	// - ТрудозатратыНезавершенногоПроизводства
	// - ФактическиеРасходыНДДПроизводствоРеализация (если расходы признаются по объекту раздельного учета НДД)
	РасчетСебестоимостиЛокализация.СформироватьДвиженияПоФактическимРасходамНДДпоСебестоимостиТоваровИТрудозатратамНЗП(ПараметрыРасчета);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, "СтоимостьВНЗП");
	
	// Записываем движения (в случае, если расчет себестоимости запущен самостоятельно, а не как этап расчета партий)
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаписатьСформированныеДвижения(
		ПараметрыРасчета,
		ПараметрыОтладки.ПротоколыРасчета);

КонецПроцедуры
	
// Выполняется формирование движений по регистрам.
// Перечень исходящих регистров см. РасчетСебестоимости.ИсходящиеДанныеМеханизма
//
// Параметры:
//	ПараметрыЗапуска - Структура - параметры запуска процедуры 
//	ПараметрыРасчета - Структура - параметры расчета, сформированные в вызывающем механизме.
//	ПараметрыОтладки - Структура - предназначена для переопределения одноименных свойств структуры ПараметрыРасчета.
//		Подробнее см. пояснения в коде РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьПараметрыРасчетаПартий к параметру ПараметрыОтладки. 
//
Процедура СформироватьДвиженияПоРегистрамФинансовыйРезультат(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки) Экспорт
	
	Если НЕ ПараметрыРасчета.ИспользоватьУчетСебестоимости Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыОтладки = Неопределено Тогда
		ПараметрыОтладки = Новый Структура; // для упрощения дальнейших обращений к этому свойству
	КонецЕсли;
	
	ПараметрыЗапуска.Вставить("ТолькоРасчетСебестоимости", Ложь);
	ПараметрыЗапуска.Вставить("РегламентноеЗадание", Ложь);
	ПараметрыЗапуска.Вставить("ПредварительныйРасчет", Ложь);
	
	// Инициализируем параметры расчета
	ИнициализироватьОбщиеПараметрыРасчетаСебестоимости(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки);
	
	#Область КорректировкаОстатковРегистров
	
	// Выполняем операции корректировки остатков регистров на конец рассчитываемого периода:
	// - списываем остатки малоценных МЦ
	// - списываем ошибки округления расчета
	// - списываем отклонения в стоимости, которые не являются ошибками округления
	
	
	Если ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиСебестоимостьРегл > 0
	 ИЛИ ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиСебестоимостьУпр > 0
	 ИЛИ ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиРасходыРегл > 0
	 ИЛИ ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиРасходыУпр > 0 Тогда
		// Формирует движения по регистрам:
		// - СебестоимостьТоваров
		// - ПрочиеРасходы
		// - ПрочиеРасходыНезавершенногоПроизводства
		// - ДвиженияНоменклатураДоходыРасходы
		// - ДвиженияНоменклатураНоменклатура
		СписатьОшибкиОкругленияРасчетаСебестоимости(ПараметрыРасчета);
	КонецЕсли;

	// Формирует движения по регистрам:
	// - СебестоимостьТоваров
	// - ПрочиеДоходы
	// - ПрочиеРасходы
	СписатьОтклоненияВСтоимостиТоваров(ПараметрыРасчета);
	
	#КонецОбласти
	
	// Этап Формирования движений по фактическим расходам НДД по прочим расходам.
	// Сделан отдельно от себестоимости товаров и трудозатрат НЗП (см. СформироватьДвиженияПоРегистрам), 
	// т.к. для прочих расходов нужны данные по погрешностям расчета себестоимости. 
	//
	// Формирует движения по регистрам:
	// - ПрочиеРасходы
	// - ФактическиеРасходыНДДПроизводствоРеализация (если расходы признаются по объекту раздельного учета НДД)
	РасчетСебестоимостиЛокализация.СформироватьДвиженияПоФактическимРасходамНДДпоПрочимРасходам(ПараметрыРасчета);
	
	Если ПараметрыРасчета.ФО.ФормироватьФинансовыйРезультат Тогда
		// Формирует движения по регистрам:
		// - ФинансовыеРезультаты
		РаспределитьВыручкуПоНаправлениямДеятельности(ПараметрыРасчета);
	КонецЕсли;
	
	// Формирует движения по регистрам:
	// - ПрочиеАктивыПассивы
	ОтразитьПрибылиИУбытки(ПараметрыРасчета);
	
	// Этап Распределение расходов будущих периодов
	// Формирует движения по регистрам;
	// - ПрочиеРасходы
	РасчетСебестоимостиПостатейныеЗатраты.РаспределитьРасходыБудущихПериодов(ПараметрыРасчета);
	
	Если ПараметрыРасчета.ФО.ФормироватьУправленческийБаланс Тогда
		// Формирует движения управленческого баланса
		ОтразитьВУправленческомБалансе(ПараметрыРасчета);
	КонецЕсли;
	
	// Записываем движения (в случае, если расчет себестоимости запущен самостоятельно, а не как этап расчета партий)
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаписатьСформированныеДвижения(
		ПараметрыРасчета,
		ПараметрыОтладки.ПротоколыРасчета);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиЭтаповЗакрытияМесяца

#Область ИсправлениеОшибокВИсходныхДанных

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - см. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_ОчисткаДвиженийПриОтключенномУчетеСебестоимости(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.ОчисткаДвиженийПриОтключенномУчетеСебестоимости,
		Истина, Ложь, Ложь);
	НоваяСтрока.ВыполняетсяВручную = Истина;
	НоваяСтрока.ТекстВыполнить     = НСтр("ru = 'Очистить'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"РасчетСебестоимостиКорректировкаСтоимости.Использование_ОчисткаДвиженийПриОтключенномУчетеСебестоимости");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
		Метаданные.Обработки.ОчисткаДвиженийПриОтключенномУчетеСебестоимости.Формы.Форма.ПолноеИмя());
	
КонецПроцедуры

// Обработчики этапа.

// Процедура определяет необходимость выполнения этапа.
//
// Параметры:
//  ПараметрыОбработчика - Структура - параметры обработчика события этапа.
//
Процедура Использование_ОчисткаДвиженийПриОтключенномУчетеСебестоимости(ПараметрыОбработчика) Экспорт
	
	КоличествоДокументов = Обработки.ОчисткаДвиженийПриОтключенномУчетеСебестоимости.КоличествоРегистраторовСНеиспользуемымиДвижениями();
	
	Если КоличествоДокументов = 0 Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru = 'При отключенном учете себестоимости отсутствуют документы с движениями по регистрам учета себестоимости.'"));
		
	Иначе
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'При отключенном учете себестоимости найдены документы с движениями по регистрам учета себестоимости: %1'"),
			Формат(КоличествоДокументов, "ЧГ="));
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			ТекстСообщения,
			,
			,
			Перечисления.ВажностьПроблемыУчета.Ошибка);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РасчетПартийИСебестоимости

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - см. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца
// 	ТекущийРодитель - Строка - идентификатор группы.
//
Процедура ДобавитьЭтап_РасчетПартийИСебестоимости(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.РасчетПартийИСебестоимости);
	ПредшествующиеЭтапы = НоваяСтрока.ПредшествующиеЭтапы; // Массив	
	ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ОформлениеВыкупаТоваров);
	ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ОформлениеОстатковТоваровКПередаче);
	ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ОформлениеОтчетовКомитентамОСписании);
	ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ОформлениеОтчетовПоКомиссииМеждуОрганизациями);
	ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ОформлениеПередачТоваров);
	ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.ФормированиеДвиженийПоРасчетамСПартнерамиИПереоценкаРасчетов);
	
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Рассчитать'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"РасчетСебестоимостиКорректировкаСтоимости.Использование_РасчетПартийИСебестоимости");
	НоваяСтрока.ДействиеОформление = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"РасчетСебестоимостиКорректировкаСтоимости.Оформление_РасчетПартийИСебестоимости");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"РасчетСебестоимостиКорректировкаСтоимости.Выполнить_РасчетПартийИСебестоимости");
	НоваяСтрока.ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
		Метаданные.РегистрыСведений.ПротоколыРасчетаПартийИСебестоимости.Формы.ФормаПросмотраПротоколов.ПолноеИмя());
	НоваяСтрока.ДействиеПодробнее.ОткрыватьВместоЖР = Истина;
	НоваяСтрока.ДействиеПодробнее.НеТребуетсяПриУспешномВыполнении = Истина;
	НоваяСтрока.ВыполняетсяПриПредварительномЗакрытииМесяца = Истина;
	
КонецПроцедуры

// Обработчики этапа.

Процедура Использование_РасчетПартийИСебестоимости(ПараметрыОбработчика) Экспорт
	
	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
	ПериодРасчета    = ПараметрыРасчета.ПериодРегистрации;
	
	// Проверим ведение учета себестоимости - расчет возможен начиная с месяца, предшествующему началу учета (с момента ввода остатков).
	Если НЕ РасчетСебестоимостиПовтИсп.ВозможенРасчетСебестоимости(НачалоМесяца(ПериодРасчета)) Тогда
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru = 'Нет движений по регистрам себестоимости и прочих расходов.'"));
		Возврат;
	КонецЕсли;
	
	Если ПараметрыОбработчика.Свойство("ТолькоОднаОрганизация") И ПараметрыОбработчика.ТолькоОднаОрганизация Тогда
		ПараметрыОбработчика.ДанныеЭтапа.МассивОрганизаций = ОбщегоНазначенияУТКлиентСервер.Массив(ПараметрыРасчета.МассивОрганизаций);
	Иначе
		// Дополним связанными по Интеркампани организациями и добавим информационные сообщения.
		ПараметрыОбработчика.ДанныеЭтапа.МассивОрганизаций = РасчетСебестоимостиПрикладныеАлгоритмы.СвязиОрганизацийПоСхемеИнтеркампани(
			ПериодРасчета,
			ПараметрыРасчета.МассивОрганизаций);
	КонецЕсли;
	
	МассивОрганизаций = ПараметрыОбработчика.ДанныеЭтапа.МассивОрганизаций;
	МассивДополнительныеОрганизации = Новый Массив;
	
	Для Каждого ТекущаяОрганизация Из МассивОрганизаций Цикл
		Если ПараметрыРасчета.МассивОрганизаций.Найти(ТекущаяОрганизация) = Неопределено Тогда
			МассивДополнительныеОрганизации.Добавить(ТекущаяОрганизация);
		КонецЕсли;
	КонецЦикла;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, МассивОрганизаций.Количество());
	
	Если МассивДополнительныеОрганизации.Количество() > 0 Тогда
		
		ТекстДополнительныеОрганизации = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Также будет выполнен расчет для организаций, связанных по схеме Интеркампани: %1'", ОбщегоНазначения.КодОсновногоЯзыка()),
			РасчетСебестоимостиПрикладныеАлгоритмы.ПредставлениеОрганизаций(МассивДополнительныеОрганизации, ", ", Истина));
		
		ЗакрытиеМесяцаСервер.ДобавитьПоясняющуюИнформациюКЭтапу(
			ПараметрыОбработчика,
			ТекстДополнительныеОрганизации,
			,
			,
			Перечисления.ВажностьПроблемыУчета.ВажнаяИнформация);
		
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, МассивОрганизаций.Количество());
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ПроверитьНеобходимостьВключенияНастройкиРаспределениеДопРасходовПоВыбывшимТоварам(ПараметрыРасчета) Тогда
		
		ТекстРекомендации = НСтр("ru = 'Обнаружены расходы, которые можно списать на выбытия прошлых периодов.
			|Рекомендуется включить настройку ""Распределение доп. расходов по выбывшим товарам"".'", ОбщегоНазначения.КодОсновногоЯзыка());
		
		ОписаниеДействия = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
				Метаданные.Обработки.ПанельАдминистрированияУТ.Формы.ФинансовыйРезультатИКонтроллинг.ПолноеИмя());
		
		ЗакрытиеМесяцаСервер.ДобавитьПоясняющуюИнформациюКЭтапу(
			ПараметрыОбработчика,
			ТекстРекомендации,
			,
			ОписаниеДействия,
			Перечисления.ВажностьПроблемыУчета.ПолезныйСовет);
		
	КонецЕсли;
	
	НачалоПериодаРасчета = Макс(
		РасчетСебестоимостиПрикладныеАлгоритмы.НачалоПериодаРасчета(ПериодРасчета, МассивОрганизаций),
		НачалоМесяца(НачалоМесяца(Константы.ДатаНачалаУчетаСебестоимости.Получить()) - 1));
	
	Если НачалоПериодаРасчета <= ПериодРасчета Тогда
		
		ПараметрыОбработчика.ДанныеЭтапа.ДатаНачалаРасчета = НачалоПериодаРасчета;
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Требуется пересчет начиная с периода %1.'"),
				РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(НачалоПериодаРасчета)));
		Возврат; // партии не актуальны
		
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, 1);
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ЕстьНекорректныеДвиженияСебестоимости(ПериодРасчета, МассивОрганизаций) Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			НСтр("ru = 'Период еще не был пересчитан в партионном учете версии 2.2.'"));
		Возврат; // период не рассчитывался в партионном учете версии 2.2
		
	КонецЕсли;
	
	ОрганизацииСДвижениямиПоСебестоимости = РасчетСебестоимостиПрикладныеАлгоритмы.ОрганизацииСДвижениямиПоСебестоимости(
		ПериодРасчета,
		МассивОрганизаций);
		
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ЕстьОбязательныеКорректировкиОстатков(ПериодРасчета) Тогда
		ОрганизацииСОстаткамиПоСебестоимости = РасчетСебестоимостиПрикладныеАлгоритмы.ОрганизацииСОстаткамиПоСебестоимости(
			ПериодРасчета,
			МассивОрганизаций);
	Иначе
		ОрганизацииСОстаткамиПоСебестоимости = Неопределено;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, ОрганизацииСДвижениямиПоСебестоимости.Количество());
	
	Если (ЗначениеЗаполнено(ОрганизацииСДвижениямиПоСебестоимости)
	 	И НЕ РасчетСебестоимостиПрикладныеАлгоритмы.ЕстьДокументыРасчетаСебестоимости(ПериодРасчета, ОрганизацииСДвижениямиПоСебестоимости))
	 ИЛИ (ЗначениеЗаполнено(ОрганизацииСОстаткамиПоСебестоимости)
	 	И НЕ РасчетСебестоимостиПрикладныеАлгоритмы.ЕстьДокументыРасчетаСебестоимости(НачалоМесяца(ПериодРасчета - 1), ОрганизацииСОстаткамиПоСебестоимости)) Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			НСтр("ru = 'Расчет себестоимости в данном периоде еще не выполнялся.'"),
			,
			,
			Перечисления.ВажностьПроблемыУчета.Предупреждение);
		Возврат;
		
	КонецЕсли;
	
	Если ПараметрыОбработчика.ПараметрыРасчета.РежимЗакрытияМесяца = Перечисления.РежимыЗакрытияМесяца.ОкончательноеЗакрытие
	 И РасчетСебестоимостиПрикладныеАлгоритмы.ЕстьДокументыПредварительногоРасчетаСебестоимости(ПериодРасчета, 
	 	ОрганизацииСДвижениямиПоСебестоимости) Тогда
	 		
	 	ЗакрытиеМесяцаСервер.УстановитьСостояниеНеВыполнен(
			ПараметрыОбработчика,
			НСтр("ru = 'В данном периоде было выполнено только предварительное закрытие месяца.'"),
			,
			,
			Перечисления.ВажностьПроблемыУчета.Предупреждение);
		Возврат;
		
	КонецЕсли;
	
	РасчетСебестоимостиЛокализация.Использование_РасчетПартийИСебестоимости(ПараметрыОбработчика);
	
КонецПроцедуры

Процедура Оформление_РасчетПартийИСебестоимости(ПараметрыОбработчика) Экспорт
	
	ПараметрыОбработчика.ДанныеЭтапа.ТекстПодробнее = "";
	
	Если ЗакрытиеМесяцаСервер.ТребуетсяПересчетЭтапа(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		
		ПротоколыРасчета = РегистрыСведений.ОшибкиРасчетаПартийИСебестоимости.ПолучитьПротоколыРасчета(
			ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации,
			ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
		
		ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, ПротоколыРасчета.Количество());
		
		Если ЗначениеЗаполнено(ПротоколыРасчета) Тогда
			ПараметрыОбработчика.ДанныеЭтапа.ТекстПодробнее = ЗакрытиеМесяцаСервер.ТекстПодробнееПоУмолчанию();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура Выполнить_РасчетПартийИСебестоимости(ПараметрыОбработчика) Экспорт
	
	РегистрыСведений.ЗаданияКРасчетуСебестоимости.СоздатьЗаписьРегистра(
		ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации,
		Неопределено,
		ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
		
	ПараметрыЗапуска = Новый Структура;
	ПараметрыЗапуска.Вставить("Дата", 					    ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации);
	ПараметрыЗапуска.Вставить("НачалоПериода", 				ПараметрыОбработчика.ПараметрыРасчета.НачалоПериода);
	ПараметрыЗапуска.Вставить("КонецПериода", 				ПараметрыОбработчика.ПараметрыРасчета.КонецПериода);
	ПараметрыЗапуска.Вставить("МассивОрганизаций",  	    ПараметрыОбработчика.ПараметрыРасчета.МассивОрганизаций);
	ПараметрыЗапуска.Вставить("МестоВызоваРасчета", 	    "РасчетСебестоимостиКорректировкаСтоимости.Выполнить_РасчетПартийИСебестоимости");
	ПараметрыЗапуска.Вставить("ВыполняетсяЗакрытиеМесяца",  Истина);
	ПараметрыЗапуска.Вставить("АвтоматическоеТестирование", ПараметрыОбработчика.АвтоматическоеТестирование);
	ПараметрыЗапуска.Вставить("РежимЗакрытияМесяца",        ПараметрыОбработчика.РежимЗакрытияМесяца);
	ПараметрыЗапуска.Вставить("ИдентификаторРасчета", 		ПараметрыОбработчика.ИдентификаторРасчета);
	
	Если ПараметрыОбработчика.Свойство("ТолькоОднаОрганизация") Тогда 
		ПараметрыЗапуска.Вставить("ТолькоОднаОрганизация",	ПараметрыОбработчика.ТолькоОднаОрганизация);
	Иначе
		ПараметрыЗапуска.Вставить("ТолькоОднаОрганизация",	Ложь);
	КонецЕсли;
	
	РасчетСебестоимости.РассчитатьВсеВПопыткеИсключении(ПараметрыЗапуска);
	
КонецПроцедуры

// Проверки состояния системы, относящиеся к этапу.

Процедура ОписаниеПроверок_РасчетПартийИСебестоимости(ТаблицаПроверок) Экспорт
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПроверкиДляРегистрации(ТаблицаПроверок);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Инициализация

// Перед началом расчета заполняет все необходимые параметры и инициализирует все структуры данных, используемые алгоритма расчета.
// Если расчет себестоимости вызывается не самостоятельно, а как этап расчета партий,
// то параметр ПараметрыРасчета уже будет инициализирован общими свойствами механизмов расчета.
//
// Внимание: если какая-то сущность используется более чем в одном этапе расчета, то ее стоит занести в ПараметрыРасчета.
//
Процедура ИнициализироватьОбщиеПараметрыРасчетаСебестоимости(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки) Экспорт
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ИнициализироватьОбщиеПараметрыРасчетаСебестоимости");
	
	// Создадим контейнер всех параметров, используемых механизмом расчета партий
	ПараметрыИнициализации = Новый Структура;
	ТолькоРасчетСебестоимости =
		?(ПараметрыЗапуска.Свойство("ТолькоРасчетСебестоимости"), ПараметрыЗапуска.ТолькоРасчетСебестоимости, Ложь);
	ПредварительныйРасчет =
		?(ПараметрыЗапуска.Свойство("ПредварительныйРасчет"), ПараметрыЗапуска.ПредварительныйРасчет, Ложь);
	ПараметрыИнициализации.Вставить("Дата",
		?(ТолькоРасчетСебестоимости И ПредварительныйРасчет,
			КонецДня(ПараметрыЗапуска.Дата), КонецМесяца(ПараметрыЗапуска.Дата)));
	ПараметрыИнициализации.Вставить("НачалоПериода", НачалоМесяца(ПараметрыЗапуска.Дата));
	ПараметрыИнициализации.Вставить("КонецПериода", ПараметрыИнициализации.Дата);
	Если ПараметрыЗапуска.Свойство("ТолькоОднаОрганизация") И ПараметрыЗапуска.ТолькоОднаОрганизация Тогда
		ПараметрыИнициализации.Вставить("МассивОрганизаций", ПараметрыЗапуска.МассивОрганизаций);
	Иначе
		ПараметрыИнициализации.Вставить("МассивОрганизаций",
			?(ТипЗнч(ПараметрыЗапуска.МассивОрганизаций) <> Тип("Массив") И ЗначениеЗаполнено(ПараметрыЗапуска.МассивОрганизаций),
				РасчетСебестоимостиПрикладныеАлгоритмы.СвязиОрганизацийПоСхемеИнтеркампани(НачалоМесяца(ПараметрыЗапуска.Дата), ПараметрыЗапуска.МассивОрганизаций),
				ПараметрыЗапуска.МассивОрганизаций));
	КонецЕсли;
	ПараметрыИнициализации.Вставить("ЗапущенРасчетПартий", Ложь);
	ПараметрыИнициализации.Вставить("ТолькоПредварительныйРасчетСебестоимости",
		?(ТолькоРасчетСебестоимости, ПредварительныйРасчет, Ложь));
	ПараметрыИнициализации.Вставить("ЗапущеноРегламентнымЗаданием", 
		?(ПараметрыЗапуска.Свойство("РегламентноеЗадание"), ПараметрыЗапуска.РегламентноеЗадание, Ложь));
	
	Если ПараметрыЗапуска.Свойство("ИзмененоДокументов") Тогда
		// Штатный вызов из механизма партионного учета версии 2.1.
		ПараметрыИнициализации.Вставить("ИзмененоДокументов", ПараметрыЗапуска.ИзмененоДокументов);
	КонецЕсли;
	Если ПараметрыЗапуска.Свойство("ОписаниеЗамера") Тогда
		// Штатный вызов из механизма партионного учета версии 2.1.
		ПараметрыИнициализации.Вставить("ОписаниеЗамера", ПараметрыЗапуска.ОписаниеЗамера);
	КонецЕсли;
	
	Если ПараметрыЗапуска.Свойство("АвтоматическоеТестирование") И ПараметрыЗапуска.АвтоматическоеТестирование Тогда
		ПараметрыИнициализации.Вставить("АвтоматическоеТестирование", Истина); // вызывается при тестировании
	Иначе
		ПараметрыИнициализации.Вставить("АвтоматическоеТестирование", Ложь);
	КонецЕсли;
	
	Если ТолькоРасчетСебестоимости И ПараметрыЗапуска.Свойство("МестоВызоваРасчета") Тогда
		ПараметрыИнициализации.Вставить("МестоВызоваРасчета", ПараметрыЗапуска.МестоВызоваРасчета);
	КонецЕсли;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьОбщиеПараметрыРасчета(
		ПараметрыИнициализации, ПараметрыРасчета, ПараметрыОтладки);
		
	Если ПараметрыРасчета.ЗапущенРасчетПартий Тогда
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ВыполняетсяМеханизмРасчетаСебестоимости(ПараметрыРасчета, Истина);
		
		Если РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(ПараметрыРасчета, "ВТСтоимостьПартийТоваров") > 0 Тогда
			
			РасчетСебестоимостиПротоколРасчета.ОчисткаСформированныхДвижений(
				ПараметрыРасчета,
				Метаданные.РегистрыСведений.СтоимостьТоваров.Имя);
			
		КонецЕсли;
		
		Если РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(ПараметрыРасчета, "ВтУзлыКорректировкиСебестоимости") > 0 Тогда
			
			РасчетСебестоимостиПрикладныеАлгоритмы.ОчиститьВременнуюТаблицу(ПараметрыРасчета, "ВтУзлыКорректировкиСебестоимости");
			РасчетСебестоимостиПрикладныеАлгоритмы.ОчиститьВременнуюТаблицу(ПараметрыРасчета, "ВтСвязиУзловКорректировкиСебестоимости");
			
		КонецЕсли;
		
	Иначе
		
		НомерЗаданияДоРасчета = РегистрыСведений.ЗаданияКРасчетуСебестоимости.ПолучитьНомерЗадания();
		ПараметрыРасчета.Вставить("НомерЗаданияДоРасчета", НомерЗаданияДоРасчета - 1);
		
		// Запомним протокол расчета и вернем его в место вызова расчета
		ПараметрыОтладки.Вставить("ПротоколыРасчета", Новый Массив);
		
		// Инициализируем кэши регистров, обслуживаемых механизмом партионного учета
		// Непосредственное обновление кэшей будет выполнено в ИнициализироватьПараметрыРасчетаСебестоимостиПоГруппеОрганизаций
		Для Каждого КлючИЗначение Из ИспользуемыеКэшиРегистровПартионногоУчета() Цикл
			
			Регистр = КлючИЗначение.Ключ; // ОбъектМетаданныхРегистрНакопления
			РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьДанныеРегистра(ПараметрыРасчета, Регистр);
			
			ОписаниеРегистра = ПараметрыРасчета.Движения[Регистр.Имя];
			ОписаниеРегистра.ИспользоватьВТКэш = Ложь; // расчетные движения брать из данных ИБ
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Общие параметры расчета себестоимости
	ПараметрыРасчета.Вставить("ПредварительныйРасчет", ПредварительныйРасчет);
	ПараметрыРасчета.Вставить("СохранитьСЛУ",
		ПараметрыЗапуска.Свойство("СохранитьСЛУ") И ПараметрыЗапуска.СохранитьСЛУ);
	
КонецПроцедуры

Процедура ИнициализироватьПараметрыРасчетаСебестоимостиПоГруппеОрганизаций(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки) Экспорт
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ИнициализироватьПараметрыРасчетаСебестоимостиПоГруппеОрганизаций");
	
	РасчетСебестоимостиПротоколРасчета.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
		ПараметрыРасчета,
		ПараметрыЗапуска.ГруппаОрганизаций.Количество());
	
	// Заменим основной отбор по организациям на текущую рассчитываемую группу.
	// При окончании расчета себестоимости основной отбор будет восстановлен из ПараметрыРасчета.КопияМассивОрганизаций
	ТолькоОднаОрганизация = ПараметрыЗапуска.Свойство("ТолькоОднаОрганизация") И ПараметрыЗапуска.ТолькоОднаОрганизация;
	Если НЕ ТолькоОднаОрганизация Тогда
		ПараметрыРасчета.Вставить("МассивОрганизаций", ПараметрыЗапуска.ГруппаОрганизаций);
	КонецЕсли;
	ПараметрыРасчета.Вставить("МетодОценки", 	   ПараметрыЗапуска.МетодОценки); // общий метод оценки для этой группы организаций
	
	// Обновим временные таблицы с отборами по организациям.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьВременныеТаблицыДляОтборов(ПараметрыРасчета);
	
	// Обновим все расчетные кэши остатков и оборотов - в них должны быть только записи по рассчитываемой группе организаций
	// Если расчет вызван регламентной операцией, то считаем стоимость по средней (без учета партий)
	// Для этого в расчетном кэше оборотов и остатков будут "очищены" поля, относящиеся к партиям
	// Если расчет себестоимости вызван из механизма партионного учета, то по окончании расчета себестоимости
	// расчетные кэши будут восстановлены автоматически.
	РасчетСебестоимостиПрикладныеАлгоритмы.ОбновитьРасчетныеКэшиРегистров(ПараметрыРасчета);
	
	ПараметрыРасчета.Вставить("КоличествоУзлов",     0);
	ПараметрыРасчета.Вставить("КоличествоУзловРегл", 0);
	
	// Добавим информацию о текущей итерации расчета себестоимости в протокол расчета
	СтрокаПротокола = НСтр("ru = 'Вид расчета себестоимости'", ОбщегоНазначения.КодОсновногоЯзыка()) + ": "
		+ ?(ПараметрыРасчета.ПредварительныйРасчет, НСтр("ru = 'Предварительный'", ОбщегоНазначения.КодОсновногоЯзыка()), НСтр("ru = 'Фактический'", ОбщегоНазначения.КодОсновногоЯзыка()));
	РасчетСебестоимостиПротоколРасчета.ДополнительнаяИнформация(ПараметрыРасчета, СтрокаПротокола);
	
	Если ПараметрыРасчета.ПредварительныйРасчет Тогда
		// Метод оценки не влияет на алгоритм расчета
		ПредставлениеМетодаОценки = НСтр("ru = 'Не влияет на результат расчета'", ОбщегоНазначения.КодОсновногоЯзыка());
	ИначеЕсли ПараметрыРасчета.ПартионныйУчетВерсии22 И НЕ ЗначениеЗаполнено(ПараметрыРасчета.МетодОценки) Тогда
		// См. РасчетСебестоимостиПрикладныеАлгоритмы.ОпределитьМетодОценкиСтоимостиДляГруппыОрганизаций
		ПредставлениеМетодаОценки = НСтр("ru = 'Отличный от ""ФИФО (взвешенная оценка)""'", ОбщегоНазначения.КодОсновногоЯзыка());
	Иначе
		ПредставлениеМетодаОценки = ПараметрыРасчета.МетодОценки;
	КонецЕсли;
	
	СтрокаПротокола = НСтр("ru = 'Метод оценки стоимости'", ОбщегоНазначения.КодОсновногоЯзыка()) + ": "
		+ РасчетСебестоимостиПротоколРасчета.ПредставлениеЗначения(ПредставлениеМетодаОценки);
	РасчетСебестоимостиПротоколРасчета.ДополнительнаяИнформация(ПараметрыРасчета, СтрокаПротокола);
	
	СтрокаПротокола = НСтр("ru = 'Организации'", ОбщегоНазначения.КодОсновногоЯзыка()) + ": "
		+ РасчетСебестоимостиПрикладныеАлгоритмы.ПредставлениеОрганизаций(ПараметрыРасчета.МассивОрганизаций, ", ", Истина);
	РасчетСебестоимостиПротоколРасчета.ДополнительнаяИнформация(ПараметрыРасчета, СтрокаПротокола);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ОчиститьВременнуюТаблицу(ПараметрыРасчета, "ВТПромежуточнаяСебестоимостьТоваров");
	
КонецПроцедуры

#КонецОбласти

#Область ЭтапыРасчета

// Этап 9 (вызов механизма расчета себестоимости)
//
Процедура КорректировкаСтоимостиВозвратовИсправленийПрошлыхПериодов(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки) Экспорт
	
	Если НЕ ПараметрыРасчета.ИспользоватьУчетСебестоимости Тогда
		Возврат;
	КонецЕсли;
	
	// Инициализируем параметры расчета
	ИнициализироватьОбщиеПараметрыРасчетаСебестоимости(ПараметрыЗапуска, ПараметрыРасчета, ПараметрыОтладки);
	
	// Формирует движения по регистрам (если выполняется фактический расчет):
	// - СебестоимостьТоваров
	// - ВыручкаИСебестоимостьПродаж
	// - ПрочиеРасходы
	// - ПрочиеДоходы
	// - ДвиженияНоменклатураДоходыРасходы
	// - ДвиженияНоменклатураНоменклатура
	СкорректироватьСтоимостьВозвратовПрошлыхПериодов(ПараметрыРасчета);
	
	// Формирует движения по регистрам:
	// - СебестоимостьТоваров
	// - ПрочиеРасходы
	// - ПрочиеДоходы
	// - ДвиженияНоменклатураДоходыРасходы
	// - ДвиженияНоменклатураНоменклатура
	СкорректироватьСтоимостьСторноДвиженийИсправленныхДокументов(ПараметрыРасчета);
	
	// Этап сохранения движений документа "Распределение расходов будущих периодов" в кэш.
	// Формирует движения по регистрам:
	// - ПрочиеРасходы
	ПодготовкаДанныхДляПрочихРасходов(ПараметрыРасчета);
	
	СохранитьДвиженияРасчетаСебестоимостиРассчитанныхДокументов(ПараметрыРасчета);
	
	Если ПараметрыРасчета.ЗапущенРасчетПартий Тогда
			
		// Возврат в механизм расчета партий из расчета себестоимости
		РасчетСебестоимостиПрикладныеАлгоритмы.ВыполняетсяМеханизмРасчетаСебестоимости(ПараметрыРасчета, Ложь);
			
		// Восстановим все расчетные кэши остатков и оборотов по всем организациям
		РасчетСебестоимостиПрикладныеАлгоритмы.ОбновитьРасчетныеКэшиРегистров(ПараметрыРасчета);
		
	КонецЕсли;
		
КонецПроцедуры

// Этап сохранения движений документа "Распределение расходов будущих периодов" в кэш.
//
Процедура ПодготовкаДанныхДляПрочихРасходов(ПараметрыРасчета) Экспорт

	Если ПараметрыРасчета.ПредварительныйРасчет Тогда
		Возврат;
	КонецЕсли;
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ПодготовкаДанныхДляПрочихРасходов");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	СуществующиеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.Период,
	|	Т.ВидДвижения,
	|	Т.Регистратор,
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов,
	|	Т.Сумма,
	|	Т.СуммаБезНДС,
	|	Т.СуммаРегл,
	|	Т.СуммаУпр,
	|	Т.ПостояннаяРазница,
	|	Т.ВременнаяРазница,
	|	Т.СуммаНДД,
	|	Т.КорПодразделение,
	|	Т.КорНаправлениеДеятельности,
	|	Т.КорСтатьяРасходов,
	|	Т.КорАналитикаРасходов,
	|	Т.ХозяйственнаяОперация
	|ПОМЕСТИТЬ ВтДвиженияПрочиеРасходы
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеРасходовБудущихПериодов КАК Распределение
	|		ПО Распределение.Ссылка = Т.Регистратор 
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Активность
	|	И Распределение.Дата < &НачалоПериода
	|	И (Т.РасчетПартий ИЛИ Т.РасчетСебестоимости)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Период,
	|	Т.Регистратор,
	|	Т.ВидДвижения,
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов,
	|	Т.АналитикаАктивовПассивов,
	|	Т.ДокументПоступленияРасходов,
	|	Т.АналитикаУчетаПартий,
	|	Т.НаправлениеДеятельности,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидДеятельностиНДС,
	|	Т.Стоимость,
	|	Т.СтоимостьБезНДС,
	|	Т.СтоимостьРегл,
	|	Т.НДСРегл,
	|	Т.ПостояннаяРазница,
	|	Т.ВременнаяРазница,
	|	Т.НДСУпр,
	|	Т.НалогообложениеНДС,
	|	Т.ДокументРеализации,
	|	Т.СтатьяОтраженияРасходов,
	|	Т.АналитикаОтраженияРасходов,
	|	Т.ПериодБазы,
	|	Т.ИдентификаторСтроки,
	|	Т.ХозяйственнаяОперация,
	|	Т.НастройкаХозяйственнойОперации,
	|	Т.ИдентификаторФинЗаписи,
	|	Т.Сторно,
	|	Т.КорСтатьяРасходов,
	|	Т.КорАналитикаРасходов,
	|	Т.КорПодразделение,
	|	Т.КорНаправлениеДеятельности,
	|	Т.ВидИсточника,
	|	Т.КорГруппаПродукции
	|ПОМЕСТИТЬ ВтДвиженияПартииПрочихРасходов
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеРасходовБудущихПериодов КАК Распределение
	|		ПО Распределение.Ссылка = Т.Регистратор
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В(&МассивОрганизаций)
	|	И Т.Активность
	|	И Распределение.Дата < &НачалоПериода
	|	И (Т.РасчетПартий ИЛИ Т.РасчетСебестоимости)";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	СоответствиеВременныхТаблицДвижений = Новый Соответствие;
	
	ИмяВременнойТаблицы = "ВтПрочиеРасходыРБП";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияПрочиеРасходы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияПрочиеРасходы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
	ИмяВременнойТаблицы = "ВтПартииПрочихРасходовРБП";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииПрочихРасходов.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияПартииПрочихРасходов");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияПартииПрочихРасходов", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвиженияИзВременныхТаблиц(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	
	// Уничтожим ненужные временные таблицы.
	НовыеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета, СуществующиеВТ);
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, НовыеВТ);
	
КонецПроцедуры

// Этап 3.3
// Выполняет корректировку стоимости возвратов прошлых периодов
// К возвратам прошлых периодов относятся приходные движения в регистре себестоимости с хозяйственной операцией из массива МассивОперацийВозвратыПрошлыхПериодов()
// Отличия возвратов прошлых периодов от возвратов текущего периода заключается в методе определения стоимости возврата
// стоимость нужно взять из периода из периода первичного документа.
// - если в движении возврата заполненен ДокументИсточник (первичный документ), то стоимость берется из движений этого документа
//	= если первичный документ находится в периоде, когда не велся партионный учет 2.2, то при соединении с таблицей стоимостей не выполняется соединение по полям партионного учета 2.2
//	= если первичный документ находится в периоде партионного учета 2.2, то соединение выполняется по всем полям
// - если ДокументИсточник не заполнен, то стоимость берется из регистра сведений СтоимостьТоваров за период ПериодРеализации
// 	= для возврата по отчету комиссионера ПериодРеализации заполняется не в движениях возврата, а с использованием таблицы СторноОтчетыКомиссионера
// Помимо стоимости возвращаемого товара необходимо вернуть дополнительные расходы, отнесенные на этот товар.
// Суммы дополнительных расходов хранятся в таблице ВтСуммыДопРасходовПрошлыхПериодов
//
// Особенность заполнения полей ВидДеятельности и КорВиддеятельности:
// эти поля в движении возврата должны заполняться точно так же, как в первичном документе.
// Исходные значения этих полей определяется в процедуре РасчетСебестоимостиЗаполнениеПартий.ТекстРеализацииПрошлыхМесяцев()
// и из этих данных подставляются в движения возврата
// (также смотри РасчетСебестоимостиЗаполнениеПартий.ЗаполнитьРасчетнуюПартиюСебестоимостиТоваров, источник Прошлое, приемник ВозвратПрошлыхПериодов)
//
// Особенность включения/исключение НДС:
// помимо включения/исключения НДС в расходных движениях необходимо сторнировать данную операцию в движениях документа возврата.
// Сторнирование включения/исключения НДС нужно выполнять по тем же регистрам, что и в первичном документе.
//++ Локализация
// смотри РасчетСебестоимостиНДС.ВключитьИсключитьНДСВСтоимость24
// смотри РасчетСебестоимостиНДС.ВключитьИсключитьНДСВСтоимостьПродаж24
//-- Локализация
//
Процедура СкорректироватьСтоимостьВозвратовПрошлыхПериодов(ПараметрыРасчета) Экспорт
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СкорректироватьСтоимостьВозвратовПрошлыхПериодов");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	СуществующиеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета);
	
	СоответствиеВременныхТаблицДвижений = Новый Соответствие;

#Область ЗапросДанных
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	АналитикаПартнеров.Организация КАК Организация,
	|	СУММА(ДД.Количество) КАК Количество,
	|	МАКСИМУМ(Стоимости.Период) КАК Период
	|ПОМЕСТИТЬ СторноОтчетыКомиссионера
	|ИЗ
	|	ВТКэшРасчетныеОборотыВыручкаИСебестоимостьПродаж КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК АналитикаПартнеров
	|	ПО ДД.АналитикаУчетаПоПартнерам = АналитикаПартнеров.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиФинУчета КАК ВТУчетныеПолитикиФинУчета
	|	ПО АналитикаПартнеров.Организация = ВТУчетныеПолитикиФинУчета.Организация
	|		И ВТУчетныеПолитикиФинУчета.МетодОценкиСтоимостиТоваров <> ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК Стоимости
	|		ПО Стоимости.Период < &НачалоПериода
	|		И Стоимости.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
	|		И Стоимости.РазделУчета = ДД.РазделУчета
	|		И Стоимости.ВидЗапасов = ДД.ВидЗапасов
	|		И Стоимости.Организация = АналитикаПартнеров.Организация
	|ГДЕ
	|	ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|СГРУППИРОВАТЬ ПО
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	АналитикаПартнеров.Организация
	|ИМЕЮЩИЕ
	|	СУММА(ДД.Количество) < 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Себестоимость.ДокументИсточник КАК Ссылка
	|ПОМЕСТИТЬ ВтРеализацииПрошлыхПериодов
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиФинУчета КАК ВТУчетныеПолитикиФинУчета
	|	ПО Себестоимость.Организация = ВТУчетныеПолитикиФинУчета.Организация
	|		И ВТУчетныеПолитикиФинУчета.МетодОценкиСтоимостиТоваров <> ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|ГДЕ
	|	Себестоимость.СлужебноеВидДвиженияПриход
	|	И Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов)
	|	И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	// Для записей "Сторно" стоимость определяется в процедуре СкорректироватьСтоимостьСторноДвиженийИсправленныхДокументов() 
	|	И НЕ Себестоимость.Сторно
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Себестоимость.ДокументИсточник КАК Ссылка
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиФинУчета КАК ВТУчетныеПолитикиФинУчета
	|	ПО Себестоимость.Организация = ВТУчетныеПолитикиФинУчета.Организация
	|		И ВТУчетныеПолитикиФинУчета.МетодОценкиСтоимостиТоваров <> ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК Реестр
	|		ПО Реестр.Организация = Себестоимость.Организация
	|		И Реестр.Ссылка = Себестоимость.ДокументИсточник
	|		И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|		И (НЕ Реестр.ДополнительнаяЗапись ИЛИ Реестр.ТипСсылки В (&ДокументыСДвумяОрганизациями))
	|ГДЕ
	|	НЕ Себестоимость.СлужебноеВидДвиженияПриход
	|	И Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|	И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
	|	И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|	И Реестр.ДатаДокументаИБ < &НачалоПериода
	// Условия выборки данных должны соответствовать функциям
	// - РасчетСебестоимостиРешениеСЛУ.ТекстВтУзлыКорректировки_МатериальныеИТрудозатраты()
	// - СкорректироватьСтоимостьСписанияЗапасов()
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Себестоимость.Регистратор                         КАК Ссылка,
	|	Себестоимость.АналитикаУчетаНоменклатуры          КАК АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета                         КАК РазделУчета,
	|	Себестоимость.ВидЗапасов                          КАК ВидЗапасов,
	|	Себестоимость.Организация               		  КАК Организация,
	|	Себестоимость.Партия                          	  КАК Партия,
	|	Себестоимость.АналитикаУчетаПартий                КАК АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета           КАК АналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА НЕ &ПартионныйУчетВерсии22
	|		 ИЛИ Себестоимость.Период < &ДатаПереходаНаПартионныйУчетВерсии22
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		КОГДА Себестоимость.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Себестоимость.ВидДеятельностиНДС
	|		ИНАЧЕ Себестоимость.КорВидДеятельностиНДС
	|	КОНЕЦ                                             КАК ВидДеятельностиНДС,
	|
	|	СУММА(Себестоимость.Количество)                   КАК Количество,
	|	СУММА(Себестоимость.Стоимость)                    КАК Стоимость,
	|	СУММА(Себестоимость.СтоимостьБезНДС)              КАК СтоимостьБезНДС,
	|	СУММА(Себестоимость.СтоимостьЗабалансовая)        КАК СтоимостьЗабалансовая,
	|	СУММА(Себестоимость.ДопРасходы)             	  КАК ДопРасходы,
	|	СУММА(Себестоимость.ДопРасходыБезНДС)       	  КАК ДопРасходыБезНДС,
	|	СУММА(Себестоимость.Трудозатраты)       		  КАК Трудозатраты,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеСНДС)    КАК ПостатейныеПостоянныеСНДС,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеБезНДС)  КАК ПостатейныеПостоянныеБезНДС,
	|	СУММА(Себестоимость.ПостатейныеПеременныеСНДС)    КАК ПостатейныеПеременныеСНДС,
	|	СУММА(Себестоимость.ПостатейныеПеременныеБезНДС)  КАК ПостатейныеПеременныеБезНДС,
	|	СУММА(Себестоимость.СтоимостьРегл)                КАК СтоимостьРегл,
	|	СУММА(Себестоимость.СтоимостьЗабалансоваяРегл)    КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(Себестоимость.ПостояннаяРазница)            КАК ПостояннаяРазница,
	|	СУММА(Себестоимость.ВременнаяРазница)             КАК ВременнаяРазница,
	|	СУММА(Себестоимость.СтоимостьНДД)                 КАК СтоимостьНДД,
	|	СУММА(Себестоимость.ДопРасходыРегл)               КАК ДопРасходыРегл,
	|	СУММА(Себестоимость.ТрудозатратыРегл)             КАК ТрудозатратыРегл,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеРегл)    КАК ПостатейныеПостоянныеРегл,
	|	СУММА(Себестоимость.ПостатейныеПеременныеРегл)    КАК ПостатейныеПеременныеРегл,
	|	СУММА(Себестоимость.СтоимостьУпр)    			  КАК СтоимостьУпр,
	|	СУММА(Себестоимость.ДопРасходыУпр)    			  КАК ДопРасходыУпр,
	|	СУММА(Себестоимость.ТрудозатратыУпр)    		  КАК ТрудозатратыУпр,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеУпр)     КАК ПостатейныеПостоянныеУпр,
	|	СУММА(Себестоимость.ПостатейныеПеременныеУпр)     КАК ПостатейныеПеременныеУпр
	|ПОМЕСТИТЬ ВтСуммыРеализацийПрошлыхПериодов
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Себестоимость
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРеализацииПрошлыхПериодов КАК Продажи
	|		ПО Продажи.Ссылка = Себестоимость.Регистратор
	|ГДЕ
	|	Себестоимость.Период < &НачалоПериода
	|	И Себестоимость.Организация В(&МассивОрганизаций)
	|	И Себестоимость.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И Себестоимость.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Регистратор,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.Организация,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА НЕ &ПартионныйУчетВерсии22
	|		 ИЛИ Себестоимость.Период < &ДатаПереходаНаПартионныйУчетВерсии22
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		КОГДА Себестоимость.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Себестоимость.ВидДеятельностиНДС
	|		ИНАЧЕ Себестоимость.КорВидДеятельностиНДС
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(Себестоимость.Количество) <> 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СебестоимостьПродаж.ДокументДвижения                  КАК Ссылка,
	|	СебестоимостьПродаж.АналитикаУчетаНоменклатуры        КАК АналитикаУчетаНоменклатуры,
	|	СебестоимостьПродаж.РазделУчета                       КАК РазделУчета,
	|	СебестоимостьПродаж.ВидЗапасов                        КАК ВидЗапасов,
	|	СебестоимостьПродаж.Организация               		  КАК Организация,
	|	СебестоимостьПродаж.Партия                            КАК Партия,
	|	СебестоимостьПродаж.АналитикаУчетаПартий              КАК АналитикаУчетаПартий,
	|	СебестоимостьПродаж.АналитикаФинансовогоУчета         КАК АналитикаФинансовогоУчета,
	|	СебестоимостьПродаж.ВидДеятельностиНДС                КАК ВидДеятельностиНДС,
	|
	|	СУММА(СебестоимостьПродаж.ДопРасходы)             	  КАК ДопРасходы,
	|	СУММА(СебестоимостьПродаж.ДопРасходыБезНДС)       	  КАК ДопРасходыБезНДС,
	|	СУММА(СебестоимостьПродаж.ДопРасходыРегл)             КАК ДопРасходыРегл,
	|	СУММА(СебестоимостьПродаж.ДопРасходыУпр)    		  КАК ДопРасходыУпр
	|
	|ПОМЕСТИТЬ ВтСуммыДопРасходовПрошлыхПериодов
	|ИЗ (
	|	ВЫБРАТЬ
	|		СебестоимостьПродаж.ДокументДвижения,
	|		СебестоимостьПродаж.АналитикаУчетаНоменклатуры,
	|		СебестоимостьПродаж.РазделУчета,
	|		СебестоимостьПродаж.ВидЗапасов,
	|		АналитикаПартнеров.Организация,
	|		СебестоимостьПродаж.Партия,
	|		СебестоимостьПродаж.АналитикаУчетаПартий,
	|		СебестоимостьПродаж.АналитикаФинансовогоУчета,
	|		СебестоимостьПродаж.ВидДеятельностиНДС,
	|
	|		СебестоимостьПродаж.ДопРасходы,
	|		СебестоимостьПродаж.ДопРасходыБезНДС,
	|		СебестоимостьПродаж.ДопРасходыРегл,
	|		СебестоимостьПродаж.ДопРасходыУпр
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК СебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК АналитикаПартнеров
	|			ПО СебестоимостьПродаж.АналитикаУчетаПоПартнерам = АналитикаПартнеров.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРеализацииПрошлыхПериодов КАК Продажи
	|			ПО Продажи.Ссылка = СебестоимостьПродаж.ДокументДвижения
	|	ГДЕ
	|		СебестоимостьПродаж.Период < &НачалоПериода
	|		И АналитикаПартнеров.Организация В(&МассивОрганизаций)
	|		И СебестоимостьПродаж.РасчетПартий
	|		И СебестоимостьПродаж.Активность
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		СебестоимостьПродаж.ДокументДвижения,
	|		СебестоимостьПродаж.АналитикаУчетаНоменклатуры,
	|		СебестоимостьПродаж.РазделУчета,
	|		СебестоимостьПродаж.ВидЗапасов,
	|		АналитикаПартнеров.Организация,
	|		СебестоимостьПродаж.Партия,
	|		СебестоимостьПродаж.АналитикаУчетаПартий,
	|		СебестоимостьПродаж.АналитикаФинансовогоУчета,
	|		СебестоимостьПродаж.ВидДеятельностиНДС,
	|
	|		СебестоимостьПродаж.ДопРасходы,
	|		СебестоимостьПродаж.ДопРасходыБезНДС,
	|		СебестоимостьПродаж.ДопРасходыРегл,
	|		СебестоимостьПродаж.ДопРасходыУпр
	|	ИЗ
	|		ВТКэшРасчетныеОборотыВыручкаИСебестоимостьПродаж КАК СебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК АналитикаПартнеров
	|			ПО СебестоимостьПродаж.АналитикаУчетаПоПартнерам = АналитикаПартнеров.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРеализацииПрошлыхПериодов КАК Продажи
	|			ПО Продажи.Ссылка = СебестоимостьПродаж.ДокументДвижения
	|	ГДЕ
	|		СебестоимостьПродаж.РасчетПартий
	|
	|	) КАК СебестоимостьПродаж
	|СГРУППИРОВАТЬ ПО
	|	СебестоимостьПродаж.ДокументДвижения,
	|	СебестоимостьПродаж.АналитикаУчетаНоменклатуры,
	|	СебестоимостьПродаж.РазделУчета,
	|	СебестоимостьПродаж.ВидЗапасов,
	|	СебестоимостьПродаж.Организация,
	|	СебестоимостьПродаж.Партия,
	|	СебестоимостьПродаж.АналитикаУчетаПартий,
	|	СебестоимостьПродаж.АналитикаФинансовогоУчета,
	|	СебестоимостьПродаж.ВидДеятельностиНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выручка.Регистратор,
	|	Выручка.АналитикаУчетаНоменклатуры,
	|	СпрКлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	СпрКлючиАналитикиУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	СпрКлючиАналитикиУчетаНоменклатуры.Серия КАК Серия,
	|	СпрКлючиАналитикиУчетаНоменклатуры.Назначение КАК Назначение,
	|	Выручка.ВидЗапасов,
	|	Выручка.ЗаказКлиента,
	|	МАКСИМУМ(Выручка.Соглашение) КАК Соглашение,
	|	МАКСИМУМ(Выручка.Менеджер) КАК Менеджер,
	|	МАКСИМУМ(Выручка.Склад) КАК Склад,
	|	МАКСИМУМ(Выручка.АналитикаУчетаНаборов) КАК АналитикаУчетаНаборов,
	|	МАКСИМУМ(Выручка.НаправлениеДеятельностиКонтрагента) КАК НаправлениеДеятельностиКонтрагента,
	|	МАКСИМУМ(Выручка.НаправлениеДеятельностиНоменклатуры) КАК НаправлениеДеятельностиНоменклатуры,
	|	МАКСИМУМ(Выручка.НалогообложениеНДС) КАК НалогообложениеНДС,
	|	МАКСИМУМ(Выручка.ВалютаВзаиморасчетов) КАК ВалютаВзаиморасчетов,
	|	МАКСИМУМ(Выручка.ВалютаДокумента) КАК ВалютаДокумента,
	|	МАКСИМУМ(Выручка.Договор) КАК Договор,
	|	МАКСИМУМ(Выручка.ИсточникГФУНоменклатуры) КАК ИсточникГФУНоменклатуры,
	|	МАКСИМУМ(Выручка.ИсточникГФУРасчетов) КАК ИсточникГФУРасчетов
	|ПОМЕСТИТЬ РеквизитыВыручки
	|ИЗ
	|	ВТКэшРасчетныеОборотыВыручкаИСебестоимостьПродаж КАК Выручка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК АналитикаПартнеров
	|	ПО Выручка.АналитикаУчетаПоПартнерам = АналитикаПартнеров.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиФинУчета КАК ВТУчетныеПолитикиФинУчета
	|	ПО АналитикаПартнеров.Организация = ВТУчетныеПолитикиФинУчета.Организация
	|		И ВТУчетныеПолитикиФинУчета.МетодОценкиСтоимостиТоваров <> ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СпрКлючиАналитикиУчетаНоменклатуры
	|		ПО Выручка.АналитикаУчетаНоменклатуры = СпрКлючиАналитикиУчетаНоменклатуры.Ссылка
	|ГДЕ
	|	Выручка.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов)
	|СГРУППИРОВАТЬ ПО
	|	Выручка.Регистратор,
	|	Выручка.АналитикаУчетаНоменклатуры,
	|	Выручка.ВидЗапасов,
	|	Выручка.ЗаказКлиента,
	|	СпрКлючиАналитикиУчетаНоменклатуры.Номенклатура,
	|	СпрКлючиАналитикиУчетаНоменклатуры.Характеристика,
	|	СпрКлючиАналитикиУчетаНоменклатуры.Серия,
	|	СпрКлючиАналитикиУчетаНоменклатуры.Назначение
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Движения.Регистратор,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов,
	|	МАКСИМУМ(Движения.Склад) КАК Склад,
	|	МАКСИМУМ(Движения.ИсточникГФУНоменклатуры) КАК ИсточникГФУНоменклатуры
	|ПОМЕСТИТЬ РеквизитыДвиженияНоменклатураДоходыРасходы
	|ИЗ
	|	РегистрНакопления.ДвиженияНоменклатураДоходыРасходы КАК Движения
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиФинУчета КАК ВТУчетныеПолитикиФинУчета
	|	ПО Движения.Организация = ВТУчетныеПолитикиФинУчета.Организация
	|		И ВТУчетныеПолитикиФинУчета.МетодОценкиСтоимостиТоваров <> ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|ГДЕ
	|	Движения.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Движения.Организация В(&МассивОрганизаций)
	|	И Движения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)
	|	И НЕ Движения.РасчетСебестоимости
	|	И Движения.Активность
	|СГРУППИРОВАТЬ ПО
	|	Движения.Регистратор,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реестр.Ссылка КАК Ссылка,
	|	МАКСИМУМ(Реестр.ДатаДокументаИБ) КАК ДатаДокументаИБ
	|
	|ПОМЕСТИТЬ ВтДатыДокументовИсточников
	|ИЗ (
	|	ВЫБРАТЬ
	|		Реестр.Ссылка КАК Ссылка,
	|		Реестр.ДатаДокументаИБ
	|	ИЗ
	|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК УчетСебестоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиФинУчета КАК ВТУчетныеПолитикиФинУчета
	|		ПО УчетСебестоимости.Организация = ВТУчетныеПолитикиФинУчета.Организация
	|			И ВТУчетныеПолитикиФинУчета.МетодОценкиСтоимостиТоваров <> ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК Реестр
	|		ПО Реестр.Организация = УчетСебестоимости.Организация
	|			И Реестр.Ссылка = УчетСебестоимости.ДокументИсточник
	|			И УчетСебестоимости.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|			И (НЕ Реестр.ДополнительнаяЗапись ИЛИ Реестр.ТипСсылки В (&ДокументыСДвумяОрганизациями))
	|	ГДЕ
	|		НЕ УчетСебестоимости.СлужебноеВидДвиженияПриход
	|		И УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|		И УчетСебестоимости.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Реестр.Ссылка КАК Ссылка,
	|		Реестр.ДатаДокументаИБ
	|	ИЗ
	|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК УчетСебестоимости
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиФинУчета КАК ВТУчетныеПолитикиФинУчета
	|		ПО УчетСебестоимости.Организация = ВТУчетныеПолитикиФинУчета.Организация
	|			И ВТУчетныеПолитикиФинУчета.МетодОценкиСтоимостиТоваров <> ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК Реестр
	|		ПО Реестр.Организация = УчетСебестоимости.Организация
	|			И Реестр.Ссылка = УчетСебестоимости.ДокументИсточник
	|			И УчетСебестоимости.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|			И (НЕ Реестр.ДополнительнаяЗапись ИЛИ Реестр.ТипСсылки В (&ДокументыСДвумяОрганизациями))
	|	ГДЕ
	|		УчетСебестоимости.Сторно
	|		И УчетСебестоимости.ТипЗаписи В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода))
	|	) КАК Реестр
	|СГРУППИРОВАТЬ ПО
	|	Реестр.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Себестоимость.Период                              КАК Период,
	|	Себестоимость.Регистратор                         КАК Регистратор,
	|	ВЫБОР КОГДА Себестоимость.СлужебноеВидДвиженияПриход
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ                   						  КАК ВидДвижения,
	|	Себестоимость.АналитикаУчетаНоменклатуры          КАК АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета                         КАК РазделУчета,
	|	Себестоимость.ВидЗапасов                          КАК ВидЗапасов,
	|	Себестоимость.ВидЗапасов.ТипЗапасов               КАК ТипЗапасов,
	|	Себестоимость.Партия                          	  КАК Партия,
	|	Себестоимость.АналитикаУчетаПартий                КАК АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета           КАК АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС                  КАК ВидДеятельностиНДС,
	|	(ВЫБОР
	|		КОГДА Себестоимость.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Себестоимость.ВидДеятельностиНДС
	|		ИНАЧЕ Себестоимость.КорВидДеятельностиНДС
	|	КОНЕЦ)                                            КАК КорВидДеятельностиНДС,
	|
	// В кор. части могут быть данные об исходной аналитике продажи (если возврат идет на другой склад)
	|	ВЫБОР КОГДА Себестоимость.КорВидЗапасов <> Значение(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА
	|			Себестоимость.КорВидЗапасов
	|		ИНАЧЕ
	|			Себестоимость.ВидЗапасов
	|	КОНЕЦ                                             КАК ВидыЗапасовДляЦены,
	// В кор. части могут быть данные об исходном виде запасов продажи (в случае возврата проданного по Интеркампани товара)
	|	ВЫБОР КОГДА Себестоимость.КорАналитикаУчетаНоменклатуры <> Значение(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) ТОГДА
	|			Себестоимость.КорАналитикаУчетаНоменклатуры
	|		ИНАЧЕ
	|			Себестоимость.АналитикаУчетаНоменклатуры
	|	КОНЕЦ                                             КАК АналитикаНоменклатурыДляЦены,
	|
	|	СУММА(Себестоимость.Количество)                   КАК Количество,
	|
	|	СУММА(Себестоимость.Стоимость)                    КАК Стоимость,
	|	СУММА(Себестоимость.СтоимостьБезНДС)              КАК СтоимостьБезНДС,
	|	СУММА(Себестоимость.СтоимостьЗабалансовая)        КАК СтоимостьЗабалансовая,
	|
	|	СУММА(Себестоимость.ДопРасходы)             	  КАК ДопРасходы,
	|	СУММА(Себестоимость.ДопРасходыБезНДС)       	  КАК ДопРасходыБезНДС,
	|	СУММА(Себестоимость.Трудозатраты)       		  КАК Трудозатраты,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеСНДС)	  КАК ПостатейныеПостоянныеСНДС,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеБезНДС)  КАК ПостатейныеПостоянныеБезНДС,
	|	СУММА(Себестоимость.ПостатейныеПеременныеСНДС)	  КАК ПостатейныеПеременныеСНДС,
	|	СУММА(Себестоимость.ПостатейныеПеременныеБезНДС)  КАК ПостатейныеПеременныеБезНДС,
	|
	|	СУММА(Себестоимость.СтоимостьРегл)                КАК СтоимостьРегл,
	|	СУММА(Себестоимость.СтоимостьЗабалансоваяРегл)    КАК СтоимостьЗабалансоваяРегл,
	|
	|	СУММА(Себестоимость.ПостояннаяРазница)            КАК ПостояннаяРазница,
	|	СУММА(Себестоимость.ВременнаяРазница)             КАК ВременнаяРазница,
	|
	|	СУММА(Себестоимость.СтоимостьНДД)                 КАК СтоимостьНДД,
	|
	|	СУММА(Себестоимость.ДопРасходыРегл)               КАК ДопРасходыРегл,
	|	СУММА(Себестоимость.ТрудозатратыРегл)             КАК ТрудозатратыРегл,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеРегл)	  КАК ПостатейныеПостоянныеРегл,
	|	СУММА(Себестоимость.ПостатейныеПеременныеРегл)	  КАК ПостатейныеПеременныеРегл,
	
	|	СУММА(Себестоимость.СтоимостьУпр)	  			  КАК СтоимостьУпр,
	|	СУММА(Себестоимость.ДопРасходыУпр)	  			  КАК ДопРасходыУпр,
	|	СУММА(Себестоимость.ТрудозатратыУпр)	  		  КАК ТрудозатратыУпр,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеУпр)	  КАК ПостатейныеПостоянныеУпр,
	|	СУММА(Себестоимость.ПостатейныеПеременныеУпр)	  КАК ПостатейныеПеременныеУпр,
	|
	|	Себестоимость.ХозяйственнаяОперация               КАК ХозяйственнаяОперация,
	|	Себестоимость.КорАналитикаУчетаНоменклатуры       КАК КорАналитикаУчетаНоменклатуры,
	|	Себестоимость.КорРазделУчета                      КАК КорРазделУчета,
	|	Себестоимость.КорВидЗапасов                       КАК КорВидЗапасов,
	|	Себестоимость.КорВидЗапасов.ТипЗапасов            КАК КорТипЗапасов,
	|	Себестоимость.АналитикаУчетаПоПартнерам           КАК АналитикаУчетаПоПартнерам,
	|	Себестоимость.ЗаказКлиента                        КАК ЗаказКлиента,
	|	Себестоимость.Подразделение                       КАК Подразделение,
	|	Себестоимость.Организация                         КАК Организация,
	|	Себестоимость.КорОрганизация                      КАК КорОрганизация,
	|	Себестоимость.ПериодПродажи                       КАК ПериодПродажи,
	|	ЕСТЬNULL(СторноОтчетыКомиссионера.Период,
	|		НАЧАЛОПЕРИОДА(Себестоимость.ПериодПродажи, МЕСЯЦ)) КАК ПериодРеализации,
	|	Себестоимость.АналитикаРасходов                   КАК АналитикаРасходов,
	|	Себестоимость.СтатьяРасходовСписания              КАК СтатьяРасходовСписания,
	|	Себестоимость.СтатьяДоходов                       КАК СтатьяДоходов,
	|	Себестоимость.АналитикаДоходов                    КАК АналитикаДоходов,
	|	Себестоимость.ГруппаПродукции                     КАК ГруппаПродукции,
	|	Себестоимость.ИдентификаторСтроки                 КАК ИдентификаторСтроки,
	|	Себестоимость.КодСтроки                 		  КАК КодСтроки,
	|	Себестоимость.КорПартия                 		  КАК КорПартия,
	|	Себестоимость.КорАналитикаУчетаПартий             КАК КорАналитикаУчетаПартий,
	|	Себестоимость.КорАналитикаФинансовогоУчета        КАК КорАналитикаФинансовогоУчета,
	|	Себестоимость.НДСРегл                 			  КАК НДСРегл,
	|	Себестоимость.НДСУпр                 			  КАК НДСУпр,
	|	Себестоимость.СтатьяКалькуляции                   КАК СтатьяКалькуляции,
	|	Себестоимость.ТипЗаписи                 		  КАК ТипЗаписи,
	|	Себестоимость.ДокументИсточник                 	  КАК ДокументИсточник,
	|	Себестоимость.НастройкаХозяйственнойОперации      КАК НастройкаХозяйственнойОперации,
	|	Себестоимость.ИдентификаторФинЗаписи              КАК ИдентификаторФинЗаписи,
	|	ЕСТЬNULL(РеквизитыВыручки.Соглашение, НЕОПРЕДЕЛЕНО) КАК Соглашение,
	|	ЕСТЬNULL(РеквизитыВыручки.Менеджер, НЕОПРЕДЕЛЕНО) КАК Менеджер,
	|	(ВЫБОР
	|		КОГДА НЕ СторноСписанияНаРасходы.Склад ЕСТЬ NULL
	|			ТОГДА РеквизитыДвиженияНоменклатураДоходыРасходы.Склад
	|		ИНАЧЕ ЕСТЬNULL(РеквизитыВыручки.Склад, НЕОПРЕДЕЛЕНО) КОНЕЦ) КАК Склад,
	|	ЕСТЬNULL(РеквизитыВыручки.АналитикаУчетаНаборов, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНаборов,
	|	ЕСТЬNULL(РеквизитыВыручки.НаправлениеДеятельностиКонтрагента, НЕОПРЕДЕЛЕНО) КАК НаправлениеДеятельностиКонтрагента,
	|	ЕСТЬNULL(РеквизитыВыручки.НаправлениеДеятельностиНоменклатуры, НЕОПРЕДЕЛЕНО) КАК НаправлениеДеятельностиНоменклатуры,
	|	ЕСТЬNULL(РеквизитыВыручки.НалогообложениеНДС, НЕОПРЕДЕЛЕНО) КАК НалогообложениеНДС,
	|	ЕСТЬNULL(РеквизитыВыручки.Договор, НЕОПРЕДЕЛЕНО) КАК Договор,
	|	ЕСТЬNULL(РеквизитыВыручки.ВалютаВзаиморасчетов, НЕОПРЕДЕЛЕНО) КАК ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(РеквизитыВыручки.ВалютаДокумента, НЕОПРЕДЕЛЕНО) КАК ВалютаДокумента,
	|	(ВЫБОР
	|		КОГДА НЕ СторноСписанияНаРасходы.Склад ЕСТЬ NULL
	|			ТОГДА РеквизитыДвиженияНоменклатураДоходыРасходы.ИсточникГФУНоменклатуры
	|		ИНАЧЕ ЕСТЬNULL(РеквизитыВыручки.ИсточникГФУНоменклатуры, НЕОПРЕДЕЛЕНО) КОНЕЦ) КАК ИсточникГФУНоменклатуры,
	|	ЕСТЬNULL(РеквизитыВыручки.ИсточникГФУРасчетов, НЕОПРЕДЕЛЕНО) КАК ИсточникГФУРасчетов,
	|
	|	ВЫБОР КОГДА Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|	  И Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов)
	|	  И (НЕ &ПартионныйУчетВерсии22 ИЛИ Себестоимость.ПериодПродажи < &ДатаПереходаНаПартионныйУчетВерсии22)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ											  КАК ПоЦенеПродажи,
	|	ВЫБОР КОГДА Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|	  И Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов)
	|	  И &ПартионныйУчетВерсии22
	|	  И Себестоимость.ПериодПродажи > &ДатаПереходаНаПартионныйУчетВерсии22
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ											  КАК ПоЦенеПродажи22
	|ПОМЕСТИТЬ ВтВозвратыПрошлыхПериодов
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиФинУчета КАК ВТУчетныеПолитикиФинУчета
	|	ПО Себестоимость.Организация = ВТУчетныеПолитикиФинУчета.Организация
	|		И ВТУчетныеПолитикиФинУчета.МетодОценкиСтоимостиТоваров <> ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК СторноСписанияНаРасходы
	|		ПО СторноСписанияНаРасходы.Ссылка = Себестоимость.Регистратор
	|	ЛЕВОЕ СОЕДИНЕНИЕ СторноОтчетыКомиссионера КАК СторноОтчетыКомиссионера
	|		ПО СторноОтчетыКомиссионера.АналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
	|		И СторноОтчетыКомиссионера.РазделУчета = Себестоимость.РазделУчета
	|		И СторноОтчетыКомиссионера.ВидЗапасов = Себестоимость.ВидЗапасов
	|		И СторноОтчетыКомиссионера.Организация = Себестоимость.Организация
	|		И Себестоимость.Количество < 0
	|		И Себестоимость.ДокументИсточник = НЕОПРЕДЕЛЕНО
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК СпрКлючиАналитикиУчетаНоменклатуры_Себестоимость
	|		ПО СпрКлючиАналитикиУчетаНоменклатуры_Себестоимость.Ссылка = Себестоимость.АналитикаУчетаНоменклатуры
	|	ЛЕВОЕ СОЕДИНЕНИЕ РеквизитыВыручки КАК РеквизитыВыручки
	|		ПО РеквизитыВыручки.Регистратор = Себестоимость.Регистратор
	|		И РеквизитыВыручки.Номенклатура = СпрКлючиАналитикиУчетаНоменклатуры_Себестоимость.Номенклатура
	|		И РеквизитыВыручки.Характеристика = СпрКлючиАналитикиУчетаНоменклатуры_Себестоимость.Характеристика
	|		И РеквизитыВыручки.Серия = СпрКлючиАналитикиУчетаНоменклатуры_Себестоимость.Серия
	|		И РеквизитыВыручки.Назначение = СпрКлючиАналитикиУчетаНоменклатуры_Себестоимость.Назначение
	|		И (РеквизитыВыручки.ВидЗапасов = Себестоимость.ВидЗапасов
	|			ИЛИ РеквизитыВыручки.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
	|		И РеквизитыВыручки.ЗаказКлиента = Себестоимость.ЗаказКлиента
	|	ЛЕВОЕ СОЕДИНЕНИЕ РеквизитыДвиженияНоменклатураДоходыРасходы КАК РеквизитыДвиженияНоменклатураДоходыРасходы
	|		ПО РеквизитыДвиженияНоменклатураДоходыРасходы.Регистратор = Себестоимость.Регистратор
	|		И РеквизитыДвиженияНоменклатураДоходыРасходы.АналитикаУчетаНоменклатуры = Себестоимость.АналитикаУчетаНоменклатуры
	|		И РеквизитыДвиженияНоменклатураДоходыРасходы.ВидЗапасов = Себестоимость.ВидЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДатыДокументовИсточников КАК Реестр
	|		ПО Реестр.Ссылка = Себестоимость.ДокументИсточник
	|	ЛЕВОЕ СОЕДИНЕНИЕ РассчитанныеДокументы КАК РассчитанныеДокументы
	|		ПО РассчитанныеДокументы.Период = Себестоимость.Период
	|		И РассчитанныеДокументы.Регистратор = Себестоимость.Регистратор
	|ГДЕ
	|	((Себестоимость.СлужебноеВидДвиженияПриход
	|		И Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов))
	|		ИЛИ (Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|			И НЕ СторноОтчетыКомиссионера.Период ЕСТЬ NULL)
	|		ИЛИ (НЕ Себестоимость.СлужебноеВидДвиженияПриход
	|			И Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|			И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
	|			И Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|			И Реестр.ДатаДокументаИБ < &НачалоПериода)
	|		ИЛИ (НЕ Себестоимость.СлужебноеВидДвиженияПриход
	|			И Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|			И Себестоимость.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
	|			И Себестоимость.ДокументИсточник = НЕОПРЕДЕЛЕНО
	// ПериодРеализации должен быть заполнен, чтобы сформировались суммовые движения по возврату
	|			И ЕСТЬNULL(СторноОтчетыКомиссионера.Период,
	|				НАЧАЛОПЕРИОДА(Себестоимость.ПериодПродажи, МЕСЯЦ)) <> ДАТАВРЕМЯ(1,1,1,0,0,0)
	|			И Себестоимость.ПериодПродажи < &НачалоПериода)
	|	)
	|	И НЕ Себестоимость.РасчетСебестоимости
	// Для записей "Сторно" стоимость определяется в процедуре СкорректироватьСтоимостьСторноДвиженийИсправленныхДокументов() 
	|	И НЕ Себестоимость.Сторно
	// При предварительном расчете исключаем документы, для которых сохранены ранее рассчитанные движения
	|	И РассчитанныеДокументы.Регистратор ЕСТЬ NULL
	|	
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Период,
	|	ВЫБОР КОГДА Себестоимость.СлужебноеВидДвиженияПриход
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.ВидЗапасов,
	|	Себестоимость.ВидЗапасов.ТипЗапасов,
	|	Себестоимость.Подразделение,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|	(ВЫБОР
	|		КОГДА Себестоимость.КорВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ТОГДА Себестоимость.ВидДеятельностиНДС
	|		ИНАЧЕ Себестоимость.КорВидДеятельностиНДС
	|	КОНЕЦ),
	|	ВЫБОР КОГДА Себестоимость.КорАналитикаУчетаНоменклатуры <> Значение(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|		ТОГДА Себестоимость.КорАналитикаУчетаНоменклатуры
	|	ИНАЧЕ Себестоимость.АналитикаУчетаНоменклатуры КОНЕЦ,
	|	ВЫБОР КОГДА Себестоимость.КорВидЗапасов <> Значение(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА
	|			Себестоимость.КорВидЗапасов
	|		ИНАЧЕ
	|			Себестоимость.ВидЗапасов
	|	КОНЕЦ,
	|	Себестоимость.КорАналитикаУчетаНоменклатуры,
	|	Себестоимость.ЗаказКлиента,
	|	Себестоимость.АналитикаУчетаПоПартнерам,
	|	Себестоимость.ХозяйственнаяОперация,
	|	Себестоимость.КорРазделУчета,
	|	Себестоимость.КорВидЗапасов,
	|	Себестоимость.КорВидЗапасов.ТипЗапасов,
	|	Себестоимость.ПериодПродажи,
	|	ЕСТЬNULL(СторноОтчетыКомиссионера.Период,
	|		НАЧАЛОПЕРИОДА(Себестоимость.ПериодПродажи, МЕСЯЦ)),
	|	Себестоимость.Организация,
	|	Себестоимость.КорОрганизация,
	|	Себестоимость.АналитикаРасходов,
	|	Себестоимость.СтатьяРасходовСписания,
	|	Себестоимость.СтатьяДоходов,
	|	Себестоимость.АналитикаДоходов,
	|	Себестоимость.ГруппаПродукции,
	|	Себестоимость.Регистратор,
	|	Себестоимость.ИдентификаторСтроки,
	|	Себестоимость.КодСтроки,
	|	Себестоимость.КорПартия,
	|	Себестоимость.КорАналитикаУчетаПартий,
	|	Себестоимость.КорАналитикаФинансовогоУчета,
	|	Себестоимость.НДСРегл,
	|	Себестоимость.НДСУпр,
	|	Себестоимость.СтатьяКалькуляции,
	|	Себестоимость.ТипЗаписи,
	|	Себестоимость.ДокументИсточник,
	|	Себестоимость.НастройкаХозяйственнойОперации,
	|	Себестоимость.ИдентификаторФинЗаписи,
	|	ЕСТЬNULL(РеквизитыВыручки.Соглашение, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(РеквизитыВыручки.Менеджер, НЕОПРЕДЕЛЕНО),
	|	(ВЫБОР
	|		КОГДА НЕ СторноСписанияНаРасходы.Склад ЕСТЬ NULL
	|			ТОГДА РеквизитыДвиженияНоменклатураДоходыРасходы.Склад
	|		ИНАЧЕ ЕСТЬNULL(РеквизитыВыручки.Склад, НЕОПРЕДЕЛЕНО) КОНЕЦ), // Склад
	|	ЕСТЬNULL(РеквизитыВыручки.АналитикаУчетаНаборов, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(РеквизитыВыручки.НаправлениеДеятельностиКонтрагента, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(РеквизитыВыручки.НаправлениеДеятельностиНоменклатуры, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(РеквизитыВыручки.НалогообложениеНДС, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(РеквизитыВыручки.Договор, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(РеквизитыВыручки.ВалютаВзаиморасчетов, НЕОПРЕДЕЛЕНО),
	|	ЕСТЬNULL(РеквизитыВыручки.ВалютаДокумента, НЕОПРЕДЕЛЕНО),
	|	(ВЫБОР
	|		КОГДА НЕ СторноСписанияНаРасходы.Склад ЕСТЬ NULL
	|			ТОГДА РеквизитыДвиженияНоменклатураДоходыРасходы.ИсточникГФУНоменклатуры
	|		ИНАЧЕ ЕСТЬNULL(РеквизитыВыручки.ИсточникГФУНоменклатуры, НЕОПРЕДЕЛЕНО) КОНЕЦ), // ИсточникГФУНоменклатуры
	|	ЕСТЬNULL(РеквизитыВыручки.ИсточникГФУРасчетов, НЕОПРЕДЕЛЕНО),
	|	ВЫБОР КОГДА Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|	  И Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов)
	|	  И (НЕ &ПартионныйУчетВерсии22 ИЛИ Себестоимость.ПериодПродажи < &ДатаПереходаНаПартионныйУчетВерсии22)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР КОГДА Себестоимость.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|	  И Себестоимость.ХозяйственнаяОперация В (&МассивОперацийВозвратыПрошлыхПериодов)
	|	  И &ПартионныйУчетВерсии22
	|	  И Себестоимость.ПериодПродажи > &ДатаПереходаНаПартионныйУчетВерсии22
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|;";
	#КонецОбласти
	
#Область ВтДанныеТаблицаКорректировки
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ТаблицаВозвратов.Период                        КАК Период,
	|	ТаблицаВозвратов.Регистратор                   КАК Регистратор,
	|	ТаблицаВозвратов.Регистратор                   КАК ДокументДвижения,
	|	ТаблицаВозвратов.ВидДвижения                   КАК ВидДвижения,
	|	ТаблицаВозвратов.Организация                   КАК Организация,
	|	ТаблицаВозвратов.КорОрганизация                КАК КорОрганизация,
	|	ТаблицаВозвратов.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВозвратов.РазделУчета                   КАК РазделУчета,
	|	ТаблицаВозвратов.ВидЗапасов                    КАК ВидЗапасов,
	|	ТаблицаВозвратов.Партия                        КАК Партия,
	|	ТаблицаВозвратов.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	ТаблицаВозвратов.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	ТаблицаВозвратов.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	(ВЫБОР
	|		КОГДА Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		 И НЕ Аналитика.Номенклатура.ПрослеживаемыйТовар
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаВозвратов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) КОНЕЦ) КАК ТипЗапасов,
	|	ТаблицаВозвратов.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ТаблицаВозвратов.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВозвратов.КорРазделУчета                КАК КорРазделУчета,
	|	ТаблицаВозвратов.КорВидЗапасов                 КАК КорВидЗапасов,
	|	ТаблицаВозвратов.ТипЗапасов                    КАК КорТипЗапасов,
	|	ТаблицаВозвратов.АналитикаУчетаПоПартнерам     КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаВозвратов.ЗаказКлиента                  КАК ЗаказКлиента,
	|	ТаблицаВозвратов.Подразделение                 КАК Подразделение,
	|	ТаблицаВозвратов.ПериодРеализации              КАК ПериодРеализации,
	|	ТаблицаВозвратов.АналитикаДоходов              КАК АналитикаДоходов,
	|	ТаблицаВозвратов.СтатьяДоходов                 КАК СтатьяДоходов,
	|	ТаблицаВозвратов.АналитикаРасходов             КАК АналитикаРасходов,
	|	ТаблицаВозвратов.СтатьяРасходовСписания        КАК СтатьяРасходовСписания,
	|	ТаблицаВозвратов.ГруппаПродукции               КАК ГруппаПродукции,
	|	ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(Назначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК КорНаправлениеДеятельности,
	//++ Локализация


	//-- Локализация
	|	ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовУпр, НЕОПРЕДЕЛЕНО) КАК ВариантРаспределенияРасходовУпр,
	|	ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходовРегл, НЕОПРЕДЕЛЕНО) КАК ВариантРаспределенияРасходовРегл,
	|	ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ЛОЖЬ) КАК ПринятиеКНалоговомуУчету,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяАктивовПассивов,
	|	ТаблицаВозвратов.ИдентификаторСтроки           КАК ИдентификаторСтроки,
	|	ТаблицаВозвратов.КодСтроки                 	   КАК КодСтроки,
	|	ТаблицаВозвратов.Менеджер                      КАК Менеджер,
	|	ТаблицаВозвратов.Склад                         КАК Склад,
	|	ТаблицаВозвратов.Соглашение                    КАК Соглашение,
	|	ТаблицаВозвратов.Договор                       КАК Договор,
	|	ТаблицаВозвратов.АналитикаУчетаНаборов         КАК АналитикаУчетаНаборов,
	|	ТаблицаВозвратов.НаправлениеДеятельностиКонтрагента КАК НаправлениеДеятельностиКонтрагента,
	|	ТаблицаВозвратов.НаправлениеДеятельностиНоменклатуры КАК НаправлениеДеятельностиНоменклатуры,
	|	ТаблицаВозвратов.НалогообложениеНДС            КАК НалогообложениеНДС,
	|	ТаблицаВозвратов.ВалютаВзаиморасчетов          КАК ВалютаВзаиморасчетов,
	|	ТаблицаВозвратов.ВалютаДокумента               КАК ВалютаДокумента,
	|	ТаблицаВозвратов.ИсточникГФУНоменклатуры       КАК ИсточникГФУНоменклатуры,
	|	ТаблицаВозвратов.ИсточникГФУРасчетов           КАК ИсточникГФУРасчетов,
	|	ТаблицаВозвратов.ПериодПродажи                 КАК ПериодПродажи,
	|	ТаблицаВозвратов.КорПартия                     КАК КорПартия,
	|	ТаблицаВозвратов.КорАналитикаУчетаПартий       КАК КорАналитикаУчетаПартий,
	|	ТаблицаВозвратов.КорАналитикаФинансовогоУчета  КАК КорАналитикаФинансовогоУчета,
	|	ТаблицаВозвратов.КорВидДеятельностиНДС         КАК КорВидДеятельностиНДС,
	|	ТаблицаВозвратов.НДСРегл                       КАК НДСРегл,
	|	ТаблицаВозвратов.НДСУпр                        КАК НДСУпр,
	|	ТаблицаВозвратов.СтатьяКалькуляции             КАК СтатьяКалькуляции,
	|	ТаблицаВозвратов.ТипЗаписи                     КАК ТипЗаписи,
	|	ТаблицаВозвратов.ДокументИсточник              КАК ДокументИсточник,
	|	ТаблицаВозвратов.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ТаблицаВозвратов.ИдентификаторФинЗаписи        КАК ИдентификаторФинЗаписи,
	|	ЛОЖЬ                                           КАК Сторно,
	|	0                                              КАК КорСтоимость,
	|
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.Стоимость / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.Стоимость / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.Стоимость
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.Стоимость КАК ЧИСЛО(31,2)) 							КАК Стоимость,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.СтоимостьБезНДС / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.СтоимостьБезНДС / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.СтоимостьБезНДС
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.СтоимостьБезНДС КАК ЧИСЛО(31,2)) 					КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.СтоимостьЗабалансовая / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.СтоимостьЗабалансовая / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.СтоимостьЗабалансовая
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.СтоимостьЗабалансовая КАК ЧИСЛО(31,2)) 				КАК СтоимостьЗабалансовая,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ДопРасходы / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА (СтоимостиПродаж22.ДопРасходы + ЕСТЬNULL(СуммыДопРасходов.ДопРасходы, 0)) / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.СтоимостьДопРасходы
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ДопРасходы КАК ЧИСЛО(31,2)) 						КАК ДопРасходы,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ДопРасходыБезНДС / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА (СтоимостиПродаж22.ДопРасходыБезНДС + ЕСТЬNULL(СуммыДопРасходов.ДопРасходыБезНДС, 0)) / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.СтоимостьДопРасходыБезНДС
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ДопРасходыБезНДС КАК ЧИСЛО(31,2)) 					КАК ДопРасходыБезНДС,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.Трудозатраты / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.Трудозатраты / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.Трудозатраты
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.Трудозатраты КАК ЧИСЛО(31,2)) 						КАК Трудозатраты,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостатейныеПостоянныеСНДС / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостатейныеПостоянныеСНДС / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостатейныеПостоянныеСНДС
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостатейныеПостоянныеСНДС КАК ЧИСЛО(31,2)) 			КАК ПостатейныеПостоянныеСНДС,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостатейныеПостоянныеБезНДС / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостатейныеПостоянныеБезНДС / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостатейныеПостоянныеБезНДС
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостатейныеПостоянныеБезНДС КАК ЧИСЛО(31,2)) 		КАК ПостатейныеПостоянныеБезНДС,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостатейныеПеременныеСНДС / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостатейныеПеременныеСНДС / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостатейныеПеременныеСНДС
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостатейныеПеременныеСНДС КАК ЧИСЛО(31,2)) 			КАК ПостатейныеПеременныеСНДС,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостатейныеПеременныеБезНДС / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостатейныеПеременныеБезНДС / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостатейныеПеременныеБезНДС
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостатейныеПеременныеБезНДС КАК ЧИСЛО(31,2)) 		КАК ПостатейныеПеременныеБезНДС,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.СтоимостьРегл / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.СтоимостьРегл / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.СтоимостьРегл
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.СтоимостьРегл КАК ЧИСЛО(31,2)) 						КАК СтоимостьРегл,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.СтоимостьЗабалансоваяРегл / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.СтоимостьЗабалансоваяРегл / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.СтоимостьЗабалансоваяРегл
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.СтоимостьЗабалансоваяРегл КАК ЧИСЛО(31,2)) 			КАК СтоимостьЗабалансоваяРегл,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостояннаяРазница / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостояннаяРазница / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостояннаяРазница
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостояннаяРазница КАК ЧИСЛО(31,2)) 					КАК ПостояннаяРазница,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ВременнаяРазница / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ВременнаяРазница / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ВременнаяРазница
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ВременнаяРазница КАК ЧИСЛО(31,2)) 					КАК ВременнаяРазница,
	|	ВЫРАЗИТЬ(ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.СтоимостьНДД / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.СтоимостьНДД / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.СтоимостьНДД
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.СтоимостьНДД КАК ЧИСЛО(31,2)) 						КАК СтоимостьНДД,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ДопРасходыРегл / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА (СтоимостиПродаж22.ДопРасходыРегл + ЕСТЬNULL(СуммыДопРасходов.ДопРасходыРегл, 0)) / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ДопРасходыРегл
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ДопРасходыРегл КАК ЧИСЛО(31,2)) 					КАК ДопРасходыРегл,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ТрудозатратыРегл / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ТрудозатратыРегл / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ТрудозатратыРегл
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ТрудозатратыРегл КАК ЧИСЛО(31,2)) 					КАК ТрудозатратыРегл,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостатейныеПостоянныеРегл / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостатейныеПостоянныеРегл / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостатейныеПостоянныеРегл
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостатейныеПостоянныеРегл КАК ЧИСЛО(31,2)) 			КАК ПостатейныеПостоянныеРегл,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостатейныеПеременныеРегл / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостатейныеПеременныеРегл / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостатейныеПеременныеРегл
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостатейныеПеременныеРегл КАК ЧИСЛО(31,2)) 			КАК ПостатейныеПеременныеРегл,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.СтоимостьУпр / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.СтоимостьУпр / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.СтоимостьУпр
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.СтоимостьУпр КАК ЧИСЛО(31,2)) 						КАК СтоимостьУпр,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ДопРасходыУпр / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА (СтоимостиПродаж22.ДопРасходыУпр + ЕСТЬNULL(СуммыДопРасходов.ДопРасходыУпр, 0)) / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ДопРасходыУпр
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ДопРасходыУпр КАК ЧИСЛО(31,2)) 						КАК ДопРасходыУпр,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ТрудозатратыУпр / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ТрудозатратыУпр / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ТрудозатратыУпр
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ТрудозатратыУпр КАК ЧИСЛО(31,2)) 					КАК ТрудозатратыУпр,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостатейныеПостоянныеУпр / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостатейныеПостоянныеУпр / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостатейныеПостоянныеУпр
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостатейныеПостоянныеУпр КАК ЧИСЛО(31,2)) 			КАК ПостатейныеПостоянныеУпр,
	|	ВЫРАЗИТЬ(
	|		ВЫБОР КОГДА ТаблицаВозвратов.ПоЦенеПродажи И НЕ СтоимостиПродаж.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж.ПостатейныеПеременныеУпр / СтоимостиПродаж.Количество
	|		КОГДА ТаблицаВозвратов.ПоЦенеПродажи22 И НЕ СтоимостиПродаж22.Ссылка ЕСТЬ NULL
	|			ТОГДА СтоимостиПродаж22.ПостатейныеПеременныеУпр / СтоимостиПродаж22.Количество
	|			ИНАЧЕ СтоимостьТоваров.ПостатейныеПеременныеУпр
	|		КОНЕЦ * ТаблицаВозвратов.Количество
	|		- ТаблицаВозвратов.ПостатейныеПеременныеУпр КАК ЧИСЛО(31,2)) 			КАК ПостатейныеПеременныеУпр,
	|	0 КАК РезервПодОбесценениеРегл,
	|	0 КАК РезервПодОбесценениеУпр
	|
	|ПОМЕСТИТЬ ВтДанныеТаблицаКорректировки
	|ИЗ
	|	ВтВозвратыПрошлыхПериодов КАК ТаблицаВозвратов
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыРеализацийПрошлыхПериодов КАК СтоимостиПродаж
	|		ПО ТаблицаВозвратов.ПоЦенеПродажи
	|			И ТаблицаВозвратов.ДокументИсточник          	= СтоимостиПродаж.Ссылка
	|			И ТаблицаВозвратов.АналитикаНоменклатурыДляЦены = СтоимостиПродаж.АналитикаУчетаНоменклатуры
	|			И (ТаблицаВозвратов.ВидыЗапасовДляЦены        	= СтоимостиПродаж.ВидЗапасов
	|				ИЛИ СтоимостиПродаж.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
	|			И ТаблицаВозвратов.Организация               	= СтоимостиПродаж.Организация
	|			И ТаблицаВозвратов.РазделУчета               	= СтоимостиПродаж.РазделУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыРеализацийПрошлыхПериодов КАК СтоимостиПродаж22
	|		ПО ТаблицаВозвратов.ПоЦенеПродажи22
	|			И ТаблицаВозвратов.ДокументИсточник          	= СтоимостиПродаж22.Ссылка
	|			И ТаблицаВозвратов.АналитикаНоменклатурыДляЦены = СтоимостиПродаж22.АналитикаУчетаНоменклатуры
	|			И (ТаблицаВозвратов.ВидыЗапасовДляЦены        	= СтоимостиПродаж22.ВидЗапасов
	|				ИЛИ СтоимостиПродаж22.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
	|			И ТаблицаВозвратов.Организация               	= СтоимостиПродаж22.Организация
	|			И ТаблицаВозвратов.РазделУчета               	= СтоимостиПродаж22.РазделУчета
	|			И ТаблицаВозвратов.Партия               		= СтоимостиПродаж22.Партия
	|			И ТаблицаВозвратов.АналитикаУчетаПартий         = СтоимостиПродаж22.АналитикаУчетаПартий
	|			И ТаблицаВозвратов.АналитикаФинансовогоУчета    = СтоимостиПродаж22.АналитикаФинансовогоУчета
	|			И ТаблицаВозвратов.КорВидДеятельностиНДС        = СтоимостиПродаж22.ВидДеятельностиНДС
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммыДопРасходовПрошлыхПериодов КАК СуммыДопРасходов
	|		ПО ТаблицаВозвратов.ДокументИсточник          		= СуммыДопРасходов.Ссылка
	|			И ТаблицаВозвратов.АналитикаНоменклатурыДляЦены = СуммыДопРасходов.АналитикаУчетаНоменклатуры
	|			И (ТаблицаВозвратов.ВидыЗапасовДляЦены        	= СуммыДопРасходов.ВидЗапасов
	|				ИЛИ СуммыДопРасходов.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
	|			И ТаблицаВозвратов.Организация               	= СуммыДопРасходов.Организация
	|			И ТаблицаВозвратов.РазделУчета               	= СуммыДопРасходов.РазделУчета
	|			И ТаблицаВозвратов.Партия               		= СуммыДопРасходов.Партия
	|			И ТаблицаВозвратов.АналитикаУчетаПартий         = СуммыДопРасходов.АналитикаУчетаПартий
	|			И ТаблицаВозвратов.АналитикаФинансовогоУчета    = СуммыДопРасходов.АналитикаФинансовогоУчета
	|			И ТаблицаВозвратов.КорВидДеятельностиНДС        = СуммыДопРасходов.ВидДеятельностиНДС
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьТоваров КАК СтоимостьТоваров
	|		ПО ТаблицаВозвратов.ПериодРеализации          		= СтоимостьТоваров.Период
	|			И ТаблицаВозвратов.АналитикаНоменклатурыДляЦены = СтоимостьТоваров.АналитикаУчетаНоменклатуры
	|			И (ТаблицаВозвратов.ВидыЗапасовДляЦены        	= СтоимостьТоваров.ВидЗапасов
	|				ИЛИ СтоимостьТоваров.ВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка))
	|			И ТаблицаВозвратов.Организация               	= СтоимостьТоваров.Организация
	|			И ТаблицаВозвратов.РазделУчета               	= СтоимостьТоваров.РазделУчета
	|			И ТаблицаВозвратов.Партия = НЕОПРЕДЕЛЕНО
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО ТаблицаВозвратов.СтатьяРасходовСписания = СтатьиРасходов.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВозвратов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО Назначения.Ссылка = Аналитика.Назначение
	|
	|ГДЕ
	|	(ТаблицаВозвратов.ПоЦенеПродажи И СтоимостиПродаж.Ссылка ЕСТЬ НЕ NULL)
	|		ИЛИ (ТаблицаВозвратов.ПоЦенеПродажи22 И СтоимостиПродаж22.Ссылка ЕСТЬ НЕ NULL)
	|		ИЛИ (НЕ ТаблицаВозвратов.ПоЦенеПродажи И СтоимостьТоваров.Период ЕСТЬ НЕ NULL)
	|		ИЛИ (НЕ ТаблицаВозвратов.ПоЦенеПродажи22 И СтоимостьТоваров.Период ЕСТЬ НЕ NULL)
	|;";
#КонецОбласти

#Область ДвиженияТаблицаКорректировки
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ТаблицаВозвратов.Период                        КАК Период,
	|	ТаблицаВозвратов.Регистратор                   КАК Регистратор,
	|	ТаблицаВозвратов.Регистратор                   КАК ДокументДвижения,
	|	ТаблицаВозвратов.ВидДвижения                   КАК ВидДвижения,
	|	ТаблицаВозвратов.Организация                   КАК Организация,
	|	ТаблицаВозвратов.КорОрганизация                КАК КорОрганизация,
	|	ТаблицаВозвратов.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВозвратов.РазделУчета                   КАК РазделУчета,
	|	ТаблицаВозвратов.ВидЗапасов                    КАК ВидЗапасов,
	|	ТаблицаВозвратов.Партия                        КАК Партия,
	|	ТаблицаВозвратов.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	ТаблицаВозвратов.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	ТаблицаВозвратов.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	ТаблицаВозвратов.ТипЗапасов                    КАК ТипЗапасов,
	|	ТаблицаВозвратов.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ТаблицаВозвратов.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВозвратов.КорРазделУчета                КАК КорРазделУчета,
	|	ТаблицаВозвратов.КорВидЗапасов                 КАК КорВидЗапасов,
	|	ТаблицаВозвратов.ТипЗапасов                    КАК КорТипЗапасов,
	|	ТаблицаВозвратов.АналитикаУчетаПоПартнерам     КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаВозвратов.ЗаказКлиента                  КАК ЗаказКлиента,
	|	ТаблицаВозвратов.Подразделение                 КАК Подразделение,
	|	ТаблицаВозвратов.ПериодРеализации              КАК ПериодРеализации,
	|	ТаблицаВозвратов.АналитикаДоходов              КАК АналитикаДоходов,
	|	ТаблицаВозвратов.СтатьяДоходов                 КАК СтатьяДоходов,
	|	ТаблицаВозвратов.АналитикаРасходов             КАК АналитикаРасходов,
	|	ТаблицаВозвратов.СтатьяРасходовСписания        КАК СтатьяРасходовСписания,
	|	ТаблицаВозвратов.ГруппаПродукции               КАК ГруппаПродукции,
	|	ТаблицаВозвратов.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ТаблицаВозвратов.КорНаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	//++ Локализация
	
	
	//-- Локализация
	|	ТаблицаВозвратов.ВариантРаспределенияРасходовУпр КАК ВариантРаспределенияРасходовУпр,
	|	ТаблицаВозвратов.ВариантРаспределенияРасходовРегл КАК ВариантРаспределенияРасходовРегл,
	|	ТаблицаВозвратов.ПринятиеКНалоговомуУчету      КАК ПринятиеКНалоговомуУчету,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяАктивовПассивов,
	|	ТаблицаВозвратов.ИдентификаторСтроки           КАК ИдентификаторСтроки,
	|	ТаблицаВозвратов.КодСтроки                 	   КАК КодСтроки,
	|	ТаблицаВозвратов.Менеджер                      КАК Менеджер,
	|	ТаблицаВозвратов.Склад                         КАК Склад,
	|	ТаблицаВозвратов.Соглашение                    КАК Соглашение,
	|	ТаблицаВозвратов.Договор                       КАК Договор,
	|	ТаблицаВозвратов.АналитикаУчетаНаборов         КАК АналитикаУчетаНаборов,
	|	ТаблицаВозвратов.НаправлениеДеятельностиКонтрагента КАК НаправлениеДеятельностиКонтрагента,
	|	ТаблицаВозвратов.НаправлениеДеятельностиНоменклатуры КАК НаправлениеДеятельностиНоменклатуры,
	|	ТаблицаВозвратов.НалогообложениеНДС            КАК НалогообложениеНДС,
	|	ТаблицаВозвратов.ВалютаВзаиморасчетов          КАК ВалютаВзаиморасчетов,
	|	ТаблицаВозвратов.ВалютаДокумента               КАК ВалютаДокумента,
	|	ТаблицаВозвратов.ИсточникГФУНоменклатуры       КАК ИсточникГФУНоменклатуры,
	|	ТаблицаВозвратов.ИсточникГФУРасчетов           КАК ИсточникГФУРасчетов,
	|	ТаблицаВозвратов.ПериодПродажи                 КАК ПериодПродажи,
	|	ТаблицаВозвратов.КорПартия                     КАК КорПартия,
	|	ТаблицаВозвратов.КорАналитикаУчетаПартий       КАК КорАналитикаУчетаПартий,
	|	ТаблицаВозвратов.КорАналитикаФинансовогоУчета  КАК КорАналитикаФинансовогоУчета,
	|	ТаблицаВозвратов.КорВидДеятельностиНДС         КАК КорВидДеятельностиНДС,
	|	ТаблицаВозвратов.НДСРегл                       КАК НДСРегл,
	|	ТаблицаВозвратов.НДСУпр                        КАК НДСУпр,
	|	ТаблицаВозвратов.СтатьяКалькуляции             КАК СтатьяКалькуляции,
	|	ТаблицаВозвратов.ТипЗаписи                     КАК ТипЗаписи,
	|	ТаблицаВозвратов.ДокументИсточник              КАК ДокументИсточник,
	|	ТаблицаВозвратов.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ТаблицаВозвратов.ИдентификаторФинЗаписи        КАК ИдентификаторФинЗаписи,
	|	ЛОЖЬ                                           КАК Сторно,
	|	0                                              КАК КорСтоимость,
	|
	|	ТаблицаВозвратов.Стоимость                     КАК Стоимость,
	|	ТаблицаВозвратов.СтоимостьБезНДС               КАК СтоимостьБезНДС,
	|	ТаблицаВозвратов.СтоимостьЗабалансовая         КАК СтоимостьЗабалансовая,
	|	ТаблицаВозвратов.ДопРасходы                    КАК ДопРасходы,
	|	ТаблицаВозвратов.ДопРасходыБезНДС              КАК ДопРасходыБезНДС,
	|	ТаблицаВозвратов.Трудозатраты                  КАК Трудозатраты,
	|	ТаблицаВозвратов.ПостатейныеПостоянныеСНДС     КАК ПостатейныеПостоянныеСНДС,
	|	ТаблицаВозвратов.ПостатейныеПостоянныеБезНДС   КАК ПостатейныеПостоянныеБезНДС,
	|	ТаблицаВозвратов.ПостатейныеПеременныеСНДС     КАК ПостатейныеПеременныеСНДС,
	|	ТаблицаВозвратов.ПостатейныеПеременныеБезНДС   КАК ПостатейныеПеременныеБезНДС,
	|	ТаблицаВозвратов.СтоимостьРегл                 КАК СтоимостьРегл,
	|	ТаблицаВозвратов.СтоимостьЗабалансоваяРегл     КАК СтоимостьЗабалансоваяРегл,
	|	ТаблицаВозвратов.ПостояннаяРазница             КАК ПостояннаяРазница,
	|	ТаблицаВозвратов.ВременнаяРазница              КАК ВременнаяРазница,
	|	ТаблицаВозвратов.СтоимостьНДД                  КАК СтоимостьНДД,
	|	ТаблицаВозвратов.ДопРасходыРегл                КАК ДопРасходыРегл,
	|	ТаблицаВозвратов.ТрудозатратыРегл              КАК ТрудозатратыРегл,
	|	ТаблицаВозвратов.ПостатейныеПостоянныеРегл     КАК ПостатейныеПостоянныеРегл,
	|	ТаблицаВозвратов.ПостатейныеПеременныеРегл     КАК ПостатейныеПеременныеРегл,
	|	ТаблицаВозвратов.СтоимостьУпр                  КАК СтоимостьУпр,
	|	ТаблицаВозвратов.ДопРасходыУпр                 КАК ДопРасходыУпр,
	|	ТаблицаВозвратов.ТрудозатратыУпр               КАК ТрудозатратыУпр,
	|	ТаблицаВозвратов.ПостатейныеПостоянныеУпр      КАК ПостатейныеПостоянныеУпр,
	|	ТаблицаВозвратов.ПостатейныеПеременныеУпр      КАК ПостатейныеПеременныеУпр,
	|	0 КАК РезервПодОбесценениеРегл,
	|	0 КАК РезервПодОбесценениеУпр
	|
	|ПОМЕСТИТЬ ДвиженияТаблицаКорректировки
	|ИЗ
	|	ВтДанныеТаблицаКорректировки КАК ТаблицаВозвратов
	|ГДЕ
	|	ТаблицаВозвратов.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов)
	|";
#КонецОбласти

#Область ДвиженияТаблицаКорректировки_ПрочиеДоходы

	// Отклонение в стоимости - отнесение на прочие доходы
	Запрос.Текст = Запрос.Текст + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВозвратов.Период                        КАК Период,
	|	ТаблицаВозвратов.Регистратор                   КАК Регистратор,
	|	ТаблицаВозвратов.Регистратор                   КАК ДокументДвижения,
	|	ТаблицаВозвратов.ВидДвижения                   КАК ВидДвижения,
	|	ТаблицаВозвратов.Организация                   КАК Организация,
	|	ТаблицаВозвратов.КорОрганизация                КАК КорОрганизация,
	|	ТаблицаВозвратов.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВозвратов.РазделУчета                   КАК РазделУчета,
	|	ТаблицаВозвратов.ВидЗапасов                    КАК ВидЗапасов,
	|	ТаблицаВозвратов.Партия                        КАК Партия,
	|	ТаблицаВозвратов.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	ТаблицаВозвратов.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	ТаблицаВозвратов.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	ТаблицаВозвратов.ТипЗапасов                    КАК ТипЗапасов,
	|	ТаблицаВозвратов.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ТаблицаВозвратов.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВозвратов.КорРазделУчета                КАК КорРазделУчета,
	|	ТаблицаВозвратов.КорВидЗапасов                 КАК КорВидЗапасов,
	|	ТаблицаВозвратов.ТипЗапасов                    КАК КорТипЗапасов,
	|	ТаблицаВозвратов.АналитикаУчетаПоПартнерам     КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаВозвратов.ЗаказКлиента                  КАК ЗаказКлиента,
	|	ТаблицаВозвратов.Подразделение                 КАК Подразделение,
	|	ТаблицаВозвратов.ПериодРеализации              КАК ПериодРеализации,
	|	ТаблицаВозвратов.АналитикаДоходов              КАК АналитикаДоходов,
	|	ТаблицаВозвратов.СтатьяДоходов                 КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяРасходовСписания,
	|	ТаблицаВозвратов.ГруппаПродукции               КАК ГруппаПродукции,
	|	ТаблицаВозвратов.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ТаблицаВозвратов.КорНаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	//++ Локализация
	
	
	//-- Локализация
	|	НЕОПРЕДЕЛЕНО                                   КАК ВариантРаспределенияРасходовУпр,
	|	НЕОПРЕДЕЛЕНО                                   КАК ВариантРаспределенияРасходовРегл,
	|	ЛОЖЬ                                           КАК ПринятиеКНалоговомуУчету,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяАктивовПассивов,
	|	ТаблицаВозвратов.ИдентификаторСтроки           КАК ИдентификаторСтроки,
	|	ТаблицаВозвратов.КодСтроки                 	   КАК КодСтроки,
	|	ТаблицаВозвратов.Менеджер                      КАК Менеджер,
	|	ТаблицаВозвратов.Склад                         КАК Склад,
	|	ТаблицаВозвратов.Соглашение                    КАК Соглашение,
	|	ТаблицаВозвратов.Договор                       КАК Договор,
	|	ТаблицаВозвратов.АналитикаУчетаНаборов         КАК АналитикаУчетаНаборов,
	|	ТаблицаВозвратов.НаправлениеДеятельностиКонтрагента КАК НаправлениеДеятельностиКонтрагента,
	|	ТаблицаВозвратов.НаправлениеДеятельностиНоменклатуры КАК НаправлениеДеятельностиНоменклатуры,
	|	ТаблицаВозвратов.НалогообложениеНДС            КАК НалогообложениеНДС,
	|	ТаблицаВозвратов.ВалютаВзаиморасчетов          КАК ВалютаВзаиморасчетов,
	|	ТаблицаВозвратов.ВалютаДокумента               КАК ВалютаДокумента,
	|	ТаблицаВозвратов.ИсточникГФУНоменклатуры       КАК ИсточникГФУНоменклатуры,
	|	ТаблицаВозвратов.ИсточникГФУРасчетов           КАК ИсточникГФУРасчетов,
	|	ТаблицаВозвратов.ПериодПродажи                 КАК ПериодПродажи,
	|	ТаблицаВозвратов.КорПартия                     КАК КорПартия,
	|	ТаблицаВозвратов.КорАналитикаУчетаПартий       КАК КорАналитикаУчетаПартий,
	|	ТаблицаВозвратов.КорАналитикаФинансовогоУчета  КАК КорАналитикаФинансовогоУчета,
	|	ТаблицаВозвратов.КорВидДеятельностиНДС         КАК КорВидДеятельностиНДС,
	|	ТаблицаВозвратов.НДСРегл                       КАК НДСРегл,
	|	ТаблицаВозвратов.НДСУпр                        КАК НДСУпр,
	|	ТаблицаВозвратов.СтатьяКалькуляции             КАК СтатьяКалькуляции,
	|	ТаблицаВозвратов.ТипЗаписи                     КАК ТипЗаписи,
	|	ТаблицаВозвратов.ДокументИсточник              КАК ДокументИсточник,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтклонениеВСтоимостиТоваровДоходы) КАК НастройкаХозяйственнойОперации,
	// Отклонения в стоимости отражаем по идентификатору строки документа.
	|	(ВЫБОР
	|		КОГДА ТаблицаВозвратов.ИдентификаторСтроки <> """"
	|			ТОГДА ТаблицаВозвратов.ИдентификаторСтроки
	|		ИНАЧЕ ТаблицаВозвратов.ИдентификаторФинЗаписи КОНЕЦ) КАК ИдентификаторФинЗаписи,
	|	ЛОЖЬ                                           КАК Сторно,
	|	0                                              КАК КорСтоимость,
	|
	|	(ВЫБОР 
	|		КОГДА Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС >= 0
	|			ТОГДА Стоимость
	|		ИНАЧЕ 0 КОНЕЦ) КАК Стоимость,
	|	(ВЫБОР 
	|		КОГДА СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС >= 0
	|			ТОГДА СтоимостьБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьБезНДС,
	|	(ВЫБОР 
	|		КОГДА СтоимостьЗабалансовая >= 0
	|			ТОГДА СтоимостьЗабалансовая
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьЗабалансовая,
	|	(ВЫБОР 
	|		КОГДА Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС >= 0
	|			ТОГДА ДопРасходы
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходы,
	|	(ВЫБОР 
	|		КОГДА СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС >= 0
	|			ТОГДА ДопРасходыБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыБезНДС,
	|	(ВЫБОР 
	|		КОГДА Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС >= 0
	|			ТОГДА Трудозатраты
	|		ИНАЧЕ 0 КОНЕЦ) КАК Трудозатраты,
	|	(ВЫБОР 
	|		КОГДА Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС >= 0
	|			ТОГДА ПостатейныеПостоянныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеСНДС,
	|	(ВЫБОР 
	|		КОГДА СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС >= 0
	|			ТОГДА ПостатейныеПостоянныеБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеБезНДС,
	|	(ВЫБОР 
	|		КОГДА Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС >= 0
	|			ТОГДА ПостатейныеПеременныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеСНДС,
	|	(ВЫБОР 
	|		КОГДА СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС >= 0
	|			ТОГДА ПостатейныеПеременныеБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеБезНДС,
	|
	|	(ВЫБОР 
	|		КОГДА СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл >= 0
	|			ТОГДА СтоимостьРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьРегл,
	|	(ВЫБОР 
	|		КОГДА СтоимостьЗабалансоваяРегл >= 0
	|			ТОГДА СтоимостьЗабалансоваяРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьЗабалансоваяРегл,
	|	(ВЫБОР 
	|		КОГДА СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл >= 0
	|			ТОГДА ПостояннаяРазница
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостояннаяРазница,
	|	(ВЫБОР 
	|		КОГДА СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл >= 0
	|			ТОГДА ВременнаяРазница
	|		ИНАЧЕ 0 КОНЕЦ) КАК ВременнаяРазница,
	|	0 КАК СтоимостьНДД,
	|	(ВЫБОР 
	|		КОГДА СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл >= 0
	|			ТОГДА ДопРасходыРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыРегл,
	|	(ВЫБОР 
	|		КОГДА СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл >= 0
	|			ТОГДА ТрудозатратыРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыРегл,
	|	(ВЫБОР 
	|		КОГДА СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл >= 0
	|			ТОГДА ПостатейныеПостоянныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеРегл,
	|	(ВЫБОР 
	|		КОГДА СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл >= 0
	|			ТОГДА ПостатейныеПеременныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеРегл,
	|
	|	(ВЫБОР 
	|		КОГДА СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр >= 0
	|			ТОГДА СтоимостьУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьУпр,
	|	(ВЫБОР 
	|		КОГДА СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр >= 0
	|			ТОГДА ДопРасходыУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыУпр,
	|	(ВЫБОР 
	|		КОГДА СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр >= 0
	|			ТОГДА ТрудозатратыУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыУпр,
	|	(ВЫБОР 
	|		КОГДА СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр >= 0
	|			ТОГДА ПостатейныеПостоянныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеУпр,
	|	(ВЫБОР 
	|		КОГДА СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр >= 0
	|			ТОГДА ПостатейныеПеременныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеУпр,
	|
	|	0 КАК РезервПодОбесценениеРегл,
	|	0 КАК РезервПодОбесценениеУпр
	|
	|ИЗ
	|	ВтДанныеТаблицаКорректировки КАК ТаблицаВозвратов
	|ГДЕ
	|	ТаблицаВозвратов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов)
	// На прочие доходы будут отнесены отрицательные суммы отклонения в стоимости
	|	И (ВЫБОР 
	|		КОГДА Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС >= 0
	|			ИЛИ СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС >= 0
	|			ИЛИ СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл >= 0
	|			ИЛИ СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр >= 0
	|			ИЛИ СтоимостьЗабалансовая >= 0
	|			ИЛИ СтоимостьЗабалансоваяРегл >= 0
	|				ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ)
	|";
#КонецОбласти

#Область ДвиженияТаблицаКорректировки_ПрочиеРасходы

	// Отклонение в стоимости - отнесение на прочие расходы
	Запрос.Текст = Запрос.Текст + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВозвратов.Период                        КАК Период,
	|	ТаблицаВозвратов.Регистратор                   КАК Регистратор,
	|	ТаблицаВозвратов.Регистратор                   КАК ДокументДвижения,
	|	ТаблицаВозвратов.ВидДвижения                   КАК ВидДвижения,
	|	ТаблицаВозвратов.Организация                   КАК Организация,
	|	ТаблицаВозвратов.КорОрганизация                КАК КорОрганизация,
	|	ТаблицаВозвратов.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВозвратов.РазделУчета                   КАК РазделУчета,
	|	ТаблицаВозвратов.ВидЗапасов                    КАК ВидЗапасов,
	|	ТаблицаВозвратов.Партия                        КАК Партия,
	|	ТаблицаВозвратов.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	ТаблицаВозвратов.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	ТаблицаВозвратов.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	ТаблицаВозвратов.ТипЗапасов                    КАК ТипЗапасов,
	|	ТаблицаВозвратов.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ТаблицаВозвратов.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВозвратов.КорРазделУчета                КАК КорРазделУчета,
	|	ТаблицаВозвратов.КорВидЗапасов                 КАК КорВидЗапасов,
	|	ТаблицаВозвратов.ТипЗапасов                    КАК КорТипЗапасов,
	|	ТаблицаВозвратов.АналитикаУчетаПоПартнерам     КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаВозвратов.ЗаказКлиента                  КАК ЗаказКлиента,
	|	ТаблицаВозвратов.Подразделение                 КАК Подразделение,
	|	ТаблицаВозвратов.ПериодРеализации              КАК ПериодРеализации,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяДоходов,
	|	ТаблицаВозвратов.АналитикаРасходов             КАК АналитикаРасходов,
	|	ТаблицаВозвратов.СтатьяРасходовСписания        КАК СтатьяРасходовСписания,
	|	ТаблицаВозвратов.ГруппаПродукции               КАК ГруппаПродукции,
	|	ТаблицаВозвратов.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ТаблицаВозвратов.КорНаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	//++ Локализация
	
	
	//-- Локализация
	|	ТаблицаВозвратов.ВариантРаспределенияРасходовУпр КАК ВариантРаспределенияРасходовУпр,
	|	ТаблицаВозвратов.ВариантРаспределенияРасходовРегл КАК ВариантРаспределенияРасходовРегл,
	|	ТаблицаВозвратов.ПринятиеКНалоговомуУчету      КАК ПринятиеКНалоговомуУчету,
	|	НЕОПРЕДЕЛЕНО                                   КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО                                   КАК СтатьяАктивовПассивов,
	|	ТаблицаВозвратов.ИдентификаторСтроки           КАК ИдентификаторСтроки,
	|	ТаблицаВозвратов.КодСтроки                 	   КАК КодСтроки,
	|	ТаблицаВозвратов.Менеджер                      КАК Менеджер,
	|	ТаблицаВозвратов.Склад                         КАК Склад,
	|	ТаблицаВозвратов.Соглашение                    КАК Соглашение,
	|	ТаблицаВозвратов.Договор                       КАК Договор,
	|	ТаблицаВозвратов.АналитикаУчетаНаборов         КАК АналитикаУчетаНаборов,
	|	ТаблицаВозвратов.НаправлениеДеятельностиКонтрагента КАК НаправлениеДеятельностиКонтрагента,
	|	ТаблицаВозвратов.НаправлениеДеятельностиНоменклатуры КАК НаправлениеДеятельностиНоменклатуры,
	|	ТаблицаВозвратов.НалогообложениеНДС            КАК НалогообложениеНДС,
	|	ТаблицаВозвратов.ВалютаВзаиморасчетов          КАК ВалютаВзаиморасчетов,
	|	ТаблицаВозвратов.ВалютаДокумента               КАК ВалютаДокумента,
	|	ТаблицаВозвратов.ИсточникГФУНоменклатуры       КАК ИсточникГФУНоменклатуры,
	|	ТаблицаВозвратов.ИсточникГФУРасчетов           КАК ИсточникГФУРасчетов,
	|	ТаблицаВозвратов.ПериодПродажи                 КАК ПериодПродажи,
	|	ТаблицаВозвратов.КорПартия                     КАК КорПартия,
	|	ТаблицаВозвратов.КорАналитикаУчетаПартий       КАК КорАналитикаУчетаПартий,
	|	ТаблицаВозвратов.КорАналитикаФинансовогоУчета  КАК КорАналитикаФинансовогоУчета,
	|	ТаблицаВозвратов.КорВидДеятельностиНДС         КАК КорВидДеятельностиНДС,
	|	ТаблицаВозвратов.НДСРегл                       КАК НДСРегл,
	|	ТаблицаВозвратов.НДСУпр                        КАК НДСУпр,
	|	ТаблицаВозвратов.СтатьяКалькуляции             КАК СтатьяКалькуляции,
	|	ТаблицаВозвратов.ТипЗаписи                     КАК ТипЗаписи,
	|	ТаблицаВозвратов.ДокументИсточник              КАК ДокументИсточник,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтклонениеВСтоимостиТоваровРасходы) КАК НастройкаХозяйственнойОперации,
	// Отклонения в стоимости отражаем по идентификатору строки документа.
	|	(ВЫБОР
	|		КОГДА ТаблицаВозвратов.ИдентификаторСтроки <> """"
	|			ТОГДА ТаблицаВозвратов.ИдентификаторСтроки
	|		ИНАЧЕ ТаблицаВозвратов.ИдентификаторФинЗаписи КОНЕЦ) КАК ИдентификаторФинЗаписи,
	|	ЛОЖЬ                                           КАК Сторно,
	|	0                                              КАК КорСтоимость,
	|
	|	(ВЫБОР 
	|		КОГДА Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС < 0
	|			ТОГДА Стоимость
	|		ИНАЧЕ 0 КОНЕЦ) КАК Стоимость,
	|	(ВЫБОР 
	|		КОГДА СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС < 0
	|			ТОГДА СтоимостьБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьБезНДС,
	|	(ВЫБОР 
	|		КОГДА СтоимостьЗабалансовая < 0
	|			ТОГДА СтоимостьЗабалансовая
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьЗабалансовая,
	|	(ВЫБОР 
	|		КОГДА Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС < 0
	|			ТОГДА ДопРасходы
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходы,
	|	(ВЫБОР 
	|		КОГДА СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС < 0
	|			ТОГДА ДопРасходыБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыБезНДС,
	|	(ВЫБОР 
	|		КОГДА Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС < 0
	|			ТОГДА Трудозатраты
	|		ИНАЧЕ 0 КОНЕЦ) КАК Трудозатраты,
	|	(ВЫБОР 
	|		КОГДА Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС < 0
	|			ТОГДА ПостатейныеПостоянныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеСНДС,
	|	(ВЫБОР 
	|		КОГДА СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС < 0
	|			ТОГДА ПостатейныеПостоянныеБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеБезНДС,
	|	(ВЫБОР 
	|		КОГДА Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС < 0
	|			ТОГДА ПостатейныеПеременныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеСНДС,
	|	(ВЫБОР 
	|		КОГДА СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС < 0
	|			ТОГДА ПостатейныеПеременныеБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеБезНДС,
	|
	|	(ВЫБОР 
	|		КОГДА СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл < 0
	|			ТОГДА СтоимостьРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьРегл,
	|	(ВЫБОР 
	|		КОГДА СтоимостьЗабалансоваяРегл < 0
	|			ТОГДА СтоимостьЗабалансоваяРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьЗабалансоваяРегл,
	|	(ВЫБОР 
	|		КОГДА СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл < 0
	|			ТОГДА ПостояннаяРазница
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостояннаяРазница,
	|	(ВЫБОР 
	|		КОГДА СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл < 0
	|			ТОГДА ВременнаяРазница
	|		ИНАЧЕ 0 КОНЕЦ) КАК ВременнаяРазница,
	|	(ВЫБОР 
	|		КОГДА СтоимостьНДД < 0
	|			ТОГДА СтоимостьНДД
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьНДД,
	|	(ВЫБОР 
	|		КОГДА СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл < 0
	|			ТОГДА ДопРасходыРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыРегл,
	|	(ВЫБОР 
	|		КОГДА СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл < 0
	|			ТОГДА ТрудозатратыРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыРегл,
	|	(ВЫБОР 
	|		КОГДА СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл < 0
	|			ТОГДА ПостатейныеПостоянныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеРегл,
	|	(ВЫБОР 
	|		КОГДА СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл < 0
	|			ТОГДА ПостатейныеПеременныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеРегл,
	|
	|	(ВЫБОР 
	|		КОГДА СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр < 0
	|			ТОГДА СтоимостьУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьУпр,
	|	(ВЫБОР 
	|		КОГДА СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр < 0
	|			ТОГДА ДопРасходыУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыУпр,
	|	(ВЫБОР 
	|		КОГДА СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр < 0
	|			ТОГДА ТрудозатратыУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыУпр,
	|	(ВЫБОР 
	|		КОГДА СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр < 0
	|			ТОГДА ПостатейныеПостоянныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеУпр,
	|	(ВЫБОР 
	|		КОГДА СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр < 0
	|			ТОГДА ПостатейныеПеременныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеУпр,
	|	0 КАК РезервПодОбесценениеРегл,
	|	0 КАК РезервПодОбесценениеУпр
	|
	|ИЗ
	|	ВтДанныеТаблицаКорректировки КАК ТаблицаВозвратов
	|ГДЕ
	|	ТаблицаВозвратов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов)
	// На прочие расходы будут отнесены положительные суммы отклонения в стоимости
	|	И (ВЫБОР 
	|		КОГДА Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС < 0
	|			ИЛИ СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС < 0
	|			ИЛИ СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл < 0
	|			ИЛИ СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр < 0
	|			ИЛИ СтоимостьЗабалансовая < 0
	|			ИЛИ СтоимостьЗабалансоваяРегл < 0
	|			ИЛИ СтоимостьНДД < 0
	|				ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ)
	|";
#КонецОбласти
	
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	УсловиеЗапроса = "
	|	ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)
	|	)";
	
	СтруктураКорректировкиСумм = Новый Структура();
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыСНДС", -1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыБезНДС", -1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыРегл", -1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыУпр", -1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентКорСуммы", 0);

	СформироватьДвиженияНоменклатураДоходыРасходыЗапросом(ПараметрыРасчета, "ВтДоходыРасходыСторноСписаниеТоваров", 
		СоответствиеВременныхТаблицДвижений, УсловиеЗапроса, , , СтруктураКорректировкиСумм);

#Область СебестоимостьТоваров
	
	ИмяВременнойТаблицы = "ВтДвиженияВозвратыПрошлыхПериодов";
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ДвиженияТаблицаКорректировки");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РежимЗакрытияМесяца", "&РежимЗакрытияМесяца");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);

#КонецОбласти

#Область ВыручкаИСебестоимостьПродаж

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Т.Период,
	|	Т.Регистратор,
	// Измерения
	|	ВЫБОР КОГДА Т.АналитикаУчетаНоменклатуры <> Т.КорАналитикаУчетаНоменклатуры
	|		И Т.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов)) 
	|		И НЕ Т.КорАналитикаУчетаНоменклатуры В (НЕОПРЕДЕЛЕНО, 
	|			ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)) ТОГДА
	|		Т.КорАналитикаУчетаНоменклатуры
	|	ИНАЧЕ
	|		Т.АналитикаУчетаНоменклатуры
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	Т.ЗаказКлиента,
	|	Т.АналитикаУчетаПоПартнерам,
	|	Т.Подразделение,
	|	Т.ТипЗапасов,
	|	Т.ВидЗапасов,
	|	Т.РазделУчета,
	|	Т.Партия,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС,
	|	Т.Менеджер,
	|	Т.Склад,
	|	Т.Соглашение,
	|	Т.Договор,
	|	Т.ХозяйственнаяОперация,
	|	Т.АналитикаУчетаНаборов,
	|	Т.НаправлениеДеятельностиКонтрагента,
	|	Т.НаправлениеДеятельностиНоменклатуры,
	// Ресурсы
	|	-Т.Стоимость КАК Стоимость,
	|	-Т.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	-Т.ДопРасходы КАК ДопРасходы,
	|	-Т.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|	-Т.СтоимостьУпр КАК СтоимостьУпр,
	|	-Т.СтоимостьРегл КАК СтоимостьРегл,
	|	-Т.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	-Т.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	-Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|	-Т.ДопРасходыУпр КАК ДопРасходыУпр,
	|	-Т.ДопРасходыРегл КАК ДопРасходыРегл,
	|	-Т.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	-Т.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	-Т.ПостатейныеПостоянныеУпр КАК ПостатейныеПостоянныеУпр,
	|	-Т.ПостатейныеПостоянныеРегл КАК ПостатейныеПостоянныеРегл,
	|	-Т.Трудозатраты КАК Трудозатраты,
	|	-Т.ТрудозатратыУпр КАК ТрудозатратыУпр,
	|	-Т.ТрудозатратыРегл КАК ТрудозатратыРегл,
	|	-Т.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	-Т.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	|	-Т.ПостатейныеПеременныеУпр КАК ПостатейныеПеременныеУпр,
	|	-Т.ПостатейныеПеременныеРегл КАК ПостатейныеПеременныеРегл,
	|	-Т.ВременнаяРазница КАК ВременнаяРазница,
	// Реквизиты
	|	Т.Регистратор КАК ДокументДвижения,
	|	Т.НалогообложениеНДС,
	|	Т.ВалютаВзаиморасчетов,
	|	Т.ВалютаДокумента,
	|	Т.ИсточникГФУНоменклатуры,
	|	Т.ИсточникГФУРасчетов,
	|	Т.НастройкаХозяйственнойОперации,
	|	Т.ИдентификаторФинЗаписи
	|ПОМЕСТИТЬ ВтДвиженияСебестоимостьПродаж
	|ИЗ
	|	ДвиженияТаблицаКорректировки КАК Т
	|ГДЕ
	|	НЕ Т.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера))
	|";
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтДвиженияСебестоимостьПродажВозвратыПрошлыхПериодов";
	ИмяРегистра = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияСебестоимостьПродаж");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияСебестоимостьПродаж", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);

#КонецОбласти

#Область ПрочиеДоходы

	// Формирование прочих доходов при возврате тары от клиента
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Т.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Т.Регистратор,
	// Измерения
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.СтатьяДоходов,
	|	Т.АналитикаДоходов,
	// Ресурсы
	|	(ВЫБОР
	|		КОГДА Т.Стоимость + Т.ДопРасходы + Т.Трудозатраты + Т.ПостатейныеПостоянныеСНДС + Т.ПостатейныеПеременныеСНДС > 0
	|			ТОГДА Т.Стоимость + Т.ДопРасходы + Т.Трудозатраты + Т.ПостатейныеПостоянныеСНДС + Т.ПостатейныеПеременныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК Сумма,
	|	(ВЫБОР
	|		КОГДА Т.СтоимостьРегл + Т.ДопРасходыРегл + Т.ТрудозатратыРегл + Т.ПостатейныеПостоянныеРегл + Т.ПостатейныеПеременныеРегл > 0
	|			ТОГДА Т.СтоимостьРегл + Т.ДопРасходыРегл + Т.ТрудозатратыРегл + Т.ПостатейныеПостоянныеРегл + Т.ПостатейныеПеременныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаРегл,
	|	(ВЫБОР
	|		КОГДА Т.СтоимостьУпр + Т.ДопРасходыУпр + Т.ТрудозатратыУпр + Т.ПостатейныеПостоянныеУпр + Т.ПостатейныеПеременныеУпр > 0
	|			ТОГДА Т.СтоимостьУпр + Т.ДопРасходыУпр + Т.ТрудозатратыУпр + Т.ПостатейныеПостоянныеУпр + Т.ПостатейныеПеременныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаУпр,
	// Реквизиты
	|	Т.ХозяйственнаяОперация,
	|	Т.НастройкаХозяйственнойОперации,
	|	Т.ИдентификаторФинЗаписи
	|ПОМЕСТИТЬ ВтДвиженияПрочиеДоходы
	|ИЗ
	|	ДвиженияТаблицаКорректировки КАК Т
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|	И Т.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов)
	|	И (Т.Стоимость + Т.ДопРасходы + Т.Трудозатраты + Т.ПостатейныеПостоянныеСНДС + Т.ПостатейныеПеременныеСНДС > 0
	|		ИЛИ Т.СтоимостьРегл + Т.ДопРасходыРегл + Т.ТрудозатратыРегл + Т.ПостатейныеПостоянныеРегл + Т.ПостатейныеПеременныеРегл > 0
	|		ИЛИ Т.СтоимостьУпр + Т.ДопРасходыУпр + Т.ТрудозатратыУпр + Т.ПостатейныеПостоянныеУпр + Т.ПостатейныеПеременныеУпр > 0
	|		)
	|";
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтДвиженияВозвратыПрошлыхПериодовПрочиеДоходы";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеДоходы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияПрочиеДоходы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияПрочиеДоходы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);

#КонецОбласти

#Область ПрочиеРасходы

	// Формирование прочих расходов при возврате тары от клиента
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Т.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Т.Регистратор,
	// Измерения
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.СтатьяРасходовСписания КАК СтатьяРасходов,
	|	Т.АналитикаРасходов,
	// Реквизиты статьи расходов
	|	Т.ВариантРаспределенияРасходовУпр,
	|	Т.ВариантРаспределенияРасходовРегл,
	|	Т.ПринятиеКНалоговомуУчету,
	// Ресурсы
	|	-(ВЫБОР
	|		КОГДА Т.Стоимость + Т.ДопРасходы + Т.Трудозатраты + Т.ПостатейныеПостоянныеСНДС + Т.ПостатейныеПеременныеСНДС < 0
	|			ТОГДА Т.Стоимость + Т.ДопРасходы + Т.Трудозатраты + Т.ПостатейныеПостоянныеСНДС + Т.ПостатейныеПеременныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК Сумма,
	|	-(ВЫБОР
	|		КОГДА Т.СтоимостьБезНДС + Т.ДопРасходыБезНДС + Т.Трудозатраты + Т.ПостатейныеПостоянныеБезНДС + Т.ПостатейныеПеременныеБезНДС < 0
	|			ТОГДА Т.СтоимостьБезНДС + Т.ДопРасходыБезНДС + Т.Трудозатраты + Т.ПостатейныеПостоянныеБезНДС + Т.ПостатейныеПеременныеБезНДС
	|	 	ИНАЧЕ 0 КОНЕЦ) КАК СуммаБезНДС,
	|	-(ВЫБОР
	|		КОГДА Т.СтоимостьРегл + Т.ДопРасходыРегл + Т.ТрудозатратыРегл + Т.ПостатейныеПостоянныеРегл + Т.ПостатейныеПеременныеРегл < 0
	|			ТОГДА Т.СтоимостьРегл + Т.ДопРасходыРегл + Т.ТрудозатратыРегл + Т.ПостатейныеПостоянныеРегл + Т.ПостатейныеПеременныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаРегл,
	|	-(ВЫБОР
	|		КОГДА Т.СтоимостьРегл + Т.ДопРасходыРегл + Т.ТрудозатратыРегл + Т.ПостатейныеПостоянныеРегл + Т.ПостатейныеПеременныеРегл < 0 И Т.ПринятиеКНалоговомуУчету
	|			ТОГДА Т.ПостояннаяРазница
	|		КОГДА Т.СтоимостьРегл + Т.ДопРасходыРегл + Т.ТрудозатратыРегл + Т.ПостатейныеПостоянныеРегл + Т.ПостатейныеПеременныеРегл < 0 И НЕ Т.ПринятиеКНалоговомуУчету
	|			ТОГДА Т.СтоимостьРегл + Т.ДопРасходыРегл + Т.ТрудозатратыРегл + Т.ПостатейныеПостоянныеРегл + Т.ПостатейныеПеременныеРегл + Т.ВременнаяРазница
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостояннаяРазница,
	|	-(ВЫБОР
	|		КОГДА Т.СтоимостьРегл + Т.ДопРасходыРегл + Т.ТрудозатратыРегл + Т.ПостатейныеПостоянныеРегл + Т.ПостатейныеПеременныеРегл < 0 И Т.ПринятиеКНалоговомуУчету
	|			ТОГДА Т.ВременнаяРазница
	|		ИНАЧЕ 0 КОНЕЦ) КАК ВременнаяРазница,
	|	-(ВЫБОР
	|		КОГДА Т.СтоимостьНДД < 0
	|			ТОГДА Т.СтоимостьНДД
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаНДД,
	|	-(ВЫБОР
	|		КОГДА Т.СтоимостьУпр + Т.ДопРасходыУпр + Т.ТрудозатратыУпр + Т.ПостатейныеПостоянныеУпр + Т.ПостатейныеПеременныеУпр < 0
	|			ТОГДА Т.СтоимостьУпр + Т.ДопРасходыУпр + Т.ТрудозатратыУпр + Т.ПостатейныеПостоянныеУпр + Т.ПостатейныеПеременныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаУпр,
	// Реквизиты
	|	Т.ХозяйственнаяОперация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.НастройкаХозяйственнойОперации,
	|	Т.ИдентификаторФинЗаписи
	|
	|ПОМЕСТИТЬ ВтДвиженияПрочиеРасходы
	|ИЗ
	|	ДвиженияТаблицаКорректировки КАК Т
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|	И Т.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов)
	|	И (Т.Стоимость + Т.ДопРасходы + Т.Трудозатраты + Т.ПостатейныеПостоянныеСНДС + Т.ПостатейныеПеременныеСНДС < 0
	|		ИЛИ Т.СтоимостьБезНДС + Т.ДопРасходыБезНДС + Т.Трудозатраты + Т.ПостатейныеПостоянныеБезНДС + Т.ПостатейныеПеременныеБезНДС < 0
	|		ИЛИ Т.СтоимостьРегл + Т.ДопРасходыРегл + Т.ТрудозатратыРегл + Т.ПостатейныеПостоянныеРегл + Т.ПостатейныеПеременныеРегл < 0
	|		ИЛИ Т.СтоимостьУпр + Т.ДопРасходыУпр + Т.ТрудозатратыУпр + Т.ПостатейныеПостоянныеУпр + Т.ПостатейныеПеременныеУпр < 0
	|		ИЛИ Т.СтоимостьНДД < 0
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Т.Регистратор КАК ДокументДвижения,
	// Измерения
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.СтатьяРасходовСписания,
	|	Т.АналитикаРасходов,
	// Реквизиты статьи расходов
	|	Т.ВариантРаспределенияРасходовУпр,
	|	Т.ВариантРаспределенияРасходовРегл,
	|	Т.ПринятиеКНалоговомуУчету,
	// Ресурсы
	|	-(Т.Стоимость + Т.ДопРасходы + Т.Трудозатраты + Т.ПостатейныеПостоянныеСНДС + Т.ПостатейныеПеременныеСНДС) КАК Сумма,
	|	-(Т.СтоимостьБезНДС + Т.ДопРасходыБезНДС + Т.Трудозатраты + Т.ПостатейныеПостоянныеБезНДС + Т.ПостатейныеПеременныеБезНДС) КАК СуммаБезНДС,
	|	-(Т.СтоимостьРегл + Т.ДопРасходыРегл + Т.ТрудозатратыРегл + Т.ПостатейныеПостоянныеРегл + Т.ПостатейныеПеременныеРегл) КАК СуммаРегл,
	|	-(ВЫБОР
	|		КОГДА НЕ Т.ПринятиеКНалоговомуУчету
	|			ТОГДА Т.СтоимостьРегл + Т.ДопРасходыРегл + Т.ТрудозатратыРегл + Т.ПостатейныеПостоянныеРегл + Т.ПостатейныеПеременныеРегл
	|		ИНАЧЕ Т.ПостояннаяРазница КОНЕЦ) КАК ПостояннаяРазница,
	|	-Т.ВременнаяРазница КАК ВременнаяРазница,
	|	-Т.СтоимостьНДД КАК СуммаНДД,
	|	-(Т.СтоимостьУпр + Т.ДопРасходыУпр + Т.ТрудозатратыУпр + Т.ПостатейныеПостоянныеУпр + Т.ПостатейныеПеременныеУпр) КАК СуммаУпр,
	// Реквизиты
	|	Т.ХозяйственнаяОперация,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.НастройкаХозяйственнойОперации,
	|	Т.ИдентификаторФинЗаписи
	|ИЗ
	|	ДвиженияТаблицаКорректировки КАК Т
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|	И Т.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)
	|";
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтДвиженияВозвратыПрошлыхПериодовПрочиеРасходы";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияПрочиеРасходы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияПрочиеРасходы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);

#КонецОбласти

	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвиженияИзВременныхТаблиц(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	
	// Уничтожим ненужные временные таблицы.
	СуществующиеВТ = РасчетСебестоимостиУниверсальныеАлгоритмы.СоединитьСтроки(СуществующиеВТ, 
		"СторноОтчетыКомиссионера, ВтДатыДокументовИсточников");
	НовыеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета, СуществующиеВТ);
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, НовыеВТ);
	
КонецПроцедуры

// Выполняет формирование стоимостных движений для исправлений документов прошлых периодов и возвратов прошлых периодов в текущем периоде. 
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура СкорректироватьСтоимостьСторноДвиженийИсправленныхДокументов(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СкорректироватьСтоимостьСторноДвиженийИсправленныхДокументов");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	СуществующиеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета);
	
	СоответствиеВременныхТаблицДвижений = Новый Соответствие;

#Область ИсправленныеДокументы
	Запрос.Текст = РасчетСебестоимостиЗаполнениеПартий.ТекстИсправленныеДокументы(); // вт ИсправленныеДокументы

	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
#КонецОбласти

#Область ИсправлениеСебестоимостьТоваров

	// Заполнение полей должно соответствовать функции РасчетСебестоимостиЗаполнениеПартий.ТекстСторноДвиженияИсправленныхДокументовПрошлогоПериода()
	// Поля: Регистратор, Период, ТипЗаписи, ДокументИсточник
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	(ВЫБОР
	|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпуск)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СписанияНаВыпускСторноПрошлогоПериода)
	|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Дополнение)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДополнениеПрошлыйПериод)
	|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СторноВозвратаПрошлыхПериодов)
	|		КОГДА ДД.ТипЗаписи В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода)
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		    И ДД.ТипЗаписи В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Перемещение),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПеремещениеОбособленно))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода)
	|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		 И НЕ ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|		 ИЛИ ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода) КОНЕЦ) КАК ТипЗаписи,
	|	ИсправленныеДокументы.Период КАК Период,
	|	ИсправленныеДокументы.Регистратор КАК Регистратор,
	|	ДД.ВидДвижения,
	// Измерения
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	// Ресурсы
	|	-ДД.Стоимость КАК Стоимость,
	|	-ДД.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	-ДД.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	-ДД.СтоимостьУпр КАК СтоимостьУпр,
	|	-ДД.ДопРасходыУпр КАК ДопРасходыУпр,
	|	-ДД.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	-ДД.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	|	-ДД.ТрудозатратыУпр КАК ТрудозатратыУпр,
	|	-ДД.ПостатейныеПостоянныеУпр КАК ПостатейныеПостоянныеУпр,
	|	-ДД.ПостатейныеПеременныеУпр КАК ПостатейныеПеременныеУпр,
	|	-ДД.ДопРасходы КАК ДопРасходы,
	|	-ДД.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|	-ДД.Трудозатраты КАК Трудозатраты,
	|	-ДД.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	-ДД.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	-ДД.СтоимостьРегл КАК СтоимостьРегл,
	|	-ДД.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	-ДД.ПостояннаяРазница КАК ПостояннаяРазница,
	|	-ДД.ВременнаяРазница КАК ВременнаяРазница,
	|	-ДД.СтоимостьНДД КАК СтоимостьНДД,
	|	-ДД.ДопРасходыРегл КАК ДопРасходыРегл,
	|	-ДД.ТрудозатратыРегл КАК ТрудозатратыРегл,
	|	-ДД.ПостатейныеПостоянныеРегл КАК ПостатейныеПостоянныеРегл,
	|	-ДД.ПостатейныеПеременныеРегл КАК ПостатейныеПеременныеРегл,
	|	-ДД.РезервПодОбесценениеРегл КАК РезервПодОбесценениеРегл,
	|	-ДД.РезервПодОбесценениеУпр КАК РезервПодОбесценениеУпр,
	// Реквизиты
	|	ДД.ХозяйственнаяОперация,
	|	ДД.КорАналитикаУчетаНоменклатуры,
	|	ДД.КорРазделУчета,
	|	ДД.КорВидЗапасов,
	|	ДД.КорОрганизация,
	|	ДД.КорСтоимость,
	|	ДД.АналитикаУчетаПоПартнерам,
	|	ДД.ЗаказКлиента,
	|	ДД.Подразделение,
	|	ДД.АналитикаРасходов,
	|	ДД.СтатьяРасходовСписания,
	|	ДД.СтатьяДоходов,
	|	ДД.АналитикаДоходов,
	|	ДД.ПериодПродажи,
	|	ДД.СтатьяАктивовПассивов,
	|	ДД.АналитикаАктивовПассивов,
	|	ИсправленныеДокументы.Регистратор КАК ДокументДвижения,
	|	ДД.ИдентификаторСтроки,
	|	ДД.ИдентификаторФинЗаписи,
	|	ДД.ГруппаПродукции,
	|	ДД.КорПартия,
	|	ДД.КорАналитикаУчетаПартий,
	|	ДД.КорАналитикаФинансовогоУчета,
	|	ДД.КорВидДеятельностиНДС,
	|	-ДД.НДСУпр КАК НДСУпр,
	|	-ДД.НДСРегл КАК НДСРегл,
	|	ДД.СтатьяКалькуляции,
	|	ДД.Регистратор КАК ДокументИсточник,
	|	ДД.КорНаправлениеДеятельности,
	|	ДД.КодСтроки,
	|	ДД.НастройкаХозяйственнойОперации,
	|	ИСТИНА КАК Сторно
	|ПОМЕСТИТЬ ВтДвиженияСебестоимости
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсправленныеДокументы КАК ИсправленныеДокументы
	|		ПО ИсправленныеДокументы.ДокументИсточник = ДД.Регистратор
	|ГДЕ
	|	ДД.Организация В (&МассивОрганизаций)
	|	И ДД.Период < &НачалоПериода 
	|	И ДД.Активность
	|	И ДД.РасчетСебестоимости
	|	И НЕ (&ИспользовалсяПартионныйУчетДоПереходаНаВерсию22 = ИСТИНА // значение параметра может быть НЕОПРЕДЕЛЕНО
	|		И ДД.Период < &ДатаПереходаНаПартионныйУчетВерсии22)
	|	И НЕ ДД.Сторно
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	(ВЫБОР
	|		КОГДА ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратПрошлыхПериодов)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СторноВозвратаПрошлыхПериодов)
	|		КОГДА ДД.СлужебноеВидДвиженияПриход
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПрошлогоПериода) КОНЕЦ) КАК ТипЗаписи,
	|	ИсправленныеДокументы.Период КАК Период,
	|	ИсправленныеДокументы.Регистратор КАК Регистратор,
	|	(ВЫБОР
	|		КОГДА ДД.СлужебноеВидДвиженияПриход ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КОНЕЦ) КАК ВидДвижения,
	// Измерения
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	// Ресурсы
	|	-ДД.Стоимость КАК Стоимость,
	|	-ДД.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	-ДД.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	-ДД.СтоимостьУпр КАК СтоимостьУпр,
	|	-ДД.ДопРасходыУпр КАК ДопРасходыУпр,
	|	-ДД.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	-ДД.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	|	-ДД.ТрудозатратыУпр КАК ТрудозатратыУпр,
	|	-ДД.ПостатейныеПостоянныеУпр КАК ПостатейныеПостоянныеУпр,
	|	-ДД.ПостатейныеПеременныеУпр КАК ПостатейныеПеременныеУпр,
	|	-ДД.ДопРасходы КАК ДопРасходы,
	|	-ДД.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|	-ДД.Трудозатраты КАК Трудозатраты,
	|	-ДД.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	-ДД.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	-ДД.СтоимостьРегл КАК СтоимостьРегл,
	|	-ДД.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	-ДД.ПостояннаяРазница КАК ПостояннаяРазница,
	|	-ДД.ВременнаяРазница КАК ВременнаяРазница,
	|	-ДД.СтоимостьНДД КАК СтоимостьНДД,
	|	-ДД.ДопРасходыРегл КАК ДопРасходыРегл,
	|	-ДД.ТрудозатратыРегл КАК ТрудозатратыРегл,
	|	-ДД.ПостатейныеПостоянныеРегл КАК ПостатейныеПостоянныеРегл,
	|	-ДД.ПостатейныеПеременныеРегл КАК ПостатейныеПеременныеРегл,
	|	-ДД.РезервПодОбесценениеРегл КАК РезервПодОбесценениеРегл,
	|	-ДД.РезервПодОбесценениеУпр КАК РезервПодОбесценениеУпр,
	// Реквизиты
	|	ДД.ХозяйственнаяОперация,
	|	ДД.КорАналитикаУчетаНоменклатуры,
	|	ДД.КорРазделУчета,
	|	ДД.КорВидЗапасов,
	|	ДД.КорОрганизация,
	|	ДД.КорСтоимость,
	|	ДД.АналитикаУчетаПоПартнерам,
	|	ДД.ЗаказКлиента,
	|	ДД.Подразделение,
	|	ДД.АналитикаРасходов,
	|	ДД.СтатьяРасходовСписания,
	|	ДД.СтатьяДоходов,
	|	ДД.АналитикаДоходов,
	|	ДД.ПериодПродажи,
	|	ДД.СтатьяАктивовПассивов,
	|	ДД.АналитикаАктивовПассивов,
	|	ИсправленныеДокументы.Регистратор КАК ДокументДвижения,
	|	ДД.ИдентификаторСтроки,
	|	ДД.ИдентификаторФинЗаписи,
	|	ДД.ГруппаПродукции,
	|	ДД.КорПартия,
	|	ДД.КорАналитикаУчетаПартий,
	|	ДД.КорАналитикаФинансовогоУчета,
	|	ДД.КорВидДеятельностиНДС,
	|	-ДД.НДСУпр КАК НДСУпр,
	|	-ДД.НДСРегл КАК НДСРегл,
	|	ДД.СтатьяКалькуляции,
	|	ДД.Регистратор КАК ДокументИсточник,
	|	ДД.КорНаправлениеДеятельности,
	|	ДД.КодСтроки,
	|	ДД.НастройкаХозяйственнойОперации,
	|	ИСТИНА КАК Сторно
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсправленныеДокументы КАК ИсправленныеДокументы
	|		ПО ИсправленныеДокументы.ДокументИсточник = ДД.Регистратор
	|ГДЕ
	|	ДД.РасчетСебестоимости
	|	И НЕ ДД.Сторно
	|
	
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтСебестоимостьСторноДвижений";
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	ИмяВременнойТаблицыИсточник = "ВтДвиженияСебестоимости";
	
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, ИмяВременнойТаблицыИсточник);
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, ИмяВременнойТаблицыИсточник, ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти

#Область ИсправлениеВыручкаИСебестоимостьПродаж

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИсправленныеДокументы.Период КАК Период,
	|	ИсправленныеДокументы.Регистратор КАК Регистратор,
	// Измерения
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.ЗаказКлиента,
	|	ДД.АналитикаУчетаПоПартнерам,
	|	ДД.Подразделение,
	|	ДД.ТипЗапасов,
	|	ДД.ВидЗапасов,
	|	ДД.РазделУчета,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|	ДД.Менеджер,
	|	ДД.Склад,
	|	ДД.Соглашение,
	|	ДД.Договор,
	|	ДД.ХозяйственнаяОперация,
	|	ДД.АналитикаУчетаНаборов,
	|	ДД.НаправлениеДеятельностиКонтрагента,
	|	ДД.НаправлениеДеятельностиНоменклатуры,
	// Ресурсы
	|	-ДД.Стоимость КАК Стоимость,
	|	-ДД.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	-ДД.ДопРасходы КАК ДопРасходы,
	|	-ДД.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|	-ДД.СтоимостьУпр КАК СтоимостьУпр,
	|	-ДД.СтоимостьРегл КАК СтоимостьРегл,
	|	-ДД.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	-ДД.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	-ДД.ПостояннаяРазница КАК ПостояннаяРазница,
	|	-ДД.ДопРасходыУпр КАК ДопРасходыУпр,
	|	-ДД.ДопРасходыРегл КАК ДопРасходыРегл,
	|	-ДД.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	-ДД.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	-ДД.ПостатейныеПостоянныеУпр КАК ПостатейныеПостоянныеУпр,
	|	-ДД.ПостатейныеПостоянныеРегл КАК ПостатейныеПостоянныеРегл,
	|	-ДД.Трудозатраты КАК Трудозатраты,
	|	-ДД.ТрудозатратыУпр КАК ТрудозатратыУпр,
	|	-ДД.ТрудозатратыРегл КАК ТрудозатратыРегл,
	|	-ДД.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	-ДД.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	|	-ДД.ПостатейныеПеременныеУпр КАК ПостатейныеПеременныеУпр,
	|	-ДД.ПостатейныеПеременныеРегл КАК ПостатейныеПеременныеРегл,
	|	-ДД.РезервПодОбесценениеРегл КАК РезервПодОбесценениеРегл,
	|	-ДД.РезервПодОбесценениеУпр КАК РезервПодОбесценениеУпр,
	// Реквизиты
	|	ДД.НалогообложениеНДС,
	|	ДД.ВалютаВзаиморасчетов,
	|	ДД.ВалютаДокумента,
	|	ДД.ИсточникГФУНоменклатуры,
	|	ДД.ИсточникГФУРасчетов,
	|	ДД.НастройкаХозяйственнойОперации,
	|	ДД.ИдентификаторФинЗаписи,
	|	ИСТИНА КАК Сторно
	|ПОМЕСТИТЬ ВтДвиженияСебестоимостьПродаж
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсправленныеДокументы КАК ИсправленныеДокументы
	|		ПО ИсправленныеДокументы.ДокументИсточник = ДД.Регистратор
	|ГДЕ
	|	ДД.АналитикаУчетаПоПартнерам.Организация В (&МассивОрганизаций)
	|	И ДД.Период < &НачалоПериода 
	|	И ДД.Активность
	|	И ДД.РасчетСебестоимости
	|	И НЕ (&ИспользовалсяПартионныйУчетДоПереходаНаВерсию22 = ИСТИНА // значение параметра может быть НЕОПРЕДЕЛЕНО
	|		И ДД.Период < &ДатаПереходаНаПартионныйУчетВерсии22)
	|	И НЕ ДД.Сторно
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИсправленныеДокументы.Период КАК Период,
	|	ИсправленныеДокументы.Регистратор КАК Регистратор,
	// Измерения
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.ЗаказКлиента,
	|	ДД.АналитикаУчетаПоПартнерам,
	|	ДД.Подразделение,
	|	ДД.ТипЗапасов,
	|	ДД.ВидЗапасов,
	|	ДД.РазделУчета,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|	ДД.Менеджер,
	|	ДД.Склад,
	|	ДД.Соглашение,
	|	ДД.Договор,
	|	ДД.ХозяйственнаяОперация,
	|	ДД.АналитикаУчетаНаборов,
	|	ДД.НаправлениеДеятельностиКонтрагента,
	|	ДД.НаправлениеДеятельностиНоменклатуры,
	// Ресурсы
	|	-ДД.Стоимость КАК Стоимость,
	|	-ДД.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	-ДД.ДопРасходы КАК ДопРасходы,
	|	-ДД.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|	-ДД.СтоимостьУпр КАК СтоимостьУпр,
	|	-ДД.СтоимостьРегл КАК СтоимостьРегл,
	|	-ДД.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	-ДД.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	-ДД.ПостояннаяРазница КАК ПостояннаяРазница,
	|	-ДД.ДопРасходыУпр КАК ДопРасходыУпр,
	|	-ДД.ДопРасходыРегл КАК ДопРасходыРегл,
	|	-ДД.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	-ДД.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	-ДД.ПостатейныеПостоянныеУпр КАК ПостатейныеПостоянныеУпр,
	|	-ДД.ПостатейныеПостоянныеРегл КАК ПостатейныеПостоянныеРегл,
	|	-ДД.Трудозатраты КАК Трудозатраты,
	|	-ДД.ТрудозатратыУпр КАК ТрудозатратыУпр,
	|	-ДД.ТрудозатратыРегл КАК ТрудозатратыРегл,
	|	-ДД.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	-ДД.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	|	-ДД.ПостатейныеПеременныеУпр КАК ПостатейныеПеременныеУпр,
	|	-ДД.ПостатейныеПеременныеРегл КАК ПостатейныеПеременныеРегл,
	|	-ДД.РезервПодОбесценениеРегл КАК РезервПодОбесценениеРегл,
	|	-ДД.РезервПодОбесценениеУпр КАК РезервПодОбесценениеУпр,
	// Реквизиты
	|	ДД.НалогообложениеНДС,
	|	ДД.ВалютаВзаиморасчетов,
	|	ДД.ВалютаДокумента,
	|	ДД.ИсточникГФУНоменклатуры,
	|	ДД.ИсточникГФУРасчетов,
	|	ДД.НастройкаХозяйственнойОперации,
	|	ДД.ИдентификаторФинЗаписи,
	|	ИСТИНА КАК Сторно
	|ИЗ
	|	ВТКэшРасчетныеОборотыВыручкаИСебестоимостьПродаж КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсправленныеДокументы КАК ИсправленныеДокументы
	|		ПО ИсправленныеДокументы.ДокументИсточник = ДД.Регистратор
	|ГДЕ
	|	ДД.РасчетСебестоимости
	|	И НЕ ДД.Сторно
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтВыручкаИСебестоимостьПродажСторноДвижений";
	ИмяРегистра = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияСебестоимостьПродаж");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияСебестоимостьПродаж", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);

#КонецОбласти

#Область ИсправлениеЗакупки

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Т.Период,
	|	Т.Регистратор,
	// Измерения
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУДругойОрганизации) КАК ХозяйственнаяОперация,
	|	КлючиАналитикиУчетаПоПартнерам.Контрагент КАК Организация,
	|	Т.Подразделение,
	|	Т.Менеджер,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.Склад,
	|	Т.ТипЗапасов,
	|	Т.ВидЗапасов,
	|	КлючиАналитикиУчетаПоПартнерам.Партнер КАК Партнер,
	|	КлючиАналитикиУчетаПоПартнерам.Организация КАК Контрагент,
	|	Т.Соглашение,
	|	Т.Договор,
	// Ресурсы
	|	Т.Стоимость + Т.ДопРасходы + Т.Трудозатраты + Т.ПостатейныеПостоянныеСНДС + Т.ПостатейныеПеременныеСНДС КАК Стоимость,
	|	Т.СтоимостьБезНДС + Т.ДопРасходыБезНДС + Т.Трудозатраты + Т.ПостатейныеПостоянныеБезНДС + Т.ПостатейныеПеременныеБезНДС КАК СтоимостьБезНДС,
	// Реквизиты
	|	Т.ВалютаДокумента,
	|	Т.ВалютаВзаиморасчетов,
	|	Т.Регистратор КАК ДокументДвижения,
	|	Т.ИсточникГФУНоменклатуры,
	|	Т.ИсточникГФУРасчетов,
	|	Т.Сторно
	|ПОМЕСТИТЬ ВтДвиженияТаблицаЗакупки
	|ИЗ
	|	ВтДвиженияСебестоимостьПродаж КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК КлючиАналитикиУчетаПоПартнерам
	|	ПО КлючиАналитикиУчетаПоПартнерам.Ссылка = Т.АналитикаУчетаПоПартнерам
	|ГДЕ
	|	Т.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|";
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);

	ИмяВременнойТаблицы = "ВтДвиженияЗакупки";
	ИмяРегистра = Метаданные.РегистрыНакопления.Закупки.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияТаблицаЗакупки");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияТаблицаЗакупки", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);

#КонецОбласти


#Область ИсправлениеПрочиеРасходы

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИсправленныеДокументы.Период КАК Период,
	|	ИсправленныеДокументы.Регистратор КАК Регистратор,
	|	ДД.ВидДвижения,
	// Измерения
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.НаправлениеДеятельности,
	|	ДД.СтатьяРасходов,
	|	ДД.АналитикаРасходов,
	// Ресурсы
	|	-ДД.Сумма КАК Сумма,
	|	-ДД.СуммаБезНДС КАК СуммаБезНДС,
	|	-ДД.СуммаРегл КАК СуммаРегл,
	|	-ДД.ПостояннаяРазница КАК ПостояннаяРазница,
	|	-ДД.ВременнаяРазница КАК ВременнаяРазница,
	|	-ДД.СуммаНДД КАК СуммаНДД,
	|	-ДД.СуммаУпр КАК СуммаУпр,
	// Реквизиты
	|	ДД.ХозяйственнаяОперация,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.ДокументДвижения,
	|	ДД.ИдентификаторСтроки,
	|	ДД.КорНаправлениеДеятельности,
	|	ДД.НастройкаХозяйственнойОперации,
	|	ДД.ИдентификаторФинЗаписи,
	|	ИСТИНА КАК Сторно
	|
	|ПОМЕСТИТЬ ВтДвиженияПрочиеРасходы
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсправленныеДокументы КАК ИсправленныеДокументы
	|		ПО ИсправленныеДокументы.ДокументИсточник = ДД.Регистратор
	|ГДЕ
	|	ДД.Организация В (&МассивОрганизаций)
	|	И ДД.Период < &НачалоПериода
	|	И ДД.Активность
	|	И ДД.РасчетСебестоимости
	|	И НЕ (&ИспользовалсяПартионныйУчетДоПереходаНаВерсию22 = ИСТИНА // значение параметра может быть НЕОПРЕДЕЛЕНО
	|		И ДД.Период < &ДатаПереходаНаПартионныйУчетВерсии22)
	|	И НЕ ДД.Сторно
	|
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтПрочиеРасходыСторноДвижений";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияПрочиеРасходы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияПрочиеРасходы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти

#Область ИсправлениеПрочиеДоходы

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИсправленныеДокументы.Период КАК Период,
	|	ИсправленныеДокументы.Регистратор КАК Регистратор,
	|	ДД.ВидДвижения,
	// Измерения
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.НаправлениеДеятельности,
	|	ДД.СтатьяДоходов,
	|	ДД.АналитикаДоходов,
	// Ресурсы
	|	-ДД.Сумма КАК Сумма,
	|	-ДД.СуммаРегл КАК СуммаРегл,
	|	-ДД.СуммаУпр КАК СуммаУпр,
	// Реквизиты
	|	ДД.ХозяйственнаяОперация,
	|	ДД.КорНаправлениеДеятельности,
	|	ДД.НастройкаХозяйственнойОперации,
	|	ДД.ИдентификаторФинЗаписи,
	|	ИСТИНА КАК Сторно
	|
	|ПОМЕСТИТЬ ВтДвиженияПрочиеДоходы
	|ИЗ
	|	РегистрНакопления.ПрочиеДоходы КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсправленныеДокументы КАК ИсправленныеДокументы
	|		ПО ИсправленныеДокументы.ДокументИсточник = ДД.Регистратор
	|ГДЕ
	|	ДД.Организация В (&МассивОрганизаций)
	|	И ДД.Период < &НачалоПериода
	|	И ДД.Активность
	|	И ДД.РасчетСебестоимости
	|	И НЕ (&ИспользовалсяПартионныйУчетДоПереходаНаВерсию22 = ИСТИНА // значение параметра может быть НЕОПРЕДЕЛЕНО
	|		И ДД.Период < &ДатаПереходаНаПартионныйУчетВерсии22)
	|	И НЕ ДД.Сторно
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтПрочиеДоходыСторноДвижений";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеДоходы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияПрочиеДоходы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияПрочиеДоходы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти

#Область ИсправлениеПрочиеАктивыПассивы

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИсправленныеДокументы.Период КАК Период,
	|	ИсправленныеДокументы.Регистратор КАК Регистратор,
	|	ДД.ВидДвижения,
	// Измерения
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.НаправлениеДеятельности,
	|	ДД.Статья,
	|	ДД.Аналитика,
	// Ресурсы
	|	-ДД.Сумма КАК Сумма,
	// Реквизиты
	|	ДД.ВидИсточника,
	|	ДД.Источник,
	|	ИСТИНА КАК Сторно
	|
	|ПОМЕСТИТЬ ВтДвиженияПрочиеАктивыПассивы
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсправленныеДокументы КАК ИсправленныеДокументы
	|		ПО ИсправленныеДокументы.ДокументИсточник = ДД.Регистратор
	|ГДЕ
	|	ДД.Организация В (&МассивОрганизаций)
	|	И ДД.Период < &НачалоПериода
	|	И ДД.Активность
	|	И ДД.РасчетСебестоимости
	|	И НЕ (&ИспользовалсяПартионныйУчетДоПереходаНаВерсию22 = ИСТИНА // значение параметра может быть НЕОПРЕДЕЛЕНО
	|		И ДД.Период < &ДатаПереходаНаПартионныйУчетВерсии22)
	|	И НЕ ДД.Сторно
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтПрочиеАктивыПассивыСторноДвижений";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияПрочиеАктивыПассивы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияПрочиеАктивыПассивы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти

#Область ИсправлениеДвиженияНоменклатураДоходыРасходы

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИсправленныеДокументы.Период КАК Период,
	|	ИсправленныеДокументы.Регистратор КАК Регистратор,
	// Измерения
	|	ДД.ХозяйственнаяОперация,
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.НаправлениеДеятельностиНоменклатуры,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.Склад,
	|	ДД.ТипЗапасов,
	|	ДД.ВидЗапасов,
	|	ДД.НаправлениеДеятельностиСтатьи,
	|	ДД.СтатьяДоходовРасходов,
	|	ДД.АналитикаДоходов,
	|	ДД.АналитикаРасходов,
	|	ДД.АналитикаАктивовПассивов,
	// Ресурсы
	|	-ДД.Стоимость КАК Стоимость,
	|	-ДД.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	-ДД.СтоимостьУпр КАК СтоимостьУпр,
	|	-ДД.СтоимостьРегл КАК СтоимостьРегл,
	|	-ДД.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	-ДД.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	-ДД.ДопРасходы КАК ДопРасходы,
	|	-ДД.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|	-ДД.ДопРасходыУпр КАК ДопРасходыУпр,
	|	-ДД.ДопРасходыРегл КАК ДопРасходыРегл,
	|	-ДД.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	-ДД.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	-ДД.ПостатейныеПостоянныеУпр КАК ПостатейныеПостоянныеУпр,
	|	-ДД.ПостатейныеПостоянныеРегл КАК ПостатейныеПостоянныеРегл,
	|	-ДД.Трудозатраты КАК Трудозатраты,
	|	-ДД.ТрудозатратыУпр КАК ТрудозатратыУпр,
	|	-ДД.ТрудозатратыРегл КАК ТрудозатратыРегл,
	|	-ДД.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	-ДД.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	|	-ДД.ПостатейныеПеременныеУпр КАК ПостатейныеПеременныеУпр,
	|	-ДД.ПостатейныеПеременныеРегл КАК ПостатейныеПеременныеРегл,
	|	-ДД.ПостояннаяРазница КАК ПостояннаяРазница,
	|	-ДД.ВременнаяРазница КАК ВременнаяРазница,
	|	-ДД.РезервПодОбесценениеРегл КАК РезервПодОбесценениеРегл,
	|	-ДД.РезервПодОбесценениеУпр КАК РезервПодОбесценениеУпр,
	// Реквизиты
	|	ДД.ИсточникГФУНоменклатуры,
	|	ИСТИНА КАК Сторно
	|ПОМЕСТИТЬ ВтДвиженияНоменклатураДоходыРасходы
	|ИЗ
	|	РегистрНакопления.ДвиженияНоменклатураДоходыРасходы КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсправленныеДокументы КАК ИсправленныеДокументы
	|		ПО ИсправленныеДокументы.ДокументИсточник = ДД.Регистратор
	|ГДЕ
	|	ДД.Организация В (&МассивОрганизаций)
	|	И ДД.Период < &НачалоПериода 
	|	И ДД.Активность
	|	И ДД.РасчетСебестоимости
	|	И НЕ (&ИспользовалсяПартионныйУчетДоПереходаНаВерсию22 = ИСТИНА // значение параметра может быть НЕОПРЕДЕЛЕНО
	|		И ДД.Период < &ДатаПереходаНаПартионныйУчетВерсии22)
	|	И НЕ ДД.Сторно
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтДвиженияНоменклатураДоходыРасходыСторноДвижений";
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияНоменклатураДоходыРасходы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияНоменклатураДоходыРасходы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти

#Область ИсправлениеДвиженияНоменклатураНоменклатура

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ИсправленныеДокументы.Период КАК Период,
	|	ИсправленныеДокументы.Регистратор КАК Регистратор,
	// Измерения
	|	ДД.ХозяйственнаяОперация,
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.НаправлениеДеятельности,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.Склад,
	|	ДД.ТипЗапасов,
	|	ДД.ВидЗапасов,
	|	ДД.КорНаправлениеДеятельности,
	|	ДД.КорАналитикаУчетаНоменклатуры,
	|	ДД.КорСклад,
	|	ДД.КорТипЗапасов,
	|	ДД.КорВидЗапасов,
	// Ресурсы
	|	-ДД.Стоимость КАК Стоимость,
	|	-ДД.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	-ДД.СтоимостьУпр КАК СтоимостьУпр,
	|	-ДД.СтоимостьРегл КАК СтоимостьРегл,
	|	-ДД.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	-ДД.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	-ДД.ДопРасходы КАК ДопРасходы,
	|	-ДД.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|	-ДД.ДопРасходыУпр КАК ДопРасходыУпр,
	|	-ДД.ДопРасходыРегл КАК ДопРасходыРегл,
	|	-ДД.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	-ДД.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	-ДД.ПостатейныеПостоянныеУпр КАК ПостатейныеПостоянныеУпр,
	|	-ДД.ПостатейныеПостоянныеРегл КАК ПостатейныеПостоянныеРегл,
	|	-ДД.Трудозатраты КАК Трудозатраты,
	|	-ДД.ТрудозатратыУпр КАК ТрудозатратыУпр,
	|	-ДД.ТрудозатратыРегл КАК ТрудозатратыРегл,
	|	-ДД.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	-ДД.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	|	-ДД.ПостатейныеПеременныеУпр КАК ПостатейныеПеременныеУпр,
	|	-ДД.ПостатейныеПеременныеРегл КАК ПостатейныеПеременныеРегл,
	|	-ДД.ПостояннаяРазница КАК ПостояннаяРазница,
	|	-ДД.ВременнаяРазница КАК ВременнаяРазница,
	|	-ДД.РезервПодОбесценениеРегл КАК РезервПодОбесценениеРегл,
	|	-ДД.РезервПодОбесценениеУпр КАК РезервПодОбесценениеУпр,
	// Реквизиты
	|	ДД.ИсточникГФУНоменклатуры,
	|	ДД.КорИсточникГФУНоменклатуры,
	|	ДД.КорОрганизация,
	|	ИСТИНА КАК Сторно
	|ПОМЕСТИТЬ ВтДвиженияНоменклатураНоменклатура
	|ИЗ
	|	РегистрНакопления.ДвиженияНоменклатураНоменклатура КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ИсправленныеДокументы КАК ИсправленныеДокументы
	|		ПО ИсправленныеДокументы.ДокументИсточник = ДД.Регистратор
	|ГДЕ
	|	ДД.Организация В (&МассивОрганизаций)
	|	И ДД.Период < &НачалоПериода 
	|	И ДД.Активность
	|	И ДД.РасчетСебестоимости
	|	И НЕ (&ИспользовалсяПартионныйУчетДоПереходаНаВерсию22 = ИСТИНА // значение параметра может быть НЕОПРЕДЕЛЕНО
	|		И ДД.Период < &ДатаПереходаНаПартионныйУчетВерсии22)
	|	И НЕ ДД.Сторно
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтДвиженияНоменклатураНоменклатураСторноДвижений";
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияНоменклатураНоменклатура");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияНоменклатураНоменклатура", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвиженияИзВременныхТаблиц(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	
	// Уничтожим ненужные временные таблицы.
	НовыеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета, СуществующиеВТ);
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, НовыеВТ);
	
КонецПроцедуры

// Этап сохранения ранее рассчитанных движений.
// Выполняет сохранение стоимостных движений для ранее рассчитанных документов. 
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура СохранитьДвиженияРасчетаСебестоимостиРассчитанныхДокументов(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СохранитьДвиженияРасчетаСебестоимостиРассчитанныхДокументов");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	СуществующиеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета);
	
	СоответствиеВременныхТаблицДвижений = Новый Соответствие;
	
#Область СебестоимостьТоваров

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	|	ДД.ВидДвижения,
	// Измерения
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	// Ресурсы
	|	СУММА(ДД.Стоимость) КАК Стоимость,
	|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
	|	СУММА(ДД.СтоимостьЗабалансовая) КАК СтоимостьЗабалансовая,
	|	СУММА(ДД.СтоимостьУпр) КАК СтоимостьУпр,
	|	СУММА(ДД.ДопРасходыУпр) КАК ДопРасходыУпр,
	|	СУММА(ДД.ПостатейныеПеременныеСНДС) КАК ПостатейныеПеременныеСНДС,
	|	СУММА(ДД.ПостатейныеПеременныеБезНДС) КАК ПостатейныеПеременныеБезНДС,
	|	СУММА(ДД.ТрудозатратыУпр) КАК ТрудозатратыУпр,
	|	СУММА(ДД.ПостатейныеПостоянныеУпр) КАК ПостатейныеПостоянныеУпр,
	|	СУММА(ДД.ПостатейныеПеременныеУпр) КАК ПостатейныеПеременныеУпр,
	|	СУММА(ДД.ДопРасходы) КАК ДопРасходы,
	|	СУММА(ДД.ДопРасходыБезНДС) КАК ДопРасходыБезНДС,
	|	СУММА(ДД.Трудозатраты) КАК Трудозатраты,
	|	СУММА(ДД.ПостатейныеПостоянныеСНДС) КАК ПостатейныеПостоянныеСНДС,
	|	СУММА(ДД.ПостатейныеПостоянныеБезНДС) КАК ПостатейныеПостоянныеБезНДС,
	|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
	|	СУММА(ДД.СтоимостьЗабалансоваяРегл) КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
	|	СУММА(ДД.СтоимостьНДД) КАК СтоимостьНДД,
	|	СУММА(ДД.ДопРасходыРегл) КАК ДопРасходыРегл,
	|	СУММА(ДД.ТрудозатратыРегл) КАК ТрудозатратыРегл,
	|	СУММА(ДД.ПостатейныеПостоянныеРегл) КАК ПостатейныеПостоянныеРегл,
	|	СУММА(ДД.ПостатейныеПеременныеРегл) КАК ПостатейныеПеременныеРегл,
	|	СУММА(ДД.РезервПодОбесценениеРегл) КАК РезервПодОбесценениеРегл,
	|	СУММА(ДД.РезервПодОбесценениеУпр) КАК РезервПодОбесценениеУпр,
	// Реквизиты
	|	ДД.ХозяйственнаяОперация,
	|	ДД.КорАналитикаУчетаНоменклатуры,
	|	ДД.КорРазделУчета,
	|	ДД.КорВидЗапасов,
	|	ДД.КорОрганизация,
	|	ДД.КорСтоимость,
	|	ДД.АналитикаУчетаПоПартнерам,
	|	ДД.ЗаказКлиента,
	|	ДД.Подразделение,
	|	ДД.АналитикаРасходов,
	|	ДД.СтатьяРасходовСписания,
	|	ДД.СтатьяДоходов,
	|	ДД.АналитикаДоходов,
	|	ДД.ПериодПродажи,
	|	ДД.СтатьяАктивовПассивов,
	|	ДД.АналитикаАктивовПассивов,
	|	ДД.ДокументДвижения,
	|	ДД.ИдентификаторСтроки,
	|	ДД.ГруппаПродукции,
	|	ДД.КорПартия,
	|	ДД.КорАналитикаУчетаПартий,	
	|	ДД.КорАналитикаФинансовогоУчета,
	|	ДД.КорВидДеятельностиНДС,
	|	ДД.НДСУпр КАК НДСУпр,
	|	ДД.НДСРегл КАК НДСРегл,
	|	ДД.СтатьяКалькуляции,
	|	ДД.ТипЗаписи,
	|	ДД.ДокументИсточник,
	|	ДД.КорНаправлениеДеятельности,
	|	ДД.КодСтроки,
	|	ДД.НастройкаХозяйственнойОперации,
	|	ДД.ИдентификаторФинЗаписи,
	|	ДД.Сторно,
	|	ДД.НастройкаСчетовУчета,
	|	(ВЫБОР
	|		КОГДА &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
	|		 ИЛИ НЕ &ВыделятьОтклоненияСебестоимостиОкончательногоРасчета
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДД.ДокументРасчета КОНЕЦ) КАК ДокументРасчета,
	|	(ВЫБОР
	|		КОГДА ДД.РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПустаяСсылка)
	|			ТОГДА &РежимЗакрытияМесяца
	|		ИНАЧЕ ДД.РежимЗакрытияМесяца КОНЕЦ) КАК РежимЗакрытияМесяца
	|
	|ПОМЕСТИТЬ ВтДвиженияСебестоимости
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК ДД
	|
	// Проверка по рассчитанным документам так же есть в 
	// см. РасчетСебестоимостиРешениеСЛУ.ТекстВтУзлыКорректировки_МатериальныеИТрудозатраты
	// см. РасчетСебестоимостиРешениеСЛУ.ТекстСебестоимостьНалоговыйУчет
	// см. РасчетСебестоимостиНДД.ТекстСебестоимостьСтоимостьНДД
	// Условие соединения должно совпадать (кроме типа соединения).
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РассчитанныеДокументы КАК РассчитанныеДокументы
	|		ПО РассчитанныеДокументы.Период = ДД.Период
	|		И РассчитанныеДокументы.Регистратор = ДД.Регистратор
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДД.Организация В(&МассивОрганизаций)
	|	И ДД.Активность
	|	И ДД.РасчетСебестоимости
	|	И НЕ ДД.Сторно
	|
	|СГРУППИРОВАТЬ ПО
	|	ДД.Период,
	|	ДД.Регистратор,
	|	ДД.ВидДвижения,
	// Измерения
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.РазделУчета,
	|	ДД.ВидЗапасов,
	|	ДД.Организация,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	// Реквизиты
	|	ДД.ХозяйственнаяОперация,
	|	ДД.КорАналитикаУчетаНоменклатуры,
	|	ДД.КорРазделУчета,
	|	ДД.КорВидЗапасов,
	|	ДД.КорОрганизация,
	|	ДД.КорСтоимость,
	|	ДД.АналитикаУчетаПоПартнерам,
	|	ДД.ЗаказКлиента,
	|	ДД.Подразделение,
	|	ДД.АналитикаРасходов,
	|	ДД.СтатьяРасходовСписания,
	|	ДД.СтатьяДоходов,
	|	ДД.АналитикаДоходов,
	|	ДД.ПериодПродажи,
	|	ДД.СтатьяАктивовПассивов,
	|	ДД.АналитикаАктивовПассивов,
	|	ДД.ДокументДвижения,
	|	ДД.ИдентификаторСтроки,
	|	ДД.ГруппаПродукции,
	|	ДД.КорПартия,
	|	ДД.КорАналитикаУчетаПартий,	
	|	ДД.КорАналитикаФинансовогоУчета,
	|	ДД.КорВидДеятельностиНДС,
	|	ДД.НДСУпр,
	|	ДД.НДСРегл,
	|	ДД.СтатьяКалькуляции,
	|	ДД.ТипЗаписи,
	|	ДД.ДокументИсточник,
	|	ДД.КорНаправлениеДеятельности,
	|	ДД.КодСтроки,
	|	ДД.НастройкаХозяйственнойОперации,
	|	ДД.ИдентификаторФинЗаписи,
	|	ДД.Сторно,
	|	ДД.НастройкаСчетовУчета,
	|	(ВЫБОР
	|		КОГДА &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
	|		 ИЛИ НЕ &ВыделятьОтклоненияСебестоимостиОкончательногоРасчета
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДД.ДокументРасчета КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА ДД.РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПустаяСсылка)
	|			ТОГДА &РежимЗакрытияМесяца
	|		ИНАЧЕ ДД.РежимЗакрытияМесяца КОНЕЦ)
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтСебестоимостьСохранениеДвижений";
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияСебестоимости");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияСебестоимости", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти

#Область ВыручкаИСебестоимостьПродаж

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	// Измерения
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.ЗаказКлиента,
	|	ДД.АналитикаУчетаПоПартнерам,
	|	ДД.Подразделение,
	|	ДД.ТипЗапасов,
	|	ДД.ВидЗапасов,
	|	ДД.РазделУчета,
	|	ДД.Партия,
	|	ДД.АналитикаУчетаПартий,
	|	ДД.АналитикаФинансовогоУчета,
	|	ДД.ВидДеятельностиНДС,
	|	ДД.Менеджер,
	|	ДД.Склад,
	|	ДД.Соглашение,
	|	ДД.Договор,
	|	ДД.ХозяйственнаяОперация,
	|	ДД.АналитикаУчетаНаборов,
	|	ДД.НаправлениеДеятельностиКонтрагента,
	|	ДД.НаправлениеДеятельностиНоменклатуры,
	// Ресурсы
	|	ДД.Количество,
	|	ДД.СуммаВыручки,
	|	ДД.СуммаВыручкиБезНДС,
	|	ДД.Стоимость,
	|	ДД.СтоимостьБезНДС,
	|	ДД.ДопРасходы,
	|	ДД.ДопРасходыБезНДС,
	|	ДД.СтоимостьУпр,
	|	ДД.СтоимостьРегл,
	|	ДД.СтоимостьЗабалансовая,
	|	ДД.СтоимостьЗабалансоваяРегл,
	|	ДД.СуммаВыручкиРегл,
	|	ДД.ПостояннаяРазница,
	|	ДД.ДопРасходыУпр,
	|	ДД.ДопРасходыРегл,
	|	ДД.ПостатейныеПостоянныеСНДС,
	|	ДД.ПостатейныеПостоянныеБезНДС,
	|	ДД.ПостатейныеПостоянныеУпр,
	|	ДД.ПостатейныеПостоянныеРегл,
	|	ДД.Трудозатраты,
	|	ДД.ТрудозатратыУпр,
	|	ДД.ТрудозатратыРегл,
	|	ДД.ПостатейныеПеременныеСНДС,
	|	ДД.ПостатейныеПеременныеБезНДС,
	|	ДД.ПостатейныеПеременныеУпр,
	|	ДД.ПостатейныеПеременныеРегл,
	|	ДД.ВременнаяРазница,
	|	ДД.СуммаВыручкиСНДСРегл,
	|	ДД.СуммаРучнойСкидки,
	|	ДД.СуммаАвтоматическойСкидки,
	// Реквизиты
	|	ДД.НалогообложениеНДС,
	|	ДД.ВалютаВзаиморасчетов,
	|	ДД.СуммаВВалютеВзаиморасчетов,
	|	ДД.СуммаБезНДСВВалютеВзаиморасчетов,
	|	ДД.ВалютаДокумента,
	|	ДД.СуммаВВалютеДокумента,
	|	ДД.СуммаБезНДСВВалютеДокумента,
	|	ДД.ИсточникГФУНоменклатуры,
	|	ДД.ДокументДвижения,
	|	ДД.РасчетСебестоимости,
	|	ДД.РасчетПартий,
	|	ДД.РасчетНеЗавершен,
	|	ДД.НДСРегл,
	|	ДД.НДСУпр,
	|	ДД.НастройкаХозяйственнойОперации,
	|	ДД.ИдентификаторФинЗаписи,
	|	ДД.ИсточникГФУРасчетов,
	|	(ВЫБОР
	|		КОГДА &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
	|		 ИЛИ НЕ &ВыделятьОтклоненияСебестоимостиОкончательногоРасчета
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДД.ДокументРасчета КОНЕЦ) КАК ДокументРасчета,
	|	(ВЫБОР
	|		КОГДА ДД.РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПустаяСсылка)
	|			ТОГДА &РежимЗакрытияМесяца
	|		ИНАЧЕ ДД.РежимЗакрытияМесяца КОНЕЦ) КАК РежимЗакрытияМесяца
	|
	|ПОМЕСТИТЬ ВтДвиженияВыручкаИСебестоимостьПродаж
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РассчитанныеДокументы КАК РассчитанныеДокументы
	|		ПО РассчитанныеДокументы.Период = ДД.Период
	|		И РассчитанныеДокументы.Регистратор = ДД.Регистратор
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДД.АналитикаУчетаПоПартнерам.Организация В(&МассивОрганизаций)
	|	И ДД.Активность
	|	И ДД.РасчетСебестоимости
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтВыручкаИСебестоимостьПродажСохранениеДвижений";
	ИмяРегистра = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияВыручкаИСебестоимостьПродаж");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияВыручкаИСебестоимостьПродаж", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти

#Область ПрочиеРасходы

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	|	ДД.ВидДвижения,
	// Измерения
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.НаправлениеДеятельности,
	|	ДД.СтатьяРасходов,
	|	ДД.АналитикаРасходов,
	// Ресурсы
	|	ДД.Сумма КАК Сумма,
	|	ДД.СуммаБезНДС КАК СуммаБезНДС,
	|	ДД.СуммаРегл КАК СуммаРегл,
	|	ДД.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ДД.ВременнаяРазница КАК ВременнаяРазница,
	|	ДД.СуммаНДД КАК СуммаНДД,
	|	ДД.СуммаУпр КАК СуммаУпр,
	// Реквизиты
	|	ДД.ХозяйственнаяОперация,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.ДокументДвижения,
	|	ДД.ИдентификаторСтроки,
	|	ДД.КорНаправлениеДеятельности,
	|	ДД.НастройкаХозяйственнойОперации,
	|	ДД.ИдентификаторФинЗаписи,
	|	ДД.Сторно,
	|	(ВЫБОР
	|		КОГДА &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
	|		 ИЛИ НЕ &ВыделятьОтклоненияСебестоимостиОкончательногоРасчета
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДД.ДокументРасчета КОНЕЦ) КАК ДокументРасчета,
	|	(ВЫБОР
	|		КОГДА ДД.РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПустаяСсылка)
	|			ТОГДА &РежимЗакрытияМесяца
	|		ИНАЧЕ ДД.РежимЗакрытияМесяца КОНЕЦ) КАК РежимЗакрытияМесяца
	|
	|ПОМЕСТИТЬ ВтДвиженияПрочиеРасходы
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РассчитанныеДокументы КАК РассчитанныеДокументы
	|		ПО РассчитанныеДокументы.Период = ДД.Период
	|		И РассчитанныеДокументы.Регистратор = ДД.Регистратор
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДД.Организация В(&МассивОрганизаций)
	|	И ДД.Активность
	|	И ДД.РасчетСебестоимости
	|	И НЕ ДД.Сторно
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтПрочиеРасходыСохранениеДвижений";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияПрочиеРасходы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияПрочиеРасходы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти


#Область ПрочиеДоходы

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	|	ДД.ВидДвижения,
	// Измерения
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.НаправлениеДеятельности,
	|	ДД.СтатьяДоходов,
	|	ДД.АналитикаДоходов,
	// Ресурсы
	|	ДД.Сумма КАК Сумма,
	|	ДД.СуммаРегл КАК СуммаРегл,
	|	ДД.СуммаУпр КАК СуммаУпр,
	// Реквизиты
	|	ДД.ХозяйственнаяОперация,
	|	ДД.КорНаправлениеДеятельности,
	|	ДД.НастройкаХозяйственнойОперации,
	|	ДД.ИдентификаторФинЗаписи,
	|	ДД.Сторно,
	|	(ВЫБОР
	|		КОГДА &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
	|		 ИЛИ НЕ &ВыделятьОтклоненияСебестоимостиОкончательногоРасчета
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ДД.ДокументРасчета КОНЕЦ) КАК ДокументРасчета,
	|	(ВЫБОР
	|		КОГДА ДД.РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПустаяСсылка)
	|			ТОГДА &РежимЗакрытияМесяца
	|		ИНАЧЕ ДД.РежимЗакрытияМесяца КОНЕЦ) КАК РежимЗакрытияМесяца
	|
	|ПОМЕСТИТЬ ВтДвиженияПрочиеДоходы
	|ИЗ
	|	РегистрНакопления.ПрочиеДоходы КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РассчитанныеДокументы КАК РассчитанныеДокументы
	|		ПО РассчитанныеДокументы.Период = ДД.Период
	|		И РассчитанныеДокументы.Регистратор = ДД.Регистратор
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДД.Организация В(&МассивОрганизаций)
	|	И ДД.Активность
	|	И ДД.РасчетСебестоимости
	|	И НЕ ДД.Сторно
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтПрочиеДоходыСохранениеДвижений";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеДоходы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияПрочиеДоходы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияПрочиеДоходы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти

#Область ПрочиеАктивыПассивы

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	|	ДД.ВидДвижения,
	// Измерения
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.НаправлениеДеятельности,
	|	ДД.Статья,
	|	ДД.Аналитика,
	// Ресурсы
	|	ДД.Сумма КАК Сумма,
	// Реквизиты
	|	ДД.ВидИсточника,
	|	ДД.Источник,
	|	ДД.Сторно
	|
	|ПОМЕСТИТЬ ВтДвиженияПрочиеАктивыПассивы
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РассчитанныеДокументы КАК РассчитанныеДокументы
	|		ПО РассчитанныеДокументы.Период = ДД.Период
	|		И РассчитанныеДокументы.Регистратор = ДД.Регистратор
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДД.Организация В(&МассивОрганизаций)
	|	И ДД.Активность
	|	И ДД.РасчетСебестоимости
	|	И НЕ ДД.Сторно
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтПрочиеАктивыПассивыСохранениеДвижений";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияПрочиеАктивыПассивы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияПрочиеАктивыПассивы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти

#Область ДвиженияНоменклатураДоходыРасходы

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	// Измерения
	|	ДД.ХозяйственнаяОперация,
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.НаправлениеДеятельностиНоменклатуры,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.Склад,
	|	ДД.ТипЗапасов,
	|	ДД.ВидЗапасов,
	|	ДД.НаправлениеДеятельностиСтатьи,
	|	ДД.СтатьяДоходовРасходов,
	|	ДД.АналитикаДоходов,
	|	ДД.АналитикаРасходов,
	|	ДД.АналитикаАктивовПассивов,
	// Ресурсы
	|	ДД.Стоимость КАК Стоимость,
	|	ДД.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	ДД.СтоимостьУпр КАК СтоимостьУпр,
	|	ДД.СтоимостьРегл КАК СтоимостьРегл,
	|	ДД.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	ДД.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	ДД.ДопРасходы КАК ДопРасходы,
	|	ДД.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|	ДД.ДопРасходыУпр КАК ДопРасходыУпр,
	|	ДД.ДопРасходыРегл КАК ДопРасходыРегл,
	|	ДД.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	ДД.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	ДД.ПостатейныеПостоянныеУпр КАК ПостатейныеПостоянныеУпр,
	|	ДД.ПостатейныеПостоянныеРегл КАК ПостатейныеПостоянныеРегл,
	|	ДД.Трудозатраты КАК Трудозатраты,
	|	ДД.ТрудозатратыУпр КАК ТрудозатратыУпр,
	|	ДД.ТрудозатратыРегл КАК ТрудозатратыРегл,
	|	ДД.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	ДД.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	|	ДД.ПостатейныеПеременныеУпр КАК ПостатейныеПеременныеУпр,
	|	ДД.ПостатейныеПеременныеРегл КАК ПостатейныеПеременныеРегл,
	|	ДД.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ДД.ВременнаяРазница КАК ВременнаяРазница,
	// Реквизиты
	|	ДД.ИсточникГФУНоменклатуры,
	|	ИСТИНА КАК Сторно
	|ПОМЕСТИТЬ ВтДвиженияНоменклатураДоходыРасходы
	|ИЗ
	|	РегистрНакопления.ДвиженияНоменклатураДоходыРасходы КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РассчитанныеДокументы КАК РассчитанныеДокументы
	|		ПО РассчитанныеДокументы.Период = ДД.Период
	|		И РассчитанныеДокументы.Регистратор = ДД.Регистратор
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДД.Организация В(&МассивОрганизаций)
	|	И ДД.Активность
	|	И ДД.РасчетСебестоимости
	|	И НЕ ДД.Сторно
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтДвиженияНоменклатураДоходыРасходыСохранениеДвижений";
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияНоменклатураДоходыРасходы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияНоменклатураДоходыРасходы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти

#Область ДвиженияНоменклатураНоменклатура

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	// Измерения
	|	ДД.ХозяйственнаяОперация,
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.НаправлениеДеятельности,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.Склад,
	|	ДД.ТипЗапасов,
	|	ДД.ВидЗапасов,
	|	ДД.КорНаправлениеДеятельности,
	|	ДД.КорАналитикаУчетаНоменклатуры,
	|	ДД.КорСклад,
	|	ДД.КорТипЗапасов,
	|	ДД.КорВидЗапасов,
	// Ресурсы
	|	ДД.Стоимость КАК Стоимость,
	|	ДД.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	ДД.СтоимостьУпр КАК СтоимостьУпр,
	|	ДД.СтоимостьРегл КАК СтоимостьРегл,
	|	ДД.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	ДД.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	ДД.ДопРасходы КАК ДопРасходы,
	|	ДД.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|	ДД.ДопРасходыУпр КАК ДопРасходыУпр,
	|	ДД.ДопРасходыРегл КАК ДопРасходыРегл,
	|	ДД.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	ДД.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	ДД.ПостатейныеПостоянныеУпр КАК ПостатейныеПостоянныеУпр,
	|	ДД.ПостатейныеПостоянныеРегл КАК ПостатейныеПостоянныеРегл,
	|	ДД.Трудозатраты КАК Трудозатраты,
	|	ДД.ТрудозатратыУпр КАК ТрудозатратыУпр,
	|	ДД.ТрудозатратыРегл КАК ТрудозатратыРегл,
	|	ДД.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	ДД.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	|	ДД.ПостатейныеПеременныеУпр КАК ПостатейныеПеременныеУпр,
	|	ДД.ПостатейныеПеременныеРегл КАК ПостатейныеПеременныеРегл,
	|	ДД.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ДД.ВременнаяРазница КАК ВременнаяРазница,
	// Реквизиты
	|	ДД.ИсточникГФУНоменклатуры,
	|	ДД.КорИсточникГФУНоменклатуры,
	|	ДД.КорОрганизация,
	|	ДД.Сторно
	|ПОМЕСТИТЬ ВтДвиженияНоменклатураНоменклатура
	|ИЗ
	|	РегистрНакопления.ДвиженияНоменклатураНоменклатура КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РассчитанныеДокументы КАК РассчитанныеДокументы
	|		ПО РассчитанныеДокументы.Период = ДД.Период
	|		И РассчитанныеДокументы.Регистратор = ДД.Регистратор
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ДД.Организация В(&МассивОрганизаций)
	|	И ДД.Активность
	|	И ДД.РасчетСебестоимости
	|	И НЕ ДД.Сторно
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтДвиженияНоменклатураНоменклатураСохранениеДвижений";
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияНоменклатураНоменклатура");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияНоменклатураНоменклатура", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвиженияИзВременныхТаблиц(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	
	// Уничтожим ненужные временные таблицы.
	НовыеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета, СуществующиеВТ);
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, НовыеВТ);
	
КонецПроцедуры


Функция ТекстСуммыПрочихРасходов(ПараметрыРасчета) Экспорт
	
	// При изменении текста запроса Вт СуммыРасходов, необхоимо так же исправить см. РасчетСебестоимостиЛокализация.ИзменитьТекстСуммыПрочихРасходов
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписанияНаРасходыПоФиксированнойСтоимости.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СписанияНаРасходыПоФиксированнойСтоимости.РазделУчета КАК РазделУчета,
	|	СписанияНаРасходыПоФиксированнойСтоимости.ВидЗапасов КАК ВидЗапасов,
	|	СписанияНаРасходыПоФиксированнойСтоимости.Организация КАК Организация,
	|	СписанияНаРасходыПоФиксированнойСтоимости.Партия КАК Партия,
	|	СписанияНаРасходыПоФиксированнойСтоимости.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	СписанияНаРасходыПоФиксированнойСтоимости.АналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
	|	СписанияНаРасходыПоФиксированнойСтоимости.ВидДеятельностиНДС КАК ВидДеятельностиНДС
	|ПОМЕСТИТЬ СписаниеНаРасходыИсключения
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК СписанияНаРасходыПоФиксированнойСтоимости
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК СписанияНаРасходыПоРасчетнойСтоимости
	|	ПО
	|		СписанияНаРасходыПоФиксированнойСтоимости.АналитикаУчетаНоменклатуры = СписанияНаРасходыПоРасчетнойСтоимости.АналитикаУчетаНоменклатуры
	|		И СписанияНаРасходыПоФиксированнойСтоимости.РазделУчета = СписанияНаРасходыПоРасчетнойСтоимости.РазделУчета
	|		И СписанияНаРасходыПоФиксированнойСтоимости.ВидЗапасов = СписанияНаРасходыПоРасчетнойСтоимости.ВидЗапасов
	|		И СписанияНаРасходыПоФиксированнойСтоимости.Организация = СписанияНаРасходыПоРасчетнойСтоимости.Организация
	|		И СписанияНаРасходыПоФиксированнойСтоимости.Партия = СписанияНаРасходыПоРасчетнойСтоимости.Партия
	|		И СписанияНаРасходыПоФиксированнойСтоимости.АналитикаУчетаПартий = СписанияНаРасходыПоРасчетнойСтоимости.АналитикаУчетаПартий
	|		И СписанияНаРасходыПоФиксированнойСтоимости.АналитикаФинансовогоУчета = СписанияНаРасходыПоРасчетнойСтоимости.АналитикаФинансовогоУчета
	|		И СписанияНаРасходыПоФиксированнойСтоимости.ВидДеятельностиНДС = СписанияНаРасходыПоРасчетнойСтоимости.ВидДеятельностиНДС
	|		И СписанияНаРасходыПоФиксированнойСтоимости.СлужебноеВидДвиженияПриход = СписанияНаРасходыПоРасчетнойСтоимости.СлужебноеВидДвиженияПриход
	|		И СписанияНаРасходыПоФиксированнойСтоимости.ХозяйственнаяОперация = 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|		И СписанияНаРасходыПоРасчетнойСтоимости.ХозяйственнаяОперация = 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость)
	|
	|ГДЕ
	|	НЕ СписанияНаРасходыПоФиксированнойСтоимости.СлужебноеВидДвиженияПриход
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	Партия
	|;
	|
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	|	ДД.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ДД.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|ПОМЕСТИТЬ ВТРасчетныеОборотыСебестоимостьИндексированная
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СписаниеНаРасходыИсключения КАК СписаниеНаРасходыИсключения
	|			ПО ДД.АналитикаУчетаНоменклатуры = СписаниеНаРасходыИсключения.АналитикаУчетаНоменклатуры
	|			И ДД.РазделУчета = СписаниеНаРасходыИсключения.РазделУчета
	|			И ДД.ВидЗапасов = СписаниеНаРасходыИсключения.ВидЗапасов
	|			И ДД.Организация = СписаниеНаРасходыИсключения.Организация
	|			И ДД.Партия = СписаниеНаРасходыИсключения.Партия
	|			И ДД.АналитикаУчетаПартий = СписаниеНаРасходыИсключения.АналитикаУчетаПартий
	|			И ДД.АналитикаФинансовогоУчета = СписаниеНаРасходыИсключения.АналитикаФинансовогоУчета
	|			И ДД.ВидДеятельностиНДС = СписаниеНаРасходыИсключения.ВидДеятельностиНДС
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость)
	|	И НЕ ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.РаспределениеДоходовПоНаправлениямДеятельности)
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ИдентификаторФинЗаписи,
	|	НастройкаХозяйственнойОперации,
	|	Период
	|;
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Регистратор КАК Регистратор
	|
	|ПОМЕСТИТЬ ДопРасходыПоПартииПрошлогоПериода
	|ИЗ
	|	ПриемникиПоТоварам КАК ДД
	|ГДЕ
	|	ДД.ЭтоПартияПрошлогоПериода
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	|	ДД.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ДД.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ДД.Организация,
	|	ДД.СтатьяРасходов,
	|	ДД.АналитикаРасходов,
	|	ДД.Подразделение,
	|	ДД.НаправлениеДеятельности,
	|
	|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход ТОГДА 1 ИНАЧЕ - 1 КОНЕЦ КАК Знак,
	|	ДД.Сумма КАК Сумма,
	|	ДД.СуммаБезНДС КАК СуммаБезНДС,
	|	ДД.СуммаУпр КАК СуммаУпр,
	|	ДД.СуммаРегл КАК СуммаРегл,
	|	ДД.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ДД.ВременнаяРазница КАК ВременнаяРазница,
	|	(ВЫБОР
	// Исключаем суммы НУ, сформированные при распределении дополнительных расходов на выбытия товаров в прошлых периодах.
	// Суммы по таким расходам будут рассчитаны при решении СЛУ.
	// Связи доп расходов с производственным расходами формируются в функции СвязиУзловПроизводственныхРасходовПрошлыхПериодов()
	|		КОГДА НЕ Распределение.Регистратор ЕСТЬ NULL
	|			ТОГДА 0
	|		ИНАЧЕ ДД.СуммаРегл
	|		- ДД.ПостояннаяРазница
	|		- ДД.ВременнаяРазница КОНЕЦ) КАК СуммаНУ,
	|	ДД.СуммаНДД КАК СуммаНДД
	|ПОМЕСТИТЬ ВТРасчетныеОборотыПрочиеРасходыИндексированная
	|ИЗ
	|	ВТКэшРасчетныеОборотыПрочиеРасходы КАК ДД
	|	ЛЕВОЕ СОЕДИНЕНИЕ РассчитанныеДокументы КАК РассчитанныеДокументы
	|		ПО РассчитанныеДокументы.Период = ДД.Период
	|		И РассчитанныеДокументы.Регистратор = ДД.Регистратор
	|		И &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДопРасходыПоПартииПрошлогоПериода КАК Распределение
	|		ПО Распределение.Регистратор = ДД.Регистратор
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И НЕ ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.РаспределениеДоходовПоНаправлениямДеятельности)
	// В старых релизах у документа РаспределениеПрочихЗатрат были движения списания на финансовый результат, формируемые без признака "Расчетное"
	|	И НЕ (ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.РаспределениеПрочихЗатрат) И НЕ ДД.РасчетПартий И НЕ ДД.РасчетСебестоимости)
	// Исключаем суммы расходов, сформированные документами выпуска продукции (работ), где выпуск проходит по плановой стоимости
	// Фактические суммы таких расходов будут взяты из себестоимости товаров.
	|	И НЕ (ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			И НЕ ДД.Организация В(&ОрганизацииСреднескользящая)
	|			И НЕ (ДД.Сторно ИЛИ ДД.РасчетПартий)
	|		)
	// При предварительном расчете исключаем документы, для которых сохранены ранее рассчитанные движения
	|	И РассчитанныеДокументы.Регистратор ЕСТЬ NULL
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ИдентификаторФинЗаписи,
	|	НастройкаХозяйственнойОперации,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДД.Организация				КАК Организация,
	|	ДД.СтатьяРасходов			КАК СтатьяРасходов,
	|	ДД.АналитикаРасходов		КАК АналитикаРасходов,
	|	ДД.Подразделение			КАК Подразделение,
	|	ДД.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	ДД.СуммаОстаток				КАК Сумма,
	|	ДД.СуммаБезНДСОстаток		КАК СуммаБезНДС,
	|	ДД.СуммаУпрОстаток			КАК СуммаУпр,
	|	ДД.СуммаРеглОстаток			КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА ЛОЖЬ ТОГДА 0 // Для удобства расстановки тегов

	|		ИНАЧЕ
	|			ДД.ПостояннаяРазницаОстаток
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
	|	ДД.СуммаРеглОстаток
	|		- ДД.ПостояннаяРазницаОстаток
	|		- ДД.ВременнаяРазницаОстаток КАК СуммаНУ,
	|	ДД.СуммаНДДОстаток КАК СуммаНДД
	|
	|ПОМЕСТИТЬ СуммыРасходовПредварительная
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.Остатки(&ГраницаКонецПредыдущегоПериода,
	|		&ПартионныйУчетВерсии22
	|		И Организация В (&МассивОрганизаций)) КАК ДД
	|
	|ОБЪЕДИНИТЬ ВСЕ	
	|
	|ВЫБРАТЬ
	|	ДД.Организация					КАК Организация,
	|	ДД.СтатьяРасходов				КАК СтатьяРасходов,
	|	ДД.АналитикаРасходов			КАК АналитикаРасходов,
	|	ДД.Подразделение				КАК Подразделение,
	|	ДД.НаправлениеДеятельности		КАК НаправлениеДеятельности,
	|	ДД.Знак * ДД.Сумма				КАК Сумма,
	|	ДД.Знак * ДД.СуммаБезНДС		КАК СуммаБезНДС,
	|	ДД.Знак * ДД.СуммаУпр			КАК СуммаУпр,
	|	ДД.Знак * ДД.СуммаРегл			КАК СуммаРегл,
	|	ДД.Знак * ДД.ПостояннаяРазница	КАК ПостояннаяРазница,
	|	ДД.Знак * ДД.ВременнаяРазница	КАК ВременнаяРазница,
	|	ДД.Знак * ДД.СуммаНУ			КАК СуммаНУ,
	|	ДД.Знак * ДД.СуммаНДД			КАК СуммаНДД
	|ИЗ
	|	ВТРасчетныеОборотыПрочиеРасходыИндексированная КАК ДД
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчетныеОборотыСебестоимостьИндексированная КАК ДвиженияСебестоимости
	|		ПО ДвиженияСебестоимости.Период = ДД.Период
	|		И ДвиженияСебестоимости.Регистратор = ДД.Регистратор
	|		И ДвиженияСебестоимости.ИдентификаторФинЗаписи = ДД.ИдентификаторФинЗаписи
	|		И ДвиженияСебестоимости.НастройкаХозяйственнойОперации = ДД.НастройкаХозяйственнойОперации
	|
	|ГДЕ
	// Исключаем суммы расходов, сформированные документами выпуска продукции (работ), где выпуск проходит как по фиксированной, так и по расчетной оценке.
	// Суммы таких расходов будут взяты из себестоимости товаров.
	|	ДвиженияСебестоимости.Регистратор ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ	
	|
	|ВЫБРАТЬ
	|	ДД.Организация				КАК Организация,
	|	ДД.СтатьяРасходов			КАК СтатьяРасходов,
	|	ДД.АналитикаРасходов		КАК АналитикаРасходов,
	|	ДД.Подразделение			КАК Подразделение,
	|	ДД.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход ТОГДА 1 ИНАЧЕ - 1 КОНЕЦ * ДД.Сумма				КАК Сумма,
	|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход ТОГДА 1 ИНАЧЕ - 1 КОНЕЦ * ДД.СуммаБезНДС			КАК СуммаБезНДС,
	|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход ТОГДА 1 ИНАЧЕ - 1 КОНЕЦ * ДД.СуммаУпр				КАК СуммаУпр,
	|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход ТОГДА 1 ИНАЧЕ - 1 КОНЕЦ * ДД.СуммаРегл			КАК СуммаРегл,
	|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход ТОГДА 1 ИНАЧЕ - 1 КОНЕЦ * ДД.ПостояннаяРазница	КАК ПостояннаяРазница,
	|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход ТОГДА 1 ИНАЧЕ - 1 КОНЕЦ * ДД.ВременнаяРазница		КАК ВременнаяРазница,
	|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход ТОГДА 1 ИНАЧЕ - 1 КОНЕЦ
	|		* (ДД.СуммаРегл
	|		- ДД.ПостояннаяРазница
	|		- ДД.ВременнаяРазница) КАК СуммаНУ,
	|	ВЫБОР КОГДА ДД.СлужебноеВидДвиженияПриход ТОГДА 1 ИНАЧЕ - 1 КОНЕЦ * ДД.СуммаНДД				КАК СуммаНДД
	|ИЗ
	|	ВТКэшРасчетныеОборотыПрочиеРасходы КАК ДД
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Т
	|		ПО ДД.Регистратор = Т.Ссылка
	|ГДЕ
	|	НЕ &ПартионныйУчетВерсии22
	|	И ДД.РасчетСебестоимости
	|	И НЕ ДД.Регистратор Ссылка Документ.РаспределениеДоходовПоНаправлениямДеятельности
	|	И (Т.Ссылка ЕСТЬ NULL
	|		ИЛИ НЕ Т.НазначениеНастройкиРаспределения = ЗНАЧЕНИЕ(Перечисление.НазначениеПравилРаспределенияРасходов.РаспределениеРасходовНаФинансовыйРезультат))
	|
	|ОБЪЕДИНИТЬ ВСЕ	
	|
	// Списания на расходы, суммы которых калькулируются в процессе расчета себестоимости
	// Признак таких движений - заполненный реквизит СтатьяРасходовСписания в РН СебестоимостьТоваров
	|ВЫБРАТЬ
	|	ДД.Организация					КАК Организация,
	|	ДД.СтатьяРасходовСписания		КАК СтатьяРасходов,
	|	ДД.АналитикаРасходов			КАК АналитикаРасходов,
	|	ДД.Подразделение				КАК Подразделение,
	|	ДД.КорНаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	0 КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаУпр,
	|	0 КАК СуммаРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	0 КАК СуммаНУ,
	|	0 КАК СуммаНДД
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
	|ГДЕ
	|	ДД.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Получение данных по отклонениям в стоимости должно соответствовать запросу 
	// в процедуре СформироватьДвиженияПоОтклонениямВСтоимостиТоваров() #Область ОтклоненияВСтоимостиПрочиеРасходы.
	|ВЫБРАТЬ
	|	ДД.Организация					КАК Организация,
	|	ДД.СтатьяРасходовСписания		КАК СтатьяРасходов,
	|	ДД.АналитикаРасходов			КАК АналитикаРасходов,
	|	ДД.Подразделение				КАК Подразделение,
	|	ДД.КорНаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	ДД.Стоимость					КАК Сумма,
	|	ДД.СтоимостьБезНДС				КАК СуммаБезНДС,
	|	ДД.СтоимостьУпр					КАК СуммаУпр,
	|	ДД.СтоимостьРегл				КАК СуммаРегл,
	|	(ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(ВЫРАЗИТЬ(ДД.СтатьяРасходовСписания КАК ПланВидовХарактеристик.СтатьиРасходов).ПринятиеКНалоговомуУчету, ИСТИНА)
	|			ТОГДА ДД.СтоимостьРегл
	|		ИНАЧЕ ДД.ПостояннаяРазница КОНЕЦ) КАК ПостояннаяРазница,
	|	ДД.ВременнаяРазница КАК ВременнаяРазница,
	|	ДД.СтоимостьРегл
	|		- ДД.ПостояннаяРазница
	|		- ДД.ВременнаяРазница КАК СуммаНУ,
	|	ДД.СтоимостьНДД КАК СуммаНДД
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
	|ГДЕ
	|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеРасходы)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтатьяРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Поля временной таблицы СуммыРасходов должны соответствовать временным таблицам СуммыРасходовПредварительная и
	// СуммыРасходов в функции ИзменитьТекстСуммыПрочихРасходов() общего модуля РасчетСебестоимостиНДД. 
	|ВЫБРАТЬ
	|	ДД.Организация,
	|	ДД.СтатьяРасходов,
	|	ДД.АналитикаРасходов,
	|	ДД.Подразделение,
	|	ДД.НаправлениеДеятельности,
	|	СУММА(ДД.Сумма) КАК Сумма,
	|	СУММА(ДД.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ДД.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ВЫБОР
	|			КОГДА НЕ ЕСТЬNULL(ВтОВЗ.ВариантРаспределенияРасходовРегл, Статьи.ВариантРаспределенияРасходовРегл) 
	|					В (	
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности),
	|						ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|					)
	|				ТОГДА 0
	|			ИНАЧЕ
	|				ДД.СуммаРегл
	|		КОНЕЦ) КАК СуммаРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	СУММА(ДД.СуммаНУ) КАК СуммаНУ,
	|	&СуммаНДД КАК СуммаНДД
	|ПОМЕСТИТЬ СуммыРасходов
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СуммыРасходовПредварительная КАК ДД
	|		ПО Статьи.Ссылка = ДД.СтатьяРасходов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтОВЗ КАК ВтОВЗ
	|		ПО ДД.АналитикаРасходов = ВтОВЗ.ОВЗ
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДД.Организация,
	|	ДД.СтатьяРасходов,
	|	ДД.АналитикаРасходов,
	|	ДД.Подразделение,
	|	ДД.НаправлениеДеятельности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДД.Организация,
	|	ДД.НаправлениеДеятельности,
	|	ДД.Подразделение,
	|	ДД.СтатьяРасходов,
	|	ДД.АналитикаРасходов
	|;
	|
	|УНИЧТОЖИТЬ СписаниеНаРасходыИсключения
	|;
	|
	|УНИЧТОЖИТЬ ВТРасчетныеОборотыПрочиеРасходыИндексированная
	|;
	|
	|УНИЧТОЖИТЬ ВТРасчетныеОборотыСебестоимостьИндексированная
	|;
	|
	|УНИЧТОЖИТЬ СуммыРасходовПредварительная
	|";
	
	ТекстЗапроса = РасчетСебестоимостиЛокализация.ИзменитьТекстСуммыПрочихРасходов(ТекстЗапроса, ПараметрыРасчета);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СуммаНДД", "0");
	
	Возврат ТекстЗапроса;
КонецФункции

// Корректировка стоимости списания номенклатуры (используется при партионном учета 2.2, 2.1 и при выключенном партионном учете.
// Процедура рассчитывает отклонения в суммах движений по регистру СебестоимостьТоваров от рассчитанной себестоимости 
// и производит корректировку движений следующих регистров:
// СебестоимостьТоваров, ПрочиеРасходы
//
Процедура СкорректироватьСтоимостьСписанияЗапасов(ПараметрыРасчета) Экспорт

	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СкорректироватьСтоимостьСписанияЗапасов");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	СуществующиеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета);
	
	Если ПараметрыРасчета.Свойство("УзлыСПереполнениемПоля") Тогда
		УзлыСПереполнениемПоля = ПараметрыРасчета.УзлыСПереполнениемПоля;
	Иначе
		УзлыСПереполнениемПоля = Новый Массив;
	КонецЕсли;
	Запрос.УстановитьПараметр("УзлыСПереполнениемПоля", УзлыСПереполнениемПоля);
	Запрос.УстановитьПараметр("ЗначениеПогрешности", 0.01);
	
	#Область ВыборкаДанных
	
	#Область ИсправленныеДокументы
	Запрос.Текст = РасчетСебестоимостиЗаполнениеПартий.ТекстИсправленныеДокументы(); // вт ИсправленныеДокументы
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	#КонецОбласти
	
	#Область ЕстьВозвратныеОтходы
	
	Запрос.Текст = РасчетСебестоимостиРешениеСЛУ.ТекстВтЕстьВозвратныеОтходы() + ";";
	
	#КонецОбласти
	
	
	#Область РеквизитыКорДвижений
	
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ДД.Организация КАК Организация,
	|	ДД.Регистратор КАК Регистратор,
	|	ДД.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи,
	|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	МАКСИМУМ(ДД.КорАналитикаУчетаНоменклатуры) КАК КорАналитикаУчетаНоменклатуры,
	|	МАКСИМУМ(ДД.ХозяйственнаяОперация) КАК ХозяйственнаяОперация,
	|	МАКСИМУМ(ДД.ТипЗаписи) КАК ТипЗаписи,
	|	МАКСИМУМ(ДД.НастройкаХозяйственнойОперации) КАК НастройкаХозяйственнойОперации
	|
	|ПОМЕСТИТЬ РеквизитыКорДвижений
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
	|ГДЕ
	|	ДД.СлужебноеВидДвиженияПриход
	|	И ДД.Количество <> 0
	|	И ДД.ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПустаяСсылка)
	|	И ДД.НастройкаХозяйственнойОперации <> ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПустаяСсылка)
	|СГРУППИРОВАТЬ ПО
	|	ДД.Организация,
	|	ДД.Регистратор,
	|	ДД.ИдентификаторФинЗаписи,
	|	ДД.АналитикаУчетаНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ИдентификаторФинЗаписи,
	|	АналитикаУчетаНоменклатуры,
	|	Организация
	|;";
	#КонецОбласти
	
	#Область ВтТаблицаКорректировки
	
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	УчетСебестоимости.Период                        	КАК Период,
	|	ВЫБОР
	|		КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ                   							КАК ВидДвижения,
	|	УчетСебестоимости.Регистратор                   	КАК ДокументДвижения,
	|	ЕСТЬNULL(РегистраторыРасчета.Ссылка,
	|		ЗНАЧЕНИЕ(Документ.РегистраторРасчетаСебестоимости.ПустаяСсылка)) КАК ДокументРасчета,
	|	УчетСебестоимости.Организация                   	КАК Организация,
	|	АналитикаНоменклатуры.МестоХранения             	КАК Склад,
	|	АналитикаНоменклатуры.Номенклатура             		КАК Номенклатура,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры    	КАК АналитикаУчетаНоменклатуры,
	|	(ВЫБОР
	|		КОГДА УчетСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		 И УчетСебестоимости.Количество < 0
	|		 И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) // возвратные отходы учитываем по пустому разделу учета
	|		ИНАЧЕ УчетСебестоимости.РазделУчета КОНЕЦ) КАК РазделУчета,
	|	УчетСебестоимости.ВидЗапасов                    	КАК ВидЗапасов,
	|	ЕСТЬNULL(УчетСебестоимости.ВидЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) КАК ТипЗапасов,
	|	УчетСебестоимости.ХозяйственнаяОперация         	КАК ХозяйственнаяОперация,
	|	УчетСебестоимости.КорАналитикаУчетаНоменклатуры 	КАК КорАналитикаУчетаНоменклатуры,
	|	КорАналитикаНоменклатуры.МестоХранения          	КАК КорСклад,
	|	КорАналитикаНоменклатуры.Номенклатура           	КАК КорНоменклатура,
	|	УчетСебестоимости.КорРазделУчета                	КАК КорРазделУчета,
	|	УчетСебестоимости.КорВидЗапасов                 	КАК КорВидЗапасов,
	|	ЕСТЬNULL(УчетСебестоимости.КорВидЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) КАК КорТипЗапасов,
	|	УчетСебестоимости.КорОрганизация                	КАК КорОрганизация,
	|	УчетСебестоимости.Подразделение                 	КАК Подразделение,
	|	УчетСебестоимости.АналитикаУчетаПоПартнерам     	КАК АналитикаУчетаПоПартнерам,
	|	УчетСебестоимости.ЗаказКлиента                  	КАК ЗаказКлиента,
	|	УчетСебестоимости.АналитикаРасходов            		КАК АналитикаРасходов,
	|	УчетСебестоимости.СтатьяРасходовСписания        	КАК СтатьяРасходовСписания,
	|	УчетСебестоимости.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр		  КАК ВариантРаспределенияРасходовУпр,
	|	УчетСебестоимости.СтатьяРасходовСписания.ВариантРаспределенияРасходовРегл		  КАК ВариантРаспределенияРасходовРегл,
	|	ЕСТЬNULL(УчетСебестоимости.СтатьяРасходовСписания.ПринятиеКНалоговомуУчету, ЛОЖЬ) КАК ПринятиеКНалоговомуУчету,
	|	УчетСебестоимости.СтатьяДоходов                 	КАК СтатьяДоходов,
	|	УчетСебестоимости.АналитикаДоходов              	КАК АналитикаДоходов,
	|	УчетСебестоимости.СтатьяАктивовПассивов         	КАК СтатьяАктивовПассивов,
	|	УчетСебестоимости.АналитикаАктивовПассивов      	КАК АналитикаАктивовПассивов,
	|	УчетСебестоимости.ИдентификаторСтроки           	КАК ИдентификаторСтроки,
	|	УчетСебестоимости.КодСтроки                     	КАК КодСтроки,
	|	УчетСебестоимости.ПериодПродажи                 	КАК ПериодПродажи,
	|	УчетСебестоимости.ГруппаПродукции               	КАК ГруппаПродукции,
	|	ЕСТЬNULL(Назначения.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	УчетСебестоимости.КорНаправлениеДеятельности        КАК КорНаправлениеДеятельности,
	|	ВЫБОР КОГДА НЕ СторноОтчетыКомиссионера.Период ЕСТЬ NULL
	|	 И УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|	 И УчетСебестоимости.Количество < 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ 												КАК СторноОтчетПоКомиссии,
	|	УчетСебестоимости.Партия                          	КАК Партия,
	|	УчетСебестоимости.АналитикаУчетаПартий              КАК АналитикаУчетаПартий,
	|	УчетСебестоимости.АналитикаФинансовогоУчета         КАК АналитикаФинансовогоУчета,
	|	УчетСебестоимости.ВидДеятельностиНДС                КАК ВидДеятельностиНДС,
	|	УчетСебестоимости.КорПартия                 		КАК КорПартия,
	|	УчетСебестоимости.КорАналитикаУчетаПартий           КАК КорАналитикаУчетаПартий,
	|	УчетСебестоимости.КорАналитикаФинансовогоУчета      КАК КорАналитикаФинансовогоУчета,
	|	УчетСебестоимости.КорВидДеятельностиНДС             КАК КорВидДеятельностиНДС,
	|	УчетСебестоимости.ВидДеятельностиНДСОтгрузки        КАК ВидДеятельностиНДСОтгрузки,
	|	УчетСебестоимости.СтатьяКалькуляции                 КАК СтатьяКалькуляции,
	|	УчетСебестоимости.ТипЗаписи                 		КАК ТипЗаписи,
	// В суммовых движениях поле ДокументИсточник не заполняем для исключения возникновения лишний округлений
	// при разбивке исходного количества на разные документы источники.
	|	НЕОПРЕДЕЛЕНО                                        КАК ДокументИсточник,
	|	УчетСебестоимости.Сторно                            КАК Сторно,
	|	УчетСебестоимости.НастройкаХозяйственнойОперации    КАК НастройкаХозяйственнойОперации,
	|	УчетСебестоимости.ИдентификаторФинЗаписи			КАК ИдентификаторФинЗаписи,
	|	УчетСебестоимости.НастройкаСчетовУчета              КАК НастройкаСчетовУчета,
	|	УчетСебестоимости.ОперацияУчетаСебестоимости        КАК ОперацияУчетаСебестоимости,
	
	// Условия формирования поля ВосстанавливатьРезервы должны соответствовать условиям формирования аналогичного поля
	// в функции ТекстВтТаблицаСвязейПостатейныеРасходы() #Область ТекстЗапросаСписаниеМатериаловНаСтатьи.
	|	ВЫБОР
	|		КОГДА УчетСебестоимости.СтатьяРасходовСписания.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ИСТИНА
	|		КОГДА УчетСебестоимости.Организация В (&ОрганизацииСВосстановлениемРезервовПриСписанииЗапасовНаРасходы)
	|		 И НЕ УчетСебестоимости.СтатьяРасходовСписания.ВариантРаспределенияРасходовРегл ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ВосстанавливатьРезервы,
	|
	|	ЕСТЬNULL(РеквизитыКорДвижений.ХозяйственнаяОперация,
	|		УчетСебестоимости.ХозяйственнаяОперация)        КАК ПриходХозяйственнаяОперация,
	|	ЕСТЬNULL(РеквизитыКорДвижений.ТипЗаписи,
	|		УчетСебестоимости.ТипЗаписи)                    КАК ПриходТипЗаписи,
	|	ЕСТЬNULL(РеквизитыКорДвижений.НастройкаХозяйственнойОперации,
	|		УчетСебестоимости.НастройкаХозяйственнойОперации) КАК ПриходНастройкаХозяйственнойОперации,
	|	ЕСТЬNULL(РеквизитыКорДвижений.КорАналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.КорАналитикаУчетаНоменклатуры) КАК ПриходКорАналитикаУчетаНоменклатуры,
	|
	|	СУММА(УчетСебестоимости.Количество)        			КАК Количество,
	|	СУММА(УчетСебестоимости.Стоимость)              	КАК Стоимость,
	|	СУММА(УчетСебестоимости.СтоимостьБезНДС)        	КАК СтоимостьБезНДС,
	|	СУММА(УчетСебестоимости.СтоимостьРегл)          	КАК СтоимостьРегл,
	|	СУММА(УчетСебестоимости.ДопРасходы)					КАК ДопРасходы,
	|	СУММА(УчетСебестоимости.ДопРасходыБезНДС)			КАК ДопРасходыБезНДС,
	|	СУММА(УчетСебестоимости.ДопРасходыРегл)				КАК ДопРасходыРегл,
	|	СУММА(УчетСебестоимости.Трудозатраты)				КАК Трудозатраты,
	|	СУММА(УчетСебестоимости.ТрудозатратыРегл)			КАК ТрудозатратыРегл,
	|	СУММА(УчетСебестоимости.ПостатейныеПостоянныеСНДС)	КАК ПостатейныеПостоянныеСНДС,
	|	СУММА(УчетСебестоимости.ПостатейныеПостоянныеБезНДС) КАК ПостатейныеПостоянныеБезНДС,
	|	СУММА(УчетСебестоимости.ПостатейныеПостоянныеРегл)	КАК ПостатейныеПостоянныеРегл,
	|	СУММА(УчетСебестоимости.ПостатейныеПеременныеСНДС)	КАК ПостатейныеПеременныеСНДС,
	|	СУММА(УчетСебестоимости.ПостатейныеПеременныеБезНДС) КАК ПостатейныеПеременныеБезНДС,
	|	СУММА(УчетСебестоимости.ПостатейныеПеременныеРегл)	КАК ПостатейныеПеременныеРегл,
	|	СУММА(УчетСебестоимости.ПостояннаяРазница)      	КАК ПостояннаяРазница,
	|	СУММА(УчетСебестоимости.ВременнаяРазница)       	КАК ВременнаяРазница,
	|	СУММА(УчетСебестоимости.СтоимостьНДД)       		КАК СтоимостьНДД,
	|	СУММА(УчетСебестоимости.СтоимостьЗабалансовая)      КАК СтоимостьЗабалансовая,
	|	СУММА(УчетСебестоимости.СтоимостьЗабалансоваяРегл)  КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(УчетСебестоимости.РезервПодОбесценениеРегл)   КАК РезервПодОбесценениеРегл,
	|	СУММА(УчетСебестоимости.РезервПодОбесценениеУпр)    КАК РезервПодОбесценениеУпр,
	|	СУММА(УчетСебестоимости.КорСтоимость)           	КАК КорСтоимость,
	|	СУММА(УчетСебестоимости.НДСРегл)           			КАК НДСРегл,
	|	СУММА(УчетСебестоимости.СтоимостьУпр)				КАК СтоимостьУпр,
	|	СУММА(УчетСебестоимости.ДопРасходыУпр)				КАК ДопРасходыУпр,
	|	СУММА(УчетСебестоимости.ТрудозатратыУпр)			КАК ТрудозатратыУпр,
	|	СУММА(УчетСебестоимости.ПостатейныеПостоянныеУпр)	КАК ПостатейныеПостоянныеУпр,
	|	СУММА(УчетСебестоимости.ПостатейныеПеременныеУпр)	КАК ПостатейныеПеременныеУпр,
	|	СУММА(УчетСебестоимости.НДСУпр)           			КАК НДСУпр
	|ПОМЕСТИТЬ ВтТаблицаКорректировки
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК УчетСебестоимости
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУчетныеПолитикиФинУчета КАК ВТУчетныеПолитикиФинУчета
	|	ПО УчетСебестоимости.Организация = ВТУчетныеПолитикиФинУчета.Организация
	|		И ВТУчетныеПолитикиФинУчета.МетодОценкиСтоимостиТоваров <> ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.Среднескользящая)
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО УчетСебестоимости.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорАналитикаНоменклатуры
	|		ПО УчетСебестоимости.КорАналитикаУчетаНоменклатуры = КорАналитикаНоменклатуры.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ СторноОтчетыКомиссионера КАК СторноОтчетыКомиссионера // Создается в процедуре СкорректироватьСтоимостьВозвратовПрошлыхПериодов()
	|		ПО СторноОтчетыКомиссионера.АналитикаУчетаНоменклатуры = УчетСебестоимости.АналитикаУчетаНоменклатуры
	|		И СторноОтчетыКомиссионера.РазделУчета = УчетСебестоимости.РазделУчета
	|		И СторноОтчетыКомиссионера.ВидЗапасов = УчетСебестоимости.ВидЗапасов
	|		И СторноОтчетыКомиссионера.Организация = УчетСебестоимости.Организация
	|		И УчетСебестоимости.Количество < 0
	|		И УчетСебестоимости.ДокументИсточник = НЕОПРЕДЕЛЕНО
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО Назначения.Ссылка = АналитикаНоменклатуры.Назначение
	|	ЛЕВОЕ СОЕДИНЕНИЕ ЕстьВозвратныеОтходы КАК ЕстьВозвратныеОтходы
	|		ПО ЕстьВозвратныеОтходы.Организация = УчетСебестоимости.Организация
	|		И ЕстьВозвратныеОтходы.АналитикаУчетаНоменклатуры = УчетСебестоимости.АналитикаУчетаНоменклатуры
	|		И ЕстьВозвратныеОтходы.ВидЗапасов = УчетСебестоимости.ВидЗапасов
	|		И ЕстьВозвратныеОтходы.РазделУчета = УчетСебестоимости.РазделУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ РеквизитыКорДвижений КАК РеквизитыКорДвижений
	|		ПО ВЫБОР КОГДА УчетСебестоимости.КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА РеквизитыКорДвижений.Организация = УчетСебестоимости.Организация
	|				ИНАЧЕ РеквизитыКорДвижений.Организация = УчетСебестоимости.КорОрганизация
	|			КОНЕЦ
	|		И РеквизитыКорДвижений.Регистратор = УчетСебестоимости.Регистратор
	|		И РеквизитыКорДвижений.ИдентификаторФинЗаписи = УчетСебестоимости.ИдентификаторФинЗаписи
	|		И РеквизитыКорДвижений.АналитикаУчетаНоменклатуры = УчетСебестоимости.КорАналитикаУчетаНоменклатуры
	|	ЛЕВОЕ СОЕДИНЕНИЕ РассчитанныеДокументы КАК РассчитанныеДокументы
	|		ПО РассчитанныеДокументы.Период = УчетСебестоимости.Период
	|		И РассчитанныеДокументы.Регистратор = УчетСебестоимости.Регистратор
	|		И &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторыРасчетаСебестоимости КАК РегистраторыРасчета
	|		ПО РегистраторыРасчета.Организация = УчетСебестоимости.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДатыДокументовИсточников КАК Реестр
	|		ПО Реестр.Ссылка = УчетСебестоимости.ДокументИсточник
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправленныеДокументы КАК ИсправленныеДокументы
	|		ПО ИсправленныеДокументы.Регистратор = УчетСебестоимости.Регистратор
	|ГДЕ
	|	(НЕ УчетСебестоимости.СлужебноеВидДвиженияПриход
	|		И НЕ УчетСебестоимости.ТипЗаписи В (ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Партия),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимости),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеДоходы),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеРасходы),
	|		 									ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаСтоимости),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыСПартией),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ДопРасходыБезПартии),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.СторноДопРасходов),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретенияПрошлогоПериода))
	|		ИЛИ (УчетСебестоимости.Количество <> 0
	|			 И УчетСебестоимости.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииВПодразделение),
	//++ Устарело_Переработка24
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика),
	//-- Устарело_Переработка24
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика2_5))
	|			 И НЕ УчетСебестоимости.Сторно
	|			)
	// При расчете себестоимости сторнируется плановая стоимость выпуска, т.к. фактическая себестоимость формируется от стоимости
	// списания материалов и рассчитать отклонения от плановой стоимости не представляется возможным. 
	|		ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеПлановойСтоимостиВыпуска)
	|			И &РежимЗакрытияМесяца <> ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
	|	)
	|	И (УчетСебестоимости.РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НеотфактурованныеПоставки)
	|		ИЛИ УчетСебестоимости.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
	|		ИЛИ УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаПартийТоваров))
	// Исключаем возвраты прошлого периода.
	// Условия выборки данных должны соответствовать функции СкорректироватьСтоимостьВозвратовПрошлыхПериодов()
	|	И НЕ (НЕ УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			И УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|			И УчетСебестоимости.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
	|			И УчетСебестоимости.ДокументИсточник <> НЕОПРЕДЕЛЕНО
	|			И Реестр.ДатаДокументаИБ < &НачалоПериода
	|			)
	|	И НЕ (НЕ УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			И УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|			И УчетСебестоимости.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ВозвратБезДокументаИсточника)
	|			И УчетСебестоимости.ДокументИсточник = НЕОПРЕДЕЛЕНО
	|			И (ЕСТЬNULL(СторноОтчетыКомиссионера.Период,
	|				НАЧАЛОПЕРИОДА(УчетСебестоимости.ПериодПродажи, МЕСЯЦ)) <> ДАТАВРЕМЯ(1,1,1,0,0,0)
	// Дополнительно надо исключить суммовое движение, сформированное в СкорректироватьСтоимостьВозвратовПрошлыхПериодов()
	|					ИЛИ УчетСебестоимости.РасчетСебестоимости)
	|			И УчетСебестоимости.ПериодПродажи < &НачалоПериода)
	
	// Исключаем сторно движения исправлений и корректировок прошлого периода.
	// Такие движения уже сформированы в процедуре СкорректироватьСтоимостьСторноДвиженийИсправленныхДокументов() Область ИсправлениеСебестоимостьТоваров
	|	И НЕ (НЕ ИсправленныеДокументы.ДатаДокументаИсточника ЕСТЬ NULL
	|		И ИсправленныеДокументы.ДатаДокументаИсточника < &НачалоПериода
	|		И УчетСебестоимости.Сторно)
	|
	|	И НЕ (УчетСебестоимости.Сторно
	|		И УчетСебестоимости.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
	|		И УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость))
	// Исключаем расчет отклонений для выбытия по фиксированной стоимости, если для записи не была подобрана партия.
	// Расчет отклонений в стоимости такой записи будет выполнен в этапе пересортицы партий товаров.
	// Условия выборки данных должны соответствовать функции ТекстВтУзлыКорректировки_МатериальныеИТрудозатраты общего модуля РасчетСебестоимостиРешениеСЛУ
	|	И НЕ (УчетСебестоимости.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
	|		И УчетСебестоимости.РасчетНеЗавершен
	|		И УчетСебестоимости.Стоимость <> 0)
	|
	// Исключаем списания на расходы и передачу продукции из производства по фиксированной стоимости.
	|	И НЕ УчетСебестоимости.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводстваФиксированнаяСтоимость))
	// При предварительном расчете исключаем документы, для которых сохранены ранее рассчитанные движения
	|	И РассчитанныеДокументы.Регистратор ЕСТЬ NULL
	|	
	|СГРУППИРОВАТЬ ПО
	|	УчетСебестоимости.Период,
	|	ВЫБОР
	|		КОГДА УчетСебестоимости.СлужебноеВидДвиженияПриход
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ,
	|	УчетСебестоимости.Регистратор,
	|	ЕСТЬNULL(РегистраторыРасчета.Ссылка,
	|		ЗНАЧЕНИЕ(Документ.РегистраторРасчетаСебестоимости.ПустаяСсылка)), // ДокументРасчета
	|	УчетСебестоимости.Организация,
	|	АналитикаНоменклатуры.МестоХранения,
	|	АналитикаНоменклатуры.Номенклатура,
	|	УчетСебестоимости.АналитикаУчетаНоменклатуры,
	|	(ВЫБОР
	|		КОГДА УчетСебестоимости.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		 И УчетСебестоимости.Количество < 0
	|		 И НЕ ЕстьВозвратныеОтходы.Организация ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) // возвратные отходы учитываем по пустому разделу учета
	|			ИНАЧЕ УчетСебестоимости.РазделУчета КОНЕЦ),
	|	УчетСебестоимости.ВидЗапасов,
	|	ЕСТЬNULL(УчетСебестоимости.ВидЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)),
	|	УчетСебестоимости.ХозяйственнаяОперация,
	|	УчетСебестоимости.КорАналитикаУчетаНоменклатуры,
	|	КорАналитикаНоменклатуры.МестоХранения,
	|	КорАналитикаНоменклатуры.Номенклатура,
	|	УчетСебестоимости.КорРазделУчета,
	|	УчетСебестоимости.КорВидЗапасов,
	|	ЕСТЬNULL(УчетСебестоимости.КорВидЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)),
	|	УчетСебестоимости.КорОрганизация,
	|	УчетСебестоимости.Подразделение,
	|	УчетСебестоимости.АналитикаУчетаПоПартнерам,
	|	УчетСебестоимости.ЗаказКлиента,
	|	УчетСебестоимости.АналитикаРасходов,
	|	УчетСебестоимости.СтатьяРасходовСписания,
	|	УчетСебестоимости.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр,
	|	УчетСебестоимости.СтатьяРасходовСписания.ВариантРаспределенияРасходовРегл,
	|	ЕСТЬNULL(УчетСебестоимости.СтатьяРасходовСписания.ПринятиеКНалоговомуУчету, ЛОЖЬ),
	|	УчетСебестоимости.СтатьяДоходов,
	|	УчетСебестоимости.АналитикаДоходов,
	|	УчетСебестоимости.СтатьяАктивовПассивов,
	|	УчетСебестоимости.АналитикаАктивовПассивов,
	|	УчетСебестоимости.ИдентификаторСтроки,
	|	УчетСебестоимости.КодСтроки,
	|	УчетСебестоимости.ПериодПродажи,
	|	УчетСебестоимости.ГруппаПродукции,
	|	ЕСТЬNULL(Назначения.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|	УчетСебестоимости.КорНаправлениеДеятельности,
	|	ВЫБОР КОГДА НЕ СторноОтчетыКомиссионера.Период ЕСТЬ NULL
	|	 И УчетСебестоимости.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|	 И УчетСебестоимости.Количество < 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	УчетСебестоимости.Партия,
	|	УчетСебестоимости.АналитикаУчетаПартий,
	|	УчетСебестоимости.АналитикаФинансовогоУчета,
	|	УчетСебестоимости.ВидДеятельностиНДС,
	|	УчетСебестоимости.КорПартия,
	|	УчетСебестоимости.КорАналитикаУчетаПартий,
	|	УчетСебестоимости.КорАналитикаФинансовогоУчета,
	|	УчетСебестоимости.КорВидДеятельностиНДС,
	|	УчетСебестоимости.ВидДеятельностиНДСОтгрузки,
	|	УчетСебестоимости.СтатьяКалькуляции,
	|	УчетСебестоимости.ТипЗаписи,
	|	УчетСебестоимости.Сторно,
	|	УчетСебестоимости.НастройкаХозяйственнойОперации,
	|	УчетСебестоимости.ИдентификаторФинЗаписи,
	|	УчетСебестоимости.НастройкаСчетовУчета,
	|	УчетСебестоимости.ОперацияУчетаСебестоимости,
	|	ВЫБОР
	|		КОГДА УчетСебестоимости.СтатьяРасходовСписания.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА ИСТИНА
	|		КОГДА УчетСебестоимости.Организация В (&ОрганизацииСВосстановлениемРезервовПриСписанииЗапасовНаРасходы)
	|		 И НЕ УчетСебестоимости.СтатьяРасходовСписания.ВариантРаспределенияРасходовРегл ЕСТЬ NULL
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ, // ВосстанавливатьРезервы
	|	ЕСТЬNULL(РеквизитыКорДвижений.ХозяйственнаяОперация,
	|		УчетСебестоимости.ХозяйственнаяОперация),
	|	ЕСТЬNULL(РеквизитыКорДвижений.ТипЗаписи,
	|		УчетСебестоимости.ТипЗаписи),
	|	ЕСТЬNULL(РеквизитыКорДвижений.НастройкаХозяйственнойОперации,
	|		УчетСебестоимости.НастройкаХозяйственнойОперации),
	|	ЕСТЬNULL(РеквизитыКорДвижений.КорАналитикаУчетаНоменклатуры,
	|		УчетСебестоимости.КорАналитикаУчетаНоменклатуры)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	Организация,
	|	РазделУчета
	|;";
	#КонецОбласти
	
	#Область НастройкиПризнанияРасходовНДДПоАналитикеУчетаНоменклатуры
	
	Запрос.Текст = Запрос.Текст + РасчетСебестоимостиЛокализация.ТекстЗапросаНастроекНДД("ВтТаблицаКорректировки",
		"РасчетСебестоимостиКорректировкаСтоимости_СкорректироватьСтоимостьСписанияЗапасов",
		ПараметрыРасчета) + 
		ОбщегоНазначения.РазделительПакетаЗапросов();
		
	#КонецОбласти
	
	#Область ВтДанныеТаблицаКорректировки
	
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Реестр.Ссылка КАК Ссылка,
	|	МАКСИМУМ(Реестр.Подразделение) КАК Подразделение
	|ПОМЕСТИТЬ ВтРеестрДокументовДвижений
	|ИЗ
	|	ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК Реестр
	|	ПО Реестр.Ссылка = ТаблицаКорректировки.ДокументДвижения
	|		И НЕ Реестр.ДополнительнаяЗапись
	|СГРУППИРОВАТЬ ПО
	|	Реестр.Ссылка
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|ВЫБРАТЬ
	|	ТаблицаКорректировки.Период                        КАК Период,
	|	ТаблицаКорректировки.ВидДвижения                   КАК ВидДвижения,
	|	ТаблицаКорректировки.ДокументДвижения              КАК ДокументДвижения,
	|	ТаблицаКорректировки.ДокументРасчета               КАК ДокументРасчета,
	|	ТаблицаКорректировки.Организация                   КАК Организация,
	|	ТаблицаКорректировки.Склад                         КАК Склад,
	|	ТаблицаКорректировки.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура                             КАК Номенклатура,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|		ИНАЧЕ ТаблицаКорректировки.РазделУчета КОНЕЦ) КАК РазделУчета,
	|	ТаблицаКорректировки.ВидЗапасов                    КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ТаблицаКорректировки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		 ИЛИ (ТаблицаКорректировки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И НЕ ТаблицаКорректировки.Номенклатура.ПрослеживаемыйТовар)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаКорректировки.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|	КОНЕЦ                                              КАК ТипЗапасов,
	|	ТаблицаКорректировки.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ТаблицаКорректировки.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаКорректировки.КорСклад                      КАК КорСклад,
	|	ТаблицаКорректировки.КорРазделУчета                КАК КорРазделУчета,
	|	ТаблицаКорректировки.КорВидЗапасов                 КАК КорВидЗапасов,
	|	ВЫБОР
	|		КОГДА ТаблицаКорректировки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		 ИЛИ (ТаблицаКорректировки.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И НЕ ТаблицаКорректировки.Номенклатура.ПрослеживаемыйТовар)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(ТаблицаКорректировки.КорТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|	КОНЕЦ                                              КАК КорТипЗапасов,
	|	ТаблицаКорректировки.КорОрганизация                КАК КорОрганизация,
	|	ТаблицаКорректировки.Подразделение                 КАК Подразделение,
	|	ТаблицаКорректировки.АналитикаУчетаПоПартнерам     КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаКорректировки.ЗаказКлиента                  КАК ЗаказКлиента,
	|	ТаблицаКорректировки.АналитикаРасходов             КАК АналитикаРасходов,
	|	ТаблицаКорректировки.СтатьяРасходовСписания        КАК СтатьяРасходовСписания,
	|	ТаблицаКорректировки.СтатьяРасходовСписания        КАК СтатьяРасходовСписанияУпр,
	|	ТаблицаКорректировки.АналитикаРасходов             КАК АналитикаРасходовУпр,
	|	ТаблицаКорректировки.ВариантРаспределенияРасходовУпр  КАК ВариантРаспределенияРасходовУпр,
	|	ТаблицаКорректировки.ВариантРаспределенияРасходовРегл КАК ВариантРаспределенияРасходовРегл,
	|	ТаблицаКорректировки.ПринятиеКНалоговомуУчету      КАК ПринятиеКНалоговомуУчету,
	|	ТаблицаКорректировки.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ТаблицаКорректировки.КорНаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	ТаблицаКорректировки.СтатьяДоходов                 КАК СтатьяДоходов,
	|	ТаблицаКорректировки.АналитикаДоходов              КАК АналитикаДоходов,
	|	ТаблицаКорректировки.СтатьяДоходов                 КАК СтатьяДоходовУпр,
	|	ТаблицаКорректировки.АналитикаДоходов              КАК АналитикаДоходовУпр,
	|	ТаблицаКорректировки.СтатьяАктивовПассивов         КАК СтатьяАктивовПассивов,
	|	ТаблицаКорректировки.АналитикаАктивовПассивов      КАК АналитикаАктивовПассивов,
	|	ТаблицаКорректировки.ИдентификаторСтроки           КАК ИдентификаторСтроки,
	|	ТаблицаКорректировки.КодСтроки                     КАК КодСтроки,
	|	ТаблицаКорректировки.ПериодПродажи                 КАК ПериодПродажи,
	|	ТаблицаКорректировки.ГруппаПродукции               КАК ГруппаПродукции,
	|	ТаблицаКорректировки.СторноОтчетПоКомиссии		   КАК СторноОтчетПоКомиссии,
	|	ТаблицаКорректировки.Партия                        КАК Партия,
	|	ТаблицаКорректировки.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	ТаблицаКорректировки.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	ТаблицаКорректировки.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	ТаблицаКорректировки.КорПартия                 	   КАК КорПартия,
	|	ТаблицаКорректировки.КорАналитикаУчетаПартий       КАК КорАналитикаУчетаПартий,
	|	ТаблицаКорректировки.КорАналитикаФинансовогоУчета  КАК КорАналитикаФинансовогоУчета,
	|	ТаблицаКорректировки.КорВидДеятельностиНДС         КАК КорВидДеятельностиНДС,
	|	ТаблицаКорректировки.СтатьяКалькуляции             КАК СтатьяКалькуляции,
	|	ТаблицаКорректировки.ТипЗаписи                 	   КАК ТипЗаписи,
	|	ТаблицаКорректировки.ДокументИсточник              КАК ДокументИсточник,
	|	ТаблицаКорректировки.Сторно                        КАК Сторно,
	|	ТаблицаКорректировки.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ТаблицаКорректировки.ИдентификаторФинЗаписи        КАК ИдентификаторФинЗаписи,
	|	ТаблицаКорректировки.НастройкаСчетовУчета          КАК НастройкаСчетовУчета,
	|	ТаблицаКорректировки.ОперацияУчетаСебестоимости    КАК ОперацияУчетаСебестоимости,
	|	ТаблицаКорректировки.ВосстанавливатьРезервы        КАК ВосстанавливатьРезервы,
	|	ТаблицаКорректировки.ПриходХозяйственнаяОперация   КАК ПриходХозяйственнаяОперация,
	|	ТаблицаКорректировки.ПриходТипЗаписи               КАК ПриходТипЗаписи,
	|	ТаблицаКорректировки.ПриходНастройкаХозяйственнойОперации КАК ПриходНастройкаХозяйственнойОперации,
	|	ТаблицаКорректировки.ПриходКорАналитикаУчетаНоменклатуры  КАК ПриходКорАналитикаУчетаНоменклатуры,
	//++ Локализация


	//-- Локализация
	|	ЕСТЬNULL(Реестр.Подразделение, НЕОПРЕДЕЛЕНО) КАК ПодразделениеДокумента,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаКорректировки.ВидЗапасов
	|		ИНАЧЕ 
	|			ТаблицаКорректировки.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаКорректировки.КорВидЗапасов
	|		ИНАЧЕ 
	|			ТаблицаКорректировки.КорНоменклатура
	|	КОНЕЦ КАК КорИсточникГФУНоменклатуры,
	|	ВЫБОР КОГДА ТаблицаКорректировки.ХозяйственнаяОперация В (&МассивОперацийПередачи) ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ                                              КАК ЭтоПередачаМеждуОрганизациями,
	|	ТаблицаКорректировки.КорСтоимость                  КАК КорСтоимость,
	|
	|	ВЫБОР
	//++ Устарело_Производство21


	//-- Устарело_Производство21
	|		КОГДА ИСТИНА ТОГДА // для удобства расстановки тегов
	|			ЛОЖЬ
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ ЭтоВыпускПродукции,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями) ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ ЭтоВозвратМеждуОрганизациями,
	// Резервы под обесценение запасов не списываются, если
	//	- не меняется номенклатура и характеристика
	//	- номенклатура списывается на выпуск продукции из раздела Незавершенное производство
	// или списываеиая партия это справочник "Партии производства".
	// Условия формирования поля СписыватьРезервы должны соответствовать условиям формирования поля ПереноситьРезерв
	// в функции РасчетСебестоимостиРешениеСЛУ.ТекстСвязиУзловРезервовПодОбесценениеЗапасов().
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.КорРазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
	|		 И Аналитика.Номенклатура = ЕСТЬNULL(КорАналитика.Номенклатура, НЕОПРЕДЕЛЕНО)
	|		 И Аналитика.Характеристика = ЕСТЬNULL(КорАналитика.Характеристика, НЕОПРЕДЕЛЕНО)
	|		 И ТаблицаКорректировки.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|			ТОГДА ЛОЖЬ
	|		КОГДА ТаблицаКорректировки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК СписыватьРезервы,
	|
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость)
	|			ТОГДА 0
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|			* ЕСТЬNULL(СтоимостьВозвратаТоваров.Стоимость, ЕСТЬNULL(СтоимостьТоваров.Стоимость, 0)) КАК ЧИСЛО(31,2))
	|			- ТаблицаКорректировки.Стоимость
	|	КОНЕЦ) КАК Стоимость,
	|
	|	(ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|		* ЕСТЬNULL(СтоимостьВозвратаТоваров.СтоимостьЗабалансовая, ЕСТЬNULL(СтоимостьТоваров.СтоимостьЗабалансовая, 0)) КАК ЧИСЛО(31,2))
	|		- ТаблицаКорректировки.СтоимостьЗабалансовая
	|	КОНЕЦ) КАК СтоимостьЗабалансовая,
	|
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость)
	|			ТОГДА 0
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|				* ЕСТЬNULL(СтоимостьВозвратаТоваров.СтоимостьБезНДС, ЕСТЬNULL(СтоимостьТоваров.СтоимостьБезНДС, 0)) КАК ЧИСЛО(31,2))
	|				- ТаблицаКорректировки.СтоимостьБезНДС
	|	КОНЕЦ) КАК СтоимостьБезНДС,
	|
	|	0 КАК ПостояннаяРазница,
	|
	//++ УТ
	
	//++ Локализация
	|	(ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(
	|					ТаблицаКорректировки.Количество
	|					* ЕСТЬNULL(СтоимостьВозвратаТоваров.ВременнаяРазница, ЕСТЬNULL(СтоимостьТоваров.ВременнаяРазница, 0)) КАК ЧИСЛО(31,2))
	|					- ТаблицаКорректировки.ВременнаяРазница КОНЕЦ) +
	//-- Локализация
	
	//-- УТ
	|	0 КАК ВременнаяРазница,
	|
	|	(ВЫБОР
	
	// Условия заполненния поля СтоимостьНДД должны соответствовать условиям выборки данных для формирования временной таблицы СебестоимостьПредварительная 
	// в функции см. РасчетСебестоимостиНДД.ТекстЗапросаПодготовкаДанныхДляРаспределенияФактическихРасходовНДД
	|		КОГДА ТаблицаКорректировки.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.Реализация)
	|		 ИЛИ ТаблицаКорректировки.ХозяйственнаяОперация В (&МассивОперацийРеализации)
	|			ТОГДА 0
	|		КОГДА ТаблицаКорректировки.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы)
	|		 И ТаблицаКорректировки.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|			ТОГДА 0
	|		КОГДА ТаблицаКорректировки.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
	|		 И ТаблицаКорректировки.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|		 И НастройкиПризнанияРасходовНДДпоПодразделению.ВариантПризнанияРасходов ЕСТЬ NULL
	|		 И НастройкиПризнанияРасходовНДДпоНаправлениюДеятельности.ВариантПризнанияРасходов ЕСТЬ NULL
	|			ТОГДА 0
	// Для движений, связанных с НЗП проверяем вариант признания расходов НДД. Если не включаются в стоимость, то стоимость НДД = 0 
	|		КОГДА ТаблицаКорректировки.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.НезавершенноеПроизводство)
	|		 И КорНастройкиПризнанияРасходовНДД.ВариантПризнанияРасходов ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА ТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость)
	|			ТОГДА 0
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|				* ЕСТЬNULL(СтоимостьВозвратаТоваров.СтоимостьНДД, ЕСТЬNULL(СтоимостьТоваров.СтоимостьНДД, 0)) КАК ЧИСЛО(31,2))
	|				- ТаблицаКорректировки.СтоимостьНДД 
	|	КОНЕЦ) КАК СтоимостьНДД,
	|
	|	(ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|				* ЕСТЬNULL(СтоимостьВозвратаТоваров.СтоимостьДопРасходы, ЕСТЬNULL(СтоимостьТоваров.СтоимостьДопРасходы, 0)) КАК ЧИСЛО(31,2))
	|				- ТаблицаКорректировки.ДопРасходы
	|	КОНЕЦ) КАК ДопРасходы,
	|
	|	(ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|				* ЕСТЬNULL(СтоимостьВозвратаТоваров.СтоимостьДопРасходыБезНДС, ЕСТЬNULL(СтоимостьТоваров.СтоимостьДопРасходыБезНДС, 0)) КАК ЧИСЛО(31,2))
	|				- ТаблицаКорректировки.ДопРасходыБезНДС
	|	КОНЕЦ) КАК ДопРасходыБезНДС,
	|
	|	(ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|				* ЕСТЬNULL(СтоимостьВозвратаТоваров.Трудозатраты, ЕСТЬNULL(СтоимостьТоваров.Трудозатраты, 0)) КАК ЧИСЛО(31,2))
	|				- ТаблицаКорректировки.Трудозатраты
	|	КОНЕЦ) КАК Трудозатраты,
	|
	|	(ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|				* ЕСТЬNULL(СтоимостьВозвратаТоваров.ПостатейныеПостоянныеСНДС, ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеСНДС, 0)) КАК ЧИСЛО(31,2))
	|				- ТаблицаКорректировки.ПостатейныеПостоянныеСНДС
	|	КОНЕЦ) КАК ПостатейныеПостоянныеСНДС,
	|
	|	(ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|				* ЕСТЬNULL(СтоимостьВозвратаТоваров.ПостатейныеПостоянныеБезНДС, ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеБезНДС, 0)) КАК ЧИСЛО(31,2))
	|				- ТаблицаКорректировки.ПостатейныеПостоянныеБезНДС
	|	КОНЕЦ) КАК ПостатейныеПостоянныеБезНДС,
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ДокументДвижения ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		И ТаблицаКорректировки.Количество < 0
	|		И НЕ &ПартионныйУчетВерсии22
	|	ТОГДА
	|		0
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|			* ЕСТЬNULL(СтоимостьВозвратаТоваров.ПостатейныеПеременныеСНДС, ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеСНДС, 0)) КАК ЧИСЛО(31,2))
	|			- ТаблицаКорректировки.ПостатейныеПеременныеСНДС
	|	КОНЕЦ) КАК ПостатейныеПеременныеСНДС,
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ДокументДвижения ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		И ТаблицаКорректировки.Количество < 0
	|		И НЕ &ПартионныйУчетВерсии22
	|	ТОГДА
	|		0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|		* ЕСТЬNULL(СтоимостьВозвратаТоваров.ПостатейныеПеременныеБезНДС, ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеБезНДС, 0)) КАК ЧИСЛО(31,2))
	|		- ТаблицаКорректировки.ПостатейныеПеременныеБезНДС
	|	КОНЕЦ) КАК ПостатейныеПеременныеБезНДС,
	|
	|	(ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|				* ЕСТЬNULL(СтоимостьВозвратаТоваров.ДопРасходыРегл, ЕСТЬNULL(СтоимостьТоваров.ДопРасходыРегл, 0)) КАК ЧИСЛО(31,2))
	|				- ТаблицаКорректировки.ДопРасходыРегл
	|	КОНЕЦ) КАК ДопРасходыРегл,
	|
	|	(ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|				* ЕСТЬNULL(СтоимостьВозвратаТоваров.ТрудозатратыРегл, ЕСТЬNULL(СтоимостьТоваров.ТрудозатратыРегл, 0)) КАК ЧИСЛО(31,2))
	|				- ТаблицаКорректировки.ТрудозатратыРегл
	|	КОНЕЦ) КАК ТрудозатратыРегл,
	|
	|	(ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|				* ЕСТЬNULL(СтоимостьВозвратаТоваров.ПостатейныеПостоянныеРегл, ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеРегл, 0)) КАК ЧИСЛО(31,2))
	|				- ТаблицаКорректировки.ПостатейныеПостоянныеРегл
	|	КОНЕЦ) КАК ПостатейныеПостоянныеРегл,
	|
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ДокументДвижения ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		И ТаблицаКорректировки.Количество < 0
	|		И НЕ &ПартионныйУчетВерсии22
	|	ТОГДА
	|		0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|		* ЕСТЬNULL(СтоимостьВозвратаТоваров.ПостатейныеПеременныеРегл, ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеРегл, 0)) КАК ЧИСЛО(31,2))
	|		- ТаблицаКорректировки.ПостатейныеПеременныеРегл
	|	КОНЕЦ) КАК ПостатейныеПеременныеРегл,
	|
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость)
	|			ТОГДА 0
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(
	|					ТаблицаКорректировки.Количество
	|					* ЕСТЬNULL(СтоимостьВозвратаТоваров.СтоимостьРегл, ЕСТЬNULL(СтоимостьТоваров.СтоимостьРегл, 0)) КАК ЧИСЛО(31,2))
	|					- ТаблицаКорректировки.СтоимостьРегл КОНЕЦ) КАК СтоимостьРегл,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость)
	|			ТОГДА 0
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(
	|					ТаблицаКорректировки.Количество
	|					* ЕСТЬNULL(СтоимостьВозвратаТоваров.СтоимостьЗабалансоваяРегл, ЕСТЬNULL(СтоимостьТоваров.СтоимостьЗабалансоваяРегл, 0)) КАК ЧИСЛО(31,2))
	|					- ТаблицаКорректировки.СтоимостьЗабалансоваяРегл КОНЕЦ) КАК СтоимостьЗабалансоваяРегл,
	|
	|	(ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|					* ЕСТЬNULL(СтоимостьВозвратаТоваров.РезервПодОбесценениеРегл, ЕСТЬNULL(СтоимостьТоваров.РезервПодОбесценениеРегл, 0)) КАК ЧИСЛО(31,2))
	|					- ТаблицаКорректировки.РезервПодОбесценениеРегл
	|	КОНЕЦ) КАК РезервПодОбесценениеРегл,
	|
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость)
	|			ТОГДА 0
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(
	|					ТаблицаКорректировки.Количество
	|					* ЕСТЬNULL(СтоимостьВозвратаТоваров.СтоимостьУпр, ЕСТЬNULL(СтоимостьТоваров.СтоимостьУпр, 0)) КАК ЧИСЛО(31,2))
	|					- ТаблицаКорректировки.СтоимостьУпр
	|	КОНЕЦ) КАК СтоимостьУпр,
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ДокументДвижения ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		И ТаблицаКорректировки.Количество < 0
	|		И НЕ &ПартионныйУчетВерсии22
	|	ТОГДА
	|		0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|		* ЕСТЬNULL(СтоимостьВозвратаТоваров.ДопРасходыУпр, ЕСТЬNULL(СтоимостьТоваров.ДопРасходыУпр, 0)) КАК ЧИСЛО(31,2))
	|		- ТаблицаКорректировки.ДопРасходыУпр
	|	КОНЕЦ) КАК ДопРасходыУпр,
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ДокументДвижения ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		И ТаблицаКорректировки.Количество < 0
	|		И НЕ &ПартионныйУчетВерсии22
	|	ТОГДА
	|		0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|		* ЕСТЬNULL(СтоимостьВозвратаТоваров.ТрудозатратыУпр, ЕСТЬNULL(СтоимостьТоваров.ТрудозатратыУпр, 0)) КАК ЧИСЛО(31,2))
	|		- ТаблицаКорректировки.ТрудозатратыУпр
	|	КОНЕЦ) КАК ТрудозатратыУпр,
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ДокументДвижения ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		И ТаблицаКорректировки.Количество < 0
	|		И НЕ &ПартионныйУчетВерсии22
	|	ТОГДА
	|		0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|		* ЕСТЬNULL(СтоимостьВозвратаТоваров.ПостатейныеПостоянныеУпр, ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПостоянныеУпр, 0)) КАК ЧИСЛО(31,2))
	|		- ТаблицаКорректировки.ПостатейныеПостоянныеУпр
	|	КОНЕЦ) КАК ПостатейныеПостоянныеУпр,
	
	|	(ВЫБОР КОГДА ТаблицаКорректировки.ДокументДвижения ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|		И ТаблицаКорректировки.Количество < 0
	|		И НЕ &ПартионныйУчетВерсии22
	|	ТОГДА
	|		0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|		* ЕСТЬNULL(СтоимостьВозвратаТоваров.ПостатейныеПеременныеУпр, ЕСТЬNULL(СтоимостьТоваров.ПостатейныеПеременныеУпр, 0)) КАК ЧИСЛО(31,2))
	|		- ТаблицаКорректировки.ПостатейныеПеременныеУпр
	|	КОНЕЦ) КАК ПостатейныеПеременныеУпр,
	|
	|	(ВЫБОР
	|		КОГДА ИСТИНА
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаКорректировки.Количество
	|				* ЕСТЬNULL(СтоимостьВозвратаТоваров.РезервПодОбесценениеУпр, ЕСТЬNULL(СтоимостьТоваров.РезервПодОбесценениеУпр, 0)) КАК ЧИСЛО(31,2))
	|				- ТаблицаКорректировки.РезервПодОбесценениеУпр
	|	КОНЕЦ) КАК РезервПодОбесценениеУпр,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость)
	|		ТОГДА 0
	|		ИНАЧЕ ТаблицаКорректировки.НДСРегл
	|	КОНЕЦ КАК НДСРегл,
	|	ВЫБОР
	|		КОГДА ТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость)
	|		ТОГДА 0
	|		ИНАЧЕ ТаблицаКорректировки.НДСУпр
	|	КОНЕЦ КАК НДСУпр,
	|	ТаблицаКорректировки.Стоимость КАК ИсходнаяСтоимость,
	|	ТаблицаКорректировки.СтоимостьБезНДС КАК ИсходнаяСтоимостьБезНДС,
	|	ТаблицаКорректировки.СтоимостьРегл КАК ИсходнаяСтоимостьРегл,
	|	ТаблицаКорректировки.СтоимостьРегл КАК ИсходнаяСтоимостьУпр,
	|	ТаблицаКорректировки.Количество КАК Количество,
	|
	|	(ВЫБОР
	|		КОГДА СтоимостьТоваров.НомерУзла В (&УзлыСПереполнениемПоля)
	|		 И &ПартионныйУчетВерсии22
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК РасчетНеЗавершен,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)
	|			И НачалоПериода(ТаблицаКорректировки.ПериодПродажи, МЕСЯЦ) < НачалоПериода(ТаблицаКорректировки.Период, МЕСЯЦ) ТОГДА
	|			-1
	|		ИНАЧЕ
	|			1
	|	КОНЕЦ КАК Знак,
	|	ВЫБОР
	|		КОГДА ТаблицаКорректировки.Сторно ИЛИ ТаблицаКорректировки.ХозяйственнаяОперация В
	|			(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТары),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТарыВозвратНаДругойСклад))
	|		ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ЗнакСторно
	|
	|ПОМЕСТИТЬ ВтДанныеТаблицаКорректировки
	|
	|ИЗ
	|	ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.Ссылка = ТаблицаКорректировки.АналитикаУчетаНоменклатуры
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорАналитика
	|		ПО КорАналитика.Ссылка = ТаблицаКорректировки.КорАналитикаУчетаНоменклатуры
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВТСтоимостьПартийТоваров КАК СтоимостьТоваров
	|	ПО 
	|		СтоимостьТоваров.АналитикаУчетаНоменклатуры 	= ТаблицаКорректировки.АналитикаУчетаНоменклатуры
	|		И СтоимостьТоваров.ВидЗапасов               	= ТаблицаКорректировки.ВидЗапасов
	|		И СтоимостьТоваров.Организация              	= ТаблицаКорректировки.Организация
	|		И СтоимостьТоваров.РазделУчета              	= ТаблицаКорректировки.РазделУчета
	|		И СтоимостьТоваров.Партия 						= ТаблицаКорректировки.Партия
	|		И СтоимостьТоваров.АналитикаУчетаПартий 		= ТаблицаКорректировки.АналитикаУчетаПартий
	|		И СтоимостьТоваров.АналитикаФинансовогоУчета 	= ТаблицаКорректировки.АналитикаФинансовогоУчета
	|		И СтоимостьТоваров.ВидДеятельностиНДС 			= ТаблицаКорректировки.ВидДеятельностиНДС
	|		И (ТаблицаКорректировки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ИЛИ ТаблицаКорректировки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Потребление)
	|			ИЛИ ТаблицаКорректировки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
	|		)
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВТСтоимостьПартийТоваров КАК СтоимостьВозвратаТоваров
	|	ПО 
	|		СтоимостьВозвратаТоваров.АналитикаУчетаНоменклатуры 	= ТаблицаКорректировки.КорАналитикаУчетаНоменклатуры
	|		И СтоимостьВозвратаТоваров.ВидЗапасов               	= ТаблицаКорректировки.КорВидЗапасов
	|		И СтоимостьВозвратаТоваров.Организация              	= ТаблицаКорректировки.Организация
	|		И СтоимостьВозвратаТоваров.РазделУчета              	= ТаблицаКорректировки.РазделУчета
	|		И СтоимостьВозвратаТоваров.Партия 						= ТаблицаКорректировки.Партия
	|		И СтоимостьВозвратаТоваров.АналитикаУчетаПартий 		= ТаблицаКорректировки.АналитикаУчетаПартий
	|		И СтоимостьВозвратаТоваров.АналитикаФинансовогоУчета 	= ТаблицаКорректировки.АналитикаФинансовогоУчета
	|		И СтоимостьВозвратаТоваров.ВидДеятельностиНДС 			= ТаблицаКорректировки.ВидДеятельностиНДСОтгрузки
	|		И ТаблицаКорректировки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Сторно)
	|		И ТаблицаКорректировки.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы))
	// Поле "ВидДеятельностиНДСОтгрузки" заполняется в функции ЗаполнитьРасчетнуюПартиюСебестоимостиТоваров()
	// общего модуля РасчетСебестоимостиЗаполнениеПартий по условию на поля ТипЗаписи и ХозяйственнаяОперация
	|		И (ТаблицаКорректировки.ВидДеятельностиНДС <> ТаблицаКорректировки.ВидДеятельностиНДСОтгрузки
	|			ИЛИ ТаблицаКорректировки.АналитикаУчетаНоменклатуры <> ТаблицаКорректировки.КорАналитикаУчетаНоменклатуры)
	|		И ТаблицаКорректировки.ВидДеятельностиНДСОтгрузки <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтРеестрДокументовДвижений КАК Реестр
	|	ПО Реестр.Ссылка = ТаблицаКорректировки.ДокументДвижения
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ НастройкиПризнанияРасходовНДД КАК НастройкиПризнанияРасходовНДДпоПодразделению
	|	ПО НастройкиПризнанияРасходовНДДпоПодразделению.ОбъектРаздельногоУчетаНДД = ТаблицаКорректировки.Подразделение
	|		И НастройкиПризнанияРасходовНДДпоПодразделению.Организация = ТаблицаКорректировки.Организация
	|		И НастройкиПризнанияРасходовНДДпоПодразделению.РасходыВключаютсяВСтоимость
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ НастройкиПризнанияРасходовНДД КАК НастройкиПризнанияРасходовНДДпоНаправлениюДеятельности
	|	ПО НастройкиПризнанияРасходовНДДпоНаправлениюДеятельности.ОбъектРаздельногоУчетаНДД = ТаблицаКорректировки.КорНаправлениеДеятельности
	|		И НастройкиПризнанияРасходовНДДпоНаправлениюДеятельности.Организация = ТаблицаКорректировки.Организация
	|		И НастройкиПризнанияРасходовНДДпоНаправлениюДеятельности.РасходыВключаютсяВСтоимость
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ НастройкиПризнанияРасходовНДДПоАналитикеУчетаНоменклатуры КАК КорНастройкиПризнанияРасходовНДД
	|	ПО КорНастройкиПризнанияРасходовНДД.АналитикаУчетаНоменклатуры = ТаблицаКорректировки.КорАналитикаУчетаНоменклатуры
	|		И КорНастройкиПризнанияРасходовНДД.Организация = ТаблицаКорректировки.Организация
	|		И КорНастройкиПризнанияРасходовНДД.РасходыВключаютсяВСтоимость
	|
	|ГДЕ
	|	НЕ ТаблицаКорректировки.СторноОтчетПоКомиссии
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ХозяйственнаяОперация
	|;";
	
	#КонецОбласти
	
	#Область ДвиженияТаблицаКорректировки
	
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	ТаблицаКорректировки.Период                        КАК Период,
	|	ТаблицаКорректировки.ВидДвижения                   КАК ВидДвижения,
	|	ТаблицаКорректировки.ДокументДвижения              КАК ДокументДвижения,
	|	ТаблицаКорректировки.ДокументРасчета               КАК ДокументРасчета,
	|	ТаблицаКорректировки.Организация                   КАК Организация,
	|	ТаблицаКорректировки.Склад                         КАК Склад,
	|	ТаблицаКорректировки.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаКорректировки.РазделУчета КАК РазделУчета,
	|	ТаблицаКорректировки.ВидЗапасов                    КАК ВидЗапасов,
	|	ТаблицаКорректировки.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаКорректировки.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ТаблицаКорректировки.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаКорректировки.КорСклад                      КАК КорСклад,
	|	ТаблицаКорректировки.КорРазделУчета                КАК КорРазделУчета,
	|	ТаблицаКорректировки.КорВидЗапасов                 КАК КорВидЗапасов,
	|	ТаблицаКорректировки.КорТипЗапасов КАК КорТипЗапасов,
	|	ТаблицаКорректировки.КорОрганизация                КАК КорОрганизация,
	|	ТаблицаКорректировки.Подразделение                 КАК Подразделение,
	|	ТаблицаКорректировки.АналитикаУчетаПоПартнерам     КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаКорректировки.ЗаказКлиента                  КАК ЗаказКлиента,
	|	ТаблицаКорректировки.АналитикаРасходов             КАК АналитикаРасходов,
	|	ТаблицаКорректировки.СтатьяРасходовСписания        КАК СтатьяРасходовСписания,
	|	ТаблицаКорректировки.СтатьяРасходовСписанияУпр     КАК СтатьяРасходовСписанияУпр,
	|	ТаблицаКорректировки.АналитикаРасходовУпр          КАК АналитикаРасходовУпр,
	|	ТаблицаКорректировки.ВариантРаспределенияРасходовУпр КАК ВариантРаспределенияРасходовУпр,
	|	ТаблицаКорректировки.ВариантРаспределенияРасходовРегл КАК ВариантРаспределенияРасходовРегл,
	|	ТаблицаКорректировки.ПринятиеКНалоговомуУчету      КАК ПринятиеКНалоговомуУчету,
	|	ТаблицаКорректировки.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ТаблицаКорректировки.КорНаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	ТаблицаКорректировки.СтатьяДоходов                 КАК СтатьяДоходов,
	|	ТаблицаКорректировки.АналитикаДоходов              КАК АналитикаДоходов,
	|	ТаблицаКорректировки.СтатьяДоходовУпр              КАК СтатьяДоходовУпр,
	|	ТаблицаКорректировки.АналитикаДоходовУпр           КАК АналитикаДоходовУпр,
	|	ТаблицаКорректировки.СтатьяАктивовПассивов         КАК СтатьяАктивовПассивов,
	|	ТаблицаКорректировки.АналитикаАктивовПассивов      КАК АналитикаАктивовПассивов,
	|	ТаблицаКорректировки.ИдентификаторСтроки           КАК ИдентификаторСтроки,
	|	ТаблицаКорректировки.КодСтроки                     КАК КодСтроки,
	|	ТаблицаКорректировки.ПериодПродажи                 КАК ПериодПродажи,
	|	ТаблицаКорректировки.ГруппаПродукции               КАК ГруппаПродукции,
	|	ТаблицаКорректировки.СторноОтчетПоКомиссии		   КАК СторноОтчетПоКомиссии,
	|	ТаблицаКорректировки.Партия                        КАК Партия,
	|	ТаблицаКорректировки.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	ТаблицаКорректировки.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	ТаблицаКорректировки.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	ТаблицаКорректировки.КорПартия                 	   КАК КорПартия,
	|	ТаблицаКорректировки.КорАналитикаУчетаПартий       КАК КорАналитикаУчетаПартий,
	|	ТаблицаКорректировки.КорАналитикаФинансовогоУчета  КАК КорАналитикаФинансовогоУчета,
	|	ТаблицаКорректировки.КорВидДеятельностиНДС         КАК КорВидДеятельностиНДС,
	|	ТаблицаКорректировки.СтатьяКалькуляции             КАК СтатьяКалькуляции,
	|	ТаблицаКорректировки.ТипЗаписи                 	   КАК ТипЗаписи,
	|	ТаблицаКорректировки.ДокументИсточник              КАК ДокументИсточник,
	|	ТаблицаКорректировки.Сторно                        КАК Сторно,
	|	ТаблицаКорректировки.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ТаблицаКорректировки.ИдентификаторФинЗаписи        КАК ИдентификаторФинЗаписи,
	|	ТаблицаКорректировки.НастройкаСчетовУчета          КАК НастройкаСчетовУчета,
	|	ТаблицаКорректировки.ОперацияУчетаСебестоимости    КАК ОперацияУчетаСебестоимости,
	|	ТаблицаКорректировки.ВосстанавливатьРезервы        КАК ВосстанавливатьРезервы,
	|	ТаблицаКорректировки.ПриходХозяйственнаяОперация   КАК ПриходХозяйственнаяОперация,
	|	ТаблицаКорректировки.ПриходТипЗаписи               КАК ПриходТипЗаписи,
	|	ТаблицаКорректировки.ПриходНастройкаХозяйственнойОперации КАК ПриходНастройкаХозяйственнойОперации,
	|	ТаблицаКорректировки.ПриходКорАналитикаУчетаНоменклатуры  КАК ПриходКорАналитикаУчетаНоменклатуры,
	//++ Локализация


	//-- Локализация
	|	
	|	ТаблицаКорректировки.ПодразделениеДокумента КАК ПодразделениеДокумента,
	|	ТаблицаКорректировки.ИсточникГФУНоменклатуры КАК ИсточникГФУНоменклатуры,
	|	ТаблицаКорректировки.КорИсточникГФУНоменклатуры КАК КорИсточникГФУНоменклатуры,
	|	ТаблицаКорректировки.ЭтоПередачаМеждуОрганизациями КАК ЭтоПередачаМеждуОрганизациями,
	|	ТаблицаКорректировки.КорСтоимость                  КАК КорСтоимость,
	|	ТаблицаКорректировки.Стоимость КАК Стоимость,
	|	ТаблицаКорректировки.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	ТаблицаКорректировки.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	ТаблицаКорректировки.ПостояннаяРазница КАК ПостояннаяРазница,
	// Если в движении сумма НУ в пределах погрешности огругления, то скорректируем сумму временной разницы для исключения 
	// возникновения погрешности по сумме НУ. 
	|	(ВЫБОР
	|		КОГДА (ТаблицаКорректировки.СтоимостьРегл
	|			+ ТаблицаКорректировки.ДопРасходыРегл
	|			+ ТаблицаКорректировки.ТрудозатратыРегл
	|			+ ТаблицаКорректировки.ПостатейныеПостоянныеРегл
	|			+ ТаблицаКорректировки.ПостатейныеПеременныеРегл
	|			- ТаблицаКорректировки.ПостояннаяРазница
	|			- ТаблицаКорректировки.ВременнаяРазница) МЕЖДУ -&ЗначениеПогрешности И &ЗначениеПогрешности
	|		 И ТаблицаКорректировки.ВременнаяРазница > &ЗначениеПогрешности
	|			ТОГДА ТаблицаКорректировки.СтоимостьРегл
	|			+ ТаблицаКорректировки.ДопРасходыРегл
	|			+ ТаблицаКорректировки.ТрудозатратыРегл
	|			+ ТаблицаКорректировки.ПостатейныеПостоянныеРегл
	|			+ ТаблицаКорректировки.ПостатейныеПеременныеРегл
	|			- ТаблицаКорректировки.ПостояннаяРазница
	|		ИНАЧЕ ТаблицаКорректировки.ВременнаяРазница КОНЕЦ) КАК ВременнаяРазница,
	|	ТаблицаКорректировки.СтоимостьНДД КАК СтоимостьНДД,
	|
	|	ТаблицаКорректировки.ДопРасходы КАК ДопРасходы,
	|
	|	ТаблицаКорректировки.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|	ТаблицаКорректировки.Трудозатраты КАК Трудозатраты,
	|	ТаблицаКорректировки.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	ТаблицаКорректировки.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	ТаблицаКорректировки.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	ТаблицаКорректировки.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	|	ТаблицаКорректировки.ДопРасходыРегл КАК ДопРасходыРегл,
	|	ТаблицаКорректировки.ТрудозатратыРегл КАК ТрудозатратыРегл,
	|	ТаблицаКорректировки.ПостатейныеПостоянныеРегл КАК ПостатейныеПостоянныеРегл,
	|	ТаблицаКорректировки.ПостатейныеПеременныеРегл КАК ПостатейныеПеременныеРегл,
	|	ТаблицаКорректировки.СтоимостьРегл КАК СтоимостьРегл,
	|	ТаблицаКорректировки.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	ТаблицаКорректировки.РезервПодОбесценениеРегл КАК РезервПодОбесценениеРегл,
	|	ТаблицаКорректировки.СтоимостьУпр КАК СтоимостьУпр,
	|	ТаблицаКорректировки.ДопРасходыУпр КАК ДопРасходыУпр,
	|	ТаблицаКорректировки.ТрудозатратыУпр КАК ТрудозатратыУпр,
	|	ТаблицаКорректировки.ПостатейныеПостоянныеУпр КАК ПостатейныеПостоянныеУпр,
	|	ТаблицаКорректировки.ПостатейныеПеременныеУпр КАК ПостатейныеПеременныеУпр,
	|	ТаблицаКорректировки.РезервПодОбесценениеУпр КАК РезервПодОбесценениеУпр,
	|
	|	ТаблицаКорректировки.НДСРегл КАК НДСРегл,
	|	ТаблицаКорректировки.НДСУпр КАК НДСУпр,
	|	ТаблицаКорректировки.ИсходнаяСтоимость КАК ИсходнаяСтоимость,
	|	ТаблицаКорректировки.ИсходнаяСтоимостьБезНДС КАК ИсходнаяСтоимостьБезНДС,
	|	ТаблицаКорректировки.ИсходнаяСтоимостьРегл КАК ИсходнаяСтоимостьРегл,
	|	ТаблицаКорректировки.ИсходнаяСтоимостьУпр КАК ИсходнаяСтоимостьУпр,
	|	ТаблицаКорректировки.Количество КАК Количество,
	|
	|	ТаблицаКорректировки.ЭтоВыпускПродукции КАК ЭтоВыпускПродукции,
	|	ТаблицаКорректировки.ЭтоВозвратМеждуОрганизациями КАК ЭтоВозвратМеждуОрганизациями,
	|	ТаблицаКорректировки.СписыватьРезервы,
	|	ТаблицаКорректировки.РасчетНеЗавершен,
	|	
	|	(ТаблицаКорректировки.Стоимость + ТаблицаКорректировки.ДопРасходы + ТаблицаКорректировки.Трудозатраты
	|	+ ТаблицаКорректировки.ПостатейныеПостоянныеСНДС + ТаблицаКорректировки.ПостатейныеПеременныеСНДС)
	|	- ТаблицаКорректировки.КорСтоимость КАК ПолнаяСуммаПереоценки,
	|
	|	Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС КАК СуммаСНДС,
	|	СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС КАК СуммаБезНДС,
	|	СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл КАК СуммаРегл,
	|	СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр КАК СуммаУпр,
	|	СтоимостьНДД КАК СуммаНДД,
	|	ТаблицаКорректировки.Знак КАК Знак
	|
	|ПОМЕСТИТЬ ДвиженияТаблицаКорректировки
	|
	|ИЗ
	|	ВтДанныеТаблицаКорректировки КАК ТаблицаКорректировки
	|ГДЕ
	|	НЕ (ТаблицаКорректировки.ХозяйственнаяОперация В (&ХозОперацииТаблицыКорректировки)
	|		И ТаблицаКорректировки.РазделУчета В (&БалансовыеРазделыУчета)
	|			ИЛИ ТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаПартийТоваров)
	|			ИЛИ ТаблицаКорректировки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
	// Отклонения по выбытию по фиксированной стоимости по балансовым разделаи учета и по полуфабрикатам давальца 
	// отражается на прочие доходы или прочие расходы.
	|			ИЛИ ТаблицаКорректировки.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
	|	 			И (ТаблицаКорректировки.РазделУчета В (&БалансовыеРазделыУчета)
	|					ИЛИ ТаблицаКорректировки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца))
	|	)
	|";
	#КонецОбласти
	
	#Область ДвиженияТаблицаКорректировки_ПрочиеДоходы
	
	// Отклонение в стоимости - отнесение на прочие доходы
	Запрос.Текст = Запрос.Текст + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаКорректировки.Период                        КАК Период,
	|	ТаблицаКорректировки.ВидДвижения                   КАК ВидДвижения,
	|	ТаблицаКорректировки.ДокументДвижения              КАК ДокументДвижения,
	|	ТаблицаКорректировки.ДокументРасчета               КАК ДокументРасчета,
	|	ТаблицаКорректировки.Организация                   КАК Организация,
	|	ТаблицаКорректировки.Склад                         КАК Склад,
	|	ТаблицаКорректировки.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаКорректировки.РазделУчета КАК РазделУчета,
	|	ТаблицаКорректировки.ВидЗапасов                    КАК ВидЗапасов,
	|	ТаблицаКорректировки.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаКорректировки.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ТаблицаКорректировки.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаКорректировки.КорСклад                      КАК КорСклад,
	|	ТаблицаКорректировки.КорРазделУчета                КАК КорРазделУчета,
	|	ТаблицаКорректировки.КорВидЗапасов                 КАК КорВидЗапасов,
	|	ТаблицаКорректировки.КорТипЗапасов                 КАК КорТипЗапасов,
	|	ТаблицаКорректировки.КорОрганизация                КАК КорОрганизация,
	|	ТаблицаКорректировки.Подразделение                 КАК Подразделение,
	|	ТаблицаКорректировки.АналитикаУчетаПоПартнерам     КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаКорректировки.ЗаказКлиента                  КАК ЗаказКлиента,
	|	НЕОПРЕДЕЛЕНО                                       КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО                                       КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                       КАК СтатьяРасходовСписанияУпр,
	|	НЕОПРЕДЕЛЕНО                                       КАК АналитикаРасходовУпр,
	|	НЕОПРЕДЕЛЕНО                                       КАК ВариантРаспределенияРасходовУпр,
	|	НЕОПРЕДЕЛЕНО                                       КАК ВариантРаспределенияРасходовРегл,
	|	ТаблицаКорректировки.ПринятиеКНалоговомуУчету      КАК ПринятиеКНалоговомуУчету,
	|	ТаблицаКорректировки.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ТаблицаКорректировки.КорНаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.СтатьяДоходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|		 И ТаблицаКорректировки.СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ОтклонениеВСтоимостиТоваров)
	|		ИНАЧЕ ТаблицаКорректировки.СтатьяДоходов КОНЕЦ) КАК СтатьяДоходов,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.СтатьяДоходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|		 И ТаблицаКорректировки.СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|			ТОГДА ТаблицаКорректировки.Номенклатура
	|		ИНАЧЕ ТаблицаКорректировки.АналитикаДоходов КОНЕЦ) КАК АналитикаДоходов,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.СтатьяДоходовУпр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|		 И ТаблицаКорректировки.СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ОтклонениеВСтоимостиТоваров)
	|		ИНАЧЕ ТаблицаКорректировки.СтатьяДоходовУпр КОНЕЦ) КАК СтатьяДоходовУпр,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.СтатьяДоходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|		 И ТаблицаКорректировки.СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|			ТОГДА ТаблицаКорректировки.Номенклатура
	|		ИНАЧЕ ТаблицаКорректировки.АналитикаДоходовУпр КОНЕЦ) КАК АналитикаДоходовУпр,
	|	ТаблицаКорректировки.СтатьяАктивовПассивов         КАК СтатьяАктивовПассивов,
	|	ТаблицаКорректировки.АналитикаАктивовПассивов      КАК АналитикаАктивовПассивов,
	|	ТаблицаКорректировки.ИдентификаторСтроки           КАК ИдентификаторСтроки,
	|	ТаблицаКорректировки.КодСтроки                     КАК КодСтроки,
	|	ТаблицаКорректировки.ПериодПродажи                 КАК ПериодПродажи,
	|	ТаблицаКорректировки.ГруппаПродукции               КАК ГруппаПродукции,
	|	ТаблицаКорректировки.СторноОтчетПоКомиссии		   КАК СторноОтчетПоКомиссии,
	|	ТаблицаКорректировки.Партия                        КАК Партия,
	|	ТаблицаКорректировки.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	ТаблицаКорректировки.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	ТаблицаКорректировки.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	ТаблицаКорректировки.КорПартия                 	   КАК КорПартия,
	|	ТаблицаКорректировки.КорАналитикаУчетаПартий       КАК КорАналитикаУчетаПартий,
	|	ТаблицаКорректировки.КорАналитикаФинансовогоУчета  КАК КорАналитикаФинансовогоУчета,
	|	ТаблицаКорректировки.КорВидДеятельностиНДС         КАК КорВидДеятельностиНДС,
	|	ТаблицаКорректировки.СтатьяКалькуляции             КАК СтатьяКалькуляции,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеДоходы)
	|		ИНАЧЕ ТаблицаКорректировки.ТипЗаписи КОНЕЦ)    КАК ТипЗаписи,
	|	ТаблицаКорректировки.ДокументИсточник              КАК ДокументИсточник,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ТаблицаКорректировки.Сторно КОНЕЦ)       КАК Сторно,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтклонениеВСтоимостиТоваровДоходы) КАК НастройкаХозяйственнойОперации,
	// Отклонения в стоимости отражаем по идентификатору строки документа.
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ИдентификаторСтроки <> """"
	|			ТОГДА ТаблицаКорректировки.ИдентификаторСтроки
	|		ИНАЧЕ ТаблицаКорректировки.ИдентификаторФинЗаписи КОНЕЦ) КАК ИдентификаторФинЗаписи,
	|	ТаблицаКорректировки.НастройкаСчетовУчета          КАК НастройкаСчетовУчета,
	|	ТаблицаКорректировки.ОперацияУчетаСебестоимости    КАК ОперацияУчетаСебестоимости,
	|	ТаблицаКорректировки.ВосстанавливатьРезервы        КАК ВосстанавливатьРезервы,
	|	ТаблицаКорректировки.ПриходХозяйственнаяОперация   КАК ПриходХозяйственнаяОперация,
	|	ТаблицаКорректировки.ПриходТипЗаписи               КАК ПриходТипЗаписи,
	|	ТаблицаКорректировки.ПриходНастройкаХозяйственнойОперации КАК ПриходНастройкаХозяйственнойОперации,
	|	ТаблицаКорректировки.ПриходКорАналитикаУчетаНоменклатуры  КАК ПриходКорАналитикаУчетаНоменклатуры,
	//++ Локализация


	//-- Локализация
	|	
	|	ТаблицаКорректировки.ПодразделениеДокумента КАК ПодразделениеДокумента,
	|	ТаблицаКорректировки.ИсточникГФУНоменклатуры КАК ИсточникГФУНоменклатуры,
	|	ТаблицаКорректировки.КорИсточникГФУНоменклатуры КАК КорИсточникГФУНоменклатуры,
	|	ТаблицаКорректировки.ЭтоПередачаМеждуОрганизациями КАК ЭтоПередачаМеждуОрганизациями,
	|	ТаблицаКорректировки.КорСтоимость                  КАК КорСтоимость,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС) < 0
	|			ТОГДА Стоимость
	|		ИНАЧЕ 0 КОНЕЦ) КАК Стоимость,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * СтоимостьЗабалансовая < 0
	|			ТОГДА СтоимостьЗабалансовая
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьЗабалансовая,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС) < 0
	|			ТОГДА СтоимостьБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьБезНДС,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * СтоимостьНДД < 0
	|			ТОГДА СтоимостьНДД
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьНДД,
	|
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС) < 0
	|			ТОГДА ДопРасходы
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходы,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС) < 0
	|			ТОГДА ДопРасходыБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыБезНДС,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС) < 0
	|			ТОГДА Трудозатраты
	|		ИНАЧЕ 0 КОНЕЦ) КАК Трудозатраты,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС) < 0
	|			ТОГДА ПостатейныеПостоянныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеСНДС,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС) < 0
	|			ТОГДА ПостатейныеПостоянныеБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеБезНДС,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС) < 0
	|			ТОГДА ПостатейныеПеременныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеСНДС,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС) < 0
	|			ТОГДА ПостатейныеПеременныеБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеБезНДС,
	|
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл) < 0
	|			ТОГДА ДопРасходыРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыРегл,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл) < 0
	|			ТОГДА ТрудозатратыРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыРегл,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл) < 0
	|			ТОГДА ПостатейныеПостоянныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеРегл,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл) < 0
	|			ТОГДА ПостатейныеПеременныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеРегл,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл) < 0
	|			ТОГДА СтоимостьРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьРегл,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * СтоимостьЗабалансоваяРегл < 0
	|			ТОГДА СтоимостьЗабалансоваяРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьЗабалансоваяРегл,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл) < 0
	|			ТОГДА РезервПодОбесценениеРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК РезервПодОбесценениеРегл,
	|
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр) < 0
	|			ТОГДА СтоимостьУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьУпр,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр) < 0
	|			ТОГДА ДопРасходыУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыУпр,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр) < 0
	|			ТОГДА ТрудозатратыУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыУпр,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр) < 0
	|			ТОГДА ПостатейныеПостоянныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеУпр,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр) < 0
	|			ТОГДА ПостатейныеПеременныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеУпр,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр) < 0
	|			ТОГДА РезервПодОбесценениеУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК РезервПодОбесценениеУпр,
	|
	|	0 КАК НДСРегл,
	|	0 КАК НДСУпр,
	|	ТаблицаКорректировки.ИсходнаяСтоимость КАК ИсходнаяСтоимость,
	|	ТаблицаКорректировки.ИсходнаяСтоимостьБезНДС КАК ИсходнаяСтоимостьБезНДС,
	|	ТаблицаКорректировки.ИсходнаяСтоимостьРегл КАК ИсходнаяСтоимостьРегл,
	|	ТаблицаКорректировки.ИсходнаяСтоимостьУпр КАК ИсходнаяСтоимостьУпр,
	|	ТаблицаКорректировки.Количество КАК Количество,
	|
	|	ТаблицаКорректировки.ЭтоВыпускПродукции КАК ЭтоВыпускПродукции,
	|	ТаблицаКорректировки.ЭтоВозвратМеждуОрганизациями КАК ЭтоВозвратМеждуОрганизациями,
	|	ТаблицаКорректировки.СписыватьРезервы,
	|	ТаблицаКорректировки.РасчетНеЗавершен,
	|	
	|	(ТаблицаКорректировки.Стоимость + ТаблицаКорректировки.ДопРасходы + ТаблицаКорректировки.Трудозатраты
	|	+ ТаблицаКорректировки.ПостатейныеПостоянныеСНДС + ТаблицаКорректировки.ПостатейныеПеременныеСНДС)
	|	- ТаблицаКорректировки.КорСтоимость КАК ПолнаяСуммаПереоценки,
	|
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС) < 0
	|			ТОГДА Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаСНДС,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС) < 0
	|			ТОГДА СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаБезНДС,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл) < 0
	|			ТОГДА СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаРегл,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр) < 0
	|			ТОГДА СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаУпр,
	|	0 КАК СуммаНДД,
	|	ТаблицаКорректировки.Знак КАК Знак
	|ИЗ
	|	ВтДанныеТаблицаКорректировки КАК ТаблицаКорректировки
	|ГДЕ
	|	(ТаблицаКорректировки.ХозяйственнаяОперация В (&ХозОперацииТаблицыКорректировки)
	|	 И ТаблицаКорректировки.РазделУчета В (&БалансовыеРазделыУчета)
	|		ИЛИ ТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаПартийТоваров)
	|		ИЛИ ТаблицаКорректировки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
	|		ИЛИ ТаблицаКорректировки.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
	|	 		И (ТаблицаКорректировки.РазделУчета В (&БалансовыеРазделыУчета)
	|				ИЛИ ТаблицаКорректировки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца))
	|	)
	// На прочие доходы будут отнесены отрицательные суммы отклонения в стоимости или положительные суммы отклонений для сторно движений.
	|	И (ВЫБОР 
	|		КОГДА ЗнакСторно * (Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС) < 0
	|			ИЛИ ЗнакСторно * (СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС) < 0
	|			ИЛИ ЗнакСторно * (СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл) < 0
	|			ИЛИ ЗнакСторно * (СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр) < 0
	|			ИЛИ ЗнакСторно * СтоимостьЗабалансовая < 0
	|			ИЛИ ЗнакСторно * СтоимостьЗабалансоваяРегл < 0
	|			ИЛИ ЗнакСторно * СтоимостьНДД < 0
	|				ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ)
	|";
	#КонецОбласти
	
	#Область ДвиженияТаблицаКорректировки_ПрочиеРасходы
	
	// Отклонение в стоимости - отнесение на прочие расходы
	Запрос.Текст = Запрос.Текст + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаКорректировки.Период                        КАК Период,
	|	ТаблицаКорректировки.ВидДвижения                   КАК ВидДвижения,
	|	ТаблицаКорректировки.ДокументДвижения              КАК ДокументДвижения,
	|	ТаблицаКорректировки.ДокументРасчета               КАК ДокументРасчета,
	|	ТаблицаКорректировки.Организация                   КАК Организация,
	|	ТаблицаКорректировки.Склад                         КАК Склад,
	|	ТаблицаКорректировки.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаКорректировки.РазделУчета КАК РазделУчета,
	|	ТаблицаКорректировки.ВидЗапасов                    КАК ВидЗапасов,
	|	ТаблицаКорректировки.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаКорректировки.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	ТаблицаКорректировки.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаКорректировки.КорСклад                      КАК КорСклад,
	|	ТаблицаКорректировки.КорРазделУчета                КАК КорРазделУчета,
	|	ТаблицаКорректировки.КорВидЗапасов                 КАК КорВидЗапасов,
	|	ТаблицаКорректировки.КорТипЗапасов КАК КорТипЗапасов,
	|	ТаблицаКорректировки.КорОрганизация                КАК КорОрганизация,
	|	ТаблицаКорректировки.Подразделение                 КАК Подразделение,
	|	ТаблицаКорректировки.АналитикаУчетаПоПартнерам     КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаКорректировки.ЗаказКлиента                  КАК ЗаказКлиента,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.СтатьяРасходовСписания = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		 И ТаблицаКорректировки.СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|			ТОГДА ТаблицаКорректировки.Номенклатура
	|		ИНАЧЕ ТаблицаКорректировки.АналитикаРасходов КОНЕЦ) КАК АналитикаРасходов,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.СтатьяРасходовСписания = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		 И ТаблицаКорректировки.СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ОтклонениеВСтоимостиТоваров)
	|		ИНАЧЕ ТаблицаКорректировки.СтатьяРасходовСписания КОНЕЦ) КАК СтатьяРасходовСписания,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.СтатьяРасходовСписанияУпр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		 И ТаблицаКорректировки.СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ОтклонениеВСтоимостиТоваров)
	|		ИНАЧЕ ТаблицаКорректировки.СтатьяРасходовСписанияУпр КОНЕЦ) КАК СтатьяРасходовСписанияУпр,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.СтатьяРасходовСписанияУпр = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		 И ТаблицаКорректировки.СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|			ТОГДА ТаблицаКорректировки.Номенклатура
	|		ИНАЧЕ ТаблицаКорректировки.АналитикаРасходовУпр КОНЕЦ) КАК АналитикаРасходовУпр,
	|	ТаблицаКорректировки.ВариантРаспределенияРасходовУпр КАК ВариантРаспределенияРасходовУпр,
	|	ТаблицаКорректировки.ВариантРаспределенияРасходовРегл КАК ВариантРаспределенияРасходовРегл,
	|	ТаблицаКорректировки.ПринятиеКНалоговомуУчету      КАК ПринятиеКНалоговомуУчету,
	|	ТаблицаКорректировки.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ТаблицаКорректировки.КорНаправлениеДеятельности    КАК КорНаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                       КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО                                       КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО                                       КАК СтатьяДоходовУпр,
	|	НЕОПРЕДЕЛЕНО                                       КАК АналитикаДоходовУпр,
	|	ТаблицаКорректировки.СтатьяАктивовПассивов         КАК СтатьяАктивовПассивов,
	|	ТаблицаКорректировки.АналитикаАктивовПассивов      КАК АналитикаАктивовПассивов,
	|	ТаблицаКорректировки.ИдентификаторСтроки           КАК ИдентификаторСтроки,
	|	ТаблицаКорректировки.КодСтроки                     КАК КодСтроки,
	|	ТаблицаКорректировки.ПериодПродажи                 КАК ПериодПродажи,
	|	ТаблицаКорректировки.ГруппаПродукции               КАК ГруппаПродукции,
	|	ТаблицаКорректировки.СторноОтчетПоКомиссии		   КАК СторноОтчетПоКомиссии,
	|	ТаблицаКорректировки.Партия                        КАК Партия,
	|	ТаблицаКорректировки.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	ТаблицаКорректировки.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	ТаблицаКорректировки.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	ТаблицаКорректировки.КорПартия                 	   КАК КорПартия,
	|	ТаблицаКорректировки.КорАналитикаУчетаПартий       КАК КорАналитикаУчетаПартий,
	|	ТаблицаКорректировки.КорАналитикаФинансовогоУчета  КАК КорАналитикаФинансовогоУчета,
	|	ТаблицаКорректировки.КорВидДеятельностиНДС         КАК КорВидДеятельностиНДС,
	|	ТаблицаКорректировки.СтатьяКалькуляции             КАК СтатьяКалькуляции,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеРасходы)
	|		ИНАЧЕ ТаблицаКорректировки.ТипЗаписи КОНЕЦ)    КАК ТипЗаписи,
	|	ТаблицаКорректировки.ДокументИсточник              КАК ДокументИсточник,
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ТаблицаКорректировки.Сторно КОНЕЦ)    КАК Сторно,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтклонениеВСтоимостиТоваровРасходы) КАК НастройкаХозяйственнойОперации,
	// Отклонения в стоимости отражаем по идентификатору строки документа.
	|	(ВЫБОР
	|		КОГДА ТаблицаКорректировки.ИдентификаторСтроки <> """"
	|			ТОГДА ТаблицаКорректировки.ИдентификаторСтроки
	|		ИНАЧЕ ТаблицаКорректировки.ИдентификаторФинЗаписи КОНЕЦ) КАК ИдентификаторФинЗаписи,
	|	ТаблицаКорректировки.НастройкаСчетовУчета          КАК НастройкаСчетовУчета,
	|	ТаблицаКорректировки.ОперацияУчетаСебестоимости    КАК ОперацияУчетаСебестоимости,
	|	ТаблицаКорректировки.ВосстанавливатьРезервы        КАК ВосстанавливатьРезервы,
	|	ТаблицаКорректировки.ПриходХозяйственнаяОперация   КАК ПриходХозяйственнаяОперация,
	|	ТаблицаКорректировки.ПриходТипЗаписи               КАК ПриходТипЗаписи,
	|	ТаблицаКорректировки.ПриходНастройкаХозяйственнойОперации КАК ПриходНастройкаХозяйственнойОперации,
	|	ТаблицаКорректировки.ПриходКорАналитикаУчетаНоменклатуры  КАК ПриходКорАналитикаУчетаНоменклатуры,
	//++ Локализация


	//-- Локализация
	|	
	|	ТаблицаКорректировки.ПодразделениеДокумента КАК ПодразделениеДокумента,
	|	ТаблицаКорректировки.ИсточникГФУНоменклатуры КАК ИсточникГФУНоменклатуры,
	|	ТаблицаКорректировки.КорИсточникГФУНоменклатуры КАК КорИсточникГФУНоменклатуры,
	|	ТаблицаКорректировки.ЭтоПередачаМеждуОрганизациями КАК ЭтоПередачаМеждуОрганизациями,
	|	ТаблицаКорректировки.КорСтоимость                  КАК КорСтоимость,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС) >= 0
	|			ТОГДА Стоимость
	|		ИНАЧЕ 0 КОНЕЦ) КАК Стоимость,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * СтоимостьЗабалансовая > 0
	|			ТОГДА СтоимостьЗабалансовая
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьЗабалансовая,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС) >= 0
	|			ТОГДА СтоимостьБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьБезНДС,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * СтоимостьНДД >= 0
	|			ТОГДА СтоимостьНДД
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьНДД,
	|
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС) >= 0
	|			ТОГДА ДопРасходы
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходы,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС) >= 0
	|			ТОГДА ДопРасходыБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыБезНДС,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС) >= 0
	|			ТОГДА Трудозатраты
	|		ИНАЧЕ 0 КОНЕЦ) КАК Трудозатраты,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС) >= 0
	|			ТОГДА ПостатейныеПостоянныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеСНДС,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС) >= 0
	|			ТОГДА ПостатейныеПостоянныеБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеБезНДС,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС) >= 0
	|			ТОГДА ПостатейныеПеременныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеСНДС,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС) >= 0
	|			ТОГДА ПостатейныеПеременныеБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеБезНДС,
	|
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл) >= 0
	|			ТОГДА ДопРасходыРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыРегл,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл) >= 0
	|			ТОГДА ТрудозатратыРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыРегл,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл) >= 0
	|			ТОГДА ПостатейныеПостоянныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеРегл,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл) >= 0
	|			ТОГДА ПостатейныеПеременныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеРегл,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл) >= 0
	|			ТОГДА СтоимостьРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьРегл,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * СтоимостьЗабалансоваяРегл > 0
	|			ТОГДА СтоимостьЗабалансоваяРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьЗабалансоваяРегл,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл) >= 0
	|			ТОГДА РезервПодОбесценениеРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК РезервПодОбесценениеРегл,
	|
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр) >= 0
	|			ТОГДА СтоимостьУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СтоимостьУпр,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр) >= 0
	|			ТОГДА ДопРасходыУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыУпр,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр) >= 0
	|			ТОГДА ТрудозатратыУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК ТрудозатратыУпр,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр) >= 0
	|			ТОГДА ПостатейныеПостоянныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПостоянныеУпр,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр) >= 0
	|			ТОГДА ПостатейныеПеременныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостатейныеПеременныеУпр,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр) >= 0
	|			ТОГДА РезервПодОбесценениеУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК РезервПодОбесценениеУпр,
	|
	|	0 КАК НДСРегл,
	|	0 КАК НДСУпр,
	|	ТаблицаКорректировки.ИсходнаяСтоимость КАК ИсходнаяСтоимость,
	|	ТаблицаКорректировки.ИсходнаяСтоимостьБезНДС КАК ИсходнаяСтоимостьБезНДС,
	|	ТаблицаКорректировки.ИсходнаяСтоимостьРегл КАК ИсходнаяСтоимостьРегл,
	|	ТаблицаКорректировки.ИсходнаяСтоимостьУпр КАК ИсходнаяСтоимостьУпр,
	|	ТаблицаКорректировки.Количество КАК Количество,
	|
	|	ТаблицаКорректировки.ЭтоВыпускПродукции КАК ЭтоВыпускПродукции,
	|	ТаблицаКорректировки.ЭтоВозвратМеждуОрганизациями КАК ЭтоВозвратМеждуОрганизациями,
	|	ТаблицаКорректировки.СписыватьРезервы,
	|	ТаблицаКорректировки.РасчетНеЗавершен,
	|	
	|	(ТаблицаКорректировки.Стоимость + ТаблицаКорректировки.ДопРасходы + ТаблицаКорректировки.Трудозатраты
	|	+ ТаблицаКорректировки.ПостатейныеПостоянныеСНДС + ТаблицаКорректировки.ПостатейныеПеременныеСНДС)
	|	- ТаблицаКорректировки.КорСтоимость КАК ПолнаяСуммаПереоценки,
	|
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС) >= 0
	|			ТОГДА Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаСНДС,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС) >= 0
	|			ТОГДА СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаБезНДС,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл) >= 0
	|			ТОГДА СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаРегл,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * (СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр) >= 0
	|			ТОГДА СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаУпр,
	|	(ВЫБОР 
	|		КОГДА ЗнакСторно * СтоимостьНДД >= 0
	|			ТОГДА СтоимостьНДД
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаНДД,
	|	ТаблицаКорректировки.Знак КАК Знак
	|ИЗ
	|	ВтДанныеТаблицаКорректировки КАК ТаблицаКорректировки
	|ГДЕ
	|	(ТаблицаКорректировки.ХозяйственнаяОперация В (&ХозОперацииТаблицыКорректировки)
	|	 И ТаблицаКорректировки.РазделУчета В (&БалансовыеРазделыУчета)
	|		ИЛИ ТаблицаКорректировки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаПартийТоваров)
	|		ИЛИ ТаблицаКорректировки.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения)
	|		ИЛИ ТаблицаКорректировки.ОперацияУчетаСебестоимости = ЗНАЧЕНИЕ(Перечисление.ОперацииУчетаСебестоимости.ВыбытиеПоФиксированнойСтоимости)
	|	 		И (ТаблицаКорректировки.РазделУчета В (&БалансовыеРазделыУчета)
	|				ИЛИ ТаблицаКорректировки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца))
	|	)
	// На прочие расходы будут отнесены положительные суммы отклонения в стоимости или отрицательные суммы отклонения для сторно движений.
	|	И (ВЫБОР 
	|		КОГДА ЗнакСторно * (Стоимость + ДопРасходы + Трудозатраты + ПостатейныеПостоянныеСНДС + ПостатейныеПеременныеСНДС) >= 0
	|			ИЛИ ЗнакСторно * (СтоимостьБезНДС + ДопРасходыБезНДС + Трудозатраты + ПостатейныеПостоянныеБезНДС + ПостатейныеПеременныеБезНДС) >= 0
	|			ИЛИ ЗнакСторно * (СтоимостьРегл + ДопРасходыРегл + ТрудозатратыРегл + ПостатейныеПостоянныеРегл + ПостатейныеПеременныеРегл + РезервПодОбесценениеРегл) >= 0
	|			ИЛИ ЗнакСторно * (СтоимостьУпр + ДопРасходыУпр + ТрудозатратыУпр + ПостатейныеПостоянныеУпр + ПостатейныеПеременныеУпр + РезервПодОбесценениеУпр) >= 0
	|			ИЛИ ЗнакСторно * СтоимостьЗабалансовая > 0
	|			ИЛИ ЗнакСторно * СтоимостьЗабалансоваяРегл > 0
	|			ИЛИ ЗнакСторно * СтоимостьНДД > 0
	|				ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ХозяйственнаяОперация
	|;
	|";
	
	ХозОперацииТаблицыКорректировки  = Новый Массив;
	ХозОперацииТаблицыКорректировки.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровПоставщику);
	ХозОперацииТаблицыКорректировки.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями);
	ХозОперацииТаблицыКорректировки.Добавить(Перечисления.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой);
	ХозОперацииТаблицыКорректировки.Добавить(Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой);
	ХозОперацииТаблицыКорректировки.Добавить(Перечисления.ХозяйственныеОперации.РеализацияПереданнойВозвратнойТары);
	ХозОперацииТаблицыКорректировки.Добавить(Перечисления.ХозяйственныеОперации.СторноПереданнойТары);
	ХозОперацииТаблицыКорректировки.Добавить(Перечисления.ХозяйственныеОперации.СторноПереданнойТарыВозвратНаДругойСклад);
	
	Запрос.УстановитьПараметр("ХозОперацииТаблицыКорректировки", ХозОперацииТаблицыКорректировки);
	
	#КонецОбласти

	#КонецОбласти
	
	// Формируются движения по регистрам:
	// - СебестоимостьТоваров
	// - ПрочиеРасходы
	// - ПрочиеДоходы
	// - ДвиженияНоменклатураДоходыРасходы
	// - ДвиженияНоменклатураНоменклатура
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	СоответствиеВременныхТаблицДвижений = Новый Соответствие;
	
	// Корректировка списания товаров
	СформироватьДвиженияСебестоимостьТоваровЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	СформироватьДвиженияСебестоимостьТоваровСписаниеРезервовЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);

	// Если есть кор. раздел - необходимо скорректировать стоимость в кор. части.
	СформироватьКорДвиженияСебестоимостьТоваровЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
		
	// Сторнирование себестоимости товаров по управленческой организации.
	СформироватьДвиженияСебестоимостьТоваровСторноВУпрУчетеЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);

	// Корректировка списания товаров на затраты в регистре учет прочих расходов.
	Если ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходов Тогда
		
		УсловиеГДЕ = "(
		|	(
		|		ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНедостачЗаСчетПоклажедателя)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеИзлишковТоваровВПользуКомитента)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеИзлишковТоваровВПользуПоклажедателя)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНаРасходыФиксированнаяСтоимость)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаПрочиеЦели)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионераОСписании)
		|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
		|			И (НЕ КорОрганизация ЕСТЬ NULL И КорОрганизация <> Неопределено И КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
		|	)
		|)
		| И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
		| И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|";
	
		УсловиеГДЕПрочиеРасходы = УсловиеГДЕ + "
		| И (НЕ СтатьяРасходовСписания ЕСТЬ NULL 
		|		И СтатьяРасходовСписания <> Неопределено 
		|		И СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|		И СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка))
		|";
		
		СтруктураТекстовСуммовыхПоказателей = Новый Структура;
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСумма", "(СуммаСНДС + ВЫБОР КОГДА ЭтоВыпускПродукции ТОГДА ИсходнаяСтоимость ИНАЧЕ 0 КОНЕЦ)");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаБезНДС", "(СуммаБезНДС + ВЫБОР КОГДА ЭтоВыпускПродукции ТОГДА ИсходнаяСтоимостьБезНДС ИНАЧЕ 0 КОНЕЦ)");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаРегл", "(СуммаРегл + ВЫБОР КОГДА ЭтоВыпускПродукции ТОГДА ИсходнаяСтоимостьРегл ИНАЧЕ 0 КОНЕЦ)");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаУпр", "(СуммаУпр + ВЫБОР КОГДА ЭтоВыпускПродукции ТОГДА ИсходнаяСтоимостьУпр ИНАЧЕ 0 КОНЕЦ)");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстПостояннаяРазница", "ПостояннаяРазница");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстВременнаяРазница", "ВременнаяРазница");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаНДД", "СуммаНДД");
		
		СформироватьДвиженияПрочиеРасходыЗапросом(ПараметрыРасчета, "ВтПрочиеРасходыНаЗатраты", СоответствиеВременныхТаблицДвижений, УсловиеГДЕПрочиеРасходы,
			СтруктураТекстовСуммовыхПоказателей);

	КонецЕсли;
	
	СформироватьДвиженияПрочиеАктивыПассивыЗапросом(ПараметрыРасчета, Запрос, СоответствиеВременныхТаблицДвижений);
	СформироватьДвиженияПоПрочимАктивамПассивамЗапросом(ПараметрыРасчета, Запрос, СоответствиеВременныхТаблицДвижений);
	
	// Формирование прочих доходов/расходов при отклонениях в стоимости товаров
	Если ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходов Тогда
		
		УсловиеГДЕ = "
		|	(
		|		ХозяйственнаяОперация В (
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровСПереоценкой),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияПереданнойВозвратнойТары),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТары),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТарыВозвратНаДругойСклад),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаПартийТоваров),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасхожденийПоступлениеПриобретение),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНедостачЗаСчетКомитента))
		|		ИЛИ ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейпартий.ОтклонениеВСтоимостиНаПрочиеДоходы)
		|		ИЛИ ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейпартий.ОтклонениеВСтоимостиНаПрочиеРасходы)
		|	)
		|	И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
		|	И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|	";
		
		СтруктураТекстовСуммовыхПоказателей = Новый Структура;
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСумма", "СуммаСНДС");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаБезНДС", "СуммаБезНДС");
		СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаУпр", "СуммаУпр");
		
		СформироватьДвиженияПрочиеРасходыВУпрУчетеЗапросом(ПараметрыРасчета, "ВтПрочиеРасходыВозвратПоставщикуУпр", СоответствиеВременныхТаблицДвижений, 
			УсловиеГДЕ + "
				|	И (НЕ СтатьяРасходовСписанияУпр ЕСТЬ NULL 
				|		И СтатьяРасходовСписанияУпр <> Неопределено 
				|		И СтатьяРасходовСписанияУпр <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
				|		И СтатьяРасходовСписанияУпр <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
				|	)"
				,
			СтруктураТекстовСуммовыхПоказателей);

		СформироватьДвиженияПрочиеДоходыВУпрУчетеЗапросом(ПараметрыРасчета, "ВтПрочиеДоходыВозвратПоставщикуУпр", СоответствиеВременныхТаблицДвижений, 
			УсловиеГДЕ + "
				|	И (НЕ СтатьяДоходовУпр ЕСТЬ NULL 
				|		И СтатьяДоходовУпр <> Неопределено 
				|		И СтатьяДоходовУпр <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
				|	)"
				,
			"-СуммаСНДС",
			"- СуммаУпр");
	
		// Формирование прочих доходов/расходов при отклонения в стоимости товаров.
		Если ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходовРегл Тогда
			
			СтруктураТекстовСуммовыхПоказателей = Новый Структура;
			СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСумма", "0");
			СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаБезНДС", "0");
			СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаУпр", "0");
			СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаРегл", "СуммаРегл");
			СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстПостояннаяРазница", "ПостояннаяРазница");
			СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстВременнаяРазница", "ВременнаяРазница");
			СтруктураТекстовСуммовыхПоказателей.Вставить("ТекстСуммаНДД", "СуммаНДД");
			
			СформироватьДвиженияПрочиеРасходыЗапросом(ПараметрыРасчета, "ВтПрочиеРасходыВозвратПоставщику", СоответствиеВременныхТаблицДвижений, 
				УсловиеГДЕ + "
					|	И (НЕ СтатьяРасходовСписания ЕСТЬ NULL 
					|		И СтатьяРасходовСписания <> Неопределено 
					|		И СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
					|		И СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
					|	)"
					,
				СтруктураТекстовСуммовыхПоказателей);

			СформироватьДвиженияПрочиеДоходыЗапросом(ПараметрыРасчета, "ВтПрочиеДоходыВозвратПоставщику", СоответствиеВременныхТаблицДвижений, 
				УсловиеГДЕ + "
					|	И (НЕ СтатьяДоходов ЕСТЬ NULL 
					|		И СтатьяДоходов <> Неопределено 
					|		И СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
					|	)"
					,
				"0",
				"- СуммаРегл",
				"0");

		КонецЕсли;
				
	КонецЕсли;			
	
	// Восстановление резеврвов под обесценение запасов
	СформироватьДвиженияВыручкаИСебестоимостьПродажВосстановлениеРезервовЗапросом(ПараметрыРасчета, Запрос, "ВтДвиженияВыручкаИСебестоимостьРезервы", СоответствиеВременныхТаблицДвижений);
	
	// Корректировка движений по оборотным регистрам управленческого учета.
	СформироватьДвиженияПоОборотнымРегистрамУпрУчетаЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвиженияИзВременныхТаблиц(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	
	// Уничтожим ненужные временные таблицы.
	НовыеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета, СуществующиеВТ);
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, НовыеВТ);
	
КонецПроцедуры

Процедура СформироватьДвиженияСебестоимостьТоваровЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ИмяВременнойТаблицы = "ВтСебестоимостьТоваров";
	
	// Кор. стоимость не включается в список полей.
	КопируемыеПоля = "
	|Период, АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, Организация,
	|ХозяйственнаяОперация, ДокументРасчета,
	|КорАналитикаУчетаНоменклатуры, КорРазделУчета, КорВидЗапасов,КорОрганизация,
	|АналитикаУчетаПоПартнерам, ЗаказКлиента,
	|Подразделение, АналитикаРасходов, СтатьяРасходовСписания, СтатьяДоходов, АналитикаДоходов,
	|СтатьяАктивовПассивов, АналитикаАктивовПассивов,
	|ИдентификаторСтроки, КодСтроки, ДокументДвижения, ПериодПродажи, ГруппаПродукции,
	|КорНаправлениеДеятельности,
	|Стоимость, СтоимостьБезНДС, СтоимостьЗабалансовая, ДопРасходы, ДопРасходыБезНДС,
	|ПостояннаяРазница, ВременнаяРазница, СтоимостьРегл, СтоимостьЗабалансоваяРегл,
	|СтоимостьНДД,
	|КорПартия, КорАналитикаУчетаПартий, КорАналитикаФинансовогоУчета, КорВидДеятельностиНДС,
	|НДСРегл, НДСУпр, СтатьяКалькуляции, ТипЗаписи, ДокументИсточник, Сторно,
	|НастройкаХозяйственнойОперации, ИдентификаторФинЗаписи, НастройкаСчетовУчета, РасчетНеЗавершен
	|";
	
	Если ПараметрыРасчета.ПартионныйУчетВерсии22 Тогда
		КопируемыеПоля = КопируемыеПоля + ",
		|Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС,
		|Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС,
		|ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл,
		|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС, ПостатейныеПеременныеРегл,
		|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр,
		|РезервПодОбесценениеРегл, РезервПодОбесценениеУпр,
		|";
	КонецЕсли;

	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьРегистраторИДокументДвиженияВОписанииПолейЗапроса(ТаблицаОписанияПолей, ИмяРегистра);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РезервПодОбесценениеРегл",
	"ВЫБОР
	|	КОГДА НЕ СписыватьРезервы ТОГДА РезервПодОбесценениеРегл
	|	ИНАЧЕ 0
	|КОНЕЦ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РезервПодОбесценениеУпр",
	"ВЫБОР
	|	КОГДА НЕ СписыватьРезервы ТОГДА РезервПодОбесценениеУпр
	|	ИНАЧЕ 0
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Количество", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ВидДвижения");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РежимЗакрытияМесяца", "&РежимЗакрытияМесяца");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияСебестоимостьТоваровСписаниеРезервовЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ИмяВременнойТаблицы = "ВтСебестоимостьТоваровРезервы";
	
	КопируемыеПоля = "
	|Период, АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, Организация,
	|ХозяйственнаяОперация, ДокументРасчета,
	|КорАналитикаУчетаНоменклатуры, КорВидЗапасов, КорОрганизация,
	|АналитикаУчетаПоПартнерам, ЗаказКлиента,
	|Подразделение, АналитикаРасходов, СтатьяРасходовСписания, СтатьяДоходов, АналитикаДоходов,
	|СтатьяАктивовПассивов, АналитикаАктивовПассивов,
	|ИдентификаторСтроки, КодСтроки, ДокументДвижения, ПериодПродажи, ГруппаПродукции,
	|КорНаправлениеДеятельности,
	|КорПартия, КорАналитикаУчетаПартий, КорАналитикаФинансовогоУчета, КорВидДеятельностиНДС,
	|СтатьяКалькуляции, ТипЗаписи, ДокументИсточник, Сторно,
	|НастройкаХозяйственнойОперации, ИдентификаторФинЗаписи, НастройкаСчетовУчета,
	|Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС,
	|РезервПодОбесценениеРегл, РезервПодОбесценениеУпр
	|";
	
	Если ПараметрыРасчета.Движения.Свойство(ИмяРегистра) Тогда
		ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	Иначе
		ОписаниеПриемника = ПараметрыРасчета.ВспомогательныеВременныеТаблицы[ИмяРегистра];
	КонецЕсли;
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьРегистраторИДокументДвиженияВОписанииПолейЗапроса(ТаблицаОписанияПолей, ИмяРегистра);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "КорРазделУчета", "
	|ВЫБОР
	|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию) 
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		КорРазделУчета
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РезервПодОбесценениеРегл",
	"ВЫБОР
	|	КОГДА СписыватьРезервы ТОГДА РезервПодОбесценениеРегл
	|	ИНАЧЕ 0
	|КОНЕЦ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РезервПодОбесценениеУпр",
	"ВЫБОР
	|	КОГДА СписыватьРезервы ТОГДА РезервПодОбесценениеУпр
	|	ИНАЧЕ 0
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Количество", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ВидДвижения");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ХозяйственнаяОперация",
	"ВЫБОР
	|	КОГДА ВосстанавливатьРезервы ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеРезервовПодОбесценениеЗапасов)
	|	ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРезервовПодОбесценениеЗапасов)
	|КОНЕЦ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НастройкаХозяйственнойОперации",
	"ВЫБОР
	|	КОГДА ВосстанавливатьРезервы ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеРезервовПодОбесценениеЗапасов)
	|	ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеРезервовПодОбесценениеЗапасов)
	|КОНЕЦ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РежимЗакрытияМесяца", "&РежимЗакрытияМесяца");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяРасходовСписания",
	"ВЫБОР
	|	КОГДА ВосстанавливатьРезервы ТОГДА НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ СтатьяРасходовСписания
	|КОНЕЦ");
	
	УсловиеГДЕ = "
	|	СписыватьРезервы 
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьКорДвиженияСебестоимостьТоваровЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ИмяВременнойТаблицы = "ВтСебестоимостьТоваровКор";
	
	КопируемыеПоля = "
	|Период, ДокументДвижения, ИдентификаторСтроки, Сторно,
	|Подразделение, ГруппаПродукции, ДокументРасчета,
	|Стоимость, СтоимостьЗабалансовая, СтоимостьБезНДС, ДопРасходы, ДопРасходыБезНДС,
	|СтоимостьРегл, СтоимостьЗабалансоваяРегл, ПостояннаяРазница, ВременнаяРазница,
	|СтоимостьНДД,
	|ИдентификаторФинЗаписи, НастройкаСчетовУчета";
	Если ПараметрыРасчета.ПартионныйУчетВерсии22 Тогда
		КопируемыеПоля = КопируемыеПоля + ",
		|СтатьяКалькуляции,
		|Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС,
		|ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл,
		|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС, ПостатейныеПеременныеРегл,
		|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр, НДСУпр
		|РезервПодОбесценениеРегл, РезервПодОбесценениеУпр";
	КонецЕсли;
	
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьРегистраторИДокументДвиженияВОписанииПолейЗапроса(ТаблицаОписанияПолей, ИмяРегистра);
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаУчетаНоменклатуры", "КорАналитикаУчетаНоменклатуры");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РазделУчета", "КорРазделУчета");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидЗапасов", "КорВидЗапасов");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"ХозяйственнаяОперация",
		"
		|		ПриходХозяйственнаяОперация
		|");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ТипЗаписи", "ПриходТипЗаписи");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НастройкаХозяйственнойОперации", "ПриходНастройкаХозяйственнойОперации");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РежимЗакрытияМесяца", "&РежимЗакрытияМесяца");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", 
			"ВЫБОР 
			|	КОГДА КорОрганизация ЕСТЬ NULL ИЛИ КорОрганизация = Неопределено 
			|		ИЛИ КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА 
			|		Организация 
			|	ИНАЧЕ 
			|		КорОрганизация 
			|КОНЕЦ"); 
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Количество", "0");
	
	Если ПараметрыРасчета.ПартионныйУчетВерсии22 Тогда
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Партия", "КорПартия");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаУчетаПартий", "КорАналитикаУчетаПартий");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаФинансовогоУчета", "КорАналитикаФинансовогоУчета");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДеятельностиНДС", "КорВидДеятельностиНДС");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "КорВидДеятельностиНДС", "ВидДеятельностиНДС");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "КорАналитикаФинансовогоУчета", "
		|ВЫБОР 
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции) ТОГДА
		|		ВЫБОР 
		|			КОГДА АналитикаФинансовогоУчета ССЫЛКА Справочник.ГруппыАналитическогоУчетаНоменклатуры ТОГДА
		|				АналитикаФинансовогоУчета
		|			ИНАЧЕ
		|				ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)
		|		КОНЕЦ
		|	ИНАЧЕ
		|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "АналитикаФинансовогоУчета") + "
		|КОНЕЦ");
				
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ГруппаПродукции", "
		|ВЫБОР 
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
		|	 И ТипЗаписи <> ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Выпуск) ТОГДА
		|		КорАналитикаФинансовогоУчета
		|	ИНАЧЕ
		|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "ГруппаПродукции") + "
		|КОНЕЦ");
		
		
	КонецЕсли;
	
	// Суммы в валюте управленческого учета.
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Стоимость",
		"ВЫБОР
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5)
		|	  ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы)
		|	  ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания) ТОГДА 0
		|	ИНАЧЕ Стоимость КОНЕЦ");
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьБезНДС",
		"ВЫБОР
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5)
		|	  ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы)
		|	  ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания) ТОГДА 0
		|	ИНАЧЕ СтоимостьБезНДС КОНЕЦ");
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДопРасходы",
		"ВЫБОР
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5)
		|	  ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы)
		|	  ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания) ТОГДА 0
		|	ИНАЧЕ ДопРасходы КОНЕЦ");
			
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДопРасходыБезНДС",
		"ВЫБОР
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5)
		|	  ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы)
		|	  ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания) ТОГДА 0
		|	ИНАЧЕ ДопРасходыБезНДС КОНЕЦ");
			
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Трудозатраты",
		"ВЫБОР
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5)
		|	  ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы)
		|	  ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания) ТОГДА 0
		|	ИНАЧЕ Трудозатраты КОНЕЦ");
			
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПостоянныеСНДС",
		"ВЫБОР
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5)
		|	  ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы)
		|	  ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания) ТОГДА 0
		|	ИНАЧЕ ПостатейныеПостоянныеСНДС КОНЕЦ");
			
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПостоянныеБезНДС",
		"ВЫБОР
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5)
		|	  ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы)
		|	  ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания) ТОГДА 0
		|	ИНАЧЕ ПостатейныеПостоянныеБезНДС КОНЕЦ");
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПеременныеСНДС",
		"ВЫБОР
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5)
		|	  ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы)
		|	  ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания) ТОГДА 0
		|	ИНАЧЕ ПостатейныеПеременныеСНДС КОНЕЦ");
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПеременныеБезНДС",
		"ВЫБОР
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5)
		|	  ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы)
		|	  ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания) ТОГДА 0
		|	ИНАЧЕ ПостатейныеПеременныеБезНДС КОНЕЦ");
			
	// Суммы в валюте регламентированного учета.
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьРегл",
		"ВЫБОР
		|	КОГДА ХозяйственнаяОперация В (
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
		|		)
		|		ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания) 
		|
		|		ТОГДА 0
		|	КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 
		|	ИНАЧЕ СтоимостьРегл 
		|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьЗабалансовая",
		// Условие должно быть аналогично РасчетСебестоимостиРешениеСЛУ.ТекстВтПеремещенияСписания(), поле НеПеремещатьЗабалансовуюСтоимость
		"ВЫБОР
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыкупТоваровДавальца)
		|	ТОГДА 0
		|	КОГДА ВидЗапасов.ТипЗапасов В
		|		(ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
		|		 ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
		|		 ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
		|		И (НЕ КорВидЗапасов.ТипЗапасов В
		|		     (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
		|		      ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
		|		      ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
		|			ИЛИ КорАналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
		|	ТОГДА 0
		|	ИНАЧЕ СтоимостьЗабалансовая КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьЗабалансоваяРегл",
		// Условие должно быть аналогично РасчетСебестоимостиРешениеСЛУ.ТекстВтПеремещенияСписания(), поле НеПеремещатьЗабалансовуюСтоимость
		"ВЫБОР
		|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыкупТоваровДавальца)
		|	ТОГДА 0
		|	КОГДА ВидЗапасов.ТипЗапасов В
		|		(ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
		|		 ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
		|		 ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
		|		И (НЕ КорВидЗапасов.ТипЗапасов В
		|		     (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
		|		      ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
		|		      ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца))
		|			ИЛИ КорАналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
		|	ТОГДА 0
		|	КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 ИНАЧЕ СтоимостьЗабалансоваяРегл КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостояннаяРазница", 
		"ВЫБОР
		|	КОГДА ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
		|		)
		|		ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
		|		ТОГДА 0
		|	КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0
		|	ИНАЧЕ ПостояннаяРазница
		|КОНЕЦ");
			
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВременнаяРазница",
		"ВЫБОР
		|	КОГДА ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
		|		)
		|		ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
		|		ТОГДА 0
		|	КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 
		|	ИНАЧЕ ВременнаяРазница 
		|КОНЕЦ");
			
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьНДД","
		|ВЫБОР
		|	КОГДА ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
		|		)
		|		ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
		|		ТОГДА 0
		|	КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 
		|	ИНАЧЕ СтоимостьНДД 
		|КОНЕЦ");
	
	Если ПараметрыРасчета.ПартионныйУчетВерсии22 Тогда
	
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДопРасходыРегл",
			"ВЫБОР
			|	КОГДА ХозяйственнаяОперация В (
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
			|		)
			|		ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
			|		ТОГДА 0
			|	КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0
			|	ИНАЧЕ ДопРасходыРегл
			|КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ТрудозатратыРегл",
			"ВЫБОР
			|	КОГДА ХозяйственнаяОперация В (
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
			|		)
			|		ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
			|		ТОГДА 0
			|	КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0 
			|	ИНАЧЕ ТрудозатратыРегл
			|КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПостоянныеРегл",
			"ВЫБОР
			|	КОГДА ХозяйственнаяОперация В (
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
			|		)
			|		ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
			|		ТОГДА 0
			|	КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0
			|	ИНАЧЕ ПостатейныеПостоянныеРегл
			|КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПеременныеРегл",
			"ВЫБОР
			|	КОГДА ХозяйственнаяОперация В (
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
			|		)
			|		ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
			|		ТОГДА 0
			|	КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0
			|	ИНАЧЕ ПостатейныеПеременныеРегл
			|КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РезервПодОбесценениеРегл",
			"ВЫБОР
			|	КОГДА ХозяйственнаяОперация В (
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
			|		)
			|		ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
			|		ТОГДА 0
			|	КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0
			|	КОГДА НЕ СписыватьРезервы ТОГДА РезервПодОбесценениеРегл
			|	ИНАЧЕ 0
			|КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьУпр",
			"ВЫБОР
			|	КОГДА ХозяйственнаяОперация В (
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
			|		)
			|		ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
			|		ТОГДА 0
			|	КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0
			|	ИНАЧЕ СтоимостьУпр
			|КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДопРасходыУпр",
			"ВЫБОР
			|	КОГДА ХозяйственнаяОперация В (
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
			|		)
			|		ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
			|		ТОГДА 0
			|	КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0
			|	ИНАЧЕ ДопРасходыУпр
			|КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ТрудозатратыУпр",
			"ВЫБОР
			|	КОГДА ХозяйственнаяОперация В (
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
			|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
			|		)
			|		ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
			|		ТОГДА 0
			|	КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0
			|	ИНАЧЕ ТрудозатратыУпр
			|КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПостоянныеУпр",
			"ВЫБОР
			|	КОГДА ХозяйственнаяОперация В (
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
			|		)
			|		ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
			|		ТОГДА 0
			|	КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0
			|	ИНАЧЕ ПостатейныеПостоянныеУпр
			|КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПеременныеУпр",
			"ВЫБОР
			|	КОГДА ХозяйственнаяОперация В (
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
			|		)
			|		ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
			|		ТОГДА 0
			|	КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0
			|	ИНАЧЕ ПостатейныеПеременныеУпр
			|КОНЕЦ");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РезервПодОбесценениеУпр",
			"ВЫБОР
			|	КОГДА ХозяйственнаяОперация В (
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы),
			|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями)
			|		)
			|		ИЛИ КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранениеКОформлениюСписания)
			|		ТОГДА 0
			|	КОГДА ЭтоПередачаМеждуОрганизациями ТОГДА 0
			|	КОГДА НЕ СписыватьРезервы ТОГДА РезервПодОбесценениеУпр
			|	ИНАЧЕ 0
			|КОНЕЦ");
			
	КонецЕсли;
	
	УсловиеГДЕ = "
	|	НЕ КорРазделУчета ЕСТЬ NULL 
	|	И КорРазделУчета <> Неопределено
	|	И КорРазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
	|	И НЕ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|	И НЕ (
	|		ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию) 
	|		И РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|	)
	|";
	
	Если ПараметрыРасчета.Свойство("ТолькоОднаОрганизация") И ПараметрыРасчета.ТолькоОднаОрганизация Тогда
		УсловиеГДЕ = УсловиеГДЕ + "
		|	И (ВЫБОР 
		|		КОГДА КорОрганизация ЕСТЬ NULL ИЛИ КорОрганизация = НЕОПРЕДЕЛЕНО 
		|		 ИЛИ КорОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА ИСТИНА
		|		КОГДА НЕ КорОрганизация В (&МассивОрганизаций)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ)
		|";
	КонецЕсли;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
	// Отражение списания резервов под обесценение запасов.
	ИмяВременнойТаблицыРезервы = ИмяВременнойТаблицы + "Резервы";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НастройкаХозяйственнойОперации", 
		"ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеРезервовПодОбесценениеЗапасов)");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Стоимость", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьБезНДС", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьЗабалансовая", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДопРасходы", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДопРасходыБезНДС", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Трудозатраты", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПостоянныеСНДС", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПеременныеСНДС", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПостоянныеБезНДС", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПеременныеБезНДС", "0");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьРегл",
		"ВЫБОР КОГДА НЕ ЭтоПередачаМеждуОрганизациями И СписыватьРезервы ТОГДА РезервПодОбесценениеРегл
		|	ИНАЧЕ 0
		|	КОНЕЦ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьЗабалансоваяРегл", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостояннаяРазница", "0"); 
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВременнаяРазница",
		"ВЫБОР КОГДА НЕ ЭтоПередачаМеждуОрганизациями И СписыватьРезервы ТОГДА РезервПодОбесценениеРегл
		|	ИНАЧЕ 0
		|	КОНЕЦ");
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьНДД","0"); 
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДопРасходыРегл", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ТрудозатратыРегл", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПостоянныеРегл", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПеременныеРегл", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РезервПодОбесценениеРегл", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьУпр",
		"ВЫБОР КОГДА НЕ ЭтоПередачаМеждуОрганизациями И СписыватьРезервы ТОГДА РезервПодОбесценениеУпр
		|	ИНАЧЕ 0
		|	КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДопРасходыУпр", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ТрудозатратыУпр", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПостоянныеУпр", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПеременныеУпр", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РезервПодОбесценениеУпр", "0");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицыРезервы, УсловиеГДЕ);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицыРезервы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияСебестоимостьТоваровСторноВУпрУчетеЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений)

	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ИмяВременнойТаблицы = "ВтСебестоимостьТоваровСторноУпр";
	
	КопируемыеПоля = "
	|Период, Организация, РазделУчета,
	|ХозяйственнаяОперация, ДокументДвижения, Регистратор, ДокументРасчета,
	|Подразделение, АналитикаРасходов, СтатьяРасходовСписания,
	|НастройкаХозяйственнойОперации, ИдентификаторФинЗаписи, НастройкаСчетовУчета,
	|Стоимость, СтоимостьБезНДС, ДопРасходы, ДопРасходыБезНДС,
	|СтатьяКалькуляции, ТипЗаписи, ДокументИсточник, Сторно,
	|Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС,
	|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС";
	
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьРегистраторИДокументДвиженияВОписанииПолейЗапроса(ТаблицаОписанияПолей, ИмяРегистра);
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", "КорОрганизация");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаУчетаНоменклатуры", "КорАналитикаУчетаНоменклатуры");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидЗапасов", "КорВидЗапасов");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьРегл", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьУпр", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Количество", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РежимЗакрытияМесяца", "&РежимЗакрытияМесяца");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РазделУчета", "
	|ВЫБОР
	|	КОГДА РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "РазделУчета") + "
	|КОНЕЦ
	|");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Партия", "КорПартия");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаУчетаПартий", "КорАналитикаУчетаПартий");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаФинансовогоУчета", "КорАналитикаФинансовогоУчета");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДеятельностиНДС", "КорВидДеятельностиНДС");
	
	УсловиеГДЕ = "
	|	ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет)
	|	ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет)
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияНоменклатураДоходыРасходыЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ,
			ЭтоДоход = Ложь, ХозяйственнаяОперация = Неопределено, СтруктураКорректировкиСумм = Неопределено)

	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.Имя;
	
	КопируемыеПоля =
	"Период, ХозяйственнаяОперация, Организация, Подразделение,
	|АналитикаУчетаНоменклатуры,Склад,ТипЗапасов,ВидЗапасов,
	|ИсточникГФУНоменклатуры, ДокументДвижения, Сторно";
	
	СуммовыеПоля = "
	|Стоимость, СтоимостьБезНДС, ДопРасходы, ДопРасходыБезНДС, Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС, 
	|СтоимостьРегл, ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл,
	|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр,
	|СтоимостьЗабалансовая, СтоимостьЗабалансоваяРегл,
	|ПостояннаяРазница, ВременнаяРазница,
	|НДСРегл, НДСУпр, 
	|РезервПодОбесценениеРегл, РезервПодОбесценениеУпр
	|";
	
	КопируемыеПоля = КопируемыеПоля + ", " + СуммовыеПоля;

	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьРегистраторИДокументДвиженияВОписанииПолейЗапроса(ТаблицаОписанияПолей, ИмяРегистра);
	
	СкладКолонка = РасчетСебестоимостиПрикладныеАлгоритмы.КолонкиВременнойТаблицы(ПараметрыРасчета, "ДвиженияТаблицаКорректировки", Ложь).Найти("Склад");
	Если Не СкладКолонка = Неопределено
		И СкладКолонка.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ДоговорыКонтрагентов")) Тогда
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(
			ТаблицаОписанияПолей,
			"Склад",
			"ВЫБОР
			|	КОГДА ТИПЗНАЧЕНИЯ(Склад) = ТИП(Справочник.ДоговорыКонтрагентов)
			|		ТОГДА ВЫРАЗИТЬ(Склад КАК Справочник.ДоговорыКонтрагентов).Партнер
			|	ИНАЧЕ Склад
			|КОНЕЦ");
		
	КонецЕсли;
	
	Если ХозяйственнаяОперация <> Неопределено Тогда
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ХозяйственнаяОперация", "&ХозяйственнаяОперация");
	КонецЕсли;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РезервПодОбесценениеРегл",
	"ВЫБОР
	|	КОГДА СписыватьРезервы ТОГДА РезервПодОбесценениеРегл
	|	ИНАЧЕ 0
	|КОНЕЦ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РезервПодОбесценениеУпр",
	"ВЫБОР
	|	КОГДА СписыватьРезервы ТОГДА РезервПодОбесценениеУпр
	|	ИНАЧЕ 0
	|КОНЕЦ");
	
	Если ЭтоДоход Тогда
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяДоходовРасходов",
			"ВЫБОР КОГДА (СтатьяАктивовПассивов ЕСТЬ NULL ИЛИ СтатьяАктивовПассивов = Неопределено ИЛИ СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка))
		    |	ТОГДА СтатьяДоходов
		    |	ИНАЧЕ СтатьяАктивовПассивов
		    |КОНЕЦ");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаДоходов", "АналитикаДоходов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельностиНоменклатуры", "НаправлениеДеятельности");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельностиСтатьи", "КорНаправлениеДеятельности");
		
	Иначе
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяДоходовРасходов",
			"ВЫБОР КОГДА (СтатьяАктивовПассивов ЕСТЬ NULL ИЛИ СтатьяАктивовПассивов = Неопределено ИЛИ СтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка))
		    |	ТОГДА СтатьяРасходовСписания
		    |	ИНАЧЕ СтатьяАктивовПассивов
		    |КОНЕЦ");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаРасходов", "АналитикаРасходов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельностиСтатьи", "КорНаправлениеДеятельности");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельностиНоменклатуры", "
		|ВЫБОР
		|	КОГДА " + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "ХозяйственнаяОперация") 
					+ " = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию) И КорТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
		|		КорНаправлениеДеятельности
		|	ИНАЧЕ
		|		НаправлениеДеятельности
		|	КОНЕЦ");
		
	КонецЕсли;
	
	Если СтруктураКорректировкиСумм <> Неопределено Тогда
		
		МассивПолей = СтрРазделить(СуммовыеПоля, ",");
		Для Каждого Поле Из МассивПолей Цикл
			
			мПоле = СтрЗаменить(СтрЗаменить(СокрЛП(Поле), Символы.ПС, ""), Символы.Таб, "");
			НовоеПоле = СкорректироватьСуммовоеПолеДвиженияНоменклатурыЗапросом(мПоле, СтруктураКорректировкиСумм);
			
			РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, мПоле, НовоеПоле);
			
		КонецЦикла;
		
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("ХозяйственнаяОперация", ХозяйственнаяОперация);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ, СтруктураПараметров);
			
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияНоменклатураНоменклатураЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ, ТекстХозяйственнаяОперация)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура.Имя;
	
	КопируемыеПоля =
	"Период, ХозяйственнаяОперация, Организация,
	|АналитикаУчетаНоменклатуры,Склад,ТипЗапасов,ВидЗапасов,
	|КорАналитикаУчетаНоменклатуры,КорСклад,КорТипЗапасов,КорВидЗапасов,
	|ИсточникГФУНоменклатуры, КорИсточникГФУНоменклатуры, ДокументДвижения, КорОрганизация, Сторно";

	СуммовыеПоля = "
	|Стоимость, СтоимостьБезНДС, ДопРасходы, ДопРасходыБезНДС, Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС, 
	|СтоимостьРегл, ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл,
	|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр,
	|СтоимостьЗабалансовая, СтоимостьЗабалансоваяРегл,
	|ПостояннаяРазница, ВременнаяРазница,
	|НДСРегл, НДСУпр, 
	|РезервПодОбесценениеРегл, РезервПодОбесценениеУпр
	|";
	
	КопируемыеПоля = КопируемыеПоля + ", " + СуммовыеПоля;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Подразделение", "
	|ВЫБОР
	|	КОГДА ПодразделениеДокумента <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		ТОГДА ПодразделениеДокумента
	|	ИНАЧЕ Подразделение
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельности", "
	|ВЫБОР
	|	КОГДА ЛОЖЬ ТОГДА НЕОПРЕДЕЛЕНО // Для удобства расстановки тегов

	|	ИНАЧЕ АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КОНЕЦ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "КорНаправлениеДеятельности", "
	|КорАналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьРегистраторИДокументДвиженияВОписанииПолейЗапроса(ТаблицаОписанияПолей, ИмяРегистра);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ХозяйственнаяОперация", ТекстХозяйственнаяОперация);
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", "
	|ВЫБОР
	|	КОГДА " + ТекстХозяйственнаяОперация + " В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеТоваров), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеРабот)) ТОГДА
	|		КорОрганизация
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "Организация") + "
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "КорОрганизация", "
	|ВЫБОР
	|	КОГДА " + ТекстХозяйственнаяОперация + " В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеТоваров), 
	|												ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеРабот)) ТОГДА
	|		Организация
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "КорОрганизация") + "
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Количество", "
	|ВЫБОР
	|	КОГДА Склад ССЫЛКА Справочник.Партнеры ТОГДА
	|		Количество
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "Количество") + "
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "КорНаправлениеДеятельности", "
	|ВЫБОР
	|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию) ТОГДА
	|		НаправлениеДеятельности
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "КорНаправлениеДеятельности") + "
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияПоОборотнымРегистрамУпрУчетаЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений)
	
	ТекстЕстьНенулеваяПолнаяСумма = "
	|	ВЫБОР 
	|		КОГДА СуммаСНДС <> 0 ИЛИ СуммаБезНДС  <> 0 ИЛИ СуммаРегл  <> 0 ИЛИ СуммаУпр <> 0
	|		 ИЛИ РезервПодОбесценениеРегл <> 0 ИЛИ РезервПодОбесценениеУпр <> 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ
	|";
	
	УсловиеЗапроса = ТекстЕстьНенулеваяПолнаяСумма + "
	|	И ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаПрочиеЦели),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионераОСписании),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакрытиеМесяца),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНедостачЗаСчетПоклажедателя),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНедостачЗаСчетКомитента),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеИзлишковТоваровВПользуКомитента),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеИзлишковТоваровВПользуПоклажедателя)
	|	)";

	СформироватьДвиженияНоменклатураДоходыРасходыЗапросом(ПараметрыРасчета, "ВтДоходыРасходыСписаниеТоваров", СоответствиеВременныхТаблицДвижений, УсловиеЗапроса);
			
	УсловиеЗапроса = ТекстЕстьНенулеваяПолнаяСумма + "
	|	И (
	|		(
	|			(
	|				ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|				ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами)
	|				ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами)
	|			)
	|			И ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		)
	|		
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратМатериаловИзКладовой)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	//++ Устарело_Переработка24
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика)
	//-- Устарело_Переработка24
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика2_5)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыпускПродукции)
	//++ Устарело_Переработка24
	|		ИЛИ (ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика)
	|			И ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	//-- Устарело_Переработка24
	|		ИЛИ (ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеОтПереработчика2_5)
	|			И ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПродукцииИзКладовой)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаОбособленногоУчета)
	|		ИЛИ ((ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров) ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеПолуфабрикатов) ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуПодразделениями)) И ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВПроизводство)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВПроизводство)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаМатериаловВКладовую)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
	//++ Устарело_Переработка24
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику)
	//-- Устарело_Переработка24
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику2_5)
	|		ИЛИ (ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваров) И ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|		ИЛИ (ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваров) И ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|		ИЛИ (ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности) И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути))
	|		ИЛИ (ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности)
	|			И НЕ РазделУчета В (
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссиюВПути),
	|				ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссиюВПути)))
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтХранителя)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовНаПартииПроизводства)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыкупТоваровДавальца)
	|	)
	|
	|	И НЕ ((КорАналитикаУчетаНоменклатуры ЕСТЬ NULL ИЛИ КорАналитикаУчетаНоменклатуры = Неопределено ИЛИ КорАналитикаУчетаНоменклатуры = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка))
	|		И (
	|			ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров)
	|			ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РазборкаТоваров)
	|		 	ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
	|		 	ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности)
	|		)	
	|	)
	|";
			
	СформироватьДвиженияНоменклатураНоменклатураЗапросом(ПараметрыРасчета
		,"ВтДвиженияНоменклатураНоменклатураПеремещение"
		,СоответствиеВременныхТаблицДвижений
		,УсловиеЗапроса
		,"ВЫБОР
		|	КОГДА ХозяйственнаяОперация В (
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности),
		|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности)) ТОГДА
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтгрузкаБезПереходаПраваСобственности)
		|	ИНАЧЕ
		|		ХозяйственнаяОперация
		|КОНЕЦ");
				
	УсловиеЗапросаВнутреннееПоступлениеТоваров = УсловиеЗапроса + "
	|	И (
	|		ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
	|		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами)
	|	)";

	СформироватьДвиженияНоменклатураНоменклатураЗапросом(ПараметрыРасчета
		,"ВтДвиженияНоменклатураНоменклатураВнутреннееПоступлениеТоваров"
		,СоответствиеВременныхТаблицДвижений
		,УсловиеЗапросаВнутреннееПоступлениеТоваров
		,"ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеТоваров)");
	
	УсловиеЗапросаВнутреннееПоступлениеРабот = УсловиеЗапроса + "
	|	И ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами)";

	СформироватьДвиженияНоменклатураНоменклатураЗапросом(ПараметрыРасчета
		,"ВтДвиженияНоменклатураНоменклатураВнутреннееПоступлениеРабот"
		,СоответствиеВременныхТаблицДвижений
		,УсловиеЗапросаВнутреннееПоступлениеРабот
		,"ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеРабот)");
	
	УсловиеЗапроса = "
	|	(ПолнаяСуммаПереоценки > 0 ИЛИ СуммаРегл > 0 ИЛИ СуммаУпр > 0)
	|	И ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровСПереоценкой),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияПереданнойВозвратнойТары),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТары),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТарыВозвратНаДругойСклад),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаПартийТоваров))
	|";
	
	СтруктураКорректировкиСумм = Новый Структура();
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыСНДС", 1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыБезНДС", 1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыРегл", 1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыУпр", 1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентКорСуммы", 1);
	
	СформироватьДвиженияНоменклатураДоходыРасходыЗапросом(ПараметрыРасчета, "ВтДоходыРасходыРасходыОтПереоценкиТоваров", СоответствиеВременныхТаблицДвижений, УсловиеЗапроса, 
		Ложь, 
		Перечисления.ХозяйственныеОперации.РасходыОтПереоценкиТоваров, 
		СтруктураКорректировкиСумм);
	
	УсловиеЗапроса = "
	|	(ПолнаяСуммаПереоценки < 0 ИЛИ (СуммаРегл + РезервПодОбесценениеРегл) < 0 ИЛИ (СуммаУпр + РезервПодОбесценениеУпр) < 0)
	|	И ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровПоставщику),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровСПереоценкой),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияПереданнойВозвратнойТары),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТары),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноПереданнойТарыВозвратНаДругойСклад),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаПартийТоваров))
	|";
	
	СтруктураКорректировкиСумм = Новый Структура();
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыСНДС", -1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыБезНДС", -1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыРегл", -1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентСуммыУпр", -1);
	СтруктураКорректировкиСумм.Вставить("КоэффициентКорСуммы", 1);
	
	СформироватьДвиженияНоменклатураДоходыРасходыЗапросом(ПараметрыРасчета, "ВтДоходыРасходыДоходыОтПереоценкиТоваров", СоответствиеВременныхТаблицДвижений, УсловиеЗапроса, 
		Истина, 
		Перечисления.ХозяйственныеОперации.ДоходыОтПереоценкиТоваров, 
		СтруктураКорректировкиСумм);
	
КонецПроцедуры

Функция СкорректироватьСуммовоеПолеДвиженияНоменклатурыЗапросом(Поле, СтруктураКорректировкиСумм)
	
	ИменаПолейСНДС   = Новый Структура("Стоимость, ДопРасходы, Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПеременныеСНДС");
	ИменаПолейБезНДС = Новый Структура("СтоимостьБезНДС, ДопРасходыБезНДС, ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеБезНДС");
	ИменаПолейРегл   = Новый Структура("СтоимостьРегл, ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл");
	ИменаПолейУпр 	 = Новый Структура("СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр");
	
	ИменаПолейУменьшаемойСтоимости = Новый Структура("Стоимость, СтоимостьБезНДС");
	
	НовоеПоле = Поле;
	
	Если ИменаПолейСНДС.Свойство(Поле) Тогда
		
		Если ИменаПолейУменьшаемойСтоимости.Свойство(Поле) Тогда
			НовоеПоле = "(" + Поле + " - КорСтоимость * " + Формат(СтруктураКорректировкиСумм.КоэффициентКорСуммы, "ЧРД=.; ЧН=0; ЧГ=0") + ") * " + Формат(СтруктураКорректировкиСумм.КоэффициентСуммыСНДС, "ЧРД=.; ЧН=0; ЧГ=0");
		Иначе
			НовоеПоле = Поле + " * " + Формат(СтруктураКорректировкиСумм.КоэффициентСуммыСНДС, "ЧРД=.; ЧН=0; ЧГ=0");
		КонецЕсли;
		
	ИначеЕсли ИменаПолейБезНДС.Свойство(Поле) Тогда
		
		Если ИменаПолейУменьшаемойСтоимости.Свойство(Поле) Тогда
			НовоеПоле = "(" + Поле + " - КорСтоимость * " + Формат(СтруктураКорректировкиСумм.КоэффициентКорСуммы, "ЧРД=.; ЧН=0; ЧГ=0") + ") * " + Формат(СтруктураКорректировкиСумм.КоэффициентСуммыБезНДС, "ЧРД=.; ЧН=0; ЧГ=0");
		Иначе
			НовоеПоле = Поле + " * " + Формат(СтруктураКорректировкиСумм.КоэффициентСуммыБезНДС, "ЧРД=.; ЧН=0; ЧГ=0");
		КонецЕсли;
	
	ИначеЕсли ИменаПолейРегл.Свойство(Поле) Тогда
		
		НовоеПоле = Поле + " * " + Формат(СтруктураКорректировкиСумм.КоэффициентСуммыРегл, "ЧРД=.; ЧН=0; ЧГ=0");
	
	ИначеЕсли ИменаПолейУпр.Свойство(Поле) Тогда
		
		НовоеПоле = Поле + " * " + Формат(СтруктураКорректировкиСумм.КоэффициентСуммыУпр, "ЧРД=.; ЧН=0; ЧГ=0");
		
	КонецЕсли;
		
	Возврат НовоеПоле;
	
КонецФункции

Процедура СформироватьДвиженияПрочиеАктивыПассивыЗапросом(ПараметрыРасчета, Запрос, СоответствиеВременныхТаблицДвижений)
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Т.Период,
	|	(ВЫБОР
	|		КОГДА (Т.СуммаСНДС >= 0 И НЕ Т.Сторно) ИЛИ (Т.СуммаСНДС < 0 И Т.Сторно)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КОНЕЦ) КАК ВидДвижения,
	|	Т.ДокументДвижения КАК Регистратор,
	// Измерения
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.СтатьяАктивовПассивов КАК Статья,
	|	Т.АналитикаАктивовПассивов КАК Аналитика,
	// Ресурсы
	|	(ВЫБОР
	|		КОГДА (Т.СуммаСНДС >= 0 И НЕ Т.Сторно) ИЛИ (Т.СуммаСНДС < 0 И Т.Сторно)
	|			ТОГДА Т.СуммаСНДС
	|			+ ВЫБОР КОГДА Т.ЭтоВыпускПродукции ТОГДА Т.ИсходнаяСтоимость ИНАЧЕ 0 КОНЕЦ
	|		ИНАЧЕ -Т.СуммаСНДС КОНЕЦ) КАК Сумма,
	// Реквизиты
	|	Т.Сторно
	|
	|ПОМЕСТИТЬ ВтТаблицаДвиженияПрочиеАктивыПассивы
	|ИЗ
	|	ДвиженияТаблицаКорректировки КАК Т
	|ГДЕ
	|	Т.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И Т.СтатьяАктивовПассивов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтПрочиеАктивыПассивы";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтТаблицаДвиженияПрочиеАктивыПассивы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтТаблицаДвиженияПрочиеАктивыПассивы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияПоПрочимАктивамПассивамЗапросом(ПараметрыРасчета, Запрос, СоответствиеВременныхТаблицДвижений)
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Т.Период,
	|	Т.ДокументДвижения КАК Регистратор,
	// Измерения
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.СтатьяАктивовПассивов КАК Статья,
	|	Т.АналитикаАктивовПассивов КАК Аналитика,
	|	Т.НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	// Ресурсы
	|	Т.СуммаСНДС КАК СуммаСНДС,
	|	Т.СуммаБезНДС КАК СуммаБезНДС,
	|	Т.СуммаРегл КАК СуммаРегл,
	|	Т.СуммаУпр КАК СуммаУпр,
	|	Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|	Т.ВременнаяРазница КАК ВременнаяРазница,
	// Реквизиты
	|	Т.ДокументДвижения,
	|	Т.Сторно,
	|	Т.НастройкаХозяйственнойОперации,
	|	ВЫБОР
	|		КОГДА Т.ДокументДвижения ССЫЛКА Документ.РаспределениеПрочихЗатрат
	|			ТОГДА &ИдентификаторНеиспользуемойФинЗаписи
	|		ИНАЧЕ Т.ИдентификаторФинЗаписи
	|	КОНЕЦ КАК ИдентификаторФинЗаписи
	|ПОМЕСТИТЬ ВтТаблицаДвиженияПоПрочимАктивамПассивам
	|ИЗ
	|	ДвиженияТаблицаКорректировки КАК Т
	|ГДЕ
	|	Т.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И Т.СтатьяАктивовПассивов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И ((Т.СуммаСНДС >= 0 ИЛИ Т.СуммаБезНДС >= 0 ИЛИ Т.СуммаРегл >= 0 ИЛИ Т.СуммаУпр >= 0)
	|		И НЕ Т.Сторно
	|		ИЛИ (Т.СуммаСНДС < 0 ИЛИ Т.СуммаБезНДС < 0 ИЛИ Т.СуммаРегл < 0 ИЛИ Т.СуммаУпр < 0)
	|		И Т.Сторно)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Период,
	|	Т.ДокументДвижения КАК Регистратор,
	// Измерения
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.СтатьяАктивовПассивов КАК Статья,
	|	Т.АналитикаАктивовПассивов КАК Аналитика,
	|	Т.НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	// Ресурсы
	|	-Т.СуммаСНДС КАК СуммаСНДС,
	|	-Т.СуммаБезНДС КАК СуммаБезНДС,
	|	-Т.СуммаРегл КАК СуммаРегл,
	|	-Т.СуммаУпр КАК СуммаУпр,
	|	-Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|	-Т.ВременнаяРазница КАК ВременнаяРазница,
	// Реквизиты
	|	Т.ДокументДвижения,
	|	Т.Сторно,
	|	Т.НастройкаХозяйственнойОперации,
	|	ВЫБОР
	|		КОГДА Т.ДокументДвижения ССЫЛКА Документ.РаспределениеПрочихЗатрат
	|			ТОГДА &ИдентификаторНеиспользуемойФинЗаписи
	|		ИНАЧЕ Т.ИдентификаторФинЗаписи
	|	КОНЕЦ КАК ИдентификаторФинЗаписи
	|ИЗ
	|	ДвиженияТаблицаКорректировки КАК Т
	|ГДЕ
	|	Т.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И Т.СтатьяАктивовПассивов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|	И ((Т.СуммаСНДС < 0 ИЛИ Т.СуммаБезНДС < 0 ИЛИ Т.СуммаРегл < 0 ИЛИ Т.СуммаУпр < 0)
	|		И НЕ Т.Сторно
	|		ИЛИ (Т.СуммаСНДС >= 0 ИЛИ Т.СуммаБезНДС >= 0 ИЛИ Т.СуммаРегл >= 0 ИЛИ Т.СуммаУпр >= 0)
	|		И Т.Сторно)
	|
	// Передача в филиал (на стороне отправителя)
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Период,
	|	Т.ДокументДвижения КАК Регистратор,
	// Измерения
	|	Т.Организация,
	|	(ВЫБОР
	|		КОГДА НЕ Т.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение ЕСТЬ NULL
	|			ТОГДА Т.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение
	|		ИНАЧЕ Т.АналитикаУчетаНоменклатуры.Подразделение КОНЕЦ) КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасчетыСФилиалами) КАК Статья,
	|	Т.КорОрганизация КАК Аналитика,
	|	Т.НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	// Ресурсы
	|	Т.СуммаСНДС КАК СуммаСНДС,
	|	Т.СуммаБезНДС КАК СуммаБезНДС,
	|	Т.СуммаРегл КАК СуммаРегл,
	|	Т.СуммаУпр КАК СуммаУпр,
	|	Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|	Т.ВременнаяРазница КАК ВременнаяРазница,
	// Реквизиты
	|	Т.ДокументДвижения,
	|	Т.Сторно,
	|	Т.НастройкаХозяйственнойОперации,
	|	Т.ИдентификаторФинЗаписи
	|ИЗ
	|	ДвиженияТаблицаКорректировки КАК Т
	|ГДЕ
	|	Т.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами))
	|
	// Передача в филиал (на стороне получателя)
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Период,
	|	Т.ДокументДвижения КАК Регистратор,
	// Измерения
	|	Т.КорОрганизация КАК Организация,
	|	(ВЫБОР
	|		КОГДА НЕ Т.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение ЕСТЬ NULL
	|			ТОГДА Т.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение
	|		ИНАЧЕ Т.АналитикаУчетаНоменклатуры.Подразделение КОНЕЦ) КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасчетыСФилиалами) КАК Статья,
	|	Т.Организация КАК Аналитика,
	|	Т.НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	// Ресурсы
	|	Т.СуммаСНДС КАК СуммаСНДС,
	|	Т.СуммаБезНДС КАК СуммаБезНДС,
	|	Т.СуммаРегл КАК СуммаРегл,
	|	Т.СуммаУпр КАК СуммаУпр,
	|	Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|	Т.ВременнаяРазница КАК ВременнаяРазница,
	// Реквизиты
	|	Т.ДокументДвижения,
	|	Т.Сторно,
	|	Т.НастройкаХозяйственнойОперации,
	|	Т.ИдентификаторФинЗаписи
	|ИЗ
	|	ДвиженияТаблицаКорректировки КАК Т
	|ГДЕ
	|	Т.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами))
	|";
	Запрос.УстановитьПараметр("ИдентификаторНеиспользуемойФинЗаписи", ПроведениеДокументов.ИдентификаторНеиспользуемойФинЗаписи());
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтДвиженияПоПрочимАктивамПассивам";
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтТаблицаДвиженияПоПрочимАктивамПассивам");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтТаблицаДвиженияПоПрочимАктивамПассивам", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияПрочиеРасходыВУпрУчетеЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ,
			СтруктураТекстовСуммовыхПоказателей)
			
	ТекстСумма = СтруктураТекстовСуммовыхПоказателей.ТекстСумма;
	ТекстСуммаБезНДС = СтруктураТекстовСуммовыхПоказателей.ТекстСуммаБезНДС;
	ТекстСуммаУпр = СтруктураТекстовСуммовыхПоказателей.ТекстСуммаУпр;

	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация, Подразделение, АналитикаРасходов, ХозяйственнаяОперация,
	|АналитикаУчетаНоменклатуры, ГруппаПродукции, ДокументДвижения, Сторно,
	|НастройкаХозяйственнойОперации, ИдентификаторФинЗаписи, ДокументРасчета";

	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	СтруктураПараметров = Новый Структура();
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьРегистраторИДокументДвиженияВОписанииПолейЗапроса(ТаблицаОписанияПолей, ИмяРегистра);
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", "Знак * (" + ТекстСумма + ")");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяРасходов", "СтатьяРасходовСписанияУпр");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаРасходов", "АналитикаРасходовУпр");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельности", "КорНаправлениеДеятельности");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РежимЗакрытияМесяца", "&РежимЗакрытияМесяца");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", "
	|ВЫБОР
	|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию) ТОГДА
	|		КорОрганизация
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "Организация") + " 
	|КОНЕЦ");

	// Условия по сумме без НДС должны совпадать с условиями в:
	// - см. СформироватьДвиженияПрочиеРасходыДопРасходыЗапросом в приходном движении.
	// - см. РегистрНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС", "
	|ВЫБОР
	|	КОГДА НЕ ВариантРаспределенияРасходовУпр В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы))
	|		ТОГДА Знак * (" + ТекстСуммаБезНДС + ")
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС") + " 
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаУпр", "
	|ВЫБОР
	|	КОГДА НЕ ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы) ТОГДА
	|		ВЫБОР
	|			КОГДА НЕ &УправленческийУчетОрганизаций ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию) ТОГДА
	|				0
	|			КОГДА ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы) И НЕ &ИспользуетсяУправлениеВНА_2_4 ТОГДА
	|				0
	|			ИНАЧЕ
	|				Знак * (" + ТекстСуммаУпр + ")
	|		КОНЕЦ
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "СуммаУпр") + " 
	|КОНЕЦ");
	
	СтруктураПараметров.Вставить("УправленческийУчетОрганизаций", ПараметрыРасчета.УправленческийУчетОрганизаций);
	СтруктураПараметров.Вставить("ИспользуетсяУправлениеВНА_2_4", ПараметрыРасчета.ИспользуетсяУправлениеВНА_2_4);
	СтруктураПараметров.Вставить("ИспользоватьУчетПрочихДоходовРасходовРегл", ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходовРегл);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ, СтруктураПараметров);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
	// Кор движения
	СформироватьДвиженияПрочиеРасходыКорЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ,
			ТекстСумма, ТекстСуммаБезНДС, ТекстСуммаУпр);
	
КонецПроцедуры

Процедура СформироватьДвиженияПрочиеРасходыЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ,
			СтруктураТекстовСуммовыхПоказателей)
			
	ТекстСумма = СтруктураТекстовСуммовыхПоказателей.ТекстСумма;
	ТекстСуммаБезНДС = СтруктураТекстовСуммовыхПоказателей.ТекстСуммаБезНДС;
	ТекстСуммаРегл = СтруктураТекстовСуммовыхПоказателей.ТекстСуммаРегл;
	ТекстСуммаУпр = СтруктураТекстовСуммовыхПоказателей.ТекстСуммаУпр;
	ТекстПостояннаяРазница = СтруктураТекстовСуммовыхПоказателей.ТекстПостояннаяРазница;
	ТекстВременнаяРазница = СтруктураТекстовСуммовыхПоказателей.ТекстВременнаяРазница;
	ТекстСуммаНДД = СтруктураТекстовСуммовыхПоказателей.ТекстСуммаНДД;

	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация, Подразделение, АналитикаРасходов, ХозяйственнаяОперация,
	|АналитикаУчетаНоменклатуры, ГруппаПродукции, ДокументДвижения, Сторно,
	|НастройкаХозяйственнойОперации, ИдентификаторФинЗаписи, ДокументРасчета";

	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	СтруктураПараметров = Новый Структура();
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьРегистраторИДокументДвиженияВОписанииПолейЗапроса(ТаблицаОписанияПолей, ИмяРегистра);
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", "Знак * (" + ТекстСумма + ")");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяРасходов", "СтатьяРасходовСписания");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельности", "КорНаправлениеДеятельности");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РежимЗакрытияМесяца", "&РежимЗакрытияМесяца");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", "
	|ВЫБОР
	|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию) ТОГДА
	|		КорОрганизация
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "Организация") + " 
	|КОНЕЦ");

	// Условия по сумме без НДС должны совпадать с условиями в:
	// - см. СформироватьДвиженияПрочиеРасходыДопРасходыЗапросом в приходном движении.
	// - см. РегистрНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС", "
	|ВЫБОР
	|	КОГДА НЕ ВариантРаспределенияРасходовУпр В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы))
	|		ТОГДА Знак * (" + ТекстСуммаБезНДС + ")
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС") + " 
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаУпр", "
	|ВЫБОР
	|	КОГДА НЕ ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы) ТОГДА
	|		ВЫБОР
	|			КОГДА НЕ &УправленческийУчетОрганизаций ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию) ТОГДА
	|				0
	|			КОГДА ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы) И НЕ &ИспользуетсяУправлениеВНА_2_4 ТОГДА
	|				0
	|			ИНАЧЕ
	|				Знак * (" + ТекстСуммаУпр + ")
	|		КОНЕЦ
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "СуммаУпр") + " 
	|КОНЕЦ");
	
	СтруктураПараметров.Вставить("УправленческийУчетОрганизаций", ПараметрыРасчета.УправленческийУчетОрганизаций);
	СтруктураПараметров.Вставить("ИспользуетсяУправлениеВНА_2_4", ПараметрыРасчета.ИспользуетсяУправлениеВНА_2_4);
	СтруктураПараметров.Вставить("ИспользоватьУчетПрочихДоходовРасходовРегл", ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходовРегл);
	
	// СуммаРегл
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаРегл", "
	|ВЫБОР
	|	КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл
	| 		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	| 		ИЛИ ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	| 		ИЛИ (ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы) И НЕ &ИспользуетсяУправлениеВНА_2_4) ТОГДА
	|		0
	|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию) ТОГДА
	|		0
	|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ) ТОГДА
	|		0
	|	ИНАЧЕ
	|		Знак * (" + ТекстСуммаРегл + ")
	|КОНЕЦ");
	
	// ПостояннаяРазница
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостояннаяРазница", "
	|ВЫБОР
	|	КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл
	| 		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	| 		ИЛИ ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	| 		ИЛИ (ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы) И НЕ &ИспользуетсяУправлениеВНА_2_4) ТОГДА
	|		0
	|	ИНАЧЕ
	|		ВЫБОР 
	|			КОГДА НЕ ПринятиеКНалоговомуУчету ТОГДА
	|				Знак * (" + ТекстСуммаРегл + ") - Знак * (" + ТекстВременнаяРазница + ")
	|			ИНАЧЕ
	|				Знак * " + ТекстПостояннаяРазница + "
	|		КОНЕЦ
	|КОНЕЦ");
	
	// ВременнаяРазница
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВременнаяРазница", "
	|ВЫБОР
	|	КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл
	| 		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	| 		ИЛИ ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	| 		ИЛИ (ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы) И НЕ &ИспользуетсяУправлениеВНА_2_4) ТОГДА
	|		0
	|	ИНАЧЕ
	|		Знак * (" + ТекстВременнаяРазница + ")
	|КОНЕЦ");
	
	// СуммаНДД
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаНДД", "
	|ВЫБОР
	|	КОГДА НЕ ЕСТЬNULL(СтатьяРасходовСписания.ПризнаютсяВРасходахНДД, ИСТИНА)
	|		ТОГДА 0
	|	КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл
	| 		ИЛИ ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	| 		ИЛИ ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	| 		ИЛИ (ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы) И НЕ &ИспользуетсяУправлениеВНА_2_4) ТОГДА
	|		0
	|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатацию) ТОГДА
	|		0
	|	КОГДА ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ) ТОГДА
	|		0
	|	ИНАЧЕ
	|		Знак * (" + ТекстСуммаНДД + ")
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ, СтруктураПараметров);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
	// Отражение списания резервов под обесценение запасов.
	ИмяВременнойТаблицыРезервы = ИмяВременнойТаблицы + "Резервы";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ХозяйственнаяОперация", 
		"ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРезервовПодОбесценениеЗапасов)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НастройкаХозяйственнойОперации", 
		"ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеРезервовПодОбесценениеЗапасов)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаУпр", "РезервПодОбесценениеУпр");
	Если ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходовРегл Тогда
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаРегл", "РезервПодОбесценениеРегл");
	КонецЕсли;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостояннаяРазница", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВременнаяРазница", "РезервПодОбесценениеРегл");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаНДД", "0");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", 
		ИмяВременнойТаблицыРезервы, 
		УсловиеГДЕ + "
			|	И НЕ ВосстанавливатьРезервы"
		, 
		СтруктураПараметров);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицыРезервы, ИмяРегистра);
	
	// Кор движения
	СформироватьДвиженияПрочиеРасходыКорЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ,
			ТекстСумма, ТекстСуммаБезНДС, ТекстСуммаУпр);
	
КонецПроцедуры

Процедура СформироватьДвиженияПрочиеРасходыКорЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ,
			ТекстСумма, ТекстСуммаБезНДС, ТекстСуммаУпр)

	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация, Подразделение, АналитикаРасходов, ХозяйственнаяОперация,
	|АналитикаУчетаНоменклатуры, ГруппаПродукции, ДокументДвижения, Сторно, ДокументРасчета";
	
	УсловиеГДЕКор = УсловиеГДЕ + "
	|	И (НЕ КорОрганизация ЕСТЬ NULL И КорОрганизация <> Неопределено И КорОрганизация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|	И КорОрганизация <> Организация
	|	И ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|";
	 
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	// СторнированиеРасходовУУ
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьРегистраторИДокументДвиженияВОписанииПолейЗапроса(ТаблицаОписанияПолей, ИмяРегистра);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "Истина");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяРасходов", "СтатьяРасходовСписания");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", "-(" + ТекстСумма + ")");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаУпр", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаРегл", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостояннаяРазница", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВременнаяРазница", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаНДД", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ХозяйственнаяОперация",
		"ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеРасходовУУ)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РежимЗакрытияМесяца", "&РежимЗакрытияМесяца");
	
	// Условия по сумме без НДС должны совпадать с условиями в:
	// - см. СформироватьДвиженияПрочиеРасходыДопРасходыЗапросом в приходном движении.
	// - см. РегистрНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС", "
	|ВЫБОР
	|	КОГДА НЕ ВариантРаспределенияРасходовУпр В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы))
	|		ТОГДА -Знак * (" + ТекстСуммаБезНДС + ")
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС") + " 
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы + "КорСторнированиеРасходовУУ", УсловиеГДЕКор);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы + "КорСторнированиеРасходовУУ", ИмяРегистра);
	
	// РегистрацияРасходовУУ
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьРегистраторИДокументДвиженияВОписанииПолейЗапроса(ТаблицаОписанияПолей, ИмяРегистра);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "Истина");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", "КорОрганизация");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяРасходов", "СтатьяРасходовСписания");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", ТекстСумма);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаУпр", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаРегл", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостояннаяРазница", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВременнаяРазница", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаНДД", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РежимЗакрытияМесяца", "&РежимЗакрытияМесяца");
	
	// Условия по сумме без НДС должны совпадать с условиями в:
	// - см. СформироватьДвиженияПрочиеРасходыДопРасходыЗапросом в приходном движении.
	// - см. РегистрНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы.
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС", "
	|ВЫБОР
	|	КОГДА НЕ ВариантРаспределенияРасходовУпр В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы))
	|		ТОГДА Знак * (" + ТекстСуммаБезНДС + ")
	|	ИНАЧЕ
	|		" + РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьЗначениеПоляЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС") + " 
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ХозяйственнаяОперация",
		"ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РегистрацияРасходовУУ)");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы + "КорРегистрацияРасходовУУ", УсловиеГДЕКор);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы + "КорРегистрацияРасходовУУ", ИмяРегистра);
	
	
	// Добавим движения по регистру "Активы и пассивы".
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация, Подразделение, НаправлениеДеятельности";
	
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьРегистраторИДокументДвиженияВОписанииПолейЗапроса(ТаблицаОписанияПолей, ИмяРегистра);
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Статья", "ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Аналитика", "Организация");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", "Знак * (" + ТекстСумма + ")");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы + "ПрочиеАктивыПассивы_Приход", УсловиеГДЕКор);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы + "ПрочиеАктивыПассивы_Приход", ИмяРегистра);
	
	// Добавим движение и заполним его основные свойства
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьРегистраторИДокументДвиженияВОписанииПолейЗапроса(ТаблицаОписанияПолей, ИмяРегистра);
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ЛОЖЬ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", "КорОрганизация");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Статья", "ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Аналитика", "КорОрганизация");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", "Знак * (" + ТекстСумма + ")");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы + "ПрочиеАктивыПассивы_Расход", УсловиеГДЕКор);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы + "ПрочиеАктивыПассивы_Расход", ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияПрочиеДоходыВУпрУчетеЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ,
			ТекстСумма, ТекстСуммаУпр)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеДоходы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация, Подразделение, СтатьяДоходов, АналитикаДоходов, ХозяйственнаяОперация, Сторно,
	|НастройкаХозяйственнойОперации, ИдентификаторФинЗаписи, ДокументРасчета";
	
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	СтруктураПараметров = Новый Структура();
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьРегистраторИДокументДвиженияВОписанииПолейЗапроса(ТаблицаОписанияПолей, ИмяРегистра);
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяДоходов", "СтатьяДоходовУпр");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаДоходов", "АналитикаДоходовУпр");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельности", "КорНаправлениеДеятельности");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", ТекстСумма);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаУпр", ТекстСуммаУпр);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РежимЗакрытияМесяца", "&РежимЗакрытияМесяца");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ, СтруктураПараметров);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияПрочиеДоходыЗапросом(ПараметрыРасчета, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений, УсловиеГДЕ,
			ТекстСумма, ТекстСуммаРегл, ТекстСуммаУпр)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеДоходы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация, Подразделение, СтатьяДоходов, АналитикаДоходов, ХозяйственнаяОперация, Сторно,
	|НастройкаХозяйственнойОперации, ИдентификаторФинЗаписи, ДокументРасчета";
	
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	СтруктураПараметров = Новый Структура();
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьРегистраторИДокументДвиженияВОписанииПолейЗапроса(ТаблицаОписанияПолей, ИмяРегистра);
	
	// Заполним дополнительные свойства движения
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НаправлениеДеятельности", "КорНаправлениеДеятельности");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", ТекстСумма);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаУпр", ТекстСуммаУпр);
	Если ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходовРегл Тогда
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаРегл", ТекстСуммаРегл);
	КонецЕсли;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РежимЗакрытияМесяца", "&РежимЗакрытияМесяца");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ, СтруктураПараметров);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
		
	// Отражение списания резервов под обесценение запасов.
	ИмяВременнойТаблицыРезервы = ИмяВременнойТаблицы + "Резервы";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ХозяйственнаяОперация", 
		"ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРезервовПодОбесценениеЗапасов)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НастройкаХозяйственнойОперации", 
		"ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеРезервовПодОбесценениеЗапасов)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Сумма", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаУпр", "-РезервПодОбесценениеУпр");
	Если ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходовРегл Тогда
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаРегл", "-РезервПодОбесценениеРегл");
	КонецЕсли;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицыРезервы, УсловиеГДЕ, СтруктураПараметров);
		
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицыРезервы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияВыручкаИСебестоимостьПродажВосстановлениеРезервовЗапросом(ПараметрыРасчета, Запрос, ИмяВременнойТаблицы, СоответствиеВременныхТаблицДвижений)
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Т.Период,
	|	Т.ДокументДвижения КАК Регистратор,
	// Измерения
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ЗаказКлиента,
	|	АналитикаПартнера.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	Т.Подразделение,
	|	(ВЫБОР
	|		КОГДА Т.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		 И НЕ Т.АналитикаУчетаНоменклатуры.Номенклатура.ПрослеживаемыйТовар
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ Т.ТипЗапасов КОНЕЦ) КАК ТипЗапасов,
	|	Т.ВидЗапасов,
	|	Т.РазделУчета,
	|	Т.Партия,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС,
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) КАК Менеджер,
	|	Т.Склад,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСКлиентами.ПустаяСсылка) КАК Соглашение,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеРезервовПодОбесценениеЗапасов) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНаборов.ПустаяСсылка) КАК АналитикаУчетаНаборов,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКонтрагента,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиНоменклатуры,
	// Ресурсы
	|	0 КАК Количество,
	|	0 КАК СуммаВыручки,
	|	0 КАК СуммаВыручкиБезНДС,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК ДопРасходы,
	|	0 КАК ДопРасходыБезНДС,
	|	0 КАК СтоимостьУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьЗабалансовая,
	|	0 КАК СтоимостьЗабалансоваяРегл,
	|	0 КАК СуммаВыручкиРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ДопРасходыУпр,
	|	0 КАК ДопРасходыРегл,
	|	0 КАК ПостатейныеПостоянныеСНДС,
	|	0 КАК ПостатейныеПостоянныеБезНДС,
	|	0 КАК ПостатейныеПостоянныеУпр,
	|	0 КАК ПостатейныеПостоянныеРегл,
	|	0 КАК Трудозатраты,
	|	0 КАК ТрудозатратыУпр,
	|	0 КАК ТрудозатратыРегл,
	|	0 КАК ПостатейныеПеременныеСНДС,
	|	0 КАК ПостатейныеПеременныеБезНДС,
	|	0 КАК ПостатейныеПеременныеУпр,
	|	0 КАК ПостатейныеПеременныеРегл,
	|	0 КАК ВременнаяРазница,
	|	0 КАК СуммаВыручкиСНДСРегл,
	|	0 КАК СуммаРучнойСкидки,
	|	0 КАК СуммаАвтоматическойСкидки,
	|	0 КАК РасходыНаПродажуСНДС,
	|	0 КАК РасходыНаПродажуБезНДС,
	|	0 КАК РасходыНаПродажуУпр,
	|	0 КАК РасходыНаПродажуРегл,
	|	Т.РезервПодОбесценениеУпр КАК РезервПодОбесценениеУпр,
	|	Т.РезервПодОбесценениеРегл КАК РезервПодОбесценениеРегл,
	// Реквизиты
	|	Т.ДокументДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КАК НалогообложениеНДС,  //НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДокумента,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыРасчетов.ПустаяСсылка) КАК ИсточникГФУРасчетов,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеРезервовПодОбесценениеЗапасов) КАК НастройкаХозяйственнойОперации,
	|	Т.ИдентификаторФинЗаписи
	|ПОМЕСТИТЬ ВтТаблицаДвиженияВыручкаИСебестоимостьРезервы
	|ИЗ
	|	ДвиженияТаблицаКорректировки КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПартнера
	|	ПО (АналитикаПартнера.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|		И (АналитикаПартнера.Организация = Т.Организация)
	|		И (АналитикаПартнера.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|		И (АналитикаПартнера.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|		И (АналитикаПартнера.НаправлениеДеятельности = Т.НаправлениеДеятельности)
	|ГДЕ
	|	Т.ВосстанавливатьРезервы
	|	И (Т.РезервПодОбесценениеУпр <> 0 ИЛИ Т.РезервПодОбесценениеРегл <> 0)
	|	И ТИПЗНАЧЕНИЯ(Т.ДокументДвижения) В (&ТипыРегистраторовВыручки)
	|";
	
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтТаблицаДвиженияВыручкаИСебестоимостьРезервы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтТаблицаДвиженияВыручкаИСебестоимостьРезервы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры


Процедура СкорректироватьСтоимостьДополнительныхРасходов(ПараметрыРасчета, Первичные) Экспорт
	
	Если ПараметрыРасчета.РежимЗакрытияМесяца = Перечисления.РежимыЗакрытияМесяца.ПредварительноеЗакрытие
	 И НЕ ПараметрыРасчета.РаспределениеДопРасходовМеждуПартиямиИТоварами Тогда
		Возврат;
	КонецЕсли;
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СкорректироватьСтоимостьДополнительныхРасходов");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	#Область ВтТаблицаКорректировкиВрем
	
	Если Первичные Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
			|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
			|	Движения.Регистратор КАК Регистратор,
			|	Реквизиты.Дата КАК Период,
			|	Реквизиты.Организация КАК Организация,
			|	Реквизиты.Подразделение КАК Подразделение,
			|	Реквизиты.НаправлениеДеятельности КАК НаправлениеДеятельности,
			|	Реквизиты.СтатьяРасходов КАК СтатьяРасходов,
			|	Реквизиты.СтатьяРасходов.ПринятиеКНалоговомуУчету КАК ПринятиеКНалоговомуУчету,
			|	Реквизиты.АналитикаРасходов КАК АналитикаРасходов,
			|	Движения.КорОрганизация КАК КорОрганизация,
			|	Движения.КорРазделУчета КАК РазделУчета,
			|	Движения.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
			|	Движения.КорВидЗапасов КАК ВидЗапасов,
			|	Движения.КорПартия КАК Партия,
			|	Движения.КорАналитикаУчетаПартий КАК АналитикаУчетаПартий,
			|	Движения.КорАналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
			|	Движения.КорВидДеятельностиНДС КАК ВидДеятельностиНДС,
			|	Движения.КорСтатьяРасходов КАК КорСтатьяРасходов,
			|	Движения.КорАналитикаРасходов КАК КорАналитикаРасходов,
			|	Движения.КорСтатьяАктивовПассивов КАК КорСтатьяАктивовПассивов,
			|	Движения.КорАналитикаАктивовПассивов КАК КорАналитикаАктивовПассивов,
			|	Движения.КорНастройкаСчетовУчета КАК КорНастройкаСчетовУчета,
			|	Движения.КорПодразделение КАК КорПодразделение,
			|	Движения.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
			|	Движения.ХозяйственнаяОперация,
			|	Движения.ТипЗаписи,
			|	Движения.ИсточникГФУНоменклатуры,
			|	Движения.АналитикаУчетаПоПартнерам,
			|	Движения.ЗаказКлиента,
			|	Движения.Менеджер,
			|	Движения.Склад,
			|	Движения.Соглашение,
			|	Движения.Договор,
			|	Движения.ТипЗапасов,
			|	Движения.НаправлениеДеятельностиКонтрагента,
			|	Движения.ИсточникГФУРасчетов,
			|	Движения.ВидДеятельностиНДСВыбытия,
			|	(ВЫБОР
			|		КОГДА Реквизиты.УправленческийУчет
			|			ТОГДА ВЫРАЗИТЬ(Движения.ДоляСтоимости * ЕСТЬNULL(Стоимости.СтоимостьСНДС, 0) КАК ЧИСЛО(31, 2))
			|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходы,
			|	(ВЫБОР
			|		КОГДА Реквизиты.УправленческийУчет
			|			ТОГДА ВЫРАЗИТЬ(Движения.ДоляСтоимостиБезНДС * ЕСТЬNULL(Стоимости.СтоимостьБезНДС, 0) КАК ЧИСЛО(31, 2))
			|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыБезНДС,
			|	(ВЫБОР
			|		КОГДА Реквизиты.РегламентированныйУчет
			|			ТОГДА ВЫРАЗИТЬ(Движения.ДоляСтоимостиРегл * ЕСТЬNULL(Стоимости.СтоимостьРегл, 0) КАК ЧИСЛО(31, 2))
			|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыРегл,
			|	(ВЫБОР
			|		КОГДА Реквизиты.УправленческийУчет
			|			ТОГДА ВЫРАЗИТЬ(Движения.ДоляСтоимостиУпр * ЕСТЬNULL(Стоимости.СтоимостьУпр, 0) КАК ЧИСЛО(31, 2))
			|		ИНАЧЕ 0 КОНЕЦ) КАК ДопРасходыУпр,
			|	0 КАК ПостатейныеПостоянныеСНДС,
			|	0 КАК ПостатейныеПеременныеСНДС,
			|	0 КАК ПостатейныеПостоянныеБезНДС,
			|	0 КАК ПостатейныеПеременныеБезНДС,
			|	0 КАК ПостатейныеПостоянныеРегл,
			|	0 КАК ПостатейныеПеременныеРегл,
			|	0 КАК ПостатейныеПостоянныеУпр,
			|	0 КАК ПостатейныеПеременныеУпр,
			|	0 КАК ПостояннаяРазница,
			|	0 КАК ВременнаяРазница,
			|	0 КАК СтоимостьНДД
			|
			|ПОМЕСТИТЬ ВтТаблицаКорректировкиВрем
			|ИЗ
			|	ДолиДополнительныхРасходов КАК Движения
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Реквизиты
			|		ПО Движения.Регистратор = Реквизиты.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьДополнительныхРасходов КАК Стоимости
			|		ПО Реквизиты.Организация = Стоимости.Организация
			|			И Реквизиты.Подразделение = Стоимости.Подразделение
			|			И Реквизиты.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
			|			И Реквизиты.СтатьяРасходов = Стоимости.СтатьяРасходов
			|			И Реквизиты.АналитикаРасходов = Стоимости.АналитикаРасходов
			|ГДЕ
			|	Реквизиты.Организация В(&МассивОрганизаций)
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	Партия,
			|	РазделУчета,
			|	АналитикаУчетаНоменклатуры";
	Иначе
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	АВТОНОМЕРЗАПИСИ() КАК НомерЗаписи,
			|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
			|	Движения.Регистратор КАК Регистратор,
			|	Реквизиты.Дата КАК Период,
			|	Реквизиты.Организация КАК Организация,
			|	Реквизиты.Подразделение КАК Подразделение,
			|	Реквизиты.НаправлениеДеятельности КАК НаправлениеДеятельности,
			|	Реквизиты.СтатьяРасходов КАК СтатьяРасходов,
			|	Реквизиты.СтатьяРасходов.ПринятиеКНалоговомуУчету КАК ПринятиеКНалоговомуУчету,
			|	Реквизиты.АналитикаРасходов КАК АналитикаРасходов,
			|	Движения.КорОрганизация КАК КорОрганизация,
			|	Движения.КорРазделУчета КАК РазделУчета,
			|	Движения.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
			|	Движения.КорВидЗапасов КАК ВидЗапасов,
			|	Движения.КорПартия КАК Партия,
			|	Движения.КорАналитикаУчетаПартий КАК АналитикаУчетаПартий,
			|	Движения.КорАналитикаФинансовогоУчета КАК АналитикаФинансовогоУчета,
			|	Движения.КорВидДеятельностиНДС КАК ВидДеятельностиНДС,
			|	Движения.КорСтатьяРасходов КАК КорСтатьяРасходов,
			|	Движения.КорАналитикаРасходов КАК КорАналитикаРасходов,
			|	Движения.КорСтатьяАктивовПассивов КАК КорСтатьяАктивовПассивов,
			|	Движения.КорАналитикаАктивовПассивов КАК КорАналитикаАктивовПассивов,
			|	Движения.КорНастройкаСчетовУчета КАК КорНастройкаСчетовУчета,
			|	Движения.КорПодразделение КАК КорПодразделение,
			|	Движения.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
			|	Движения.ХозяйственнаяОперация,
			|	Движения.ТипЗаписи,
			|	Движения.ИсточникГФУНоменклатуры,
			|	Движения.АналитикаУчетаПоПартнерам,
			|	Движения.ЗаказКлиента,
			|	Движения.Менеджер,
			|	Движения.Склад,
			|	Движения.Соглашение,
			|	Движения.Договор,
			|	Движения.ТипЗапасов,
			|	Движения.НаправлениеДеятельностиКонтрагента,
			|	Движения.ИсточникГФУРасчетов,
			|	Движения.ВидДеятельностиНДСВыбытия,
			|
			|	0 КАК ДопРасходы,
			|	0 КАК ДопРасходыБезНДС,
			|	0 КАК ДопРасходыРегл,
			|	0 КАК ДопРасходыУпр,
			|
			|	ВЫБОР КОГДА Реквизиты.УправленческийУчет ТОГДА 1 ИНАЧЕ 0 КОНЕЦ *
			|		ВЫРАЗИТЬ(Движения.ДоляСтоимости
			|			* ЕСТЬNULL(Стоимости.ПостатейныеПостоянныеСНДС, 0) КАК ЧИСЛО(31, 2)) КАК ПостатейныеПостоянныеСНДС,
			|	ВЫБОР КОГДА Реквизиты.УправленческийУчет ТОГДА 1 ИНАЧЕ 0 КОНЕЦ *
			|		ВЫРАЗИТЬ(Движения.ДоляСтоимости
			|			* ЕСТЬNULL(Стоимости.ПостатейныеПеременныеСНДС, 0) КАК ЧИСЛО(31, 2)) КАК ПостатейныеПеременныеСНДС,
			|	ВЫБОР КОГДА Реквизиты.УправленческийУчет ТОГДА 1 ИНАЧЕ 0 КОНЕЦ *
			|		ВЫРАЗИТЬ(Движения.ДоляСтоимостиБезНДС
			|			* ЕСТЬNULL(Стоимости.ПостатейныеПостоянныеБезНДС, 0) КАК ЧИСЛО(31, 2)) КАК ПостатейныеПостоянныеБезНДС,
			|	ВЫБОР КОГДА Реквизиты.УправленческийУчет ТОГДА 1 ИНАЧЕ 0 КОНЕЦ *
			|		ВЫРАЗИТЬ(Движения.ДоляСтоимостиБезНДС
			|			* ЕСТЬNULL(Стоимости.ПостатейныеПеременныеБезНДС, 0) КАК ЧИСЛО(31, 2)) КАК ПостатейныеПеременныеБезНДС,
			|	ВЫБОР КОГДА Реквизиты.РегламентированныйУчет ТОГДА 1 ИНАЧЕ 0 КОНЕЦ *
			|		ВЫРАЗИТЬ(Движения.ДоляСтоимостиРегл 
			|			* ЕСТЬNULL(СтоимостиРегл.ПостатейныеПостоянныеРегл, 0) КАК ЧИСЛО(31, 2)) КАК ПостатейныеПостоянныеРегл,
			|	ВЫБОР КОГДА Реквизиты.РегламентированныйУчет ТОГДА 1 ИНАЧЕ 0 КОНЕЦ *
			|		ВЫРАЗИТЬ(Движения.ДоляСтоимостиРегл 
			|			* ЕСТЬNULL(СтоимостиРегл.ПостатейныеПеременныеРегл, 0) КАК ЧИСЛО(31, 2)) КАК ПостатейныеПеременныеРегл,
			|	0 КАК ПостояннаяРазница,
			|	0 КАК ВременнаяРазница,
			|	ВЫРАЗИТЬ(Движения.ДоляСтоимостиНДД 
			|			* ЕСТЬNULL(СтоимостиРегл.СтоимостьНДД, 0) КАК ЧИСЛО(31, 2)) КАК СтоимостьНДД,
			|	ВЫРАЗИТЬ(Движения.ДоляСтоимостиУпр 
			|		* ЕСТЬNULL(СтоимостиРегл.ПостатейныеПостоянныеУпр, 0) КАК ЧИСЛО(31, 2)) КАК ПостатейныеПостоянныеУпр,
			|	ВЫРАЗИТЬ(Движения.ДоляСтоимостиУпр 
			|		* ЕСТЬNULL(СтоимостиРегл.ПостатейныеПеременныеУпр, 0) КАК ЧИСЛО(31, 2)) КАК ПостатейныеПеременныеУпр
			|ПОМЕСТИТЬ ВтТаблицаКорректировкиВрем
			|ИЗ
			|	ДолиДополнительныхРасходов КАК Движения
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК Реквизиты
			|		ПО Движения.Регистратор = Реквизиты.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСтоимостиДополнительныхРасходов КАК Стоимости
			|		ПО Реквизиты.Организация = Стоимости.Организация
			|			И Реквизиты.Подразделение = Стоимости.Подразделение
			|			И Реквизиты.НаправлениеДеятельности = Стоимости.НаправлениеДеятельности
			|			И Реквизиты.СтатьяРасходов = Стоимости.СтатьяРасходов
			|			И Реквизиты.АналитикаРасходов = Стоимости.АналитикаРасходов
			|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьДополнительныхРасходов КАК СтоимостиБУ
			|		ПО Реквизиты.Организация = СтоимостиБУ.Организация
			|			И Реквизиты.Подразделение = СтоимостиБУ.Подразделение
			|			И Реквизиты.НаправлениеДеятельности = СтоимостиБУ.НаправлениеДеятельности
			|			И Реквизиты.СтатьяРасходов = СтоимостиБУ.СтатьяРасходов
			|			И Реквизиты.АналитикаРасходов = СтоимостиБУ.АналитикаРасходов
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСтоимостиДополнительныхРасходовРегл КАК СтоимостиРегл
			|		ПО Реквизиты.Организация = СтоимостиРегл.Организация
			|			И Реквизиты.Подразделение = СтоимостиРегл.Подразделение
			|			И Реквизиты.НаправлениеДеятельности = СтоимостиРегл.НаправлениеДеятельности
			|			И Реквизиты.СтатьяРасходов = СтоимостиРегл.СтатьяРасходов
			|			И Реквизиты.АналитикаРасходов = СтоимостиРегл.АналитикаРасходов
			|ГДЕ
			|	Реквизиты.Организация В(&МассивОрганизаций)
			|ИНДЕКСИРОВАТЬ ПО
			|	Регистратор,
			|	Партия,
			|	РазделУчета,
			|	АналитикаУчетаНоменклатуры";
	КонецЕсли;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	#КонецОбласти
	
	#Область ДвиженияТаблицаКорректировкиВрем
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.Регистратор КАК Регистратор,
	|	Т.Период,
	|	Т.Организация,
	|	Т.РазделУчета,
	|	Т.ВидЗапасов,
	|	Т.Партия,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидДеятельностиНДС,
	|	Т.Подразделение,
	|	Т.СтатьяРасходовСписания,
	|	Т.АналитикаРасходов,
	|	Т.СтатьяАктивовПассивов,
	|	Т.АналитикаАктивовПассивов,
	|	Т.НастройкаСчетовУчета,
	|	Т.КорНаправлениеДеятельности,
	|	Т.АналитикаУчетаПоПартнерам,
	|	Т.ХозяйственнаяОперация,
	|	Т.ТипЗаписи,
	|	МАКСИМУМ(Т.ИдентификаторФинЗаписи) КАК ИдентификаторФинЗаписи
	|ПОМЕСТИТЬ ВТСтарыеИдентификаторыРасход
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК ДокументРаспределениеЗатрат
	|		ПО Т.Регистратор = ДокументРаспределениеЗатрат.Ссылка
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Регистратор В (ВЫБРАТЬ РАЗЛИЧНЫЕ Отбор.Регистратор ИЗ ВтТаблицаКорректировкиВрем КАК Отбор)
	|	И Т.Активность
	|	И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|СГРУППИРОВАТЬ ПО
	|	Т.Регистратор,
	|	Т.Период,
	|	Т.Организация,
	|	Т.РазделУчета,
	|	Т.ВидЗапасов,
	|	Т.Партия,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидДеятельностиНДС,
	|	Т.Подразделение,
	|	Т.СтатьяРасходовСписания,
	|	Т.АналитикаРасходов,
	|	Т.СтатьяАктивовПассивов,
	|	Т.АналитикаАктивовПассивов,
	|	Т.НастройкаСчетовУчета,
	|	Т.КорНаправлениеДеятельности,
	|	Т.АналитикаУчетаПоПартнерам,
	|	Т.ХозяйственнаяОперация,
	|	Т.ТипЗаписи
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Партия,
	|	РазделУчета,
	|	АналитикаУчетаНоменклатуры
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Т.Регистратор КАК Регистратор,
	|	Т.Период,
	|	Т.Организация,
	|	Т.РазделУчета,
	|	Т.ВидЗапасов,
	|	Т.Партия,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидДеятельностиНДС,
	|	Т.Подразделение,
	|	Т.СтатьяРасходовСписания,
	|	Т.АналитикаРасходов,
	|	Т.ТипЗаписи,
	|	МАКСИМУМ(Т.ИдентификаторФинЗаписи) КАК ИдентификаторФинЗаписи
	|ПОМЕСТИТЬ ВТСтарыеИдентификаторыПриход
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РаспределениеПрочихЗатрат КАК ДокументРаспределениеЗатрат
	|		ПО Т.Регистратор = ДокументРаспределениеЗатрат.Ссылка
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И Т.Организация В (&МассивОрганизаций)
	|	И Т.Регистратор В (ВЫБРАТЬ РАЗЛИЧНЫЕ Отбор.Регистратор ИЗ ВтТаблицаКорректировкиВрем КАК Отбор)
	|	И Т.Активность
	|	И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Т.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРасходовНаСебестоимость)
	|СГРУППИРОВАТЬ ПО
	|	Т.Регистратор,
	|	Т.Период,
	|	Т.Организация,
	|	Т.РазделУчета,
	|	Т.ВидЗапасов,
	|	Т.Партия,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидДеятельностиНДС,
	|	Т.Подразделение,
	|	Т.СтатьяРасходовСписания,
	|	Т.АналитикаРасходов,
	|	Т.ТипЗаписи
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Партия,
	|	РазделУчета,
	|	АналитикаУчетаНоменклатуры
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Движения.НомерЗаписи,
	|	Движения.ВидДвижения,
	|	Движения.Регистратор,
	|	Движения.Период,
	|	Движения.Организация,
	|	Движения.Подразделение,
	|	Движения.НаправлениеДеятельности,
	|	Движения.СтатьяРасходов,
	|	Движения.ПринятиеКНалоговомуУчету,
	|	Движения.АналитикаРасходов,
	|	Движения.РазделУчета,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов,
	|	Движения.КорОрганизация,
	|	Движения.Партия,
	|	Движения.АналитикаУчетаПартий,
	|	Движения.АналитикаФинансовогоУчета,
	|	Движения.ВидДеятельностиНДС,
	|	Движения.КорСтатьяРасходов,
	|	Движения.КорАналитикаРасходов,
	|	Движения.КорСтатьяАктивовПассивов,
	|	Движения.КорАналитикаАктивовПассивов,
	|	Движения.КорНастройкаСчетовУчета,
	|	Движения.КорПодразделение,
	|	Движения.КорНаправлениеДеятельности,
	|	Движения.ХозяйственнаяОперация,
	|	Движения.ТипЗаписи,
	|	Движения.ИсточникГФУНоменклатуры,
	|	Движения.АналитикаУчетаПоПартнерам,
	|	Движения.ЗаказКлиента,
	|	Движения.Менеджер,
	|	Движения.Склад,
	|	Движения.Соглашение,
	|	Движения.Договор,
	|	Движения.ТипЗапасов,
	|	Движения.НаправлениеДеятельностиКонтрагента,
	|	Движения.ИсточникГФУРасчетов,
	|	Движения.ВидДеятельностиНДСВыбытия,
	|
	|	Движения.ДопРасходы,
	|	Движения.ДопРасходыБезНДС,
	|	Движения.ДопРасходыРегл,
	|	Движения.ДопРасходыУпр,
	|
	|	Движения.ПостатейныеПостоянныеСНДС,
	|	Движения.ПостатейныеПеременныеСНДС,
	|	Движения.ПостатейныеПостоянныеБезНДС,
	|	Движения.ПостатейныеПеременныеБезНДС,
	|	Движения.ПостатейныеПостоянныеРегл,
	|	Движения.ПостатейныеПеременныеРегл,
	|	Движения.ПостатейныеПостоянныеУпр,
	|	Движения.ПостатейныеПеременныеУпр,
	|	Движения.ПостояннаяРазница,
	|	Движения.ВременнаяРазница,
	|	Движения.СтоимостьНДД,
	|   ЕСТЬNULL(ИдентификаторыРасход.ИдентификаторФинЗаписи,
	|		ЕСТЬNULL(ИдентификаторыПриход.ИдентификаторФинЗаписи, """")) КАК ИдентификаторФинЗаписи
	|ПОМЕСТИТЬ ДвиженияТаблицаКорректировкиВрем
	|ИЗ
	|	ВтТаблицаКорректировкиВрем КАК Движения
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеИдентификаторыРасход КАК ИдентификаторыРасход
	|		ПО Движения.Регистратор = ИдентификаторыРасход.Регистратор
	|		И Движения.Период = ИдентификаторыРасход.Период
	|		И Движения.Организация = ИдентификаторыРасход.Организация
	|		И Движения.РазделУчета = ИдентификаторыРасход.РазделУчета
	|		И ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Движения.ВидЗапасов) = ТИП(Справочник.ВидыЗапасов)
	|			ТОГДА Движения.ВидЗапасов
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		  КОНЕЦ = ИдентификаторыРасход.ВидЗапасов
	|		И Движения.Партия = ИдентификаторыРасход.Партия
	|		И ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Движения.АналитикаУчетаПартий) = ТИП(Справочник.КлючиАналитикиУчетаПартий)
	|			ТОГДА Движения.АналитикаУчетаПартий
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|		  КОНЕЦ = ИдентификаторыРасход.АналитикаУчетаПартий
	|		И Движения.АналитикаФинансовогоУчета = ИдентификаторыРасход.АналитикаФинансовогоУчета
	|		И ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Движения.АналитикаУчетаНоменклатуры) = ТИП(Справочник.КлючиАналитикиУчетаНоменклатуры)
	|			ТОГДА Движения.АналитикаУчетаНоменклатуры
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|		  КОНЕЦ = ИдентификаторыРасход.АналитикаУчетаНоменклатуры
	|		И ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Движения.ВидДеятельностиНДС) = ТИП(Перечисление.ТипыНалогообложенияНДС)
	|			ТОГДА Движения.ВидДеятельностиНДС
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		  КОНЕЦ = ИдентификаторыРасход.ВидДеятельностиНДС
	|		И ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Движения.КорПодразделение) = ТИП(Справочник.СтруктураПредприятия)
	|			ТОГДА Движения.КорПодразделение
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		  КОНЕЦ = ИдентификаторыРасход.Подразделение
	|		И ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Движения.КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА Движения.КорСтатьяРасходов
	|			ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		  КОНЕЦ = ИдентификаторыРасход.СтатьяРасходовСписания
	|		И Движения.КорАналитикаРасходов = ИдентификаторыРасход.АналитикаРасходов
	|		И ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Движения.КорСтатьяАктивовПассивов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
	|			ТОГДА Движения.КорСтатьяАктивовПассивов
	|			ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|		  КОНЕЦ = ИдентификаторыРасход.СтатьяАктивовПассивов
	|		И Движения.КорАналитикаАктивовПассивов = ИдентификаторыРасход.АналитикаАктивовПассивов
	|		И Движения.КорНастройкаСчетовУчета = ИдентификаторыРасход.АналитикаАктивовПассивов
	|		И ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Движения.КорНаправлениеДеятельности) = ТИП(Справочник.НаправленияДеятельности)
	|			ТОГДА Движения.КорНаправлениеДеятельности
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		  КОНЕЦ = ИдентификаторыРасход.КорНаправлениеДеятельности
	|		И ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Движения.АналитикаУчетаПоПартнерам) = ТИП(Справочник.КлючиАналитикиУчетаПоПартнерам)
	|			ТОГДА Движения.АналитикаУчетаПоПартнерам
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)
	|		  КОНЕЦ = ИдентификаторыРасход.АналитикаУчетаПоПартнерам
	|		И Движения.ХозяйственнаяОперация = ИдентификаторыРасход.ХозяйственнаяОперация
	|		И Движения.ТипЗаписи = ИдентификаторыРасход.ТипЗаписи
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСтарыеИдентификаторыПриход КАК ИдентификаторыПриход
	|		ПО Движения.Регистратор = ИдентификаторыПриход.Регистратор
	|		И Движения.Период = ИдентификаторыПриход.Период
	|		И Движения.Организация = ИдентификаторыПриход.Организация
	|		И Движения.РазделУчета = ИдентификаторыПриход.РазделУчета
	|		И ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Движения.ВидЗапасов) = ТИП(Справочник.ВидыЗапасов)
	|			ТОГДА Движения.ВидЗапасов
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		  КОНЕЦ = ИдентификаторыПриход.ВидЗапасов
	|		И Движения.Партия = ИдентификаторыПриход.Партия
	|		И ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Движения.АналитикаУчетаПартий) = ТИП(Справочник.КлючиАналитикиУчетаПартий)
	|			ТОГДА Движения.АналитикаУчетаПартий
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|		  КОНЕЦ = ИдентификаторыПриход.АналитикаУчетаПартий
	|		И Движения.АналитикаФинансовогоУчета = ИдентификаторыПриход.АналитикаФинансовогоУчета
	|		И ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Движения.АналитикаУчетаНоменклатуры) = ТИП(Справочник.КлючиАналитикиУчетаНоменклатуры)
	|			ТОГДА Движения.АналитикаУчетаНоменклатуры
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
	|		  КОНЕЦ = ИдентификаторыПриход.АналитикаУчетаНоменклатуры
	|		И ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Движения.ВидДеятельностиНДС) = ТИП(Перечисление.ТипыНалогообложенияНДС)
	|			ТОГДА Движения.ВидДеятельностиНДС
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|		  КОНЕЦ = ИдентификаторыПриход.ВидДеятельностиНДС
	|		И ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Движения.Подразделение) = ТИП(Справочник.СтруктураПредприятия)
	|			ТОГДА Движения.Подразделение
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		  КОНЕЦ = ИдентификаторыПриход.Подразделение
	|		И ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Движения.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	|			ТОГДА Движения.СтатьяРасходов
	|			ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|		  КОНЕЦ = ИдентификаторыПриход.СтатьяРасходовСписания
	|		И Движения.АналитикаРасходов = ИдентификаторыПриход.АналитикаРасходов
	|		И Движения.ТипЗаписи = ИдентификаторыПриход.ТипЗаписи
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерЗаписи
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Т.НомерЗаписи
	|ИЗ
	|	ДвиженияТаблицаКорректировкиВрем КАК Т
	|ГДЕ
	|	Т.ИдентификаторФинЗаписи = """"
	|";
	
	ТаблицаИдентификаторов = Новый ТаблицаЗначений;
	ТаблицаИдентификаторов.Колонки.Добавить("Идентификатор", ОбщегоНазначения.ОписаниеТипаСтрока(36));
	ТаблицаИдентификаторов.Колонки.Добавить("НомерЗаписи", ОбщегоНазначения.ОписаниеТипаЧисло(31));
	
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаИдентификаторов.Добавить();
		НоваяСтрока.Идентификатор = Новый УникальныйИдентификатор;
		НоваяСтрока.НомерЗаписи = Выборка.НомерЗаписи;
	КонецЦикла;
	
	#КонецОбласти
	
	#Область ДвиженияТаблицаКорректировки
	
	Запрос.УстановитьПараметр("ТаблицаИдентификаторов", ТаблицаИдентификаторов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаИдентификаторов.Идентификатор КАК Идентификатор,
	|	ТаблицаИдентификаторов.НомерЗаписи КАК НомерЗаписи
	|ПОМЕСТИТЬ ТаблицаИдентификаторов
	|ИЗ
	|	&ТаблицаИдентификаторов КАК ТаблицаИдентификаторов
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерЗаписи
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА Движения.Организация <> Движения.КорОрганизация ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ КАК ПередачаМеждуОрганизациями,
	|	Движения.ВидДвижения,
	|	Движения.Регистратор,
	|	Движения.Регистратор КАК ДокументДвижения,
	|	Движения.Период,
	|	Движения.Организация,
	|	Движения.Подразделение,
	|	Движения.НаправлениеДеятельности,
	|	Движения.СтатьяРасходов,
	|	Движения.ПринятиеКНалоговомуУчету,
	|	Движения.АналитикаРасходов,
	|
	|	Движения.РазделУчета,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов,
	|	Движения.КорОрганизация,
	|	Движения.Партия,
	|	Движения.АналитикаУчетаПартий,
	|	Движения.АналитикаФинансовогоУчета,
	|	Движения.ВидДеятельностиНДС,
	|
	|	Движения.КорСтатьяРасходов,
	|	Движения.КорАналитикаРасходов,
	|	Движения.КорСтатьяАктивовПассивов,
	|	Движения.КорАналитикаАктивовПассивов,
	|	Движения.КорНастройкаСчетовУчета,
	|	Движения.КорПодразделение,
	|	Движения.КорНаправлениеДеятельности,
	|	Движения.ХозяйственнаяОперация,
	|	Движения.ТипЗаписи,
	|	Движения.ИсточникГФУНоменклатуры,
	|
	|	Движения.АналитикаУчетаПоПартнерам,
	|	Движения.ЗаказКлиента,
	|	Движения.Менеджер,
	|	Движения.Склад,
	|	Движения.Соглашение,
	|	Движения.Договор,
	|	Движения.ТипЗапасов,
	|	Движения.НаправлениеДеятельностиКонтрагента,
	|	Движения.ИсточникГФУРасчетов,
	|	Движения.ВидДеятельностиНДСВыбытия,
	|
	|	Движения.ДопРасходы,
	|	Движения.ДопРасходыБезНДС,
	|	Движения.ДопРасходыРегл,
	|	Движения.ДопРасходыУпр,
	|
	|	Движения.ПостатейныеПостоянныеСНДС,
	|	Движения.ПостатейныеПеременныеСНДС,
	|	Движения.ПостатейныеПостоянныеБезНДС,
	|	Движения.ПостатейныеПеременныеБезНДС,
	|	Движения.ПостатейныеПостоянныеРегл,
	|	Движения.ПостатейныеПеременныеРегл,
	|	Движения.ПостатейныеПостоянныеУпр,
	|	Движения.ПостатейныеПеременныеУпр,
	|	Движения.ПостояннаяРазница,
	|	Движения.ВременнаяРазница,
	|	Движения.СтоимостьНДД,
	|
	|	НастройкиХозОпераций.Ссылка КАК НастройкаХозяйственнойОперации,
	|	ЕСТЬNULL(ТаблицаИдентификаторов.Идентификатор, Движения.ИдентификаторФинЗаписи) КАК ИдентификаторФинЗаписи
	|
	|ПОМЕСТИТЬ ДвиженияТаблицаКорректировки
	|ИЗ
	|	ДвиженияТаблицаКорректировкиВрем КАК Движения
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаИдентификаторов КАК ТаблицаИдентификаторов
	|		ПО ТаблицаИдентификаторов.НомерЗаписи = Движения.НомерЗаписи
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозОпераций
	|		ПО НастройкиХозОпераций.ХозяйственнаяОперация = Движения.ХозяйственнаяОперация
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Движения.ВидДвижения,
	|	Движения.Регистратор,
	|	Движения.Период,
	|	Движения.Организация,
	|	Движения.Подразделение,
	|	Движения.НаправлениеДеятельности,
	|	Движения.СтатьяРасходов,
	|	Движения.ПринятиеКНалоговомуУчету,
	|	Движения.АналитикаРасходов,
	|
	|	Движения.РазделУчета,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов,
	|	Движения.КорОрганизация,
	|	Движения.Партия,
	|	Движения.АналитикаУчетаПартий,
	|	Движения.АналитикаФинансовогоУчета,
	|	Движения.ВидДеятельностиНДС,
	|
	|	Движения.КорСтатьяРасходов,
	|	Движения.КорАналитикаРасходов,
	|	Движения.КорСтатьяАктивовПассивов,
	|	Движения.КорАналитикаАктивовПассивов,
	|	Движения.КорНастройкаСчетовУчета,
	|	Движения.КорПодразделение,
	|	Движения.КорНаправлениеДеятельности,
	|	Движения.ХозяйственнаяОперация,
	|	Движения.ТипЗаписи,
	|	Движения.ИсточникГФУНоменклатуры,
	|
	|	Движения.АналитикаУчетаПоПартнерам,
	|	Движения.ЗаказКлиента,
	|	Движения.Менеджер,
	|	Движения.Склад,
	|	Движения.Соглашение,
	|	Движения.Договор,
	|	Движения.ТипЗапасов,
	|	Движения.НаправлениеДеятельностиКонтрагента,
	|	Движения.ИсточникГФУРасчетов,
	|	Движения.ВидДеятельностиНДСВыбытия,
	|
	|	ВЫБОР
	|		КОГДА Движения.ВидДеятельностиНДС В (&ТипыНалогообложенияНДСНеУчитываетсяВСтоимости)
	|		 И Движения.ВидДеятельностиНДСВыбытия В (&ТипыНалогообложенияНДСУчитываетсяВСтоимости)
	|		 И Движения.ДопРасходыБезНДС <> 0
	|			ТОГДА ВЫРАЗИТЬ(Движения.ДопРасходыРегл * (Движения.ДопРасходы / Движения.ДопРасходыБезНДС) - Движения.ДопРасходыРегл КАК ЧИСЛО(31,2))
	|		КОГДА Движения.ВидДеятельностиНДС В (&ТипыНалогообложенияНДСУчитываетсяВСтоимости)
	|		 И Движения.ВидДеятельностиНДСВыбытия В (&ТипыНалогообложенияНДСНеУчитываетсяВСтоимости)
	|		 И Движения.ДопРасходы <> 0
	|			ТОГДА -ВЫРАЗИТЬ(Движения.ДопРасходыРегл - Движения.ДопРасходыРегл * (Движения.ДопРасходыБезНДС / Движения.ДопРасходы) КАК ЧИСЛО(31,2))
	|			ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА Движения.ВидДеятельностиНДС В (&ТипыНалогообложенияНДСНеУчитываетсяВСтоимости)
	|		 И Движения.ВидДеятельностиНДСВыбытия В (&ТипыНалогообложенияНДСУчитываетсяВСтоимости)
	|		 И Движения.ДопРасходыБезНДС <> 0
	|			ТОГДА ВЫРАЗИТЬ((Движения.ДопРасходыУпр * (Движения.ДопРасходы / Движения.ДопРасходыБезНДС)) - Движения.ДопРасходыУпр КАК ЧИСЛО(31,2))
	|		КОГДА Движения.ВидДеятельностиНДС В (&ТипыНалогообложенияНДСУчитываетсяВСтоимости)
	|		 И Движения.ВидДеятельностиНДСВыбытия В (&ТипыНалогообложенияНДСНеУчитываетсяВСтоимости)
	|		 И Движения.ДопРасходы <> 0
	|			ТОГДА -ВЫРАЗИТЬ(Движения.ДопРасходыУпр - (Движения.ДопРасходыУпр * (Движения.ДопРасходыБезНДС / Движения.ДопРасходы)) КАК ЧИСЛО(31,2))
	|			ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьУпр,
	|
	|	Движения.НастройкаХозяйственнойОперации,
	|	Движения.ИдентификаторФинЗаписи
	|
	|ПОМЕСТИТЬ ДвиженияТаблицаКорректировкиНДС
	|ИЗ
	|	ДвиженияТаблицаКорректировки КАК Движения
	|ГДЕ
	|	Движения.ВидДеятельностиНДСВыбытия <> НЕОПРЕДЕЛЕНО
	|	И Движения.ВидДеятельностиНДСВыбытия <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	И Движения.ВидДеятельностиНДС <> Движения.ВидДеятельностиНДСВыбытия
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	#КонецОбласти
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВтТаблицаКорректировкиВрем, ДвиженияТаблицаКорректировкиВрем, ВТСтарыеИдентификаторыРасход, ВТСтарыеИдентификаторыПриход, ТаблицаИдентификаторов");
	
	СоответствиеВременныхТаблицДвижений = Новый Соответствие;
	
	// Формируются движения по регистрам:
	// - ПрочиеРасходы
	// - СебестоимостьТоваров
	
	Если ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходов Тогда
		СформироватьДвиженияПрочиеРасходыДопРасходыЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
		СформироватьДвиженияПрочиеРасходыДопРасходыЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений, Ложь);
	КонецЕсли;
	СформироватьДвиженияПрочиеАктивыПассивыДопРасходыЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	СформироватьДвиженияПоПрочимАктивамПассивамДопРасходыЗапросом(ПараметрыРасчета, Запрос, СоответствиеВременныхТаблицДвижений);

	СформироватьДвиженияСебестоимостьТоваровДополнительныхРасходовЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений, Ложь);
	СформироватьДвиженияСебестоимостьТоваровДополнительныхРасходовЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений, Истина);
	
	СформироватьДвиженияСебестоимостьТоваровНДСДополнительныхРасходовЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений, Ложь);
	СформироватьДвиженияСебестоимостьТоваровНДСДополнительныхРасходовЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений, Истина);
	//++ Локализация
	СформироватьДвиженияВыручкаИСебестоимостьНДСДопРасходыЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	СформироватьДвиженияПрочиеРасходыНДСДопРасходыЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	//-- Локализация
	
	СформироватьДвиженияНоменклатураДоходыДопРасходыЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	СформироватьДвиженияВыручкаИСебестоимостьДопРасходыЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвиженияИзВременныхТаблиц(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	
	МассивЛокальныхВременныхТаблиц = Новый Массив;
	МассивЛокальныхВременныхТаблиц.Добавить("ДвиженияТаблицаКорректировки");
	//++ Локализация
	МассивЛокальныхВременныхТаблиц.Добавить("ДвиженияТаблицаКорректировкиНДС");
	//-- Локализация
	Для Каждого КлючЗначение Из СоответствиеВременныхТаблицДвижений Цикл
		МассивЛокальныхВременныхТаблиц.Добавить(КлючЗначение.Ключ);
	КонецЦикла;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, СтрСоединить(МассивЛокальныхВременныхТаблиц, ","));
	
КонецПроцедуры


Процедура СписатьОтклоненияВСтоимостиТоваров(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СписатьОтклоненияВСтоимостиТоваров");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	#Область ПартииСКорректировкамиИИсправлениями
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Партия КАК Партия,
	|	Т.Организация КАК Организация
	|ПОМЕСТИТЬ ПартииСКорректировкамиИИсправлениями
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Т
	|ГДЕ
	|	Т.ТипЗаписи В
	|	 (ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.КорректировкаПриобретения),
	|	  ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ИсправлениеПеремещенияПрошлогоПериода))
	|
	// Индексы должны соответствовать индексам таблицы ВТКэшРасчетныеОстаткиСебестоимостьТоваров, описанным
	// в функции РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеРегистра() #Область ИндексыРегистра
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	Партия
	|;";
	
	#КонецОбласти
	
	#Область ВтДанныеТаблицаКорректировки
	
	Запрос.Текст = Запрос.Текст + " 
	|ВЫБРАТЬ
	|	&КонецПериода                        			   КАК Период,
	|	ЛОЖЬ 											   КАК СлужебноеВидДвиженияПриход,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)             КАК ВидДвижения,
	|	ДокументыРасчетаСебестоимости.Ссылка 			   КАК Регистратор,
	|
	|	ТаблицаКорректировки.Организация                   КАК Организация,
	|	ТаблицаКорректировки.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаКорректировки.РазделУчета 				   КАК РазделУчета,
	|	ТаблицаКорректировки.ВидЗапасов                    КАК ВидЗапасов,
	|	ТаблицаКорректировки.Партия                        КАК Партия,
	|	ТаблицаКорректировки.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	ТаблицаКорректировки.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	ТаблицаКорректировки.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	ЕСТЬNULL(ТаблицаКорректировки.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
    |
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ОтклонениеВСтоимостиТоваров) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ОтклонениеВСтоимостиТоваров) 	КАК СтатьяДоходов,
	|	ТаблицаКорректировки.АналитикаУчетаНоменклатуры.Номенклатура 				КАК Номенклатура,
	|	"""" КАК ИдентификаторФинЗаписи,
	|
	|	ВЫБОР КОГДА
	|		ТаблицаКорректировки.Стоимость + ТаблицаКорректировки.ДопРасходы + ТаблицаКорректировки.Трудозатраты + ТаблицаКорректировки.ПостатейныеПостоянныеСНДС + ТаблицаКорректировки.ПостатейныеПеременныеСНДС > 0
	|			ИЛИ ТаблицаКорректировки.СтоимостьБезНДС + ТаблицаКорректировки.ДопРасходыБезНДС + ТаблицаКорректировки.Трудозатраты + ТаблицаКорректировки.ПостатейныеПостоянныеБезНДС + ТаблицаКорректировки.ПостатейныеПеременныеБезНДС > 0
	|			ИЛИ ТаблицаКорректировки.СтоимостьРегл + ТаблицаКорректировки.ДопРасходыРегл + ТаблицаКорректировки.ТрудозатратыРегл + ТаблицаКорректировки.ПостатейныеПостоянныеРегл + ТаблицаКорректировки.ПостатейныеПеременныеРегл > 0
	|			ИЛИ ТаблицаКорректировки.СтоимостьУпр + ТаблицаКорректировки.ДопРасходыУпр + ТаблицаКорректировки.ТрудозатратыУпр + ТаблицаКорректировки.ПостатейныеПостоянныеУпр + ТаблицаКорректировки.ПостатейныеПеременныеУпр > 0
	|			ИЛИ ТаблицаКорректировки.СтоимостьЗабалансовая > 0
	|			ИЛИ ТаблицаКорректировки.СтоимостьЗабалансоваяРегл > 0
	|			ИЛИ ТаблицаКорректировки.СтоимостьЗабалансоваяРегл > 0
	|			ИЛИ ТаблицаКорректировки.ВременнаяРазница < 0 // НУ = БУ - ПР - ВР, сумма НУ будет > 0
	|			ИЛИ ТаблицаКорректировки.ПостояннаяРазница < 0
	|			ИЛИ ТаблицаКорректировки.СтоимостьНДД < 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоРасходы,
	|	ВЫБОР КОГДА
	|		ТаблицаКорректировки.Стоимость + ТаблицаКорректировки.ДопРасходы + ТаблицаКорректировки.Трудозатраты + ТаблицаКорректировки.ПостатейныеПостоянныеСНДС + ТаблицаКорректировки.ПостатейныеПеременныеСНДС < 0
	|			ИЛИ ТаблицаКорректировки.СтоимостьБезНДС + ТаблицаКорректировки.ДопРасходыБезНДС + ТаблицаКорректировки.Трудозатраты + ТаблицаКорректировки.ПостатейныеПостоянныеБезНДС + ТаблицаКорректировки.ПостатейныеПеременныеБезНДС < 0
	|			ИЛИ ТаблицаКорректировки.СтоимостьРегл + ТаблицаКорректировки.ДопРасходыРегл + ТаблицаКорректировки.ТрудозатратыРегл + ТаблицаКорректировки.ПостатейныеПостоянныеРегл + ТаблицаКорректировки.ПостатейныеПеременныеРегл < 0
	|			ИЛИ ТаблицаКорректировки.СтоимостьУпр + ТаблицаКорректировки.ДопРасходыУпр + ТаблицаКорректировки.ТрудозатратыУпр + ТаблицаКорректировки.ПостатейныеПостоянныеУпр + ТаблицаКорректировки.ПостатейныеПеременныеУпр < 0
	|			ИЛИ ТаблицаКорректировки.СтоимостьЗабалансовая < 0
	|			ИЛИ ТаблицаКорректировки.ВременнаяРазница > 0 // НУ = БУ - ПР - ВР, сумма НУ будет < 0
	|			ИЛИ ТаблицаКорректировки.ПостояннаяРазница > 0
	|			ИЛИ ТаблицаКорректировки.СтоимостьНДД > 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоДоходы,
	|
	|	ТаблицаКорректировки.Стоимость,
	|	ТаблицаКорректировки.СтоимостьБезНДС,
	|	ТаблицаКорректировки.СтоимостьЗабалансовая,
	|	ТаблицаКорректировки.ДопРасходы,
	|	ТаблицаКорректировки.ДопРасходыБезНДС,
	|	ТаблицаКорректировки.Трудозатраты,
	|	ТаблицаКорректировки.ПостатейныеПостоянныеСНДС,
	|	ТаблицаКорректировки.ПостатейныеПеременныеСНДС,
	|	ТаблицаКорректировки.ПостатейныеПостоянныеБезНДС,
	|	ТаблицаКорректировки.ПостатейныеПеременныеБезНДС,
	|	ТаблицаКорректировки.СтоимостьРегл,
	|	ТаблицаКорректировки.СтоимостьЗабалансоваяРегл,
	|	ТаблицаКорректировки.ДопРасходыРегл,
	|	ТаблицаКорректировки.ТрудозатратыРегл,
	|	ТаблицаКорректировки.ПостатейныеПостоянныеРегл,
	|	ТаблицаКорректировки.ПостатейныеПеременныеРегл,
	|	ТаблицаКорректировки.ПостояннаяРазница,
	|	ТаблицаКорректировки.ВременнаяРазница,
	|	ТаблицаКорректировки.СтоимостьНДД,
	|	ТаблицаКорректировки.СтоимостьУпр,
	|	ТаблицаКорректировки.ДопРасходыУпр,
	|	ТаблицаКорректировки.ТрудозатратыУпр,
	|	ТаблицаКорректировки.ПостатейныеПостоянныеУпр,
	|	ТаблицаКорректировки.ПостатейныеПеременныеУпр,
	// Восстановление резервов под обесценение запасов должно отражаться отдельным движениям.
	|	0 КАК РезервПодОбесценениеРегл,
	|	0 КАК РезервПодОбесценениеУпр
	|
	|ПОМЕСТИТЬ ВтДанныеТаблицаКорректировки
	|ИЗ
	|	ВТКэшРасчетныеОстаткиСебестоимостьТоваров КАК ТаблицаКорректировки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПартииСКорректировкамиИИсправлениями КАК Отбор
	|		ПО ТаблицаКорректировки.АналитикаУчетаНоменклатуры = Отбор.АналитикаУчетаНоменклатуры
	|		И ТаблицаКорректировки.Организация = Отбор.Организация
	|		И ТаблицаКорректировки.Партия = Отбор.Партия
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыРасчетаСебестоимости
	|		ПО ДокументыРасчетаСебестоимости.Организация = ТаблицаКорректировки.Организация
	|ГДЕ
	|	ТаблицаКорректировки.Количество = 0
	|";
	
	#КонецОбласти
	
	#Область ВтДанныеТаблицаКорректировки_ВосстановлениеРезервов
	
	// Восстановление резервов под обесценение запасов должно отражаться отдельным движениям.
	Запрос.Текст = Запрос.Текст + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&КонецПериода                        			   КАК Период,
	|	ЛОЖЬ 											   КАК СлужебноеВидДвиженияПриход,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)             КАК ВидДвижения,
	|	ДокументыРасчетаСебестоимости.Ссылка 			   КАК Регистратор,
	|
	|	ТаблицаКорректировки.Организация                   КАК Организация,
	|	ТаблицаКорректировки.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаКорректировки.РазделУчета 				   КАК РазделУчета,
	|	ТаблицаКорректировки.ВидЗапасов                    КАК ВидЗапасов,
	|	ТаблицаКорректировки.Партия                        КАК Партия,
	|	ТаблицаКорректировки.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	ТаблицаКорректировки.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	ТаблицаКорректировки.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	ЕСТЬNULL(ТаблицаКорректировки.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
    |
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходов,
	|	ТаблицаКорректировки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	"""" КАК ИдентификаторФинЗаписи,
	|
	|	ЛОЖЬ КАК ЭтоРасходы,
	|	ЛОЖЬ КАК ЭтоДоходы,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьЗабалансовая,
	|	0 КАК ДопРасходы,
	|	0 КАК ДопРасходыБезНДС,
	|	0 КАК Трудозатраты,
	|	0 КАК ПостатейныеПостоянныеСНДС,
	|	0 КАК ПостатейныеПеременныеСНДС,
	|	0 КАК ПостатейныеПостоянныеБезНДС,
	|	0 КАК ПостатейныеПеременныеБезНДС,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьЗабалансоваяРегл,
	|	0 КАК ДопРасходыРегл,
	|	0 КАК ТрудозатратыРегл,
	|	0 КАК ПостатейныеПостоянныеРегл,
	|	0 КАК ПостатейныеПеременныеРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	0 КАК СтоимостьНДД,
	|	0 КАК СтоимостьУпр,
	|	0 КАК ДопРасходыУпр,
	|	0 КАК ТрудозатратыУпр,
	|	0 КАК ПостатейныеПостоянныеУпр,
	|	0 КАК ПостатейныеПеременныеУпр,
	|	ТаблицаКорректировки.РезервПодОбесценениеРегл,
	|	ТаблицаКорректировки.РезервПодОбесценениеУпр
	|
	|ИЗ
	|	ВТКэшРасчетныеОстаткиСебестоимостьТоваров КАК ТаблицаКорректировки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПартииСКорректировкамиИИсправлениями КАК Отбор
	|		ПО ТаблицаКорректировки.АналитикаУчетаНоменклатуры = Отбор.АналитикаУчетаНоменклатуры
	|		И ТаблицаКорректировки.Организация = Отбор.Организация
	|		И ТаблицаКорректировки.Партия = Отбор.Партия
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыРасчетаСебестоимости
	|		ПО ДокументыРасчетаСебестоимости.Организация = ТаблицаКорректировки.Организация
	|ГДЕ
	|	ТаблицаКорректировки.Количество = 0
	|	И (ТаблицаКорректировки.РезервПодОбесценениеРегл <> 0
	|		ИЛИ ТаблицаКорректировки.РезервПодОбесценениеУпр <> 0)
	|;";
	
	#КонецОбласти
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	// Формируются движения по регистрам:
	// - СебестоимостьТоваров
	// - ПрочиеРасходы
	// - ПрочиеДоходы
	СоответствиеВременныхТаблицДвижений = Новый Соответствие;
	
	#Область СебестоимостьТоваров
	
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	ИмяВременнойТаблицы = "ВтСписаниеОтклоненийСебестоимостьТоваров";
	ИмяВременнойТаблицыИсточник = "ВтДанныеТаблицаКорректировки";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ДобавитьИдентификаторыВоВременнуюТаблицу(ПараметрыРасчета, ОписаниеПриемника, ИмяВременнойТаблицыИсточник);
	
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, ИмяВременнойТаблицыИсточник);
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);

	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"ХозяйственнаяОперация",
		"ВЫБОР КОГДА ЭтоРасходы
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтклонениеВСтоимостиТоваровРасходы)
		|	   КОГДА ЭтоДоходы
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтклонениеВСтоимостиТоваровДоходы)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеРезервовПодОбесценениеЗапасов)
		|	КОНЕЦ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"НастройкаХозяйственнойОперации",
		"ВЫБОР КОГДА ЭтоРасходы
		|		ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтклонениеВСтоимостиТоваровРасходы)
		|	   КОГДА ЭтоДоходы
		|		ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтклонениеВСтоимостиТоваровДоходы)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеРезервовПодОбесценениеЗапасов)
		|	КОНЕЦ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"ТипЗаписи",
		"ВЫБОР КОГДА ЭтоРасходы
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеРасходы)
		|	   КОГДА ЭтоДоходы
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ОтклонениеВСтоимостиНаПрочиеДоходы)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПустаяСсылка)
		|	КОНЕЦ");

	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"СтатьяРасходовСписания",
		"ВЫБОР КОГДА ЭтоРасходы
		|		ТОГДА СтатьяРасходов
		|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|	КОНЕЦ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"АналитикаРасходов",
		"ВЫБОР КОГДА ЭтоРасходы
		|		ТОГДА Номенклатура
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"СтатьяДоходов",
		"ВЫБОР КОГДА ЭтоДоходы
		|		ТОГДА СтатьяДоходов
		|		ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
		|	КОНЕЦ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"АналитикаДоходов",
		"ВЫБОР КОГДА ЭтоДоходы
		|		ТОГДА Номенклатура
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, ИмяВременнойТаблицыИсточник, ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);

	#КонецОбласти

	#Область СписаниеОтклоненийПрочиеДоходыРасходы
	
	Запрос.Текст = "
	// На прочие доходы будут отнесены отрицательные суммы отклонения в стоимости
	|ВЫБРАТЬ
	|	ИСТИНА КАК ЭтоДоходы,
	|	ЛОЖЬ   КАК ЭтоРасходы,
	|
	|	ТаблицаКорректировки.Период                        КАК Период,
	|	ИСТИНА 											   КАК СлужебноеВидДвиженияПриход,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)             КАК ВидДвижения,
	|	ТаблицаКорректировки.Регистратор              	   КАК ДокументДвижения,
	|	ТаблицаКорректировки.Регистратор               	   КАК ДокументРасчета,
	|	ТаблицаКорректировки.Регистратор               	   КАК Регистратор,
	|	ТаблицаКорректировки.Организация                   КАК Организация,
	|	ТаблицаКорректировки.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ТаблицаКорректировки.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтклонениеВСтоимостиТоваровДоходы) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтклонениеВСтоимостиТоваровДоходы) КАК НастройкаХозяйственнойОперации,
	|
	|	ТаблицаКорректировки.СтатьяРасходов                КАК СтатьяРасходов,
	|	ТаблицаКорректировки.Номенклатура 				   КАК АналитикаРасходов,
	|	ТаблицаКорректировки.СтатьяДоходов 				   КАК СтатьяДоходов,
	|	ТаблицаКорректировки.Номенклатура 				   КАК АналитикаДоходов,
	|	ТаблицаКорректировки.ИдентификаторФинЗаписи 	   КАК ИдентификаторФинЗаписи,
	|
	|	(ВЫБОР 
	|		КОГДА ТаблицаКорректировки.Стоимость + ТаблицаКорректировки.ДопРасходы + ТаблицаКорректировки.Трудозатраты + ТаблицаКорректировки.ПостатейныеПостоянныеСНДС + ТаблицаКорректировки.ПостатейныеПеременныеСНДС < 0
	|			ТОГДА -(ТаблицаКорректировки.Стоимость + ТаблицаКорректировки.ДопРасходы + ТаблицаКорректировки.Трудозатраты + ТаблицаКорректировки.ПостатейныеПостоянныеСНДС + ТаблицаКорректировки.ПостатейныеПеременныеСНДС)
	|		ИНАЧЕ 0 КОНЕЦ) КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	(ВЫБОР 
	|		КОГДА ТаблицаКорректировки.СтоимостьРегл + ТаблицаКорректировки.ДопРасходыРегл + ТаблицаКорректировки.ТрудозатратыРегл + ТаблицаКорректировки.ПостатейныеПостоянныеРегл + ТаблицаКорректировки.ПостатейныеПеременныеРегл < 0
	|			ТОГДА -(ТаблицаКорректировки.СтоимостьРегл + ТаблицаКорректировки.ДопРасходыРегл + ТаблицаКорректировки.ТрудозатратыРегл + ТаблицаКорректировки.ПостатейныеПостоянныеРегл + ТаблицаКорректировки.ПостатейныеПеременныеРегл)
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаРегл,
	|	(ВЫБОР 
	|		КОГДА ТаблицаКорректировки.СтоимостьУпр + ТаблицаКорректировки.ДопРасходыУпр + ТаблицаКорректировки.ТрудозатратыУпр + ТаблицаКорректировки.ПостатейныеПостоянныеУпр + ТаблицаКорректировки.ПостатейныеПеременныеУпр < 0
	|			ТОГДА -(ТаблицаКорректировки.СтоимостьУпр + ТаблицаКорректировки.ДопРасходыУпр + ТаблицаКорректировки.ТрудозатратыУпр + ТаблицаКорректировки.ПостатейныеПостоянныеУпр + ТаблицаКорректировки.ПостатейныеПеременныеУпр)
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаУпр,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	0 КАК СуммаНДД
	|ПОМЕСТИТЬ СписаниеОтклоненийПрочиеДоходыРасходы
	|ИЗ
	|	ВтДанныеТаблицаКорректировки КАК ТаблицаКорректировки
	|ГДЕ
	|	 ТаблицаКорректировки.РазделУчета В (&БалансовыеРазделыУчета)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На прочие расходы будут отнесены положительные суммы отклонения в стоимости
	|ВЫБРАТЬ
	|	ЛОЖЬ   КАК ЭтоДоходы,
	|	ИСТИНА КАК ЭтоРасходы,
	|
	|	ТаблицаКорректировки.Период                        КАК Период,
	|	ИСТИНА 											   КАК СлужебноеВидДвиженияПриход,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)             КАК ВидДвижения,
	|	ТаблицаКорректировки.Регистратор              	   КАК ДокументДвижения,
	|	ТаблицаКорректировки.Регистратор               	   КАК ДокументРасчета,
	|	ТаблицаКорректировки.Регистратор               	   КАК Регистратор,
	|	ТаблицаКорректировки.Организация                   КАК Организация,
	|	ТаблицаКорректировки.НаправлениеДеятельности       КАК НаправлениеДеятельности,
	|	ТаблицаКорректировки.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтклонениеВСтоимостиТоваровРасходы) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ОтклонениеВСтоимостиТоваровРасходы) КАК НастройкаХозяйственнойОперации,
	|
	|	ТаблицаКорректировки.СтатьяРасходов                КАК СтатьяРасходов,
	|	ТаблицаКорректировки.Номенклатура 				   КАК АналитикаРасходов,
	|	ТаблицаКорректировки.СтатьяДоходов 				   КАК СтатьяДоходов,
	|	ТаблицаКорректировки.Номенклатура 				   КАК АналитикаДоходов,
	|	ТаблицаКорректировки.ИдентификаторФинЗаписи 	   КАК ИдентификаторФинЗаписи,
	|
	|	(ВЫБОР 
	|		КОГДА ТаблицаКорректировки.Стоимость + ТаблицаКорректировки.ДопРасходы + ТаблицаКорректировки.Трудозатраты + ТаблицаКорректировки.ПостатейныеПостоянныеСНДС + ТаблицаКорректировки.ПостатейныеПеременныеСНДС >= 0
	|			ТОГДА ТаблицаКорректировки.Стоимость + ТаблицаКорректировки.ДопРасходы + ТаблицаКорректировки.Трудозатраты + ТаблицаКорректировки.ПостатейныеПостоянныеСНДС + ТаблицаКорректировки.ПостатейныеПеременныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК Сумма,
	|	(ВЫБОР 
	|		КОГДА ТаблицаКорректировки.СтоимостьБезНДС + ТаблицаКорректировки.ДопРасходыБезНДС + ТаблицаКорректировки.Трудозатраты + ТаблицаКорректировки.ПостатейныеПостоянныеБезНДС + ТаблицаКорректировки.ПостатейныеПеременныеБезНДС >= 0
	|			ТОГДА ТаблицаКорректировки.СтоимостьБезНДС + ТаблицаКорректировки.ДопРасходыБезНДС + ТаблицаКорректировки.Трудозатраты + ТаблицаКорректировки.ПостатейныеПостоянныеБезНДС + ТаблицаКорректировки.ПостатейныеПеременныеБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаБезНДС,
	|	(ВЫБОР 
	|		КОГДА ТаблицаКорректировки.СтоимостьРегл + ТаблицаКорректировки.ДопРасходыРегл + ТаблицаКорректировки.ТрудозатратыРегл + ТаблицаКорректировки.ПостатейныеПостоянныеРегл + ТаблицаКорректировки.ПостатейныеПеременныеРегл >= 0
	|			ТОГДА ТаблицаКорректировки.СтоимостьРегл + ТаблицаКорректировки.ДопРасходыРегл + ТаблицаКорректировки.ТрудозатратыРегл + ТаблицаКорректировки.ПостатейныеПостоянныеРегл + ТаблицаКорректировки.ПостатейныеПеременныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаРегл,
	|	(ВЫБОР 
	|		КОГДА ТаблицаКорректировки.СтоимостьУпр + ТаблицаКорректировки.ДопРасходыУпр + ТаблицаКорректировки.ТрудозатратыУпр + ТаблицаКорректировки.ПостатейныеПостоянныеУпр + ТаблицаКорректировки.ПостатейныеПеременныеУпр >= 0
	|			ТОГДА ТаблицаКорректировки.СтоимостьУпр + ТаблицаКорректировки.ДопРасходыУпр + ТаблицаКорректировки.ТрудозатратыУпр + ТаблицаКорректировки.ПостатейныеПостоянныеУпр + ТаблицаКорректировки.ПостатейныеПеременныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаУпр,
	|	(ВЫБОР 
	|		КОГДА ТаблицаКорректировки.СтоимостьРегл + ТаблицаКорректировки.ДопРасходыРегл + ТаблицаКорректировки.ТрудозатратыРегл + ТаблицаКорректировки.ПостатейныеПостоянныеРегл + ТаблицаКорректировки.ПостатейныеПеременныеРегл >= 0
	|			ТОГДА ТаблицаКорректировки.ПостояннаяРазница
	|		ИНАЧЕ 0 КОНЕЦ) КАК ПостояннаяРазница,
	|	(ВЫБОР 
	|		КОГДА ТаблицаКорректировки.СтоимостьРегл + ТаблицаКорректировки.ДопРасходыРегл + ТаблицаКорректировки.ТрудозатратыРегл + ТаблицаКорректировки.ПостатейныеПостоянныеРегл + ТаблицаКорректировки.ПостатейныеПеременныеРегл >= 0
	|			ТОГДА ТаблицаКорректировки.ВременнаяРазница
	|		ИНАЧЕ 0 КОНЕЦ) КАК ВременнаяРазница,
	|	(ВЫБОР 
	|		КОГДА ТаблицаКорректировки.СтоимостьНДД >= 0
	|			ТОГДА ТаблицаКорректировки.СтоимостьНДД
	|		ИНАЧЕ 0 КОНЕЦ) КАК СуммаНДД
	|ИЗ
	|	ВтДанныеТаблицаКорректировки КАК ТаблицаКорректировки
	|ГДЕ
	|	 ТаблицаКорректировки.РазделУчета В (&БалансовыеРазделыУчета)
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	#КонецОбласти
	
	#Область ПрочиеДоходы
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеДоходы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	ИмяВременнойТаблицы = "ВтСписаниеОтклоненийПрочиеДоходы";
	ИмяВременнойТаблицыИсточник = "СписаниеОтклоненийПрочиеДоходыРасходы";
	
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, ИмяВременнойТаблицыИсточник);
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);

	УсловиеГДЕ = "ЭтоДоходы";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, ИмяВременнойТаблицыИсточник, ИмяВременнойТаблицы, УсловиеГДЕ);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);

	#КонецОбласти
	
	#Область ПрочиеРасходы
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	ИмяВременнойТаблицы = "ВтСписаниеОтклоненийПрочиеРасходы";
	ИмяВременнойТаблицыИсточник = "СписаниеОтклоненийПрочиеДоходыРасходы";
	
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, ИмяВременнойТаблицыИсточник);
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);

	УсловиеГДЕ = "ЭтоРасходы";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, ИмяВременнойТаблицыИсточник, ИмяВременнойТаблицы, УсловиеГДЕ);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);

	#КонецОбласти

	#Область Выручка

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Т.Период,
	|	Т.Регистратор КАК Регистратор,
	// Измерения
	|	Т.АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказКлиента,
	|	АналитикаПартнера.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	(ВЫБОР
	|		КОГДА Т.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		 И НЕ Т.АналитикаУчетаНоменклатуры.Номенклатура.ПрослеживаемыйТовар
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ Т.ВидЗапасов.ТипЗапасов КОНЕЦ) КАК ТипЗапасов,
	|	Т.ВидЗапасов,
	|	Т.РазделУчета,
	|	Т.Партия,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаФинансовогоУчета,
	|	Т.ВидДеятельностиНДС,
	|	Т.АналитикаУчетаНоменклатуры.СкладскаяТерритория КАК Склад,
	// Ресурсы
	|	Т.РезервПодОбесценениеУпр КАК РезервПодОбесценениеУпр,
	|	Т.РезервПодОбесценениеРегл КАК РезервПодОбесценениеРегл,
	// Реквизиты
	|	Т.Регистратор КАК ДокументДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВосстановлениеРезервовПодОбесценениеЗапасов) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ВосстановлениеРезервовПодОбесценениеЗапасов) КАК НастройкаХозяйственнойОперации,
	|	Т.ИдентификаторФинЗаписи
	|ПОМЕСТИТЬ СписаниеОтклоненийВыручкаИСебестоимостьРезервы
	|ИЗ
	|	ВтДанныеТаблицаКорректировки КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПартнера
	|	ПО (АналитикаПартнера.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|		И (АналитикаПартнера.Организация = Т.Организация)
	|		И (АналитикаПартнера.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
	|		И (АналитикаПартнера.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|		И (АналитикаПартнера.НаправлениеДеятельности = Т.НаправлениеДеятельности)
	|ГДЕ
	|	Т.РезервПодОбесценениеУпр <> 0 ИЛИ Т.РезервПодОбесценениеРегл <> 0
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	ИмяВременнойТаблицы = "ВтСписаниеОтклоненийВыручка";
	ИмяВременнойТаблицыИсточник = "СписаниеОтклоненийВыручкаИСебестоимостьРезервы";
	
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, ИмяВременнойТаблицыИсточник);
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);

	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, ИмяВременнойТаблицыИсточник, ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
	#КонецОбласти
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвиженияИзВременныхТаблиц(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ПартииСКорректировкамиИИсправлениями, ВтДанныеТаблицаКорректировки,
		|СписаниеОтклоненийПрочиеДоходыРасходы, СписаниеОтклоненийВыручкаИСебестоимостьРезервы,
		|ВтСписаниеОтклоненийПрочиеДоходы, ВтСписаниеОтклоненийПрочиеРасходы, ВтСписаниеОтклоненийВыручка");
	
КонецПроцедуры

Процедура СформироватьДвиженияПрочиеРасходыДопРасходыЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений, РасходныеДвижения = Истина)

	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	
	КопируемыеПоля = "
	|Период, ВидДвижения, Регистратор, НастройкаХозяйственнойОперации, ИдентификаторФинЗаписи";

	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	СтруктураПараметров = Новый Структура();
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	УсловиеГде = "";
	// Заполним дополнительные свойства движения
	Если РасходныеДвижения Тогда
		
		ИмяВременнойТаблицы = "втПрочиеРасходыДополнительныеРасходыРасходныеДвижения";
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"СлужебноеВидДвиженияПриход", "ЛОЖЬ");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"Организация", "Организация");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"Подразделение", "Подразделение");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"НаправлениеДеятельности", "НаправлениеДеятельности");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"СтатьяРасходов", "СтатьяРасходов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"АналитикаРасходов", "АналитикаРасходов");
		// Для НДС налогового агента используется корреспондеция "ПрочиеРасходы-ПрочиеРасходы", поэтому для таких
		//	случаев необходимо заполнять кор. часть регистра, в остальных случаях (например для корреспонденции
		//	СебестоимостьТоваров - ПрочиеРасходы) кор. часть не заполняется, так как движение должно быть только 1.
		ШаблонЗаполненияКорПоля = "ВЫБОР
		|		КОГДА АналитикаУчетаНоменклатуры = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|		  ИЛИ АналитикаУчетаНоменклатуры = НЕОПРЕДЕЛЕНО
		|		ТОГДА %1
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ";
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"КорСтатьяРасходов", СтрШаблон(ШаблонЗаполненияКорПоля, "КорСтатьяРасходов"));
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"КорАналитикаРасходов", СтрШаблон(ШаблонЗаполненияКорПоля, "КорАналитикаРасходов"));
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"КорПодразделение", СтрШаблон(ШаблонЗаполненияКорПоля, "КорПодразделение"));
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"КорНаправлениеДеятельности", СтрШаблон(ШаблонЗаполненияКорПоля, "КорНаправлениеДеятельности"));
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"ХозяйственнаяОперация", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРасходовНаСебестоимость)");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"НастройкаХозяйственнойОперации", "ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РаспределениеРасходовНаСебестоимость)");
		// В расходном движении по сумме без НДС дополнительных условий (как в расходе) не требуюется.
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"СуммаБезНДС", "ПостатейныеПеременныеБезНДС + ПостатейныеПостоянныеБезНДС + ДопРасходыБезНДС");

	Иначе
		
		ИмяВременнойТаблицы = "втПрочиеРасходыДополнительныеРасходыПриходныеДвижения";
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"СлужебноеВидДвиженияПриход", "Истина");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"Организация", "КорОрганизация");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"Подразделение", "КорПодразделение");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"НаправлениеДеятельности", "КорНаправлениеДеятельности");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"СтатьяРасходов", "КорСтатьяРасходов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"АналитикаРасходов", "КорАналитикаРасходов");
			
		// Условия по сумме без НДС в приходном движении должны совпадать с условиями в:
		// - см. СкорректироватьСтоимостьСписанияЗапасов и вызываемых методах.
		// - см. РегистрНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы.
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаБезНДС", "
		|ВЫБОР
		|	КОГДА КорСтатьяРасходов.ВариантРаспределенияРасходовУпр В (
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)) ТОГДА
		|		0
		|	ИНАЧЕ
		|		ПостатейныеПеременныеБезНДС + ПостатейныеПостоянныеБезНДС + ДопРасходыБезНДС
		|КОНЕЦ");
		
		УсловиеГде =
			"ТИПЗНАЧЕНИЯ(КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
			|	И НЕ КорСтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)";
		
	КонецЕсли;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"Сумма", "ПостатейныеПеременныеСНДС + ПостатейныеПостоянныеСНДС + ДопРасходы");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаУпр", "
	|ВЫБОР
	|	КОГДА НЕ &УправленческийУчетОрганизаций ТОГДА
	|		0
	|	ИНАЧЕ
	|		ПостатейныеПеременныеУпр + ПостатейныеПостоянныеУпр + ДопРасходыУпр
	|КОНЕЦ");
	
	СтруктураПараметров.Вставить("УправленческийУчетОрганизаций", ПараметрыРасчета.УправленческийУчетОрганизаций);
	СтруктураПараметров.Вставить("ИспользоватьУчетПрочихДоходовРасходовРегл", ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходовРегл);
	
	// СуммаРегл
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаРегл", "
	|ВЫБОР
	|	КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл ТОГДА
	|		0
	|	ИНАЧЕ
	|		ПостатейныеПеременныеРегл + ПостатейныеПостоянныеРегл + ДопРасходыРегл
	|КОНЕЦ");
	
	// ПостояннаяРазница
	Если РасходныеДвижения Тогда
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостояннаяРазница", "
		|ВЫБОР
		|	КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл ТОГДА
		|		0
		|	ИНАЧЕ
		|		ПостояннаяРазница
		|КОНЕЦ");
	Иначе 
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостояннаяРазница", "
		|ВЫБОР
		|	КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл ТОГДА
		|		0
		|	КОГДА НЕ КорСтатьяРасходов.ПринятиеКНалоговомуУчету ТОГДА
		|		ПостояннаяРазница + ПостатейныеПеременныеРегл + ПостатейныеПостоянныеРегл + ДопРасходыРегл
		|	ИНАЧЕ
		|		ПостояннаяРазница
		|КОНЕЦ");
	КонецЕсли;
	
	// ВременнаяРазница
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВременнаяРазница", "
	|ВЫБОР
	|	КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл ТОГДА
	|		0
	|	ИНАЧЕ
	|		ВременнаяРазница
	|КОНЕЦ");
	
	// НДД
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаНДД", "
	|ВЫБОР
	|	КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл ТОГДА
	|		0
	|	ИНАЧЕ
	|		СтоимостьНДД
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГде, СтруктураПараметров);
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияПрочиеАктивыПассивыДопРасходыЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений, РасходныеДвижения = Истина)

	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя;
	
	КопируемыеПоля = "
	|Период, Регистратор";

	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	СтруктураПараметров = Новый Структура();
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения
	ИмяВременнойТаблицы = "втПрочиеАктивыПассивы";
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"СлужебноеВидДвиженияПриход", "ИСТИНА");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"Организация", "КорОрганизация");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"Подразделение", "КорПодразделение");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"НаправлениеДеятельности", "КорНаправлениеДеятельности");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"Статья", "КорСтатьяАктивовПассивов");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"Аналитика", "КорАналитикаАктивовПассивов");
	
	УсловиеГде =
		"ТИПЗНАЧЕНИЯ(КорСтатьяАктивовПассивов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов)
		|	И НЕ КорСтатьяАктивовПассивов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"Сумма", "ПостатейныеПеременныеСНДС + ПостатейныеПостоянныеСНДС + ДопРасходы");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГде, СтруктураПараметров);
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияПоПрочимАктивамПассивамДопРасходыЗапросом(ПараметрыРасчета, Запрос, СоответствиеВременныхТаблицДвижений)
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Т.Период,
	|	Т.Регистратор,
	// Измерения
	|	Т.КорОрганизация КАК Организация,
	|	Т.КорПодразделение КАК Подразделение,
	|	Т.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.КорСтатьяАктивовПассивов КАК Статья,
	|	Т.КорАналитикаАктивовПассивов КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	// Ресурсы
	|	Т.ДопРасходы + Т.ПостатейныеПостоянныеСНДС + Т.ПостатейныеПеременныеСНДС КАК СуммаСНДС,
	|	Т.ДопРасходыБезНДС + Т.ПостатейныеПостоянныеБезНДС + Т.ПостатейныеПеременныеБезНДС КАК СуммаБезНДС,
	|	Т.ДопРасходыРегл + Т.ПостатейныеПостоянныеРегл + Т.ПостатейныеПеременныеРегл КАК СуммаРегл,
	|	Т.ДопРасходыУпр + Т.ПостатейныеПостоянныеУпр + Т.ПостатейныеПеременныеУпр КАК СуммаУпр,
	|	Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|	Т.ВременнаяРазница КАК ВременнаяРазница,
	// Реквизиты
	|	Т.Регистратор КАК ДокументДвижения,
	|	Т.НастройкаХозяйственнойОперации,
	|	Т.ИдентификаторФинЗаписи
	|
	|ПОМЕСТИТЬ ВтТаблицаДвиженияПоПрочимАктивамПассивам
	|ИЗ
	|	ДвиженияТаблицаКорректировки КАК Т
	|ГДЕ
	|	Т.КорСтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И Т.КорСтатьяАктивовПассивов ССЫЛКА ПланВидовХарактеристик.СтатьиАктивовПассивов
	|
	// Передача в филиал (на стороне отправителя)
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Период,
	|	Т.Регистратор КАК Регистратор,
	// Измерения
	|	Т.Организация,
	|	ВЫБОР
	|		КОГДА НЕ Т.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение ЕСТЬ NULL
	|		ТОГДА Т.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение
	|		ИНАЧЕ Т.АналитикаУчетаНоменклатуры.Подразделение
	|	КОНЕЦ КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасчетыСФилиалами) КАК Статья,
	|	Т.КорОрганизация КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	// Ресурсы
	|	Т.ДопРасходы + Т.ПостатейныеПостоянныеСНДС + Т.ПостатейныеПеременныеСНДС КАК СуммаСНДС,
	|	Т.ДопРасходыБезНДС + Т.ПостатейныеПостоянныеБезНДС + Т.ПостатейныеПеременныеБезНДС КАК СуммаБезНДС,
	|	Т.ДопРасходыРегл + Т.ПостатейныеПостоянныеРегл + Т.ПостатейныеПеременныеРегл КАК СуммаРегл,
	|	Т.ДопРасходыУпр + Т.ПостатейныеПостоянныеУпр + Т.ПостатейныеПеременныеУпр КАК СуммаУпр,
	|	Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|	Т.ВременнаяРазница КАК ВременнаяРазница,
	// Реквизиты
	|	Т.ДокументДвижения,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПеремещениеТоваровМеждуФилиалами) КАК НастройкаХозяйственнойОперации,
	|	Т.ИдентификаторФинЗаписи
	|ИЗ
	|	ДвиженияТаблицаКорректировки КАК Т
	|ГДЕ
	|	Т.ПередачаМеждуОрганизациями
	|
	// Передача в филиал (на стороне получателя)
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Период,
	|	Т.Регистратор КАК Регистратор,
	// Измерения
	|	Т.КорОрганизация КАК Организация,
	|	ВЫБОР
	|		КОГДА НЕ Т.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение ЕСТЬ NULL
	|		ТОГДА Т.АналитикаУчетаНоменклатуры.СкладскаяТерритория.Подразделение
	|		ИНАЧЕ Т.АналитикаУчетаНоменклатуры.Подразделение
	|	КОНЕЦ КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасчетыСФилиалами) КАК Статья,
	|	Т.Организация КАК Аналитика,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	// Ресурсы
	|	Т.ДопРасходы + Т.ПостатейныеПостоянныеСНДС + Т.ПостатейныеПеременныеСНДС КАК СуммаСНДС,
	|	Т.ДопРасходыБезНДС + Т.ПостатейныеПостоянныеБезНДС + Т.ПостатейныеПеременныеБезНДС КАК СуммаБезНДС,
	|	Т.ДопРасходыРегл + Т.ПостатейныеПостоянныеРегл + Т.ПостатейныеПеременныеРегл КАК СуммаРегл,
	|	Т.ДопРасходыУпр + Т.ПостатейныеПостоянныеУпр + Т.ПостатейныеПеременныеУпр КАК СуммаУпр,
	|	Т.ПостояннаяРазница КАК ПостояннаяРазница,
	|	Т.ВременнаяРазница КАК ВременнаяРазница,
	// Реквизиты
	|	Т.ДокументДвижения,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПеремещениеТоваровМеждуФилиалами) КАК НастройкаХозяйственнойОперации,
	|	Т.ИдентификаторФинЗаписи
	|ИЗ
	|	ДвиженияТаблицаКорректировки КАК Т
	|ГДЕ
	|	Т.ПередачаМеждуОрганизациями
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтДвиженияПоПрочимАктивамПассивам";
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтТаблицаДвиженияПоПрочимАктивамПассивам");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтТаблицаДвиженияПоПрочимАктивамПассивам", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры


Процедура СформироватьДвиженияСебестоимостьТоваровДополнительныхРасходовЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений, РасходныеДвижения = Ложь)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	Если РасходныеДвижения Тогда
		ИмяВременнойТаблицы = "ВтСебестоимостьТоваров_ДополнительныеРасходыРасход";
		ИмяКорВременнойТаблицы = "ВтСебестоимостьТоваров_ДополнительныеРасходыКорРасход";
	Иначе
		ИмяВременнойТаблицы = "ВтСебестоимостьТоваров_ДополнительныеРасходыПриход";
		ИмяКорВременнойТаблицы = "ВтСебестоимостьТоваров_ДополнительныеРасходыКорПриход";
	КонецЕсли;
	
	// Кор. стоимость не включается в список полей.
	КопируемыеПоля = "
	|Период, Регистратор, АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, Организация, ХозяйственнаяОперация,
	|НастройкаХозяйственнойОперации, ИдентификаторФинЗаписи, Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета,
	|ВидДеятельностиНДС, ТипЗаписи, ДокументДвижения,
	|ПостояннаяРазница, ВременнаяРазница, ДопРасходы, ДопРасходыБезНДС, ДопРасходыРегл, ДопРасходыУпр,
	|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС, ПостатейныеПеременныеРегл, ПостатейныеПеременныеУпр,
	|ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС, ПостатейныеПостоянныеРегл, ПостатейныеПостоянныеУпр,
	|СтоимостьНДД";
	
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);

	ТаблицаОписанияКорПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияКорПолей, КопируемыеПоля);
	
	Если РасходныеДвижения Тогда
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ЛОЖЬ");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", "КорОрганизация");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяРасходовСписания", "КорСтатьяРасходов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаРасходов", "КорАналитикаРасходов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Подразделение", "КорПодразделение");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяАктивовПассивов", "КорСтатьяАктивовПассивов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаАктивовПассивов", "КорАналитикаАктивовПассивов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НастройкаСчетовУчета", "КорНастройкаСчетовУчета");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "КорНаправлениеДеятельности", "КорНаправлениеДеятельности");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаУчетаПоПартнерам", "АналитикаУчетаПоПартнерам");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ЗаказКлиента", "ЗаказКлиента");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"ТипЗаписи", "ВЫБОР КОГДА ПередачаМеждуОрганизациями ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам) ИНАЧЕ ТипЗаписи КОНЕЦ");
		
		// ПеремещениеТоваровМеждуФилиалами, приход
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "Организация", "КорОрганизация");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "СтатьяРасходовСписания", "НЕОПРЕДЕЛЕНО");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "АналитикаРасходов", "НЕОПРЕДЕЛЕНО");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "СтатьяАктивовПассивов", "ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасчетыСФилиалами)");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "АналитикаАктивовПассивов", "Организация");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "НастройкаСчетовУчета", "НЕОПРЕДЕЛЕНО");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "КорНаправлениеДеятельности", "НЕОПРЕДЕЛЕНО");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей,
			"ТипЗаписи", "ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам)");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей,
			"ХозяйственнаяОперация", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей,
			"НастройкаХозяйственнойОперации", "ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПеремещениеТоваровМеждуФилиалами)");
		
	Иначе
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", "Организация");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяРасходовСписания", "СтатьяРасходов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаРасходов", "АналитикаРасходов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Подразделение", "Подразделение");
		// Поля АналитикаУчетаПоПартнерам и ЗаказКлиента в движении Приход заполняются только при методе оценки "Средняя за месяц".
		// Эти поля используются в функции ТекстРаспределениеДопРасходов() общего модуля РасчетСебестоимостиНДС
		// в запросе формирования временной таблицы ВТБазаРаспределенияДопРасходовБезПартий.  
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаУчетаПоПартнерам",
			"ВЫБОР КОГДА Организация В (&ОрганизацииСУчетомПоСредней) ТОГДА АналитикаУчетаПоПартнерам
			|	ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) КОНЕЦ");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ЗаказКлиента",
			"ВЫБОР КОГДА Организация В (&ОрганизацииСУчетомПоСредней) ТОГДА ЗаказКлиента
			|	ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"ТипЗаписи", "ВЫБОР КОГДА ПередачаМеждуОрганизациями ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам) ИНАЧЕ ТипЗаписи КОНЕЦ");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"ХозяйственнаяОперация", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРасходовНаСебестоимость)");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"НастройкаХозяйственнойОперации", "ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РаспределениеРасходовНаСебестоимость)");
		
		// ПеремещениеТоваровМеждуФилиалами, расход
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "СлужебноеВидДвиженияПриход", "ЛОЖЬ");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "ВидДвижения", "ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "Организация", "Организация");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "КорОрганизация", "КорОрганизация");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "СтатьяРасходовСписания", "НЕОПРЕДЕЛЕНО");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "АналитикаРасходов", "НЕОПРЕДЕЛЕНО");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "СтатьяАктивовПассивов", "ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасчетыСФилиалами)");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей, "АналитикаАктивовПассивов", "КорОрганизация");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей,
			"ТипЗаписи", "ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.РаспределениеПоВыбывшимТоварам)");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей,
			"ХозяйственнаяОперация", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияКорПолей,
			"НастройкаХозяйственнойОперации", "ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПеремещениеТоваровМеждуФилиалами)");
		
	КонецЕсли;
	
	УсловиеГДЕ = "НЕ АналитикаУчетаНоменклатуры = НЕОПРЕДЕЛЕНО";
	Если РасходныеДвижения Тогда
		// Заполнение полей для отбора см. в РасчетСебестоимостиПостатейныеЗатраты.ПоказателиБазыРаспределенияПриемниковПрошлыхПериодов()
		УсловиеГДЕ = УсловиеГДЕ + 
			" И (НЕ (КорСтатьяРасходов В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка))
			|		И КорСтатьяАктивовПассивов В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка))))
			|	ИЛИ (НЕ АналитикаУчетаПоПартнерам ЕСТЬ NULL
			|		И ТИПЗНАЧЕНИЯ(АналитикаУчетаПоПартнерам) = ТИП(Справочник.КлючиАналитикиУчетаПоПартнерам)
			|		И АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка))";
	КонецЕсли;

	КорУсловиеГДЕ = "НЕ АналитикаУчетаНоменклатуры = НЕОПРЕДЕЛЕНО И ПередачаМеждуОрганизациями";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГДЕ);
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияКорПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяКорВременнойТаблицы, КорУсловиеГДЕ);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяКорВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияСебестоимостьТоваровНДСДополнительныхРасходовЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений, РасходныеДвижения = Ложь)
	
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	Если РасходныеДвижения Тогда
		ИмяВременнойТаблицы = "ВтСебестоимостьТоваров_НДСДополнительныеРасходыРасход";
	Иначе
		ИмяВременнойТаблицы = "ВтСебестоимостьТоваров_НДСДополнительныеРасходыПриход";
	КонецЕсли;
	
	// Кор. стоимость не включается в список полей.
	КопируемыеПоля = "
	|Период, Регистратор, АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, Организация, ХозяйственнаяОперация,
	|НастройкаХозяйственнойОперации, Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС, ТипЗаписи,
	|СтоимостьРегл, СтоимостьУпр";
	
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	Если РасходныеДвижения Тогда
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ЛОЖЬ");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", "Организация");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "КорОрганизация", "ВЫБОР КОГДА Организация <> КорОрганизация ТОГДА КорОрганизация ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяРасходовСписания", "КорСтатьяРасходов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаРасходов", "КорАналитикаРасходов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяАктивовПассивов", "КорСтатьяАктивовПассивов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаАктивовПассивов", "КорАналитикаАктивовПассивов");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Подразделение", "КорПодразделение");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "КорНаправлениеДеятельности", "КорНаправлениеДеятельности");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаУчетаПоПартнерам", "АналитикаУчетаПоПартнерам");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ИдентификаторФинЗаписи", "ИдентификаторФинЗаписи");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"ХозяйственнаяОперация",
				"ВЫБОР КОГДА КорОрганизация <> Организация
				|	ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
				|	ИНАЧЕ ХозяйственнаяОперация
				|КОНЕЦ");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"НастройкаХозяйственнойОперации",
				"ВЫБОР КОГДА КорОрганизация <> Организация
				|	ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПеремещениеТоваровМеждуФилиалами)
				|	ИНАЧЕ НастройкаХозяйственнойОперации
				|КОНЕЦ");
	Иначе
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СлужебноеВидДвиженияПриход", "ИСТИНА");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Организация", "КорОрганизация");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ИдентификаторФинЗаписи", "&ИдентификаторНеиспользуемойФинЗаписи");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"ХозяйственнаяОперация",
				"ВЫБОР КОГДА КорОрганизация <> Организация
				|	ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами)
				|	ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРасходовНаСебестоимость)
				|КОНЕЦ");
		РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
			"НастройкаХозяйственнойОперации",
				"ВЫБОР КОГДА КорОрганизация <> Организация
				|	ТОГДА ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПеремещениеТоваровМеждуФилиалами)
				|	ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РаспределениеРасходовНаСебестоимость)
				|КОНЕЦ");
	КонецЕсли;
	
	УсловиеГДЕ = "НЕ АналитикаУчетаНоменклатуры = НЕОПРЕДЕЛЕНО
		|	И (СтоимостьРегл <> 0 ИЛИ СтоимостьУпр <> 0)";
	
	Если РасходныеДвижения Тогда
		УсловиеГДЕ = УсловиеГДЕ + 
			" И НЕ (КорСтатьяРасходов = НЕОПРЕДЕЛЕНО
			|	И КорСтатьяАктивовПассивов = НЕОПРЕДЕЛЕНО)";
	КонецЕсли;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировкиНДС", ИмяВременнойТаблицы, УсловиеГДЕ);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

//++ Локализация

Процедура СформироватьДвиженияПрочиеРасходыНДСДопРасходыЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений, РасходныеДвижения = Истина)

	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	
	КопируемыеПоля = "
	|Период, ВидДвижения, Регистратор, НастройкаХозяйственнойОперации, ИдентификаторФинЗаписи";

	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	СтруктураПараметров = Новый Структура();
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	ИмяВременнойТаблицы = "ВтПрочиеРасходыНДСДопРасходы";
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"СлужебноеВидДвиженияПриход", "Истина");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"Организация", "КорОрганизация");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"Подразделение", "КорПодразделение");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"НаправлениеДеятельности", "КорНаправлениеДеятельности");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"СтатьяРасходов", "КорСтатьяРасходов");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"АналитикаРасходов", "КорАналитикаРасходов");
	
	УсловиеГде =
		"ТИПЗНАЧЕНИЯ(КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
		|	И НЕ КорСтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)";
			
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаУпр", "
	|ВЫБОР
	|	КОГДА НЕ &УправленческийУчетОрганизаций ТОГДА
	|		0
	|	ИНАЧЕ
	|		СтоимостьУпр
	|КОНЕЦ");
	
	СтруктураПараметров.Вставить("УправленческийУчетОрганизаций", ПараметрыРасчета.УправленческийУчетОрганизаций);
	СтруктураПараметров.Вставить("ИспользоватьУчетПрочихДоходовРасходовРегл", ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходовРегл);
	
	// СуммаРегл
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СуммаРегл", "
	|ВЫБОР
	|	КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл ТОГДА
	|		0
	|	ИНАЧЕ
	|		СтоимостьРегл
	|КОНЕЦ");
	
	// ПостояннаяРазница
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостояннаяРазница", "
	|ВЫБОР
	|	КОГДА НЕ &ИспользоватьУчетПрочихДоходовРасходовРегл ТОГДА
	|		0
	|	КОГДА НЕ КорСтатьяРасходов.ПринятиеКНалоговомуУчету ТОГДА
	|		СтоимостьРегл
	|	ИНАЧЕ
	|		0
	|КОНЕЦ");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировкиНДС", ИмяВременнойТаблицы, УсловиеГде, СтруктураПараметров);
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

//-- Локализация

Процедура СформироватьДвиженияНоменклатураДоходыДопРасходыЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений)

	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.Имя;
	
	КопируемыеПоля = "
	|Период, Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, ТипЗапасов,
	|ИсточникГФУНоменклатуры, ДопРасходы, ДопРасходыБезНДС, ДопРасходыУпр, ДопРасходыРегл,
	|ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС, ПостатейныеПостоянныеУпр, ПостатейныеПостоянныеРегл,
	|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС, ПостатейныеПеременныеУпр, ПостатейныеПеременныеРегл,
	|ПостояннаяРазница, ВременнаяРазница";

	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	СтруктураПараметров = Новый Структура();
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения
		
	ИмяВременнойТаблицы = "втДвиженияНоменклатураДоходыРасходы";
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"Организация", "КорОрганизация");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Подразделение",
	"ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	| И НЕ КорСтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	ТОГДА КорПодразделение
	|	ИНАЧЕ Подразделение КОНЕЦ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"НаправлениеДеятельностиНоменклатуры", 
			"ЕСТЬNULL(АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности,
			|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"Склад", "АналитикаУчетаНоменклатуры.МестоХранения");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтатьяДоходовРасходов",
	"ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	| И НЕ КорСтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	ТОГДА КорСтатьяРасходов
	|	ИНАЧЕ СтатьяРасходов КОНЕЦ");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "АналитикаРасходов",
	"ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(КорСтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиРасходов)
	| И НЕ КорСтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	ТОГДА КорАналитикаРасходов
	|	ИНАЧЕ АналитикаРасходов КОНЕЦ");
		
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"ДокументДвижения", "Регистратор");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"ХозяйственнаяОперация", "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРасходовНаСебестоимость)");
		
	УсловиеГде =
		"ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачислениеНДСНалоговымАгентом)
		|И ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
		|И ХозяйственнаяОперация <> НЕОПРЕДЕЛЕНО
		|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГде, СтруктураПараметров);
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

Процедура СформироватьДвиженияВыручкаИСебестоимостьДопРасходыЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений)

	ИмяРегистра = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	
	КопируемыеПоля = "
	|Период, Регистратор, ХозяйственнаяОперация, АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, Партия,
	|АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС, АналитикаУчетаПоПартнерам, ЗаказКлиента,
	|Менеджер, Склад, Соглашение, Договор, ТипЗапасов, ИсточникГФУРасчетов, ИсточникГФУНоменклатуры,
	|НаправлениеДеятельностиКонтрагента,
	|НастройкаХозяйственнойОперации, ИдентификаторФинЗаписи,
	|ДопРасходы, ДопРасходыБезНДС, ДопРасходыУпр, ДопРасходыРегл,
	|ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС, ПостатейныеПостоянныеУпр, ПостатейныеПостоянныеРегл,
	|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС, ПостатейныеПеременныеУпр, ПостатейныеПеременныеРегл,
	|ПостояннаяРазница, ВременнаяРазница";

	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	СтруктураПараметров = Новый Структура();
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения
		
	ИмяВременнойТаблицы = "втДвиженияВыручкаИСебестоимость";
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"Подразделение", "КорПодразделение");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"ДокументДвижения", "Регистратор");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"НалогообложениеНДС", "ВидДеятельностиНДСВыбытия");
		
	УсловиеГде =
		"ТИПЗНАЧЕНИЯ(АналитикаУчетаПоПартнерам) = ТИП(Справочник.КлючиАналитикиУчетаПоПартнерам)
		|	И НЕ АналитикаУчетаПоПартнерам = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировки", ИмяВременнойТаблицы, УсловиеГде, СтруктураПараметров);
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

//++ Локализация

Процедура СформироватьДвиженияВыручкаИСебестоимостьНДСДопРасходыЗапросом(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений)

	ИмяРегистра = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	
	КопируемыеПоля = "
	|Период, Регистратор, ХозяйственнаяОперация, АналитикаУчетаНоменклатуры, РазделУчета, ВидЗапасов, Партия,
	|АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС, АналитикаУчетаПоПартнерам, ЗаказКлиента,
	|Менеджер, Склад, Соглашение, Договор, ТипЗапасов, ИсточникГФУРасчетов, ИсточникГФУНоменклатуры,
	|НаправлениеДеятельностиКонтрагента,
	|СтоимостьУпр, СтоимостьРегл";

	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	
	СтруктураПараметров = Новый Структура();
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения
		
	ИмяВременнойТаблицы = "втДвиженияНДСВыручкаИСебестоимость";
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"Подразделение", "КорПодразделение");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей,
		"ДокументДвижения", "Регистратор");
		
	УсловиеГде =
		"ТИПЗНАЧЕНИЯ(АналитикаУчетаПоПартнерам) = ТИП(Справочник.КлючиАналитикиУчетаПоПартнерам)
		|	И НЕ АналитикаУчетаПоПартнерам = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, ИмяРегистра,
		"ДвиженияТаблицаКорректировкиНДС", ИмяВременнойТаблицы, УсловиеГде, СтруктураПараметров);
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
КонецПроцедуры

//-- Локализация

#Область Описание_СформироватьДвиженияПоОтклонениямВСтоимостиТоваров

// Процедура СформироватьДвиженияПоОтклонениямВСтоимостиТоваров() формирует движения по регистрам "Прочие доходы" и
// "Прочие расходы" на сумму отклонений в стоимости товаров, работ и услуг.
// 
// Отклонения в стоимости образуются при фактуровке поставок в этапе "ФактуровкаПоставок".
// Исходные данные по отклонениям в стоимости формируются в процедуре ЗаполнитьРасчетнуюПартиюФактуровкиПоставок() 
// #Область ОтклоненияВСтоимости.
// Отклонения в стоимости товаров могут иметь следующие типы записей:
// - ОтклонениеВСтоимостиНаПрочиеДоходы - если сумма фактуровки меньше суммы неотфактурованной поставки.
//		Такие отклонения отражаются в регистре "Прочие доходы".
// - ОтклонениеВСтоимостиНаПрочиеРасходы - если сумма фактуровки больше суммы неотфактурованной поставки.
//		Такие отклонения отражаются в регистре "Прочие расходы".
// Отклонения в фактуровке работ и услуг, списанных на расходы, всегда отражается в регистре "Прочие расходы".
//
// Для целей раздельного учета по видам деятельности НДС отклонения в стоимости учитываются в следующих процедурах:
// - для расходов, распределяемых на себестоимость товаров - в процедуре ТекстРаспределениеДопРасходов()
// - для расходов, распределяемых на себестоимость производства - в процедуре ТекстИнициализацияРаспределениеПартийНДСФИФОСкользящая()
//	временная таблица ВТПартииПрочихДляРаспределения2_4

#КонецОбласти

Процедура СформироватьДвиженияПоОтклонениямВСтоимостиТоваров(ПараметрыРасчета)
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СформироватьДвиженияПоОтклонениямВСтоимостиТоваров");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	СуществующиеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета);
	СоответствиеВременныхТаблицДвижений = Новый Соответствие;

	#Область ОтклоненияВСтоимостиПрочиеДоходы
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	// Измерения
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.СтатьяДоходов,
	|	ДД.АналитикаДоходов,
	// Ресурсы
	|	-(ДД.Стоимость
	|		+ ДД.ДопРасходы
	|		+ ДД.Трудозатраты
	|		+ ДД.ПостатейныеПостоянныеСНДС
	|		+ ДД.ПостатейныеПеременныеСНДС) КАК Сумма,
	|	-(ДД.СтоимостьРегл
	|		+ ДД.ДопРасходыРегл
	|		+ ДД.ТрудозатратыРегл
	|		+ ДД.ПостатейныеПостоянныеРегл
	|		+ ДД.ПостатейныеПеременныеРегл
	|		+ ДД.РезервПодОбесценениеРегл) КАК СуммаРегл,
	|	-(ДД.СтоимостьУпр
	|		+ ДД.ДопРасходыУпр
	|		+ ДД.ТрудозатратыУпр
	|		+ ДД.ПостатейныеПостоянныеУпр
	|		+ ДД.ПостатейныеПеременныеУпр
	|		+ ДД.РезервПодОбесценениеУпр) КАК СуммаУпр,
	// Реквизиты
	|	ДД.ХозяйственнаяОперация,
	|	ДД.ИдентификаторСтроки,
	|	ДД.НастройкаХозяйственнойОперации,
	|	ДД.ИдентификаторФинЗаписи,
	|	ЕСТЬNULL(РегистраторыРасчета.Ссылка,
	|		ЗНАЧЕНИЕ(Документ.РегистраторРасчетаСебестоимости.ПустаяСсылка)) КАК ДокументРасчета,
	|	&РежимЗакрытияМесяца КАК РежимЗакрытияМесяца
	|
	|ПОМЕСТИТЬ ВтДвиженияПрочиеДоходы
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторыРасчетаСебестоимости КАК РегистраторыРасчета
	|		ПО РегистраторыРасчета.Организация = ДД.Организация
	|ГДЕ
	|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейпартий.ОтклонениеВСтоимостиНаПрочиеДоходы)
	|	И ДД.СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|	И ДД.РасчетПартий
	|	И НЕ ДД.Сторно
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтПрочиеДоходыОтклоненияВСтоимости";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеДоходы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияПрочиеДоходы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияПрочиеДоходы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
	#КонецОбласти
	
	#Область ОтклоненияВСтоимостиПрочиеРасходы
	
	Запрос.Текст = "
	// Формирование движений по прочим расходам должно соответствовать запросу формирования временной таблицы СуммыРасходов
	// в функции ТекстСуммыПрочихРасходов().
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	// Измерения
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.СтатьяРасходовСписания КАК СтатьяРасходов,
	|	ДД.АналитикаРасходов,
	// Ресурсы
	|	(ДД.Стоимость
	|		+ ДД.ДопРасходы
	|		+ ДД.Трудозатраты
	|		+ ДД.ПостатейныеПостоянныеСНДС
	|		+ ДД.ПостатейныеПеременныеСНДС) КАК Сумма,
	|	(ДД.СтоимостьБезНДС
	|		+ ДД.ДопРасходыБезНДС
	|		+ ДД.Трудозатраты
	|		+ ДД.ПостатейныеПостоянныеБезНДС
	|		+ ДД.ПостатейныеПеременныеБезНДС) КАК СуммаБезНДС,
	|	(ДД.СтоимостьРегл
	|		+ ДД.ДопРасходыРегл
	|		+ ДД.ТрудозатратыРегл
	|		+ ДД.ПостатейныеПостоянныеРегл
	|		+ ДД.ПостатейныеПеременныеРегл
	|		+ ДД.РезервПодОбесценениеРегл) КАК СуммаРегл,
	|	(ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(ВЫРАЗИТЬ(ДД.СтатьяРасходовСписания КАК ПланВидовХарактеристик.СтатьиРасходов).ПринятиеКНалоговомуУчету, ИСТИНА)
	|			ТОГДА ДД.СтоимостьРегл
	|				+ ДД.ДопРасходыРегл
	|				+ ДД.ТрудозатратыРегл
	|				+ ДД.ПостатейныеПостоянныеРегл
	|				+ ДД.ПостатейныеПеременныеРегл
	|				+ ДД.РезервПодОбесценениеРегл
	|		ИНАЧЕ ДД.ПостояннаяРазница КОНЕЦ) КАК ПостояннаяРазница,
	|	ДД.ВременнаяРазница КАК ВременнаяРазница,
	|	ДД.СтоимостьНДД КАК СуммаНДД,
	|	(ДД.СтоимостьУпр
	|		+ ДД.ДопРасходыУпр
	|		+ ДД.ТрудозатратыУпр
	|		+ ДД.ПостатейныеПостоянныеУпр
	|		+ ДД.ПостатейныеПеременныеУпр
	|		+ ДД.РезервПодОбесценениеУпр) КАК СуммаУпр,
	// Реквизиты
	|	ДД.ХозяйственнаяОперация,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.ДокументДвижения,
	|	ДД.ИдентификаторСтроки,
	|	ДД.НастройкаХозяйственнойОперации,
	|	ДД.ИдентификаторФинЗаписи,
	|	ЕСТЬNULL(РегистраторыРасчета.Ссылка,
	|		ЗНАЧЕНИЕ(Документ.РегистраторРасчетаСебестоимости.ПустаяСсылка)) КАК ДокументРасчета,
	|	&РежимЗакрытияМесяца КАК РежимЗакрытияМесяца
	|
	|ПОМЕСТИТЬ ВтДвиженияПрочиеРасходы
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторыРасчетаСебестоимости КАК РегистраторыРасчета
	|		ПО РегистраторыРасчета.Организация = ДД.Организация
	|ГДЕ
	|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейпартий.ОтклонениеВСтоимостиНаПрочиеРасходы)
	|	И ДД.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И ДД.РасчетПартий
	|	И НЕ ДД.Сторно
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтПрочиеРасходыОтклоненияВСтоимости";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияПрочиеРасходы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияПрочиеРасходы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
	#КонецОбласти
	
	#Область ОтклоненияВСтоимостиНоменклатураДоходыРасходы

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	// Измерения
	|	ДД.ХозяйственнаяОперация,
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ДД.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ДД.ВидЗапасов,
	|	ДД.КорНаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	ДД.СтатьяДоходов КАК СтатьяДоходовРасходов,
	|	ДД.АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	// Ресурсы
	|	-ДД.Стоимость КАК Стоимость,
	|	-ДД.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	-ДД.СтоимостьУпр КАК СтоимостьУпр,
	|	-ДД.СтоимостьРегл КАК СтоимостьРегл,
	|	-ДД.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	-ДД.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	-ДД.ДопРасходы КАК ДопРасходы,
	|	-ДД.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|	-ДД.ДопРасходыУпр КАК ДопРасходыУпр,
	|	-ДД.ДопРасходыРегл КАК ДопРасходыРегл,
	|	-ДД.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	-ДД.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	-ДД.ПостатейныеПостоянныеУпр КАК ПостатейныеПостоянныеУпр,
	|	-ДД.ПостатейныеПостоянныеРегл КАК ПостатейныеПостоянныеРегл,
	|	-ДД.Трудозатраты КАК Трудозатраты,
	|	-ДД.ТрудозатратыУпр КАК ТрудозатратыУпр,
	|	-ДД.ТрудозатратыРегл КАК ТрудозатратыРегл,
	|	-ДД.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	-ДД.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	|	-ДД.ПостатейныеПеременныеУпр КАК ПостатейныеПеременныеУпр,
	|	-ДД.ПостатейныеПеременныеРегл КАК ПостатейныеПеременныеРегл,
	|	-ДД.ПостояннаяРазница КАК ПостояннаяРазница,
	|	-ДД.ВременнаяРазница КАК ВременнаяРазница,
	|	-ДД.РезервПодОбесценениеРегл КАК РезервПодОбесценениеРегл,
	|	-ДД.РезервПодОбесценениеУпр КАК РезервПодОбесценениеУпр,
	// Реквизиты
	|	(ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ДД.ВидЗапасов
	|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры.Номенклатура КОНЕЦ) КАК ИсточникГФУНоменклатуры
	|
	|ПОМЕСТИТЬ ВтДвиженияНоменклатураДоходыРасходы
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
	|ГДЕ
	|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейпартий.ОтклонениеВСтоимостиНаПрочиеДоходы)
	|	И ДД.СтатьяДоходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|	И ДД.РасчетПартий
	|	И НЕ ДД.Сторно
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	// Измерения
	|	ДД.ХозяйственнаяОперация,
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.АналитикаУчетаНоменклатуры.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	ДД.АналитикаУчетаНоменклатуры,
	|	ДД.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ДД.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ДД.ВидЗапасов,
	|	ДД.КорНаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	ДД.СтатьяРасходовСписания КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	ДД.АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	// Ресурсы
	|	ДД.Стоимость КАК Стоимость,
	|	ДД.СтоимостьБезНДС КАК СтоимостьБезНДС,
	|	ДД.СтоимостьУпр КАК СтоимостьУпр,
	|	ДД.СтоимостьРегл КАК СтоимостьРегл,
	|	ДД.СтоимостьЗабалансовая КАК СтоимостьЗабалансовая,
	|	ДД.СтоимостьЗабалансоваяРегл КАК СтоимостьЗабалансоваяРегл,
	|	ДД.ДопРасходы КАК ДопРасходы,
	|	ДД.ДопРасходыБезНДС КАК ДопРасходыБезНДС,
	|	ДД.ДопРасходыУпр КАК ДопРасходыУпр,
	|	ДД.ДопРасходыРегл КАК ДопРасходыРегл,
	|	ДД.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	ДД.ПостатейныеПостоянныеБезНДС КАК ПостатейныеПостоянныеБезНДС,
	|	ДД.ПостатейныеПостоянныеУпр КАК ПостатейныеПостоянныеУпр,
	|	ДД.ПостатейныеПостоянныеРегл КАК ПостатейныеПостоянныеРегл,
	|	ДД.Трудозатраты КАК Трудозатраты,
	|	ДД.ТрудозатратыУпр КАК ТрудозатратыУпр,
	|	ДД.ТрудозатратыРегл КАК ТрудозатратыРегл,
	|	ДД.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	ДД.ПостатейныеПеременныеБезНДС КАК ПостатейныеПеременныеБезНДС,
	|	ДД.ПостатейныеПеременныеУпр КАК ПостатейныеПеременныеУпр,
	|	ДД.ПостатейныеПеременныеРегл КАК ПостатейныеПеременныеРегл,
	|	ДД.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ДД.ВременнаяРазница КАК ВременнаяРазница,
	|	ДД.РезервПодОбесценениеРегл КАК РезервПодОбесценениеРегл,
	|	ДД.РезервПодОбесценениеУпр КАК РезервПодОбесценениеУпр,
	// Реквизиты
	|	(ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ДД.ВидЗапасов
	|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры.Номенклатура КОНЕЦ) КАК ИсточникГФУНоменклатуры
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
	|ГДЕ
	|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейпартий.ОтклонениеВСтоимостиНаПрочиеРасходы)
	|	И ДД.СтатьяРасходовСписания <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И ДД.РасчетПартий
	|	И НЕ ДД.Сторно
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтДвиженияНоменклатураДоходыРасходыОтклоненияВСтоимости";
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияНоменклатураДоходыРасходы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияНоменклатураДоходыРасходы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
	#КонецОбласти
	
	#Область ОтклоненияВСтоимостиПрочиеАктивыПассивы
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	// Измерения
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.СтатьяАктивовПассивов КАК Статья,
	|	ДД.АналитикаАктивовПассивов КАК Аналитика,
	// Ресурсы
	|	(ДД.Стоимость
	|		+ ДД.ДопРасходы
	|		+ ДД.Трудозатраты
	|		+ ДД.ПостатейныеПостоянныеСНДС
	|		+ ДД.ПостатейныеПеременныеСНДС) КАК Сумма
	// Реквизиты
	|
	|ПОМЕСТИТЬ ВтДвиженияПрочиеАктивыПассивы
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
	|ГДЕ
	|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейпартий.ОтклонениеВСтоимостиНаПрочиеРасходы)
	|	И ДД.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И ДД.СтатьяРасходовСписания = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И ДД.РасчетПартий
	|	И НЕ ДД.Сторно
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	// Измерения
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.СтатьяАктивовПассивов КАК Статья,
	|	ДД.АналитикаАктивовПассивов КАК Аналитика,
	// Ресурсы
	|	-(ДД.Стоимость
	|		+ ДД.ДопРасходы
	|		+ ДД.Трудозатраты
	|		+ ДД.ПостатейныеПостоянныеСНДС
	|		+ ДД.ПостатейныеПеременныеСНДС) КАК Сумма
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
	|ГДЕ
	|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейпартий.ОтклонениеВСтоимостиНаПрочиеДоходы)
	|	И ДД.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И ДД.СтатьяДоходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|	И ДД.РасчетПартий
	|	И НЕ ДД.Сторно
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтАктивыПассивыОтклоненияВСтоимости";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияПрочиеАктивыПассивы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияПрочиеАктивыПассивы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
	#КонецОбласти
	
	#Область ОтклоненияВСтоимостиДвиженияПоПрочимАктивамПассивам
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	// Измерения
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.СтатьяАктивовПассивов КАК Статья,
	|	ДД.АналитикаАктивовПассивов КАК Аналитика,
	|	ДД.НастройкаСчетовУчета КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Дебет) КАК ДебетКредит,
	// Ресурсы
	|	(ДД.Стоимость
	|		+ ДД.ДопРасходы
	|		+ ДД.Трудозатраты
	|		+ ДД.ПостатейныеПостоянныеСНДС
	|		+ ДД.ПостатейныеПеременныеСНДС) КАК СуммаСНДС,
	|	(ДД.СтоимостьБезНДС
	|		+ ДД.ДопРасходыБезНДС
	|		+ ДД.Трудозатраты
	|		+ ДД.ПостатейныеПостоянныеБезНДС
	|		+ ДД.ПостатейныеПеременныеБезНДС) КАК СуммаБезНДС,
	|	(ДД.СтоимостьРегл
	|		+ ДД.ДопРасходыРегл
	|		+ ДД.ТрудозатратыРегл
	|		+ ДД.ПостатейныеПостоянныеРегл
	|		+ ДД.ПостатейныеПеременныеРегл
	|		+ ДД.РезервПодОбесценениеРегл) КАК СуммаРегл,
	|	(ДД.СтоимостьУпр
	|		+ ДД.ДопРасходыУпр
	|		+ ДД.ТрудозатратыУпр
	|		+ ДД.ПостатейныеПостоянныеУпр
	|		+ ДД.ПостатейныеПеременныеУпр
	|		+ ДД.РезервПодОбесценениеУпр) КАК СуммаУпр,
	// Реквизиты
	|	ДД.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ДД.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи
	|
	|ПОМЕСТИТЬ ВтДвиженияПоПрочимАктивамПассивам
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
	|ГДЕ
	|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейпартий.ОтклонениеВСтоимостиНаПрочиеРасходы)
	|	И ДД.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И ДД.СтатьяРасходовСписания = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|	И ДД.РасчетПартий
	|	И НЕ ДД.Сторно
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДД.Период КАК Период,
	|	ДД.Регистратор КАК Регистратор,
	// Измерения
	|	ДД.Организация,
	|	ДД.Подразделение,
	|	ДД.КорНаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДД.СтатьяАктивовПассивов КАК Статья,
	|	ДД.АналитикаАктивовПассивов КАК Аналитика,
	|	ДД.НастройкаСчетовУчета КАК НастройкаСчетовУчета,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийПрочихАктивовПассивов.Кредит) КАК ДебетКредит,
	// Ресурсы
	|	-(ДД.Стоимость
	|		+ ДД.ДопРасходы
	|		+ ДД.Трудозатраты
	|		+ ДД.ПостатейныеПостоянныеСНДС
	|		+ ДД.ПостатейныеПеременныеСНДС) КАК СуммаСНДС,
	|	-(ДД.СтоимостьБезНДС
	|		+ ДД.ДопРасходыБезНДС
	|		+ ДД.Трудозатраты
	|		+ ДД.ПостатейныеПостоянныеБезНДС
	|		+ ДД.ПостатейныеПеременныеБезНДС) КАК СуммаБезНДС,
	|	-(ДД.СтоимостьРегл
	|		+ ДД.ДопРасходыРегл
	|		+ ДД.ТрудозатратыРегл
	|		+ ДД.ПостатейныеПостоянныеРегл
	|		+ ДД.ПостатейныеПеременныеРегл
	|		+ ДД.РезервПодОбесценениеРегл) КАК СуммаРегл,
	|	-(ДД.СтоимостьУпр
	|		+ ДД.ДопРасходыУпр
	|		+ ДД.ТрудозатратыУпр
	|		+ ДД.ПостатейныеПостоянныеУпр
	|		+ ДД.ПостатейныеПеременныеУпр
	|		+ ДД.РезервПодОбесценениеУпр) КАК СуммаУпр,
	// Реквизиты
	|	ДД.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	ДД.ИдентификаторФинЗаписи КАК ИдентификаторФинЗаписи
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК ДД
	|ГДЕ
	|	ДД.ТипЗаписи = ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейпартий.ОтклонениеВСтоимостиНаПрочиеДоходы)
	|	И ДД.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|	И ДД.СтатьяДоходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)
	|	И ДД.РасчетПартий
	|	И НЕ ДД.Сторно
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтДвиженияПоПрочимАктивамПассивамОтклоненияВСтоимости";
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияПоПрочимАктивамПассивам");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияПоПрочимАктивамПассивам", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
	#КонецОбласти
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвиженияИзВременныхТаблиц(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	
	// Уничтожим ненужные временные таблицы.
	НовыеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета, СуществующиеВТ);
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, НовыеВТ);	
	
КонецПроцедуры

// Этап 3.17
Процедура СкорректироватьСтоимостьПродаж(ПараметрыРасчета) Экспорт

	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СкорректироватьСтоимостьПродаж");
	
	СуществующиеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета);
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Если СтрНайти(СуществующиеВТ, "ИсправленныеДокументы") = 0 Тогда 
		// вт ИсправленныеДокументы
		Запрос.Текст = РасчетСебестоимостиЗаполнениеПартий.ТекстИсправленныеДокументы() + ";";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|ВЫБРАТЬ
	|	Продажи.Период                     КАК Период,
	|	Продажи.Регистратор                КАК Регистратор,
	|	ЕСТЬNULL(РегистраторыРасчета.Ссылка,
	|		ЗНАЧЕНИЕ(Документ.РегистраторРасчетаСебестоимости.ПустаяСсылка)) КАК ДокументРасчета,
	|	АналитикаПартнеров.Организация     КАК Организация,
	|	Продажи.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Продажи.ЗаказКлиента               КАК ЗаказКлиента,
	|	Продажи.АналитикаУчетаПоПартнерам  КАК АналитикаУчетаПоПартнерам,
	|	АналитикаПартнеров.Партнер         КАК Партнер,
	|	АналитикаПартнеров.Контрагент      КАК Контрагент,
	|	Продажи.Подразделение              КАК Подразделение,
	|	Продажи.ТипЗапасов                 КАК ТипЗапасов,
	|	Продажи.ВидЗапасов                 КАК ВидЗапасов,
	|	Продажи.Менеджер                   КАК Менеджер,
	|	Продажи.Склад                      КАК Склад,
	|	Продажи.Соглашение                 КАК Соглашение,
	|	Продажи.Договор                    КАК Договор,
	|	Продажи.ХозяйственнаяОперация      КАК ХозяйственнаяОперация,
	|	Продажи.НалогообложениеНДС         КАК НалогообложениеНДС,
	|	Продажи.ВалютаВзаиморасчетов       КАК ВалютаВзаиморасчетов,
	|	Продажи.ВалютаДокумента            КАК ВалютаДокумента,
	|	Продажи.ИсточникГФУНоменклатуры    КАК ИсточникГФУНоменклатуры,
	|	Продажи.ИсточникГФУРасчетов        КАК ИсточникГФУРасчетов,
	|	Продажи.АналитикаУчетаНаборов      КАК АналитикаУчетаНаборов,
	|	Продажи.НаправлениеДеятельностиКонтрагента КАК НаправлениеДеятельностиКонтрагента,
	|	Продажи.НаправлениеДеятельностиНоменклатуры КАК НаправлениеДеятельностиНоменклатуры,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|		Продажи.РазделУчета
	|	КОГДА Продажи.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности) 
	|		И Продажи.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссиюВПути)
	|	КОГДА Продажи.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности) 
	|		И Продажи.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссиюВПути)
	|	КОГДА Продажи.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|	КОГДА Продажи.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
	|	КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОГДА Продажи.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ КАК РазделУчета,
	|	Продажи.Партия 					   КАК Партия,
	|	Продажи.АналитикаУчетаПартий 	   КАК АналитикаУчетаПартий,
	|	Продажи.АналитикаФинансовогоУчета  КАК АналитикаФинансовогоУчета,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22
	|			ТОГДА Продажи.ВидДеятельностиНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОНЕЦ) КАК ВидДеятельностиНДС,
	|	Продажи.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА Продажи.ИдентификаторФинЗаписи
	|		ИНАЧЕ """" КОНЕЦ) КАК ИдентификаторФинЗаписи,
	|	Продажи.Сторно                     КАК Сторно,
	|	(ВЫБОР
	|		КОГДА Продажи.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализацииВозвратНаДругойСклад))
	|		 ИЛИ СУММА(Продажи.Количество) < 0
	|			ТОГДА -1
	|		ИНАЧЕ 1 КОНЕЦ) КАК Знак,
	|	СУММА(Продажи.Количество)          КАК Количество
	|ПОМЕСТИТЬ ВтТаблицаКорректировки
	|ИЗ
	|	ВТКэшРасчетныеОборотыВыручкаИСебестоимостьПродаж КАК Продажи
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.Ссылка = Продажи.АналитикаУчетаНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборАналитикаПоПартнерам КАК АналитикаПартнеров
	|		ПО Продажи.АналитикаУчетаПоПартнерам = АналитикаПартнеров.КлючАналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ РассчитанныеДокументы КАК РассчитанныеДокументы
	|		ПО РассчитанныеДокументы.Период = Продажи.Период
	|		И РассчитанныеДокументы.Регистратор = Продажи.Регистратор
	|		И &РежимЗакрытияМесяца = ЗНАЧЕНИЕ(Перечисление.РежимыЗакрытияМесяца.ПредварительноеЗакрытие)
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТРегистраторыРасчетаСебестоимости КАК РегистраторыРасчета
	|		ПО РегистраторыРасчета.Организация = АналитикаПартнеров.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправленныеДокументы КАК ИсправленныеДокументы
	|		ПО ИсправленныеДокументы.Регистратор = Продажи.Регистратор
	|ГДЕ
	|	Продажи.ХозяйственнаяОперация В (&МассивОперацийРеализации)
	// При предварительном расчете исключаем документы, для которых сохранены ранее рассчитанные движения
	|	И РассчитанныеДокументы.Регистратор ЕСТЬ NULL
	// Исключаем сторно движения исправлений и корректировок прошлого периода.
	// Такие движения уже сформированы в процедуре СкорректироватьСтоимостьСторноДвиженийИсправленныхДокументов() Область ИсправлениеСебестоимостьТоваров
	|	И НЕ (НЕ ИсправленныеДокументы.ДатаДокументаИсточника ЕСТЬ NULL
	|		И ИсправленныеДокументы.ДатаДокументаИсточника < &НачалоПериода
	|		И Продажи.Сторно)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Продажи.Период,
	|	Продажи.Регистратор,
	|	ЕСТЬNULL(РегистраторыРасчета.Ссылка,
	|		ЗНАЧЕНИЕ(Документ.РегистраторРасчетаСебестоимости.ПустаяСсылка)), // ДокументРасчета
	|	Продажи.АналитикаУчетаНоменклатуры,
	|	Продажи.ЗаказКлиента,
	|	Продажи.АналитикаУчетаПоПартнерам,
	|	АналитикаПартнеров.Партнер,
	|	АналитикаПартнеров.Контрагент,
	|	Продажи.Подразделение,
	|	Продажи.ТипЗапасов,
	|	Продажи.ВидЗапасов,
	|	Продажи.Менеджер,
	|	Продажи.Склад,
	|	Продажи.Соглашение,
	|	Продажи.Договор,
	|	Продажи.ХозяйственнаяОперация,
	|	Продажи.НалогообложениеНДС,
	|	Продажи.ВалютаВзаиморасчетов,
	|	Продажи.ВалютаДокумента,
	|	Продажи.ИсточникГФУНоменклатуры,
	|	Продажи.ИсточникГФУРасчетов,
	|	Продажи.АналитикаУчетаНаборов,
	|	Продажи.НаправлениеДеятельностиКонтрагента,
	|	Продажи.НаправлениеДеятельностиНоменклатуры,
	|	АналитикаПартнеров.Организация,
	|	ВЫБОР КОГДА &ПартионныйУчетВерсии22 ТОГДА
	|		Продажи.РазделУчета
	|	КОГДА Продажи.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности) 
	|		И Продажи.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссиюВПути)
	|	КОГДА Продажи.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности) 
	|		И Продажи.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссиюВПути)
	|	КОГДА Продажи.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|	КОГДА Продажи.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
	|	КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Партнер) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Организация) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОГДА Продажи.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ,
	|	Продажи.Партия,
	|	Продажи.АналитикаУчетаПартий,
	|	Продажи.АналитикаФинансовогоУчета,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА Продажи.ВидДеятельностиНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка) КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА Продажи.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализацииВозвратНаДругойСклад))
	|			ТОГДА -1
	|		ИНАЧЕ 1 КОНЕЦ), // Знак
	|	Продажи.НастройкаХозяйственнойОперации,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА Продажи.ИдентификаторФинЗаписи
	|		ИНАЧЕ """" КОНЕЦ),
	|	Продажи.Сторно
	|
	|ИМЕЮЩИЕ
	|
	|	СУММА(Продажи.Количество) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	Организация,
	|	РазделУчета
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаКорректировки.Период,
	|	ТаблицаКорректировки.Регистратор КАК Регистратор,
	|	ТаблицаКорректировки.ДокументРасчета
	|
	|ПОМЕСТИТЬ ВтРегистраторыПродаж
	|ИЗ
	|	ВтТаблицаКорректировки КАК ТаблицаКорректировки
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Себестоимость.Период,
	|	Себестоимость.Регистратор,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	// Условие для поля ВидЗапасов должно быть идентично с РасчетСебестоимостиЗаполнениеПартий.ТекстПартииДляВыручки
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(Себестоимость.ВидЗапасов.ТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ИНАЧЕ Себестоимость.ВидЗапасов КОНЕЦ) КАК ВидЗапасов,
	|	Себестоимость.Организация,
	|	Себестоимость.ЗаказКлиента,
	|	Себестоимость.АналитикаУчетаПоПартнерам,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА Себестоимость.ИдентификаторФинЗаписи
	|		ИНАЧЕ """" КОНЕЦ) КАК ИдентификаторФинЗаписи,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализацииВозвратНаДругойСклад))
	|		ИЛИ СУММА(Себестоимость.Количество) < 0
	|			ТОГДА -1
	|		ИНАЧЕ 1 КОНЕЦ) КАК Знак,
	|	Себестоимость.Сторно,
	|	СУММА(Себестоимость.Количество) КАК Количество,
	|	СУММА(Себестоимость.Стоимость) КАК Стоимость,
	|	СУММА(Себестоимость.СтоимостьБезНДС) КАК СтоимостьБезНДС,
	|	СУММА(Себестоимость.ДопРасходы) КАК ДопРасходы,
	|	СУММА(Себестоимость.ДопРасходыБезНДС) КАК ДопРасходыБезНДС,
	|	СУММА(Себестоимость.СтоимостьРегл) КАК СтоимостьРегл,
	|	СУММА(Себестоимость.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(Себестоимость.ВременнаяРазница) КАК ВременнаяРазница,
	|	СУММА(ВЫБОР
	|		КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5)
	|			ТОГДА 0
	|		ИНАЧЕ Себестоимость.СтоимостьЗабалансовая КОНЕЦ) КАК СтоимостьЗабалансовая,
	|	СУММА(Себестоимость.Трудозатраты) КАК Трудозатраты,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеСНДС) КАК ПостатейныеПостоянныеСНДС,
	|	СУММА(Себестоимость.ПостатейныеПеременныеСНДС) КАК ПостатейныеПеременныеСНДС,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеБезНДС) КАК ПостатейныеПостоянныеБезНДС,
	|	СУММА(Себестоимость.ПостатейныеПеременныеБезНДС) КАК ПостатейныеПеременныеБезНДС,
	|	СУММА(ВЫБОР
	|		КОГДА Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцу2_5)
	|			ТОГДА 0
	|		ИНАЧЕ Себестоимость.СтоимостьЗабалансоваяРегл КОНЕЦ) КАК СтоимостьЗабалансоваяРегл,
	|	СУММА(Себестоимость.ДопРасходыРегл) КАК ДопРасходыРегл,
	|	СУММА(Себестоимость.ТрудозатратыРегл) КАК ТрудозатратыРегл,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеРегл) КАК ПостатейныеПостоянныеРегл,
	|	СУММА(Себестоимость.ПостатейныеПеременныеРегл) КАК ПостатейныеПеременныеРегл,
	|	СУММА(Себестоимость.РезервПодОбесценениеРегл) КАК РезервПодОбесценениеРегл,
	|	СУММА(Себестоимость.РезервПодОбесценениеУпр) КАК РезервПодОбесценениеУпр,
	|	СУММА(Себестоимость.СтоимостьУпр) КАК СтоимостьУпр,
	|	СУММА(Себестоимость.ДопРасходыУпр) КАК ДопРасходыУпр,
	|	СУММА(Себестоимость.ТрудозатратыУпр) КАК ТрудозатратыУпр,
	|	СУММА(Себестоимость.ПостатейныеПостоянныеУпр) КАК ПостатейныеПостоянныеУпр,
	|	СУММА(Себестоимость.ПостатейныеПеременныеУпр) КАК ПостатейныеПеременныеУпр
	|ПОМЕСТИТЬ ВтСебестоимость
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Себестоимость
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРегистраторыПродаж КАК РегистраторыПродаж
	|		ПО РегистраторыПродаж.Период = Себестоимость.Период
	|		И РегистраторыПродаж.Регистратор = Себестоимость.Регистратор
	|		И (РегистраторыПродаж.ДокументРасчета = Себестоимость.ДокументРасчета
	|			ИЛИ НЕ Себестоимость.РасчетСебестоимости) 
	|		И НЕ (
	|			Себестоимость.СлужебноеВидДвиженияПриход
	|			ИЛИ Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетДавальцуСписаниеНаРасходы)
	|			ИЛИ Себестоимость.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|			)
	|
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Период,
	|	Себестоимость.Регистратор,
	|	Себестоимость.АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета,
	|	Себестоимость.Партия,
	|	Себестоимость.АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС,
	|	(ВЫБОР
	|		КОГДА ЕСТЬNULL(Себестоимость.ВидЗапасов.ТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ИНАЧЕ Себестоимость.ВидЗапасов КОНЕЦ), // ВидЗапасов
	|	Себестоимость.Организация,
	|	Себестоимость.ЗаказКлиента,
	|	Себестоимость.АналитикаУчетаПоПартнерам,
	|	(ВЫБОР
	|		КОГДА &ПартионныйУчетВерсии22 ТОГДА Себестоимость.ИдентификаторФинЗаписи
	|		ИНАЧЕ """" КОНЕЦ),
	|	Себестоимость.Сторно,
	|	Себестоимость.ХозяйственнаяОперация,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализацииВозвратНаДругойСклад))
	|			ТОГДА -1
	|		ИНАЧЕ 1 КОНЕЦ) // Знак
	|;";
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);
	
#Область РаспределениеДанных
	
	// Инициализируем распределение
	ПоляСвязи = "Период, Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета, Партия, АналитикаУчетаПартий,
		|АналитикаФинансовогоУчета, ВидДеятельностиНДС, ЗаказКлиента, АналитикаУчетаПоПартнерам, ИдентификаторФинЗаписи, Знак, Сторно";
	ПараметрыРаспределения = РасчетСебестоимостиУниверсальныеАлгоритмы.ИнициализироватьПараметрыРаспределенияМетодомУменьшаемогоОстатка(
		"ВтСебестоимость",
		"ВтТаблицаКорректировки",
		ПоляСвязи);
	
	ОписаниеРегистра = ПараметрыРасчета.Движения[Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя]; // описание регистра
	
	РаспределяемыеРесурсы = РасчетСебестоимостиУниверсальныеАлгоритмы.УдалитьЭлементыИзСтрокиШаблона(
		ОписаниеРегистра.РесурсыРегистра,
		"%1Количество, %1СтоимостьНДД");
	
	РасчетСебестоимостиУниверсальныеАлгоритмы.ИнициализироватьЧисловыеПоляРаспределенияМетодомУменьшаемогоОстатка(
		ПараметрыРаспределения,
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(РаспределяемыеРесурсы, ""));
		
	ПрочиеПоляБазы = "Партнер, Контрагент, Подразделение, ТипЗапасов, Менеджер, Склад, Соглашение, Договор, ХозяйственнаяОперация,
		|НалогообложениеНДС, ВалютаВзаиморасчетов, ВалютаДокумента, ИсточникГФУНоменклатуры, ИсточникГФУРасчетов,
		|АналитикаУчетаНаборов, НаправлениеДеятельностиКонтрагента, НаправлениеДеятельностиНоменклатуры,
		|НастройкаХозяйственнойОперации, ДокументРасчета";
		
	РасчетСебестоимостиУниверсальныеАлгоритмы.ИнициализироватьПрочиеПоляРаспределенияМетодомУменьшаемогоОстатка(
		ПараметрыРаспределения,
		,
		ПрочиеПоляБазы);
		
	// Распределяем
	РасчетСебестоимостиУниверсальныеАлгоритмы.РаспределитьМетодомУменьшаемогоОстатка(Запрос.МенеджерВременныхТаблиц, ПараметрыРаспределения);
	
#КонецОбласти
	
	СуществующиеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета);
	
	// Формируются движения по регистрам:
	// - ВыручкаИСебестоимостьПродаж
	// - Закупки
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	СоответствиеВременныхТаблицДвижений = Новый Соответствие;
	
#Область ВыручкаИСебестоимостьПродаж
	
	ИмяВременнойТаблицы = "ВтДвиженияВыручкаИСебестоимостьПродаж";
	ИмяРегистра = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВТРезультатРаспределения");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Количество", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДокументДвижения", "Регистратор");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РежимЗакрытияМесяца", "&РежимЗакрытияМесяца");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВременнаяРазница", "ВременнаяРазница + РезервПодОбесценениеРегл");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РезервПодОбесценениеРегл", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РезервПодОбесценениеУпр", 0);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВТРезультатРаспределения", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти

#Область ВыручкаИСебестоимостьПродаж_СписаниеРезервовПодОбесценениеЗапасов
	
	ИмяВременнойТаблицы = "ВтДвиженияВыручкаИСебестоимостьПродаж_СписаниеРезервов";
	ИмяРегистра = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВТРезультатРаспределения");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Количество", "0");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДокументДвижения", "Регистратор");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "РежимЗакрытияМесяца", "&РежимЗакрытияМесяца");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ХозяйственнаяОперация", 
		"ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРезервовПодОбесценениеЗапасов)");
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "НастройкаХозяйственнойОперации", 
		"ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеРезервовПодОбесценениеЗапасов)");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Стоимость", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьБезНДС", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДопРасходы", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДопРасходыБезНДС", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьУпр", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьРегл", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьЗабалансовая", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "СтоимостьЗабалансоваяРегл", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостояннаяРазница", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДопРасходыУпр", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ДопРасходыРегл", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПостоянныеСНДС", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПостоянныеБезНДС", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПостоянныеУпр", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПостоянныеРегл", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "Трудозатраты", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ТрудозатратыУпр", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ТрудозатратыРегл", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПеременныеСНДС", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПеременныеБезНДС", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПеременныеУпр", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ПостатейныеПеременныеРегл", 0);
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьПолеВОписанииПолейЗапроса(ТаблицаОписанияПолей, "ВременнаяРазница", 0);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВТРезультатРаспределения", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти

#Область Закупки

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Т.Период,
	|	Т.Регистратор,
	// Измерения
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУДругойОрганизации) КАК ХозяйственнаяОперация,
	|	Т.Контрагент КАК Организация,
	|	Т.Подразделение,
	|	Т.Менеджер,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.Склад,
	|	Т.ТипЗапасов,
	|	Т.ВидЗапасов,
	|	Т.Партнер,
	|	Т.Организация КАК Контрагент,
	|	Т.Соглашение,
	|	Т.Договор,
	// Ресурсы
	|	Т.Стоимость + Т.ДопРасходы + Т.Трудозатраты + Т.ПостатейныеПостоянныеСНДС + Т.ПостатейныеПеременныеСНДС КАК Стоимость,
	|	Т.СтоимостьБезНДС + Т.ДопРасходыБезНДС + Т.Трудозатраты + Т.ПостатейныеПостоянныеБезНДС + Т.ПостатейныеПеременныеБезНДС КАК СтоимостьБезНДС,
	// Реквизиты
	|	Т.ВалютаДокумента,
	|	Т.ВалютаВзаиморасчетов,
	|	Т.Регистратор КАК ДокументДвижения,
	|	Т.ИсточникГФУНоменклатуры,
	|	Т.ИсточникГФУРасчетов,
	|	Т.Сторно
	|ПОМЕСТИТЬ ВтДвиженияТаблицаЗакупки
	|ИЗ
	|	ВТРезультатРаспределения КАК Т
	|ГДЕ
	|	Т.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|";
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);

	ИмяВременнойТаблицы = "ВтДвиженияЗакупки";
	ИмяРегистра = Метаданные.РегистрыНакопления.Закупки.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВтДвиженияТаблицаЗакупки");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВтДвиженияТаблицаЗакупки", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);

#КонецОбласти
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвиженияИзВременныхТаблиц(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);
	
	// Уничтожим ненужные временные таблицы.
	НовыеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета, СуществующиеВТ);
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, НовыеВТ);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	
КонецПроцедуры

// Этап 3.18
//
// Параметры:
//	ПараметрыРасчета - Структура - параметры расчета себестоимости
//
Процедура СформироватьДвиженияРасходыНаПродажу(ПараметрыРасчета) Экспорт

	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СформироватьДвиженияРасходыНаПродажу");
	
	Если ПараметрыРасчета.РежимЗакрытияМесяца = Перечисления.РежимыЗакрытияМесяца.ПредварительноеЗакрытие
	 И НЕ ПараметрыРасчета.РаспределениеПостатейныхРасходовНаПродажу Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВтРаспределениеРасходовНаПродажи.Регистратор КАК Регистратор,
	|	ВтРаспределениеРасходовНаПродажи.Организация,
	|	ВтРаспределениеРасходовНаПродажи.ПодразделениеРасходов КАК Подразделение,
	|	ВтРаспределениеРасходовНаПродажи.НаправлениеДеятельности,
	|	ВтРаспределениеРасходовНаПродажи.СтатьяРасходов,
	|	ВтРаспределениеРасходовНаПродажи.АналитикаРасходов,
	|	ВтРаспределениеРасходовНаПродажи.АналитикаУчетаНоменклатуры,
	|	ВтРаспределениеРасходовНаПродажи.Период,
	|	ВтРаспределениеРасходовНаПродажи.Сторно,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРасходовНаСебестоимостьПродаж) КАК ХозяйственнаяОперация,
	|	СУММА(ВтРаспределениеРасходовНаПродажи.Сумма) КАК Сумма,
	|	СУММА(ВтРаспределениеРасходовНаПродажи.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ВтРаспределениеРасходовНаПродажи.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ВтРаспределениеРасходовНаПродажи.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ВтРаспределениеРасходовНаПродажи.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(ВтРаспределениеРасходовНаПродажи.ВременнаяРазница) КАК ВременнаяРазница
	|ПОМЕСТИТЬ ВтРаспределениеРасходовНаПродажи_ПрочиеРасходы
	|ИЗ
	|	ВтРаспределениеРасходовНаПродажи КАК ВтРаспределениеРасходовНаПродажи
	|СГРУППИРОВАТЬ ПО
	|	ВтРаспределениеРасходовНаПродажи.Регистратор,
	|	ВтРаспределениеРасходовНаПродажи.Организация,
	|	ВтРаспределениеРасходовНаПродажи.ПодразделениеРасходов,
	|	ВтРаспределениеРасходовНаПродажи.НаправлениеДеятельности,
	|	ВтРаспределениеРасходовНаПродажи.СтатьяРасходов,
	|	ВтРаспределениеРасходовНаПродажи.АналитикаРасходов,
	|	ВтРаспределениеРасходовНаПродажи.Период,
	|	ВтРаспределениеРасходовНаПродажи.Сторно,
	|	ВтРаспределениеРасходовНаПродажи.АналитикаУчетаНоменклатуры
	|ИНДЕКСИРОВАТЬ ПО Регистратор
	|;
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтРаспределениеРасходовНаПродажи.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВтРегистраторыПрошлыхПериодов
	|ИЗ ВтРаспределениеРасходовНаПродажи КАК ВтРаспределениеРасходовНаПродажи
	|ГДЕ ВтРаспределениеРасходовНаПродажи.Период < &НачалоПериода;
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос);

	РасчетСебестоимостиПрикладныеАлгоритмы.ДобавитьИдентификаторыВоВременнуюТаблицу(
		ПараметрыРасчета,
		ПараметрыРасчета.Движения[Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя],
		"ВтРаспределениеРасходовНаПродажи_ПрочиеРасходы");
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВтРаспределениеРасходовНаПродажи.Организация,
	|	ВтРаспределениеРасходовНаПродажи.Подразделение,
	|	ВтРаспределениеРасходовНаПродажи.НаправлениеДеятельности,
	|	ВтРаспределениеРасходовНаПродажи.СтатьяРасходов,
	|	ВтРаспределениеРасходовНаПродажи.АналитикаРасходов,
	|	ВтРаспределениеРасходовНаПродажи.АналитикаУчетаНоменклатуры,
	|	ВтРаспределениеРасходовНаПродажи.Период,
	|	ВтРаспределениеРасходовНаПродажи.Регистратор КАК ДокументДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРасходовНаСебестоимостьПродаж) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РаспределениеРасходовНаСебестоимостьПродаж) КАК НастройкаХозяйственнойОперации,
	|	ВтРаспределениеРасходовНаПродажи.ИдентификаторФинЗаписи,
	|	ВтРаспределениеРасходовНаПродажи.Сторно,
	|	ИСТИНА КАК РасчетСебестоимости,
	|	ВтРаспределениеРасходовНаПродажи.Сумма,
	|	ВтРаспределениеРасходовНаПродажи.СуммаБезНДС,
	|	ВтРаспределениеРасходовНаПродажи.СуммаУпр,
	|	ВтРаспределениеРасходовНаПродажи.СуммаРегл,
	|	ВтРаспределениеРасходовНаПродажи.ПостояннаяРазница,
	|	ВтРаспределениеРасходовНаПродажи.ВременнаяРазница
	|ИЗ ВтРаспределениеРасходовНаПродажи_ПрочиеРасходы КАК ВтРаспределениеРасходовНаПродажи;
	|
	|ВЫБРАТЬ
	|	ВтРаспределениеРасходовНаПродажи.Период,
	|	ВтРаспределениеРасходовНаПродажи.Регистратор КАК ДокументДвижения,
	|	ВтРаспределениеРасходовНаПродажи.АналитикаУчетаНоменклатуры,
	|	ВтРаспределениеРасходовНаПродажи.ЗаказКлиента,
	|	ВтРаспределениеРасходовНаПродажи.АналитикаУчетаПоПартнерам,
	|	ВтРаспределениеРасходовНаПродажи.ПодразделениеВыручки КАК Подразделение,
	|	ВтРаспределениеРасходовНаПродажи.ТипЗапасов,
	|	ВтРаспределениеРасходовНаПродажи.ВидЗапасов,
	|	ВтРаспределениеРасходовНаПродажи.РазделУчета,
	|	ВтРаспределениеРасходовНаПродажи.Партия,
	|	ВтРаспределениеРасходовНаПродажи.АналитикаУчетаПартий,
	|	ВтРаспределениеРасходовНаПродажи.АналитикаФинансовогоУчета,
	|	ВтРаспределениеРасходовНаПродажи.ВидДеятельностиНДС,
	|	ВтРаспределениеРасходовНаПродажи.Менеджер,
	|	ВтРаспределениеРасходовНаПродажи.Склад,
	|	ВтРаспределениеРасходовНаПродажи.Соглашение,
	|	ВтРаспределениеРасходовНаПродажи.Договор,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРасходовНаСебестоимостьПродаж) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.РаспределениеРасходовНаСебестоимостьПродаж) КАК НастройкаХозяйственнойОперации,
	|	ВтРаспределениеРасходовНаПродажи.АналитикаУчетаНаборов,
	|	ВтРаспределениеРасходовНаПродажи.НаправлениеДеятельностиКонтрагента,
	|	ВтРаспределениеРасходовНаПродажи.НаправлениеДеятельностиНоменклатуры,
	|	ВтРаспределениеРасходовНаПродажи.НалогообложениеНДС,
	|	ВтРаспределениеРасходовНаПродажи.ВалютаВзаиморасчетов,
	|	ВтРаспределениеРасходовНаПродажи.ВалютаДокумента,
	|	ВтРаспределениеРасходовНаПродажи.ИсточникГФУНоменклатуры,
	|	ВтРаспределениеРасходовНаПродажи.Сторно,
	|	ИСТИНА КАК РасчетСебестоимости,
	|	ЛОЖЬ КАК РасчетПартий,
	|	ВтРаспределениеРасходовНаПродажи.Сумма КАК РасходыНаПродажуСНДС,
	|	ВтРаспределениеРасходовНаПродажи.СуммаБезНДС КАК РасходыНаПродажуБезНДС,
	|	ВтРаспределениеРасходовНаПродажи.СуммаУпр КАК РасходыНаПродажуУпр,
	|	ВтРаспределениеРасходовНаПродажи.СуммаРегл КАК РасходыНаПродажуРегл,
	|	ВтРаспределениеРасходовНаПродажи.ПостояннаяРазница КАК ПостояннаяРазница,
	|	ВтРаспределениеРасходовНаПродажи.ВременнаяРазница КАК ВременнаяРазница,
	|	Идентификаторы.ИдентификаторФинЗаписи
	|ИЗ
	|	ВтРаспределениеРасходовНаПродажи КАК ВтРаспределениеРасходовНаПродажи
	|ЛЕВОЕ СОЕДИНЕНИЕ ВтРаспределениеРасходовНаПродажи_ПрочиеРасходы КАК Идентификаторы
	|	ПО ВтРаспределениеРасходовНаПродажи.Регистратор = Идентификаторы.Регистратор
	|	И ВтРаспределениеРасходовНаПродажи.Организация = Идентификаторы.Организация
	|	И ВтРаспределениеРасходовНаПродажи.ПодразделениеРасходов = Идентификаторы.Подразделение
	|	И ВтРаспределениеРасходовНаПродажи.НаправлениеДеятельности = Идентификаторы.НаправлениеДеятельности
	|	И ВтРаспределениеРасходовНаПродажи.СтатьяРасходов = Идентификаторы.СтатьяРасходов
	|	И ВтРаспределениеРасходовНаПродажи.АналитикаРасходов = Идентификаторы.АналитикаРасходов
	|	И ВтРаспределениеРасходовНаПродажи.АналитикаУчетаНоменклатуры = Идентификаторы.АналитикаУчетаНоменклатуры;
	|";
	
	Выборки = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос,
		Истина);
	
	ВыборкаПрочиеРасходы = Выборки[0];
	ВыборкаВыручка = Выборки[1];

	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	
	КопируемыеПоля = РасчетСебестоимостиПрикладныеАлгоритмы.ОбщиеКолонкиИсточникаИПриемникаДанных(
		ПараметрыРасчета,
		ВыборкаПрочиеРасходы,
		ИмяРегистра);
	
	Пока ВыборкаПрочиеРасходы.Следующий() Цикл
		Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ВыборкаПрочиеРасходы, КопируемыеПоля);
		Запись.ВидДвижения = ВидДвиженияНакопления.Расход;
	КонецЦикла;
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	
	КопируемыеПоля = РасчетСебестоимостиПрикладныеАлгоритмы.ОбщиеКолонкиИсточникаИПриемникаДанных(
		ПараметрыРасчета,
		ВыборкаВыручка,
		ИмяРегистра);
	
	Пока ВыборкаВыручка.Следующий() Цикл
		Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ВыборкаВыручка, КопируемыеПоля);
	КонецЦикла;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	
КонецПроцедуры

// Этап 3.19
Процедура СписатьОшибкиОкругленияРасчетаСебестоимости(ПараметрыРасчета) Экспорт
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "СписатьОшибкиОкругленияРасчетаСебестоимости");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	// Списываем только те остатки, в которых все "суммовые" ресурсы имеют значения, укладывающиеся в пределы погрешности. 
	// Если хоть один "суммовой" ресурс превышает величину погрешности, то такой остаток ошибкой округления не считаем.
	// Для регистра ПрочиеРасходы подход отличается: для него проверка ведется остатка для каждого ресурса по-отдельности.
	// Если какой-то ресурс укладывается в пределы погрешности, то списываем только его.
	
	СуществующиеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета);
	
	
	СоответствиеВременныхТаблицДвижений = Новый Соответствие;
	
#Область СебестоимостьТоваров

	// Списание ошибок округления в регистре СебестоимостьТоваров
	// Также создадим пустую временную таблицу ВТОкруглениеПрочиеРасходы для УТ - там не будет ошибок округления в регистре ПрочиеРасходы.
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДокументыРасчетаСебестоимости.Ссылка 		КАК Регистратор,
	|	&КонецПериода								КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)		КАК ВидДвижения,
	|
	|	Себестоимость.Организация 					КАК Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета 					КАК РазделУчета,
	|	Себестоимость.ВидЗапасов 					КАК ВидЗапасов,
	|	Себестоимость.Партия                        КАК Партия,
	|	Себестоимость.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА Аналитика.Подразделение
	|		ИНАЧЕ Аналитика.СкладскаяТерритория.Подразделение
	|	КОНЕЦ 										КАК Подразделение,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости)	КАК СтатьяРасходовСписания,
	|	Аналитика.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	(ВЫБОР
	|		КОГДА ЛОЖЬ ТОГДА НЕОПРЕДЕЛЕНО // Для удобства расстановки тегов

	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОшибокОкругления) КОНЕЦ) КАК ХозяйственнаяОперация,
	|	(ВЫБОР
	|		КОГДА ЛОЖЬ ТОГДА НЕОПРЕДЕЛЕНО // Для удобства расстановки тегов

	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеОшибокОкругления) КОНЕЦ) КАК НастройкаХозяйственнойОперации,
	|	Себестоимость.Стоимость 					КАК Стоимость,
	|	Себестоимость.СтоимостьБезНДС 				КАК СтоимостьБезНДС,
	|	Себестоимость.ДопРасходы 					КАК ДопРасходы,
	|	Себестоимость.ДопРасходыБезНДС 				КАК ДопРасходыБезНДС,
	|	Себестоимость.СтоимостьРегл 				КАК СтоимостьРегл,
	|	Себестоимость.ПостояннаяРазница 			КАК ПостояннаяРазница,
	|	Себестоимость.ВременнаяРазница 				КАК ВременнаяРазница,
	|	Себестоимость.СтоимостьНДД					КАК СтоимостьНДД,
	|	Себестоимость.СтоимостьЗабалансовая         КАК СтоимостьЗабалансовая,
	|	Себестоимость.Трудозатраты       		    КАК Трудозатраты,
	|	Себестоимость.ПостатейныеПостоянныеСНДС     КАК ПостатейныеПостоянныеСНДС,
	|	Себестоимость.ПостатейныеПостоянныеБезНДС   КАК ПостатейныеПостоянныеБезНДС,
	|	Себестоимость.ПостатейныеПеременныеСНДС     КАК ПостатейныеПеременныеСНДС,
	|	Себестоимость.ПостатейныеПеременныеБезНДС   КАК ПостатейныеПеременныеБезНДС,
	|	Себестоимость.СтоимостьЗабалансоваяРегл     КАК СтоимостьЗабалансоваяРегл,
	|	Себестоимость.ДопРасходыРегл                КАК ДопРасходыРегл,
	|	Себестоимость.ТрудозатратыРегл              КАК ТрудозатратыРегл,
	|	Себестоимость.ПостатейныеПостоянныеРегл     КАК ПостатейныеПостоянныеРегл,
	|	Себестоимость.ПостатейныеПеременныеРегл     КАК ПостатейныеПеременныеРегл,
	|	Себестоимость.СтоимостьУпр     				КАК СтоимостьУпр,
	|	Себестоимость.ДопРасходыУпр     			КАК ДопРасходыУпр,
	|	Себестоимость.ТрудозатратыУпр     			КАК ТрудозатратыУпр,
	|	Себестоимость.ПостатейныеПостоянныеУпр     	КАК ПостатейныеПостоянныеУпр,
	|	Себестоимость.ПостатейныеПеременныеУпр     	КАК ПостатейныеПеременныеУпр,
	|	Себестоимость.РезервПодОбесценениеРегл      КАК РезервПодОбесценениеРегл,
	|	Себестоимость.РезервПодОбесценениеУпр       КАК РезервПодОбесценениеУпр
	|
	|ПОМЕСТИТЬ ВТОкруглениеСебестоимостьТоваров
	|ИЗ
	|	ВТКэшРасчетныеОстаткиСебестоимостьТоваров КАК Себестоимость
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыРасчетаСебестоимости
	|			ПО Себестоимость.Организация = ДокументыРасчетаСебестоимости.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|			ПО Аналитика.Ссылка = Себестоимость.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	Себестоимость.Количество = 0
	|	И (Себестоимость.Стоимость МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.СтоимостьБезНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ДопРасходы МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ДопРасходыБезНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.СтоимостьРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьРегл И &ЗначениеПогрешностиСебестоимостьРегл
	|		И Себестоимость.СтоимостьУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.СтоимостьНДД МЕЖДУ -&ЗначениеПогрешностиСебестоимостьРегл И &ЗначениеПогрешностиСебестоимостьРегл
	|		И Себестоимость.СтоимостьЗабалансовая МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.Трудозатраты МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ПостатейныеПостоянныеСНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ПостатейныеПостоянныеБезНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ПостатейныеПеременныеСНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ПостатейныеПеременныеБезНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.СтоимостьЗабалансоваяРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьРегл И &ЗначениеПогрешностиСебестоимостьРегл
	|		И Себестоимость.ДопРасходыРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьРегл И &ЗначениеПогрешностиСебестоимостьРегл
	|		И Себестоимость.ТрудозатратыРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьРегл И &ЗначениеПогрешностиСебестоимостьРегл
	|		И Себестоимость.ПостатейныеПостоянныеРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьРегл И &ЗначениеПогрешностиСебестоимостьРегл
	|		И Себестоимость.ПостатейныеПеременныеРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьРегл И &ЗначениеПогрешностиСебестоимостьРегл
	|		И Себестоимость.СтоимостьУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ДопРасходыУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ТрудозатратыУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ПостатейныеПостоянныеУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.ПостатейныеПеременныеУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.РезервПодОбесценениеРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|		И Себестоимость.РезервПодОбесценениеУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И &ЗначениеПогрешностиСебестоимостьУпр
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыРасчетаСебестоимости.Ссылка 		КАК ДокументДвижения,
	|	&КонецПериода								КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)		КАК ВидДвижения,
	|
	|	Себестоимость.Организация 					КАК Организация,
	|	Себестоимость.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
	|	Себестоимость.РазделУчета 					КАК РазделУчета,
	|	Себестоимость.ВидЗапасов 					КАК ВидЗапасов,
	|	Себестоимость.Партия                        КАК Партия,
	|	Себестоимость.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	Себестоимость.АналитикаФинансовогоУчета     КАК АналитикаФинансовогоУчета,
	|	Себестоимость.ВидДеятельностиНДС            КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА Аналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА Аналитика.Подразделение
	|		ИНАЧЕ Аналитика.СкладскаяТерритория.Подразделение
	|	КОНЕЦ 										КАК Подразделение,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости)	КАК СтатьяРасходовСписания,
	|	Аналитика.Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОшибокОкругления) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеОшибокОкругления) КАК НастройкаХозяйственнойОперации,
	|	(ВЫБОР
	|		КОГДА Себестоимость.Стоимость МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.Стоимость
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК Стоимость,
	|	(ВЫБОР
	|		КОГДА Себестоимость.СтоимостьБезНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.СтоимостьБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК СтоимостьБезНДС,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ДопРасходы МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ДопРасходы
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ДопРасходы,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ДопРасходыБезНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ДопРасходыБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ДопРасходыБезНДС,
	|	(ВЫБОР
	|		КОГДА Себестоимость.СтоимостьРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.СтоимостьРегл
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК СтоимостьРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	(ВЫБОР
	|		КОГДА Себестоимость.СтоимостьНДД МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.СтоимостьНДД
	|		ИНАЧЕ 0 КОНЕЦ)							КАК СтоимостьНДД,
	|	(ВЫБОР
	|		КОГДА Себестоимость.СтоимостьЗабалансовая МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.СтоимостьЗабалансовая
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК СтоимостьЗабалансовая,
	|	(ВЫБОР
	|		КОГДА Себестоимость.Трудозатраты МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.Трудозатраты
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК Трудозатраты,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ПостатейныеПостоянныеСНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ПостатейныеПостоянныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ПостатейныеПостоянныеСНДС,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ПостатейныеПостоянныеБезНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ПостатейныеПостоянныеБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ПостатейныеПостоянныеБезНДС,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ПостатейныеПеременныеСНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ПостатейныеПеременныеСНДС
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ПостатейныеПеременныеСНДС,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ПостатейныеПеременныеБезНДС МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ПостатейныеПеременныеБезНДС
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ПостатейныеПеременныеБезНДС,
	|	(ВЫБОР
	|		КОГДА Себестоимость.СтоимостьЗабалансоваяРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.СтоимостьЗабалансоваяРегл
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК СтоимостьЗабалансоваяРегл,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ДопРасходыРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ДопРасходыРегл
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ДопРасходыРегл,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ТрудозатратыРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ТрудозатратыРегл
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ТрудозатратыРегл,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ПостатейныеПостоянныеРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ПостатейныеПостоянныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ПостатейныеПостоянныеРегл,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ПостатейныеПеременныеРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ПостатейныеПеременныеРегл
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ПостатейныеПеременныеРегл,
	|	(ВЫБОР
	|		КОГДА Себестоимость.СтоимостьУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.СтоимостьУпр
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК СтоимостьУпр,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ДопРасходыУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ДопРасходыУпр
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ДопРасходыУпр,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ТрудозатратыУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ТрудозатратыУпр
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ТрудозатратыУпр,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ПостатейныеПостоянныеУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ПостатейныеПостоянныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ПостатейныеПостоянныеУпр,
	|	(ВЫБОР
	|		КОГДА Себестоимость.ПостатейныеПеременныеУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.ПостатейныеПеременныеУпр
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК ПостатейныеПеременныеУпр,
	|	(ВЫБОР
	|		КОГДА Себестоимость.РезервПодОбесценениеРегл МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.РезервПодОбесценениеРегл
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК РезервПодОбесценениеРегл,
	|	(ВЫБОР
	|		КОГДА Себестоимость.РезервПодОбесценениеУпр МЕЖДУ -&ЗначениеПогрешностиСебестоимостьУпр И 0 ТОГДА Себестоимость.РезервПодОбесценениеУпр
	|		ИНАЧЕ 0 КОНЕЦ) 							КАК РезервПодОбесценениеУпр
	|ИЗ
	|	ВТКэшРасчетныеОстаткиСебестоимостьТоваров КАК Себестоимость
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыРасчетаСебестоимости
	|			ПО Себестоимость.Организация = ДокументыРасчетаСебестоимости.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|			ПО Аналитика.Ссылка = Себестоимость.АналитикаУчетаНоменклатуры
	|
	|ГДЕ
	|	Себестоимость.Количество > 0
	|	И (
	|		(Себестоимость.Стоимость
	|		+ Себестоимость.ДопРасходы
	|		+ Себестоимость.Трудозатраты
	|		+ Себестоимость.ПостатейныеПостоянныеСНДС
	|		+ Себестоимость.ПостатейныеПеременныеСНДС) < 0
	|	ИЛИ (Себестоимость.СтоимостьБезНДС
	|		+ Себестоимость.ДопРасходыБезНДС
	|		+ Себестоимость.Трудозатраты
	|		+ Себестоимость.ПостатейныеПостоянныеБезНДС
	|		+ Себестоимость.ПостатейныеПеременныеБезНДС) < 0 
	|	ИЛИ (Себестоимость.СтоимостьРегл
	|		+ Себестоимость.ДопРасходыРегл
	|		+ Себестоимость.ТрудозатратыРегл
	|		+ Себестоимость.ПостатейныеПостоянныеРегл
	|		+ Себестоимость.ПостатейныеПеременныеРегл
	|		+ Себестоимость.РезервПодОбесценениеРегл) < 0
	|	ИЛИ (Себестоимость.СтоимостьУпр
	|		+ Себестоимость.ДопРасходыУпр
	|		+ Себестоимость.ТрудозатратыУпр
	|		+ Себестоимость.ПостатейныеПостоянныеУпр
	|		+ Себестоимость.ПостатейныеПеременныеУпр
	|		+ Себестоимость.РезервПодОбесценениеУпр) < 0
	|	ИЛИ Себестоимость.СтоимостьНДД < 0
	|	)
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	НЕОПРЕДЕЛЕНО КАК Регистратор,
	|	НЕОПРЕДЕЛЕНО КАК Период,
	|	ЛОЖЬ		 КАК ВидДвижения,
	|	НЕОПРЕДЕЛЕНО КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеОшибокОкругления) КАК НастройкаХозяйственнойОперации,
	|	0 			 КАК Сумма,
	|	0 			 КАК СуммаБезНДС,
	|	0 			 КАК СуммаРегл,
	|	0 			 КАК СуммаУпр,
	|	0 			 КАК ПостояннаяРазница,
	|	0 			 КАК ВременнаяРазница,
	|	0 			 КАК СуммаНДД,
	|	""""         КАК ИдентификаторФинЗаписи
	|ПОМЕСТИТЬ ВТОкруглениеПрочиеРасходы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	НЕОПРЕДЕЛЕНО КАК Регистратор,
	|	НЕОПРЕДЕЛЕНО КАК Период,
	|	ЛОЖЬ         КАК ВидДвижения,
	|	НЕОПРЕДЕЛЕНО КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ПартияПроизводства,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказНаПроизводство,
	|	НЕОПРЕДЕЛЕНО КАК КодСтрокиПродукция,
	|	НЕОПРЕДЕЛЕНО КАК Этап,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяКалькуляции,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
	|	НЕОПРЕДЕЛЕНО КАК ПравилоОтнесенияНаВыпуск,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеОшибокОкругления) КАК НастройкаХозяйственнойОперации,
	|	0            КАК Стоимость,
	|	0            КАК СтоимостьБезНДС,
	|	0            КАК СтоимостьРегл,
	|	0            КАК СтоимостьУпр,
	|	0            КАК ПостояннаяРазница,
	|	0            КАК ВременнаяРазница,
	|	0            КАК СтоимостьНДД,
	|	0            КАК ДоляСтоимости,
	|	""""         КАК ИдентификаторФинЗаписи
	|ПОМЕСТИТЬ ВТОкруглениеПрочиеРасходыНЗП
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	НЕОПРЕДЕЛЕНО КАК Регистратор,
	|	НЕОПРЕДЕЛЕНО КАК Период,
	|	ЛОЖЬ         КАК ВидДвижения,
	|	НЕОПРЕДЕЛЕНО КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ВидРезервов,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектУчетаРезервов,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеОшибокОкругления) КАК НастройкаХозяйственнойОперации,
	|	0            КАК СуммаУпр,
	|	0            КАК СуммаРегл,
	|	0            КАК СуммаНУ,
	|	""""         КАК ИдентификаторФинЗаписи
	|ПОМЕСТИТЬ ВТОкруглениеРезервыПредстоящихРасходов
	|;
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	ИмяВременнойТаблицы = "ВтПогрешностьСебестоимостьТоваров";
	ИмяВременнойТаблицыИсточник = "ВТОкруглениеСебестоимостьТоваров";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ДобавитьИдентификаторыВоВременнуюТаблицу(ПараметрыРасчета, ОписаниеПриемника, ИмяВременнойТаблицыИсточник);
	
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, ИмяВременнойТаблицыИсточник);
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, ИмяВременнойТаблицыИсточник, ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);

#КонецОбласти

#Область ПрочиеРасходы

	// Списание ошибок округления в регистре ПрочиеРасходы
	ТекстЗапросаАналитикиДвиженийПрочихРасходов =
	"УНИЧТОЖИТЬ ВТОкруглениеПрочиеРасходы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеквизитыРаспределения.Организация 					КАК Организация,
	|	РеквизитыРаспределения.Подразделение 				КАК Подразделение,
	|	РеквизитыРаспределения.СтатьяРасходов 				КАК СтатьяРасходов,
	|	РеквизитыРаспределения.АналитикаРасходов 			КАК АналитикаРасходов,
	|	РеквизитыРаспределения.НаправлениеДеятельности 		КАК НаправлениеДеятельности,
	|	РеквизитыРаспределения.РегламентированныйУчет
	|	КАК СписыватьОстатокРегл,
	|	РеквизитыРаспределения.НалоговыйУчет
	|КАК СписыватьОстатокНУ,
	|	РеквизитыРаспределения.УправленческийУчет
	|КАК СписыватьОстатокУпр,
	|	РеквизитыРаспределения.НДД
	|КАК СписыватьОстатокНДД
	|ПОМЕСТИТЬ АналитикиДвиженийПрочихРасходовВрем
	|ИЗ
	|	Документ.РаспределениеПрочихЗатрат КАК РеквизитыРаспределения
	|ГДЕ
	|	РеквизитыРаспределения.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РеквизитыРаспределения.Проведен
	|	И РеквизитыРаспределения.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Остатки.Организация 				КАК Организация,
	|	Остатки.Подразделение 				КАК Подразделение,
	|	Остатки.СтатьяРасходов 				КАК СтатьяРасходов,
	|	Остатки.АналитикаРасходов 			КАК АналитикаРасходов,
	|	Остатки.НаправлениеДеятельности 	КАК НаправлениеДеятельности,
	|	Остатки.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПродаж),
	|	Остатки.СтатьяРасходов.ВариантРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПродаж),
	|	Остатки.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПродаж),
	// В НДД не может быть варианта распределения на себестоимость продаж
	|	ЛОЖЬ
	|ИЗ
	|	ВТКэшРасчетныеОстаткиПрочиеРасходы КАК Остатки
	|ГДЕ
	|	Остатки.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПродаж)
	|	ИЛИ Остатки.СтатьяРасходов.ВариантРаспределенияРасходовНУ = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПродаж)
	|	ИЛИ Остатки.СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПродаж)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Аналитики.Организация 					КАК Организация,
	|	Аналитики.Подразделение 				КАК Подразделение,
	|	Аналитики.СтатьяРасходов 				КАК СтатьяРасходов,
	|	Аналитики.АналитикаРасходов 			КАК АналитикаРасходов,
	|	Аналитики.НаправлениеДеятельности 		КАК НаправлениеДеятельности,
	|	МАКСИМУМ(Аналитики.СписыватьОстатокРегл) КАК СписыватьОстатокРегл,
	|	МАКСИМУМ(Аналитики.СписыватьОстатокНУ)	КАК СписыватьОстатокНУ,
	|	МАКСИМУМ(Аналитики.СписыватьОстатокУпр)	КАК СписыватьОстатокУпр,
	|	МАКСИМУМ(Аналитики.СписыватьОстатокНДД)	КАК СписыватьОстатокНДД
	|ПОМЕСТИТЬ АналитикиДвиженийПрочихРасходов
	|ИЗ
	|	АналитикиДвиженийПрочихРасходовВрем КАК Аналитики
	|
	|СГРУППИРОВАТЬ ПО
	|	Аналитики.Организация,
	|	Аналитики.Подразделение,
	|	Аналитики.СтатьяРасходов,
	|	Аналитики.АналитикаРасходов,
	|	Аналитики.НаправлениеДеятельности
	|ИНДЕКСИРОВАТЬ ПО
	|	Аналитики.СтатьяРасходов,
	|	Аналитики.АналитикаРасходов,
	|	Аналитики.Подразделение,
	|	Аналитики.НаправлениеДеятельности,
	|	Аналитики.Организация
	|";
	
	
	// Добавим таблицу вариантов распределения статей расходов для учета НДД
	ТекстЗапросаНДД = РасчетСебестоимостиЛокализация.ТекстЗапросаНастроекНДД("АналитикиДвиженийПрочихРасходов", 
																	"РасчетСебестоимостиКорректировкаСтоимости_СписатьОшибкиОкругленияРасчетаСебестоимости",
																	ПараметрыРасчета);
	
	ТекстЗапросаВТОкруглениеПрочиеРасходы = "
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация 					КАК Организация,
	|	ПрочиеРасходы.Подразделение 				КАК Подразделение,
	|	ПрочиеРасходы.СтатьяРасходов 				КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов 			КАК АналитикаРасходов,
	|	ПрочиеРасходы.НаправлениеДеятельности 		КАК НаправлениеДеятельности,
	|
	|	ВЫБОР КОГДА ПрочиеРасходы.Сумма МЕЖДУ -&ЗначениеПогрешностиРасходыУпр И &ЗначениеПогрешностиРасходыУпр
	|		И ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр
	|			В (&ВариантыРаспределенияДляСписанияОшибокОкругления)
	|		И ЕСТЬNULL(Аналитики.СписыватьОстатокУпр, ЛОЖЬ)
	|		ТОГДА ПрочиеРасходы.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ										КАК Сумма,
	|	ВЫБОР КОГДА ПрочиеРасходы.СуммаБезНДС МЕЖДУ -&ЗначениеПогрешностиРасходыУпр И &ЗначениеПогрешностиРасходыУпр
	|		И ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр
	|			В (&ВариантыРаспределенияДляСписанияОшибокОкругления)
	|		И ЕСТЬNULL(Аналитики.СписыватьОстатокУпр, ЛОЖЬ)
	|		ТОГДА ПрочиеРасходы.СуммаБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ										КАК СуммаБезНДС,
	|	ВЫБОР КОГДА ПрочиеРасходы.СуммаРегл МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|		И ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл
	|			В (&ВариантыРаспределенияДляСписанияОшибокОкругления)
	|		И ЕСТЬNULL(Аналитики.СписыватьОстатокРегл, ЛОЖЬ)
	|		ТОГДА ПрочиеРасходы.СуммаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ										КАК СуммаРегл,
	
	|	ВЫБОР КОГДА ПрочиеРасходы.СуммаУпр МЕЖДУ -&ЗначениеПогрешностиРасходыУпр И &ЗначениеПогрешностиРасходыУпр
	|		И ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр
	|			В (&ВариантыРаспределенияДляСписанияОшибокОкругления)
	|		И ЕСТЬNULL(Аналитики.СписыватьОстатокУпр, ЛОЖЬ)
	|		ТОГДА ПрочиеРасходы.СуммаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ										КАК СуммаУпр,
	//++ Локализация
	|	ВЫБОР КОГДА ПрочиеРасходы.ПостояннаяРазница МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|	 	И ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл
	|			В (&ВариантыРаспределенияДляСписанияОшибокОкругления)
	|		И ЕСТЬNULL(Аналитики.СписыватьОстатокРегл, ЛОЖЬ)
	|		ТОГДА ПрочиеРасходы.ПостояннаяРазница
	|		ИНАЧЕ 0
	|	КОНЕЦ +
	//-- Локализация
	
	|	0										КАК ПостояннаяРазница,
	
	//++ Локализация
	|	ВЫБОР КОГДА 
	|		ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл
	|			В (&ВариантыРаспределенияДляСписанияОшибокОкругления)
	|		И ПрочиеРасходы.СуммаРегл - ПрочиеРасходы.ПостояннаяРазница МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|		И ЕСТЬNULL(Аналитики.СписыватьОстатокРегл, ЛОЖЬ)
	|		ТОГДА ПрочиеРасходы.СуммаРегл - ПрочиеРасходы.ПостояннаяРазница
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|	+ ВЫБОР КОГДА 
	|		ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовНУ
	|			В (&ВариантыРаспределенияДляСписанияОшибокОкругления)
	|		И ПрочиеРасходы.ПостояннаяРазница + ПрочиеРасходы.ВременнаяРазница - ПрочиеРасходы.СуммаРегл 
	|			МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|		И ЕСТЬNULL(Аналитики.СписыватьОстатокНУ, ЛОЖЬ)
	|		ТОГДА ПрочиеРасходы.ПостояннаяРазница + ПрочиеРасходы.ВременнаяРазница - ПрочиеРасходы.СуммаРегл 
	|		ИНАЧЕ 0
	|	КОНЕЦ +
	//-- Локализация
	
	|	0										КАК ВременнаяРазница,
	|	ВЫБОР КОГДА ПрочиеРасходы.СуммаНДД МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|		И ЕСТЬNULL(НастройкиРаспределенияСтатейНДД.ВариантРаспределенияРасходовНДД, ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка))
	|			В (&ВариантыРаспределенияДляСписанияОшибокОкругления)
	|		И ЕСТЬNULL(Аналитики.СписыватьОстатокНДД, ЛОЖЬ)
	|		ТОГДА ПрочиеРасходы.СуммаНДД
	|		ИНАЧЕ 0
	|	КОНЕЦ									КАК СуммаНДД
	|ПОМЕСТИТЬ ВТОкруглениеПрочиеРасходыВрем
	|ИЗ
	|	ВТКэшРасчетныеОстаткиПрочиеРасходы КАК ПрочиеРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ АналитикиДвиженийПрочихРасходов КАК Аналитики
	|		ПО ПрочиеРасходы.Организация = Аналитики.Организация
	|			И ПрочиеРасходы.Подразделение = Аналитики.Подразделение
	|			И ПрочиеРасходы.СтатьяРасходов = Аналитики.СтатьяРасходов
	|			И ПрочиеРасходы.АналитикаРасходов = Аналитики.АналитикаРасходов
	|			И ПрочиеРасходы.НаправлениеДеятельности = Аналитики.НаправлениеДеятельности
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиРаспределенияСтатейНДД КАК НастройкиРаспределенияСтатейНДД
	|		ПО ПрочиеРасходы.СтатьяРасходов = НастройкиРаспределенияСтатейНДД.СтатьяРасходов
	|			И &ПрочиеРасходы_ОбъектРаздельногоУчетаНДД = НастройкиРаспределенияСтатейНДД.ОбъектРаздельногоУчетаНДД
	|			И ПрочиеРасходы.Организация = НастройкиРаспределенияСтатейНДД.Организация
	|ГДЕ
	|	ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр
	|		В (&ВариантыРаспределенияДляСписанияОшибокОкругления)
	|		И ЕСТЬNULL(Аналитики.СписыватьОстатокУпр, ЛОЖЬ)
	|		И (ПрочиеРасходы.Сумма МЕЖДУ -&ЗначениеПогрешностиРасходыУпр И &ЗначениеПогрешностиРасходыУпр
	|				И ПрочиеРасходы.Сумма <> 0
	|			ИЛИ ПрочиеРасходы.СуммаБезНДС МЕЖДУ -&ЗначениеПогрешностиРасходыУпр И &ЗначениеПогрешностиРасходыУпр
	|				И ПрочиеРасходы.СуммаБезНДС <> 0
	|			ИЛИ ПрочиеРасходы.СуммаУпр МЕЖДУ -&ЗначениеПогрешностиРасходыУпр И &ЗначениеПогрешностиРасходыУпр
	|				И ПрочиеРасходы.СуммаУпр <> 0)
	|	ИЛИ ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл
	|		В (&ВариантыРаспределенияДляСписанияОшибокОкругления)
	|		И ЕСТЬNULL(Аналитики.СписыватьОстатокРегл, ЛОЖЬ)
	|		И (ПрочиеРасходы.СуммаРегл МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|				И ПрочиеРасходы.СуммаРегл <> 0
	|			ИЛИ ПрочиеРасходы.ПостояннаяРазница МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|				И ПрочиеРасходы.ПостояннаяРазница <> 0)
	|	ИЛИ ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовНУ
	|		В (&ВариантыРаспределенияДляСписанияОшибокОкругления)
	|		И ЕСТЬNULL(Аналитики.СписыватьОстатокНУ, ЛОЖЬ)
	|		И ПрочиеРасходы.ПостояннаяРазница + ПрочиеРасходы.ВременнаяРазница - ПрочиеРасходы.СуммаРегл МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|			И ПрочиеРасходы.ПостояннаяРазница + ПрочиеРасходы.ВременнаяРазница - ПрочиеРасходы.СуммаРегл <> 0
	|	ИЛИ ЕСТЬNULL(НастройкиРаспределенияСтатейНДД.ВариантРаспределенияРасходовНДД, ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка))
	|		В (&ВариантыРаспределенияДляСписанияОшибокОкругления)
	|		И ЕСТЬNULL(Аналитики.СписыватьОстатокНДД, ЛОЖЬ)
	|		И ПрочиеРасходы.СуммаНДД МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|			И ПрочиеРасходы.СуммаНДД <> 0
	|
	//++ Локализация
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация 				КАК Организация,
	|	ПрочиеРасходы.Подразделение 			КАК Подразделение,
	|	ПрочиеРасходы.СтатьяРасходов 			КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов 		КАК АналитикаРасходов,
	|	ПрочиеРасходы.НаправлениеДеятельности 	КАК НаправлениеДеятельности,
	|	0										КАК Сумма,
	|	0										КАК СуммаБезНДС,
	|	0										КАК СуммаРегл,
	|	0										КАК СуммаУпр,
	|	0										КАК ПостояннаяРазница,
	|	ПрочиеРасходы.СуммаРегл 
	|		- ПрочиеРасходы.ПостояннаяРазница 
	|		- ПрочиеРасходы.ВременнаяРазница
	|											КАК ВременнаяРазница,
	|	0										КАК СуммаНДД
	|ИЗ
	|	ВТКэшРасчетныеОборотыПрочиеРасходы КАК ПрочиеРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ АналитикиДвиженийПрочихРасходов КАК Аналитики
	|		ПО ПрочиеРасходы.Организация = Аналитики.Организация
	|			И ПрочиеРасходы.Подразделение = Аналитики.Подразделение
	|			И ПрочиеРасходы.СтатьяРасходов = Аналитики.СтатьяРасходов
	|			И ПрочиеРасходы.АналитикаРасходов = Аналитики.АналитикаРасходов
	|			И ПрочиеРасходы.НаправлениеДеятельности = Аналитики.НаправлениеДеятельности
	|ГДЕ
	|	НЕ ПрочиеРасходы.СлужебноеВидДвиженияПриход
	|	И ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл
	|		В (&ВариантыРаспределенияДляСписанияОшибокОкругления)
	|		И ЕСТЬNULL(Аналитики.СписыватьОстатокРегл, ЛОЖЬ)
	|	И НЕ ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовНУ
	|		В (&ВариантыРаспределенияДляСписанияОшибокОкругления)
	|	И ПрочиеРасходы.СуммаРегл - ПрочиеРасходы.ПостояннаяРазница - ПрочиеРасходы.ВременнаяРазница <> 0
	|	И (ПрочиеРасходы.РасчетСебестоимости ИЛИ ПрочиеРасходы.РасчетПартий)
	|	И ПрочиеРасходы.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеРасходовЗаСчетРезервов)
	//-- Локализация
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ДокументыРасчетаСебестоимости.Ссылка 		КАК Регистратор,
	|	&КонецПериода								КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)		КАК ВидДвижения,
	|
	|	ПрочиеРасходы.Организация 					КАК Организация,
	|	ПрочиеРасходы.Подразделение 				КАК Подразделение,
	|	ПрочиеРасходы.СтатьяРасходов 				КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов 			КАК АналитикаРасходов,
	|	ПрочиеРасходы.НаправлениеДеятельности 		КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОшибокОкругления) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеОшибокОкругления) КАК НастройкаХозяйственнойОперации,
	|
	|	СУММА(ПрочиеРасходы.Сумма)					КАК Сумма,
	|	СУММА(ПрочиеРасходы.СуммаБезНДС)			КАК СуммаБезНДС,
	|	СУММА(ПрочиеРасходы.СуммаРегл)				КАК СуммаРегл,
	|	СУММА(ПрочиеРасходы.СуммаУпр)				КАК СуммаУпр,
	|	СУММА(ПрочиеРасходы.ПостояннаяРазница)		КАК ПостояннаяРазница,
	|	СУММА(ПрочиеРасходы.ВременнаяРазница)		КАК ВременнаяРазница,
	|	СУММА(ПрочиеРасходы.СуммаНДД)				КАК СуммаНДД
	|ПОМЕСТИТЬ ВТОкруглениеПрочиеРасходы
	|ИЗ
	|	ВТОкруглениеПрочиеРасходыВрем КАК ПрочиеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыРасчетаСебестоимости
	|			ПО ПрочиеРасходы.Организация = ДокументыРасчетаСебестоимости.Организация
	|СГРУППИРОВАТЬ ПО
	|	ДокументыРасчетаСебестоимости.Ссылка,
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов

	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|";
	
	ТекстыЗапроса = Новый Массив;
	ТекстыЗапроса.Добавить(ТекстЗапросаАналитикиДвиженийПрочихРасходов);
	ТекстыЗапроса.Добавить(ТекстЗапросаНДД);
	ТекстыЗапроса.Добавить(ТекстЗапросаВТОкруглениеПрочиеРасходы);
	
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	РасчетСебестоимостиЛокализация.ПодставитьВЗапросеТипОбъектаРаздельногоУчетаНДД(Запрос.Текст, "ПрочиеРасходы_ОбъектРаздельногоУчетаНДД");
	
	ВариантыРаспределенияДляСписанияОшибокОкругления = Новый Массив();
	ВариантыРаспределенияДляСписанияОшибокОкругления.Добавить(Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров);
	ВариантыРаспределенияДляСписанияОшибокОкругления.Добавить(Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьПродаж);
	
	Запрос.Параметры.Вставить("ВариантыРаспределенияДляСписанияОшибокОкругления", ВариантыРаспределенияДляСписанияОшибокОкругления);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, 
		"АналитикиДвиженийПрочихРасходовВрем, АналитикиДвиженийПрочихРасходов,
		|НастройкиРаспределенияСтатейНДД
		|");
	
	ИмяВременнойТаблицы = "ВтПогрешностьПрочиеРасходы";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	ИмяВременнойТаблицыИсточник = "ВТОкруглениеПрочиеРасходы";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ДобавитьИдентификаторыВоВременнуюТаблицу(ПараметрыРасчета, ОписаниеПриемника, ИмяВременнойТаблицыИсточник);
	
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, ИмяВременнойТаблицыИсточник);
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, ИмяВременнойТаблицыИсточник, ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти


#Область ПрочиеРасходы_КорДвижения

	// Формирование кор. движений в регистре ПрочиеРасходы
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.Регистратор 																	КАК Регистратор,
	|	&КонецПериода 																	КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 											КАК ВидДвижения,
	|	Т.Организация 																	КАК Организация,
	|	Т.Подразделение																	КАК Подразделение,
	|	Т.НаправлениеДеятельности														КАК НаправлениеДеятельности,
	|	СтатьяПогрешности.Ссылка														КАК СтатьяРасходов,
	|	Т.ИдентификаторФинЗаписи														КАК ИдентификаторФинЗаписи,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОшибокОкругления)			КАК ХозяйственнаяОперация,
	|	Т.НастройкаХозяйственнойОперации												КАК НастройкаХозяйственнойОперации,
	|	СУММА(Т.Сумма) 																	КАК Сумма,
	|	СУММА(Т.СуммаРегл) 																КАК СуммаРегл,
	|	СУММА(ВЫБОР КОГДА НЕ СтатьяПогрешности.ПринятиеКНалоговомуУчету
	|		ТОГДА Т.СуммаРегл - Т.ВременнаяРазница
	|		ИНАЧЕ Т.ПостояннаяРазница КОНЕЦ)											КАК ПостояннаяРазница,
	|	СУММА(Т.ВременнаяРазница)														КАК ВременнаяРазница,
	|	СУММА(Т.СуммаНДД) 																КАК СуммаНДД,
	|	СУММА(Т.СуммаУпр) 																КАК СуммаУпр
	|ПОМЕСТИТЬ ВТКорДвиженияПрочиеРасходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.Регистратор 				 	 КАК Регистратор,
	|		Т.Организация 					 КАК Организация,
	|		Т.Подразделение 				 КАК Подразделение,
	|		Т.НаправлениеДеятельности 		 КАК НаправлениеДеятельности,
	|		Т.ИдентификаторФинЗаписи		 КАК ИдентификаторФинЗаписи,
	|		Т.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации,
	|		Т.Стоимость
	|			+ Т.ДопРасходы
	|			+ Т.Трудозатраты
	|			+ Т.ПостатейныеПостоянныеСНДС
	|			+ Т.ПостатейныеПеременныеСНДС КАК Сумма,
	|		Т.СтоимостьРегл
	|			+ Т.ДопРасходыРегл
	|			+ Т.ТрудозатратыРегл
	|			+ Т.ПостатейныеПостоянныеРегл
	|			+ Т.ПостатейныеПеременныеРегл КАК СуммаРегл,
	|		Т.ПостояннаяРазница,
	|		Т.ВременнаяРазница,
	|		Т.СтоимостьНДД КАК СуммаНДД,
	|		Т.СтоимостьУпр
	|			+ Т.ДопРасходыУпр
	|			+ Т.ТрудозатратыУпр
	|			+ Т.ПостатейныеПостоянныеУпр
	|			+ Т.ПостатейныеПеременныеУпр КАК СуммаУпр
	|	ИЗ
	|		ВТОкруглениеСебестоимостьТоваров КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.Регистратор,
	|		Т.Организация,
	|		Т.Подразделение,
	|		Т.НаправлениеДеятельности,
	|		Т.ИдентификаторФинЗаписи,
	|		Т.НастройкаХозяйственнойОперации,
	|		Т.Сумма,
	|		Т.СуммаРегл,
	|		ВЫБОР КОГДА &ПогрешностьПринимаетсяВНУ ТОГДА Т.ПостояннаяРазница ИНАЧЕ Т.СуммаРегл КОНЕЦ,
	|		ВЫБОР КОГДА &ПогрешностьПринимаетсяВНУ ТОГДА Т.ВременнаяРазница ИНАЧЕ 0 КОНЕЦ,
	|		Т.СуммаНДД,
	|		Т.СуммаУпр
	|	ИЗ
	|		ВТОкруглениеПрочиеРасходы КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.Регистратор,
	|		Т.Организация,
	|		Т.Подразделение,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка),
	|		Т.ИдентификаторФинЗаписи,
	|		Т.НастройкаХозяйственнойОперации,
	|		Т.Стоимость,
	|		Т.СтоимостьРегл,
	|		ВЫБОР КОГДА &ПогрешностьПринимаетсяВНУ ТОГДА Т.ПостояннаяРазница ИНАЧЕ Т.СтоимостьРегл КОНЕЦ,
	|		ВЫБОР КОГДА &ПогрешностьПринимаетсяВНУ ТОГДА Т.ВременнаяРазница ИНАЧЕ 0 КОНЕЦ,
	|		Т.СтоимостьНДД КАК СуммаНДД,
	|		Т.СтоимостьУпр
	|	ИЗ
	|		ВТОкруглениеПрочиеРасходыНЗП КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.Регистратор,
	|		Т.Организация,
	|		Т.Подразделение,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка),
	|		Т.ИдентификаторФинЗаписи,
	|		ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеОшибокОкругления) КАК НастройкаХозяйственнойОперации,
	|		Т.СуммаУпр,
	|		Т.СуммаРегл,
	|		ВЫБОР КОГДА &ПогрешностьПринимаетсяВНУ ТОГДА 0 ИНАЧЕ Т.СуммаРегл КОНЕЦ,
	|		ВЫБОР КОГДА &ПогрешностьПринимаетсяВНУ ТОГДА Т.СуммаРегл - Т.СуммаНУ ИНАЧЕ 0 КОНЕЦ,
	|		0 КАК СуммаНДД,
	|		Т.СуммаУпр
	|	ИЗ
	|		ВТОкруглениеРезервыПредстоящихРасходов КАК Т) КАК Т
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьяПогрешности
	|		ПО СтатьяПогрешности.Ссылка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости)
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Регистратор,
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	СтатьяПогрешности.Ссылка,
	|	Т.ИдентификаторФинЗаписи,
	|	Т.НастройкаХозяйственнойОперации
	|
	|ИМЕЮЩИЕ
	|	СУММА(Т.Сумма) <> 0
	|	ИЛИ СУММА(Т.СуммаРегл) <> 0
	|	ИЛИ СУММА(Т.ПостояннаяРазница) <> 0
	|	ИЛИ СУММА(Т.ВременнаяРазница) <> 0
	|	ИЛИ СУММА(Т.СуммаНДД) <> 0
	|	ИЛИ СУММА(Т.СуммаУпр) <> 0
	|";
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтПогрешностьКорПрочиеРасходы";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, "ВТКорДвиженияПрочиеРасходы");
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, "ВТКорДвиженияПрочиеРасходы", ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти

	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвиженияИзВременныхТаблиц(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);

	СоответствиеВременныхТаблицДвижений = Новый Соответствие;
	
#Область ПартииПрочихРасходовСменаУчетнойПолитики

	// Списание остатков производственных статей при смене учетной политики с ФИФО на среднюю.
	// При учете по средней такие статьи не поддерживаются.
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	Т.Ссылка,
	|	0 КАК КоэффициентУпр,
	|	0 КАК КоэффициентРегл
	|ПОМЕСТИТЬ ВТСтатьиПроизводственныхЗатратСменаПолитики
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК Т
	//++ Локализация
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Ссылка,
	|	ВЫБОР КОГДА Т.ВариантРаспределенияРасходовУпр В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства))
	|		ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоэффициентУпр,
	|	ВЫБОР КОГДА Т.ВариантРаспределенияРасходовРегл В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства))
	|		ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоэффициентРегл
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК Т
	|ГДЕ
	|	(Т.ВариантРаспределенияРасходовУпр В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства))
	|		ИЛИ Т.ВариантРаспределенияРасходовРегл В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства))
	|	)
	|	И Т.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	//-- Локализация
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыРасчетаСебестоимости.Ссылка 		КАК Регистратор,
	|	&КонецПериода								КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)		КАК ВидДвижения,
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов,
	|	Т.АналитикаАктивовПассивов,
	|	Т.ДокументПоступленияРасходов,
	|	Т.АналитикаУчетаПартий,
	|	Т.НаправлениеДеятельности,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидДеятельностиНДС,
	|	Т.Стоимость * Отбор.КоэффициентУпр КАК Стоимость,
	|	Т.СтоимостьБезНДС * Отбор.КоэффициентУпр КАК СтоимостьБезНДС,
	|	Т.СтоимостьРегл * Отбор.КоэффициентРегл КАК СтоимостьРегл,
	|	Т.НДСРегл * Отбор.КоэффициентРегл КАК НДСРегл,
	|	Т.ПостояннаяРазница * Отбор.КоэффициентРегл КАК ПостояннаяРазница,
	|	Т.ВременнаяРазница * Отбор.КоэффициентРегл КАК ВременнаяРазница,
	|	Т.НДСУпр * Отбор.КоэффициентУпр КАК НДСУпр
	|ПОМЕСТИТЬ ВТОстаткиПартииПрочихРасходовСменаПолитики
	|ИЗ
	|	ВТКэшРасчетныеОстаткиПартииПрочихРасходов КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыРасчетаСебестоимости
	|		ПО Т.Организация = ДокументыРасчетаСебестоимости.Организация
	|   ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтатьиПроизводственныхЗатратСменаПолитики КАК Отбор
	|       ПО Т.СтатьяРасходов = Отбор.Ссылка
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|   И Т.Организация В (&ОрганизацииСФИФОСкользящаяВПрошломПериоде)
	|   И НЕ Т.Организация В (&ОрганизацииСФИФОСкользящая)
	|";

	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтПартииПрочихРасходовСменаПолитики";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииПрочихРасходов.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	ИмяВременнойТаблицыИсточник = "ВТОстаткиПартииПрочихРасходовСменаПолитики";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ДобавитьИдентификаторыВоВременнуюТаблицу(ПараметрыРасчета, ОписаниеПриемника, ИмяВременнойТаблицыИсточник);
	
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, ИмяВременнойТаблицыИсточник);
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, ИмяВременнойТаблицыИсточник, ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти

	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвиженияИзВременныхТаблиц(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);

	СоответствиеВременныхТаблицДвижений = Новый Соответствие;

#Область ПартииПрочихРасходовРазвернутоеСальдо

	// Списание развернутого сальдо в регистре ПартииПрочихРасходов
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов,
	|	Т.АналитикаАктивовПассивов,
	|	Т.ДокументПоступленияРасходов,
	|	ВЫРАЗИТЬ(Т.АналитикаУчетаПартий КАК Справочник.КлючиАналитикиУчетаПартий) КАК АналитикаУчетаПартий,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидДеятельностиНДС,
	|	Т.Стоимость,
	|	Т.СтоимостьБезНДС,
	|	Т.СтоимостьРегл,
	|	Т.НДСРегл,
	|	Т.ПостояннаяРазница,
	|	Т.ВременнаяРазница,
	|	Т.НДСУпр
	|ПОМЕСТИТЬ ВТОстаткиПартииПрочихРасходовПолные
	|ИЗ
	|	ВТКэшРасчетныеОстаткиПартииПрочихРасходов КАК Т
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И (Т.СтатьяРасходов.ВариантРаспределенияРасходовУпр В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		 И Т.СтатьяРасходов.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|		ИЛИ Т.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		 И Т.СтатьяРасходов.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение))
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтатьяРасходов,
	|	АналитикаРасходов,
	|	Подразделение,
	|	НаправлениеДеятельности
	|;
	|//////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов,
	|	СУММА(Т.Стоимость) КАК Стоимость,
	|	СУММА(Т.СтоимостьБезНДС) КАК СтоимостьБезНДС,
	|	СУММА(Т.СтоимостьРегл) КАК СтоимостьРегл,
	|	СУММА(Т.НДСРегл) КАК НДСРегл,
	|	СУММА(Т.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(Т.ВременнаяРазница) КАК ВременнаяРазница,
	|	СУММА(Т.НДСУпр) КАК НДСУпр
	|ПОМЕСТИТЬ ВТОстаткиПартииПрочихРасходовСвернутые
	|ИЗ
	|	ВТОстаткиПартииПрочихРасходовПолные КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов
	|ИМЕЮЩИЕ
	|	(СУММА(Т.Стоимость) <> 0 И Т.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.НДСНалоговогоАгента))
	|	ИЛИ СУММА(Т.СтоимостьБезНДС) <> 0
	|	ИЛИ СУММА(Т.СтоимостьРегл) <> 0
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтатьяРасходов,
	|	АналитикаРасходов,
	|	Подразделение,
	|	НаправлениеДеятельности
	|;
	|//////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов,
	|	СУММА(Т.СтоимостьОстаток) КАК Стоимость,
	|	СУММА(Т.СтоимостьБезНДСОстаток) КАК СтоимостьБезНДС,
	|	СУММА(Т.СтоимостьРеглОстаток) КАК СтоимостьРегл,
	|	СУММА(Т.НДСРеглОстаток) КАК НДСРегл,
	|	СУММА(Т.ПостояннаяРазницаОстаток) КАК ПостояннаяРазница,
	|	СУММА(Т.ВременнаяРазницаОстаток) КАК ВременнаяРазница,
	|	СУММА(Т.НДСУпрОстаток) КАК НДСУпр
	|ПОМЕСТИТЬ ВТНачальныеОстаткиПартииПрочихРасходов
	|ИЗ
	|	РегистрНакопления.ПартииПрочихРасходов.Остатки(&ГраницаКонецПредыдущегоПериода,
	|		(Организация, Подразделение, НаправлениеДеятельности, СтатьяРасходов, АналитикаРасходов)
	|			В (ВЫБРАТЬ Организация, Подразделение, НаправлениеДеятельности, СтатьяРасходов, АналитикаРасходов ИЗ ВТОстаткиПартииПрочихРасходовСвернутые)) КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтатьяРасходов,
	|	АналитикаРасходов,
	|	Подразделение,
	|	НаправлениеДеятельности
	|;
	|//////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов
	|ПОМЕСТИТЬ ВТОборотыПоДокументам
	|ИЗ
	|	ВТКэшРасчетныеОборотыПартииПрочихРасходов КАК Т
	|ГДЕ
	|	НЕ ТИПЗНАЧЕНИЯ(Т.Регистратор) В
	|		(ТИП(Документ.РасчетСебестоимостиТоваров),
	|		 ТИП(Документ.КорректировкаРегистров),
	|		 ТИП(Документ.ПрочиеДоходыРасходы))
	|;
	|//////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов
	|ПОМЕСТИТЬ ВТОстаткиПрочиеРасходыПолные
	|ИЗ
	|	ВТКэшРасчетныеОстаткиПрочиеРасходы КАК Т
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И (Т.СтатьяРасходов.ВариантРаспределенияРасходовУпр В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		 И Т.СтатьяРасходов.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|		 И (Т.Сумма <> 0 ИЛИ Т.СуммаБезНДС <> 0)
	|		ИЛИ Т.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		 И Т.СтатьяРасходов.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|		 И (Т.СуммаРегл <> 0))
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СтатьяРасходов,
	|	АналитикаРасходов,
	|	Подразделение,
	|	НаправлениеДеятельности
	|;
	|//////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыРасчетаСебестоимости.Ссылка 		КАК Регистратор,
	|	&КонецПериода								КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)		КАК ВидДвижения,
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов,
	|	Т.АналитикаАктивовПассивов,
	|	Т.ДокументПоступленияРасходов,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидДеятельностиНДС,
	|	&ОсновноеНалогообложениеИБ КАК НалогообложениеНДС,
	|	ВЫБОР КОГДА
	// Аналогичное условие в секции ГДЕ 
	|		Отбор1.СтоимостьРегл = -Отбор1.НДСРегл
	|		  И Отбор1.Стоимость = 0
	|		  И Отбор1.СтоимостьБезНДС = 0
	// Для исключения движений свертки развернутого сальдо из механизмов НДС и проводок
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.Расчетное)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗаписейПартий.ПустаяСсылка)
	|	КОНЕЦ КАК ТипЗаписи,
	|	Т.Стоимость,
	|	Т.СтоимостьБезНДС,
	|	Т.СтоимостьРегл,
	|	Т.НДСРегл,
	|	Т.ПостояннаяРазница,
	|	Т.ВременнаяРазница,
	|	Т.НДСУпр
	|ПОМЕСТИТЬ ВТСписаниеРазвернутогоСальдоПартийПрочихРасходов
	|ИЗ
	|	ВТОстаткиПартииПрочихРасходовПолные КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыРасчетаСебестоимости
	|		ПО Т.Организация = ДокументыРасчетаСебестоимости.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиПартииПрочихРасходовСвернутые КАК Отбор1
	|		ПО Т.СтатьяРасходов = Отбор1.СтатьяРасходов
	|		 И  Т.АналитикаРасходов = Отбор1.АналитикаРасходов
	|		 И  Т.Подразделение = Отбор1.Подразделение
	|		 И  Т.Организация = Отбор1.Организация
	|		 И  Т.НаправлениеДеятельности = Отбор1.НаправлениеДеятельности
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиПрочиеРасходыПолные КАК Отбор2
	|		ПО Т.СтатьяРасходов = Отбор2.СтатьяРасходов
	|		 И  Т.АналитикаРасходов = Отбор2.АналитикаРасходов
	|		 И  Т.Подразделение = Отбор2.Подразделение
	|		 И  Т.Организация = Отбор2.Организация
	|		 И  Т.НаправлениеДеятельности = Отбор2.НаправлениеДеятельности
	|ГДЕ
	|	(Отбор1.СтатьяРасходов ЕСТЬ NULL
	|	 ИЛИ (Отбор1.Стоимость МЕЖДУ -&ЗначениеПогрешностиРасходыУпр И &ЗначениеПогрешностиРасходыУпр
	|	 	  И Отбор1.СтоимостьБезНДС МЕЖДУ -&ЗначениеПогрешностиРасходыУпр И &ЗначениеПогрешностиРасходыУпр
	|	 	  И Отбор1.СтоимостьРегл МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|	 	  И Отбор1.НДСРегл МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|	 	  И Отбор1.ПостояннаяРазница МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|	 	  И Отбор1.ВременнаяРазница МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|	 	  И Отбор1.НДСУпр МЕЖДУ -&ЗначениеПогрешностиРасходыУпр И &ЗначениеПогрешностиРасходыУпр)
	// Аналогичное условие при заполнении типа записи 
	|	 ИЛИ (Отбор1.СтоимостьРегл = -Отбор1.НДСРегл
	|		  И Отбор1.Стоимость = 0
	|		  И Отбор1.СтоимостьБезНДС = 0))
	|	И Отбор2.СтатьяРасходов ЕСТЬ NULL
	|;
	|//////////////////////////////////////////////////////////////////////////////////////////////
	// Списываем остатки по партиям прочих расходов в следующем случае:
	//	- есть остатки по партиям прочих расходов
	//  - есть "свернутые" остатки по партиям прочих расходов (т.е. проблема не в различиях движений по документу поступления)
	//  - нет остатков прочих расходов
	//  - нет начальных остатков в партиях прочих расходов
	//	- движения в текущем периоде по партиям прочих расходов есть только у служебных документов
	//  Т.е. если остатки партий прочих расходов возникли в текущем периоде из-за движений служебных документов,
	//  при том, что регистр прочих расходов закрыт, то такие остатки можно списать.
	|ВЫБРАТЬ
	|	ДокументыРасчетаСебестоимости.Ссылка 		КАК Регистратор,
	|	&КонецПериода								КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)		КАК ВидДвижения,
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов,
	|	Т.АналитикаАктивовПассивов,
	|	Т.ДокументПоступленияРасходов,
	|	Т.АналитикаУчетаПартий,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидДеятельностиНДС,
	|	&ОсновноеНалогообложениеИБ КАК НалогообложениеНДС,
	|	Т.Стоимость,
	|	Т.СтоимостьБезНДС,
	|	Т.СтоимостьРегл,
	|	Т.НДСРегл,
	|	Т.ПостояннаяРазница,
	|	Т.ВременнаяРазница,
	|	Т.НДСУпр
	|ПОМЕСТИТЬ ВТСписаниеОстатковПоСлужебнымДокументам
	|ИЗ
	|	ВТОстаткиПартииПрочихРасходовПолные КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыРасчетаСебестоимости
	|		ПО Т.Организация = ДокументыРасчетаСебестоимости.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиПартииПрочихРасходовСвернутые КАК Отбор1
	|		ПО Т.СтатьяРасходов = Отбор1.СтатьяРасходов
	|		 И  Т.АналитикаРасходов = Отбор1.АналитикаРасходов
	|		 И  Т.Подразделение = Отбор1.Подразделение
	|		 И  Т.Организация = Отбор1.Организация
	|		 И  Т.НаправлениеДеятельности = Отбор1.НаправлениеДеятельности
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиПрочиеРасходыПолные КАК Отбор2
	|		ПО Т.СтатьяРасходов = Отбор2.СтатьяРасходов
	|		 И  Т.АналитикаРасходов = Отбор2.АналитикаРасходов
	|		 И  Т.Подразделение = Отбор2.Подразделение
	|		 И  Т.Организация = Отбор2.Организация
	|		 И  Т.НаправлениеДеятельности = Отбор2.НаправлениеДеятельности
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТНачальныеОстаткиПартииПрочихРасходов КАК Отбор3
	|		ПО Т.СтатьяРасходов = Отбор3.СтатьяРасходов
	|		 И  Т.АналитикаРасходов = Отбор3.АналитикаРасходов
	|		 И  Т.Подразделение = Отбор3.Подразделение
	|		 И  Т.Организация = Отбор3.Организация
	|		 И  Т.НаправлениеДеятельности = Отбор3.НаправлениеДеятельности
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОборотыПоДокументам КАК Отбор4
	|		ПО Т.СтатьяРасходов = Отбор4.СтатьяРасходов
	|		 И  Т.АналитикаРасходов = Отбор4.АналитикаРасходов
	|		 И  Т.Подразделение = Отбор4.Подразделение
	|		 И  Т.Организация = Отбор4.Организация
	|		 И  Т.НаправлениеДеятельности = Отбор4.НаправлениеДеятельности
	|ГДЕ
	|	НЕ Отбор1.СтатьяРасходов ЕСТЬ NULL
	|	И Отбор2.СтатьяРасходов ЕСТЬ NULL
	|	И Отбор3.СтатьяРасходов ЕСТЬ NULL
	|	И Отбор4.СтатьяРасходов ЕСТЬ NULL
	|;
	|//////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Регистратор,
	|	Т.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	Т.Организация КАК Организация,
	|	Т.Подразделение КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.СтатьяРасходов КАК СтатьяРасходов,
	|	Т.АналитикаРасходов КАК АналитикаРасходов,
	|	Т.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Т.АналитикаУчетаПартий.Контрагент КАК Поставщик,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(Т.ДокументПоступленияРасходов) В (&ТипыДокументовПартии)
	|		ТОГДА Т.ДокументПоступленияРасходов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ДокументПоступленияРасходов,
	|	Т.ВидДеятельностиНДС,
	|	Т.АналитикаУчетаПартий.ВидЦенности КАК ВидЦенности,
	|	Т.АналитикаУчетаПартий.СтавкаНДС КАК СтавкаНДС,
	|	Т.СтоимостьРегл КАК СтоимостьРегл,
	|	Т.НДСРегл КАК НДСРегл,
	|	Т.НДСУпр КАК НДСУпр
	|ПОМЕСТИТЬ ВТОкруглениеПартииНДСКРаспределению
	|ИЗ
	|	ВТСписаниеРазвернутогоСальдоПартийПрочихРасходов КАК Т
	|ГДЕ
	|	Т.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ОпределяетсяРаспределением)
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	// Партии прочих расходов, развернутое сальдо
	ИмяВременнойТаблицы = "ВТРазвернутоеСальдоПартийПрочихРасходов";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииПрочихРасходов.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	ИмяВременнойТаблицыИсточник = "ВТСписаниеРазвернутогоСальдоПартийПрочихРасходов";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ДобавитьИдентификаторыВоВременнуюТаблицу(ПараметрыРасчета, ОписаниеПриемника, ИмяВременнойТаблицыИсточник);
	
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, ИмяВременнойТаблицыИсточник);
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, ИмяВременнойТаблицыИсточник, ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
	// Партии прочих расходов, остатки по служебным документам
	ИмяВременнойТаблицы = "ВТСлужебныеОстаткиПартийПрочихРасходов";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииПрочихРасходов.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	ИмяВременнойТаблицыИсточник = "ВТСписаниеОстатковПоСлужебнымДокументам";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ДобавитьИдентификаторыВоВременнуюТаблицу(ПараметрыРасчета, ОписаниеПриемника, ИмяВременнойТаблицыИсточник);
	
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, ИмяВременнойТаблицыИсточник);
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, ИмяВременнойТаблицыИсточник, ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
	//++ Локализация

	// Партии НДС к распределению

	Если ПараметрыРасчета.ПартионныйУчетВерсии22 Тогда
		
		ИмяВременнойТаблицы = "ВтПогрешностьПартииНДСКРаспределению";
		ИмяРегистра = Метаданные.РегистрыНакопления.ПартииНДСКРаспределению.Имя;
		ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
		ИмяВременнойТаблицыИсточник = "ВТОкруглениеПартииНДСКРаспределению";
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ДобавитьИдентификаторыВоВременнуюТаблицу(ПараметрыРасчета, ОписаниеПриемника, ИмяВременнойТаблицыИсточник);
		
		КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, ИмяВременнойТаблицыИсточник);
		
		ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
		РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
			ИмяРегистра, ИмяВременнойТаблицыИсточник, ИмяВременнойТаблицы);
		
		СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
		
	Иначе
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	*,
		|	ИСТИНА КАК РасчетПартий
		|ИЗ
		|	ВТОкруглениеПартииНДСКРаспределению КАК Т";
		
		РасчетныеПартииНДСКРаспределению = Запрос.Выполнить().Выгрузить();
		ПартионныйУчет.ЗаписатьРасчетныеПартии(РегистрыНакопления.ПартииНДСКРаспределению, РасчетныеПартииНДСКРаспределению, Неопределено);
		
	КонецЕсли;

	//-- Локализация
	
#КонецОбласти

	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвиженияИзВременныхТаблиц(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);

	СоответствиеВременныхТаблицДвижений = Новый Соответствие;
	
#Область ПартииПрочихРасходов

	// Списание ошибок округления в регистре ПартииПрочихРасходов
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Т.Организация КАК Организация,
	|	Т.Подразделение КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.СтатьяРасходов КАК СтатьяРасходов,
	|	Т.АналитикаРасходов КАК АналитикаРасходов,
	|	Т.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Т.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|
	|	ВЫБОР КОГДА Т.Стоимость МЕЖДУ -&ЗначениеПогрешностиРасходыУпр И &ЗначениеПогрешностиРасходыУпр
	|		И Т.СтатьяРасходов.ВариантРаспределенияРасходовУпр В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		ТОГДА Т.Стоимость
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА Т.СтоимостьБезНДС МЕЖДУ -&ЗначениеПогрешностиРасходыУпр И &ЗначениеПогрешностиРасходыУпр
	|		И Т.СтатьяРасходов.ВариантРаспределенияРасходовУпр В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		ТОГДА Т.СтоимостьБезНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА Т.СтоимостьРегл МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|		И Т.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		ТОГДА Т.СтоимостьРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР КОГДА Т.НДСРегл МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|		И Т.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		ТОГДА Т.НДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСРегл,
	|	ВЫБОР КОГДА Т.ПостояннаяРазница МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|		И Т.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		ТОГДА Т.ПостояннаяРазница
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПостояннаяРазница,
	|	ВЫБОР КОГДА Т.ВременнаяРазница МЕЖДУ -&ЗначениеПогрешностиРасходыРегл И &ЗначениеПогрешностиРасходыРегл
	|		И Т.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		ТОГДА Т.ВременнаяРазница
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВременнаяРазница,
	|	ВЫБОР КОГДА Т.НДСУпр МЕЖДУ -&ЗначениеПогрешностиРасходыУпр И &ЗначениеПогрешностиРасходыУпр
	|		И Т.СтатьяРасходов.ВариантРаспределенияРасходовУпр В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		ТОГДА Т.НДСУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДСУпр
	|ПОМЕСТИТЬ ВТОстаткиПартииПрочихРасходов
	|ИЗ
	|	ВТКэшРасчетныеОстаткиПартииПрочихРасходов КАК Т
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|	И (Т.СтатьяРасходов.ВариантРаспределенияРасходовУпр В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		 И Т.СтатьяРасходов.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|		ИЛИ Т.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		 И Т.СтатьяРасходов.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение))
	|ИНДЕКСИРОВАТЬ ПО
	|	СтатьяРасходов,
	|	Подразделение,
	|	Организация
	|;
	|//////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация КАК Организация,
	|	Т.Подразделение КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.СтатьяРасходов КАК СтатьяРасходов,
	|	Т.АналитикаРасходов КАК АналитикаРасходов,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.СтатьяРасходов.ВариантРаспределенияРасходовУпр В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		 	  И Т.СтатьяРасходов.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|				ТОГДА ВЫБОР КОГДА Т.Сумма <> 0 ИЛИ Т.СуммаБезНДС <> 0 ИЛИ Т.СуммаУпр <> 0 ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ
	|				ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК СписыватьУпр,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		 	  И Т.СтатьяРасходов.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|				ТОГДА ВЫБОР КОГДА Т.СуммаРегл <> 0 ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ
	|				ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК СписыватьРегл,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		 	  И Т.СтатьяРасходов.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|				ТОГДА ВЫБОР КОГДА Т.ПостояннаяРазница <> 0 ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ
	|				ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК СписыватьПР,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА Т.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты),
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|		 	  И Т.СтатьяРасходов.ВариантРаздельногоУчетаНДС <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|				ТОГДА ВЫБОР КОГДА Т.ВременнаяРазница <> 0 ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ
	|				ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК СписыватьВР
	|ПОМЕСТИТЬ ВТОстаткиПрочиеРасходы
	|ИЗ
	|	ВТКэшРасчетныеОстаткиПрочиеРасходы КАК Т
	|ГДЕ
	|	&ПартионныйУчетВерсии22
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.СтатьяРасходов,
	|	Т.АналитикаРасходов
	|ИНДЕКСИРОВАТЬ ПО
	|	СтатьяРасходов,
	|	Подразделение,
	|	Организация
	|;
	|//////////////////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыРасчетаСебестоимости.Ссылка 		КАК Регистратор,
	|	&КонецПериода								КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)		КАК ВидДвижения,
	|	Т.Организация КАК Организация,
	|	Т.Подразделение КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.СтатьяРасходов КАК СтатьяРасходов,
	|	Т.АналитикаРасходов КАК АналитикаРасходов,
	|	Т.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	Т.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	Т.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	&ОсновноеНалогообложениеИБ КАК НалогообложениеНДС,
	|	ВЫБОР КОГДА ЕСТЬNULL(Отбор.СписыватьУпр, ИСТИНА) ТОГДА Т.Стоимость ИНАЧЕ 0 КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА ЕСТЬNULL(Отбор.СписыватьУпр, ИСТИНА) ТОГДА Т.СтоимостьБезНДС ИНАЧЕ 0 КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА ЕСТЬNULL(Отбор.СписыватьУпр, ИСТИНА) ТОГДА Т.НДСУпр ИНАЧЕ 0 КОНЕЦ КАК НДСУпр,
	|	ВЫБОР КОГДА ЕСТЬNULL(Отбор.СписыватьРегл, ИСТИНА) ТОГДА Т.СтоимостьРегл ИНАЧЕ 0 КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР КОГДА ЕСТЬNULL(Отбор.СписыватьРегл, ИСТИНА) ТОГДА Т.НДСРегл ИНАЧЕ 0 КОНЕЦ КАК НДСРегл,
	|	ВЫБОР КОГДА ЕСТЬNULL(Отбор.СписыватьПР, ИСТИНА) ТОГДА Т.ПостояннаяРазница ИНАЧЕ 0 КОНЕЦ КАК ПостояннаяРазница,
	|	ВЫБОР КОГДА ЕСТЬNULL(Отбор.СписыватьВР, ИСТИНА) ТОГДА Т.ВременнаяРазница ИНАЧЕ 0 КОНЕЦ КАК ВременнаяРазница
	|ПОМЕСТИТЬ ВТОкруглениеПартииПрочихРасходов
	|ИЗ
	|	ВТОстаткиПартииПрочихРасходов КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыРасчетаСебестоимости
	|		ПО Т.Организация = ДокументыРасчетаСебестоимости.Организация
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиПрочиеРасходы КАК Отбор
	|		ПО Т.СтатьяРасходов = Отбор.СтатьяРасходов
	|		И Т.Подразделение = Отбор.Подразделение
	|		И Т.Организация = Отбор.Организация
	|		И Т.АналитикаРасходов = Отбор.АналитикаРасходов
	|		И Т.НаправлениеДеятельности = Отбор.НаправлениеДеятельности
	|ГДЕ
	|	ВЫБОР КОГДА ЕСТЬNULL(Отбор.СписыватьУпр, ИСТИНА) ТОГДА Т.Стоимость ИНАЧЕ 0 КОНЕЦ <> 0
	|		ИЛИ ВЫБОР КОГДА ЕСТЬNULL(Отбор.СписыватьУпр, ИСТИНА) ТОГДА Т.СтоимостьБезНДС ИНАЧЕ 0 КОНЕЦ <> 0
	|		ИЛИ ВЫБОР КОГДА ЕСТЬNULL(Отбор.СписыватьУпр, ИСТИНА) ТОГДА Т.НДСУпр ИНАЧЕ 0 КОНЕЦ <> 0
	|		ИЛИ ВЫБОР КОГДА ЕСТЬNULL(Отбор.СписыватьРегл, ИСТИНА) ТОГДА Т.СтоимостьРегл ИНАЧЕ 0 КОНЕЦ <> 0
	|		ИЛИ ВЫБОР КОГДА ЕСТЬNULL(Отбор.СписыватьРегл, ИСТИНА) ТОГДА Т.НДСРегл ИНАЧЕ 0 КОНЕЦ <> 0
	|		ИЛИ ВЫБОР КОГДА ЕСТЬNULL(Отбор.СписыватьПР, ИСТИНА) ТОГДА Т.ПостояннаяРазница ИНАЧЕ 0 КОНЕЦ <> 0
	|		ИЛИ ВЫБОР КОГДА ЕСТЬNULL(Отбор.СписыватьВР, ИСТИНА) ТОГДА Т.ВременнаяРазница ИНАЧЕ 0 КОНЕЦ <> 0
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	
	ИмяВременнойТаблицы = "ВтПогрешностьПартииПрочихРасходов";
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииПрочихРасходов.Имя;
	ОписаниеПриемника = ПараметрыРасчета.Движения[ИмяРегистра];
	ИмяВременнойТаблицыИсточник = "ВТОкруглениеПартииПрочихРасходов";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ДобавитьИдентификаторыВоВременнуюТаблицу(ПараметрыРасчета, ОписаниеПриемника, ИмяВременнойТаблицыИсточник);
	
	КопируемыеПоля = РасчетСебестоимостиУниверсальныеАлгоритмы.ПолучитьИменаКолонокВременнойТаблицыСтрокой(ПараметрыРасчета, ИмяВременнойТаблицыИсточник);
	
	ТаблицаОписанияПолей = РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьОписаниеПолейЗапроса(ОписаниеПриемника.Таблица);
	РасчетСебестоимостиПрикладныеАлгоритмы.КопироватьПоляЗапроса(ТаблицаОписанияПолей, КопируемыеПоля);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросПоОписаниюПолей(ПараметрыРасчета, ТаблицаОписанияПолей, 
		ИмяРегистра, ИмяВременнойТаблицыИсточник, ИмяВременнойТаблицы);
	
	СоответствиеВременныхТаблицДвижений.Вставить(ИмяВременнойТаблицы, ИмяРегистра);
	
#КонецОбласти

	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвиженияИзВременныхТаблиц(ПараметрыРасчета, СоответствиеВременныхТаблицДвижений);

#Область ОборотныеРегистрыУпрУчета
 
	// Корректировка движений по оборотным регистрам управленческого учета.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&КонецПериода 					КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакрытиеМесяца) КАК ХозяйственнаяОперация,
	|	Т.ДокументДвижения 				КАК ДокументДвижения,
	|	Т.Организация 					КАК Организация,
	|	Т.Подразделение 				КАК Подразделение,
	|	Т.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
	|	Т.НаправлениеДеятельности		КАК НаправлениеДеятельности,
	|	Т.НаправлениеДеятельности		КАК КорНаправлениеДеятельности,
	|	Т.Склад 						КАК Склад,
	|	Т.ТипЗапасов 					КАК ТипЗапасов,
	|	Т.ВидЗапасов 					КАК ВидЗапасов,
	|	Т.СтатьяРасходовСписания 		КАК СтатьяРасходовСписания,
	|	Т.АналитикаРасходов 			КАК АналитикаРасходов,
	|	Т.ИсточникГФУНоменклатуры		КАК ИсточникГФУНоменклатуры,
	|	СУММА(Т.Стоимость) 				КАК Стоимость,
	|	СУММА(Т.СтоимостьБезНДС) 		КАК СтоимостьБезНДС,
	|	СУММА(Т.СтоимостьРегл) 			КАК СтоимостьРегл,
	|	СУММА(Т.СтоимостьУпр) 			КАК СтоимостьУпр
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.Регистратор	 											КАК ДокументДвижения,
	|		Т.Организация 												КАК Организация,
	|		НЕОПРЕДЕЛЕНО 												КАК Подразделение,
	|		Т.НаправлениеДеятельности									КАК НаправлениеДеятельности,
	|		Т.АналитикаУчетаНоменклатуры 								КАК АналитикаУчетаНоменклатуры,
	|		АналитикаНоменклатуры.МестоХранения							КАК Склад,
	|		Т.ВидЗапасов.ТипЗапасов 									КАК ТипЗапасов,
	|		Т.ВидЗапасов 												КАК ВидЗапасов,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости) КАК СтатьяРасходовСписания,
	|		НЕОПРЕДЕЛЕНО 												КАК АналитикаРасходов,
	|		ВЫБОР
	|			КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|				ТОГДА Т.ВидЗапасов
	|			ИНАЧЕ АналитикаНоменклатуры.Номенклатура
	|		КОНЕЦ 														КАК ИсточникГФУНоменклатуры,
	|		-(Т.Стоимость + Т.ДопРасходы)								КАК Стоимость,
	|		-(Т.СтоимостьБезНДС + Т.ДопРасходыБезНДС)					КАК СтоимостьБезНДС,
	|		-Т.СтоимостьРегл 											КАК СтоимостьРегл,
	|		-Т.СтоимостьУпр 											КАК СтоимостьУпр
	|	ИЗ
	|		ВТОкруглениеСебестоимостьТоваров КАК Т
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|			ПО Т.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.Регистратор	 											КАК ДокументДвижения,
	|		Т.Организация 												КАК Организация,
	|		Т.Подразделение 											КАК Подразделение,
	|		Т.НаправлениеДеятельности									КАК НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО 												КАК АналитикаУчетаНоменклатуры,
	|		НЕОПРЕДЕЛЕНО 												КАК Склад,
	|		НЕОПРЕДЕЛЕНО 												КАК ТипЗапасов,
	|		НЕОПРЕДЕЛЕНО 												КАК ВидЗапасов,
	|		Т.СтатьяРасходов 											КАК СтатьяДоходовРасходов,
	|		Т.АналитикаРасходов 										КАК АналитикаРасходов,
	|		НЕОПРЕДЕЛЕНО 												КАК ИсточникГФУНоменклатуры,
	|		-Т.Сумма 													КАК Стоимость,
	|		-Т.СуммаБезНДС 												КАК СтоимостьБезНДС,
	|		-Т.СуммаРегл 												КАК СтоимостьРегл,
	|		-Т.СуммаУпр 												КАК СтоимостьУпр
	|	ИЗ
	|		ВТОкруглениеПрочиеРасходы КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.Регистратор	 											КАК ДокументДвижения,
	|		Т.Организация 												КАК Организация,
	|		Т.Подразделение 											КАК Подразделение,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)	КАК НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО 												КАК АналитикаУчетаНоменклатуры,
	|		НЕОПРЕДЕЛЕНО 												КАК Склад,
	|		НЕОПРЕДЕЛЕНО 												КАК ТипЗапасов,
	|		НЕОПРЕДЕЛЕНО 												КАК ВидЗапасов,
	|		Т.СтатьяРасходов 											КАК СтатьяДоходовРасходов,
	|		Т.АналитикаРасходов 										КАК АналитикаРасходов,
	|		НЕОПРЕДЕЛЕНО 												КАК ИсточникГФУНоменклатуры,
	|		-Т.Стоимость												КАК Стоимость,
	|		-Т.СтоимостьБезНДС											КАК СтоимостьБезНДС,
	|		-Т.СтоимостьРегл											КАК СтоимостьРегл,
	|		-Т.СтоимостьУпр												КАК СтоимостьУпр
	|	ИЗ
	|		ВТОкруглениеПрочиеРасходыНЗП КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.Регистратор	 											КАК ДокументДвижения,
	|		Т.Организация 												КАК Организация,
	|		НЕОПРЕДЕЛЕНО 												КАК Подразделение,
	|		Т.НаправлениеДеятельности									КАК НаправлениеДеятельности,
	|		НЕОПРЕДЕЛЕНО 												КАК АналитикаУчетаНоменклатуры,
	|		НЕОПРЕДЕЛЕНО 												КАК Склад,
	|		НЕОПРЕДЕЛЕНО 												КАК ТипЗапасов,
	|		НЕОПРЕДЕЛЕНО 												КАК ВидЗапасов,
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости) КАК СтатьяДоходовРасходов,
	|		НЕОПРЕДЕЛЕНО 												КАК АналитикаРасходов,
	|		НЕОПРЕДЕЛЕНО 												КАК ИсточникГФУНоменклатуры,
	|		Т.Сумма 													КАК Стоимость,
	|		0 															КАК СтоимостьБезНДС,
	|		0 															КАК СтоимостьРегл,
	|		0 															КАК СтоимостьУпр
	|	ИЗ
	|		ВТКорДвиженияПрочиеРасходы КАК Т) КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.ДокументДвижения,
	|	Т.Организация,
	|	Т.Подразделение,
	|	Т.НаправлениеДеятельности,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.Склад,
	|	Т.ТипЗапасов,
	|	Т.ВидЗапасов,
	|	Т.СтатьяРасходовСписания,
	|	Т.АналитикаРасходов,
	|	Т.ИсточникГФУНоменклатуры
	|
	|ИМЕЮЩИЕ
	|	(СУММА(Т.Стоимость) <> 0
	|		ИЛИ СУММА(Т.СтоимостьБезНДС) <> 0
	|		ИЛИ СУММА(Т.СтоимостьРегл) <> 0
	|		ИЛИ СУММА(Т.СтоимостьУпр) <> 0)";
	
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина,,, НСтр("ru = 'Регистры упр. учета'", ОбщегоНазначения.КодОсновногоЯзыка()));
	
	Пока Выборка.Следующий() Цикл
		СформироватьДвиженияПоОборотнымРегистрамУпрУчета(ПараметрыРасчета, Выборка);
	КонецЦикла;

#КонецОбласти
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	
	// Уничтожим ненужные временные таблицы.
	НовыеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета, СуществующиеВТ);
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, НовыеВТ);
	
КонецПроцедуры


// Этап 4.1
// Процедура выполняет распределение выручки и себестоимости продаж по направлениям деятельности.
//
// Параметры:
// ПараметрыРасчета - см. РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьОбщиеПараметрыРасчета
//
Процедура РаспределитьВыручкуПоНаправлениямДеятельности(ПараметрыРасчета) Экспорт
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "РаспределитьВыручкуПоНаправлениямДеятельности");
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВыручкаИСебестоимость.Подразделение             		 КАК Подразделение,
	|	АналитикаПоПартнерам.Организация                		 КАК Организация,
	|	АналитикаПоПартнерам.Партнер                    		 КАК Партнер,
	|	АналитикаПоПартнерам.НаправлениеДеятельности      		 КАК НаправлениеДеятельности,
	|	АналитикаНоменклатуры.Номенклатура              		 КАК Номенклатура,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ВыручкаОтПродаж) КАК СтатьяДоходов,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.СебестоимостьПродаж) КАК СтатьяРасходов,
	|	СУММА(ВыручкаИСебестоимость.СуммаВыручки)				 КАК СуммаВыручки,
	|	СУММА(ВыручкаИСебестоимость.Стоимость
	|		+ ВыручкаИСебестоимость.ДопРасходы
	|		+ ВыручкаИСебестоимость.ПостатейныеПостоянныеСНДС
	|		+ ВыручкаИСебестоимость.ПостатейныеПеременныеСНДС
	|		+ ВыручкаИСебестоимость.Трудозатраты
	|		+ ВыручкаИСебестоимость.РасходыНаПродажуСНДС) КАК Себестоимость
	|ПОМЕСТИТЬ ВТТаблицаВыручки
	|ИЗ
	|	ВТКэшРасчетныеОборотыВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборАналитикаПоПартнерам КАК АналитикаПоПартнерам
	|			ПО ВыручкаИСебестоимость.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|			ПО ВыручкаИСебестоимость.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|ГДЕ
	|	ВыручкаИСебестоимость.ТипЗапасов В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		 ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимость.Подразделение,
	|	АналитикаПоПартнерам.Организация,
	|	АналитикаПоПартнерам.Партнер,
	|	АналитикаПоПартнерам.НаправлениеДеятельности,
	|	АналитикаНоменклатуры.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВыручкаИСебестоимость.СуммаВыручки) <> 0
	|	ИЛИ СУММА(ВыручкаИСебестоимость.Стоимость
	|		+ ВыручкаИСебестоимость.ДопРасходы
	|		+ ВыручкаИСебестоимость.ПостатейныеПостоянныеСНДС
	|		+ ВыручкаИСебестоимость.ПостатейныеПеременныеСНДС
	|		+ ВыручкаИСебестоимость.Трудозатраты
	|		+ ВыручкаИСебестоимость.РасходыНаПродажуСНДС) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочаяВыручка.Подразделение                                  КАК Подразделение,
	|	ПрочаяВыручка.Организация                                    КАК Организация,
	|	ПрочаяВыручка.Партнер                                        КАК Партнер,
	|	ПрочаяВыручка.НаправлениеДеятельности                        КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                                 КАК Номенклатура,
	|	ПрочаяВыручка.СтатьяДоходов                                  КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО                                                 КАК СтатьяРасходов,
	|	СУММА(ПрочаяВыручка.ВыручкаБезНДСУпр + ПрочаяВыручка.НДСУпр) КАК СуммаВыручки,
	|	0                                                            КАК Себестоимость
	|ИЗ
	|	РегистрНакопления.ПрочаяВыручка КАК ПрочаяВыручка
	|ГДЕ
	|	ПрочаяВыручка.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПрочаяВыручка.Организация В (&МассивОрганизаций)
	|	И ПрочаяВыручка.Активность
	|СГРУППИРОВАТЬ ПО
	|	ПрочаяВыручка.Подразделение,
	|	ПрочаяВыручка.Организация,
	|	ПрочаяВыручка.Партнер,
	|	ПрочаяВыручка.НаправлениеДеятельности,
	|	ПрочаяВыручка.СтатьяДоходов
	|
	|ИМЕЮЩИЕ
	|	СУММА(ПрочаяВыручка.ВыручкаБезНДСУпр + ПрочаяВыручка.НДСУпр) <> 0
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаВыручки.Подразделение               КАК Подразделение,
	|	ТаблицаВыручки.Организация                 КАК Организация,
	|	ТаблицаВыручки.Номенклатура                КАК Номенклатура,
	|	ТаблицаВыручки.Партнер                     КАК Партнер,
	|	ТаблицаВыручки.НаправлениеДеятельности     КАК НаправлениеДеятельности,
	|	ТаблицаВыручки.СтатьяДоходов               КАК СтатьяДоходов,
	|	ТаблицаВыручки.СтатьяРасходов              КАК СтатьяРасходов,
	|	ТаблицаВыручки.СуммаВыручки                КАК СуммаВыручки,
	|	ТаблицаВыручки.Себестоимость               КАК Себестоимость,
	|	НастройкаРаспределения.СпособРаспределения КАК СпособРаспределения,
	|	ВЫБОР
	|		КОГДА ТаблицаВыручки.Партнер = НастройкаРаспределения.Партнер ТОГДА
	|			1000
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ТаблицаВыручки.Подразделение = НастройкаРаспределения.Подразделение ТОГДА
	|			100
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ТаблицаВыручки.Номенклатура = НастройкаРаспределения.Номенклатура ТОГДА
	|			10
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА ТаблицаВыручки.Организация = НастройкаРаспределения.Организация ТОГДА
	|			1
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ                                      КАК Приоритет
	|ПОМЕСТИТЬ ВтТаблицаРаспределения
	|
	|ИЗ
	|	ВТТаблицаВыручки КАК ТаблицаВыручки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НастройкаРаспределенияПоНаправлениямДеятельности.СрезПоследних(
	|			&КонецПериода,
	|		) КАК НастройкаРаспределения
	|		ПО
	|			НастройкаРаспределения.Используется
	|			И ТаблицаВыручки.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|			И (ТаблицаВыручки.Организация              = НастройкаРаспределения.Организация
	|				ИЛИ НастройкаРаспределения.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|
	|			И (ТаблицаВыручки.Партнер              = НастройкаРаспределения.Партнер
	|				ИЛИ НастройкаРаспределения.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка))
	|
	|			И (ТаблицаВыручки.Подразделение              = НастройкаРаспределения.Подразделение
	|				ИЛИ НастройкаРаспределения.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|
	|			И (ТаблицаВыручки.Номенклатура              = НастройкаРаспределения.Номенклатура
	|				ИЛИ НастройкаРаспределения.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Партнер,
	|	Подразделение,
	|	Номенклатура
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ДокументыРасчетаСебестоимости.Ссылка 								 КАК ДокументДвижения,
	|	&КонецПериода                                                        КАК Период,
	|	ТаблицаФинансовыхРезультатов.Организация                             КАК Организация,
	|	ТаблицаФинансовыхРезультатов.Подразделение                           КАК Подразделение,
	|	ТаблицаФинансовыхРезультатов.СтатьяДоходов                           КАК СтатьяДоходов,
	|	ТаблицаФинансовыхРезультатов.СтатьяРасходов                          КАК СтатьяРасходов,
	|	ТаблицаФинансовыхРезультатов.СпособРаспределения                     КАК СпособРаспределения,
	|	СУММА(ТаблицаФинансовыхРезультатов.СуммаВыручки)                     КАК СуммаВыручки,
	|	СУММА(ТаблицаФинансовыхРезультатов.Себестоимость)                    КАК Себестоимость,
	|	ВЫБОР
	|		КОГДА ТаблицаФинансовыхРезультатов.СпособРаспределения ССЫЛКА Справочник.НаправленияДеятельности ТОГДА
	|			ТаблицаФинансовыхРезультатов.СпособРаспределения
	|		ИНАЧЕ
	|			СпособыРаспределения.НаправлениеДеятельности
	|	КОНЕЦ                                                                КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ТаблицаФинансовыхРезультатов.СпособРаспределения ССЫЛКА Справочник.НаправленияДеятельности ТОГДА
	|			1
	|		ИНАЧЕ
	|			ЕСТЬNULL(СпособыРаспределения.Коэффициент, 1)
	|	КОНЕЦ                                                                КАК КоэффициентРаспределения
	|
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаРаспределения.Организация                   КАК Организация,
	|		ТаблицаРаспределения.Подразделение                 КАК Подразделение,
	|		ТаблицаРаспределения.СтатьяДоходов                 КАК СтатьяДоходов,
	|		ТаблицаРаспределения.СтатьяРасходов                КАК СтатьяРасходов,
	|		СУММА(ТаблицаРаспределения.СуммаВыручки)           КАК СуммаВыручки,
	|		СУММА(ТаблицаРаспределения.Себестоимость)          КАК Себестоимость,
	|		ЕСТЬNULL(ТаблицаРаспределения.СпособРаспределения, НЕОПРЕДЕЛЕНО) КАК СпособРаспределения
	|	ИЗ
	|		ВтТаблицаРаспределения КАК ТаблицаРаспределения
	|
	|	ГДЕ
	|		ТаблицаРаспределения.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|		И ТаблицаРаспределения.Приоритет В
	|				(ВЫБРАТЬ
	|					МАКСИМУМ(Таб.Приоритет) КАК Приоритет
	|				ИЗ
	|					ВтТаблицаРаспределения КАК Таб
	|				ГДЕ
	|					Таб.Организация        = ТаблицаРаспределения.Организация
	|					И Таб.Партнер            = ТаблицаРаспределения.Партнер
	|					И Таб.Подразделение      = ТаблицаРаспределения.Подразделение
	|					И Таб.Номенклатура         = ТаблицаРаспределения.Номенклатура)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаРаспределения.Организация,
	|		ТаблицаРаспределения.Подразделение,
	|		ТаблицаРаспределения.СтатьяДоходов,
	|		ТаблицаРаспределения.СтатьяРасходов,
	|		ЕСТЬNULL(ТаблицаРаспределения.СпособРаспределения, НЕОПРЕДЕЛЕНО)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ТаблицаРаспределения.Организация                   КАК Организация,
	|		ТаблицаРаспределения.Подразделение                 КАК Подразделение,
	|		ТаблицаРаспределения.СтатьяДоходов                 КАК СтатьяДоходов,
	|		ТаблицаРаспределения.СтатьяРасходов                КАК СтатьяРасходов,
	|		СУММА(ТаблицаРаспределения.СуммаВыручки)           КАК СуммаВыручки,
	|		СУММА(ТаблицаРаспределения.Себестоимость)          КАК Себестоимость,
	|		ТаблицаРаспределения.НаправлениеДеятельности       КАК СпособРаспределения
	|	ИЗ
	|		ВтТаблицаРаспределения КАК ТаблицаРаспределения
	|
	|	ГДЕ
	|		ТаблицаРаспределения.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаРаспределения.Организация,
	|		ТаблицаРаспределения.Подразделение,
	|		ТаблицаРаспределения.СтатьяДоходов,
	|		ТаблицаРаспределения.СтатьяРасходов,
	|		ТаблицаРаспределения.НаправлениеДеятельности
	|
	|	) КАК ТаблицаФинансовыхРезультатов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.СпособыРаспределенияПоНаправлениямДеятельности.НаправленияДеятельности КАК СпособыРаспределения
	|		ПО ТаблицаФинансовыхРезультатов.СпособРаспределения = СпособыРаспределения.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТДокументыРасчетаСебестоимости КАК ДокументыРасчетаСебестоимости
	|		ПО ТаблицаФинансовыхРезультатов.Организация = ДокументыРасчетаСебестоимости.Организация
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДокументыРасчетаСебестоимости.Ссылка,
	|	ТаблицаФинансовыхРезультатов.Организация,
	|	ТаблицаФинансовыхРезультатов.Подразделение,
	|	ТаблицаФинансовыхРезультатов.СтатьяДоходов,
	|	ТаблицаФинансовыхРезультатов.СтатьяРасходов,
	|	ТаблицаФинансовыхРезультатов.СпособРаспределения,
	|	ВЫБОР
	|		КОГДА ТаблицаФинансовыхРезультатов.СпособРаспределения ССЫЛКА Справочник.НаправленияДеятельности ТОГДА
	|			ТаблицаФинансовыхРезультатов.СпособРаспределения
	|		ИНАЧЕ
	|			СпособыРаспределения.НаправлениеДеятельности
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаФинансовыхРезультатов.СпособРаспределения ССЫЛКА Справочник.НаправленияДеятельности ТОГДА
	|			1
	|		ИНАЧЕ
	|			ЕСТЬNULL(СпособыРаспределения.Коэффициент, 1)
	|	КОНЕЦ
	|
	|ИТОГИ
	|	МАКСИМУМ(СуммаВыручки),
	|	МАКСИМУМ(Себестоимость),
	|	СУММА(КоэффициентРаспределения)
	|
	|ПО
	|	Организация,
	|	Подразделение,
	|	СтатьяДоходов,
	|	СпособРаспределения
	|";
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ФинансовыеРезультаты.Имя;
	
	РезультатЗапроса = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос,,, Истина);
	ВыборкаОрганизация = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Организация");
	
	Пока ВыборкаОрганизация.Следующий() Цикл
		
		ВыборкаПодразделение = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Подразделение");
		
		Пока ВыборкаПодразделение.Следующий() Цикл
			
			ВыборкаСтатье = ВыборкаПодразделение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СтатьяДоходов");
			Пока ВыборкаСтатье.Следующий() Цикл
			
				ВыборкаСпособыРаспределения = ВыборкаСтатье.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СпособРаспределения");
				Пока ВыборкаСпособыРаспределения.Следующий() Цикл
					
					ВсегоДолей            = ВыборкаСпособыРаспределения.КоэффициентРаспределения;
					РасходыКРаспределению = ВыборкаСпособыРаспределения.Себестоимость;
					ДоходыКРаспределению  = ВыборкаСпособыРаспределения.СуммаВыручки;
					
					ВыборкаДетали = ВыборкаСпособыРаспределения.Выбрать(ОбходРезультатаЗапроса.Прямой);
					
					РасчетСебестоимостиПротоколРасчета.УвеличитьКоличествоОбработанныхДанныхДляЗамера(
						ПараметрыРасчета,
						ВыборкаДетали.Количество());
					
					КопируемыеПоля = "Период, Организация, Подразделение, НаправлениеДеятельности, СпособРаспределения";
					
					Пока ВыборкаДетали.Следующий() Цикл
	
						Если ВсегоДолей <> 0 Тогда
							Расходы = Окр(РасходыКРаспределению * ВыборкаДетали.КоэффициентРаспределения / ВсегоДолей,
											2, РежимОкругления.Окр15как20);
						Иначе
							Расходы = 0;
						КонецЕсли;
	
						Если ВсегоДолей <> 0 Тогда
							Доходы = Окр(ДоходыКРаспределению * ВыборкаДетали.КоэффициентРаспределения / ВсегоДолей,
											2, РежимОкругления.Окр15как20);
						Иначе
							Доходы = 0;
						КонецЕсли;
	
						РасходыКРаспределению = РасходыКРаспределению - Расходы;
						ДоходыКРаспределению  = ДоходыКРаспределению  - Доходы;
						ВсегоДолей            = ВсегоДолей            - ВыборкаДетали.КоэффициентРаспределения;
	
						// Формирование движений по финансовому результату.
						ДанныеДвижения = Новый Структура(КопируемыеПоля + ", ДокументДвижения");
						ТекущиеПоля    = КопируемыеПоля;
						
						ЗаполнитьЗначенияСвойств(ДанныеДвижения, ВыборкаДетали);
						
						Если Доходы <> 0 Тогда
							ДанныеДвижения.Вставить("Доходы", 		 Доходы);
							ДанныеДвижения.Вставить("СтатьяДоходов", ВыборкаДетали.СтатьяДоходов);
							ТекущиеПоля = ТекущиеПоля + ", Доходы, СтатьяДоходов";
						КонецЕсли;
	
						Если Расходы <> 0 Тогда
							ДанныеДвижения.Вставить("Расходы", 		  Расходы);
							ДанныеДвижения.Вставить("СтатьяРасходов", ВыборкаДетали.СтатьяРасходов);
							ТекущиеПоля = ТекущиеПоля + ", Расходы, СтатьяРасходов";
						КонецЕсли;
						
						ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, ТекущиеПоля);
						
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;

	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВТТаблицаВыручки, ВтТаблицаРаспределения");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвижения(ПараметрыРасчета);

КонецПроцедуры

// Этап 4.3
Процедура ОтразитьПрибылиИУбытки(ПараметрыРасчета) Экспорт
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ОтразитьПрибылиИУбытки");
	
	МенеджерВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьМенеджерВТИзКонтейнера(ПараметрыРасчета);
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Если МенеджерВТ.Таблицы.Найти("ИсправленныеДокументы") = Неопределено Тогда 
		Запрос.Текст = РасчетСебестоимостиЗаполнениеПартий.ТекстИсправленныеДокументы() + "; ";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + " 
	|ВЫБРАТЬ
	|	ВыручкаИСебестоимость.Регистратор 							КАК Регистратор,
	|	ВыручкаИСебестоимость.Период 								КАК Период,
	|	ВыручкаИСебестоимость.АналитикаУчетаПоПартнерам				КАК АналитикаУчетаПоПартнерам,
	|	ВыручкаИСебестоимость.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатуры,
	|	ВыручкаИСебестоимость.НаправлениеДеятельностиКонтрагента	КАК НаправлениеДеятельностиКонтрагента,
	|	ВыручкаИСебестоимость.НаправлениеДеятельностиНоменклатуры	КАК НаправлениеДеятельностиНоменклатуры,
	|	ВыручкаИСебестоимость.Подразделение	КАК Подразделение,
	|	ВыручкаИСебестоимость.Сторно		КАК Сторно,
	|	ВыручкаИСебестоимость.ТипЗапасов	КАК ТипЗапасов,
	|	ВыручкаИСебестоимость.СуммаВыручки	КАК СуммаВыручки,
	|	ВыручкаИСебестоимость.Стоимость		КАК Стоимость,
	|	ВыручкаИСебестоимость.ДопРасходы	КАК ДопРасходы,
	|	ВыручкаИСебестоимость.Трудозатраты	КАК Трудозатраты,
	|	ВыручкаИСебестоимость.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	ВыручкаИСебестоимость.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	ВыручкаИСебестоимость.РасходыНаПродажуСНДС КАК РасходыНаПродажуСНДС,
	|	ВыручкаИСебестоимость.РасчетПартий КАК РасчетПартий,
	|	ВыручкаИСебестоимость.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|
	|ПОМЕСТИТЬ ВТПредварительнаяОборотыВыручкаИСебестоимостьПродаж
	|ИЗ
	|	ВТКэшРасчетныеОборотыВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|		ЛЕВОЕ СОЕДИНЕНИЕ ИсправленныеДокументы КАК ИсправленныеДокументы
	|			ПО ИсправленныеДокументы.Регистратор = ВыручкаИСебестоимость.Регистратор
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ВыручкаИСебестоимость.Регистратор) <> ТИП(Документ.ВводОстатковОПродажахЗаПрошлыеПериоды)
	// Исключаем сторно движения исправлений и корректировок прошлого периода.
	// Такие движения уже сформированы в процедуре СкорректироватьСтоимостьСторноДвиженийИсправленныхДокументов() Область ИсправлениеСебестоимостьТоваров
	|	И НЕ (НЕ ИсправленныеДокументы.ДатаДокументаИсточника ЕСТЬ NULL
	|		И ИсправленныеДокументы.ДатаДокументаИсточника < &НачалоПериода
	|		И ВыручкаИСебестоимость.Сторно)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаПоПартнерам
	|;
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 			КАК ВидДвижения,
	|	ВыручкаИСебестоимость.ДокументДвижения			КАК ДокументДвижения,
	|	ВыручкаИСебестоимость.Период					КАК Период,
	|	ВыручкаИСебестоимость.Организация				КАК Организация,
	|	ВыручкаИСебестоимость.Подразделение				КАК Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности 	КАК НаправлениеДеятельности,
	|	ВыручкаИСебестоимость.Сторно					КАК Сторно,
	|	СУММА(ВыручкаИСебестоимость.Сумма)				КАК Сумма
	|ПОМЕСТИТЬ ВТПромежуточнаяТаблица1
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыручкаИСебестоимость.Регистратор 							КАК ДокументДвижения,
	|		ВыручкаИСебестоимость.Период 								КАК Период,
	|		АналитикаПоПартнерам.Организация                			КАК Организация,
	|		ВыручкаИСебестоимость.НаправлениеДеятельностиКонтрагента 	КАК НаправлениеДеятельности,
	|		ВыручкаИСебестоимость.Подразделение							КАК Подразделение,
	|		ВыручкаИСебестоимость.Сторно								КАК Сторно,
	|		ВЫБОР КОГДА ВыручкаИСебестоимость.ТипЗапасов В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияПереработчика),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга))
	|		ТОГДА
	|			ВыручкаИСебестоимость.СуммаВыручки
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ 														КАК Сумма
	|	ИЗ
	|		ВТПредварительнаяОборотыВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборАналитикаПоПартнерам КАК АналитикаПоПартнерам
	|				ПО ВыручкаИСебестоимость.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|	) КАК ВыручкаИСебестоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимость.ДокументДвижения,
	|	ВыручкаИСебестоимость.Период,
	|	ВыручкаИСебестоимость.Организация,
	|	ВыручкаИСебестоимость.Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности,
	|	ВыручкаИСебестоимость.Сторно
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 			КАК ВидДвижения,
	|	ВыручкаИСебестоимость.ДокументДвижения			КАК ДокументДвижения,
	|	ВыручкаИСебестоимость.Период					КАК Период,
	|	ВыручкаИСебестоимость.Организация				КАК Организация,
	|	ВыручкаИСебестоимость.Подразделение				КАК Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности 	КАК НаправлениеДеятельности,
	|	ВыручкаИСебестоимость.Сторно					КАК Сторно,
	|	СУММА(ВыручкаИСебестоимость.Сумма)				КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыручкаИСебестоимость.Регистратор 						  КАК ДокументДвижения,
	|		ВыручкаИСебестоимость.Период 							  КАК Период,
	|		АналитикаПоПартнерам.Организация 						  КАК Организация,
	|		ВыручкаИСебестоимость.Подразделение						  КАК Подразделение,
	|		ВыручкаИСебестоимость.НаправлениеДеятельностиНоменклатуры КАК НаправлениеДеятельности,
	|		ВыручкаИСебестоимость.Сторно							  КАК Сторно,
	|		ВЫБОР КОГДА ВыручкаИСебестоимость.ТипЗапасов В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияПереработчика),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга))
	|		ТОГДА
	|			ВыручкаИСебестоимость.Стоимость
	|			+ ВыручкаИСебестоимость.ДопРасходы
	|			+ ВыручкаИСебестоимость.Трудозатраты
	|			+ ВыручкаИСебестоимость.ПостатейныеПостоянныеСНДС
	|			+ ВыручкаИСебестоимость.ПостатейныеПеременныеСНДС
	|			+ ВыручкаИСебестоимость.РасходыНаПродажуСНДС
	|		ИНАЧЕ
	|			ВыручкаИСебестоимость.ДопРасходы
	|			+ ВыручкаИСебестоимость.РасходыНаПродажуСНДС
	|		КОНЕЦ 													  КАК Сумма
	|	ИЗ
	|		ВТПредварительнаяОборотыВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборАналитикаПоПартнерам КАК АналитикаПоПартнерам
	|				ПО ВыручкаИСебестоимость.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|	) КАК ВыручкаИСебестоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимость.ДокументДвижения,
	|	ВыручкаИСебестоимость.Период,
	|	ВыручкаИСебестоимость.Организация,
	|	ВыручкаИСебестоимость.Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности,
	|	ВыручкаИСебестоимость.Сторно
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 			КАК ВидДвижения,
	|	ВыручкаИСебестоимость.ДокументДвижения			КАК ДокументДвижения,
	|	ВыручкаИСебестоимость.Период					КАК Период,
	|	ВыручкаИСебестоимость.Контрагент				КАК Организация,
	|	ВыручкаИСебестоимость.Подразделение				КАК Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	ВыручкаИСебестоимость.Сторно					КАК Сторно,
	|	СУММА(ВыручкаИСебестоимость.Сумма)				КАК Сумма
	|ПОМЕСТИТЬ ВТПромежуточнаяТаблица2
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыручкаИСебестоимость.Регистратор 							КАК ДокументДвижения,
	|		ВыручкаИСебестоимость.Период					  			КАК Период,
	|		АналитикаПоПартнерам.Контрагент                				КАК Контрагент,
	|		ВыручкаИСебестоимость.Подразделение							КАК Подразделение,
	|		ВыручкаИСебестоимость.НаправлениеДеятельностиКонтрагента 	КАК НаправлениеДеятельности,
	|		ВыручкаИСебестоимость.Сторно								КАК Сторно,
	|		ВыручкаИСебестоимость.СуммаВыручки							КАК Сумма
	|	ИЗ
	|		ВТПредварительнаяОборотыВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|			ПО
	|				ВыручкаИСебестоимость.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|				И АналитикаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|				И АналитикаПоПартнерам.Контрагент ССЫЛКА Справочник.Организации
	|				И АналитикаПоПартнерам.Контрагент <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|	ГДЕ
	|		ВыручкаИСебестоимость.ТипЗапасов В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияПереработчика),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		И ВЫРАЗИТЬ(ВыручкаИСебестоимость.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).Номенклатура.ТипНоменклатуры
	|			<> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		И АналитикаПоПартнерам.Контрагент В (&МассивОрганизаций)
	|		И НЕ ВыручкаИСебестоимость.РасчетПартий
	|		И ВыручкаИСебестоимость.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|		И ТИПЗНАЧЕНИЯ(ВыручкаИСебестоимость.Регистратор) <> ТИП(Документ.ВозвратТоваровМеждуОрганизациями)
	|   ) КАК ВыручкаИСебестоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимость.ДокументДвижения,
	|	ВыручкаИСебестоимость.Период,
	|	ВыручкаИСебестоимость.Контрагент,
	|	ВыручкаИСебестоимость.Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности,
	|	ВыручкаИСебестоимость.Сторно
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 			КАК ВидДвижения,
	|	ВыручкаИСебестоимость.ДокументДвижения			КАК ДокументДвижения,
	|	ВыручкаИСебестоимость.Период					КАК Период,
	|	ВыручкаИСебестоимость.Контрагент				КАК Организация,
	|	ВыручкаИСебестоимость.Подразделение				КАК Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	ВыручкаИСебестоимость.Сторно					КАК Сторно,
	|	СУММА(ВыручкаИСебестоимость.Сумма)				КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыручкаИСебестоимость.Регистратор 							КАК ДокументДвижения,
	|		ВыручкаИСебестоимость.Период					  			КАК Период,
	|		АналитикаПоПартнерам.Контрагент                				КАК Контрагент,
	|		ВыручкаИСебестоимость.Подразделение							КАК Подразделение,
	|		ВыручкаИСебестоимость.НаправлениеДеятельностиНоменклатуры 	КАК НаправлениеДеятельности,
	|		ВыручкаИСебестоимость.Сторно								КАК Сторно,
	|		ВыручкаИСебестоимость.Стоимость
	|			+ ВыручкаИСебестоимость.ДопРасходы 
	|			+ ВыручкаИСебестоимость.Трудозатраты
	|			+ ВыручкаИСебестоимость.ПостатейныеПостоянныеСНДС
	|			+ ВыручкаИСебестоимость.ПостатейныеПеременныеСНДС
	|			+ ВыручкаИСебестоимость.РасходыНаПродажуСНДС КАК Сумма
	|	ИЗ
	|		ВТПредварительнаяОборотыВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|			ПО
	|				ВыручкаИСебестоимость.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|				И АналитикаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|				И АналитикаПоПартнерам.Контрагент ССЫЛКА Справочник.Организации
	|				И АналитикаПоПартнерам.Контрагент <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|	ГДЕ
	|		ВыручкаИСебестоимость.ТипЗапасов В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияПереработчика),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		И АналитикаПоПартнерам.Контрагент В (&МассивОрганизаций)
	|		И НЕ ВыручкаИСебестоимость.РасчетПартий
	|		И ВыручкаИСебестоимость.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|		И ТИПЗНАЧЕНИЯ(ВыручкаИСебестоимость.Регистратор) <> ТИП(Документ.ВозвратТоваровМеждуОрганизациями)
	|	) КАК ВыручкаИСебестоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимость.ДокументДвижения,
	|	ВыручкаИСебестоимость.Период,
	|	ВыручкаИСебестоимость.Контрагент,
	|	ВыручкаИСебестоимость.Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности,
	|	ВыручкаИСебестоимость.Сторно
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 			КАК ВидДвижения,
	|	ВыручкаИСебестоимость.ДокументДвижения			КАК ДокументДвижения,
	|	ВыручкаИСебестоимость.Период					КАК Период,
	|	ВыручкаИСебестоимость.Контрагент				КАК Организация,
	|	ВыручкаИСебестоимость.Подразделение				КАК Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	ВыручкаИСебестоимость.Сторно					КАК Сторно,
	|	СУММА(ВыручкаИСебестоимость.Сумма)				КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыручкаИСебестоимость.Регистратор 							КАК ДокументДвижения,
	|		ВыручкаИСебестоимость.Период					  			КАК Период,
	|		АналитикаПоПартнерам.Контрагент                				КАК Контрагент,
	|		ВыручкаИСебестоимость.Подразделение							КАК Подразделение,
	|		ВыручкаИСебестоимость.НаправлениеДеятельностиКонтрагента 	КАК НаправлениеДеятельности,
	|		ВыручкаИСебестоимость.Сторно								КАК Сторно,
	|		ВыручкаИСебестоимость.СуммаВыручки							КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|			ПО
	|				ВыручкаИСебестоимость.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|				И АналитикаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|				И АналитикаПоПартнерам.Контрагент ССЫЛКА Справочник.Организации
	|				И АналитикаПоПартнерам.Контрагент <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|	ГДЕ
	|		ВыручкаИСебестоимость.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ВыручкаИСебестоимость.Активность
	|		И ВыручкаИСебестоимость.ТипЗапасов В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияПереработчика),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		И ВыручкаИСебестоимость.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры
	|			<> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|		И АналитикаПоПартнерам.Контрагент В (&МассивОрганизаций)
	|		И НЕ АналитикаПоПартнерам.Организация В (&МассивОрганизаций)
	|		И НЕ ВыручкаИСебестоимость.РасчетПартий
	|		И ВыручкаИСебестоимость.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|		И ТИПЗНАЧЕНИЯ(ВыручкаИСебестоимость.Регистратор) <> ТИП(Документ.ВводОстатковОПродажахЗаПрошлыеПериоды)
	|		И ТИПЗНАЧЕНИЯ(ВыручкаИСебестоимость.Регистратор) <> ТИП(Документ.ВозвратТоваровМеждуОрганизациями)
	|   ) КАК ВыручкаИСебестоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимость.ДокументДвижения,
	|	ВыручкаИСебестоимость.Период,
	|	ВыручкаИСебестоимость.Контрагент,
	|	ВыручкаИСебестоимость.Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности,
	|	ВыручкаИСебестоимость.Сторно
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 			КАК ВидДвижения,
	|	ВыручкаИСебестоимость.ДокументДвижения			КАК ДокументДвижения,
	|	ВыручкаИСебестоимость.Период					КАК Период,
	|	ВыручкаИСебестоимость.Контрагент				КАК Организация,
	|	ВыручкаИСебестоимость.Подразделение				КАК Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности	КАК НаправлениеДеятельности,
	|	ВыручкаИСебестоимость.Сторно					КАК Сторно,
	|	СУММА(ВыручкаИСебестоимость.Сумма)				КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВыручкаИСебестоимость.Регистратор 							КАК ДокументДвижения,
	|		ВыручкаИСебестоимость.Период					  			КАК Период,
	|		АналитикаПоПартнерам.Контрагент                				КАК Контрагент,
	|		ВыручкаИСебестоимость.Подразделение							КАК Подразделение,
	|		ВыручкаИСебестоимость.НаправлениеДеятельностиНоменклатуры 	КАК НаправлениеДеятельности,
	|		ВыручкаИСебестоимость.Сторно								КАК Сторно,
	|		ВыручкаИСебестоимость.Стоимость
	|			+ ВыручкаИСебестоимость.ДопРасходы
	|			+ ВыручкаИСебестоимость.Трудозатраты
	|			+ ВыручкаИСебестоимость.ПостатейныеПостоянныеСНДС
	|			+ ВыручкаИСебестоимость.ПостатейныеПеременныеСНДС
	|			+ ВыручкаИСебестоимость.РасходыНаПродажуСНДС КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимость
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|			ПО
	|				ВыручкаИСебестоимость.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.КлючАналитики
	|				И АналитикаПоПартнерам.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|				И АналитикаПоПартнерам.Контрагент ССЫЛКА Справочник.Организации
	|				И АналитикаПоПартнерам.Контрагент <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|	ГДЕ
	|		ВыручкаИСебестоимость.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ВыручкаИСебестоимость.Активность
	|		И ВыручкаИСебестоимость.ТипЗапасов В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияПереработчика),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПолуфабрикатДавальца),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|		И АналитикаПоПартнерам.Контрагент В (&МассивОрганизаций)
	|		И НЕ АналитикаПоПартнерам.Организация В (&МассивОрганизаций)
	|		И НЕ ВыручкаИСебестоимость.РасчетПартий
	|		И ВыручкаИСебестоимость.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетКомиссионера)
	|		И ТИПЗНАЧЕНИЯ(ВыручкаИСебестоимость.Регистратор) <> ТИП(Документ.ВводОстатковОПродажахЗаПрошлыеПериоды)
	|		И ТИПЗНАЧЕНИЯ(ВыручкаИСебестоимость.Регистратор) <> ТИП(Документ.ВозвратТоваровМеждуОрганизациями)
	|   ) КАК ВыручкаИСебестоимость
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаИСебестоимость.ДокументДвижения,
	|	ВыручкаИСебестоимость.Период,
	|	ВыручкаИСебестоимость.Контрагент,
	|	ВыручкаИСебестоимость.Подразделение,
	|	ВыручкаИСебестоимость.НаправлениеДеятельности,
	|	ВыручкаИСебестоимость.Сторно
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)	 КАК ВидДвижения,
	|	ПрочиеДоходы.Регистратор				 КАК ДокументДвижения,
	|	ПрочиеДоходы.Период						 КАК Период,
	|	ПрочиеДоходы.Организация				 КАК Организация,
	|	ПрочиеДоходы.Подразделение				 КАК Подразделение,
	|	ПрочиеДоходы.НаправлениеДеятельности	 КАК НаправлениеДеятельности,
	|	ПрочиеДоходы.Сторно						 КАК Сторно,
	|	СУММА(ПрочиеДоходы.Сумма)				 КАК Сумма
	|ПОМЕСТИТЬ ВТПромежуточнаяТаблица3
	|ИЗ
	|	ВТКэшРасчетныеОборотыПрочиеДоходы КАК ПрочиеДоходы
	|ГДЕ
	|	НЕ &ФормироватьФинансовыйРезультат
	|	И ПрочиеДоходы.РасчетСебестоимости
	|	И НЕ ПрочиеДоходы.СлужебноеВидДвиженияПриход
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрочиеДоходы.Регистратор,
	|	ПрочиеДоходы.Период,
	|	ПрочиеДоходы.Организация,
	|	ПрочиеДоходы.Подразделение,
	|	ПрочиеДоходы.НаправлениеДеятельности,
	|	ПрочиеДоходы.Сторно
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	  КАК ВидДвижения,
	|	ПрочиеРасходы.Регистратор				  КАК ДокументДвижения,
	|	ПрочиеРасходы.Период					  КАК Период,
	|	ПрочиеРасходы.Организация				  КАК Организация,
	|	ПрочиеРасходы.Подразделение				  КАК Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности	  КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.Сторно					  КАК Сторно,
	|	СУММА(ПрочиеРасходы.Сумма) 			      КАК Сумма
	|ПОМЕСТИТЬ ВТПромежуточнаяТаблица4
	|ИЗ
	|	ВТКэшРасчетныеОборотыПрочиеРасходы КАК ПрочиеРасходы
	|ГДЕ
	|	НЕ &ФормироватьФинансовыйРезультат
	|	И ПрочиеРасходы.РасчетСебестоимости
	|	И НЕ ПрочиеРасходы.СлужебноеВидДвиженияПриход
	|	И ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр
	|		= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрочиеРасходы.Регистратор,
	|	ПрочиеРасходы.Период,
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.Сторно
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)	  КАК ВидДвижения,
	|	ПрочаяВыручка.Регистратор				  КАК ДокументДвижения,
	|	ПрочаяВыручка.Период					  КАК Период,
	|	ПрочаяВыручка.Организация				  КАК Организация,
	|	ПрочаяВыручка.Подразделение				  КАК Подразделение,
	|	ПрочаяВыручка.НаправлениеДеятельности	  КАК НаправлениеДеятельности,
	|	ПрочаяВыручка.Сторно					  КАК Сторно,
	|	СУММА(ПрочаяВыручка.ВыручкаБезНДСУпр + ПрочаяВыручка.НДСУпр) КАК Сумма
	|ПОМЕСТИТЬ ВТПромежуточнаяТаблица5
	|ИЗ
	|	РегистрНакопления.ПрочаяВыручка КАК ПрочаяВыручка
	|ГДЕ
	|	ПрочаяВыручка.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПрочаяВыручка.Активность
	|	И ПрочаяВыручка.Организация В (&МассивОрганизаций)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрочаяВыручка.Регистратор,
	|	ПрочаяВыручка.Период,
	|	ПрочаяВыручка.Организация,
	|	ПрочаяВыручка.Подразделение,
	|	ПрочаяВыручка.НаправлениеДеятельности,
	|	ПрочаяВыручка.Сторно
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ДанныеДвижений.ДокументДвижения 	 								  КАК ДокументДвижения,
	|	ДанныеДвижений.Период				 								  КАК Период,
	|	ДанныеДвижений.Организация			 								  КАК Организация,
	|	ДанныеДвижений.Подразделение			 							  КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО			 											  КАК Аналитика,
	|	ДанныеДвижений.НаправлениеДеятельности			 					  КАК НаправлениеДеятельности,
	|	ДанныеДвижений.ВидДвижения			 								  КАК ВидДвижения,
	|	ДанныеДвижений.Сторно												  КАК Сторно,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки) КАК Статья,
	|	СУММА(ДанныеДвижений.Сумма)			 								  КАК Сумма
	|ПОМЕСТИТЬ ВТДанныеДляФормированияДвижений
	|ИЗ
	|
	|	(ВЫБРАТЬ
	|		Т.ДокументДвижения						КАК ДокументДвижения,
	|		Т.Период								КАК Период,
	|		Т.ВидДвижения 							КАК ВидДвижения,
	|		Т.Организация							КАК Организация,
	|		Т.Подразделение							КАК Подразделение,
	|		Т.НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|		Т.Сторно								КАК Сторно,
	|		Т.Сумма									КАК Сумма
	|	ИЗ
	|		ВТПромежуточнаяТаблица1 КАК Т
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Т.ДокументДвижения						КАК ДокументДвижения,
	|		Т.Период								КАК Период,
	|		Т.ВидДвижения 							КАК ВидДвижения,
	|		Т.Организация							КАК Организация,
	|		Т.Подразделение							КАК Подразделение,
	|		Т.НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|		Т.Сторно								КАК Сторно,
	|		Т.Сумма									КАК Сумма
	|	ИЗ
	|		ВТПромежуточнаяТаблица2 КАК Т
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Т.ДокументДвижения						КАК ДокументДвижения,
	|		Т.Период								КАК Период,
	|		Т.ВидДвижения 							КАК ВидДвижения,
	|		Т.Организация							КАК Организация,
	|		Т.Подразделение							КАК Подразделение,
	|		Т.НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|		Т.Сторно								КАК Сторно,
	|		Т.Сумма									КАК Сумма
	|	ИЗ
	|		ВТПромежуточнаяТаблица3 КАК Т
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Т.ДокументДвижения						КАК ДокументДвижения,
	|		Т.Период								КАК Период,
	|		Т.ВидДвижения 							КАК ВидДвижения,
	|		Т.Организация							КАК Организация,
	|		Т.Подразделение							КАК Подразделение,
	|		Т.НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|		Т.Сторно								КАК Сторно,
	|		Т.Сумма									КАК Сумма
	|	ИЗ
	|		ВТПромежуточнаяТаблица4 КАК Т
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Т.ДокументДвижения						КАК ДокументДвижения,
	|		Т.Период								КАК Период,
	|		Т.ВидДвижения 							КАК ВидДвижения,
	|		Т.Организация							КАК Организация,
	|		Т.Подразделение							КАК Подразделение,
	|		Т.НаправлениеДеятельности				КАК НаправлениеДеятельности,
	|		Т.Сторно								КАК Сторно,
	|		Т.Сумма									КАК Сумма
	|	ИЗ
	|		ВТПромежуточнаяТаблица5 КАК Т
	|
	|	) КАК ДанныеДвижений
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДвижений.ДокументДвижения,
	|	ДанныеДвижений.Период,
	|	ДанныеДвижений.Организация,
	|	ДанныеДвижений.Подразделение,
	|	ДанныеДвижений.НаправлениеДеятельности,
	|	ДанныеДвижений.ВидДвижения,
	|	ДанныеДвижений.Сторно
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДанныеДвижений.Сумма) <> 0
	|";
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина, "ВТДанныеДляФормированияДвижений");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьДвиженияПоРегиструПоДаннымВременнойТаблицы(
		ПараметрыРасчета,
		Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя,
		"ВТДанныеДляФормированияДвижений",
		Истина);
		
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВТПромежуточнаяТаблица1, ВТПромежуточнаяТаблица2, ВТПромежуточнаяТаблица3, ВТПромежуточнаяТаблица4,
		| ВТПромежуточнаяТаблица5, ВТПредварительнаяОборотыВыручкаИСебестоимостьПродаж");
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	
КонецПроцедуры

// Этап 4.4
Процедура ОтразитьВУправленческомБалансе(ПараметрыРасчета) Экспорт
	
	РасчетСебестоимостиПротоколРасчета.НачалоЭтапаРасчета(ПараметрыРасчета, "ОтразитьВУправленческомБалансе");
	
	// Дополним перечень измененных документов документами внеоборотных активов.
	// Для полученного перечня документов установим признак необходимости повторного отражения в учете.
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	СуществующиеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета);
	
	#Область ИсправленныеДокументы
	Запрос.Текст = РасчетСебестоимостиЗаполнениеПартий.ТекстИсправленныеДокументы(); // вт ИсправленныеДокументы
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина);
	#КонецОбласти
	
	#Область ТекстЗапросаУправленческогоБаланса
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыОрганизаций.АналитикаРасходов КАК Объект
	|ПОМЕСТИТЬ ВТВнеоборотныеАктивы
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|ГДЕ
	|	ТоварыОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ТоварыОрганизаций.Активность
	|	И ТоварыОрганизаций.СтатьяРасходов.ВариантРаспределенияРасходовУпр
	|		= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	И ТоварыОрганизаций.Организация В(&МассивОрганизаций)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СебестоимостьТоваров.АналитикаРасходов
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК СебестоимостьТоваров
	|ГДЕ
	|	СебестоимостьТоваров.СтатьяРасходовСписания.ВариантРаспределенияРасходовУпр
	|		= ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА Т.СлужебноеВидДвиженияПриход
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	Т.Регистратор КАК Регистратор,
	|	Т.Период КАК Период,
	|	Т.Организация КАК Организация,
	|	Т.Подразделение КАК Подразделение,
	|	Т.РазделУчета КАК РазделУчета,
	|	Т.ВидЗапасов КАК ВидЗапасов,
	|	Т.КорВидЗапасов КАК КорВидЗапасов,
	|	Т.КорНаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	Т.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Т.Стоимость КАК Стоимость,
	|	Т.ДопРасходы КАК ДопРасходы,
	|	Т.Трудозатраты КАК Трудозатраты,
	|	Т.ПостатейныеПостоянныеСНДС КАК ПостатейныеПостоянныеСНДС,
	|	Т.ПостатейныеПеременныеСНДС КАК ПостатейныеПеременныеСНДС,
	|	Т.РасчетСебестоимости КАК РасчетСебестоимости,
	|	Т.Сторно КАК Сторно
	|ПОМЕСТИТЬ ВТСебестоимость
	|ИЗ
	|	ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправленныеДокументы КАК ИсправленныеДокументы
	|		ПО ИсправленныеДокументы.Регистратор = Т.Регистратор
	|ГДЕ
	|	Т.Стоимость + Т.ДопРасходы + Т.Трудозатраты + Т.ПостатейныеПостоянныеСНДС + Т.ПостатейныеПеременныеСНДС <> 0
	// Исключаем сторно движения исправлений и корректировок прошлого периода.
	// Такие движения уже сформированы в процедуре СкорректироватьСтоимостьСторноДвиженийИсправленныхДокументов() Область ИсправлениеПрочиеАктивыПассивы
	|	И НЕ (НЕ ИсправленныеДокументы.ДатаДокументаИсточника ЕСТЬ NULL
	|		И ИсправленныеДокументы.ДатаДокументаИсточника < &НачалоПериода
	|		И Т.Сторно)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидЗапасов,
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА Т.СлужебноеВидДвиженияПриход
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	Т.Регистратор КАК Регистратор,
	|	Т.Период КАК Период,
	|	Т.Организация КАК Организация,
	|	Т.Подразделение КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.РасчетСебестоимости КАК РасчетСебестоимости,
	|	Т.Сторно КАК Сторно,
	|	Т.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТПрочиеДоходы
	|ИЗ
	|	ВТКэшРасчетныеОборотыПрочиеДоходы КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправленныеДокументы КАК ИсправленныеДокументы
	|		ПО ИсправленныеДокументы.Регистратор = Т.Регистратор
	|ГДЕ
	|	Т.Сумма <> 0
	// Исключаем сторно движения исправлений и корректировок прошлого периода.
	// Такие движения уже сформированы в процедуре СкорректироватьСтоимостьСторноДвиженийИсправленныхДокументов() Область ИсправлениеПрочиеАктивыПассивы
	|	И НЕ (НЕ ИсправленныеДокументы.ДатаДокументаИсточника ЕСТЬ NULL
	|		И ИсправленныеДокументы.ДатаДокументаИсточника < &НачалоПериода
	|		И Т.Сторно)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА Т.СлужебноеВидДвиженияПриход
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	Т.Регистратор КАК Регистратор,
	|	Т.Период КАК Период,
	|	Т.Организация КАК Организация,
	|	Т.Подразделение КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.СтатьяРасходов КАК СтатьяРасходов,
	|	Т.АналитикаРасходов КАК АналитикаРасходов,
	|	Т.РасчетСебестоимости КАК РасчетСебестоимости,
	|	Т.Сторно КАК Сторно,
	|	Т.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Т.Сумма КАК Сумма,
	|	Т.СуммаУпр КАК СуммаУпр
	|ПОМЕСТИТЬ ВТПрочиеРасходы
	|ИЗ
	|	ВТКэшРасчетныеОборотыПрочиеРасходы КАК Т
	|	ЛЕВОЕ СОЕДИНЕНИЕ ИсправленныеДокументы КАК ИсправленныеДокументы
	|		ПО ИсправленныеДокументы.Регистратор = Т.Регистратор
	|ГДЕ
	|	Т.Сумма <> 0
	// Исключаем сторно движения исправлений и корректировок прошлого периода.
	// Такие движения уже сформированы в процедуре СкорректироватьСтоимостьСторноДвиженийИсправленныхДокументов() Область ИсправлениеПрочиеАктивыПассивы
	|	И НЕ (НЕ ИсправленныеДокументы.ДатаДокументаИсточника ЕСТЬ NULL
	|		И ИсправленныеДокументы.ДатаДокументаИсточника < &НачалоПериода
	|		И Т.Сторно)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА Т.СлужебноеВидДвиженияПриход
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	Т.Регистратор КАК Регистратор,
	|	Т.Период КАК Период,
	|	Т.Организация КАК Организация,
	|	Т.Подразделение КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.Сторно КАК Сторно,
	|	Т.Стоимость КАК Стоимость
	|ПОМЕСТИТЬ ВТПартииПрочихРасходов
	|ИЗ
	|	ВТКэшРасчетныеОборотыПартииПрочихРасходов КАК Т
	|ГДЕ
	|	Т.Стоимость <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА Т.СлужебноеВидДвиженияПриход
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	Т.Регистратор КАК Регистратор,
	|	Т.Период КАК Период,
	|	Т.Организация КАК Организация,
	|	Т.Подразделение КАК Подразделение,
	|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Т.Статья КАК Статья,
	|	Т.Аналитика КАК Аналитика,
	|	Т.Сумма КАК Сумма,
	|	Т.ВидИсточника КАК ВидИсточника,
	|	Т.Источник КАК Источник,
	|	Т.РасчетСебестоимости КАК РасчетСебестоимости,
	|	Т.Сторно КАК Сторно
	|ПОМЕСТИТЬ ВТАктивыПассивы
	|ИЗ
	|	ВТКэшРасчетныеОборотыПрочиеАктивыПассивы КАК Т
	|ГДЕ
	|	Т.Сумма <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыКОтражению.Ссылка КАК Регистратор
	|ПОМЕСТИТЬ ДокументыКОтражению
	|ИЗ
	|	(
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		СебестоимостьТоваров.Регистратор КАК Ссылка
	|	ИЗ
	|		ВТКэшРасчетныеОборотыСебестоимостьТоваров КАК СебестоимостьТоваров
	|	ГДЕ
	|		НЕ(СебестоимостьТоваров.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПартииПрочихРасходов.Регистратор
	|	ИЗ
	|		ВТКэшРасчетныеОборотыПартииПрочихРасходов КАК ПартииПрочихРасходов
	//++ Локализация
	|	ГДЕ
	|		ТИПЗНАЧЕНИЯ(ПартииПрочихРасходов.Регистратор) <> ТИП(Документ.СчетФактураНалоговыйАгент)
	//-- Локализация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПрочиеАктивыПассивы.Регистратор
	|	ИЗ
	|		ВТКэшПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|	ГДЕ
	|		ПрочиеАктивыПассивы.Организация В(&МассивОрганизаций)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПрочиеДоходы.Регистратор
	|	ИЗ
	|		ВТКэшПрочиеДоходы КАК ПрочиеДоходы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПрочиеРасходы.Регистратор
	|	ИЗ
	|		ВТКэшПрочиеРасходы КАК ПрочиеРасходы
	|
	|) КАК ДокументыКОтражению
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|";
	#КонецОбласти
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина, "ДокументыКОтражению");
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.РазмерВременнойТаблицы(ПараметрыРасчета, "ДокументыКОтражению") > 0 Тогда
		
		// Передадим временную таблицу ДокументыКОтражению
		ПараметрыДвижений = Новый Структура;
		ПараметрыДвижений.Вставить("ВидОтложенногоРасчета", Перечисления.ВидыИсточниковДвижений.РасчетСебестоимости);
		ПараметрыДвижений.Вставить("ДокументыКОтражению",   ПараметрыРасчета.МенеджерВременныхТаблиц);
		ПараметрыДвижений.Вставить("Период", ПараметрыРасчета.РасчетныйПериод.НачалоПериода);
		ПараметрыДвижений.Вставить("ИмяВременнойТаблицыРезультата", "ВТДвиженияАктивыПассивы");
		
		ЗапросДвижений = УправленческийУчетПроведениеСервер.ЗапросДвиженийАктивовПассивов(ПараметрыДвижений);
		
		#Область ВычтемОнлайновыеДвижения
		ТекстВычитания = 
		"ВЫБРАТЬ
		|	Т.ВидДвижения КАК ВидДвижения,
		|	Т.Регистратор КАК Регистратор,
		|	Т.Период КАК Период,
		|	Т.Организация КАК Организация,
		|	Т.Подразделение КАК Подразделение,
		|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Т.Статья КАК Статья,
		|	Т.Аналитика КАК Аналитика,
		|	Т.Сумма КАК Сумма,
		|	Т.ВидИсточника КАК ВидИсточника,
		|	Т.Источник КАК Источник,
		|	Т.Сторно КАК Сторно,
		|	Т.РасчетСебестоимости КАК РасчетСебестоимости
		|ПОМЕСТИТЬ ВТГруппировкаАктивыПассивы
		|ИЗ
		|	ВТДвиженияАктивыПассивы КАК Т
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВЫБОР КОГДА Т.СлужебноеВидДвиженияПриход
		|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	КОНЕЦ КАК ВидДвижения,
		|	Т.Регистратор КАК Регистратор,
		|	Т.Период КАК Период,
		|	Т.Организация КАК Организация,
		|	Т.Подразделение КАК Подразделение,
		|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Т.Статья КАК Статья,
		|	Т.Аналитика КАК Аналитика,
		|	-Т.Сумма КАК Сумма,
		|	Т.ВидИсточника КАК ВидИсточника,
		|	Т.Источник КАК Источник,
		|	Т.Сторно КАК Сторно,
		|	Т.РасчетСебестоимости КАК РасчетСебестоимости
		|ИЗ
		|	ВТКэшРасчетныеОборотыПрочиеАктивыПассивы КАК Т
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыКОтражению КАК ДокументыКОтражению
		|	ПО Т.Регистратор = ДокументыКОтражению.Регистратор
		|ГДЕ
		|	Т.Сумма <> 0
		|	И НЕ Т.РасчетПартий
		|	И НЕ Т.РасчетСебестоимости
		|	И Т.ВидИсточника = ЗНАЧЕНИЕ(Перечисление.ВидыИсточниковДвижений.РасчетСебестоимости)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.ВидДвижения КАК ВидДвижения,
		|	Т.Регистратор КАК Регистратор,
		|	Т.Период КАК Период,
		|	Т.Организация КАК Организация,
		|	Т.Подразделение КАК Подразделение,
		|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Т.Статья КАК Статья,
		|	Т.Аналитика КАК Аналитика,
		|	СУММА(Т.Сумма) КАК Сумма,
		|	Т.ВидИсточника КАК ВидИсточника,
		|	Т.Источник КАК Источник,
		|	Т.Сторно КАК Сторно,
		|	МИНИМУМ(Т.РасчетСебестоимости) КАК РасчетСебестоимости,
		|	Т.Регистратор КАК ДокументДвижения
		|ПОМЕСТИТЬ ВТДанныеДляФормированияДвижений
		|ИЗ
		|	ВТГруппировкаАктивыПассивы КАК Т
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.ВидДвижения,
		|	Т.Регистратор,
		|	Т.Период,
		|	Т.Организация,
		|	Т.Подразделение,
		|	Т.НаправлениеДеятельности,
		|	Т.Статья,
		|	Т.Аналитика,
		|	Т.ВидИсточника,
		|	Т.Источник,
		|	Т.Сторно
		|
		|ИМЕЮЩИЕ
		|	СУММА(Т.Сумма) <> 0";
		ЗапросДвижений.Текст = ЗапросДвижений.Текст + ТекстВычитания;
		#КонецОбласти
		
		РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, ЗапросДвижений, Истина, "ВТДанныеДляФормированияДвижений");
		
		РасчетСебестоимостиПрикладныеАлгоритмы.СформироватьДвиженияПоРегиструПоДаннымВременнойТаблицы(
			ПараметрыРасчета,
			Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя,
			"ВТДанныеДляФормированияДвижений",
			Истина);
		
		РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета,
			ЗапросДвижений.Параметры.ИменаВременныхТаблиц);
		
	КонецЕсли;
	
	// Уничтожим ненужные временные таблицы.
	НовыеВТ = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьПереченьСуществующихВременныхТаблиц(ПараметрыРасчета, СуществующиеВТ);
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(ПараметрыРасчета, НовыеВТ);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.КэшироватьСформированныеДвижения(ПараметрыРасчета);
	
КонецПроцедуры

#КонецОбласти

#Область ТекстыЗапросов

Функция УстановитьРазрядностьЧиселВТекстеЗапроса(ПараметрыРасчета, ТекстЗапроса) Экспорт
	
	// В запросах, выполняющих расчеты во временных таблицах, установим максимально возможную разрядность.
	
	СтараяРазрядность 			  = 28;
	СтараяРазрядностьДробнойЧасти = 10;
	НоваяРазрядность 			  = ПараметрыРасчета.РешениеСЛУ.РазрядностьДляРасчетов;
	НоваяРазрядностьДробнойЧасти  = СтараяРазрядностьДробнойЧасти;
	ОписаниеДенежногоПоля 		  = ОбщегоНазначенияУТ.РазрядностьДенежногоПоля();
	
	Если ОписаниеДенежногоПоля.Разрядность - ОписаниеДенежногоПоля.РазрядностьДробнойЧасти > 13 Тогда
		
		// Уменьшим разрядность дробной части при расчете.
		// Общую разрядность, установленную в настройках, изменять не будем - чтобы не вызвать ошибку переполнения поля.
		ИзмерениеРазрядности = ОписаниеДенежногоПоля.Разрядность - ОписаниеДенежногоПоля.РазрядностьДробнойЧасти - 13;
		НоваяРазрядностьДробнойЧасти = Макс(НоваяРазрядностьДробнойЧасти - ИзмерениеРазрядности, 0);
		
	КонецЕсли;
	
	Если СтараяРазрядность <> НоваяРазрядность ИЛИ СтараяРазрядностьДробнойЧасти <> НоваяРазрядностьДробнойЧасти Тогда
		
		ТекстРазрядность = "(" + СокрЛП(НоваяРазрядность) + "," + СокрЛП(НоваяРазрядностьДробнойЧасти) + ")";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "(28,10)", ТекстРазрядность);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "(28, 10)", ТекстРазрядность); // с пробелом
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "(28,	10)", ТекстРазрядность); // с табуляцией
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ФормированиеДвижений

#Область ДвиженияНоменклатура

// Служебная, этап 2.1, 3.3, 3.14, 3.19
Процедура СформироватьДвиженияПоОборотнымРегистрамУпрУчета(ПараметрыРасчета, ДанныеДвижения) Экспорт
	
	ДанныеСумм = ПолучитьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеДвижения);
	
	Если ДанныеСумм.ЕстьНенулеваяПолнаяСумма Тогда
		
		// Формирование движений Номенклатура - Доходы\Расходы.
		Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваров
			Или ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию
			Или ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаПрочиеЦели
			Или ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию
			Или ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомиссионераОСписании
			Или ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакрытиеМесяца
			Или ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеНедостачЗаСчетПоклажедателя
			Или ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОприходованиеИзлишковТоваровВПользуКомитента
			Или ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОприходованиеИзлишковТоваровВПользуПоклажедателя Тогда
			
			СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения, ДанныеСумм);
			
		КонецЕсли;
		
		Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы Тогда
			
			Если ПараметрыРасчета.Свойство("МетодОценки")
			 И ПараметрыРасчета.МетодОценки = Перечисления.МетодыОценкиСтоимостиТоваров.ФИФОСкользящаяОценка Тогда
				
				СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения, ДанныеСумм);
				
			Иначе
				
				СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеСумм, -1, -1, -1, -1, 0);
				
				СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения, СкорректированныеСуммы);
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Формирование движений Номенклатура - Номенклатура.
		Если ((ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами
				ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами
				ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами)
				И ДанныеДвижения.ВидДвижения = ВидДвиженияНакопления.Расход)
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратИзПроизводства
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзПроизводства
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратМатериаловИзКладовой
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера
			//++ Устарело_Переработка24
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика
			//-- Устарело_Переработка24
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика2_5
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыпускПродукции
			//++ Устарело_Переработка24
			ИЛИ (ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчика
				И ДанныеДвижения.ВидДвижения = ВидДвиженияНакопления.Расход)
			//-- Устарело_Переработка24
			ИЛИ (ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчика2_5
				И ДанныеДвижения.ВидДвижения = ВидДвиженияНакопления.Расход)
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводства
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзКладовой
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КорректировкаОбособленногоУчета
			ИЛИ ((ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваров
				ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеПолуфабрикатов
				ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемПередачаРаботМеждуПодразделениями)
				И ДанныеДвижения.ВидДвижения = ВидДвиженияНакопления.Расход)
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВПроизводство
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВПроизводство
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаМатериаловВКладовую
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию
			//++ Устарело_Переработка24
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПереработчику
			//-- Устарело_Переработка24
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПереработчику2_5
			ИЛИ (ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПересортицаТоваров
				И ДанныеДвижения.ВидДвижения = ВидДвиженияНакопления.Расход)
			ИЛИ (ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПорчаТоваров
				И ДанныеДвижения.ВидДвижения = ВидДвиженияНакопления.Расход)
			ИЛИ (ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности
				И ДанныеДвижения.РазделУчета <> Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыВПути)
			ИЛИ (ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности
				И ДанныеДвижения.РазделУчета <> Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссиюВПути)
			ИЛИ (ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности
				И ДанныеДвижения.РазделУчета <> Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссиюВПути)
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазборкаТоваров
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСПоступлениеИзТоваровВПути
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуПоступлениеИзТоваровВПути
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаПоступлениеИзТоваровВПути
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаХранениеСПравомПродажи
			ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтХранителя Тогда
			
			СформироватьДвиженияНоменклатураНоменклатура(ПараметрыРасчета, ДанныеДвижения, ДанныеСумм,
				?(ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности
				ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности,
					Перечисления.ХозяйственныеОперации.ОтгрузкаБезПереходаПраваСобственности,
					Неопределено));
			
			Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеТоваровМеждуФилиалами
				ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеремещениеПолуфабрикатовМеждуФилиалами Тогда
				СформироватьДвиженияНоменклатураНоменклатура(ПараметрыРасчета, ДанныеДвижения, ДанныеСумм,
					Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеТоваров);
			ИначеЕсли ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемПередачаРаботМеждуФилиалами Тогда
				СформироватьДвиженияНоменклатураНоменклатура(ПараметрыРасчета, ДанныеДвижения, ДанныеСумм,
					Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеРабот);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Формирование прочих доходов\расходов при пересортице.
	Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой Тогда

		Если ДанныеСумм.ПолнаяСуммаПереоценки > 0 Тогда 
			
			СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеСумм, 1, 1, 1, 1, 1);
			
			СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения,
				СкорректированныеСуммы,
				Ложь,
				Перечисления.ХозяйственныеОперации.РасходыОтПереоценкиТоваров);
			
		ИначеЕсли ДанныеСумм.ПолнаяСуммаПереоценки < 0 Тогда
			
			СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеСумм, -1, 1, -1, -1, 1);
			
			СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения,
				СкорректированныеСуммы,
				Истина,
				Перечисления.ХозяйственныеОперации.ДоходыОтПереоценкиТоваров);
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Формирование прочих расходов при порче.
	Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой Тогда
		
		Если ДанныеСумм.ПолнаяСуммаПереоценки <> 0 Тогда
			
			СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеСумм, 1, 1, 1, 1, 1);
			
			СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения,
				СкорректированныеСуммы,
				Ложь,
				Перечисления.ХозяйственныеОперации.РасходыОтПереоценкиТоваров);
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Формирование прочих доходов/расходов возникших от переоценки товаров.
	Если (ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровПоставщику
			И ДанныеДвижения.КорСтоимость <> 0)
		ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияПереданнойВозвратнойТары
		ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями
		ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноПереданнойТарыВозвратНаДругойСклад
		ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноПереданнойТары Тогда
		
		Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями Тогда
			СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеСумм, 0, 0, 1, 1, 0);
		Иначе
			СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеСумм, 1, 1, 1, 1, 0);
		КонецЕсли;
		
		Если СкорректированныеСуммы.ПолнаяСуммаСНДС > 0
		 ИЛИ СкорректированныеСуммы.ПолнаяСуммаРегл > 0
		 ИЛИ СкорректированныеСуммы.ПолнаяСуммаУпр > 0 Тогда 

			СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения,
				СкорректированныеСуммы,
				Ложь,
				Перечисления.ХозяйственныеОперации.РасходыОтПереоценкиТоваров);
			
		ИначеЕсли СкорректированныеСуммы.ПолнаяСуммаСНДС < 0
		 ИЛИ СкорректированныеСуммы.ПолнаяСуммаРегл < 0
		 ИЛИ СкорректированныеСуммы.ПолнаяСуммаУпр < 0 Тогда 
			
			СкорректированныеСуммы = СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(СкорректированныеСуммы, -1, -1, -1, -1, 0);
			
			СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения,
				СкорректированныеСуммы,
				Истина,
				Перечисления.ХозяйственныеОперации.ДоходыОтПереоценкиТоваров);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Служебная, этап 2.1, 3.3, 3.14 (СформироватьДвиженияПоОборотнымРегистрамУпрУчета)
Процедура СформироватьДвиженияНоменклатураДоходыРасходы(ПараметрыРасчета, ДанныеДвижения, ДанныеСумм,
			ЭтоДоход = Ложь, ХозяйственнаяОперация = Неопределено)

	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.Имя;
	
	КопируемыеПоля =
	"Период, ХозяйственнаяОперация, Организация, Подразделение,
	|АналитикаУчетаНоменклатуры,Склад,ТипЗапасов,ВидЗапасов,
	|ИсточникГФУНоменклатуры, ДокументДвижения";
	
	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения.
	ЗаполнитьЗначенияСвойств(Запись, ДанныеСумм);
	
	Если ХозяйственнаяОперация <> Неопределено Тогда
		Запись.ХозяйственнаяОперация = ХозяйственнаяОперация;
	КонецЕсли;
	
	Если ЭтоДоход Тогда
		Запись.СтатьяДоходовРасходов = ДанныеДвижения.СтатьяДоходов;
		Запись.АналитикаДоходов 	 = ДанныеДвижения.АналитикаДоходов;
		Запись.НаправлениеДеятельностиНоменклатуры = ДанныеДвижения.НаправлениеДеятельности;
		Запись.НаправлениеДеятельностиСтатьи = ДанныеДвижения.КорНаправлениеДеятельности;
	Иначе
		Запись.СтатьяДоходовРасходов = ДанныеДвижения.СтатьяРасходовСписания;
		Запись.АналитикаРасходов 	 = ДанныеДвижения.АналитикаРасходов;
		Запись.НаправлениеДеятельностиНоменклатуры = ДанныеДвижения.НаправлениеДеятельности;
		Запись.НаправлениеДеятельностиСтатьи = ДанныеДвижения.КорНаправлениеДеятельности;
		Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию
			И ДанныеДвижения.КорТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар Тогда
			Запись.НаправлениеДеятельностиНоменклатуры = ДанныеДвижения.КорНаправлениеДеятельности;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Служебная, этап 2.1, 3.3, 3.14 (СформироватьДвиженияПоОборотнымРегистрамУпрУчета)
Процедура СформироватьДвиженияНоменклатураНоменклатура(ПараметрыРасчета, ДанныеДвижения, ДанныеСумм, ХозяйственнаяОперация)
	
	Если НЕ ЗначениеЗаполнено(ДанныеДвижения.КорАналитикаУчетаНоменклатуры)
	 И (ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СборкаТоваров
		ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазборкаТоваров
	 	ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности
	 	ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура.Имя;
	
	КопируемыеПоля =
	"Период, ХозяйственнаяОперация, Организация, Подразделение,
	|АналитикаУчетаНоменклатуры,Склад,ТипЗапасов,ВидЗапасов,НаправлениеДеятельности,
	|КорАналитикаУчетаНоменклатуры,КорСклад,КорТипЗапасов,КорВидЗапасов,КорНаправлениеДеятельности,
	|ИсточникГФУНоменклатуры, КорИсточникГФУНоменклатуры, ДокументДвижения, КорОрганизация";

	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения.
	ЗаполнитьЗначенияСвойств(Запись, ДанныеСумм);
	
	Если ХозяйственнаяОперация <> Неопределено Тогда
		Запись.ХозяйственнаяОперация = ХозяйственнаяОперация;
		Если Запись.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеТоваров
			ИЛИ Запись.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутреннееПоступлениеРабот Тогда
			Запись.Организация    = ДанныеДвижения.КорОрганизация;
			Запись.КорОрганизация = ДанныеДвижения.Организация;
		КонецЕсли;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеДвижения.Склад) = Тип("СправочникСсылка.Партнеры") Тогда
		Запись.Количество = ДанныеДвижения.Количество;
	КонецЕсли;
	
	Если Запись.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию Тогда
		Запись.КорНаправлениеДеятельности = ДанныеДвижения.НаправлениеДеятельности;
	КонецЕсли;
	
КонецПроцедуры

// Служебная, этап 2.1, 3.18
Процедура СформироватьДвиженияНоменклатураДоходыРасходыСписаниеНДС(ПараметрыРасчета) Экспорт
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.Имя;
	
	КопируемыеПоля = "Период, ХозяйственнаяОперация, Организация,
	|НаправлениеДеятельностиНоменклатуры, НаправлениеДеятельностиСтатьи, АналитикаУчетаНоменклатуры,
	|Склад, Подразделение, СтатьяДоходовРасходов, АналитикаРасходов, ВидЗапасов, ТипЗапасов,
	|ИсточникГФУНоменклатуры, ДокументДвижения, СтоимостьРегл, СтоимостьУпр";
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Партии.Период 														КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСПоПриобретеннымЦенностям) 	КАК ХозяйственнаяОперация,
	|	Партии.Организация 													КАК Организация,
	|	СпрНазначения.НаправлениеДеятельности 								КАК НаправлениеДеятельностиНоменклатуры,
	|	СпрНазначения.НаправлениеДеятельности 								КАК НаправлениеДеятельностиСтатьи,
	|	Партии.АналитикаУчетаНоменклатуры 									КАК АналитикаУчетаНоменклатуры,
	|	АналитикаНоменклатуры.МестоХранения									КАК Склад,
	|	ВЫБОР
	|		КОГДА АналитикаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА АналитикаНоменклатуры.Подразделение
	|		ИНАЧЕ ЕСТЬNULL(СпрСклады.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|	КОНЕЦ 																КАК Подразделение,
	|	Партии.СтатьяСписанияНДС 											КАК СтатьяДоходовРасходов,
	|	Партии.АналитикаСписанияНДС 										КАК АналитикаРасходов,
	|	Партии.ВидЗапасов													КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		 И НЕ СпрНоменклатура.ПрослеживаемыйТовар
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|		ИНАЧЕ ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|	КОНЕЦ 																КАК ТипЗапасов,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ТОГДА Партии.ВидЗапасов
	|		ИНАЧЕ АналитикаНоменклатуры.Номенклатура
	|	КОНЕЦ 																КАК ИсточникГФУНоменклатуры,
	|	Партии.Регистратор 													КАК ДокументДвижения,
	|	СУММА(Партии.СписаниеНДС) 											КАК СтоимостьРегл,
	|	СУММА(Партии.СписаниеНДСУпр) 										КАК СтоимостьУпр
	|ИЗ
	|	ВтПартии КАК Партии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|		ПО Партии.ВидЗапасов = СпрВидыЗапасов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
	|			ПО АналитикаНоменклатуры.СкладскаяТерритория = СпрСклады.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|			ПО АналитикаНоменклатуры.Номенклатура = СпрНоменклатура.Ссылка
	|		ПО Партии.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СпрНазначения
	|		ПО СпрНазначения.Ссылка = АналитикаНоменклатуры.Назначение
	|
	|СГРУППИРОВАТЬ ПО
	|	Партии.Период,
	|	Партии.Организация,
	|	Партии.АналитикаУчетаНоменклатуры,
	|	АналитикаНоменклатуры.МестоХранения,
	|	ВЫБОР
	|		КОГДА АналитикаНоменклатуры.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение)
	|			ТОГДА АналитикаНоменклатуры.Подразделение
	|		ИНАЧЕ ЕСТЬNULL(СпрСклады.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
	|	КОНЕЦ,
	|	СпрНазначения.НаправлениеДеятельности,
	|	Партии.СтатьяСписанияНДС,
	|	Партии.АналитикаСписанияНДС,
	|	Партии.ВидЗапасов,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		 И НЕ СпрНоменклатура.ПрослеживаемыйТовар
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	ИНАЧЕ
	|		ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|	КОНЕЦ, // ТипЗапасов
	|	Партии.Регистратор,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|		ТОГДА Партии.ВидЗапасов
	|		ИНАЧЕ АналитикаНоменклатуры.Номенклатура
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(Партии.СписаниеНДС) <> 0
	|	ИЛИ СУММА(Партии.СписаниеНДСУпр) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор";
	
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина,,, ИмяРегистра);
	
	Пока Выборка.Следующий() Цикл
		// Добавим движение и заполним его свойства.
		ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, Выборка, КопируемыеПоля);
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеЗаполнения)
	
	ДанныеСумм = Новый Структура;
	ДанныеСумм.Вставить("Стоимость", 			  		0);
	ДанныеСумм.Вставить("СтоимостьБезНДС", 		  		0);
	ДанныеСумм.Вставить("ДопРасходы", 	  		  		0);
	ДанныеСумм.Вставить("ДопРасходыБезНДС", 	  		0);
	ДанныеСумм.Вставить("Трудозатраты", 		  		0);
	ДанныеСумм.Вставить("ПостатейныеПостоянныеСНДС", 	0);
	ДанныеСумм.Вставить("ПостатейныеПостоянныеБезНДС", 	0);
	ДанныеСумм.Вставить("ПостатейныеПеременныеСНДС", 	0);
	ДанныеСумм.Вставить("ПостатейныеПеременныеБезНДС", 	0);
	ДанныеСумм.Вставить("СтоимостьРегл", 		  		0);
	ДанныеСумм.Вставить("ДопРасходыРегл", 		  		0);
	ДанныеСумм.Вставить("ТрудозатратыРегл", 	  		0);
	ДанныеСумм.Вставить("ПостатейныеПостоянныеРегл", 	0);
	ДанныеСумм.Вставить("ПостатейныеПеременныеРегл", 	0);
	ДанныеСумм.Вставить("СтоимостьУпр", 		  		0);
	ДанныеСумм.Вставить("ДопРасходыУпр", 		  		0);
	ДанныеСумм.Вставить("ТрудозатратыУпр", 		  		0);
	ДанныеСумм.Вставить("ПостатейныеПостоянныеУпр", 	0);
	ДанныеСумм.Вставить("ПостатейныеПеременныеУпр", 	0);
	ДанныеСумм.Вставить("СтоимостьЗабалансовая", 		0);
	ДанныеСумм.Вставить("СтоимостьЗабалансоваяРегл", 	0);
	ДанныеСумм.Вставить("ПостояннаяРазница", 			0);
	ДанныеСумм.Вставить("ВременнаяРазница", 			0);
	ДанныеСумм.Вставить("НДСРегл", 			    		0);
	ДанныеСумм.Вставить("НДСУпр",	 			    	0);
	ДанныеСумм.Вставить("КорСтоимость", 			    0);
	
	ЗаполнитьЗначенияСвойств(ДанныеСумм, ДанныеЗаполнения);
	
	ЗаполнитьИтоговыеСуммовыеПоказателиДвижения(ДанныеСумм);
	
	ДанныеСумм.Вставить("ПолнаяСуммаПереоценки", ДанныеСумм.ПолнаяСуммаСНДС - ДанныеСумм.КорСтоимость);
		
	Возврат ДанныеСумм;
	
КонецФункции

Функция СкорректироватьСуммовыеПоказателиДвиженияНоменклатуры(ДанныеСумм,
			КоэффициентСуммыСНДС, КоэффициентСуммыБезНДС, КоэффициентСуммыРегл, КоэффициентСуммыУпр, КоэффициентКорСуммы)
	
	ИменаПолейСНДС   = Новый Структура("Стоимость, ДопРасходы, Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПеременныеСНДС");
	ИменаПолейБезНДС = Новый Структура("СтоимостьБезНДС, ДопРасходыБезНДС, ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеБезНДС");
	ИменаПолейРегл   = Новый Структура("СтоимостьРегл, ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл");
	ИменаПолейУпр 	 = Новый Структура("СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр");
	
	ИменаПолейУменьшаемойСтоимости = Новый Структура("Стоимость, СтоимостьБезНДС");
	
	СкорректированныеСуммы = Новый Структура;
	
	Для Каждого КлючИЗначение Из ДанныеСумм Цикл
		
		Если ИменаПолейСНДС.Свойство(КлючИЗначение.Ключ) Тогда
			
			Если ИменаПолейУменьшаемойСтоимости.Свойство(КлючИЗначение.Ключ) Тогда
				СкорректированныеСуммы.Вставить(КлючИЗначение.Ключ,
					(КлючИЗначение.Значение - ДанныеСумм.КорСтоимость * КоэффициентКорСуммы) * КоэффициентСуммыСНДС);
			Иначе
				СкорректированныеСуммы.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение * КоэффициентСуммыСНДС);
			КонецЕсли;
			
		ИначеЕсли ИменаПолейБезНДС.Свойство(КлючИЗначение.Ключ) Тогда
			
			Если ИменаПолейУменьшаемойСтоимости.Свойство(КлючИЗначение.Ключ) Тогда
				СкорректированныеСуммы.Вставить(КлючИЗначение.Ключ,
					(КлючИЗначение.Значение - ДанныеСумм.КорСтоимость * КоэффициентКорСуммы) * КоэффициентСуммыБезНДС);
			Иначе
				СкорректированныеСуммы.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение * КоэффициентСуммыБезНДС);
			КонецЕсли;
		
		ИначеЕсли ИменаПолейРегл.Свойство(КлючИЗначение.Ключ) Тогда
			
			СкорректированныеСуммы.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение * КоэффициентСуммыРегл);
		
		ИначеЕсли ИменаПолейУпр.Свойство(КлючИЗначение.Ключ) Тогда
			
			СкорректированныеСуммы.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение * КоэффициентСуммыУпр);
			
		Иначе
			
			СкорректированныеСуммы.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаполнитьИтоговыеСуммовыеПоказателиДвижения(СкорректированныеСуммы);
	
	Возврат СкорректированныеСуммы;
	
КонецФункции

Процедура ЗаполнитьИтоговыеСуммовыеПоказателиДвижения(ДанныеСумм)
	
	ДанныеСумм.Вставить("ПолнаяСуммаСНДС",
		ДанныеСумм.Стоимость + ДанныеСумм.ДопРасходы + ДанныеСумм.Трудозатраты
		+ ДанныеСумм.ПостатейныеПостоянныеСНДС + ДанныеСумм.ПостатейныеПеременныеСНДС);
	ДанныеСумм.Вставить("ПолнаяСуммаБезНДС",
		ДанныеСумм.СтоимостьБезНДС + ДанныеСумм.ДопРасходыБезНДС + ДанныеСумм.Трудозатраты
		+ ДанныеСумм.ПостатейныеПостоянныеБезНДС + ДанныеСумм.ПостатейныеПеременныеБезНДС);
	ДанныеСумм.Вставить("ПолнаяСуммаРегл",
		ДанныеСумм.СтоимостьРегл + ДанныеСумм.ДопРасходыРегл + ДанныеСумм.ТрудозатратыРегл
		+ ДанныеСумм.ПостатейныеПостоянныеРегл + ДанныеСумм.ПостатейныеПеременныеРегл);
	ДанныеСумм.Вставить("ПолнаяСуммаУпр",
		ДанныеСумм.СтоимостьУпр + ДанныеСумм.ДопРасходыУпр + ДанныеСумм.ТрудозатратыУпр
		+ ДанныеСумм.ПостатейныеПостоянныеУпр + ДанныеСумм.ПостатейныеПеременныеУпр);
	
	ДанныеСумм.Вставить("ЕстьНенулеваяПолнаяСумма",
		ДанныеСумм.ПолнаяСуммаСНДС <> 0
		ИЛИ ДанныеСумм.ПолнаяСуммаБезНДС <> 0
		ИЛИ ДанныеСумм.ПолнаяСуммаРегл <> 0
		ИЛИ ДанныеСумм.ПолнаяСуммаУпр <> 0);
	
КонецПроцедуры

#КонецОбласти

#Область ДвиженияСебестоимостьТоваров

// Служебная, этап 2.1, 3.1, 3.14
Процедура СформироватьКорДвиженияСебестоимостьТоваров(ПараметрыРасчета, ДанныеДвижения, ПромежуточнаяСебестоимость = Ложь) Экспорт
	
	Если ПромежуточнаяСебестоимость Тогда
		ТаблицаПриемник = "ВТПромежуточнаяСебестоимостьТоваров";
	Иначе
		ТаблицаПриемник = Метаданные.РегистрыНакопления.СебестоимостьТоваров.Имя;
	КонецЕсли;
	
	КопируемыеПоля = "
	|Период, ХозяйственнаяОперация, ДокументДвижения, ИдентификаторСтроки,
	|Подразделение, ГруппаПродукции,
	|Стоимость, СтоимостьЗабалансовая, СтоимостьБезНДС, ДопРасходы, ДопРасходыБезНДС,
	|СтоимостьРегл, СтоимостьЗабалансоваяРегл, ПостояннаяРазница, ВременнаяРазница, СтоимостьНДД,
	|СтатьяКалькуляции, ТипЗаписи, ДокументИсточник, ИдентификаторФинЗаписи, Сторно,
	|Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПостоянныеБезНДС,
	|ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл,
	|ПостатейныеПеременныеСНДС, ПостатейныеПеременныеБезНДС, ПостатейныеПеременныеРегл,
	|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр, НДСУпр";
	
	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ТаблицаПриемник, ДанныеДвижения, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения
	Запись.ВидДвижения                = ВидДвиженияНакопления.Приход;
	Запись.АналитикаУчетаНоменклатуры = ДанныеДвижения.КорАналитикаУчетаНоменклатуры;
	Запись.РазделУчета                = ДанныеДвижения.КорРазделУчета;
	Запись.ВидЗапасов                 = ДанныеДвижения.КорВидЗапасов;
	Запись.Организация                = ?(ЗначениеЗаполнено(ДанныеДвижения.КорОрганизация), ДанныеДвижения.КорОрганизация, ДанныеДвижения.Организация);
	Запись.Количество 				  = 0;
	
	Запись.Партия                 	  = ДанныеДвижения.КорПартия;
	Если ЗначениеЗаполнено(ДанныеДвижения.КорПартия) Тогда
		Запись.АналитикаУчетаПартий   = ДанныеДвижения.КорАналитикаУчетаПартий;
	КонецЕсли;
	
	Если ПараметрыРасчета.ПартионныйУчетВерсии22 Тогда
		Запись.АналитикаФинансовогоУчета = ДанныеДвижения.КорАналитикаФинансовогоУчета;
		Запись.ВидДеятельностиНДС   	 = ДанныеДвижения.КорВидДеятельностиНДС;
		Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыпускПродукции Тогда
			Если ТипЗнч(ДанныеДвижения.АналитикаФинансовогоУчета) = Тип("СправочникСсылка.ГруппыАналитическогоУчетаНоменклатуры") Тогда
				Запись.КорАналитикаФинансовогоУчета = ДанныеДвижения.АналитикаФинансовогоУчета;
			Иначе
				Запись.КорАналитикаФинансовогоУчета = Справочники.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка();
			КонецЕсли;
			Запись.ГруппаПродукции = ДанныеДвижения.АналитикаФинансовогоУчета;
		КонецЕсли;
	КонецЕсли;
	Если Запись.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаОтветхранение Тогда
		Запись.КорВидЗапасов             = ДанныеДвижения.КорВидЗапасов;
	КонецЕсли;

	Если ДанныеДвижения.ЭтоПередачаМеждуОрганизациями Тогда
		
		Запись.СтоимостьРегл = 0;
		Запись.СтоимостьЗабалансоваяРегл = 0;
		Запись.ПостояннаяРазница = 0;
		Запись.ВременнаяРазница = 0;
		Запись.СтоимостьНДД = 0;
		
		Запись.ДопРасходыРегл = 0;
		Запись.ТрудозатратыРегл = 0;
		Запись.ПостатейныеПостоянныеРегл = 0;
		Запись.ПостатейныеПеременныеРегл = 0;
		
		Запись.СтоимостьУпр = 0;
		Запись.ДопРасходыУпр = 0;
		Запись.ТрудозатратыУпр = 0;
		Запись.ПостатейныеПостоянныеУпр = 0;
		Запись.ПостатейныеПеременныеУпр = 0;
		
	ИначеЕсли ДанныеДвижения.НДСРегл <> 0 ИЛИ ДанныеДвижения.НДСУпр <> 0 Тогда // это не передача
		
		КопируемыеПоля = " Период, ХозяйственнаяОперация, ДокументДвижения, ИдентификаторСтроки, Подразделение, Организация,
			|СтатьяКалькуляции, ТипЗаписи, ДокументИсточник";
		
		// Добавим движение и заполним его основные свойства
		Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ТаблицаПриемник, ДанныеДвижения, КопируемыеПоля);
		
		// Заполним дополнительные свойства движения
		Запись.ВидДвижения 				  	 = ВидДвиженияНакопления.Приход;
		Запись.АналитикаУчетаНоменклатуры 	 = ДанныеДвижения.КорАналитикаУчетаНоменклатуры;
		Запись.РазделУчета 				  	 = ДанныеДвижения.КорРазделУчета;
		Запись.ВидЗапасов 				  	 = ДанныеДвижения.КорВидЗапасов;
		Запись.Организация                	 = ?(ЗначениеЗаполнено(ДанныеДвижения.КорОрганизация), ДанныеДвижения.КорОрганизация, ДанныеДвижения.Организация);
		
		Запись.Партия                 	     = ДанныеДвижения.КорПартия;
		Запись.АналитикаУчетаПартий   	     = ДанныеДвижения.КорАналитикаУчетаПартий;
		
		Если ПараметрыРасчета.ПартионныйУчетВерсии22 Тогда
			Запись.АналитикаФинансовогоУчета = ДанныеДвижения.КорАналитикаФинансовогоУчета;
			Запись.ВидДеятельностиНДС   	 = ДанныеДвижения.КорВидДеятельностиНДС;
			Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыпускПродукции Тогда
				Если ТипЗнч(ДанныеДвижения.АналитикаФинансовогоУчета) = Тип("СправочникСсылка.ГруппыАналитическогоУчетаНоменклатуры") Тогда
					Запись.КорАналитикаФинансовогоУчета = ДанныеДвижения.АналитикаФинансовогоУчета;
				Иначе
					Запись.КорАналитикаФинансовогоУчета = Справочники.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка();
				КонецЕсли;
				Запись.ГруппаПродукции = ДанныеДвижения.АналитикаФинансовогоУчета;
			КонецЕсли;
		КонецЕсли;
		
		Запись.СтоимостьРегл 			  	 = ДанныеДвижения.НДСРегл;
		Запись.СтоимостьУпр 			  	 = ДанныеДвижения.НДСУпр;
		Запись.СтоимостьНДД 			  	 = ДанныеДвижения.НДСРегл;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ДвиженияПрочиеРасходы

// Служебная, этап 2.1, 3.18
Процедура СформироватьДвиженияПрочиеРасходыСписаниеНДС(ПараметрыРасчета) Экспорт
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	
	КопируемыеПоля =
		"Период, ВидДвижения, ХозяйственнаяОперация, Организация, АналитикаУчетаНоменклатуры, НаправлениеДеятельности, НастройкаХозяйственнойОперации,
		|Подразделение, СтатьяРасходов, АналитикаРасходов, ДокументДвижения, ИдентификаторФинЗаписи, ПостояннаяРазница, СуммаРегл, СуммаУпр";
	
	Запрос = Новый Запрос;
	РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьСвойстваЗапроса(Запрос, ПараметрыРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Партии.Период 														КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 								КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеНДСПоПриобретеннымЦенностям)	КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеНДСПоПриобретеннымЦенностям)	КАК НастройкаХозяйственнойОперации,
	|	Партии.Организация 													КАК Организация,
	|	Партии.АналитикаУчетаНоменклатуры 									КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(СпрНазначения.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) 					КАК НаправлениеДеятельности,
	// Подразделение должно заполняться аналогично УчетНДСРФ.ПолучитьПартии
	|	Партии.ПодразделениеСписанияНДС										КАК Подразделение,
	|	Партии.СтатьяСписанияНДС 											КАК СтатьяРасходов,
	|	Партии.АналитикаСписанияНДС 										КАК АналитикаРасходов,
	|	Партии.Регистратор 													КАК ДокументДвижения,
	|	&ИдентификаторНеиспользуемойФинЗаписи								КАК ИдентификаторФинЗаписи,
	|	СУММА(ВЫБОР КОГДА ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ИСТИНА)
	|			ТОГДА 0
	|			ИНАЧЕ Партии.СписаниеНДС
	|		КОНЕЦ)															КАК ПостояннаяРазница,
	|	СУММА(Партии.СписаниеНДС) 											КАК СуммаРегл,
	|	СУММА(Партии.СписаниеНДСУпр) 										КАК СуммаУпр
	|ИЗ
	|	ВтПартии КАК Партии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК АналитикаНоменклатуры
	|		ПО Партии.АналитикаУчетаНоменклатуры = АналитикаНоменклатуры.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СпрНазначения
	|		ПО СпрНазначения.Ссылка = АналитикаНоменклатуры.Назначение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО Партии.СтатьяСписанияНДС = СтатьиРасходов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Партии.Период,
	|	Партии.Организация,
	|	Партии.АналитикаУчетаНоменклатуры,
	|	Партии.ПодразделениеСписанияНДС,
	|	ЕСТЬNULL(СпрНазначения.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)),
	|	Партии.СтатьяСписанияНДС,
	|	Партии.АналитикаСписанияНДС,
	|	Партии.Регистратор
	|
	|ИМЕЮЩИЕ
	|	СУММА(Партии.СписаниеНДС) <> 0
	|	ИЛИ СУММА(Партии.СписаниеНДСУпр) <> 0
	|";
	
	Выборка = РасчетСебестоимостиПрикладныеАлгоритмы.ВыполнитьЗапросСЗамеромДляПротокола(ПараметрыРасчета, Запрос, Истина,,, ИмяРегистра);
	
	Пока Выборка.Следующий() Цикл
		// Добавим движение и заполним его свойства.
		ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, Выборка, КопируемыеПоля);
	КонецЦикла;
	
КонецПроцедуры

// Служебная, этап 2.1, 3.1, 3.3, 3.14
Процедура СформироватьДвиженияПрочиеРасходы(ПараметрыРасчета, ДанныеДвижения, СуммовыеПоказатели) Экспорт

	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация, Подразделение, АналитикаРасходов, ХозяйственнаяОперация,
	|АналитикаУчетаНоменклатуры, ГруппаПродукции, ДокументДвижения, ИдентификаторФинЗаписи";
	
	Сумма = СуммовыеПоказатели.СуммаСНДС;
	СуммаБезНДС = СуммовыеПоказатели.СуммаБезНДС;
	СуммаРегл = СуммовыеПоказатели.СуммаРегл;
	СуммаУпр = СуммовыеПоказатели.СуммаУпр;
	ПостояннаяРазница = СуммовыеПоказатели.ПостояннаяРазница;
	ВременнаяРазница = СуммовыеПоказатели.ВременнаяРазница;
	СуммаНДД = СуммовыеПоказатели.СуммаНДД;

	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
	
	Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы
	 И НачалоМесяца(ДанныеДвижения.ПериодПродажи) < НачалоМесяца(ДанныеДвижения.Период) Тогда
		Знак = -1;
	Иначе
		Знак = 1;
	КонецЕсли;
	
	// Заполним дополнительные свойства движения
	Запись.ВидДвижения       = ВидДвиженияНакопления.Приход;
	Запись.Сумма             = Знак * Сумма;
	Запись.СтатьяРасходов    = ДанныеДвижения.СтатьяРасходовСписания;
	Запись.НаправлениеДеятельности = ДанныеДвижения.КорНаправлениеДеятельности;
	Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию Тогда
		Запись.Организация = ДанныеДвижения.КорОрганизация;
	КонецЕсли;
	Если ДанныеДвижения.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты Тогда
		Запись.СуммаБезНДС = Знак * СуммаБезНДС;
	КонецЕсли;
	
	Если НЕ ДанныеДвижения.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаПрочиеАктивы Тогда
		Если НЕ ПараметрыРасчета.УправленческийУчетОрганизаций
		 ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию Тогда
			Запись.СуммаУпр = 0;
		ИначеЕсли ДанныеДвижения.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы
		 И НЕ ПараметрыРасчета.ИспользуетсяУправлениеВНА_2_4 Тогда
			Запись.СуммаУпр = 0;
		Иначе
			Запись.СуммаУпр = Знак * СуммаУпр;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходовРегл
	 ИЛИ ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию
	 ИЛИ ДанныеДвижения.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаПрочиеАктивы
	 ИЛИ (ДанныеДвижения.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы
	 	И НЕ ПараметрыРасчета.ИспользуетсяУправлениеВНА_2_4) Тогда
		Запись.СуммаРегл = 0;
		Запись.ПостояннаяРазница = 0;
		Запись.ВременнаяРазница = 0;
		Запись.СуммаНДД = 0;
	Иначе
		Если ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию Тогда
			Запись.СуммаРегл = 0;
			//++ Локализация
			Запись.ПостояннаяРазница = ?(ДанныеДвижения.СписаниеПриПередачеНУ,
				?(НЕ ДанныеДвижения.ПринятиеКНалоговомуУчету, СуммаРегл - ВременнаяРазница - ПостояннаяРазница, 0), 0);
			Запись.ВременнаяРазница = ?(ДанныеДвижения.СписаниеПриПередачеНУ,
				?(НЕ ДанныеДвижения.ПринятиеКНалоговомуУчету, -(СуммаРегл - ВременнаяРазница - ПостояннаяРазница),
					-(СуммаРегл - ВременнаяРазница - ПостояннаяРазница)), 0);
			//-- Локализация
			Запись.СуммаНДД = 0;
		ИначеЕсли ДанныеДвижения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатациюБУНУ Тогда
			Запись.СуммаРегл = 0;
			Запись.ПостояннаяРазница = 0;
			Запись.ВременнаяРазница = 0;
			Запись.СуммаНДД = 0;
		Иначе
			Запись.СуммаРегл = Знак * СуммаРегл;
			Запись.ПостояннаяРазница = ?(НЕ ДанныеДвижения.ПринятиеКНалоговомуУчету, Знак * СуммаРегл - Знак * ВременнаяРазница, Знак * ПостояннаяРазница);
			Запись.ВременнаяРазница  = Знак * ВременнаяРазница;
			Запись.СуммаНДД  = Знак * СуммаНДД;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеДвижения.КорОрганизация)
	 И ДанныеДвижения.КорОрганизация <> ДанныеДвижения.Организация
	 И ДанныеДвижения.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию Тогда
	 
		ЗаписьУпр = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
		ЗаписьУпр.СтатьяРасходов = ДанныеДвижения.СтатьяРасходовСписания;
		ЗаписьУпр.Сумма = -Запись.Сумма;
		ЗаписьУпр.СуммаУпр = -Запись.СуммаУпр;
		ЗаписьУпр.СуммаРегл = 0;
		ЗаписьУпр.ПостояннаяРазница = 0;
		ЗаписьУпр.ВременнаяРазница  = 0;
		ЗаписьУпр.СуммаНДД  = 0;
		ЗаписьУпр.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторнированиеРасходовУУ;
		
		ЗаписьУпр = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
		ЗаписьУпр.Организация = ДанныеДвижения.КорОрганизация;
		ЗаписьУпр.СтатьяРасходов = ДанныеДвижения.СтатьяРасходовСписания;
		ЗаписьУпр.Сумма = Запись.Сумма;
		ЗаписьУпр.СуммаУпр = Запись.СуммаУпр;
		ЗаписьУпр.СуммаРегл = 0;
		ЗаписьУпр.ПостояннаяРазница = 0;
		ЗаписьУпр.ВременнаяРазница  = 0;
		ЗаписьУпр.СуммаНДД  = 0;
		ЗаписьУпр.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РегистрацияРасходовУУ;
		
		// Добавим движения по регистру "Активы и пассивы".
		ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя;
	
		КопируемыеПоля = "
		|Период, Организация, Подразделение, НаправлениеДеятельности";
		
		// Добавим движение и заполним его основные свойства
		Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
		
		// Заполним дополнительные свойства движения
		Запись.ВидДвижения = ВидДвиженияНакопления.Приход;
		Запись.Статья      = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки;
		Запись.Аналитика   = ДанныеДвижения.Организация;
		Запись.Сумма 	   = Знак * Сумма;
		
		// Добавим движение и заполним его основные свойства
		Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
		
		// Заполним дополнительные свойства движения
		Запись.ВидДвижения = ВидДвиженияНакопления.Расход;
		Запись.Организация = ДанныеДвижения.КорОрганизация;
		Запись.Статья      = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ПрибылиИУбытки;
		Запись.Аналитика   = ДанныеДвижения.КорОрганизация;
		Запись.Сумма 	   = Знак * Сумма;
	 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДвиженияПрочиеДоходы

// Служебная, этап 2.1, 3.3, 3.14
Процедура СформироватьДвиженияПрочиеДоходы(ПараметрыРасчета, ДанныеДвижения,
			Сумма, СуммаРегл, СуммаУпр) Экспорт
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеДоходы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация, Подразделение, СтатьяДоходов, АналитикаДоходов, ХозяйственнаяОперация";

	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения
	Запись.ВидДвижения = ВидДвиженияНакопления.Приход;
	Запись.НаправлениеДеятельности = ДанныеДвижения.КорНаправлениеДеятельности;
	Запись.Сумма	   = Сумма;
	Запись.СуммаУпр	   = СуммаУпр;
	Если ПараметрыРасчета.ФО.ИспользоватьУчетПрочихДоходовРасходовРегл Тогда
		Запись.СуммаРегл = СуммаРегл;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДвиженияВыручкаИСебестоимостьПродаж

// Служебная, этап 2.2, 3.17, 3.18
Процедура СформироватьДвиженияВыручкаИСебестоимостьПродаж(ПараметрыРасчета, ДанныеДвижения) Экспорт
	
	ИмяРегистра = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя;
	
	КопируемыеПоля = "
	|Период, Подразделение, АналитикаУчетаНоменклатуры, Менеджер, РазделУчета,
	|АналитикаУчетаПоПартнерам, ТипЗапасов, ВидЗапасов, ЗаказКлиента, ХозяйственнаяОперация,
	|Склад, Соглашение, Договор, ВалютаВзаиморасчетов, ВалютаДокумента,
	|ИсточникГФУНоменклатуры, ИсточникГФУРасчетов, НаправлениеДеятельностиНоменклатуры,
	|НаправлениеДеятельностиКонтрагента, 
	|НалогообложениеНДС, ДокументДвижения, ИдентификаторФинЗаписи,
	|Партия, АналитикаУчетаПартий, АналитикаФинансовогоУчета, ВидДеятельностиНДС";
	
	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения
	ПоляРесурсов = "
		|Стоимость, СтоимостьБезНДС, ПостояннаяРазница, ВременнаяРазница,
		|СтоимостьРегл, ДопРасходы, ДопРасходыБезНДС,
		|СтоимостьЗабалансовая, Трудозатраты, ПостатейныеПостоянныеСНДС, ПостатейныеПеременныеСНДС,
		|ПостатейныеПостоянныеБезНДС, ПостатейныеПеременныеБезНДС,
		|СтоимостьЗабалансоваяРегл, ДопРасходыРегл, ТрудозатратыРегл, ПостатейныеПостоянныеРегл, ПостатейныеПеременныеРегл,
		|СтоимостьУпр, ДопРасходыУпр, ТрудозатратыУпр, ПостатейныеПостоянныеУпр, ПостатейныеПеременныеУпр";
	
	ЗаполнитьЗначенияСвойств(Запись, ДанныеДвижения, ПоляРесурсов);
	
	Если ДанныеДвижения.НДСРегл <> 0 Тогда
		
		// Добавим движение и заполним его основные свойства
		Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
		
		// Заполним дополнительные свойства движения
		Запись.СтоимостьРегл = ДанныеДвижения.НДСРегл;
		
	КонецЕсли;
	
	Если ДанныеДвижения.НДСУпр <> 0 Тогда
		
		// Добавим движение и заполним его основные свойства
		Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
		
		// Заполним дополнительные свойства движения
		Запись.СтоимостьУпр = ДанныеДвижения.НДСУпр;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ДвиженияПрочиеАктивыПассивы

// Служебная, этап 2.1
Процедура СформироватьДвиженияПрочиеАктивыПассивы(ПараметрыРасчета, ДанныеДвижения, Сумма) Экспорт

	ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.Имя;
	
	КопируемыеПоля = "
	|Период, Организация";
	
	// Добавим движение и заполним его основные свойства
	Запись = ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ИмяРегистра, ДанныеДвижения, КопируемыеПоля);
	
	// Заполним дополнительные свойства движения
	Запись.ВидДвижения = ВидДвиженияНакопления.Приход;
	Запись.Сумма 	   = Сумма;
	Запись.Статья 	   = ДанныеДвижения.СтатьяАктивовПассивов;
	Запись.Аналитика   = ДанныеДвижения.АналитикаАктивовПассивов;
	Запись.НаправлениеДеятельности = ДанныеДвижения.КорНаправлениеДеятельности;

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область РаспределениеСтоимости

// Служебная, этап 2.1, 2.2, 3.1, 3.18
Процедура РаспределитьСтоимость(ЗаписьРаспределения, СтрокаОстатка, Выборка, Знач КоличествоКРаспределению) Экспорт
	
	СуммыОстатка 	= ПолучитьСуммовыеПоказателиРаспределения(СтрокаОстатка);
	СуммыКСписанию 	= ПолучитьСуммовыеПоказателиРаспределения();
	
	Если КоличествоКРаспределению >= СтрокаОстатка.Количество Тогда
		
		ЗаполнитьЗначенияСвойств(СуммыКСписанию, СуммыОстатка);
		
		КоличествоКРаспределению = КоличествоКРаспределению - СтрокаОстатка.Количество;
		КоличествоКСписанию	     = СтрокаОстатка.Количество;
		

	ИначеЕсли КоличествоКРаспределению < СтрокаОстатка.Количество Тогда
		
		Для Каждого КлючИЗначение Из СуммыОстатка Цикл
			
			СуммыКСписанию[КлючИЗначение.Ключ] =
				Окр((КоличествоКРаспределению * СуммыОстатка[КлючИЗначение.Ключ] / СтрокаОстатка.Количество), 2);
				
			СуммыОстатка[КлючИЗначение.Ключ] = СуммыОстатка[КлючИЗначение.Ключ] - СуммыКСписанию[КлючИЗначение.Ключ];
				
		КонецЦикла;
		
		КоличествоКСписанию		 = КоличествоКРаспределению;
		КоличествоКРаспределению = 0;
		СтрокаОстатка.Количество = СтрокаОстатка.Количество - КоличествоКСписанию;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЗаписьРаспределения, Выборка);
	
	Если Выборка.ИсходноеКоличество < 0 Тогда
		
		Для Каждого КлючИЗначение Из СуммыКСписанию Цикл
			
			СуммыКСписанию[КлючИЗначение.Ключ] = -СуммыКСписанию[КлючИЗначение.Ключ];
				
		КонецЦикла;
		
		ЗаписьРаспределения.Количество = -КоличествоКСписанию;
		
	Иначе
		
		СуммыВыборки = ПолучитьСуммовыеПоказателиРаспределения(Выборка);
		
		Для Каждого КлючИЗначение Из СуммыКСписанию Цикл
			
			СуммыКСписанию[КлючИЗначение.Ключ] = СуммыКСписанию[КлючИЗначение.Ключ] - СуммыВыборки[КлючИЗначение.Ключ];
				
		КонецЦикла;
		
		ЗаписьРаспределения.Количество = КоличествоКСписанию;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЗаписьРаспределения, СуммыКСписанию);
	ЗаполнитьЗначенияСвойств(СтрокаОстатка, СуммыОстатка);
	
КонецПроцедуры

// Служебная, этап 2.1, 3.1
Процедура ДополнитьСуммыРаспределения(ЗаписьРаспределения, СуммыРаспределения) Экспорт
	
	СуммыЗаписи 	= ПолучитьСуммовыеПоказателиРаспределения(ЗаписьРаспределения);
	СуммыДополнения = ПолучитьСуммовыеПоказателиРаспределения(СуммыРаспределения);
	
	Для Каждого КлючИЗначение Из СуммыЗаписи Цикл
		Если СуммыЗаписи[КлючИЗначение.Ключ] <> Неопределено Тогда
			СуммыЗаписи[КлючИЗначение.Ключ] =
				СуммыЗаписи[КлючИЗначение.Ключ] + СуммыДополнения[КлючИЗначение.Ключ];
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(ЗаписьРаспределения, СуммыЗаписи);
	
КонецПроцедуры

Функция ПолучитьСуммовыеПоказателиРаспределения(ДанныеЗаполнения = Неопределено)
	
	ДанныеСумм = Новый Структура;
	ДанныеСумм.Вставить("Стоимость", 			  	0);
	ДанныеСумм.Вставить("СтоимостьБезНДС", 		  	0);
	ДанныеСумм.Вставить("СтоимостьЗабалансовая", 	0);
	ДанныеСумм.Вставить("ДопРасходы", 	  		  	0);
	ДанныеСумм.Вставить("ДопРасходыБезНДС", 	  	0);
	ДанныеСумм.Вставить("СтоимостьРегл", 		  	0);
	ДанныеСумм.Вставить("ДопРасходыРегл", 		  	0);
	ДанныеСумм.Вставить("СтоимостьЗабалансоваяРегл",0);
	ДанныеСумм.Вставить("НДСРегл", 			    	0);
	ДанныеСумм.Вставить("ПостояннаяРазница", 		0);
	ДанныеСумм.Вставить("ВременнаяРазница", 		0);
	ДанныеСумм.Вставить("СтоимостьНДД", 			0);
	ДанныеСумм.Вставить("СтоимостьУпр", 		  	0);
	ДанныеСумм.Вставить("ДопРасходыУпр",  		  	0);
	ДанныеСумм.Вставить("НДСУпр",	 			    0);
	ДанныеСумм.Вставить("ПостатейныеПостоянныеРегл",0);
	ДанныеСумм.Вставить("ПостатейныеПеременныеРегл",0);
	ДанныеСумм.Вставить("ПостатейныеПостоянныеУпр", 0);
	ДанныеСумм.Вставить("ПостатейныеПеременныеУпр",	0);
	
	Если ДанныеЗаполнения <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ДанныеСумм, ДанныеЗаполнения);
	КонецЕсли;
	
	Возврат ДанныеСумм;
	
КонецФункции

#КонецОбласти

#Область УниверсальныеПроцедурыРаботыСЗапросами

// Дополняет свойства запроса данными характерными для корректировки стоимости.
//
// Параметры:
//	Запрос - Запрос - Запрос для которого устанавливаются параметры
//	ПараметрыРасчета - см. РасчетСебестоимостиПрикладныеАлгоритмы.ИнициализироватьОбщиеПараметрыРасчета
//
Процедура ДополнитьСвойстваЗапроса(Запрос, ПараметрыРасчета) Экспорт
	
	// Параметр "СредняяЗаМесяц" используется в предыдущей версии расчета СЛУ в функциях формирования узлов корректировки. 
	МетодОценки = Неопределено;
	ПараметрыРасчета.Свойство("МетодОценки", МетодОценки);
	Запрос.УстановитьПараметр("СредняяЗаМесяц", МетодОценки = Перечисления.МетодыОценкиСтоимостиТоваров.СредняяЗаМесяц);
	
	// Параметры, относящиеся только к расчету себестоимости.
	Запрос.УстановитьПараметр("ЗначениеПогрешностиСебестоимостьРегл", ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиСебестоимостьРегл);
	Запрос.УстановитьПараметр("ЗначениеПогрешностиСебестоимостьУпр", ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиСебестоимостьУпр);
	Запрос.УстановитьПараметр("ЗначениеПогрешностиРасходыРегл", ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиРасходыРегл);
	Запрос.УстановитьПараметр("ЗначениеПогрешностиРасходыУпр", ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиРасходыУпр);
	Запрос.УстановитьПараметр("ЗначениеПогрешностиКоличество", ПараметрыРасчета.ПогрешностиРешенияСЛУ.ЗначениеПогрешностиКоличество);
	
	Запрос.УстановитьПараметр("ЗащитаОтПереполненияПоля", Pow(10, ПараметрыРасчета.РешениеСЛУ.ЗащитаОтПереполненияПоля) - 1);
	
	// Отборы по хозяйственным операциям.
	Запрос.УстановитьПараметр("МассивОперацийРеализации", МассивОперацийРеализации());
	Запрос.УстановитьПараметр("МассивОперацийВозвратыПрошлыхПериодов", МассивОперацийВозвратыПрошлыхПериодов());
	Запрос.УстановитьПараметр("МассивОперацийПередачи", МассивОперацийПередачиТоваров());
	Запрос.УстановитьПараметр("МассивОперацийПоступление", МассивОперацийВнешнееПоступление());
	Запрос.УстановитьПараметр("МассивОперацийПоступлениеВнешнее", МассивОперацийДляОценкиОстаткаТоваровПоФИФО());
	
	// Определяет какого типа должна формироваться разница по статье погрешности расчета себестоимости
	ПогрешностьРасчетаСебестоимости = ПланыВидовХарактеристик.СтатьиРасходов.ПогрешностьРасчетаСебестоимости;
	ПогрешностьПринимаетсяВНУ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПогрешностьРасчетаСебестоимости, "ПринятиеКНалоговомуУчету");
	Запрос.УстановитьПараметр("ПогрешностьПринимаетсяВНУ", ПогрешностьПринимаетсяВНУ);
	
КонецПроцедуры

#Область ОтборыПоХозяйственнымОперациям

Функция МассивОперацийРеализации()
	
	МассивОпераций = Новый Массив;
	
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиенту);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКомиссионногоТовара);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияВРозницу);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.СторноРеализации);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомиссионера);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями);;
	//++ Устарело_Переработка24
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ОтчетДавальцу);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратДавальцу);
	//-- Устарело_Переработка24
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВыкупТоваровПереработчиком);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВыкупТоваровХранителем);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияЧерезКомиссионера);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.РеализацияЧерезКомиссионераБезПереходаПраваСобственности);
	
	Возврат МассивОпераций;
	
КонецФункции

Функция МассивОперацийПередачиТоваров()

	Массив = Новый Массив;
	
	Массив.Добавить(Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию);
	Массив.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями);
	
	Возврат Массив;
	
КонецФункции

Функция МассивОперацийВозвратыПрошлыхПериодов()

	МассивОпераций = Новый Массив;
	
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомиссионера);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионераПрошлыхПериодов);
	
	Возврат МассивОпераций;
	
КонецФункции

Функция МассивОперацийВнешнееПоступление()

	// Формируется список всех хоз. операций, которые являются внешним поступлением (известна их стоимость).
	ХозОперации = Новый Массив;
	
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеТоваров);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеПоВозврату);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомитентуОСписании);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет); // сторнирование реализации регл. учета по управленческой организации
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаПродукцииИзПроизводстваФиксированнаяСтоимость);
	
	//++ Устарело_Переработка24
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчикаФиксированнаяСтоимость);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОтчетДавальцу);
	//-- Устарело_Переработка24
	
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОтчетДавальцуМеждуОрганизациями);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаВПроизводство);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы);
	//++ Устарело_Переработка24
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчика);
	//-- Устарело_Переработка24
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчика2_5);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчикаВСтранахЕАЭС2_5);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровПоставщику);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковЗатратПартийПроизводства);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КорректировкаДоВводаОстатков);
	
	// Таможенная декларация (старые и новые хоз. операции).
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОформлениеГТДБрокером);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОформлениеГТДСамостоятельно);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ДополнительныеРасходыБезПартии);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ДополнительныеРасходыСПартией);
	
	// Возврат прошлого периода используется только для операций расчета по среднему,
	// т.к. оценивать остатки для ФИФО не корректно.
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТарыОтКлиентаПрошлыхПериодов);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КорректировкаПриобретенияПрошлогоПериода);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровЧерезКомиссионераПрошлыхПериодов);
	
	// Операции по комиссионным и давальческим товарам.
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПриемНаКомиссию);
	//++ Устарело_Переработка24
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОтДавальца);
	//-- Устарело_Переработка24
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОтДавальца2_5);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию);
	
	// Операции по товарам на ответственном хранении.
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПриемНаХранениеСПравомПродажи);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеИзлишковТоваровВПользуПоклажедателя);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеИзлишковТоваровВПользуКомитента);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыкупТоваровДавальца);
	
	// Операции по агентской закупке товаров и услуг.
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПриемкаПодПринципала);
	
	// Пересортица партий.
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПересортицаПартийТоваров);
	
	// Ввод остатков при переходе на НДД.
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВводОстатковПриПереходеНаНДД);
	
	Возврат ХозОперации;

КонецФункции

Функция МассивОперацийДляОценкиОстаткаТоваровПоФИФО()

	ХозОперации = Новый Массив;
	
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеТоваров);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОприходованиеПоВозврату);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОтчетКомитентуОСписании);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет); // сторнирование реализации регл. учета по управленческой организации
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыпускПродукцииФиксированнаяСтоимость);
	//++ Устарело_Переработка24
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчикаФиксированнаяСтоимость);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОтчетДавальцу);
	//-- Устарело_Переработка24
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаВПроизводство);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы);
	//++ Устарело_Переработка24
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчика);
	//-- Устарело_Переработка24
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчика2_5);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчикаВСтранахЕАЭС2_5);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.КорректировкаДоВводаОстатков);
	
	// Таможенная декларация (старые и новые хоз. операции).
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОформлениеГТДБрокером);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ОформлениеГТДСамостоятельно);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ДополнительныеРасходыБезПартии);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ДополнительныеРасходыСПартией);
	
	// Операции по комиссионным и давальческим товарам.
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПриемНаКомиссию);
	//++ Устарело_Переработка24
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПоступлениеОтДавальца);
	//-- Устарело_Переработка24
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию);
	
	// Операции по товарам на ответственном хранении.
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ПриемНаХранениеСПравомПродажи);
	ХозОперации.Добавить(Перечисления.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров);
	
	Возврат ХозОперации;

КонецФункции

#КонецОбласти

#КонецОбласти

#Область УниверсальныеПроцедурыРаботыСДвижениями

// Добавляет новую строку в таблицу движений указанного регистра и заполняет служебные поля.
// Сделана экспортной для вызова из модуля универсальных механизмов расчетов.
//
// Возвращаемое значение:
//	СтрокаТаблицыЗначений - добавленная строка в таблицу движений
//
Функция ДобавитьЗаписьВТаблицуДвижений(ПараметрыРасчета, ТаблицаПриемник, ДанныеДвижения,
			КопируемыеПоля = Неопределено, СлужебныеПоля = Неопределено) Экспорт
			
	Если ПараметрыРасчета.Движения.Свойство(ТаблицаПриемник) Тогда
		ОписаниеПриемника = ПараметрыРасчета.Движения[ТаблицаПриемник];
	Иначе
		ОписаниеПриемника = ПараметрыРасчета.ВспомогательныеВременныеТаблицы[ТаблицаПриемник];
	КонецЕсли;
	
	// Добавим запись универсальной процедурой, а потом дозаполним поля, относящиеся только к расчету себестоимости
	Запись = РасчетСебестоимостиПрикладныеАлгоритмы.ДобавитьЗаписьВТаблицуДвижений(
		ПараметрыРасчета,
		ОписаниеПриемника,
		ДанныеДвижения,
		КопируемыеПоля);
	
	// Заполним поле Регистратор из обязательного свойства ДокументДвижения источника ДанныеДвижения.
	Запись.Регистратор = ДанныеДвижения.ДокументДвижения;
	
	// Заполним пустой регистратор соответствующим документом расчета себестоимости
	Если ОписаниеПриемника.ЭтоОписаниеРегистра
	 И ПараметрыРасчета.Отладка.ИсправлятьПустойРегистратор И НЕ ЗначениеЗаполнено(Запись.Регистратор) Тогда
		
		ДокументыРасчетаПоОрганизациям  = ПараметрыРасчета.ДокументыРасчетаПоОрганизациям; // Соответствие
		ОрганизацияПоАналитикеПартнеров = ПараметрыРасчета.ОрганизацияПоАналитикеПартнеров; // Соответствие

		Если ОписаниеПриемника.ЕстьОрганизация Тогда
			Запись.Регистратор = ДокументыРасчетаПоОрганизациям.Получить(ДанныеДвижения.Организация);
		ИначеЕсли ОписаниеПриемника.ЕстьАналитикаПартнеров Тогда
			Запись.Регистратор = ДокументыРасчетаПоОрганизациям.Получить(
				ОрганизацияПоАналитикеПартнеров.Получить(ДанныеДвижения.АналитикаУчетаПоПартнерам));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Запись.Регистратор) Тогда
			ТекстОшибки = НСтр("ru = 'Документ %1 установлен регистратором движения регистра %2 вместо %3,
				|который не может иметь движений по данному регистру.'", ОбщегоНазначения.КодОсновногоЯзыка());
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки,
				Запись.Регистратор,
				ТаблицаПриемник,
				ДанныеДвижения.ДокументДвижения);
			ЗаписьЖурналаРегистрации(
				РасчетСебестоимостиПрикладныеАлгоритмы.ИмяСобытияОшибкиДляЖурналаРегистрации(ПараметрыРасчета),
				УровеньЖурналаРегистрации.Предупреждение,
				,
				,
				ТекстОшибки);
		КонецЕсли;
		
	КонецЕсли;
	
	// Если регистратор не заполнен, то запомним информацию об ошибке
	Если ОписаниеПриемника.ЭтоОписаниеРегистра И НЕ ЗначениеЗаполнено(Запись.Регистратор) Тогда
		
		Если НЕ ЗначениеЗаполнено(ДанныеДвижения.ДокументДвижения) Тогда
			// Ошибка в запросах - не заполнено обязательное поле ДокументДвижения.
			ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не заполнено свойство %1 для движения по регистру ""%2""'", ОбщегоНазначения.КодОсновногоЯзыка()),
				"ДокументДвижения",
				ТаблицаПриемник);
		Иначе
			// Ошибка в метаданных - документ не является регистратором для данного регистра.
			ТекстДляПротокола = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Документ ""%1"" не может иметь движений по регистру ""%2""'", ОбщегоНазначения.КодОсновногоЯзыка()),
				СокрЛП(ДанныеДвижения.ДокументДвижения),
				ТаблицаПриемник);
		КонецЕсли;
		
		РасчетСебестоимостиПротоколРасчета.ЗафиксироватьОшибкуРасчета(
			ПараметрыРасчета,
			Перечисления.ТипыОшибокПартионногоУчетаИСебестоимости.ОшибкаФормированияДвиженийПоРегистрам,
			ТекстДляПротокола);
		
		Если ОписаниеПриемника.ЕстьОрганизация Тогда
			ОрганизацияСПроблемой = ДанныеДвижения.Организация;
		ИначеЕсли ОписаниеПриемника.ЕстьАналитикаПартнеров Тогда
			ОрганизацияПоАналитикеПартнеров = ПараметрыРасчета.ОрганизацияПоАналитикеПартнеров; // Соответствие
			ОрганизацияСПроблемой = ОрганизацияПоАналитикеПартнеров.Получить(ДанныеДвижения.АналитикаУчетаПоПартнерам);
		Иначе
			ОрганизацияСПроблемой = Неопределено;
		КонецЕсли;
			
		РасчетСебестоимостиПрикладныеАлгоритмы.ЗарегистрироватьПроблемуВыполненияРасчета(
			ПараметрыРасчета,
			ОрганизацияСПроблемой,
			НСтр("ru = 'При формировании движений диагностированы ошибки'", ОбщегоНазначения.КодОсновногоЯзыка()),
			ТекстДляПротокола,
			ДанныеДвижения.ДокументДвижения);
		
		Для Каждого КлючИЗначение Из ПараметрыРасчета.ДокументыРасчетаПоОрганизациям Цикл
			// Заполним регистратор произвольным "первым" документом расчета себестоимости - чтобы движения можно было записать.
			// Расчет все равно в итоге будет завершен с ошибкой, но т.о. можно получить информацию о всех ошибочных регистраторах.
			Запись.Регистратор = КлючИЗначение.Ключ;
			Прервать;
		КонецЦикла;

	КонецЕсли;
	
	Возврат Запись;
	
КонецФункции

Процедура ДополнитьОписаниеПолейДляФормированияДвижений(ПараметрыРасчета, ТаблицаОписанияПолей, ОписаниеПриемника, КопируемыеПоля) Экспорт
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ИзменитьРегистраторИДокументДвиженияВОписанииПолейЗапроса(ТаблицаОписанияПолей, ОписаниеПриемника.ИмяРегистра);
	
КонецПроцедуры

#КонецОбласти

#Область УниверсальныеПроцедурыОписанияДанныхМеханизма

// Возвращает перечень объектов метаданных, на основании данных которых выполняется расчет себестоимости.
// В перечень не включаются объекты, которые являются одновременно и исходящими данными механизмов расчета партий и себестоимости.
//
// Параметры:
//	ВходящиеДанные - Соответствие - уже инициализированное хранилище для описания входящих данных
//	ТолькоТребующиеПерерасчета - Булево - если установлен, то будет возвращен перечень только тех данных,
//		изменение которых влечет за собой необходимость перерасчета партий и себестоимости
//		При изменении этих данных должна создаваться запись в регистре сведений ЗаданияКРасчетуСебестоимости.
//
// Возвращаемое значение:
//	Соответствие - Ключ - ОбъектМетаданных
//
Функция ВходящиеДанныеМеханизма(ВходящиеДанные = Неопределено, ТолькоТребующиеПерерасчета = Ложь) Экспорт
	
	Если ВходящиеДанные = Неопределено Тогда
		ВходящиеДанные = Новый Соответствие;
	КонецЕсли;
	
	Если ТолькоТребующиеПерерасчета Тогда
		Значение = Истина; // чтобы можно было проверить вхождение объекта метаданных в это соответствие
	Иначе
		Значение = Неопределено;
	КонецЕсли;
	
	Если НЕ ТолькоТребующиеПерерасчета Тогда 
		
		ВходящиеДанные.Вставить(Метаданные.Документы.ВнутреннееПотребление, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ВозвратТоваровОтКлиента, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.КорректировкаРеализации, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ОтчетОРозничныхПродажах, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ОтчетПоКомиссииМеждуОрганизациями, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ПередачаТоваровМеждуОрганизациями, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ПеремещениеТоваров, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.ПриобретениеТоваровУслуг, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.РасчетСебестоимостиТоваров, Значение);
		ВходящиеДанные.Вставить(Метаданные.Документы.РеализацияТоваровУслуг, Значение);
		
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.АналитикаУчетаНоменклатуры, Значение);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.АналитикаУчетаПоПартнерам, Значение);
		ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.НастройкаРаспределенияПоНаправлениямДеятельности, Значение);
		
		ВходящиеДанные.Вставить(Метаданные.Справочники.КлючиАналитикиУчетаНоменклатуры, Значение);
		ВходящиеДанные.Вставить(Метаданные.Справочники.Назначения, Значение);
		ВходящиеДанные.Вставить(Метаданные.Справочники.СпособыРаспределенияПоНаправлениямДеятельности, Значение);
		
		ВходящиеДанные.Вставить(Метаданные.ПланыВидовХарактеристик.СтатьиРасходов, Значение);
		
	КонецЕсли;

	
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.СтоимостьТоваров, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПрочихРасходов, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеДоходы, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.СебестоимостьТоваров, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыОрганизаций, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыОрганизацийКПередаче, Значение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.РезервыТоваровОрганизаций, Значение);
	
	РасчетСебестоимостиЛокализация.ВходящиеДанныеМеханизма(ВходящиеДанные, ТолькоТребующиеПерерасчета);
	
	Возврат ВходящиеДанные;
	
КонецФункции

// Возвращает перечень регистров, обслуживаемых механизмом расчета себестоимости.
//
// Возвращаемое значение:
//	Соответствие - Ключ - ОбъектМетаданных
//
Функция ИсходящиеДанныеМеханизма(ИсходящиеДанные = Неопределено) Экспорт
	
	// Перечень метаданных регистров, по которым формируются движения при расчете себестоимости.
	Если ИсходящиеДанные = Неопределено Тогда
		ИсходящиеДанные = Новый Соответствие;
	КонецЕсли;
	
	ИсходящиеДанные.Вставить(Метаданные.РегистрыСведений.СтоимостьТоваров, 							Истина);
	
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж, 			Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.СебестоимостьТоваров, 					Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.Закупки, 								Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы, Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы, 		Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура, 		Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеДоходы, 							Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы, 							Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы, 					Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДвиженияПоПрочимАктивамПассивам, 		Истина);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ФинансовыеРезультаты, 					Истина);
	
	РасчетСебестоимостиЛокализация.ИсходящиеДанныеМеханизмаНДД(ИсходящиеДанные);
	
	Возврат ИсходящиеДанные;
	
КонецФункции

// Возвращает перечень регистров, рассчитываемых механизмом партионного учета версии 2.2, и используемых при расчете себестоимости.
//
// Возвращаемое значение:
//	Соответствие - имена регистров, рассчитываемых механизмом партионного учета версии 2.2, и используемых при расчете себестоимости.
// 
Функция ИспользуемыеКэшиРегистровПартионногоУчета() Экспорт
	
	// Здесь перечислены регистры, которые (по И)
	// - рассчитываются механизмом партионного учета версии 2.2
	// - не рассчитываются механизмом расчета себестоимости
	// - являются входящими данными для механизма расчета себестоимости (используются кэши данных регистров)
	//
	// В случае, если выполняется отдельный запуск расчета себестоимости (не из партионного учета версии 2.2),
	// эти регистры не будут инициализированы - к их кэшам обращаться нельзя.
	//
	// Для этого делается следующее:
	// - перед началом расчета себестоимости "принудительно" инициализируются эти регистры (для того, чтобы сформировались их расчетные кэши)
	// - перед записью движений эти регистры удаляются из параметров расчета (записывать их не надо - движения по ним не формировались)
	
	ВходящиеДанные = Новый Соответствие;
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПрочихРасходов, 			  	  Истина);
	
	РасчетСебестоимостиЛокализация.ИспользуемыеКэшиРегистровПартионногоУчета(ВходящиеДанные);
	
	Возврат ВходящиеДанные;
	
КонецФункции

// Возвращает название данного механизма и его номер версии.
//
// Возвращаемое значение:
//	Строка - версия механизма
//
Функция ТекущаяВерсияМеханизма() Экспорт
	Возврат НСтр("ru = 'Расчет себестоимости, версия 2.2'", ОбщегоНазначения.КодОсновногоЯзыка());
КонецФункции

#КонецОбласти

#КонецОбласти
