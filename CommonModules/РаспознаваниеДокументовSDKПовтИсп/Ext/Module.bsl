#Область СлужебныйПрограммныйИнтерфейс

#Область Переопределяемый

Функция ИдентификаторКлиента() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ПараметрыАвторизации = РаспознаваниеДокументов.ТекущиеПараметрыАвторизации();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ПараметрыАвторизации.ТокенДоступа;
	
КонецФункции

#КонецОбласти

#Область Структуры

Функция СтатусыДокумента() Экспорт
	
	Результат = Новый Структура;
	Для Каждого Описание Из СоответствиеСтатусовДокументов() Цикл
		Результат.Вставить(Описание.Значение, Описание.Значение);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ТипыДокумента() Экспорт
	
	Результат = Новый Структура;
	Для Каждого Описание Из СоответствиеТиповДокументов() Цикл
		Результат.Вставить(Описание.Значение, Описание.Значение);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция КлассыДокумента() Экспорт
	
	Результат = Новый Структура;
	Для Каждого Описание Из СоответствиеКлассовДокументов() Цикл
		Результат.Вставить(Описание.Значение, Описание.Значение);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ТипыСущностей() Экспорт
	
	Результат = Новый Структура;
	Для Каждого Описание Из СоответствиеТиповСущностей() Цикл
		Результат.Вставить(Описание.Значение, Описание.Значение);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция КлассыСущностей() Экспорт
	
	Результат = Новый Структура;
	Для Каждого Описание Из СоответствиеКласовСущностей() Цикл
		Результат.Вставить(Описание.Значение, Описание.Значение);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция СвойстваСущностей() Экспорт
	
	Результат = Новый Структура;
	Для Каждого Описание Из СоответствиеСвойствСущностей() Цикл
		Результат.Вставить(Описание.Значение, Описание.Значение);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПодвалыТаблицы() Экспорт
	
	Результат = Новый Структура;
	Для Каждого Описание Из СоответствиеПодваловТаблиц() Цикл
		Результат.Вставить(Описание.Значение, Описание.Значение);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СоответствияДляСтруктур

Функция ТекстОшибкиПоКоду(КодОшибки) Экспорт
	
	Если КодОшибки = Неопределено Тогда
		Возврат ""; // Не ошибка
	КонецЕсли;
	
	Результат = СоответствиеКодовОшибокТексту()[КодОшибки];
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Результат = СтрШаблон(
			НСтр("ru = 'Произошла неизвестная ошибка. Код %1.'"),
			КодОшибки
		);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция СтатусДокумента(Ключ) Экспорт
	
	Результат = СоответствиеСтатусовДокументов()[Ключ];
	Возврат ВыбратьИз(Результат, Ключ);
	
КонецФункции

Функция ТипДокумента(Ключ) Экспорт
	
	Результат = СоответствиеТиповДокументов()[Ключ];
	Возврат ВыбратьИз(Результат, Ключ);
	
КонецФункции

Функция КлассДокумента(Ключ) Экспорт
	
	Результат = СоответствиеКлассовДокументов()[Ключ];
	Возврат ВыбратьИз(Результат, Ключ);
	
КонецФункции

Функция ТипСущности(Ключ) Экспорт
	
	Результат = СоответствиеТиповСущностей()[Ключ];
	Возврат ВыбратьИз(Результат, Ключ);
	
КонецФункции

Функция КлассСущности(Ключ) Экспорт
	
	Результат = СоответствиеКласовСущностей()[Ключ];
	Возврат ВыбратьИз(Результат, Ключ);
	
КонецФункции

Функция СвойствоСущности(Ключ) Экспорт
	
	Результат = СоответствиеСвойствСущностей()[Ключ];
	Возврат ВыбратьИз(Результат, Ключ);
	
КонецФункции

Функция ПодвалТаблицы(Ключ) Экспорт
	
	Результат = СоответствиеПодваловТаблиц()[Ключ];
	Возврат ВыбратьИз(Результат, Ключ);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Словари

Функция ВыбратьИз(Знач Результат, Знач Ключ)
	
	Если Не ЗначениеЗаполнено(Ключ) Тогда
		Ключ = "НеЗаполнено";
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Результат) Тогда
		Результат = "Неопределено_" + Ключ;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция СоответствиеКодовОшибокТексту()
	
	Результат = Новый Соответствие;
	Результат.Вставить(
		9,
		НСтр("ru = 'Не поддерживаемый формат файла или поврежденное изображение.
		         |Поддерживаются: tif, jpeg, png, bmp, zip, rar, 7z, pdf, xls. xlsx.'")
	);
	Результат.Вставить(
		10,
		НСтр("ru = 'Не удалось выполнить распознавание документа.'")
	);
	Результат.Вставить(
		11,
		НСтр("ru = 'Не удалось определить тип распознаваемого документа.'")
	);
	Результат.Вставить(
		12,
		НСтр("ru = 'Качество изображения слишком низкое.'")
	);
	Результат.Вставить(
		13,
		НСтр("ru = 'Качество изображения слишком низкое или изображение не является документом.'")
	);
	Результат.Вставить(
		20,
		НСтр("ru = 'Ошибка многостраничного документа:
		         |Не удалось определить порядок страниц.'")
	);
	Результат.Вставить(
		21,
		НСтр("ru = 'Ошибка многостраничного документа:
		         |Верхний колонтитул не обнаружен.'")
	);
	Результат.Вставить(
		22,
		НСтр("ru = 'Ошибка многостраничного документа:
		         |Нижний колонтитул не обнаружен.'")
	);
	Результат.Вставить(
		23,
		НСтр("ru = 'Ошибка многостраничного документа:
		         |Страница не принадлежит ни одному из найденных документов.'")
	);
	Результат.Вставить(
		50,
		НСтр("ru = 'Не удалось сформировать json.'")
	);
	Результат.Вставить(
		60,
		НСтр("ru = 'Ошибка нетипового документа:
		         |Не удалось обработать как нетипивой документ.'")
	);
	Результат.Вставить(
		61,
		НСтр("ru = 'Ошибка нетипового документа:
		         |Не удалось определить тип распознаваемого документа.'")
	);
	Результат.Вставить(
		62,
		НСтр("ru = 'Ошибка нетипового документа:
		         |Ошибка анализа документа.'")
	);
	Результат.Вставить(
		63,
		НСтр("ru = 'Ошибка нетипового документа:
		         |Обработка нетипового документа без правильной нетиповой конфигурации не удалась.'")
	);
	Результат.Вставить(
		71,
		НСтр("ru = 'Недостаточно средств для выполнения распознавания.
		         |Зайдите в свой аккаунт на Портале 1С:ИТС и пополните баланс.'")
	);
	
	Возврат Результат;
	
КонецФункции

Функция СоответствиеСтатусовДокументов()
	
	Результат = Новый Соответствие;
	Результат.Вставить("error", "Ошибка");
	Результат.Вставить("finished", "Завершено");
	
	Возврат Результат;
	
КонецФункции

Функция СоответствиеТиповДокументов()
	
	Результат = Новый Соответствие;
	Результат.Вставить("kv", "УниверсальныйФормат");
	
	Возврат Результат;
	
КонецФункции

Функция СоответствиеКлассовДокументов()
	
	Результат = Новый Соответствие;
	Результат.Вставить("sys_sf", "СчетФактура");
	Результат.Вставить("receipt", "КассовыйЧек");
	Результат.Вставить("undefined", "НеопознанныйДокумент");
	
	Возврат Результат;
	
КонецФункции

Функция СоответствиеТиповСущностей()
	
	Результат = Новый Соответствие;
	Результат.Вставить("complex",    "Составной");
	Результат.Вставить("identifier", "Идентификатор");
	Результат.Вставить("text",       "Текст");
	Результат.Вставить("numeric",    "Число");
	Результат.Вставить("date",       "Дата");
	Результат.Вставить("table",      "Таблица");
	
	Возврат Результат;
	
КонецФункции

Функция СоответствиеКласовСущностей()
	
	Результат = Новый Соответствие;
	
	Результат.Вставить("$date", "Дата");
	
	Результат.Вставить("$document_title", "ЗаголовокДокумента");
	Результат.Вставить("$base_document", "ДокументОснование");
	Результат.Вставить("$document_date", "ДатаДокумента");
	Результат.Вставить("$document_number", "НомерДокумента");
	Результат.Вставить("$document_name", "НаименованиеДокумента");
	Результат.Вставить("$currency", "Валюта");
	Результат.Вставить("$total", "СуммаДокумента");
	Результат.Вставить("$vat_amount", "СуммаНДС");
	
	Результат.Вставить("$supplier", "Поставщик");
	Результат.Вставить("$customer", "Покупатель");
	Результат.Вставить("$payer", "Плательщик");
	Результат.Вставить("$shipper", "Грузоотправитель");
	Результат.Вставить("$consignee", "Грузополучатель");
	Результат.Вставить("$transport_company", "ТранспортнаяКомпания");
	
	Результат.Вставить("$address", "Адрес");
	Результат.Вставить("$tel", "Телефон");
	Результат.Вставить("$email", "ЭлектроннаяПочта");
	
	Результат.Вставить("$company", "Компания");
	Результат.Вставить("$company_name", "НаименованиеКомпании");
	Результат.Вставить("$company_tin", "ИННКомпании");
	Результат.Вставить("$company_rckpp", "КППКомпании");
	
	Результат.Вставить("$bank_account", "БанковскийСчет");
	Результат.Вставить("$bank_name", "НаименованиеБанка");
	Результат.Вставить("$bank_rcbic", "БИКБанка");
	Результат.Вставить("$bank_account_number", "НомерБанковсковскогоСчета");
	Результат.Вставить("$bank_correspondent_account_number", "НомерБанковскогоСчетаКорреспондента");
	
	Результат.Вставить("$product_table", "ТаблицаНоменклатур");
	
	Результат.Вставить("$product_id", "АртикулНоменклатуры");
	Результат.Вставить("$product_code", "КодНоменклатуры");
	Результат.Вставить("$product_description", "НаименованиеНоменклатуры");
	
	Результат.Вставить("$price", "Цена");
	Результат.Вставить("$quantity", "Количество");
	Результат.Вставить("$vat_amount", "СуммаНДС");
	Результат.Вставить("$vat_rate", "СтавкаНДС");
	Результат.Вставить("$vat_type", "СтавкаНДСТип");
	Результат.Вставить("$total", "Сумма");
	Результат.Вставить("$total_excluding_vat", "СуммаБезНДС");
	Результат.Вставить("$total_including_vat", "СуммаСНДС");
	Результат.Вставить("$discount", "Скидка");
	
	Результат.Вставить("$base_unit_description", "НаменованиеЕдиницыИзмерения");
	Результат.Вставить("$base_unit_code", "КодЕдиницыИзмерения");
	
	Результат.Вставить("$country_of_origin_code", "КодСтраныПроисхождения");
	Результат.Вставить("$country_of_origin_description", "НаименованиеСтраныПроисхождения");
	Результат.Вставить("$customs_declaration_number", "НомерГТД");
	
	Результат.Вставить("$settlement_attribute", "ТипОперацииЧек");
	
	Возврат Результат;
	
КонецФункции

Функция СоответствиеСвойствСущностей()
	
	Результат = Новый Соответствие;
	
	Результат.Вставить("company", "Компания");
	Результат.Вставить("date", "Дата");
	Результат.Вставить("number", "Номер");
	Результат.Вставить("name", "Наименование");
	Результат.Вставить("address", "Адрес");
	Результат.Вставить("tel", "Телефон");
	Результат.Вставить("email", "ЭлектроннаяПочта");
	Результат.Вставить("tin", "ИНН");
	Результат.Вставить("rckpp", "КПП");
	Результат.Вставить("bank_account", "БанковскийСчет");
	Результат.Вставить("bank", "НаименованиеБанка");
	Результат.Вставить("rcbic", "БИК");
	Результат.Вставить("account_number", "НомерСчета");
	Результат.Вставить("correspondent_account_number ", "НомерСчетаКорреспондента");
	
	Возврат Результат;
	
КонецФункции

Функция СоответствиеПодваловТаблиц()
	
	Результат = Новый Соответствие;
	
	Результат.Вставить("$footer_total", "ПодвалИтого"); // Содержит "Итого"
	Результат.Вставить("$footer_final_total", "ПодвалВсего"); // Содержит "Всего по документу"
	Результат.Вставить("$footer_vat_in_total", "ПодвалВТомЧислеНДС"); // Содержит "В том числе НДС""
	Результат.Вставить("$footer_vat_above_total", "ПодвалСуммаНДС"); // Содержит "Сумма НДС"
	Результат.Вставить("$footer_vat_zero", "ПодвалБезНалога"); // Содержит "Без налога"
	Результат.Вставить("$footer_discount", "ПодвалСкидка"); // Содержит "Скидка"
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти