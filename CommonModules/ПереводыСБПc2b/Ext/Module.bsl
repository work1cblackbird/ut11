///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Подсистема "ИнтернетПоддержкаПользователей.СистемаБыстрыхПлатежей.ПереводыСБПc2b".
// ОбщийМодуль.ПереводыСБПc2b.
//
// Серверные процедуры выполнения оплаты, возвратов и настройки операций c2b СБП:
//  - создание, проверка статуса и подтверждение заказов на оплату;
//  - возврат оплаты по оплаченным заказам на оплату, подтверждения возврата и проверка статуса возврата;
//  - определение настроек подключения к СБП;
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область НастройкиОпераций

// Определяет доступность использования функциональности выполнения операций
// на основании прав доступа пользователя.
//
// Возвращаемое значение:
//  Булево - если Истина, оплата в Системе быстрых платежей доступна.
//
Функция ПереводыСБПДоступны() Экспорт
	
	Возврат ПереводыСБПc2bПовтИсп.ПереводыСБПДоступны();
	
КонецФункции

// Определяет доступность использования функциональности чтения операций
// в на основании прав доступа пользователя.
//
// Возвращаемое значение:
//  Булево - если Истина, чтение операций доступно.
//
Функция ЧтениеПереводовСБПДоступно() Экспорт
	
	Возврат ПереводыСБПc2bПовтИсп.ЧтениеПереводовСБПДоступно();
	
КонецФункции

// Устарела. Следует использовать ПереводыСБПc2b.НастройкиВозвратаОплаты.
Функция УчастникиСБПДляВозврата() Экспорт
	
	Если Не ПереводыСБПДоступны() Тогда
		ВызватьИсключение НСтр("ru = 'Нарушение прав доступа. Пользователю запрещено выполнение операций в Системе быстрых платежей.
			|Обратитесь к администратору.'");
	КонецЕсли;
	
	Возврат СистемаБыстрыхПлатежейСлужебный.УчастникиСБПДляВозврата();
	
КонецФункции

// Определяет настройки подключения к СБП, по которым были выполнена операция в платежных системах.
// Метод следует использовать для отложенного получения статуса выполнения операции.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ оплаты или возврата,
//   по которому были выполнены операции в платежных системах;
//
// Возвращаемое значение:
//  Массив из СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//    настройки подключения, по которым были выполнены операции документа.
//
Функция НастройкиПодключенияОперации(ДокументОперации) Экспорт
	
	Если Не ПереводыСБПДоступны() Тогда
		ВызватьИсключение НСтр("ru = 'Нарушение прав доступа. Пользователю запрещено выполнение операций в Системе быстрых платежей.
			|Обратитесь к администратору.'");
	КонецЕсли;
	
	НастройкиПодключенияПрограммы = СистемаБыстрыхПлатежейСлужебный.НастройкиПодключенияПрограммы();
	ИспользоватьЧастичныеОплаты   = НастройкиПодключенияПрограммы.c2b.ИспользоватьЧастичныеОплаты;
	
	Если ИспользоватьЧастичныеОплаты
		И ТипЗнч(ДокументОперации) <> Тип("ДокументСсылка.ПлатежнаяСсылкаСБПc2b")Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПлатежнаяСсылкаСБПc2b.Ссылка КАК ДокументОпераций
		|ПОМЕСТИТЬ ВТ_ДокументыОпераций
		|ИЗ
		|	Документ.ПлатежнаяСсылкаСБПc2b КАК ПлатежнаяСсылкаСБПc2b
		|ГДЕ
		|	ПлатежнаяСсылкаСБПc2b.ОснованиеПлатежа = &ОснованиеПлатежа
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&ОснованиеПлатежа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИдентификаторыОперацийСБПc2b.НастройкаПодключения КАК Настройка
		|ИЗ
		|	ВТ_ДокументыОпераций КАК ВТ_ДокументыОпераций
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИдентификаторыОперацийСБПc2b КАК ИдентификаторыОперацийСБПc2b
		|		ПО ВТ_ДокументыОпераций.ДокументОпераций = ИдентификаторыОперацийСБПc2b.ДокументОперации";
		
		Запрос.УстановитьПараметр("ОснованиеПлатежа", ДокументОперации);
		
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ИдентификаторыОперацийСБПc2b.НастройкаПодключения КАК Настройка
		|ИЗ
		|	РегистрСведений.ИдентификаторыОперацийСБПc2b КАК ИдентификаторыОперацийСБПc2b
		|ГДЕ
		|	ИдентификаторыОперацийСБПc2b.ДокументОперации = &ДокументОперации";
		
		Запрос.УстановитьПараметр("ДокументОперации", ДокументОперации);
		
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Настройки = Новый Массив;
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Настройки.Добавить(ВыборкаДетальныеЗаписи.Настройка);
	КонецЦикла;
	
	Возврат Настройки;
	
КонецФункции

// Определяет настройки возврата оплаты покупателю по ранее созданному заказу на оплату.
//
// Параметры:
//  ОбъектОплаты - ОпределяемыйТип.ДокументОперацииСБП, Строка - документ продажи или идентификатор документа
//    оплаты в Системе быстрых платежей. Идентификатор оплаты может передаваться, если в информационной
//    базе отсутствует исходный документ оплаты. Для генерации QR-кода идентификатора оплаты,
//    необходимо использовать функцию  ПереводыСБПc2b.ИдентификаторыОперацииОплаты;
//  НастройкаПодключения - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//    настройка выполнения операции.
//
// Возвращаемое значение:
//  Структура - настройки для возврата оплаты покупателю:
//    * УчастникСБПВозврата - Булево - признак доступности возврата оплаты
//      на счет отличный от счета оплаты.
//    * УчастникиСБПДляВозврата - Соответствие - список участников, в которые возможно вернуть денежные средства
//      в рамках возврата.Заполняется только в случаях когда УчастникСБПВозврата имеет значение Истина:
//      ** Ключ - Строка - идентификатор участника СБП, который необходимо передать в метод ПереводыСБПc2b.ВозвратОплаты
//         при выполнении возврата;
//      **Значение - Строка - наименование участника СБП для отображения в пользовательских интерфейсах.
//
Функция НастройкиВозвратаОплаты(ОбъектОплаты, НастройкаПодключения) Экспорт
	
	Если Не ПереводыСБПДоступны() Тогда
		ВызватьИсключение НСтр("ru = 'Нарушение прав доступа. Пользователю запрещено выполнение операций в Системе быстрых платежей.
			|Обратитесь к администратору.'");
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("УчастникСБПВозврата", Ложь);
	Результат.Вставить("УчастникиСБПДляВозврата", Новый Соответствие);
	
	Если Метаданные.ОпределяемыеТипы.ДокументОперацииСБП.Тип.СодержитТип(ТипЗнч(ОбъектОплаты)) Тогда
		
		ИдентификаторУчастника = РегистрыСведений.ИдентификаторыОперацийСБПc2b.ИдентификаторУчастника(
			ОбъектОплаты);
		
	ИначеЕсли ТипЗнч(ОбъектОплаты) = Тип("Строка") Тогда
		
		// Переданный идентификатор должен соответствовать формату:
		// {Идентификатор системы}:{Идентификатор СПБ}:{Идентификатор операции}
		ДанныеСтроки = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
			ОбъектОплаты,
			":");
		
		Сч = 0;
		Пока Сч < ДанныеСтроки.Количество() Цикл
			ДанныеСтроки[Сч] = СокрЛП(ДанныеСтроки[Сч]);
			Сч = Сч + 1;
		КонецЦикла;
		
		РезультатОперации = СистемаБыстрыхПлатежейСлужебный.НовыйРезультатДлительнойОперации();
		СервисПереводыСБПc2b.ПроверитьИдентификаторОбъектаОплаты(ДанныеСтроки, РезультатОперации);
		
		Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
			ВызватьИсключение РезультатОперации.СообщениеОбОшибке;
		КонецЕсли;
		
		ИдентификаторыОперации = Новый Структура;
		ИдентификаторыОперации.Вставить("ИдентификаторОплаты", ДанныеСтроки[1]);
		ИдентификаторыОперации.Вставить("ИдентификаторОперации", ДанныеСтроки[2]);
		
		ИдентификаторУчастника
			= РегистрыСведений.ИдентификаторыОперацийСБПc2b.ИдентификаторУчастникаПоИдентификаторамОперации(
				ИдентификаторыОперации);
		
		Если ИдентификаторУчастника = Неопределено Тогда
			НастройкиПодключения = СистемаБыстрыхПлатежейСлужебный.НастройкиПодключения(НастройкаПодключения);
			ИдентификаторУчастника = НастройкиПодключения.ИдентификаторУчастника;
		КонецЕсли;
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Возврат для продажи не поддерживается.'");
	КонецЕсли;
	
	Если ИдентификаторУчастника = Неопределено Тогда
		ИдентификаторУчастника = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			НастройкаПодключения,
			"ИдентификаторУчастника");
	КонецЕсли;
	
	Если ИдентификаторУчастника = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Идентификатор участника по данным оплаты не найден.'");
	КонецЕсли;
	
	Результат = СистемаБыстрыхПлатежейСлужебный.НастройкиВозвратаОплаты(
		ИдентификаторУчастника);
	
	Если Результат = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Настройки возврата по идентификатору участника не найдены.'");
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ДинамическиеСсылки

// Создает новый заказ на оплату и получает
// идентификатор оплаты для формирования QR-кода.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ, который отражает
//    оплату в информационной базе;
//  НастройкаПодключения - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//    настройка выполнения операции.
//  ДополнительныеПараметры - Структура, Неопределено - дополнительные настройки формирования
//    заказа на оплату.
//
// Возвращаемое значение:
//  Структура - результат создания динамической ссылки в Системе быстрых платежей:
//    * ПлатежнаяСсылка - Строка - идентификатор, по которому выполняется оплата;
//    * СуммаОплаты - Число - сумма оплаты, на которую была сформирована ссылка;
//    * КодОшибки - Строка - строковый код возникшей ошибки, который
//      может быть обработан вызывающим методом:
//        - <Пустая строка> - создание нового заказа выполнено успешно;
//        - "НеверныйФорматЗапроса" - передан некорректный запрос или настройка подключения;
//        - "УжеОплачен" - документ уже оплачен;
//        - "НеверныйЛогинИлиПароль" - неверный логин или пароль или параметры
//          подключения к участнику СБП;
//        - "ТребуетсяОплата" - требуется оплата сервиса;
//        - "ОтсутствуетДоступКСервису" - у пользователя нет доступа к сервису;
//        - "ПревышеноКоличествоПопыток" - превышено количество попыток
//          обращения к сервису с некорректным логином и паролем;
//        - "ОшибкаПодключения" - ошибка при подключении к сервису;
//        - "ОшибкаСервиса" - внутренняя ошибка сервиса;
//        - "НеизвестнаяОшибка" - при получении информации возникла
//          неизвестная (не обрабатываемая) ошибка;
//        - "СервисВременноНеДоступен" - на сервере ведутся регламентные работы;
//        - "ИнтеграцияНеИспользуется" - использование отключено в настройках;
//    * СообщениеОбОшибке  - Строка, ФорматированнаяСтрока - сообщение об ошибке для пользователя;
//    * ИнформацияОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для администратора.
//
Функция ДинамическаяСсылка(
		ДокументОперации,
		НастройкаПодключения,
		ДополнительныеПараметры = Неопределено) Экспорт
	
	Результат = ПереводыСБПc2bСлужебный.СлужебныйДинамическаяСсылка(
		ДокументОперации,
		НастройкаПодключения,
		ДополнительныеПараметры);
	
	Результат.Удалить("ПлатежнаяСсылкаСБПc2b");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область КассовыеСсылки

// Регистрирует новую кассовую ссылку и получает
// идентификатор оплаты для формирования QR-кода.
//
// Параметры:
//  НастройкаПодключения - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//    настройка выполнения оплаты.
//
// Возвращаемое значение:
//  Структура - результат создания кассовый ссылки в Системе быстрых платежей:
//    * КассоваяСсылка - Строка - ссылка, по которой будет выполнятся оплата;
//    * ИдентификаторОплаты - Строка - идентификатор зарегистрированной ссылки;
//    * КодОшибки - Строка - строковый код возникшей ошибки, который
//      может быть обработан вызывающим методом:
//        - <Пустая строка> - создание новой ссылки выполнено успешно;
//        - "НеверныйФорматЗапроса" - передан некорректный запрос или настройка подключения;
//        - "НеверныйЛогинИлиПароль" - неверный логин или пароль или параметры
//          подключения к Системе быстрых платежей;
//        - "ТребуетсяОплата" - требуется оплата сервиса;
//        - "ОтсутствуетДоступКСервису" - у пользователя нет доступа к сервису;
//        - "ПревышеноКоличествоПопыток" - превышено количество попыток
//          обращения к сервису с некорректным логином и паролем;
//        - "ОшибкаПодключения" - ошибка при подключении к сервису;
//        - "ОшибкаСервиса" - внутренняя ошибка сервиса;
//        - "НеизвестнаяОшибка" - при получении информации возникла
//          неизвестная (не обрабатываемая) ошибка;
//        - "СервисВременноНеДоступен" - на сервере ведутся регламентные работы;
//        - "ИнтеграцияНеИспользуется" - использование отключено в настройках;
//    * СообщениеОбОшибке  - Строка, ФорматированнаяСтрока - сообщение об ошибке для пользователя;
//    * ИнформацияОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для администратора.
//
Функция КассоваяСсылка(НастройкаПодключения) Экспорт
	
	Возврат ПереводыСБПc2bСлужебный.СлужебныйКассоваяСсылка(
		НастройкаПодключения,
		Неопределено);
	
КонецФункции

// Создает новый заказ на оплату для ранее созданной кассовой ссылки.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ, который отражает
//    оплату в информационной базе;
//  ДанныеСсылки - Структура - данные кассовой ссылки:
//    * КассоваяСсылка - Строка - ссылка, по которой будет выполнятся оплата;
//    * ИдентификаторОплаты - Строка - идентификатор зарегистрированной ссылки;
//  НастройкаПодключения - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//    настройка выполнения оплаты;
//  ДополнительныеПараметры - Структура, Неопределено - дополнительные настройки формирования
//    заказа на оплату.
//
// Возвращаемое значение:
//  Структура - результат создания активации кассовой ссылки в Системе быстрых платежей:
//    * КодОшибки - Строка - строковый код возникшей ошибки, который
//      может быть обработан вызывающим методом:
//        - <Пустая строка> - создание нового заказа выполнено успешно;
//        - "НеверныйФорматЗапроса" - передан некорректный запрос или настройка подключения;
//        - "УжеОплачен" - документ уже оплачен;
//        - "НеверныйЛогинИлиПароль" - неверный логин или пароль или параметры
//          подключения к Системе быстрых платежей;
//        - "ТребуетсяОплата" - требуется оплата сервиса;
//        - "ОтсутствуетДоступКСервису" - у пользователя нет доступа к сервису;
//        - "ПревышеноКоличествоПопыток" - превышено количество попыток
//          обращения к сервису с некорректным логином и паролем;
//        - "ОшибкаПодключения" - ошибка при подключении к сервису;
//        - "ОшибкаСервиса" - внутренняя ошибка сервиса;
//        - "НеизвестнаяОшибка" - при получении информации возникла
//          неизвестная (не обрабатываемая) ошибка;
//        - "СервисВременноНеДоступен" - на сервере ведутся регламентные работы;
//        - "ИнтеграцияНеИспользуется" - использование отключено в настройках;
//    * СообщениеОбОшибке  - Строка, ФорматированнаяСтрока - сообщение об ошибке для пользователя;
//    * ИнформацияОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для администратора.
//
Функция АктивироватьКассовуюСсылку(
		ДокументОперации,
		ДанныеСсылки,
		НастройкаПодключения,
		ДополнительныеПараметры = Неопределено) Экспорт
	
	ПереводыСБПc2bСлужебный.ПроверитьПраваНаВыполнениеОперации();
	
	РезультатОперации = СистемаБыстрыхПлатежейСлужебный.НовыйРезультатОперации();
	
	// Подготовка параметров настройки подключения.
	ПараметрыНастройкиПодключения = СистемаБыстрыхПлатежейСлужебный.ПараметрыНастройкиПодключения(
		НастройкаПодключения);
	
	// Проверка общих параметров подключения.
	ПереводыСБПc2bСлужебный.ПроверитьОбщиеНастройкиПодключения(
		ДокументОперации,
		НастройкаПодключения,
		ПараметрыНастройкиПодключения,
		РезультатОперации);
	
	Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
		Возврат РезультатОперации;
	КонецЕсли;
	
	// Создание нового заказа на оплату.
	Возврат СервисПереводыСБПc2b.АктивироватьКассовуюСсылку(
		ДокументОперации,
		ДанныеСсылки,
		ПараметрыНастройкиПодключения,
		ДополнительныеПараметры);
	
КонецФункции

// Удаляет активный заказ для кассовой ссылки в Системе быстрых платежей.
//
// Параметры:
//  ДанныеСсылки - Структура - данные кассовой ссылки:
//    * КассоваяСсылка - Строка - ссылка, по которой будет выполнятся оплата;
//    * ИдентификаторОплаты - Строка - идентификатор зарегистрированной ссылки;
//  НастройкаПодключения - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//    настройка выполнения оплаты.
//
// Возвращаемое значение:
//  Структура - результат создания заказа на оплату в Системе быстрых платежей:
//    * КодОшибки - Строка - строковый код возникшей ошибки, который
//      может быть обработан вызывающим методом:
//        - <Пустая строка> - создание нового заказа выполнено успешно;
//        - "НеверныйФорматЗапроса" - передан некорректный запрос или настройка подключения;
//        - "НеверныйЛогинИлиПароль" - неверный логин или пароль или параметры
//          подключения к Системе быстрых платежей;
//        - "ТребуетсяОплата" - требуется оплата сервиса;
//        - "ОтсутствуетДоступКСервису" - у пользователя нет доступа к сервису;
//        - "ПревышеноКоличествоПопыток" - превышено количество попыток
//          обращения к сервису с некорректным логином и паролем;
//        - "ОшибкаПодключения" - ошибка при подключении к сервису;
//        - "ОшибкаСервиса" - внутренняя ошибка сервиса;
//        - "НеизвестнаяОшибка" - при получении информации возникла
//          неизвестная (не обрабатываемая) ошибка;
//        - "СервисВременноНеДоступен" - на сервере ведутся регламентные работы;
//        - "ИнтеграцияНеИспользуется" - использование отключено в настройках;
//    * СообщениеОбОшибке  - Строка, ФорматированнаяСтрока - сообщение об ошибке для пользователя;
//    * ИнформацияОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для администратора.
//
Функция ДеактивироватьКассовуюСсылку(
		ДанныеСсылки,
		НастройкаПодключения) Экспорт
	
	ПереводыСБПc2bСлужебный.ПроверитьПраваНаВыполнениеОперации();
	
	РезультатОперации = СистемаБыстрыхПлатежейСлужебный.НовыйРезультатОперации();
	
	// Подготовка параметров настройки подключения.
	ПараметрыНастройкиПодключения = СистемаБыстрыхПлатежейСлужебный.ПараметрыНастройкиПодключения(
		НастройкаПодключения);
	
	// Проверка общих параметров подключения.
	ПереводыСБПc2bСлужебный.ПроверитьОбщиеНастройкиПодключенияБезДокументаОперации(
		НастройкаПодключения,
		ПараметрыНастройкиПодключения,
		РезультатОперации);
	
	Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
		Возврат РезультатОперации;
	КонецЕсли;
	
	// Создание новой кассовой ссылки.
	Возврат СервисПереводыСБПc2b.ДеактивироватьКассовуюСсылку(
		ПараметрыНастройкиПодключения,
		ДанныеСсылки);
	
КонецФункции

// Формирует табличный документ с данными кассовой ссылки.
//
// Параметры:
//  ДанныеСсылки - Структура - данные кассовой ссылки:
//    * КассоваяСсылка - Строка - ссылка, по которой будет выполнятся оплата;
//    * ИдентификаторОплаты - Строка - идентификатор зарегистрированной ссылки;
//  ПараметрыПечати - Структура - настройки печати:
//    * ТипПечати - Число - формат печати;
//        Допустимые значения :
//          "1" - для кассовой ссылки будет сформирован макет формата А5 широкий;
//          "2" - для кассовой ссылки будет сформирован макет формата А5 только логотипы;
//          "3" - для кассовой ссылки будет сформирован макет формата А5 узкий;
//          "4" - для кассовой ссылки будет сформирован макет формата А5 узкий горизонтальный;
//          "5" - для кассовой ссылки будет сформирован макет формата А6 квадратный;
//          "6" - для кассовой ссылки будет сформирован макет формата А6 круглый.
//
// Возвращаемое значение:
//  ТабличныйДокумент - подготовленный для печати документ.
//
Функция КарточкаКассовойСсылки(
		ДанныеСсылки,
		ПараметрыПечати) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Если ПустаяСтрока(ДанныеСсылки.КассоваяСсылка) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не заполнены данные кассовой ссылки.'"));
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	Если ПараметрыПечати.ТипПечати = 1 Тогда
		Макет = ПереводыСБПc2bСлужебный.ПолучитьМакетСБП("CashLinkWide");
	ИначеЕсли ПараметрыПечати.ТипПечати = 2 Тогда
		Макет = ПереводыСБПc2bСлужебный.ПолучитьМакетСБП("CashLinkLogo");
	ИначеЕсли ПараметрыПечати.ТипПечати = 3 Тогда
		Макет = ПереводыСБПc2bСлужебный.ПолучитьМакетСБП("CashLinkNarrow");
	ИначеЕсли ПараметрыПечати.ТипПечати = 4 Тогда
		Макет = ПереводыСБПc2bСлужебный.ПолучитьМакетСБП("CashLinkNarrowHorizontal");
	ИначеЕсли ПараметрыПечати.ТипПечати = 5 Тогда
		Макет = ПереводыСБПc2bСлужебный.ПолучитьМакетСБП("CashLinkSquare");
	ИначеЕсли ПараметрыПечати.ТипПечати = 6 Тогда
		Макет = ПереводыСБПc2bСлужебный.ПолучитьМакетСБП("CashLinkCircle");
	Иначе
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	Если Макет.ВысотаТаблицы = 0 Тогда
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	ДанныеQRКода = СистемаБыстрыхПлатежей.ИзображениеQRКодаСБП(
		ДанныеСсылки.КассоваяСсылка,
		300);
	
	Макет.Рисунки.КассоваяСсылка.Картинка = Новый Картинка(ДанныеQRКода);
	
	ТабличныйДокумент.Вывести(Макет);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

#КонецОбласти

#Область ОперацииОплат

// Выполняет проверку статуса оплаты в Системе быстрых платежей по ранее
// сформированному идентификатору оплаты (QR-коду).
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ, который отражает
//    продажу в информационной базе;
//  НастройкаПодключения - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//    устарело. Не используется. Настройка выполнения операции.
//  ДлительныйВызов - Булево - если Истина, получение статуса оплаты будет выполнятся
//   в цикле. Длительность выполнения операции определяется на основании
//   данных константы ДлительностьОперацииСистемыБыстрыхПлатежей.
//
// Возвращаемое значение:
//  Структура - результат создания заказа на оплату в Системе быстрых платежей:
//    * СтатусОперации - Строка - текущее состояние операции оплаты. Для проверки статуса
//      операции, необходимо функции программного интерфейса общего модуля
//      СистемаБыстрыхПлатежейКлиентСервер. Возможные значения:
//        - "Выполняется" - подтверждение оплаты не получено;
//        - "Отменена" - оплата по ранее сформированному QR-коду невозможна;
//        - "Выполнена" - участник СБП подтвердил оплату;
//        - "Ошибка" - не удалось выполнить проверку оплаты из-за ошибки;
//    * ПараметрыОперации - Структура - дополнительные данные по оплате:
//        ** ДатаОперации - Дата - фактическая дата оплаты в UTC;
//        ** СуммаОперации - Число - фактическая суммы оплаты по документу;
//        ** ИдентификаторОперации - Строка - идентификатор выполненной операции;
//        ** ИдентификаторОплаты - Строка - идентификатор оплаты;
//    * КодОшибки - Строка - строковый код возникшей ошибки, который
//      может быть обработан вызывающим методом:
//        - <Пустая строка> - оплата успешно проведена;
//        - "НеверныйФорматЗапроса" - передан некорректный запрос или настройка подключения;
//        - "НеверныйЛогинИлиПароль" - неверный логин или пароль или параметры
//          подключения к Системе быстрых платежей;
//        - "ТребуетсяОплата" - требуется оплата сервиса;
//        - "ОтсутствуетДоступКСервису" - у пользователя нет доступа к сервису;
//        - "ПревышеноКоличествоПопыток" - превышено количество попыток
//        обращения к сервису с некорректным логином и паролем;
//        - "ОшибкаПодключения" - ошибка при подключении к сервису;
//        - "ОшибкаСервиса" - внутренняя ошибка сервиса;
//        - "НеизвестнаяОшибка" - при получении информации возникла
//          неизвестная (не обрабатываемая) ошибка;
//        - "СервисВременноНеДоступен" - на сервере ведутся регламентные работы;
//        - "ИнтеграцияНеИспользуется" - использование отключено в настройках;
//    * СообщениеОбОшибке  - Строка, ФорматированнаяСтрока - сообщение об ошибке для пользователя;
//    * ИнформацияОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для администратора.
//
Функция СтатусОплаты(
		ДокументОперации,
		НастройкаПодключения,
		ДлительныйВызов = Истина) Экспорт
	
	ПереводыСБПc2bСлужебный.ПроверитьПраваНаВыполнениеОперации();
	
	РезультатОперации = СистемаБыстрыхПлатежейСлужебный.НовыйРезультатДлительнойОперации();
	
	// Подготовка параметров настройки подключения.
	ПараметрыНастройкиПодключения = ПереводыСБПc2bСлужебный.ПараметрыНастройкиПодключенияПоДокументу(
		ДокументОперации);
	
	// Проверка общих параметров подключения.
	ПереводыСБПc2bСлужебный.ПроверитьОбщиеНастройкиПодключения(
		ДокументОперации,
		ПараметрыНастройкиПодключения.НастройкаПодключения,
		ПараметрыНастройкиПодключения,
		РезультатОперации);
	
	Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
		РезультатОперации.СтатусОперации = СистемаБыстрыхПлатежейКлиентСервер.СтатусОперацииОшибка();
		Возврат РезультатОперации;
	КонецЕсли;
	
	// Проверка статуса оплаты по ранее сформированному QR-коду.
	Возврат СервисПереводыСБПc2b.СтатусОплаты(
		ДокументОперации,
		ПараметрыНастройкиПодключения,
		ДлительныйВызов);
	
КонецФункции

#КонецОбласти

#Область ОперацииВозвратов

// Выполняет возврат оплаты покупателю по ранее созданному заказу на оплату.
//
// Параметры:
//  ДокументВозврата - ОпределяемыйТип.ДокументОперацииСБП -  документ, который отражает
//    операцию возврата в информационной базе;
//  ОбъектОплаты - ОпределяемыйТип.ДокументОперацииСБП, Строка - документ продажи или идентификатор документа
//    оплаты в Системе быстрых платежей. Идентификатор оплаты может передаваться, если в информационной
//    базе отсутствует исходный документ оплаты. Для генерации QR-кода идентификатора оплаты,
//    необходимо использовать функцию  ПереводыСБПc2b.ИдентификаторыОперацииОплаты;
//  НастройкаПодключения - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//    настройка выполнения операции.;
//  УчастникСБП - Строка, Неопределено - идентификатор участника для определения
//    расчетного счета возврата. Параметр следует передавать только в том случае,
//    если УчастникСБПВозврата имеет значение Истина, см. СистемаБыстрыхПлатежей.НастройкиПодключения;
//  ДополнительныеПараметры - Структура, Неопределено - дополнительные настройки формирования
//    заказа на возврат.
//
// Возвращаемое значение:
//  Структура - результат создания заказа на возврат в Системе быстрых платежей:
//    * СтатусОперации - Строка - Для проверки статуса
//      операции, необходимо функции программного интерфейса общего модуля
//      СистемаБыстрыхПлатежейКлиентСервер. Возможные значения:
//        - "Выполняется" - подтверждение возврата не получено. Для проверки
//          состояния возврата необходимо вызвать функцию ПереводыСБПc2b.СтатусВозврата;
//        - "ТребуетсяПодтверждение" - для завершения возврата необходимо проверить
//          реквизиты физического лица см. свойство Подтверждение и отправить запрос
//          с подтверждением в платежную систему
//          см. ПереводыСБПc2b.ПодтвердитьВозврат.
//          запрос на подтверждение необходимо отправить в течение 3-х минут после создания заказа
//          на возврат. По истечению 3-х минут заказ будет отменен автоматически;
//        - "Выполнена" - участник СБП подтвердил выполнение возврата;
//        - "Ошибка" - не удалось выполнить проверку оплаты из-за ошибки, необходимо
//          проанализировать код ошибки;
//    * ПараметрыОперации - Структура - дополнительные данные по оплате:
//        ** ДатаОперации - Дата - фактическая дата оплаты в UTC;
//        ** СуммаОперации - Число - фактическая суммы возврата по документу;
//        ** ИдентификаторОперации - Строка - идентификатор выполненной операции;
//        ** ИдентификаторОплаты - Строка - идентификатор оплаты;
//    * Подтверждение - Структура, Неопределено - данные для подтверждения возврата в Системе быстрых платежей:
//        ** ФИО - Строка - маскированное ФИО физического лица на расчетный счет, которого
//           переводятся денежные средства;
//        ** НомерСчета, Неопределено - Строка - маскированный номер счета, на который будут переведены денежные средства;
//        ** НомерТелефона, Неопределено - Строка - маскированный номер телефона, к которому привязан
//           расчетный счет в Системе быстрых платежей получателе платежа;
//    * КодОшибки - Строка - строковый код возникшей ошибки, который
//      может быть обработан вызывающим методом:
//        - <Пустая строка> - создание нового заказа выполнено успешно;
//        - "НеверныйФорматЗапроса" - передан некорректный запрос или настройка подключения;
//        - "НеверныйЛогинИлиПароль" - неверный логин или пароль или параметры
//          подключения к Системе быстрых платежей;
//        - "ВозвратУжеВыполнен" - возврат по документу продажи уже выполнен или сумма возврата
//          превышает предельно допустимую;
//        - "ТребуетсяОплата" - требуется оплата сервиса;
//        - "ОтсутствуетДоступКСервису" - у пользователя нет доступа к сервису;
//        - "ПревышеноКоличествоПопыток" - превышено количество попыток
//          обращения к сервису с некорректным логином и паролем;
//        - "ОшибкаПодключения" - ошибка при подключении к сервису;
//        - "ОшибкаСервиса" - внутренняя ошибка сервиса;
//        - "НеизвестнаяОшибка" - при получении информации возникла
//          неизвестная (не обрабатываемая) ошибка;
//        - "СервисВременноНеДоступен" - на сервере ведутся регламентные работы;
//        - "ИнтеграцияНеИспользуется" - использование отключено в настройках;
//    * СообщениеОбОшибке  - Строка, ФорматированнаяСтрока - сообщение об ошибке для пользователя;
//    * ИнформацияОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для администратора;
//
Функция ВозвратОплаты(
		ДокументВозврата,
		ОбъектОплаты,
		НастройкаПодключения,
		Знач УчастникСБП = Неопределено,
		ДополнительныеПараметры = Неопределено) Экспорт
	
	ПереводыСБПc2bСлужебный.ПроверитьПраваНаВыполнениеОперации();
	
	Если Не ЗначениеЗаполнено(УчастникСБП) Тогда
		УчастникСБП = Неопределено;
	КонецЕсли;
	
	РезультатОперации = СистемаБыстрыхПлатежейСлужебный.НовыйРезультатДлительнойОперации();
	РезультатОперации.Вставить("Подтверждение", Неопределено);
	
	// Подготовка параметров настройки подключения.
	ПараметрыНастройкиПодключения = СистемаБыстрыхПлатежейСлужебный.ПараметрыНастройкиПодключения(
		НастройкаПодключения);
	
	// Проверка общих параметров подключения.
	ПереводыСБПc2bСлужебный.ПроверитьОбщиеНастройкиПодключения(
		ДокументВозврата,
		НастройкаПодключения,
		ПараметрыНастройкиПодключения,
		РезультатОперации);
	
	Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
		Возврат РезультатОперации;
	КонецЕсли;
	
	Возврат СервисПереводыСБПc2b.ВозвратОплаты(
		ДокументВозврата,
		ОбъектОплаты,
		УчастникСБП,
		ПараметрыНастройкиПодключения,
		ДополнительныеПараметры);
	
КонецФункции

// Выполняет отправку запроса на подтверждение возврата оплаты в платежную систему
// по ранее сформированной оплате.
//
// Параметры:
//  ДокументВозврата - ОпределяемыйТип.ДокументОперацииСБП -  документ, который отражает
//    операцию возврата в информационной базе;
//  НастройкаПодключения - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//    устарело. Не используется. Настройка выполнения операции.
//
// Возвращаемое значение:
//  Структура - результат подтверждения возврата в Системе быстрых платежей:
//    * СтатусОперации - Строка - текущее состояние операции возврата. Для проверки статуса
//      операции, необходимо функции программного интерфейса общего модуля
//      СистемаБыстрыхПлатежейКлиентСервер. Возможные значения:
//        - "Выполняется" - подтверждение возврата не получено;
//        - "Отменена" - оплата по ранее сформированному QR-коду невозможна;
//        - "Выполнена" - участник СБП подтвердил оплату;
//        - "Ошибка" - не удалось выполнить проверку оплаты из-за ошибки.
//    * ПараметрыОперации - Структура - дополнительные данные по оплате:
//        ** ДатаОперации - Дата - фактическая дата оплаты в UTC;
//        ** СуммаОперации - Число - фактическая суммы возврата по документу;
//        ** ИдентификаторОперации - Строка - идентификатор выполненной операции;
//    * КодОшибки - Строка - строковый код возникшей ошибки, который
//      может быть обработан вызывающим методом:
//        - <Пустая строка> - создание нового заказа выполнено успешно;
//        - "НеверныйФорматЗапроса" - передан некорректный запрос или настройка подключения;
//        - "НеверныйЛогинИлиПароль" - неверный логин или пароль или параметры
//          подключения к Системе быстрых платежей;
//        - "ВозвратУжеВыполнен" - возврат по документу продажи уже выполнен или сумма возврата
//          превышает предельно допустимую;
//        - "ТребуетсяОплата" - требуется оплата сервиса;
//        - "ОтсутствуетДоступКСервису" - у пользователя нет доступа к сервису;
//        - "ПревышеноКоличествоПопыток" - превышено количество попыток
//          обращения к сервису с некорректным логином и паролем;
//        - "ОшибкаПодключения" - ошибка при подключении к сервису;
//        - "ОшибкаСервиса" - внутренняя ошибка сервиса;
//        - "НеизвестнаяОшибка" - при получении информации возникла
//          неизвестная (не обрабатываемая) ошибка;
//        - "СервисВременноНеДоступен" - на сервере ведутся регламентные работы;
//        - "ИнтеграцияНеИспользуется" - использование отключено в настройках;
//    * СообщениеОбОшибке  - Строка, ФорматированнаяСтрока - сообщение об ошибке для пользователя;
//    * ИнформацияОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для администратора.
//
Функция ПодтвердитьВозврат(ДокументВозврата, НастройкаПодключения = Неопределено) Экспорт
	
	ПереводыСБПc2bСлужебный.ПроверитьПраваНаВыполнениеОперации();
	
	РезультатОперации = СистемаБыстрыхПлатежейСлужебный.НовыйРезультатОперации();
	
	// Подготовка параметров настройки подключения.
	ПараметрыНастройкиПодключения = ПереводыСБПc2bСлужебный.ПараметрыНастройкиПодключенияПоДокументу(
		ДокументВозврата);
	
	// Проверка общих параметров подключения.
	ПереводыСБПc2bСлужебный.ПроверитьОбщиеНастройкиПодключения(
		ДокументВозврата,
		ПараметрыНастройкиПодключения.НастройкаПодключения,
		ПараметрыНастройкиПодключения,
		РезультатОперации);
	
	Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
		Возврат РезультатОперации;
	КонецЕсли;
	
	Возврат СервисПереводыСБПc2b.ПодтвердитьВозврат(
		ДокументВозврата,
		ПараметрыНастройкиПодключения);
	
КонецФункции

// Выполняет проверку статуса возврата в Системе быстрых платежей.
//
// Параметры:
//  ДокументВозврата - ОпределяемыйТип.ДокументОперацииСБП -  документ, который отражает
//    операцию возврата в информационной базе;
//  НастройкаПодключения - СправочникСсылка.НастройкиПодключенияКСистемеБыстрыхПлатежей -
//    устарело. Не используется. Настройка выполнения операции.
//  ДлительныйВызов - Булево - если Истина, получение статуса оплаты будет выполнятся
//    в цикле. Длительность выполнения операции определяется на основании
//    данных константы ДлительностьОперацииСистемыБыстрыхПлатежей.
//
// Возвращаемое значение:
//  Структура - результат проверки статуса оплаты:
//    * СтатусОперации - Строка - текущее состояние операции возврата. Для проверки статуса
//      операции, необходимо функции программного интерфейса общего модуля
//      СистемаБыстрыхПлатежейКлиентСервер. Возможные значения:
//        - "Выполняется" - подтверждение возврата не получено;
//        - "Отменена" - оплата по ранее сформированному QR-коду невозможна;
//        - "Выполнена" - участник СБП подтвердил оплату;
//        - "Ошибка" - не удалось выполнить проверку оплаты из-за ошибки.
//    * ПараметрыОперации - Структура - дополнительные данные по оплате:
//        ** ДатаОперации - Дата - фактическая дата оплаты в UTC;
//        ** СуммаОперации - Число - фактическая суммы возврата по документу;
//        ** ИдентификаторОперации - Строка - идентификатор выполненной операции;
//        ** ИдентификаторОплаты - Строка - идентификатор оплаты;
//    * КодОшибки - Строка - строковый код возникшей ошибки, который
//      может быть обработан вызывающим методом:
//        - <Пустая строка> - создание нового заказа выполнено успешно;
//        - "НеверныйФорматЗапроса" - передан некорректный запрос или настройка подключения;
//        - "НеверныйЛогинИлиПароль" - неверный логин или пароль или параметры
//          подключения к Системе быстрых платежей;
//        - "ВозвратУжеВыполнен" - возврат по документу продажи уже выполнен или сумма возврата
//          превышает предельно допустимую;
//        - "ТребуетсяОплата" - требуется оплата сервиса;
//        - "ОтсутствуетДоступКСервису" - у пользователя нет доступа к сервису;
//        - "ПревышеноКоличествоПопыток" - превышено количество попыток
//          обращения к сервису с некорректным логином и паролем;
//        - "ОшибкаПодключения" - ошибка при подключении к сервису;
//        - "ОшибкаСервиса" - внутренняя ошибка сервиса;
//        - "НеизвестнаяОшибка" - при получении информации возникла
//          неизвестная (не обрабатываемая) ошибка;
//        - "СервисВременноНеДоступен" - на сервере ведутся регламентные работы;
//        - "ИнтеграцияНеИспользуется" - использование отключено в настройках;
//    * СообщениеОбОшибке  - Строка, ФорматированнаяСтрока - сообщение об ошибке для пользователя;
//    * ИнформацияОбОшибке - Строка, ФорматированнаяСтрока - сообщение об ошибке для администратора.
//
Функция СтатусВозврата(ДокументВозврата, НастройкаПодключения, ДлительныйВызов = Истина) Экспорт
	
	ПереводыСБПc2bСлужебный.ПроверитьПраваНаВыполнениеОперации();
	
	РезультатОперации = СистемаБыстрыхПлатежейСлужебный.НовыйРезультатДлительнойОперации();
	
	ПараметрыОперации = Новый Структура;
	ПараметрыОперации.Вставить("ДатаОперации", Дата(1, 1, 1));
	ПараметрыОперации.Вставить("СуммаОперации", Неопределено);
	ПараметрыОперации.Вставить("ИдентификаторОперации", "");
	ПараметрыОперации.Вставить("ИдентификаторОплаты", "");
	
	РезультатОперации.Вставить("ПараметрыОперации", ПараметрыОперации);
	
	// Подготовка параметров настройки подключения.
	ПараметрыНастройкиПодключения = ПереводыСБПc2bСлужебный.ПараметрыНастройкиПодключенияПоДокументу(
		ДокументВозврата);
	
	// Проверка общих параметров подключения.
	ПереводыСБПc2bСлужебный.ПроверитьОбщиеНастройкиПодключения(
		ДокументВозврата,
		ПараметрыНастройкиПодключения.НастройкаПодключения,
		ПараметрыНастройкиПодключения,
		РезультатОперации);
	
	Если ЗначениеЗаполнено(РезультатОперации.КодОшибки) Тогда
		РезультатОперации.СтатусОперации = СистемаБыстрыхПлатежейКлиентСервер.СтатусОперацииОшибка();
		Возврат РезультатОперации;
	КонецЕсли;
	
	Возврат СервисПереводыСБПc2b.СтатусВозврата(
		ДокументВозврата,
		ПараметрыНастройкиПодключения,
		ДлительныйВызов);
	
КонецФункции

#КонецОбласти

#Область ДополнительныеМетоды

// Удаляет идентификатор операции из информационной базы.
// Процедуру необходимо использовать только в том случае, если при вызове
// методов оплаты в качестве документа оплаты была передана ссылка нового
// и после выполнения оплаты объект не был записан. Во всех остальных случаях
// вызов метода не рекомендуется.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ, который отражает
//    операцию в информационной базе.
//
Процедура УдалитьИдентификаторыОперации(ДокументОперации) Экспорт
	
	ПереводыСБПc2bСлужебный.ПроверитьПраваНаВыполнениеОперации();
	
	Идентификатор = РегистрыСведений.ИдентификаторыОперацийСБПc2b.ИдентификаторОперации(
		ДокументОперации);
	
	Если Идентификатор = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		
		Набор = РегистрыСведений.ИдентификаторыОперацийСБПc2b.СоздатьНаборЗаписей();
		Набор.Отбор.ДокументОперации.Установить(ДокументОперации);
		Набор.Записать();
		
		Набор = РегистрыСведений.ДанныеОперацийСБПc2b.СоздатьНаборЗаписей();
		Набор.Отбор.Идентификатор.Установить(Идентификатор);
		Набор.Записать();
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		СистемаБыстрыхПлатежейСлужебный.ЗаписатьИнформациюВЖурналРегистрации(
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),
			Истина);
		
		ВызватьИсключение НСтр("ru = 'Не удалось удалить данные операции СБП.'");
		
	КонецПопытки;
	
КонецПроцедуры

// Возвращает данные оплат по документу основанию платежа.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ операции;
//
// Возвращаемое значение:
//  Структура - данные оплат по документу в Системе быстрых платежей:
//    * ДокументОснование - ОпределяемыйТип.ДокументОперацииСБП - документ,
//      который отражает продажу в информационной базе;
//    * Сумма - Число - сумма выполненных оплат по документу;
//    * ДанныеОпераций - Массив Из Структура - содержит перечень данных оплат по документу основанию:
//        ** ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ операции в СБП
//        ** СуммаОперации - Число - Сумма оплаты в СБП
//        ** СтатусОперации - Строка - текущее состояние операции оплаты. Возможные значения:
//           - "Выполняется" - подтверждение оплаты не получено;
//           - "Отменена" - оплата по ранее сформированному QR-коду невозможна;
//           - "Выполнена" - участник СБП подтвердил оплату;
//           - "Отклонена" - оплата по ранее сформированному QR-коду невозможна;
//           - "Ошибка" - неизвестный статус операции.
//        ** ДатаОперации - Дата - фактическая дата оплаты в UTC;
//        ** ИдентификаторОперации - Строка - идентификатор выполненной операции;
//        ** ИдентификаторОплаты - Строка - идентификатор оплаты;
//        ** Оплата - Булево - если Истина, была выполнена оплата.
//
Функция ОперацииПоДокументу(ДокументОперации) Экспорт
	
	Возврат ПереводыСБПc2bСлужебный.ОперацииПоДокументу(ДокументОперации);
	
КонецФункции

// Выполняет загрузку статусов операций СБП, по которым было
// отложено получение результата.
//
// Возвращаемое значение:
//  Массив из ОпределяемыйТип.ДокументОперацииСБП - данные обработанных документов.
//
Функция СтатусыОпераций() Экспорт
	
	Возврат СервисПереводыСБПc2b.СтатусыОпераций();
	
КонецФункции

// Выполняет установку признака загрузки статуса регламентным заданием, если
// ранее под документу была сгенерирован идентификатор оплаты СБП. Установка
// признака доступна только для сформированных операций у которых текущий статус
// "Выполняется".
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ, который отражает
//    продажу в информационной базе;
//  Значение - Булево - если Истина, данные статуса будут загружены регламентным заданием.
//
// Возвращаемое значение:
//  Булево - Истина, если признак отложенной загрузки статуса установлен,
//   Ложь если операция не найдена.
//
Функция УстановитьОтложенноеПолучениеСтатуса(ДокументОперации, Значение) Экспорт
	
	ПереводыСБПc2bСлужебный.ПроверитьПраваНаВыполнениеОперации();
	
	Возврат РегистрыСведений.ИдентификаторыОперацийСБПc2b.УстановитьОтложенноеПолучениеСтатуса(
		ДокументОперации,
		Значение)
	
КонецФункции

// Формирование изображения QR-кода, в которое кодируются все необходимые идентификаторы
// платежных систем для выполнения возврата оплаты. QR-код рекомендуется размещать
// на фискальном или товарном чеке, чтобы в случае отсутствия первичного документа оплаты
// в информационной базе (например, при использовании РИБ) была возможность выполнить
// возврат оплаты.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ, который отражает
//    оплату в информационной базе;
//  Размер - Число - размер QR-кода в пикселях;
//
// Возвращаемое значение:
//  ДвоичныеДанные - данные изображения QR-кода.
//
Функция ИзображениеQRКодаВозврата(ДокументОперации, Размер) Экспорт
	
	ПереводыСБПc2bСлужебный.ПроверитьПраваНаВыполнениеОперации();
	
	Возврат СистемаБыстрыхПлатежей.ИзображениеQRКодаСБП(
		ИдентификаторыОперацииОплаты(ДокументОперации),
		Размер,
		3);
	
КонецФункции

#КонецОбласти

#Область ИдентификаторыОпераций

// Формирует строку, в которую добавляются все необходимые идентификаторы
// СБП для выполнения возврата оплаты по документу операции.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ, который отражает
//    оплату в информационной базе.
//
// Возвращаемое значение: 
//  Строка - набор идентификаторов операции оплаты, которые должны быть переданы при возврате.
//
Функция ИдентификаторыОперацииОплаты(ДокументОперации) Экспорт
	
	ПереводыСБПc2bСлужебный.ПроверитьПраваНаВыполнениеОперации();
	
	ИдентификаторыОплаты = РегистрыСведений.ИдентификаторыОперацийСБПc2b.ИдентификаторыОперацииСБП(
		ДокументОперации);
	
	Если ИдентификаторыОплаты = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Идентификатор оплаты не обнаружен.'");
	КонецЕсли;
	
	Возврат ИдентификаторыОперации(ИдентификаторыОплаты);
	
КонецФункции

// Формирует коллекцию, содержащую платежные ссылки по переданным документам операций.
//
// Параметры:
//  ДокументыОпераций - Массив Из ОпределяемыйТип.ДокументОперацииСБП - документы, которые отражают
//    оплату в информационной базе.
//  СтатусыОпераций - Массив Из Строка - допустимые статусы операций (фильтруют возвращаемую коллекцию),
//    Список статусов:
//      см. СистемаБыстрыхПлатежейКлиентСервер.СтатусОперацииВыполнена - операция успешно выполнена.
//      см. СистемаБыстрыхПлатежейКлиентСервер.СтатусОперацииВыполняется - операция выполняется.
//      см. СистемаБыстрыхПлатежейКлиентСервер.СтатусОперацииОтклонена - операция отклонена.
//
// Возвращаемое значение:
//  Соответствие - данные платежных ссылок по документам операций:
//    *Ключ - ОпределяемыйТип.ДокументОперацииСБП - документ, который отражает
//      оплату в информационной базе.
//    *Значение - Строка - платежная ссылка по документу операции.
//
Функция ПлатежныеСсылкиПоДокументамОпераций(
		ДокументыОпераций,
		СтатусыОпераций) Экспорт
	
	ПереводыСБПc2bСлужебный.ПроверитьПраваНаВыполнениеОперации();
	
	ИдентификаторыСтатусовОперации = Новый Массив;
	
	Для Каждого СтатусОперации Из СтатусыОпераций Цикл
		РезультатПолученияИдентификатора = ПереводыСБПc2bСлужебный.ПолучитьИдентификаторПоСтатусуОперации(
			СтатусОперации);
		Если Не ПустаяСтрока(РезультатПолученияИдентификатора.КодОшибки) Тогда
			ВызватьИсключение РезультатПолученияИдентификатора.СообщениеОбОшибке;
		Иначе
			ИдентификаторыСтатусовОперации.Добавить(РезультатПолученияИдентификатора.СтатусОперации);
		КонецЕсли;
	КонецЦикла;
	
	Возврат РегистрыСведений.ИдентификаторыОперацийСБПc2b.ПлатежныеСсылкиПоДокументамОпераций(
		ДокументыОпераций,
		ИдентификаторыСтатусовОперации);
	
КонецФункции

// Формирует строку, в которую добавляются все необходимые идентификаторы
// СБП для выполнения возврата оплаты по набору идентификаторов.
//
// Параметры:
//  ПараметрыОперации - Структура - идентификаторы оплаты:
//    * ИдентификаторОперации - Строка - идентификатор выполненной операции;
//    * ИдентификаторОплаты - Строка - идентификатор оплаты.
//
// Возвращаемое значение: 
//  Строка - набор идентификаторов операции оплаты, которые должны быть переданы при возврате.
//
Функция ИдентификаторыОперации(ПараметрыОперации) Экспорт
	
	Возврат ""
		+ СистемаБыстрыхПлатежейСлужебный.ИдентификаторСБП()
		+ ":"
		+ ПараметрыОперации.ИдентификаторОплаты
		+ ":"
		+ ПараметрыОперации.ИдентификаторОперации;
	
КонецФункции

// Определяет идентификатор функциональной ссылки.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ, который отражает
//    оплату в информационной базе.
//
// Возвращаемое значение: 
//  Строка - идентификатор функциональной ссылки.
//
Функция ИдентификаторФункциональнойСсылки(ДокументОперации) Экспорт
	
	ПереводыСБПc2bСлужебный.ПроверитьПраваНаВыполнениеОперации();
	
	ИдентификаторыОплаты = РегистрыСведений.ИдентификаторыОперацийСБПc2b.ИдентификаторыОперацииСБП(
		ДокументОперации);
	
	Если ИдентификаторыОплаты = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Идентификатор оплаты не обнаружен.'");
	КонецЕсли;
	
	Возврат ИдентификаторыОплаты.ИдентификаторОплаты;
	
КонецФункции

#КонецОбласти

#Область УстаревшиеПроцедурыИФункции

// Устарела. Следует использовать ПереводыСБПc2b.ОперацииПоДокументу.
// Получает исторические данные операции СБП по документу операции.
//
// Параметры:
//  ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - документ, который отражает
//    операцию в информационной базе.
//
// Возвращаемое значение:
//  Структура - данные заказа на оплату:
//    *ДатаОперации - Дата - дата заказа в программе;
//    *СуммаОперации - Число - сумма операции;
//    *НазначениеПлатежа - Строка - назначение для СБП;
//    *ДокументОперации - ОпределяемыйТип.ДокументОперацииСБП - объект оплаты в информационной базе;
//    *Оплата - Булево - если Истина, была выполнена оплата.
//
Функция ДанныеОперации(ДокументОперации) Экспорт
	
	ПереводыСБПc2bСлужебный.ПроверитьПраваНаВыполнениеОперации();
	
	Идентификатор = РегистрыСведений.ИдентификаторыОперацийСБПc2b.ИдентификаторОперации(
		ДокументОперации);
	
	Если Идентификатор = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = Новый Структура("ДатаОперации,
		|СуммаОперации,
		|НазначениеПлатежа,
		|ДокументОперации,
		|Оплата");
	
	ДанныеОперации = РегистрыСведений.ДанныеОперацийСБПc2b.ДанныеОперацииСБППоИдентификатору(Идентификатор);
	Если ДанныеОперации = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(
		Результат,
		ДанныеОперации);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

