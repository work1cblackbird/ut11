////////////////////////////////////////////////////////////////////////////////
// СловарьBankFeedsСлужебный: описаны настройки и значения настроек сервиса 
//
////////////////////////////////////////////////////////////////////////////////
#Область СлужебныйПрограммныйИнтерфейс

// Описаны возможные статусы ответа
// 
// Возвращаемое значение:
//  Структура - список значений:
//  * ОтветПолучен - Строка 
//  * ОтветНеПолучен - Строка 
//  * ЗапросНеНуженДанныеГотовы - Строка 
//
Функция СтатусыОтвета() Экспорт
	
	СтатусыОтвета = Новый Структура();
	
	СтатусыОтвета.Вставить("ОтветПолучен", "ОтветПолучен");
	СтатусыОтвета.Вставить("ОтветНеПолучен", "ОтветНеПолучен");
	СтатусыОтвета.Вставить("ЗапросНеНуженДанныеГотовы", "ЗапросНеНуженДанныеГотовы");
	
	Возврат СтатусыОтвета;
КонецФункции

// Описаны адреса сервисов
// 
// Возвращаемое значение:
//  Соответствие из строка - Перечисления.СервисыBankFeeds -> адрес сервиса:
//
Функция АдресаЗапросаСервиса() Экспорт
	
	АдресаЗапросов = Новый Соответствие; 
	АдресаЗапросов.Вставить(Перечисления.СервисыBankFeeds.SaltEdge, "https://www.saltedge.com/api/partners/v1/");
	
	Возврат АдресаЗапросов; 
	
КонецФункции	

// Описаны команды сервисов
// 
// Параметры:
// 	Сервис - ПеречислениеСсылка.СервисыBankFeeds - значение перечисления
//
//
// Возвращаемое значение:
//  Структура - возвращаются команды сервиса:
//  * СоздатьПользователя - Строка
//  * СоздатьЛидСессию - Строка
//  * ПолучитьИзСервисаСписокПровайдеров - Строка
//  * ПолучитьИзСервисаСписокСоединений - Строка
//  * ПолучитьИзСервисаСписокСчетов - Строка
//  * ПолучитьИзСервисаСписокТранзакций - Строка
//  * ОткрытьВСервисеПлатежнуюСессию - Строка
//  * ПолучитьИзСервисаСписокФорматов - Строка
//  * ПолучитьИзСервисаСписокВалют - Строка
//  * ПолучитьИзСервисаСписокСтран - Строка
//  * ПолучитьИзСервисаСписокПлатежныхДокументов - Строка
//  * ПолучитьРасшифровкуМерчантов - Строка
//  * ПолучитьСписокОрганизаций - Строка
//  * ОбновитьСоединение - Строка
//  * ПолучитьСписокСогласий - Строка
//  * АннулироватьСогласие - Строка
//
Функция КомандыСервисов(Сервис) Экспорт
	
	КомандыЗапросов = Новый Структура();
	
	Если Сервис = Перечисления.СервисыBankFeeds.SaltEdge Тогда
		
		КомандыЗапросов.Вставить("СоздатьПользователя", "/api/partners/v1/leads");
		КомандыЗапросов.Вставить("СоздатьЛидСессию", "/api/partners/v1/lead_sessions/create");
		КомандыЗапросов.Вставить("ПолучитьИзСервисаСписокПровайдеров", "/api/partners/v1/providers");
		КомандыЗапросов.Вставить("ПолучитьИзСервисаСписокСоединений", "/api/partners/v1/connections");
		КомандыЗапросов.Вставить("ПолучитьИзСервисаСписокСчетов", "/api/partners/v1/accounts");
		КомандыЗапросов.Вставить("ПолучитьИзСервисаСписокТранзакций", "/api/partners/v1/transactions");
		КомандыЗапросов.Вставить("ОткрытьВСервисеПлатежнуюСессию", "/api/partners/v1/payments/sessions");
		КомандыЗапросов.Вставить("ПолучитьИзСервисаСписокФорматов", "/api/partners/v1/payments/templates");
		КомандыЗапросов.Вставить("ПолучитьИзСервисаСписокВалют", "/api/partners/v1/currencies");
		КомандыЗапросов.Вставить("ПолучитьИзСервисаСписокСтран", "/api/partners/v1/countries");
		КомандыЗапросов.Вставить("ПолучитьИзСервисаСписокПлатежныхДокументов", "/api/partners/v1/payments"); 
		КомандыЗапросов.Вставить("ПолучитьРасшифровкуМерчантов", "/api/partners/v1/merchants"); 
		КомандыЗапросов.Вставить("ПолучитьСписокОрганизаций", "/api/partners/v1/customers"); 
		КомандыЗапросов.Вставить("ОбновитьСоединение", "/api/partners/v1/lead_sessions/reconnect"); 
		КомандыЗапросов.Вставить("ПолучитьСписокСогласий", "/api/partners/v1/partner_consents"); 
		КомандыЗапросов.Вставить("АннулироватьСогласие", "/api/partners/v1/partner_consents"); 
		
	КонецЕсли;	
	
	Возврат КомандыЗапросов;
КонецФункции 

// Возвращается тело в запросе по команде сервиса
// 
// Параметры:
// 	Сервис - ПеречислениеСсылка.СервисыBankFeeds - значение перечисления
//
//
// Возвращаемое значение:
//  Соответствие из строка - команда сервиса -> тело запроса 
//
Функция СписокТелКоманд(Сервис) Экспорт
	
	СвязьКомандыИТелаЗапроса = Новый Соответствие();
	КомандыЗапросов = КомандыСервисов(Сервис);

	// КомандыЗапросов.СоздатьПользователя
	ТелоЗапроса = Новый Структура();
	ДобавитьСвойство(ТелоЗапроса, "data", Новый Структура());
	Данные = ТелоЗапроса.Data;
	ДобавитьСвойство(Данные, "email", ""); 
	ДобавитьСвойство(Данные, "identifier", ""); 
	ДобавитьСвойство(Данные, "kyc", Новый Структура());   
	РегистрационныеДанные = Данные.kyc;
	ДобавитьСвойство(РегистрационныеДанные, "full_name", "");   
	ДобавитьСвойство(РегистрационныеДанные, "type_of_account", "legal");   
	ДобавитьСвойство(РегистрационныеДанные, "date_of_birth", "");   
	ДобавитьСвойство(РегистрационныеДанные, "place_of_birth", "");   
	ДобавитьСвойство(РегистрационныеДанные, "gender", "");   
	ДобавитьСвойство(РегистрационныеДанные, "citizenship_code", "");   
	ДобавитьСвойство(РегистрационныеДанные, "residence_address", "");   
	ДобавитьСвойство(РегистрационныеДанные, "legal_name", "");   
	ДобавитьСвойство(РегистрационныеДанные, "registered_office_code", "");   
	ДобавитьСвойство(РегистрационныеДанные, "registered_office_address", "");   
	ДобавитьСвойство(РегистрационныеДанные, "registration_number", "");   
	
	СвязьКомандыИТелаЗапроса.Вставить(КомандыЗапросов.СоздатьПользователя, ТелоЗапроса);
	
	// КомандыЗапросов.ОбновитьСоединение
	ТелоЗапроса = Новый Структура();
	ДобавитьСвойство(ТелоЗапроса, "data", Новый Структура());
	Data = ТелоЗапроса.Data;
	ДобавитьСвойство(Data, "connection_id", "");   
	ДобавитьСвойство(Data, "customer_id", "");   
	ДобавитьСвойство(Data, "consent", Новый Структура());   
	Согласия = Data.consent;
	ДобавитьСвойство(Согласия, "scopes", Новый Массив());
	Правила = Согласия.scopes;
	Правила.Добавить("account_details");
	Правила.Добавить("transactions_details");
	ДобавитьСвойство(Согласия, "from_date", "");   
	ДобавитьСвойство(Data, "attempt", Новый Структура());   
	ТелоЗапроса.Data.attempt.Вставить("custom_fields", Новый Структура());
	ТелоЗапроса.Data.attempt.custom_fields.Вставить("numberAccount", "");
	ТелоЗапроса.Data.attempt.custom_fields.Вставить("nameBank", "");
	ТелоЗапроса.Data.attempt.custom_fields.Вставить("RecordID", "");
	
	СвязьКомандыИТелаЗапроса.Вставить(КомандыЗапросов.ОбновитьСоединение, ТелоЗапроса);
	
	// КомандыЗапросов.СоздатьЛидСессию
	ТелоЗапроса = Новый Структура();
	ТелоЗапроса.Вставить("data", Новый Структура());
	ТелоЗапроса.Data.Вставить("customer_id", ""); 
	ТелоЗапроса.Data.Вставить("provider_code", ""); 
	ТелоЗапроса.Data.Вставить("consent", Новый Структура()); 
	ТелоЗапроса.Data.consent.Вставить("scopes", Новый Массив());
	ТелоЗапроса.Data.consent.scopes.Добавить("account_details");
	ТелоЗапроса.Data.consent.scopes.Добавить("transactions_details");
	ТелоЗапроса.Data.Вставить("attempt", Новый Структура()); 
	ТелоЗапроса.Data.attempt.Вставить("custom_fields", Новый Структура());
	ТелоЗапроса.Data.attempt.custom_fields.Вставить("numberAccount", "");
	ТелоЗапроса.Data.attempt.custom_fields.Вставить("nameBank", "");
	ТелоЗапроса.Data.attempt.custom_fields.Вставить("RecordID", "");
	
	СвязьКомандыИТелаЗапроса.Вставить(КомандыЗапросов.СоздатьЛидСессию, ТелоЗапроса);
	
	//КомандыЗапросов.ОткрытьВСервисеПлатежнуюСессию
	ТелоЗапроса = Новый Структура();
	ТелоЗапроса.Вставить("data", Новый Структура());
	ТелоЗапроса.Data.Вставить("customer_id", ""); 
	ТелоЗапроса.Data.Вставить("provider_code", ""); 
	ТелоЗапроса.Data.Вставить("payee_description", ""); 
	ТелоЗапроса.Data.Вставить("template_identifier", "SEPA"); 
	ТелоЗапроса.Data.Вставить("payment_attributes", Новый Структура()); 
	
	payment_attributes = Новый Структура();
	payment_attributes.Вставить("end_to_end_id", "");
	payment_attributes.Вставить("customer_ip_address", "");
	payment_attributes.Вставить("customer_device_os", "");
	
	payment_attributes.Вставить("creditor_name", "");
	payment_attributes.Вставить("creditor_street_name", "");
	payment_attributes.Вставить("creditor_building_number", "");
	payment_attributes.Вставить("creditor_post_code", "");
	payment_attributes.Вставить("creditor_town", "");
	payment_attributes.Вставить("creditor_country_code", "");  
	
	payment_attributes.Вставить("debtor_name", "");
	payment_attributes.Вставить("debtor_street_name", "");
	payment_attributes.Вставить("debtor_building_number", "");
	payment_attributes.Вставить("debtor_post_code", "");
	payment_attributes.Вставить("debtor_town", "");
	payment_attributes.Вставить("debtor_country_code", "");  
	
	payment_attributes.Вставить("currency_code", "");
	payment_attributes.Вставить("amount", "");
	payment_attributes.Вставить("description", "");
	payment_attributes.Вставить("creditor_iban", "");
	payment_attributes.Вставить("debtor_iban", "");
	payment_attributes.Вставить("mode", "");    
	payment_attributes.Вставить("charge_bearer", "SHARED");    
	
	payment_attributes.Вставить("custom_fields", Новый Структура("uid_document",""));

	ТелоЗапроса.Data.payment_attributes = payment_attributes;	
	
	СвязьКомандыИТелаЗапроса.Вставить(КомандыЗапросов.ОткрытьВСервисеПлатежнуюСессию, ТелоЗапроса);
	
	ТелоЗапроса = Новый Структура();
	ТелоЗапроса.Вставить("data", Новый Массив());
	СвязьКомандыИТелаЗапроса.Вставить(КомандыЗапросов.ПолучитьРасшифровкуМерчантов, ТелоЗапроса);
	
	Возврат СвязьКомандыИТелаЗапроса;
	
КонецФункции	

// Возвращает структуру данных платежного требования. 
// Соответствие наименование колонки и полем, что должно передаваться в сервис.
// 
//
// Возвращаемое значение:
//  см. ШаблоныПлатежныхТребований
//
Функция ШаблоныПлатежныхТребований() Экспорт

	ПлатежныеШаблоны = Новый Соответствие();
	
	НазваниеШаблона = Перечисления.ФорматыПлатежейBankFeeds.SEPA;
	
	СтруктураДанных = Новый Структура();
	СтруктураДанных.Вставить("ИДШаблонаПлатежа",      "end_to_end_id");
	СтруктураДанных.Вставить("customer_ip",           "customer_ip_address");
	СтруктураДанных.Вставить("customer_device",       "customer_device_os"); 
	
	СтруктураДанных.Вставить("КонтрагентНаим",        "debtor_name");
	СтруктураДанных.Вставить("Контрагент_Улица",      "debtor_street_name");
	СтруктураДанных.Вставить("Контрагент_Дом",        "debtor_building_number");
	СтруктураДанных.Вставить("Контрагент_НомерПочты", "debtor_post_code");
	СтруктураДанных.Вставить("Контрагент_Город",      "debtor_town");
	СтруктураДанных.Вставить("Контрагент_КодГорода",  "debtor_country_code");
	СтруктураДанных.Вставить("КонтрагентРасчСчет",    "debtor_iban"); 

	СтруктураДанных.Вставить("ОрганизацияНаим",        "creditor_name");
	СтруктураДанных.Вставить("Организация_Улица",      "creditor_street_name");
	СтруктураДанных.Вставить("Организация_Дом",        "creditor_building_number");
	СтруктураДанных.Вставить("Организация_НомерПочты", "creditor_post_code");
	СтруктураДанных.Вставить("Организация_Город",      "creditor_town");
	СтруктураДанных.Вставить("Организация_КодГорода",  "creditor_country_code");
	СтруктураДанных.Вставить("ОрганизацияРасчСчет",   "creditor_iban");  
	
	СтруктураДанных.Вставить("ISOКодВалюты",          "currency_code");
	СтруктураДанных.Вставить("Сумма",                 "amount");
	СтруктураДанных.Вставить("НазначениеПлатежа",     "description");
	СтруктураДанных.Вставить("Режим",                 "mode");
	
	ПлатежныеШаблоны.Вставить(НазваниеШаблона, СтруктураДанных);
	
	Возврат ПлатежныеШаблоны;
	
КонецФункции	

// Возвращает структуру данных платежного поручения. 
// Соответствие наименование колонки и полем, что должно передаваться в сервис.
// 
//
// Возвращаемое значение:
//  Структура - Список параметров и значения текста запроса параметра:
//  * end_to_end_id -  Строка
//  * customer_ip_address - Строка
//  * customer_device_os - Строка
//  * creditor_name - Строка
//  * creditor_street_name - Строка
//  * creditor_building_number - Строка
//  * creditor_post_code - Строка
//  * creditor_town - Строка
//  * creditor_country_code - Строка
//  * currency_code - Строка
//  * amount - Строка
//  * description - Строка
//  * creditor_iban - Строка
//  * mode - Строка
//
Функция ШаблоныПлатежныхПоручений() Экспорт
	
	ПлатежныеШаблоны = Новый Соответствие();
	
	НазваниеШаблона = Перечисления.ФорматыПлатежейBankFeeds.SEPA;
	
	СтруктураДанных = Новый Структура();
	СтруктураДанных.Вставить("ИДШаблонаПлатежа",      "end_to_end_id");
	СтруктураДанных.Вставить("customer_ip",           "customer_ip_address");
	СтруктураДанных.Вставить("customer_device",       "customer_device_os");
	СтруктураДанных.Вставить("КонтрагентНаим",        "creditor_name");
	СтруктураДанных.Вставить("Контрагент_Улица",      "creditor_street_name");
	СтруктураДанных.Вставить("Контрагент_Дом",        "creditor_building_number");
	СтруктураДанных.Вставить("Контрагент_НомерПочты", "creditor_post_code");
	СтруктураДанных.Вставить("Контрагент_Город",      "creditor_town");
	СтруктураДанных.Вставить("Контрагент_КодГорода",  "creditor_country_code");
	СтруктураДанных.Вставить("ISOКодВалюты",          "currency_code");
	СтруктураДанных.Вставить("Сумма",                 "amount");
	СтруктураДанных.Вставить("НазначениеПлатежа",     "description");
	СтруктураДанных.Вставить("КонтрагентРасчСчет",    "creditor_iban");
	СтруктураДанных.Вставить("ОрганизацияРасчСчет",   "debtor_iban");
	СтруктураДанных.Вставить("Режим",                 "mode");
	
	ПлатежныеШаблоны.Вставить(НазваниеШаблона, СтруктураДанных);
	
	Возврат ПлатежныеШаблоны;
	
КонецФункции

// Возвращается тело в запросе по команде сервиса
// 
// Параметры:
// 	Команда - Строка - значение перечисления
//
//
// Возвращаемое значение:
//  Соответствие из строка - команда сервиса -> тело запроса 
//
Функция ПараметрыКоманды(Команда) Экспорт
	
	 КомандыСервисаSaltEdge = КомандыСервисов(Перечисления.СервисыBankFeeds.SaltEdge);  
	 ПараметрыКоманд = ПараметрыКоманд();
	 
	 ПараметрыЗапросовПоКоманде = Новый Соответствие();
	 ПараметрыЗапросовПоКоманде.Вставить(КомандыСервисаSaltEdge.ПолучитьИзСервисаСписокСоединений, 
	 	Новый Структура("Customer_id", ПараметрыКоманд.Customer_id));

	 ПараметрыЗапросовПоКоманде.Вставить(КомандыСервисаSaltEdge.ПолучитьИзСервисаСписокПлатежныхДокументов, 
	 	Новый Структура("Customer_id", ПараметрыКоманд.Customer_id));
		
	 ПараметрыЗапросовПоКоманде.Вставить(КомандыСервисаSaltEdge.ПолучитьИзСервисаСписокСчетов, 
	 	Новый Структура("Connection_id", ПараметрыКоманд.Connection_id));

  	 ПараметрыЗапросовПоКоманде.Вставить(КомандыСервисаSaltEdge.ОткрытьВСервисеПлатежнуюСессию, 
	 	Новый Структура("Payment_id", ПараметрыКоманд.Payment_id));

	 ПараметрыЗапросовПоКоманде.Вставить(КомандыСервисаSaltEdge.ПолучитьИзСервисаСписокТранзакций, 
	 	Новый Структура("Connection_id,Account_id" , ПараметрыКоманд.Connection_id, ПараметрыКоманд.Account_id));
		
	 ПараметрыЗапросовПоКоманде.Вставить(КомандыСервисаSaltEdge.ПолучитьСписокСогласий, 
	 	Новый Структура("Connection_id" , ПараметрыКоманд.Connection_id));
		
	Возврат ПараметрыЗапросовПоКоманде[Команда];
	
 КонецФункции	
  
// Возвращается текст запроса по параметру
// 
//
// Возвращаемое значение:
//  Структура - Список параметров и значения текста запроса параметра:
//  * Customer_id - Строка
//  * Connection_id - Строка
//  * Consent_id - Строка
//  * Account_id - Строка
//  * Payment_id - Строка
//
Функция ПараметрыКоманд() Экспорт
	 
	 ПараметрыКоманд = Новый Структура();
	 ПараметрыКоманд.Вставить("Customer_id", "customer_id=%CUSTOMER_ID%");
	 ПараметрыКоманд.Вставить("Connection_id", "connection_id=%CONNECTION_ID%");
	 ПараметрыКоманд.Вставить("Consent_id", "consent_id=%CONSENT_ID%");
	 ПараметрыКоманд.Вставить("Account_id", "account_id=%ACCOUNT_ID%");
	 ПараметрыКоманд.Вставить("Payment_id", "payment.id");

	 Возврат ПараметрыКоманд;
	 
 КонецФункции	
  
// Возвращается основной формат платежного документа
// 
//
// Возвращаемое значение:
//  ПеречислениеСсылка.ФорматыПлатежейBankFeeds - SEPA
//
Функция ОсновнойШаблонФорматаПлатежногоПоручения() Экспорт
	 
	Возврат Перечисления.ФорматыПлатежейBankFeeds.SEPA;
	 
КонецФункции	 

// Возвращается команда, которая передается при программном открытии формы подключения
// 
//
// Возвращаемое значение:
//  Структура - команды формы подключения:
//  * ПодключитьСчет - Строка
//  * ДобавитьСчет - Строка
//
Функция КомандыОткрытияФормыПодключения() Экспорт
	
	КомандыОткрытия = Новый Структура();	
	КомандыОткрытия.Вставить("ПодключитьСчет", "ПодключитьСчет");
	КомандыОткрытия.Вставить("ДобавитьСчет", "ДобавитьСчет");
	
	Возврат КомандыОткрытия;
	
КонецФункции	

// Возвращает соответствие, какая категория в сервисе соответствует хозяйственной операции
// при поступлении ДС.
//
// Возвращаемое значение:
//  Соответствие из ПеречислениеСсылка.ХозяйственныеОперации - Имя категории в сервисе -> хозяйственная операция
//
Функция СписокСоответствияКатегорииКХозяйственнойОперацииПриПоступленииДС() Экспорт
	
	СписокСоответствия = Новый Соответствие();
	
	СписокСоответствия.Вставить("transfer", Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета);

	СписокСоответствия.Вставить("returns", Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика);
	
	СписокСоответствия.Вставить("student_loan", Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным);

	СписокСоответствия.Вставить("investment_income",   Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоДепозитам);
	
	СписокСоответствия.Вставить("gifts_and_donations",    Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("charity", 				  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("income", 				  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("bonus", 				  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("paycheck", 			  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("insurance", 			  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("car_insurance", 		  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("health_insurance", 	  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("life_insurance", 		  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("property_insurance",     Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("kids",                   Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("allowance", 			  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("babysitter_and_daycare", Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("baby_supplies", 		  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("child_support", 		  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("kids_activities", 	      Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("toys",					  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("pets", 				  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("pet_food_and_supplies",  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("pet_grooming", 		  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("veterinary", 			  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("travel", 				  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("hotel", 				  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("transportation", 		  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("vacation", 			  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("uncategorized", 		  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	//Бизнес
	СписокСоответствия.Вставить("financials", 			  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("dividends",			  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("donations", 			  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("interest", 			  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("fees", 				  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("fines",				  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);  
	СписокСоответствия.Вставить("human_resources",		  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("wages", 				  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("bonus", 			 	  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("employee_benefits", 	  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("travel", 				  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("entertainment", 		  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("insurance", 			  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("business_insurance", 	  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("liability_insurance", 	  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("health_insurance", 	  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("equipment_insurance", 	  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("vehicle_insurance", 	  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("professional_insurance", Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);
	СписокСоответствия.Вставить("uncategorized",   		  Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств);

	СписокСоответствия.Вставить("loans", 				  Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам);
	СписокСоответствия.Вставить("mortgage",			  	  Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствПоКредитам);
	
	СписокСоответствия.Вставить("taxes", 		  Перечисления.ХозяйственныеОперации.ВозвратНалогов);
	СписокСоответствия.Вставить("vat", 			  Перечисления.ХозяйственныеОперации.ВозвратНалогов);
	СписокСоответствия.Вставить("federal_taxes",  Перечисления.ХозяйственныеОперации.ВозвратНалогов);
	СписокСоответствия.Вставить("property_taxes", Перечисления.ХозяйственныеОперации.ВозвратНалогов);
	СписокСоответствия.Вставить("income_taxes",   Перечисления.ХозяйственныеОперации.ВозвратНалогов);
	СписокСоответствия.Вставить("duty_taxes",     Перечисления.ХозяйственныеОперации.ВозвратНалогов);
	СписокСоответствия.Вставить("tax_return",     Перечисления.ХозяйственныеОперации.ВозвратНалогов);
	СписокСоответствия.Вставить("payroll_taxes",  Перечисления.ХозяйственныеОперации.ВозвратНалогов);
	
	Возврат СписокСоответствия;
КонецФункции

// Возвращает соответствие, какая категория в сервисе соответствует хозяйственной операции
// при списании ДС.
//
// Возвращаемое значение:
//  Соответствие из ПеречислениеСсылка.ХозяйственныеОперации - Имя категории в сервисе -> хозяйственная операция
//
Функция СписокСоответствияКатегорииКХозяйственнойОперацииПриСписанииДС() Экспорт

	СписокСоответствия = Новый Соответствие();
	
	СписокСоответствия.Вставить("transfer", Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет);
	
	СписокСоответствия.Вставить("fees_and_charges", 	  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("provider_fee", 		  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("loans", 				  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("gifts_and_donations",    Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("charity", 				  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("mortgage", 			  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("rent", 				  Перечисления.ХозяйственныеОперации.ОплатаАрендодателю);  
	СписокСоответствия.Вставить("mortgage", 			  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("insurance", 			  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("car_insurance", 		  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("health_insurance", 	  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("life_insurance", 		  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("property_insurance", 	  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("kids",				 	  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("allowance", 			  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("babysitter_and_daycare", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("baby_supplies", 		  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("child_support", 		  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("kids_activities", 		  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("toys", 				  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("pets", 				  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("pet_food_and_supplies",  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("pet_grooming", 		  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("veterinary",		      Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("financials", 			  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("dividends", 			  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("donations", 			  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("interest", 			  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("fees", 				  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("fines", 				  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("loans",			 	  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("human_resources", 		  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств); 
	
	СписокСоответствия.Вставить("wages", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту); 
	СписокСоответствия.Вставить("bonus", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета); 
	СписокСоответствия.Вставить("employee_benefits", Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета); 
	
	СписокСоответствия.Вставить("travel", 				  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("entertainment", 		  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("insurance", 			  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("business_insurance",     Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("liability_insurance",    Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("health_insurance", 	  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("equipment_insurance", 	  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("vehicle_insurance", 	  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("professional_insurance", Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("real_estate", 			  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("office_rent", 			  Перечисления.ХозяйственныеОперации.ОплатаАрендодателю);  
	СписокСоответствия.Вставить("mortgage",				  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);  
	СписокСоответствия.Вставить("uncategorized", 		  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	
	СписокСоответствия.Вставить("Taxes", 		  Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	СписокСоответствия.Вставить("taxes", 		  Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	СписокСоответствия.Вставить("Vat", 			  Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	СписокСоответствия.Вставить("federal_taxes",  Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	СписокСоответствия.Вставить("property_taxes", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	СписокСоответствия.Вставить("Income_taxes",   Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	СписокСоответствия.Вставить("Duty_taxes",     Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	СписокСоответствия.Вставить("Payroll_taxes",  Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	СписокСоответствия.Вставить("tax_return",     Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	
	СписокСоответствия.Вставить("returns", Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);

	Возврат СписокСоответствия;
	
КонецФункции	

// Описывает реквизиты регистрации на форме
//
// Возвращаемое значение:
//  Структура - описанные реквизиты:
//  * АдресПроживанияРегистратора - Строка
//  * ДатаРожденияРегистратора - Строка
//  * СтранаГражданстваРегистратора - Строка
//  * ФамилияИмяОтчествоРегистратора - Строка
//  * МестоРожденияРегистратора - Строка
//  * ПолРегистратора - Строка
//  * АдресОфисаКомпании - Строка
//  * КомпанияЗарегистрированаВСтране - Строка
//  * РегистрационныйНомерКомпании - Строка
//  * ЮридическоеНаименованиеКомпании - Строка
//  * ДанныеПодтвержденыПользователем - Булево
//
Функция РеквизитыРегистрацииНаФорме() Экспорт

 НаборРеквизитов = Новый Структура();	

 НаборРеквизитов.Вставить("АдресПроживанияРегистратора", "");
 НаборРеквизитов.Вставить("ДатаРожденияРегистратора", "");
 НаборРеквизитов.Вставить("СтранаГражданстваРегистратора", "");
 НаборРеквизитов.Вставить("ФамилияИмяОтчествоРегистратора", "");
 НаборРеквизитов.Вставить("МестоРожденияРегистратора", "");  
 НаборРеквизитов.Вставить("ПолРегистратора", "");  

 НаборРеквизитов.Вставить("АдресОфисаКомпании", "");
 НаборРеквизитов.Вставить("КомпанияЗарегистрированаВСтране", "");
 НаборРеквизитов.Вставить("РегистрационныйНомерКомпании", "");
 НаборРеквизитов.Вставить("ЮридическоеНаименованиеКомпании", "");

 НаборРеквизитов.Вставить("ДанныеПодтвержденыПользователем", Ложь);
 
 Возврат НаборРеквизитов;  
 
КонецФункции

// устанавливает соответствие реквизитам на форме с реквизитами в запросе
//
// Возвращаемое значение:
//  Соответствие из Строка - Соответствие реквизитам в запросе
//
Функция СоответствиеРеквизитовРегистрацииНаФормеРеквизитамЗапроса() Экспорт
	
	СписокСоответствия = Новый Соответствие();
	
	СписокСоответствия.Вставить("ФамилияИмяОтчествоРегистратора",  "full_name");
	СписокСоответствия.Вставить("СтранаГражданстваРегистратора",   "citizenship_code");
	СписокСоответствия.Вставить("АдресПроживанияРегистратора",     "residence_address");
	СписокСоответствия.Вставить("ДатаРожденияРегистратора",        "date_of_birth");
	СписокСоответствия.Вставить("МестоРожденияРегистратора",       "place_of_birth");
	СписокСоответствия.Вставить("ПолРегистратора",                 "gender");
	СписокСоответствия.Вставить("ЮридическоеНаименованиеКомпании", "legal_name");
	СписокСоответствия.Вставить("КомпанияЗарегистрированаВСтране", "registered_office_code");
	СписокСоответствия.Вставить("АдресОфисаКомпании",              "registered_office_address");
	СписокСоответствия.Вставить("РегистрационныйНомерКомпании",    "registration_number");
	
	Возврат СписокСоответствия;
	
КонецФункции	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// В структуру добавляет свойство
//
// Параметры:
//  ТелоЗапроса - Структура - структуру, куда необходимо добавить свойство
//  НаименованиеСвойства - Строка - Наименование свойства
//  ЗначениеСвойства - строка - значение свойства
//
Процедура ДобавитьСвойство(ТелоЗапроса, ЗНАЧ НаименованиеСвойства, ЗначениеСвойства)

	ТелоЗапроса.Вставить(НаименованиеСвойства, ЗначениеСвойства);	

КонецПроцедуры 

#КонецОбласти
