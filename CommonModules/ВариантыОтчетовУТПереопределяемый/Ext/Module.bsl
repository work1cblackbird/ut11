#Область ПрограммныйИнтерфейс

// см. ВариантыОтчетовПереопределяемый.ОпределитьРазделыСВариантамиОтчетов
Процедура ОпределитьРазделыСВариантамиОтчетов(Разделы) Экспорт
	Если НЕ ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
		Разделы.Добавить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы(),
			НСтр("ru = 'Главное'"));
		
		Разделы.Добавить(Метаданные.Подсистемы.CRMИМаркетинг,
			НСтр("ru= 'Отчеты по CRM и маркетингу'"));
		
		Разделы.Добавить(Метаданные.Подсистемы.Закупки,
			НСтр("ru= 'Отчеты по закупкам'"));
		
		Разделы.Добавить(Метаданные.Подсистемы.Казначейство,
			НСтр("ru= 'Отчеты по казначейству'"));
		
		Разделы.Добавить(Метаданные.Подсистемы.Продажи,
			НСтр("ru= 'Отчеты по продажам'"));
		
		Разделы.Добавить(Метаданные.Подсистемы.Склад,
			НСтр("ru= 'Отчеты по складу'") );
		
		Разделы.Добавить(Метаданные.Подсистемы.ФинансовыйРезультатИКонтроллинг,
			НСтр("ru= 'Отчеты по финансовому результату'"));
			
			Разделы.Добавить(Метаданные.Подсистемы.Найти("Планирование"),
					НСтр("ru= 'Отчеты по планированию'"));
		
			
	
	КонецЕсли;
КонецПроцедуры

// см. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт
	ВыводитьВариантыОтчетов = Ложь;
	
	ИспользоватьПроизводство = ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство");
	ИспользоватьНесколькоВидовНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВидовНоменклатуры");
	
	РетроБонусыСервер.НастроитьВариантыОтчетов(Настройки);
	УчетНДСУП.НастроитьВариантыОтчетов(Настройки);
	
	Отчеты.ABCXYZАнализНоменклатуры.НастроитьВариантыОтчета(Настройки);
	Отчеты.ABCXYZРаспределениеКлиентов.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализДоходовРасходов.НастроитьВариантыОтчета(Настройки);
	
	#Область АнализЖурналаРегистрации
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.АнализЖурналаРегистрации);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АктивностьПользователя");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "АнализАктивностиПользователей");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КонтрольЖурналаРегистрации");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПродолжительностьРаботыРегламентныхЗаданий");
	#КонецОбласти
	
	Отчеты.АнализЗависимостиОтКлиентовABC.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализИсполненияАссортимента.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализКлиентскойБазыBCG.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализЛояльностиКлиентовXYZ.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализОстатковТоваровОрганизаций.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализПервичногоИнтереса.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализПервичногоСпроса.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализПретензийКлиентов.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализПричинОтменыЗаказовКлиентов.НастроитьВариантыОтчета(Настройки, ВыводитьВариантыОтчетов);
	Отчеты.АнализПричинОтменыЗаказовПоставщикам.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализПричинОтменыЗаказовПоставщикамПоДокументу.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализПричинПроигрышаСделок.НастроитьВариантыОтчета(Настройки);
	
	
	
	Отчеты.СебестоимостьТоваров.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализФинансовыхРезультатов.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализЦенПоставщиков.НастроитьВариантыОтчета(Настройки);
	Отчеты.АнализЭффективностиРаботыТорговыхПредставителей.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.БонусныеБаллы.НастроитьВариантыОтчета(Настройки);
	Отчеты.СостояниеКассовыхСмен.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.ВаловаяПрибыльПоОплаченнымОтгрузкам.НастроитьВариантыОтчета(Настройки);
	Отчеты.ВедомостьБезналичныхДенежныхСредств.НастроитьВариантыОтчета(Настройки);
	Отчеты.ВедомостьПоДенежнымСредствам.НастроитьВариантыОтчета(Настройки);
	Отчеты.ВедомостьПоДенежнымСредствамУПодотчетныхЛиц.НастроитьВариантыОтчета(Настройки);
	Отчеты.ДвиженияДенежныхСредств.НастроитьВариантыОтчета(Настройки);
	Отчеты.ВедомостьПоПартиямТоваров.НастроитьВариантыОтчета(Настройки);
	Отчеты.ВедомостьПоПереданнойВозвратнойТаре.НастроитьВариантыОтчета(Настройки);
	Отчеты.ВедомостьПоПринятойВозвратнойТаре.НастроитьВариантыОтчета(Настройки);
	Отчеты.ВедомостьПоСериямНоменклатуры.НастроитьВариантыОтчета(Настройки, ИспользоватьПроизводство);
	Отчеты.ВедомостьПоТоварамНаСкладах.НастроитьВариантыОтчета(Настройки);
	Отчеты.ВедомостьПоТоварамНаСкладахВЦенахНоменклатуры.НастроитьВариантыОтчета(Настройки);
	Отчеты.ВедомостьПоТоварамОрганизаций.НастроитьВариантыОтчета(Настройки);
	Отчеты.ВедомостьПоТоварамОрганизацийВЦенахНоменклатуры.НастроитьВариантыОтчета(Настройки);
	Отчеты.ВедомостьРасчетовМеждуОрганизациями.НастроитьВариантыОтчета(Настройки);
	Отчеты.ВедомостьРасчетовСКлиентами.НастроитьВариантыОтчета(Настройки);
	Отчеты.ВедомостьРасчетовСПартнерами.НастроитьВариантыОтчета(Настройки);
	Отчеты.ВероятностныйПрогноз.НастроитьВариантыОтчета(Настройки);
	Отчеты.ВоронкаПродаж.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.ВыполнениеУсловийСоглашенийСКлиентами.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.ВыручкаИСебестоимостьПродаж.НастроитьВариантыОтчета(Настройки, ИспользоватьНесколькоВидовНоменклатуры);
	Отчеты.ВыручкаИСебестоимостьРозничныхПродаж.НастроитьВариантыОтчета(Настройки);

	
	Отчеты.ДвижениеСерииНоменклатуры.НастроитьВариантыОтчета(Настройки, ИспользоватьПроизводство);
	
	
	Отчеты.ДебиторскаяЗадолженность.НастроитьВариантыОтчета(Настройки);
	Отчеты.ДебиторскаяЗадолженностьДоляПросрочки.НастроитьВариантыОтчета(Настройки);
	Отчеты.ДемонстрационныеСценарииОбъекта.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.ДинамикаИзмененияЦенНоменклатуры.НастроитьВариантыОтчета(Настройки);
	Отчеты.ДинамикаИзмененияЦенНоменклатуры2_5.НастроитьВариантыОтчета(Настройки);
	Отчеты.ДинамикаИзмененияЦенНоменклатурыПоставщика.НастроитьВариантыОтчета(Настройки);
	Отчеты.ДинамикаПоказателейРаботыТорговыхПредставителей.НастроитьВариантыОтчета(Настройки);
	Отчеты.ДинамикаИнцидентов.НастроитьВариантыОтчета(Настройки);
	Отчеты.ДоступностьВариантовАнализаЦелевыхПоказателей.НастроитьВариантыОтчета(Настройки);
	Отчеты.ДосьеПартнера.НастроитьВариантыОтчета(Настройки);
	Отчеты.ДублиИнцидента.НастроитьВариантыОтчета(Настройки);
	Отчеты.ЗаблокированныеЯчейки.НастроитьВариантыОтчета(Настройки);

	#Область ЗависшиеЗадачи
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЗависшиеЗадачи);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Описание = НСтр("ru= 'Задачи, которые не могут быть выполнены из-за того, что не заполнен список ролей и исполнителей.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗависшиеЗадачиПоИсполнителям");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗависшиеЗадачиПоОбъектамАдресации");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПросроченныеЗадачи");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СводкаПоЗависшимЗадачам");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	#КонецОбласти
	
	
	#Область Задания
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.Задания);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СписокЗаданий");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	#КонецОбласти
	
	#Область Задачи
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.Задачи);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СправкаПоИсполнительскойДисциплине");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ТекущиеЗадачи");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	#КонецОбласти
	
	#Область ЗадачиИстекающиеНаДату
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЗадачиИстекающиеНаДату);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗадачиИстекающиеНаДату");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	#КонецОбласти

	Отчеты.ЗадолженностьКлиентов.НастроитьВариантыОтчета(Настройки);
	Отчеты.ЗадолженностьКлиентовПоСрокам.НастроитьВариантыОтчета(Настройки);
	Отчеты.ОплатыКлиентовПоСрокам.НастроитьВариантыОтчета(Настройки);
	Отчеты.ЗадолженностьПоставщикам.НастроитьВариантыОтчета(Настройки);
	Отчеты.ЗадолженностьПоставщикамПоСрокам.НастроитьВариантыОтчета(Настройки);
	Отчеты.ОплатыПоставщикамПоСрокам.НастроитьВариантыОтчета(Настройки);
	
	#Область ЗаполнениеСвойствПартнеров
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ЗаполнениеСвойствПартнеров);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru= 'Все ли свойства клиентов, поставщиков заполнены?
		|Сколько и каких свойств нужно заполнить?'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru= 'Насколько заполнены свойства клиентов, поставщиков?
		|Оценка полноты клиентской базы.'");
	#КонецОбласти
	
	Отчеты.ЗаполненностьСклада.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.ИзменениеABCXYZРаспределенияКлиентов.НастроитьВариантыОтчета(Настройки);
	Отчеты.ИндексыЦенНоменклатуры.НастроитьВариантыОтчета(Настройки);
	Отчеты.ИндексыЦенПоставщиков.НастроитьВариантыОтчета(Настройки);
	Отчеты.ИсполнениеПланаЗакупок.НастроитьВариантыОтчета(Настройки);
	Отчеты.ИсполнениеПланаПродаж.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.ИсполнениеПланаСборкиРазборки.НастроитьВариантыОтчета(Настройки);
	Отчеты.ИсполнениеПланаВнутреннихПотреблений.НастроитьВариантыОтчета(Настройки);
	Отчеты.ИсполнениеРаспоряженийНаПеремещениеСборку.НастроитьВариантыОтчета(Настройки);
	Отчеты.КалендарьСобытий.НастроитьВариантыОтчета(Настройки);
	Отчеты.КарточкаРасхода.НастроитьВариантыОтчета(Настройки);
	Отчеты.КарточкаРасчетовПоПереданнойВозвратнойТаре.НастроитьВариантыОтчета(Настройки);
	Отчеты.КарточкаРасчетовПоПринятойВозвратнойТаре.НастроитьВариантыОтчета(Настройки);
	Отчеты.КарточкаРасчетовСКлиентами.НастроитьВариантыОтчета(Настройки);
	Отчеты.КарточкаРасчетовСКлиентами24.НастроитьВариантыОтчета(Настройки);
	Отчеты.КарточкаРасчетовСПоставщиками.НастроитьВариантыОтчета(Настройки);
	Отчеты.КарточкаРасчетовПоФинансовымИнструментам.НастроитьВариантыОтчета(Настройки);
	
	#Область КонтактнаяИнформация
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.КонтактнаяИнформация);
	ОписаниеОтчета.ФорматНастроекСКД = Ложь;
	ВариантыОтчетов.УстановитьРежимВыводаВПанеляхОтчетов(Настройки, ОписаниеОтчета, ВыводитьВариантыОтчетов);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "Основной");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "СмТакже");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru= 'Информация о клиентах, поставщиках, их основном менеджере, 
		|ABC/XYZ-классификации и контактной информации.'");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ПоКонтактнымЛицам");
	УстановитьВажностьВариантаОтчета(ОписаниеВарианта, "СмТакже");
	ОписаниеВарианта.ВидимостьПоУмолчанию = Ложь;
	ОписаниеВарианта.Описание = НСтр("ru= 'Информация о контактных лицах.'");
	#КонецОбласти
	
	Отчеты.КонтрольВыданныхПодотчетномуЛицуАвансовПоЗаявке.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.КонтрольНомеровГТДТоваров.НастроитьВариантыОтчета(Настройки);
	Отчеты.КонтрольОперацийСДенежнымиСредствами.НастроитьВариантыОтчета(Настройки);
	Отчеты.КонтрольОформленияДокументовТовародвижений.НастроитьВариантыОтчета(Настройки);
	Отчеты.КонтрольОформленияТоваровВПутиИНеотфактурованныхПоставок.НастроитьВариантыОтчета(Настройки);

	
	
	Отчеты.КонтрольПередачТоваровМеждуОрганизациями.НастроитьВариантыОтчета(Настройки);
		
	
	
	
	Отчеты.КредиторскаяЗадолженность.НастроитьВариантыОтчета(Настройки);
	Отчеты.ЛимитыРасходаДенежныхСредств.НастроитьВариантыОтчета(Настройки);
	
	
	
	Отчеты.МониторЦелевыхПоказателей.НастроитьВариантыОтчета(Настройки);
	Отчеты.ОборачиваемостьЗапасов.НастроитьВариантыОтчета(Настройки);
	Отчеты.ОборотноСальдоваяВедомостьАктивовПассивов.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.ОплатаЗаявокНаРасходованиеДенежныхСредств.НастроитьВариантыОтчета(Настройки);
	Отчеты.ОстаткиИДвиженияДенежныхСредствВКассахККМ.НастроитьВариантыОтчета(Настройки, ВыводитьВариантыОтчетов);
	Отчеты.ОстаткиИДоступностьТоваров.НастроитьВариантыОтчета(Настройки, ВыводитьВариантыОтчетов);
	Отчеты.ОстаткиТоваровОрганизаций.НастроитьВариантыОтчета(Настройки);
	Отчеты.ОстаткиТоваровПереданныхНаКомиссию.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.ОстаткиТоваровПринятыхНаКомиссию.НастроитьВариантыОтчета(Настройки);
	
	#Область ОтклоненияОтУсловийЗакупок
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОтклоненияОтУсловийЗакупок);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	#Область ОтклоненияОтУсловийПродаж
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ОтклоненияОтУсловийПродаж);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	Отчеты.ОтрицательныеОстаткиТоваровОрганизаций.НастроитьВариантыОтчета(Настройки);
	Отчеты.ОтрицательныеОстаткиТоваровИРезервовОрганизаций.НастроитьВариантыОтчета(Настройки);
	Отчеты.РазвернутоеСальдоПоВидамЗапасовИНомерамГТД.НастроитьВариантыОтчета(Настройки);
	Отчеты.ОформлениеИзлишковНедостачТоваров.НастроитьВариантыОтчета(Настройки);
	Отчеты.ОформлениеОтчетовКомитенту.НастроитьВариантыОтчета(Настройки);
	Отчеты.ОценкаРентабельностиПродаж.НастроитьВариантыОтчета(Настройки);
	Отчеты.ОценкаРентабельностиПродаж2_5.НастроитьВариантыОтчета(Настройки);

	
	Отчеты.ПартнерыКоторымОтгрузкаЗапрещена.НастроитьВариантыОтчета(Настройки);
	Отчеты.ПереданнаяВозвратнаяТара.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.ПересеченияСегментаНоменклатуры.НастроитьВариантыОтчета(Настройки);
	Отчеты.ПересеченияСегментаПартнеров.НастроитьВариантыОтчета(Настройки);

	
	
	
	Отчеты.ПланЗакупок.НастроитьВариантыОтчета(Настройки, ВыводитьВариантыОтчетов);
	
	
	Отчеты.ПланФактныйАнализФинансовыхИнструментовУТ.НастроитьВариантыОтчета(Настройки);
	Отчеты.ПланФактныйАнализРаботыТорговыхПредставителейПоКоличеству.НастроитьВариантыОтчета(Настройки);
	Отчеты.ПланФактныйАнализРаботыТорговыхПредставителейПоСумме.НастроитьВариантыОтчета(Настройки);
	Отчеты.ПлатежнаяДисциплинаКлиентов.НастроитьВариантыОтчета(Настройки);
	Отчеты.ПовторныеПродажи.НастроитьВариантыОтчета(Настройки);

	
	Отчеты.ПлатежнаяДисциплинаКлиентов24.НастроитьВариантыОтчета(Настройки);
	Отчеты.ПрайсЛист.НастроитьВариантыОтчета(Настройки);
	Отчеты.ПрайсЛист2_5.НастроитьВариантыОтчета(Настройки);
	Отчеты.ПрайсЛистДляПриемаЗаказов.НастроитьВариантыОтчета(Настройки);
	Отчеты.ПрименениеСерииНоменклатуры.НастроитьВариантыОтчета(Настройки, ИспользоватьПроизводство);
	
	#Область ПримененныеСкидкиВДокументе
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПримененныеСкидкиВДокументе);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	Отчеты.ПринятаяВозвратнаяТара.НастроитьВариантыОтчета(Настройки);
	
	#Область ПричиныЗапретаОтгрузки
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПричиныЗапретаОтгрузки);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	
	Отчеты.ПродажиМеждуОрганизациями.НастроитьВариантыОтчета(Настройки);
	Отчеты.ПродажиСравнениеАналогичныхПериодов.НастроитьВариантыОтчета(Настройки);
	Отчеты.ПродажиСравнениеДвухПериодов.НастроитьВариантыОтчета(Настройки);
	Отчеты.ПроизводительностьРаботниковСклада.НастроитьВариантыОтчета(Настройки);
	
	
	#Область ПросроченныеЗадачи
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.ПросроченныеЗадачи);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "ЗадачиВыполненныеСНарушениемСроков");
	ОписаниеВарианта.Размещение.Вставить(ВариантыОтчетовКлиентСервер.ИдентификаторНачальнойСтраницы());
	#КонецОбласти
	
	Отчеты.РаспределениеТорговыхПредставителей.НастроитьВариантыОтчета(Настройки);
	Отчеты.РасчетыМеждуОрганизациями.НастроитьВариантыОтчета(Настройки);
	Отчеты.РасчетыСКлиентами.НастроитьВариантыОтчета(Настройки);
	Отчеты.РасчетыСПартнерами.НастроитьВариантыОтчета(Настройки);
	Отчеты.РасчетыСПоставщиками.НастроитьВариантыОтчета(Настройки);
	Отчеты.РасшифровкаПоступленийПоНоменклатуре.НастроитьВариантыОтчета(Настройки);
		
	
	
	
	Отчеты.РеестрКредитовИДепозитов.НастроитьВариантыОтчета(Настройки);
	Отчеты.РеестрПлатежей.НастроитьВариантыОтчета(Настройки);
	Отчеты.РеестрИнцидентов.НастроитьВариантыОтчета(Настройки);
	
	//++ Локализация
	Отчеты.РеестрТорговыхДокументов.НастроитьВариантыОтчета(Настройки);
	//-- Локализация
	
	
	
	Отчеты.РезультатыСогласованияЗаказаНаВнутреннееПотребление.НастроитьВариантыОтчета(Настройки);
	Отчеты.РезультатыСогласованияЗакупки.НастроитьВариантыОтчета(Настройки);
	Отчеты.РезультатыСогласованияЗаявкиНаВозвратТоваровОтКлиента.НастроитьВариантыОтчета(Настройки);
	Отчеты.РезультатыСогласованияПродажи.НастроитьВариантыОтчета(Настройки);
	Отчеты.РезультатыСогласованияЦенНоменклатуры.НастроитьВариантыОтчета(Настройки);
	Отчеты.РезультатыТестирования.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.СбалансированностьПлановУТ.НастроитьВариантыОтчета(Настройки);
	Отчеты.СверкаОстатковОперативногоУчетаИСебестоимости.НастроитьВариантыОтчета(Настройки);
	Отчеты.СверкаРасчетовСПартнерами.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.СертификатыНоменклатурыСИстекающимСрокомДействия.НастроитьВариантыОтчета(Настройки);
	Отчеты.СоставПродажи.НастроитьВариантыОтчета(Настройки);
	Отчеты.СоставСегмента.НастроитьВариантыОтчета(Настройки);
	Отчеты.СостояниеАссортимента.НастроитьВариантыОтчета(Настройки);
	
	#Область СостояниеВыполненияДокументов
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СостояниеВыполненияДокументов);
	ОтключитьОтчет(ОписаниеОтчета);
	#КонецОбласти
	
	Отчеты.СостояниеРасчетовСКлиентами.НастроитьВариантыОтчета(Настройки);
	Отчеты.СостояниеРасчетовСКлиентамиСамообслуживание.НастроитьВариантыОтчета(Настройки);
	Отчеты.СостояниеРасчетовСКомиссионерами.НастроитьВариантыОтчета(Настройки);
	Отчеты.СостояниеРасчетовСКомитентами.НастроитьВариантыОтчета(Настройки);
	Отчеты.СостояниеРасчетовСПоставщиками.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.СправкаРасчетПереоценкиВалютныхСредств.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.СправочноеРазмещениеНоменклатуры.НастроитьВариантыОтчета(Настройки);
	Отчеты.СравнениеГрафиковКредитовИДепозитов.НастроитьВариантыОтчета(Настройки);
	Отчеты.СравнениеСегментовПартнеров.НастроитьВариантыОтчета(Настройки);
	Отчеты.СравнительныйАнализДинамикиАссортиментаИПродаж.НастроитьВариантыОтчета(Настройки);
	Отчеты.СравнительныйАнализПоказателейРаботыМенеджеров.НастроитьВариантыОтчета(Настройки);
	Отчеты.СтатистикаИнцидентов.НастроитьВариантыОтчета(Настройки);

	
	
	Отчеты.СтруктураСерииНоменклатуры.НастроитьВариантыОтчета(Настройки, ИспользоватьПроизводство);

	
	Отчеты.ТекущаяНаполненностьАссортимента.НастроитьВариантыОтчета(Настройки);
	Отчеты.ТекущиеКвотыАссортимента.НастроитьВариантыОтчета(Настройки);
	Отчеты.ТоварныйКалендарь.НастроитьВариантыОтчета(Настройки, ВыводитьВариантыОтчетов);
	Отчеты.ТоварыВЯчейках.НастроитьВариантыОтчета(Настройки);
	Отчеты.ТоварыКОтбору.НастроитьВариантыОтчета(Настройки);
	Отчеты.ТоварыКПоступлению.НастроитьВариантыОтчета(Настройки);
	Отчеты.ТоварыНаСкладахПоСрокамГодности.НастроитьВариантыОтчета(Настройки);
	Отчеты.ТоварыКОтгрузке.НастроитьВариантыОтчета(Настройки);
	Отчеты.ТоварыПереданныеНаКомиссию.НастроитьВариантыОтчета(Настройки);
	Отчеты.ТоварыПереданныеНаКомиссию2_5.НастроитьВариантыОтчета(Настройки);

	
	
	Отчеты.ТоварыПринятыеНаКомиссию.НастроитьВариантыОтчета(Настройки);
	Отчеты.ТоварыПринятыеНаХранение.НастроитьВариантыОтчета(Настройки);
	Отчеты.ТоварыСИстекающимиСертификатами.НастроитьВариантыОтчета(Настройки);
	Отчеты.ТоварыСхемыОбеспечения.НастроитьВариантыОтчета(Настройки);
	Отчеты.УсловияЗакупок.НастроитьВариантыОтчета(Настройки);
	Отчеты.УсловияПродаж.НастроитьВариантыОтчета(Настройки);
	Отчеты.УсловияПродаж2_5.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.УправленческийБаланс.НастроитьВариантыОтчета(Настройки);
	Отчеты.УправленческийБалансКонтроль.НастроитьВариантыОтчета(Настройки);
	Отчеты.ФинансовоеСостояние.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.ЭффективностьСделокСКлиентами.НастроитьВариантыОтчета(Настройки);
	
	
	Отчеты.ВедомостьРасчетовПоФинансовымИнструментам.НастроитьВариантыОтчета(Настройки);
	
	
	
	Отчеты.ВедомостьПоДисконтированнойЗадолженности.НастроитьВариантыОтчета(Настройки);
	
	#Область СправкаРасчетНачисленияПроцентныхРасходовДисконтирования
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетНачисленияПроцентныхРасходовДисконтирования);
	ОписаниеОтчета.Описание = НСтр("ru= 'Определение суммы процентных расходов дисконтирования кредиторской задолженности поставщикам.'");
	#КонецОбласти

	#Область СправкаРасчетСписанияПроцентныхРасходовДисконтирования
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетСписанияПроцентныхРасходовДисконтирования);
	ОписаниеОтчета.ОпределитьНастройкиФормы = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "СправкаРасчетСписанияПроцентныхРасходовДисконтирования");
	ОписаниеВарианта.Описание = НСтр("ru= 'Определение суммы списания процентных расходов дисконтирования на указанный месяц
	|с учетом изменения условий оплаты и ставки дисконтирования, проведения оплаты и корректировки.'");
	ОписаниеВарианта.Включен = Истина;
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "КонтекстныйВариант");
	ОписаниеВарианта.Включен = Ложь;
	#КонецОбласти
	
	
	//++ Локализация
	Отчеты.ОтчетСервисПрогнозированияСлужебный.НастроитьВариантыОтчета(Настройки);
	//-- Локализация
	
	
	Отчеты.ОшибкиВыполненияОтложенныхЗаданий.НастроитьВариантыОтчета(Настройки);
	
КонецПроцедуры

// см. ВариантыОтчетовПереопределяемый.ЗарегистрироватьИзмененияКлючейВариантовОтчетов.
Процедура ЗарегистрироватьИзмененияКлючейВариантовОтчетов(Изменения) Экспорт
	
	ДобавитьИзменениеКлючей(Изменения, "ДебиторскаяЗадолженность", "ИнтервалыГоризонтально", "ДебиторскаяЗадолженность");
	ДобавитьИзменениеКлючей(Изменения, "ДебиторскаяЗадолженность", "ПоРасчетнымДокументам", "ДебиторскаяЗадолженностьПоРасчетнымДокументам");
	ДобавитьИзменениеКлючей(Изменения, "КредиторскаяЗадолженность", "ИнтервалыГоризонтально", "КредиторскаяЗадолженность");
	ДобавитьИзменениеКлючей(Изменения, "КредиторскаяЗадолженность", "ПоРасчетнымДокументам", "КредиторскаяЗадолженностьПоРасчетнымДокументам");
	ДобавитьИзменениеКлючей(Изменения, "ВедомостьПоТоварамНаСкладахВЦенахНоменклатуры", "Основной", "ВедомостьВЦенахНоменклатуры");
	ДобавитьИзменениеКлючей(Изменения, "ВыручкаИСебестоимостьПродаж", "ПродажиСписок", "ПродажиПоПартнерам");
	ДобавитьИзменениеКлючей(Изменения, "ВыручкаИСебестоимостьПродаж", "АнализПродажПоПоставщикам", "ПродажиПоПоставщикам");
	ДобавитьИзменениеКлючей(Изменения, "ВыручкаИСебестоимостьПродаж", "АнализПродажПоБизнесРегионамДиаграмма", "АнализПродажПоБизнесРегионам");
	ДобавитьИзменениеКлючей(Изменения, "ДинамикаПоказателейРаботыТорговыхПредставителей", "Основной", "ДинамикаПоказателейТорговыхПредставителей");
	ДобавитьИзменениеКлючей(Изменения, "КарточкаРасчетовСКлиентами", "Основной", "КарточкаРасчетовСКлиентами");
	ДобавитьИзменениеКлючей(Изменения, "КарточкаРасчетовСПоставщиками", "Основной", "КарточкаРасчетовСПоставщиками");
	ДобавитьИзменениеКлючей(Изменения, "ПланФактныйАнализРаботыТорговыхПредставителейПоКоличеству", 
		"ВыполнениеЗаданийПоКоличествуВРазрезеТорговыхПредставителей", "ВыполнениеЗаданийПоПредставителям");
	ДобавитьИзменениеКлючей(Изменения, "ПланФактныйАнализРаботыТорговыхПредставителейПоКоличеству", 
		"ВыполнениеЗаданийПоКоличествуВРазрезеНоменклатуры", "ВыполнениеЗаданийПоНоменклатуре");
	ДобавитьИзменениеКлючей(Изменения, "РаспределениеТорговыхПредставителей", "Основной", "КалендарьВизитовТорговыхПредставителей");
	ДобавитьИзменениеКлючей(Изменения, "РеестрКредитовИДепозитов", "Основной", "РеестрДоговоровКредитовДепозитов");
	ДобавитьИзменениеКлючей(Изменения, "РеестрКредитовИДепозитов", "Горизонтальный", "РеестрДоговоровКредитовДепозитовГоризонтальный");
	ДобавитьИзменениеКлючей(Изменения, "СостояниеРасчетовСКлиентами", "Основной", "СостояниеРасчетовСКлиентами");
	ДобавитьИзменениеКлючей(Изменения, "СостояниеРасчетовСПоставщиками", "Основной", "СостояниеРасчетовСПоставщиками");
	ДобавитьИзменениеКлючей(Изменения, "ТоварныйКалендарь", "Основной", "ТоварныйКалендарь");
	ДобавитьИзменениеКлючей(Изменения, "ВедомостьПоТоварамОрганизацийВЦенахНоменклатуры", "Основной", "ВедомостьПоТоварамОрганизацийВЦенахНоменклатуры");
	
КонецПроцедуры

// Возвращает имя отчета как оно задано в конфигураторе
//
// Параметры:
//	Форма - ФормаКлиентскогоПриложения - Форма отчета.
//
// Возвращаемое значение:
//	Строка - имя отчета без слова "Отчет.".
//
Функция ИмяОтчетаПоКлючуОбъекта(Форма) Экспорт
	Если Форма = Неопределено Тогда
		ИмяОтчета = Неопределено;
	Иначе
		Если ТипЗнч(Форма.НастройкиОтчета.ОтчетСсылка) = Тип("СправочникСсылка.ДополнительныеОтчетыИОбработки") Тогда
			ИмяОтчета = Форма.НастройкиОтчета.ОтчетСсылка.ИмяОбъекта;
		ИначеЕсли ТипЗнч(Форма.НастройкиОтчета.ОтчетСсылка) = Тип("Строка") Тогда
			ИмяОтчета = СтрЗаменить(Форма.НастройкиОтчета.ОтчетСсылка, "ВнешнийОтчет.", "");
		Иначе
			ИмяОтчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.НастройкиОтчета.ОтчетСсылка, "Имя");
		КонецЕсли;
	КонецЕсли;
	
	Возврат ИмяОтчета;
КонецФункции

// Отключает указанный отчет со всеми его вариантами от механизма "Варианты отчетов".
//
// Параметры:
//  ОписаниеОтчета - СтрокаДереваЗначений - Передается "как есть" из ВариантыОтчетов.ОписаниеОтчета().
//
Процедура ОтключитьОтчет(ОписаниеОтчета) Экспорт
	
	ОписаниеОтчета.Включен = Ложь;
	
КонецПроцедуры

// Отключает указанный вариант отчета от механизма "Варианты отчетов".
//
// Параметры:
//  Настройки - см. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.Настройки
//  ОписаниеОтчета - СтрокаДереваЗначений - Передается "как есть" из см. ВариантыОтчетов.ОписаниеОтчета.
//  КлючВарианта   - Строка - имя варианта отчета.
//
Процедура ОтключитьВариантОтчета(Настройки, ОписаниеОтчета, КлючВарианта) Экспорт
	
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, КлючВарианта);
	
	ОписаниеВарианта.Включен = Ложь;
	
КонецПроцедуры

// Устанавливает важность для указанного варианта отчета в указанной подсистеме
//
// Параметры:
//  ОписаниеВарианта - СтрокаДереваЗначений - Передается "как есть" из ВариантыОтчетов.ОписаниеОтчета().
//  Важность - Строка -
//               	|- ""        - Вывод отчета в своей группе обычным шрифтом.
//               	|- "Важный"  - Вывод отчета в своей группе жирным шрифтом.
//               	|- "СмТакже" - Вывод отчета в группе "См также".
//  Подсистема - ОбъектМетаданных - если подсистема не указана, то для всех подсистем варианта.
//
Процедура УстановитьВажностьВариантаОтчета(ОписаниеВарианта, Важность, Подсистема = Неопределено) Экспорт
	
	Если ВажностьУказанаВерно(Важность) Тогда
		Размещение = ОписаниеВарианта.Размещение.Получить(Подсистема);
		
		Если Не Размещение = Неопределено Тогда
			ОписаниеВарианта.Размещение.Вставить(Подсистема, Важность);
		Иначе
			Для Каждого Размещение Из ОписаниеВарианта.Размещение Цикл 
				ОписаниеВарианта.Размещение.Вставить(Размещение.Ключ, Важность);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Проверяет строку на содержание параметров важности
//
// Параметры:
//  Важность - Строка - возможные варианты: "", "Важный", "СмТакже"
//
// Возвращаемое значение: 
//  Булево   - Истина, если переданная строка равна одному из значений:
//               	|- ""        - Вывод отчета в своей группе обычным шрифтом.
//               	|- "Важный"  - Вывод отчета в своей группе жирным шрифтом.
//               	|- "СмТакже" - Вывод отчета в группе "См также".
//             Ложь, в ином случае.
//
Функция ВажностьУказанаВерно(Важность)
	
	Возврат ПустаяСтрока(Важность) Или Важность = "Важный" Или Важность = "СмТакже";
	
КонецФункции

// Добавляет вариант отчета в таблицу переименования
//
// Параметры:
//  Изменения - см. ВариантыОтчетовПереопределяемый.ЗарегистрироватьИзмененияКлючейВариантовОтчетов
//  ИмяОтчета - Строка - Имя отчета владельца варианта отчета
//  СтароеИмяВарианта - Строка - Имя вариант отчета до переименования
//  АктуальноеИмяВарианта - Строка - Новое имя варианта отчета
//
Процедура ДобавитьИзменениеКлючей(Изменения, ИмяОтчета, СтароеИмяВарианта, АктуальноеИмяВарианта) Экспорт
	
	Изменение = Изменения.Добавить();
	
	Изменение.Отчет 				= Метаданные.Отчеты[ИмяОтчета];
	Изменение.СтароеИмяВарианта 	= СтароеИмяВарианта;
	Изменение.АктуальноеИмяВарианта = АктуальноеИмяВарианта;
	
КонецПроцедуры

// Добавляет или удаляет подсистему из размещений варианта отчета.
//
// Параметры:
//	Размещение - Соответствие из КлючИЗначение - настройки размещения варианта отчета в разделах (подсистемах), где:
//             * Ключ - ОбъектМетаданных - подсистема, в которой размещается отчет или вариант отчета.
//             * Значение - Строка - настройки размещения в подсистеме (группе) - "", "Важный", "СмТакже".
//	Действие - Строка - "Удалить" или "Вставить"
//	ИмяПодсистемы - Строка - имя подсистемы
//		подчиненные подсистемы разделяются ".",	служебные слова "Подсистема" или "Подсистемы" указывать не нужно.
//
Процедура ИзменитьРазмещениеВариантаОтчета(Размещение, Действие, ИмяПодсистемы) Экспорт
	
	Подсистема = ОбщегоНазначенияУТ.ПодсистемаПоИмени(ИмяПодсистемы);
	Если Подсистема = Неопределено Тогда
		Возврат; // нет такой подсистемы в метаданных
	КонецЕсли;
	
	Если Действие = "Удалить" Тогда
		Размещение.Удалить(Подсистема);
	ИначеЕсли Действие = "Вставить" Тогда
		Размещение.Вставить(Подсистема);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область КомандыПодменюОтчеты

#Область ВзаимодействияПоКонтакту

// Добавляет команду отчета в список команд.
// 
// Параметры:
// Параметры:
//  КомандыОтчетов - ТаблицаЗначений - таблица команд для вывода в подменю, где:
//   * Идентификатор - Строка   - идентификатор команды.
//   * Представление - Строка   - представление команды в форме.
//   * Важность      - Строка   - суффикс группы в подменю, в которой следует вывести эту команду.
//                                Допустимо использовать: "Важное", "Обычное" и "СмТакже".
//   * Порядок       - Число    - порядок размещения команды в группе. Используется для настройки под конкретное
//                                рабочее место.
//   * Картинка      - Картинка - картинка команды.
//   * СочетаниеКлавиш - СочетаниеКлавиш - сочетание клавиш для быстрого вызова команды.
//   * ТипПараметра - ОписаниеТипов - типы объектов, для которых предназначена эта команда.
//   * ВидимостьВФормах    - Строка - имена форм через запятую, в которых должна отображаться команда.
//                                    Используется когда состав команд отличается для различных форм.
//   * ФункциональныеОпции - Строка - имена функциональных опций через запятую, определяющих видимость команды.
//   * УсловияВидимости    - Массив - определяет видимость команды в зависимости от контекста.
//                                    Для регистрации условий следует использовать процедуру
//                                    ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды().
//                                    Условия объединяются по "И".
//   * ИзменяетВыбранныеОбъекты - Булево - определяет доступность команды в ситуации,
//                                         когда у пользователя нет прав на изменение объекта.
//                                         Если Истина, то в описанной выше ситуации кнопка будет недоступна.
//                                         Необязательный. Значение по умолчанию: Ложь.
//   * МножественныйВыбор - Булево
//                        - Неопределено - если Истина, то команда поддерживает множественный выбор.
//                                         В этом случае в параметре выполнения будет передан список ссылок.
//                                         Необязательный. Значение по умолчанию: Истина.
//   * РежимЗаписи - Строка - действия, связанные с записью объекта, которые выполняются перед обработчиком команды, где:
//                 "НеЗаписывать" - объект не записывается, а в параметрах обработчика вместо ссылок передается
//                                  вся форма. В этом режиме рекомендуется работать напрямую с формой,
//                                  которая передается в структуре 2 параметра обработчика команды.
//                 "ЗаписыватьТолькоНовые" - записывать новые объекты.
//                 "Записывать"            - записывать новые и модифицированные объекты.
//                 "Проводить"             - проводить документы.
//                 Перед записью и проведением у пользователя запрашивается подтверждение.
//                 Необязательный. Значение по умолчанию: "Записывать".
//   * ТребуетсяРаботаСФайлами - Булево - если Истина, то в веб-клиенте предлагается
//                                        установить расширение для работы с 1С:Предприятием.
//                                        Необязательный. Значение по умолчанию: Ложь.
//   * Менеджер - Строка - полное имя объекта метаданных, отвечающего за выполнение команды.
//                         Например, "Отчет._ДемоКнигаПокупок".
//   * ИмяФормы - Строка - имя формы, которую требуется открыть или получить для выполнения команды.
//                         Если Обработчик не указан, то у формы вызывается метод "Открыть".
//   * КлючВарианта - Строка - имя варианта отчета, открываемого при выполнении команды.
//   * ИмяПараметраФормы - Строка - имя параметра формы, в который следует передать ссылку или массив ссылок.
//   * ПараметрыФормы - Неопределено
//                    - Структура - параметры формы, указанной в ИмяФормы.
//   * Обработчик - Строка - описание процедуры, обрабатывающей основное действие команды.
//                  Формат "<ИмяОбщегоМодуля>.<ИмяПроцедуры>" используется когда процедура размещена в общем модуле.
//                  Формат "<ИмяПроцедуры>" используется в следующих случаях:
//                  1) если ИмяФормы заполнено то в модуле указанной формы ожидается клиентская процедура,
//                  2) если ИмяФормы не заполнено то в модуле менеджера этого объекта ожидается серверная процедура.
//   * ДополнительныеПараметры - Структура - параметры обработчика, указанного в Обработчик.
//
// Возвращаемое значение:
//  СтрокаТаблицыЗначений - 
Функция ДобавитьКомандуВзаимодействияПоКонтакту(КомандыОтчетов) Экспорт

	Если ПравоДоступа("Просмотр", Метаданные.ЖурналыДокументов.Взаимодействия) Тогда
		
		КомандаОтчет = КомандыОтчетов.Добавить();
		КомандаОтчет.Обработчик                  = "МенюОтчетыУТКлиент.ВзаимодействияПоКонтакту";
		КомандаОтчет.Менеджер                    = Метаданные.ЖурналыДокументов.Взаимодействия.Формы.ФормаСпискаПараметрическая.ПолноеИмя();
		КомандаОтчет.Представление               = НСтр("ru = 'Взаимодействия'");
		КомандаОтчет.МножественныйВыбор          = Ложь;
		КомандаОтчет.Важность                    = "СмТакже";
		КомандаОтчет.ФункциональныеОпции         = "ИспользоватьПочтовыйКлиент";
		Возврат КомандаОтчет;
		
	КонецЕсли;

	Возврат Неопределено;

КонецФункции

#КонецОбласти

#Область СегментыПартнера

// Добавляет команду отчета в список команд.
// 
// Параметры:
// Параметры:
//  КомандыОтчетов - ТаблицаЗначений - таблица команд для вывода в подменю, где:
//   * Идентификатор - Строка   - идентификатор команды.
//   * Представление - Строка   - представление команды в форме.
//   * Важность      - Строка   - суффикс группы в подменю, в которой следует вывести эту команду.
//                                Допустимо использовать: "Важное", "Обычное" и "СмТакже".
//   * Порядок       - Число    - порядок размещения команды в группе. Используется для настройки под конкретное
//                                рабочее место.
//   * Картинка      - Картинка - картинка команды.
//   * СочетаниеКлавиш - СочетаниеКлавиш - сочетание клавиш для быстрого вызова команды.
//   * ТипПараметра - ОписаниеТипов - типы объектов, для которых предназначена эта команда.
//   * ВидимостьВФормах    - Строка - имена форм через запятую, в которых должна отображаться команда.
//                                    Используется когда состав команд отличается для различных форм.
//   * ФункциональныеОпции - Строка - имена функциональных опций через запятую, определяющих видимость команды.
//   * УсловияВидимости    - Массив - определяет видимость команды в зависимости от контекста.
//                                    Для регистрации условий следует использовать процедуру
//                                    ПодключаемыеКоманды.ДобавитьУсловиеВидимостиКоманды().
//                                    Условия объединяются по "И".
//   * ИзменяетВыбранныеОбъекты - Булево - определяет доступность команды в ситуации,
//                                         когда у пользователя нет прав на изменение объекта.
//                                         Если Истина, то в описанной выше ситуации кнопка будет недоступна.
//                                         Необязательный. Значение по умолчанию: Ложь.
//   * МножественныйВыбор - Булево
//                        - Неопределено - если Истина, то команда поддерживает множественный выбор.
//                                         В этом случае в параметре выполнения будет передан список ссылок.
//                                         Необязательный. Значение по умолчанию: Истина.
//   * РежимЗаписи - Строка - действия, связанные с записью объекта, которые выполняются перед обработчиком команды, где:
//                 "НеЗаписывать" - объект не записывается, а в параметрах обработчика вместо ссылок передается
//                                  вся форма. В этом режиме рекомендуется работать напрямую с формой,
//                                  которая передается в структуре 2 параметра обработчика команды.
//                 "ЗаписыватьТолькоНовые" - записывать новые объекты.
//                 "Записывать"            - записывать новые и модифицированные объекты.
//                 "Проводить"             - проводить документы.
//                 Перед записью и проведением у пользователя запрашивается подтверждение.
//                 Необязательный. Значение по умолчанию: "Записывать".
//   * ТребуетсяРаботаСФайлами - Булево - если Истина, то в веб-клиенте предлагается
//                                        установить расширение для работы с 1С:Предприятием.
//                                        Необязательный. Значение по умолчанию: Ложь.
//   * Менеджер - Строка - полное имя объекта метаданных, отвечающего за выполнение команды.
//                         Например, "Отчет._ДемоКнигаПокупок".
//   * ИмяФормы - Строка - имя формы, которую требуется открыть или получить для выполнения команды.
//                         Если Обработчик не указан, то у формы вызывается метод "Открыть".
//   * КлючВарианта - Строка - имя варианта отчета, открываемого при выполнении команды.
//   * ИмяПараметраФормы - Строка - имя параметра формы, в который следует передать ссылку или массив ссылок.
//   * ПараметрыФормы - Неопределено
//                    - Структура - параметры формы, указанной в ИмяФормы.
//   * Обработчик - Строка - описание процедуры, обрабатывающей основное действие команды.
//                  Формат "<ИмяОбщегоМодуля>.<ИмяПроцедуры>" используется когда процедура размещена в общем модуле.
//                  Формат "<ИмяПроцедуры>" используется в следующих случаях:
//                  1) если ИмяФормы заполнено то в модуле указанной формы ожидается клиентская процедура,
//                  2) если ИмяФормы не заполнено то в модуле менеджера этого объекта ожидается серверная процедура.
//   * ДополнительныеПараметры - Структура - параметры обработчика, указанного в Обработчик.
//
//
// Возвращаемое значение:
//  СтрокаТаблицыЗначений -
Функция ДобавитьКомандуСегментыПартнера(КомандыОтчетов) Экспорт

	Если ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ПартнерыСегмента) Тогда
		
		КомандаОтчет = КомандыОтчетов.Добавить();
		КомандаОтчет.Обработчик                  = "МенюОтчетыУТКлиент.СегментыПартнера";
		КомандаОтчет.Менеджер                    = Метаданные.РегистрыСведений.ПартнерыСегмента.Формы.СегментыПартнераПараметрическая.ПолноеИмя();
		КомандаОтчет.Представление               = НСтр("ru = 'Сегменты'");
		КомандаОтчет.МножественныйВыбор          = Ложь;
		КомандаОтчет.Важность                    = "СмТакже";
		КомандаОтчет.ФункциональныеОпции         = "ИспользоватьСегментыПартнеров";
		
		Возврат КомандаОтчет;
		
	КонецЕсли;

	Возврат Неопределено;

КонецФункции

#КонецОбласти

#КонецОбласти
