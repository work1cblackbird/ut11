///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Подсистема "ИнтернетПоддержкаПользователей.ОблачныйАрхив20".
// ОбщийМодуль.ОблачныйАрхив20ВызовСервера.
//
// Серверные процедуры и функции облачного архива для вызова из клиента:
//  - управление блокировкой сеансов;
//  - методы автоматического резервное копирование;
//  - обработки событий Библиотеки стандартных подсистем.
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область УправлениеБлокировкойСеансов

// Устанавливает блокировку сеансов на 15 минут от текущей даты сервера и времени смещения.
//
// Параметры:
//  СекундДоРезервногоКопирования - Число - количество секунд, которое необходимо учесть при определении даты окончания
//    блокировки.
//
Процедура УстановитьБлокировкуСоединений(Знач СекундДоРезервногоКопирования = 0) Экспорт
	
	//@skip-check use-non-recommended-method
	ТекущаяДата = ТекущаяДата();	// АПК:143 Блокировка устанавливается в часовом поясе сервера
	Блокировка  = ПолучитьБлокировкуСеансов();
	
	// Проверка на ранее установленную блокировку
	ДатаНачалаБлокировки    = ТекущаяДата;
	ДатаОкончанияБлокировки = ТекущаяДата + Мин(СекундДоРезервногоКопирования, 0) + 900;
	Если Блокировка.Установлена
		И Блокировка.КодРазрешения = КодРазрешенияБлокировкиСоединений()
		И Блокировка.Начало <= ТекущаяДата
		И Блокировка.Конец > ТекущаяДата Тогда
		
		Если Блокировка.Конец + 60 > ДатаОкончанияБлокировки Тогда
			Возврат;
		Иначе
			ДатаНачалаБлокировки = Блокировка.Начало;
		КонецЕсли;
		
	КонецЕсли;
	
	Блокировка = Новый БлокировкаСеансов();
	Блокировка.Установлена   = Истина;
	Блокировка.Начало        = ДатаНачалаБлокировки;
	Блокировка.Конец         = ДатаОкончанияБлокировки;
	Блокировка.КодРазрешения = КодРазрешенияБлокировкиСоединений();
	Блокировка.Сообщение     = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Выполняется резервное копирование информационной базы.
			|Планируемое время завершения %1 (по времени %2).'"),
		Формат(Блокировка.Конец, "ДЛФ=;"),
		ЧасовойПояс());
	
	ОблачныйАрхив20.ВыполнитьУстановкуБлокировкиСеансов(Блокировка);
	
КонецПроцедуры

// Продлевает время завершения блокировки сеансов на 15 минут.
//
Процедура ПродлитьВремяЗавершенияБлокировкиСоединений() Экспорт
	
	//@skip-check use-non-recommended-method
	ТекущаяДата = ТекущаяДата();	// АПК:143 Блокировка устанавливается в часовом поясе сервера.
	Блокировка  = ПолучитьБлокировкуСеансов();
	
	Блокировка = Новый БлокировкаСеансов();
	Блокировка.Установлена   = Истина;
	Блокировка.Конец         = ТекущаяДата + 900;
	Блокировка.КодРазрешения = КодРазрешенияБлокировкиСоединений();
	Блокировка.Сообщение     = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Выполняется резервное копирование информационной базы.
			|Планируемое время завершения %1 (по времени %2).'"),
		Формат(Блокировка.Конец, "ДЛФ=;"),
		ЧасовойПояс());
	
	ОблачныйАрхив20.ВыполнитьУстановкуБлокировкиСеансов(Блокировка);
	
КонецПроцедуры

// Возвращает строковый идентификатор, используемый в качестве кода разрешения для блокировки сеансов.
//
// Возвращаемое значение:
//  Строка
//
Функция КодРазрешенияБлокировкиСоединений()
	
	Возврат "РезервноеКопированиеОблачныйАрхив";
	
КонецФункции

#КонецОбласти

#Область ИнтеграцияСБиблиотекойСтандартныхПодсистем

// Возвращает режим работы облачного архива при изменении варианта хранения резервных копий.
//
// Параметры:
//  ХранениеРезервныхКопий - Строка -
//    см. ОблачныйАрхив20Клиент.Обслуживание_ХранениеРезервныхКопийПриИзменении.ХранениеРезервныхКопий
//
// Возвращаемое значение:
//  Структура:
//    * СтраницаРезервногоКопированияИВосстановления - Строка - имя страницы группы резервного копирования, обработки
//        панели администрирования БСП, соответствующий активной подсистеме резервного копирования.
//    * СтраницаСостоянияОблачногоАрхива - Строка - имя страницы соответствующий статусу работы подсистемы Облачного
//        архива.
//    * ОблачныйАрхивРаботает - Неопределено - проверка работы облачного не выполнялась, так как текущий режим
//        резервного копирования установлен как ОблачныйАрхив20.
//                            - Булево - Истина, если облачный архив продолжает работать не зависимо от установленного
//        способа резервного копирования.
//
Функция ПриИзмененииХраненияРезервныхКопий(Знач ХранениеРезервныхКопий) Экспорт
	
	Возврат ОблачныйАрхив20.ПриИзмененииХраненияРезервныхКопий(ХранениеРезервныхКопий);
	
КонецФункции

#КонецОбласти

#Область АвтоматическоеРезервноеКопирование

// Запускает длительную операцию обновления времени до автоматического резервного копирования.
//
// Возвращаемое значение:
//  см. ОблачныйАрхив20.ОбновитьВремяДоАвтоматическогоРезервногоКопированияВФоне
//
Функция ОбновитьВремяДоАвтоматическогоРезервногоКопированияВФоне() Экспорт
	
	Возврат ОблачныйАрхив20.ОбновитьВремяДоАвтоматическогоРезервногоКопированияВФоне();
	
КонецФункции

// Выполняет проверку на изменение настроек резервного копирования.
//
// Параметры:
//  ДатаОбновленияНастроек - Дата - дата обновления настроек, сохраненная в параметрах приложения.
//  АвтоАрхивированиеВключено - Булево - сохраненный признак в параметрах клиента статуса активности автоматического
//    резервного копирования.
//
// Возвращаемое значение:
//  Структура:
//    * ОблачныйАрхивПодключен - Булево - Истина, если выполнено подключение облачного архива.
//    * НастройкиИзменены - Булево - Истина, если требуется запустить обновление времени резервного копирования.
//    * АвтоАрхивированиеВключено - Булево - Истина, если автоматическое резервное копирование включено и работает.
//    * ЗавершатьРаботуПользователей - Булево - признак принудительного завершения работы пользователей при
//        автоматическом резервном копировании информационной базы.
//
Функция ВыполнитьКонтрольНеобходимостиВыполнитьОбновлениеВремени(
	Знач ДатаОбновленияНастроек,
	Знач АвтоАрхивированиеВключено) Экспорт
	
	ПараметрыАрхивирования = Неопределено;	// см. ОблачныйАрхив20.СохраненныеПараметрыРезервногоКопирования
	
	ОблачныйАрхивПодключен       = ОблачныйАрхив20.ПодключениеОблачногоАрхиваВыполненоСлужебный(ПараметрыАрхивирования);
	ТекАвтоАрхивированиеВключено = ОблачныйАрхивПодключен
		И ПараметрыАрхивирования.АвтоматическоеРезервноеКопированиеВключено
		И ПараметрыАрхивирования.РаботаРезервногоКопированияЗаблокирована = Ложь;
	
	Результат = Новый Структура();
	Результат.Вставить("ОблачныйАрхивПодключен"      , ОблачныйАрхивПодключен);
	Результат.Вставить("АвтоАрхивированиеВключено"   , ТекАвтоАрхивированиеВключено);
	Результат.Вставить("НастройкиИзменены"           , (Не АвтоАрхивированиеВключено И ТекАвтоАрхивированиеВключено)
		Или ПараметрыАрхивирования.ДатаОбновленияНастроек <> ДатаОбновленияНастроек);
	Результат.Вставить("ЗавершатьРаботуПользователей", ПараметрыАрхивирования.ЗавершатьРаботуПользователей);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти