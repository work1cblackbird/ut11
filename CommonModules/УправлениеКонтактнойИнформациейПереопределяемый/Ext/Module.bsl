///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2024, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Изменяет, добавляет, удаляет стандартные команды контактной информации, отображаемые в справочниках и документах,
// Вкл./Выкл. отображение иконок контактной информации слева от заголовка вида контактной информации,
// Изменяет положение кнопки Добавить дополнительное поле контактной информации,
// Изменяет ширину поля комментарий для полей контактной информации с типами Телефон, АдресЭлектроннойПочты, Skype,
// ВебСтраница, Факс
//
// Параметры:
//  Настройки - Структура:
//    * ОтображатьИконки - Булево
//    * ОписаниеКоманд - см. УправлениеКонтактнойИнформацией.ОписаниеКоманд
//    * ПоложениеКнопкиДобавить - ГоризонтальноеПоложениеЭлемента - допустимые значения: Лево, Право, Авто.
//                                                                  Лево - Безусловное положение слева.
//                                                                  Право - Безусловное положение слева.
//                                                                  Авто - Располагается справа, когда контактная
//                                                                         информация в виде поля. Располагается слева,
//                                                                         когда контактная информация в виде
//                                                                         гиперссылки, или ни одно поле контактной
//                                                                         информации не выведено в группе.
//    * ШиринаПоляКомментарий - Число - ширина поля комментарий для полей контактной информации с типами Телефон, АдресЭлектроннойПочты,
//                                      Skype, ВебСтраница, Факс. Данный параметр устанавливается только когда группа
//                                      контактной информации ограничена по ширине.
//
//  Пример:
//     Настройки.ОтображатьИконки = Истина;
//     Настройки.ШиринаПоляКомментарий = 10;
//     Настройки.ПоложениеКнопкиДобавить = ГоризонтальноеПоложениеЭлемента.Авто;
//
//     Адрес = Перечисления.ТипыКонтактнойИнформации.Адрес;
//     Настройки.ОписаниеКоманд[Адрес].ЗапланироватьВстречу.Заголовок  = НСтр("ru='Встреча'");
//     Настройки.ОписаниеКоманд[Адрес].ЗапланироватьВстречу.Подсказка  = НСтр("ru='Создать событие встречи'");
//     Настройки.ОписаниеКоманд[Адрес].ЗапланироватьВстречу.Картинка   = БиблиотекаКартинок.ЗапланированноеВзаимодействие;
//     Настройки.ОписаниеКоманд[Адрес].ЗапланироватьВстречу.Действие   = "_ДемоСтандартныеПодсистемыКлиент.ОткрытьФормуДокументаВстреча";
//    
//     _ДемоФактическийАдресОрганизации = УправлениеКонтактнойИнформацией.ВидКонтактнойИнформацииПоИмени("_ДемоФактическийАдресОрганизации");
//      Настройки.ОписаниеКоманд[_ДемоФактическийАдресОрганизации] = 
//    	ОбщегоНазначения.СкопироватьРекурсивно(УправлениеКонтактнойИнформацией.КомандыТипаКонтактнойИнформации(Перечисления.ТипыКонтактнойИнформации.Адрес));
//      Настройки.ОписаниеКоманд[_ДемоФактическийАдресОрганизации].ЗапланироватьВстречу.Действие = ""; // Отключение действия команды для вида
//
//   Процедурам, указанных в свойстве Действие, передаются 2 параметра:
//       КонтактнаяИнформация - Структура:
//         * Представление - Строка
//         * Значение      - Строка
//         * Тип           - ПеречислениеСсылка.ТипыКонтактнойИнформации
//         * Вид           - СправочникСсылка.ВидыКонтактнойИнформации
//       ДополнительныеПараметры - Структура:        
//         * ВладелецКонтактнойИнформации - ОпределяемыйТип.ВладелецКонтактнойИнформации.
//         * Форма - ФормаКлиентскогоПриложения - форма объекта-владельца, предназначенная для вывода контактной информации.
//
//   Пример: 
//     Процедура ОткрытьФормуДокументаВстреча(КонтактнаяИнформация, ДополнительныеПараметры) Экспорт
//		  ЗначенияЗаполнения = Новый Структура;
//		  ЗначенияЗаполнения.Вставить("МестоПроведенияВстречи", КонтактнаяИнформация.Представление);
//		  Если ТипЗнч(ДополнительныеПараметры.ВладелецКонтактнойИнформации) = Тип("ДокументСсылка._ДемоЗаказПокупателя") Тогда
//		    	ЗначенияЗаполнения.Вставить("Предмет", ДополнительныеПараметры.ВладелецКонтактнойИнформации);
//		    	ЗначенияЗаполнения.Вставить("Контакт", "");
//		  Иначе
//		    	ЗначенияЗаполнения.Вставить("Контакт", ДополнительныеПараметры.ВладелецКонтактнойИнформации);
//		    	ЗначенияЗаполнения.Вставить("Предмет", "");
//		  КонецЕсли;
//
//		  ОткрытьФорму("Документ.Встреча.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения),
//			ДополнительныеПараметры.Форма);
//	   КонецПроцедуры
//
Процедура ПриОпределенииНастроек(Настройки) Экспорт

	
    
КонецПроцедуры

// Получает наименования видов контактной информации на разных языках.
//
// Параметры:
//  Наименования - Соответствие из КлючИЗначение - представление вида контактной информации на переданном языке:
//     * Ключ     - Строка - имя вида контактной информации. Например, "_ДемоАдресПартнера".
//     * Значение - Строка - наименование вида контактной информации для переданного кода языка.
//  КодЯзыка - Строка - код языка. Например, "en".
//
// Пример:
//  Наименования["_ДемоАдресПартнера"] = НСтр("ru='Адрес'; en='Address';", КодЯзыка);
//
Процедура ПриПолученииНаименованийВидовКонтактнойИнформации(Наименования, КодЯзыка) Экспорт
	
	Наименования["СправочникКонтактныеЛицаПартнеров"] = НСтр("ru='Контактная информация справочника ""Контактные лица партнеров""';", КодЯзыка);
	Наименования["МобильныйТелефонКонтактногоЛица"] = НСтр("ru='Мобильный телефон';", КодЯзыка);
	Наименования["ТелефонКонтактногоЛица"] = НСтр("ru='Телефон';", КодЯзыка);
	Наименования["EmailКонтактногоЛица"] = НСтр("ru='Электронная почта';", КодЯзыка);
	Наименования["СправочникКонтрагенты"] = НСтр("ru='Контактная информация справочника ""Контрагенты""';", КодЯзыка);
	Наименования["ДругаяИнформацияКонтрагенты"] = НСтр("ru='Другое (любая другая контактная информация)';", КодЯзыка);
	Наименования["МеждународныйАдресКонтрагента"] = НСтр("ru='Международный адрес для платежей (англ.)';", КодЯзыка);
	Наименования["ПочтовыйАдресКонтрагента"] = НСтр("ru='Почтовый адрес';", КодЯзыка);
	Наименования["ТелефонКонтрагента"] = НСтр("ru='Телефон';", КодЯзыка);
	Наименования["ФаксКонтрагенты"] = НСтр("ru='Факс';", КодЯзыка);
	Наименования["ФактАдресКонтрагента"] = НСтр("ru='Фактический адрес';", КодЯзыка);
	Наименования["EmailКонтрагента"] = НСтр("ru='Электронная почта';", КодЯзыка);
	Наименования["ЮрАдресКонтрагента"] = НСтр("ru='Юридический адрес';", КодЯзыка);
	Наименования["СправочникОрганизации"] = НСтр("ru='Контактная информация справочника ""Организации""';", КодЯзыка);
	Наименования["ДругаяИнформацияОрганизации"] = НСтр("ru='Другое';", КодЯзыка);
	Наименования["МеждународныйАдресОрганизации"] = НСтр("ru='Международный адрес для платежей (англ.)';", КодЯзыка);
	Наименования["ПочтовыйАдресОрганизации"] = НСтр("ru='Почтовый адрес';", КодЯзыка);
	Наименования["ТелефонОрганизации"] = НСтр("ru='Телефон';", КодЯзыка);
	Наименования["ФаксОрганизации"] = НСтр("ru='Факс';", КодЯзыка);
	Наименования["ФактАдресОрганизации"] = НСтр("ru='Фактический адрес';", КодЯзыка);
	Наименования["EmailОрганизации"] = НСтр("ru='Электронная почта';", КодЯзыка);
	Наименования["ЮрАдресОрганизации"] = НСтр("ru='Юридический адрес';", КодЯзыка);
	Наименования["СправочникПартнеры"] = НСтр("ru='Контактная информация справочника ""Партнеры""';", КодЯзыка);
	Наименования["АдресПартнера"] = НСтр("ru='Адрес';", КодЯзыка);
	Наименования["ТелефонПартнера"] = НСтр("ru='Телефон';", КодЯзыка);
	Наименования["EmailПартнера"] = НСтр("ru='Электронная почта';", КодЯзыка);
	Наименования["СправочникПользователи"] = НСтр("ru='Контактная информация справочника ""Пользователи""';", КодЯзыка);
	Наименования["ТелефонПользователя"] = НСтр("ru='Телефон';", КодЯзыка);
	Наименования["EmailПользователя"] = НСтр("ru='Электронная почта';", КодЯзыка);
	Наименования["СправочникРегистрацииВНалоговомОргане"] = НСтр("ru='Контактная информация справочника ""Регистрации в налоговом органе""';", КодЯзыка);
	Наименования["АдресНалоговогоОргана"] = НСтр("ru='Адрес налогового органа';", КодЯзыка);
	Наименования["ТелефонНалоговогоОргана"] = НСтр("ru='Телефон налогового органа';", КодЯзыка);
	Наименования["ФактАдресОбособленногоПодразделения"] = НСтр("ru='Фактический адрес обособленного подразделения';", КодЯзыка);
	Наименования["СправочникСклады"] = НСтр("ru='Контактная информация справочника ""Склады""';", КодЯзыка);
	Наименования["АдресСклада"] = НСтр("ru='Адрес склада';", КодЯзыка);
	Наименования["ТелефонСклада"] = НСтр("ru='Телефон склада';", КодЯзыка);
	Наименования["СправочникТорговыеТочки"] = НСтр("ru='Контактная информация справочника ""Торговые точки""';", КодЯзыка);
	Наименования["АдресТорговойТочки"] = НСтр("ru='Адрес';", КодЯзыка);
	Наименования["СправочникФизическиеЛица"] = НСтр("ru='Контактная информация справочника ""Физические лица""';", КодЯзыка);
	Наименования["АдресДляИнформированияФизическиеЛица"] = НСтр("ru='Адрес для информирования';", КодЯзыка);
	Наименования["АдресЗаПределамиРФФизическиеЛица"] = НСтр("ru='Иностранный адрес';", КодЯзыка);
	Наименования["АдресМестаПроживанияФизическиеЛица"] = НСтр("ru='Адрес места проживания';", КодЯзыка);
	Наименования["АдресПоПропискеФизическиеЛица"] = НСтр("ru='Адрес по прописке';", КодЯзыка);
	Наименования["ТелефонДомашнийФизическиеЛица"] = НСтр("ru='Домашний телефон';", КодЯзыка);
	Наименования["ТелефонМобильныйФизическиеЛица"] = НСтр("ru='Мобильный телефон';", КодЯзыка);
	Наименования["ТелефонРабочийФизическиеЛица"] = НСтр("ru='Рабочий телефон';", КодЯзыка);
	Наименования["EMailФизическиеЛица"] = НСтр("ru='Электронная почта';", КодЯзыка);
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов
// 
// Параметры:
//  Настройки - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов.Настройки
//
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов
//
// Параметры:
//  КодыЯзыков - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.КодыЯзыков
//  Элементы   - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.Элементы
//  ТабличныеЧасти - см. ОбновлениеИнформационнойБазыПереопределяемый.ПриНачальномЗаполненииЭлементов.ТабличныеЧасти
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "АдресТорговойТочки";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникТорговыеТочки;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Адрес'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "Адрес";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "МобильныйТелефонКонтактногоЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Мобильный телефон'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "МобильныйТелефон";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ТелефонСДобавочнымНомером = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТелефонКонтактногоЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Телефон'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "Телефон";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ТелефонСДобавочнымНомером = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "EmailКонтактногоЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтактныеЛицаПартнеров;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Электронная почта'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ЗапретитьРедактированиеПользователем = Ложь;
	Элемент.ИдентификаторДляФормул = "ЭлектроннаяПочта";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДругаяИнформацияКонтрагенты";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Другое (любая другая контактная информация)'", КодыЯзыков); // @НСтр-2
	Элемент.ВидПоляДругое = "МногострочноеШирокое";
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ИдентификаторДляФормул = "ДругоеЛюбаяДругаяКонтактнаяИнформация";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Другое;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "МеждународныйАдресКонтрагента";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Международный адрес для платежей (англ.)'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "МеждународныйАдресДляПлатежейАнгл";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ТелефонСДобавочнымНомером = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПочтовыйАдресКонтрагента";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Почтовый адрес'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "ПочтовыйАдрес";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТелефонКонтрагента";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Телефон'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "Телефон";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ТелефонСДобавочнымНомером = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ФаксКонтрагенты";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Факс'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "Факс";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Факс;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ФактАдресКонтрагента";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Фактический адрес'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "ФактическийАдрес";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "EmailКонтрагента";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Электронная почта'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ИдентификаторДляФормул = "ЭлектроннаяПочта";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЮрАдресКонтрагента";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникКонтрагенты;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Юридический адрес'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "ЮридическийАдрес";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДругаяИнформацияОрганизации";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Другое (любая другая контактная информация)'", КодыЯзыков); // @НСтр-2
	Элемент.ВидПоляДругое = "МногострочноеШирокое";
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ИдентификаторДляФормул = "Другое";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Другое;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "МеждународныйАдресОрганизации";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Международный адрес для платежей (англ.)'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "МеждународныйАдресДляПлатежейАнгл";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ТелефонСДобавочнымНомером = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПочтовыйАдресОрганизации";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Почтовый адрес'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "ПочтовыйАдрес";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТелефонОрганизации";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Телефон'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "Телефон";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ТелефонСДобавочнымНомером = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ФаксОрганизации";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Факс'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "Факс";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Факс;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ФактАдресОрганизации";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Фактический адрес'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "ФактическийАдрес";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "EmailОрганизации";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Электронная почта'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ИдентификаторДляФормул = "ЭлектроннаяПочта";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЮрАдресОрганизации";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникОрганизации;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Юридический адрес'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "ЮридическийАдрес";
	Элемент.Используется = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.ТолькоНациональныйАдрес = Истина;
	Элемент.ХранитьИсториюИзменений = Истина;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "АдресПартнера";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникПартнеры;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Адрес'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "Адрес";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТелефонПартнера";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникПартнеры;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Телефон'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "Телефон";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ТелефонСДобавочнымНомером = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "EmailПартнера";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникПартнеры;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Электронная почта'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ИдентификаторДляФормул = "ЭлектроннаяПочта";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "АдресНалоговогоОргана";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникРегистрацииВНалоговомОргане;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Адрес налогового органа'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "АдресНалоговогоОргана";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТелефонНалоговогоОргана";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникРегистрацииВНалоговомОргане;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Телефон налогового органа'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "ТелефонНалоговогоОргана";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ТелефонСДобавочнымНомером = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ФактАдресОбособленногоПодразделения";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникРегистрацииВНалоговомОргане;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Фактический адрес обособленного подразделения'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "ФактическийАдресОбособленногоПодразделения";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "АдресСклада";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникСклады;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Адрес склада'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "АдресСклада";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТелефонСклада";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникСклады;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Телефон склада'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "ТелефонСклада";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ТелефонСДобавочнымНомером = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "АдресДляИнформированияФизическиеЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Адрес для информирования'", КодыЯзыков); // @НСтр-2
	Элемент.ВключатьСтрануВПредставление = Истина;
	Элемент.ВидРедактирования = "Диалог";
	Элемент.ИдентификаторДляФормул = "АдресДляИнформирования";
	Элемент.ИмяПредопределенногоВида = "АдресДляИнформированияФизическиеЛица";
	Элемент.Используется = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "АдресМестаПроживанияФизическиеЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Адрес места проживания'", КодыЯзыков); // @НСтр-2
	Элемент.ВключатьСтрануВПредставление = Истина;
	Элемент.ВидРедактирования = "Диалог";
	Элемент.ИдентификаторДляФормул = "АдресМестаПроживания";
	Элемент.ИмяПредопределенногоВида = "АдресМестаПроживанияФизическиеЛица";
	Элемент.Используется = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.ТолькоНациональныйАдрес = Истина;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "АдресПоПропискеФизическиеЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Адрес по прописке'", КодыЯзыков); // @НСтр-2
	Элемент.ВключатьСтрануВПредставление = Истина;
	Элемент.ВидРедактирования = "Диалог";
	Элемент.ИдентификаторДляФормул = "АдресПоПрописке";
	Элемент.ИмяПредопределенногоВида = "АдресПоПропискеФизическиеЛица";
	Элемент.Используется = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	Элемент.ТолькоНациональныйАдрес = Истина;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТелефонДомашнийФизическиеЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Домашний телефон'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "ДомашнийТелефон";
	Элемент.ИмяПредопределенногоВида = "ТелефонДомашнийФизическиеЛица";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ТелефонСДобавочнымНомером = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "АдресЗаПределамиРФФизическиеЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Иностранный адрес'", КодыЯзыков); // @НСтр-2
	Элемент.ВключатьСтрануВПредставление = Истина;
	Элемент.ВидРедактирования = "Диалог";
	Элемент.ИдентификаторДляФормул = "ИностранныйАдрес";
	Элемент.ИмяПредопределенногоВида = "АдресЗаПределамиРФФизическиеЛица";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТелефонМобильныйФизическиеЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Мобильный телефон'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "МобильныйТелефон";
	Элемент.ИмяПредопределенногоВида = "ТелефонМобильныйФизическиеЛица";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ТелефонСДобавочнымНомером = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТелефонРабочийФизическиеЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Рабочий телефон'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВводаИДиалог";
	Элемент.ИдентификаторДляФормул = "РабочийТелефон";
	Элемент.ИмяПредопределенногоВида = "ТелефонРабочийФизическиеЛица";
	Элемент.Используется = Истина;
	Элемент.РазрешитьВводНесколькихЗначений = Истина;
	Элемент.ТелефонСДобавочнымНомером = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;

	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "EMailФизическиеЛица";
	Элемент.Родитель = Справочники.ВидыКонтактнойИнформации.СправочникФизическиеЛица;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Электронная почта'", КодыЯзыков); // @НСтр-2
	Элемент.ВидРедактирования = "ПолеВвода";
	Элемент.ИдентификаторДляФормул = "ЭлектроннаяПочта";
	Элемент.ИмяПредопределенногоВида = "EMailФизическиеЛица";
	Элемент.Используется = Истина;
	Элемент.ПроверятьКорректность = Истина;
	Элемент.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
КонецПроцедуры

// Смотри также ОбновлениеИнформационнойБазыПереопределяемый.ПриНастройкеНачальногоЗаполненияЭлементов
//
// Параметры:
//  Объект                  - СправочникОбъект.РолиИсполнителей - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения объекта.
//  ДополнительныеПараметры - Структура:
//   * ПредопределенныеДанные - ТаблицаЗначений - данные заполненные в процедуре ПриНачальномЗаполненииЭлементов.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

#КонецОбласти
