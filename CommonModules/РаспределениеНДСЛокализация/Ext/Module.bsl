#Область ПрограммныйИнтерфейс

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат;
КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	//++ Локализация
	КомандаОтчет = Отчеты.АнализРаспределенияНДС.ДобавитьКомандуОтчета(КомандыОтчетов);
	Если КомандаОтчет <> Неопределено Тогда
		КомандаОтчет.ВидимостьВФормах = "ФормаДокумента";
	КонецЕсли;
	//-- Локализация
	Возврат;
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация
	//-- Локализация
	Возврат;
КонецПроцедуры

#КонецОбласти

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

#КонецОбласти


#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.РаспределениеНДС - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.РаспределениеНДС - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
		
	// Если организация зарегистрирована в последние 10 рабочих дней квартала
	// налоговый период по НДС является расширенным (с даты регистрации по конец следующего квартала).
	// Распределение НДС должно быть произведено с учетом выручки за налоговый весь период.
	// В периоде регистрации ввод документа запрещен.
	КонецКвартала = КонецДня(КонецКвартала(Объект.Дата));
	
	БлижайшийНалоговыйПериод = УчетНДСПереопределяемый.БлижайшийНалоговыйПериод(
		Объект.Организация,
		Объект.Дата);
		
	Если БлижайшийНалоговыйПериод.Конец <> КонецКвартала Тогда
		
		НачалоНалоговогоПериода = Формат(БлижайшийНалоговыйПериод.Начало, "ДЛФ=D");
		КонецНалоговогоПериода  = Формат(БлижайшийНалоговыйПериод.Конец, "ДЛФ=D");
		КварталРаспределения    = Месяц(БлижайшийНалоговыйПериод.Конец)/3;
		ГодРаспределения        = Формат(Год(БлижайшийНалоговыйПериод.Конец), "ЧГ=0");
		
		ШаблонСообщения = НСтр("ru='Первый налоговый период с %1 по %2. Распределение НДС производится в %3 квартале %4 года.'");
		ТекстСообщения = СтрШаблон(ШаблонСообщения,
			НачалоНалоговогоПериода,
			КонецНалоговогоПериода,
			КварталРаспределения,
			ГодРаспределения);
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
			,
			"Корректность",
			НСтр("ru = 'Дата'"),,,
			ТекстСообщения);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Объект, "Дата",, Отказ);
	КонецЕсли;
	//-- Локализация	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.РаспределениеНДС - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.РаспределениеНДС - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.РаспределениеНДС - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.РаспределениеНДС - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.РаспределениеНДС - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.РаспределениеНДС - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

#КонецОбласти

Процедура ДополнитьСоответствиеРеквизитовВыручкиНалогообложениямНДС(СоответствиеРеквизитов) Экспорт
	//++ Локализация
	СоответствиеРеквизитов.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД, "ВыручкаЕНВД");
	СоответствиеРеквизитов.Вставить(Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг, "ВыручкаНДС0СырьевыеТоварыУслуги");
	СоответствиеРеквизитов.Вставить(Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров, "ВыручкаНДС0НесырьевыеТовары");
	СоответствиеРеквизитов.Вставить(Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт, "ВыручкаНеРФ");
	СоответствиеРеквизитов.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС, "ВыручкаНеРФ");
	СоответствиеРеквизитов.Вставить(Перечисления.ТипыНалогообложенияНДС.Космос, "ВыручкаНДС0Космос");
	СоответствиеРеквизитов.Вставить(Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ, "ВыручкаНДСПроизводствоСДЦ");
	//-- Локализация
КонецПроцедуры

Процедура ДополнитьСоответствиеСтатейАналитикРасходовНалогообложениямНДС(СоответствиеРеквизитов) Экспорт
	//++ Локализация
	МассивРеквизитов = Новый Массив;
	МассивРеквизитов.Добавить("СтатьяРасходовЕНВД");
	МассивРеквизитов.Добавить("АналитикаРасходовЕНВД");
	СоответствиеРеквизитов.Вставить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД, МассивРеквизитов)
	//-- Локализация
КонецПроцедуры

// Описание
// 
// Параметры:
// 	ПараметрыВыбораСтатейИАналитик - Массив из см. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики -
// 	Объект - ДанныеФормыСтруктура -
// 	НеобходимоРаспределениеНДСПоТоварам - Булево -
Процедура ДополнитьПараметрыВыбораСтатейИАналитик(ПараметрыВыбораСтатейИАналитик, Объект, НеобходимоРаспределениеНДСПоТоварам) Экспорт
	
	#Область СтатьяРасходовЕНВД
	// Код оставлен временно, до удаления реквизитов
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным =    "Объект";
	ПараметрыВыбора.Статья = "СтатьяРасходовЕНВД";
	ПараметрыВыбора.СкрыватьСтатьюНедоступнуюПоОперации = Ложь;
	ЭтоКонецКвартала = (Месяц(Объект.Дата)%3 = 0);
	ПараметрыВыбора.ДоступностьПоОперации = 
		(НеобходимоРаспределениеНДСПоТоварам
		//++ Локализация
		И ЭтоКонецКвартала
		//-- Локализация
		ИЛИ НЕ Объект.СписатьНДСПоРасходамАктивамНаСтатьиОтражения)
		//++ Локализация
		И УчетнаяПолитика.ПлательщикЕНВД(Объект.Организация, Объект.Дата)
		//-- Локализация
		И ПолучитьФункциональнуюОпцию("ПлательщикЕНВД");
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов = "АналитикаРасходовЕНВД";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяЗатратЕНВД");
	
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходовЕНВД");
	
	ПараметрыВыбораСтатейИАналитик.Добавить(ПараметрыВыбора);
	#КонецОбласти
	
КонецПроцедуры

Процедура КорректировкаБазыПоСтрокеКРаспределению(БазаРаспределенияПоСтроке, СтрокаКРаспределению, ПрименитьПравило5Процентов) Экспорт
	
	//++ Локализация
	УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту = УчетНДСРФ.УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту(СтрокаКРаспределению.ДатаПоступленияРасходов);
	
	Если УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту Тогда
		БазаРаспределенияПоСтроке[Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт] = 0;
	Иначе
		БазаРаспределенияПоСтроке[Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров] = 0;
		БазаРаспределенияПоСтроке[Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг] = 0;
	КонецЕсли;
	
	Если ПрименитьПравило5Процентов Тогда
		
		БазаРаспределенияПоСтроке[Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС] = 
			БазаРаспределенияПоСтроке[Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС]
			+ БазаРаспределенияПоСтроке[Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС]
			+ БазаРаспределенияПоСтроке[Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД];
			
		БазаРаспределенияПоСтроке[Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС] = 0;
		БазаРаспределенияПоСтроке[Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД] = 0;
		
	КонецЕсли;
	
	Если БазаРаспределенияПоСтроке[Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт] > 0 Тогда
		БазаРаспределенияПоСтроке[Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС] = 
			БазаРаспределенияПоСтроке[Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС]
			+ БазаРаспределенияПоСтроке[Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт];
			
		БазаРаспределенияПоСтроке[Перечисления.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт] = 0;
		БазаРаспределенияПоСтроке[Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС] = 0;
		
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Распределить партии прочих расходов по базе
// 
// Параметры:
// 	ТаблицыРаспределения - Соответствие -
// 	Реквизиты - Структура - состоит в том числе из:
//		* Ссылка - ДокументСсылка -
Процедура РаспределитьПартииНДСКРаспределениюПоБазе(ТаблицыРаспределения, Реквизиты) Экспорт
	
	//++ Локализация

	// Если 
	// - распределение выполняется после 01.07.2016
	// - партия поступила ранее 01.07.2016, 
	// то распределение также необходимо выполнить на документы несыерьвого экспорта.
	РаспределятьНаВесьЭкспорт = УчетНДСРФ.УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту(Реквизиты.ПериодБазы);
	
	ПартииНДСКРаспределениюЭкспорт =
		ТаблицыРаспределения[Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт]; // ТаблицаЗначений
	РаспределитьПартииНДСКРаспределениюЭкспортПоДокументам(ПартииНДСКРаспределениюЭкспорт, Реквизиты, РаспределятьНаВесьЭкспорт);
	
	ПартииНДСКРаспределениюЭкспортСырьевыхТоваровУслуг =
		ТаблицыРаспределения[Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг];  // ТаблицаЗначений
	РаспределитьПартииНДСКРаспределениюЭкспортПоДокументам(ПартииНДСКРаспределениюЭкспортСырьевыхТоваровУслуг, Реквизиты, Ложь);
	//-- Локализация
	
КонецПроцедуры

// Распределить внеоборотные активы для экспорта сырьевых товаров и услуг
// 
// Параметры:
// 	ТаблицыРаспределения - Соответствие -
Процедура РаспределитьВнеоборотныеАктивыЭкспортСырьевыхТоваровИУслуг(ТаблицыРаспределения) Экспорт
	
	//++ Локализация
	Для Каждого СтрокаПартии Из ТаблицыРаспределения[Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг] Цикл
		Если ЗначениеЗаполнено(СтрокаПартии.ВнеоборотныйАктив) Тогда
			СтрокаПартии.КорВидДеятельностиНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС;
			СтрокаПартии.ДокументРеализации = Неопределено;
		КонецЕсли;
	КонецЦикла;
	//-- Локализация
	
КонецПроцедуры

Процедура РаспределитьНаПустуюРеализациюДляПринятияКВычету(ТаблицыРаспределения) Экспорт
	
	//++ Локализация
	Для Каждого СтрокаПартии Из ТаблицыРаспределения[Перечисления.ТипыНалогообложенияНДС.Космос] Цикл
			СтрокаПартии.ДокументРеализации = Документы.РеализацияТоваровУслуг.ПустаяСсылка();
	КонецЦикла;
	Для Каждого СтрокаПартии Из ТаблицыРаспределения[Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ] Цикл
			СтрокаПартии.ДокументРеализации = Документы.РеализацияТоваровУслуг.ПустаяСсылка();
	КонецЦикла;
	//-- Локализация
	
КонецПроцедуры

// Переопределяет начало периода получения данных, с которого выполняется распределение НДС
// 
// Параметры:
// 	НачалоПериода - Дата - Параметр, в который устанавливается начальная дата
//	Дата - Дата - Дата распределения НДС
// 	Организация - СправочникСсылка.Организации - Организация распределения НДС
//
Процедура УстановитьНачалоПериода(НачалоПериода, Знач Дата, Знач Организация) Экспорт

	//++ Локализация
	БлижайшийНалоговыйПериод = УчетНДСПереопределяемый.БлижайшийНалоговыйПериод(
		Организация,
		Дата);
	
	Если БлижайшийНалоговыйПериод.Начало <> БлижайшийНалоговыйПериод.Период Тогда
		НачалоНалоговогоПериода = БлижайшийНалоговыйПериод.Начало;
	Иначе
		НачалоНалоговогоПериода = НачалоКвартала(Дата);
	КонецЕсли;
	
	Если НачалоКвартала(Дата) < НачалоНалоговогоПериода Тогда
		НачалоПериода = НачалоКвартала(Дата);
	Иначе
		Если НачалоМесяца(Дата) = НачалоКвартала(Дата) Тогда
			// В первом месяце квартала производится распределение НДС по ОС и НМА
			// принятым к учету в этом месяце.
			// В случае расширенного налогового периода по НДС (п.2 ст.55 НК) необходимо
			// учесть ОС и НМА, приобретенные с момента регистрации до конца предыдущего квартала.
			НачалоПериода = НачалоНалоговогоПериода;
		ИначеЕсли КонецМесяца(Дата) <> КонецКвартала(Дата) Тогда
			// Во втором месяце квартала производится распределение НДС по ОС и НМА
			// принятым к учету в этом месяце. 
			// Для распределения необходимо учитывать выручку за месяц ввода в эксплуатацию.
			НачалоПериода = НачалоМесяца(Дата);
		Иначе
			НачалоПериода = НачалоНалоговогоПериода;
		КонецЕсли;
	КонецЕсли;
	//-- Локализация
	
КонецПроцедуры

// Получает данные выручки для заполнения базы НДС.
//
// Параметры:
// 	ДанныеВыручки - Структура - Параметр, в котором возвращаются данные выручки. 
// 	                            Структура с двумя ключами:
// 	                            * ВыручкаПоНалогообложениямНДС - ТаблицаЗначений - Таблица значений с колонками:
// 	                            	* НалогообложениеНДС - ПеречислениеСсылка.ТипыНалогообложенияНДС - НалогообложениеНДС
// 	                            	* Выручка - Число - Значение выручки				
// 	                            * ДокументыЭкспорт - ТаблицаЗначений - Таблица выручки в разрезе экспортных реализаций
// 	                            	* Документ - ДокументСсылка - Документ экспорт
// 	                            	* СуммаВыручки - Число - Значение выручки
// 	                            	* КорректировкаВыручки - Число - Значение корректировки выручки 
//	Дата - Дата - Дата распределения НДС
//	НачалоПериода - Дата - Начало периода, за который распределяется НДС
//  Организация - СправочникСсылка.Организации - Организация распределения НДС
// 	ДополнительныеПараметрыПолученияВыручки - Неопределено, Структура - Дополнительные параметры получения выручки.
//                                 
Процедура ПолучитьДанныеВыручки(ДанныеВыручки, Дата, НачалоПериода, Организация, ДополнительныеПараметрыПолученияВыручки) Экспорт
	
	//++ Локализация
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеОснованийСчетовФактур.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВЫБОР 
	|		КОГДА ДанныеОснованийСчетовФактур.ИсправлениеОшибок ИЛИ ДанныеОснованийСчетовФактур.КорректировкаПоСогласованиюСторон
	|			ТОГДА ДанныеОснованийСчетовФактур.КорректируемыйДокумент
	|		ИНАЧЕ ДанныеОснованийСчетовФактур.Регистратор
	|	КОНЕЦ КАК Документ,
	|	СУММА(ВЫБОР
	|		КОГДА НЕ (ДанныеОснованийСчетовФактур.ИсправлениеОшибок ИЛИ ДанныеОснованийСчетовФактур.КорректировкаПоСогласованиюСторон)
	|			ТОГДА ДанныеОснованийСчетовФактур.БазаНДСРегл 
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК Выручка,
	|	СУММА(ВЫБОР
	|		КОГДА (ДанныеОснованийСчетовФактур.ИсправлениеОшибок ИЛИ ДанныеОснованийСчетовФактур.КорректировкаПоСогласованиюСторон)
	|			ТОГДА ДанныеОснованийСчетовФактур.БазаНДСРегл 
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК КорректировкаВыручки
	|ПОМЕСТИТЬ ДокументыЭкспорт
	|ИЗ
	|	РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|ГДЕ
	|	ДанныеОснованийСчетовФактур.Период МЕЖДУ &ПериодНачало И &ПериодОкончание
	|	И ДанныеОснованийСчетовФактур.Организация В (&Организация)
	|	И ДанныеОснованийСчетовФактур.НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров),
	|														ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг))
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОснованийСчетовФактур.Организация,
	|	ДанныеОснованийСчетовФактур.НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА ДанныеОснованийСчетовФактур.ИсправлениеОшибок ИЛИ ДанныеОснованийСчетовФактур.КорректировкаПоСогласованиюСторон
	|			ТОГДА ДанныеОснованийСчетовФактур.КорректируемыйДокумент
	|		ИНАЧЕ ДанныеОснованийСчетовФактур.Регистратор
	|	КОНЕЦ
	|;
	|
	|///////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанных.НалогообложениеНДС КАК НалогообложениеНДС,
	|	СУММА(ТаблицаДанных.Выручка)     КАК Выручка
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) КАК НалогообложениеНДС,
	|		ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,0) КАК Выручка
	|	ИЗ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|				&ПериодНачало,
	|				&ПериодОкончание,
	|				Квартал,
	|				Организация В (&Организация)
	|					И Событие В (ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация), 
	|								ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель))
	|					И НЕ ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыПолученные)
	|					И НЕ СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС))) КАК НДСЗаписиКнигиПродажОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт) КАК НалогообложениеНДС,
	|		ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,0) КАК Выручка
	|	ИЗ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|				&ПериодНачало,
	|				&ПериодОкончание,
	|				Квартал,
	|				Организация В (&Организация)
	|					И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.УслугиНеНаТерриторииРФ)) КАК НДСЗаписиКнигиПродажОбороты
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДСВСтранеЕАЭС) КАК НалогообложениеНДС,
	|		ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,0) КАК Выручка
	|	ИЗ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|				&ПериодНачало,
	|				&ПериодОкончание,
	|				Квартал,
	|				Организация В (&Организация)
	|					И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыФизлицамВЕАЭСЭлектронныеПлощадки)) КАК НДСЗаписиКнигиПродажОбороты
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС) КАК НалогообложениеНДС,
	|		ЕстьNULL(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,0) КАК Выручка
	|	ИЗ
	|		РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|				&ПериодНачало,
	|				&ПериодОкончание,
	|				Квартал,
	|				Организация В (&Организация)
	|					И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.Реализация)
	|					И ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.УслугиНеНаТерриторииРФ)
	|					И ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыФизлицамВЕАЭСЭлектронныеПлощадки)
	|					И СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)) КАК НДСЗаписиКнигиПродажОбороты
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	// На основании корректировок ""Без НДС"" ИСФ и КСФ могут не создаваться, поэтому получим данные документов
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ДанныеОснованийСчетовФактур.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.РеализацияРаботУслугНаЭкспорт)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		КОНЕЦ КАК НалогообложениеНДС,
	|		ДанныеОснованийСчетовФактур.БазаНДСРегл КАК Выручка
	|	ИЗ
	|		РегистрСведений.ДанныеОснованийСчетовФактур КАК ДанныеОснованийСчетовФактур
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|			ПО ДанныеОснованийСчетовФактур.Регистратор = СчетФактураВыданныйДокументыОснования.ДокументОснование
	|				И НЕ СчетФактураВыданныйДокументыОснования.Ссылка.ПометкаУдаления
	|				И НЕ СчетФактураВыданныйДокументыОснования.Ссылка.Исправление
	|	ГДЕ
	|		ДанныеОснованийСчетовФактур.Период МЕЖДУ &ПериодНачало И &ПериодОкончание
	|		И ДанныеОснованийСчетовФактур.Организация В (&Организация)
	|		И (ДанныеОснованийСчетовФактур.КорректировкаПоСогласованиюСторон 
	|			ИЛИ ДанныеОснованийСчетовФактур.ИсправлениеОшибок)
	|		И ДанныеОснованийСчетовФактур.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)
	|		И ДанныеОснованийСчетовФактур.ТипЗапасов В (&ТипЗапасовСобственные)
	|		И ДанныеОснованийСчетовФактур.НалогообложениеНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|		И СчетФактураВыданныйДокументыОснования.Ссылка ЕСТЬ NULL
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС) КАК НалогообложениеНДС,
	|		НачисленияПоЗаймамВыданным.ВыручкаБезНДСРеглОборот КАК Выручка
	|	ИЗ
	|		РегистрНакопления.ПрочаяВыручка.Обороты(
	|			&ПериодНачало, 
	|			&ПериодОкончание,
	|			Квартал,
	|			ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НачисленияПоЗаймамВыданным)
	|				И Организация В (&Организация)) КАК НачисленияПоЗаймамВыданным
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВыручкаИСебестоимостьПродаж.НалогообложениеНДС КАК НалогообложениеНДС,
	|		ЕСТЬNULL(ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл,0) КАК Выручка
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО 
	|			ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.Ссылка
	|	ГДЕ
	|		АналитикаПоПартнерам.Организация В (&Организация)
	|		И ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|		И ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &ПериодНачало И &ПериодОкончание
	|		И ВыручкаИСебестоимостьПродаж.Активность
	|		И ВыручкаИСебестоимостьПродаж.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВыручкаИСебестоимостьПродаж.НалогообложениеНДС КАК НалогообложениеНДС,
	|		ЕСТЬNULL(ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл,0) КАК Выручка
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО 
	|			ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.Ссылка
	|	ГДЕ
	|		АналитикаПоПартнерам.Организация В (&Организация)
	|		И ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.Космос)
	|		И ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &ПериодНачало И &ПериодОкончание
	|		И ВыручкаИСебестоимостьПродаж.Активность
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВыручкаИСебестоимостьПродаж.НалогообложениеНДС КАК НалогообложениеНДС,
	|		ЕСТЬNULL(ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл,0) КАК Выручка
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО 
	|			ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.Ссылка
	|	ГДЕ
	|		АналитикаПоПартнерам.Организация В (&Организация)
	|		И ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|		И ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &ПериодНачало И &ПериодОкончание
	|		И ВыручкаИСебестоимостьПродаж.Активность
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	// вычитаем из облагаемой выручки, чтобы не дублировалось
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС) КАК НалогообложениеНДС,
	|		ЕСТЬNULL(-ВыручкаИСебестоимостьПродаж.СуммаВыручкиРегл,0) КАК Выручка
	|	ИЗ
	|		РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ВыручкаИСебестоимостьПродаж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.КлючиАналитикиУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО 
	|			ВыручкаИСебестоимостьПродаж.АналитикаУчетаПоПартнерам = АналитикаПоПартнерам.Ссылка
	|	ГДЕ
	|		АналитикаПоПартнерам.Организация В (&Организация)
	|		И ВыручкаИСебестоимостьПродаж.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПроизводствоСДЦ)
	|		И ВыручкаИСебестоимостьПродаж.Период МЕЖДУ &ПериодНачало И &ПериодОкончание
	|		И ВыручкаИСебестоимостьПродаж.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументыЭкспорт.НалогообложениеНДС КАК НалогообложениеНДС,
	|		(ДокументыЭкспорт.Выручка + ДокументыЭкспорт.КорректировкаВыручки) КАК Выручка
	|	ИЗ
	|		ДокументыЭкспорт КАК ДокументыЭкспорт
	|	ГДЕ
	|		ДокументыЭкспорт.НалогообложениеНДС В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт) КАК НалогообложениеНДС,
	|		(ДокументыЭкспорт.Выручка + ДокументыЭкспорт.КорректировкаВыручки) КАК Выручка
	|	ИЗ
	|		ДокументыЭкспорт КАК ДокументыЭкспорт
	|
	|	) КАК ТаблицаДанных
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанных.НалогообложениеНДС
	|;
	|
	|ВЫБРАТЬ
	|	ДокументыЭкспорт.Документ             КАК Документ,
	|	СУММА(ДокументыЭкспорт.Выручка)       КАК СуммаВыручки,
	|	СУММА(ДокументыЭкспорт.КорректировкаВыручки) КАК КорректировкаВыручки
	|ИЗ
	|	ДокументыЭкспорт КАК ДокументыЭкспорт
	|ГДЕ
	|	ВЫБОР 
	|		КОГДА &УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту И НЕ &ВключатьВсеДокументыЭкспорта
	|			ТОГДА ДокументыЭкспорт.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг)
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыЭкспорт.Документ
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДокументыЭкспорт.Выручка) <> 0 ИЛИ СУММА(ДокументыЭкспорт.КорректировкаВыручки) <> 0
	|";
	
	УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту = УчетНДСРФ.УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту(Дата);
	Запрос.УстановитьПараметр("УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту", УпрощенныйПорядокВычетаНДСПоНесырьевомуЭкспорту);
	
	ВключатьВсеДокументыЭкспорта = Ложь;
	Если ДополнительныеПараметрыПолученияВыручки <> Неопределено
		И ДополнительныеПараметрыПолученияВыручки.Свойство("ВключатьВсеДокументыЭкспорта") Тогда
		ВключатьВсеДокументыЭкспорта = ДополнительныеПараметрыПолученияВыручки.ВключатьВсеДокументыЭкспорта;
	КонецЕсли;
	Запрос.УстановитьПараметр("ВключатьВсеДокументыЭкспорта", ВключатьВсеДокументыЭкспорта);
	
	ПериодНачало = НачалоПериода;
	ПериодОкончание = КонецКвартала(Дата);
	
	Запрос.УстановитьПараметр("ПериодНачало", ПериодНачало);
	Запрос.УстановитьПараметр("ПериодОкончание", ПериодОкончание);

	ОтборОрганизаций = Справочники.Организации.МассивВзаимосвязанныхОрганизаций(Организация);
	ОтборОрганизаций.Добавить(Организация);
	Запрос.УстановитьПараметр("Организация",           ОтборОрганизаций);
	Запрос.УстановитьПараметр("ТипЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	
	Результат = Запрос.ВыполнитьПакет();
	ДанныеВыручки.Вставить("ВыручкаПоНалогообложениямНДС", Результат[1].Выгрузить());
	ДанныеВыручки.Вставить("ДокументыЭкспорт",             Результат[2].Выгрузить());
	//-- Локализация
	
КонецПроцедуры

// Инициализирует ВтВнеоборотныеАктивы, содержащую объекты, принятые к учету.
//
// Параметры:
// 	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер, в котором необходимо иницилиализировать таблицу
//	Реквизиты - Структура - Реквизиты документа (См. Документы.РаспределениеНДС.ПолучитьДанныеДокумента)
// 
Процедура ИнициализироватьВтВнеоборотныеАктивы(МенеджерВременныхТаблиц, Реквизиты) Экспорт
	
	//++ Локализация


	//-- Локализация
		
КонецПроцедуры

// Дополняет таблицы движений распределения НДС
//
// Параметры:
//	ТаблицыДляДвижений - Структура - Таблицы движений документа
//	ДанныеДляРаспределения - Структура - Исходные данные для распределения
//	РезультатРаспределения - Структура - Результат распределения
//	Реквизиты - Структура - Реквизиты документа (См. Документы.РаспределениеНДС.ПолучитьДанныеДокумента)
//	Регистры - Неопределено, Массив, Структура - Регистры, которые необходимо сформировать
// 
Процедура СформироватьДвижения(ТаблицыДляДвижений, ДанныеДляРаспределения, РезультатРаспределения, Реквизиты, Регистры) Экспорт
	//++ Локализация


	//-- Локализация
КонецПроцедуры

//++ Локализация

// Возвращают данные для оценки возможности применения "правила 5%"
//
// Параметры:
// 	 МассивОрганизаций - Массив, СправочникСсылка.Организации - организации, для которых надо выполнить оценку
// 	 Период - Дата - квартал для оценки.
//
// Возвращаемое значение:
// 	 ТаблицаЗначений - Таблица значений с колонками:
//		* Организация - СправочникСсылка.Организации -
// 	 	* РасходыПоДеятельностиНеОблагаемойНДС - Число - Расходы по реализации не облагаемой НДС.
// 		* РасходыВсего - Число - Общая сумма расходов.
// 		* Доля - Число - Процент расходов, относящихся к реализации не облагаемой НДС.
//
Функция ОценкаПримененияПравила5Процентов(МассивОрганизаций, Период) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АналитикаУчета.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА СебестоимостьПродаж.НалогообложениеНДС В (&ТипыНалогообложенияНДСНеоблагаемые)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеОблагаетсяНДС,
	|	СУММА(СебестоимостьПродаж.СтоимостьРегл 
	|		+ СебестоимостьПродаж.ДопРасходыРегл 
	|		+ СебестоимостьПродаж.ТрудозатратыРегл 
	|		+ СебестоимостьПродаж.ПостатейныеПостоянныеРегл
	|		+ СебестоимостьПродаж.ПостатейныеПеременныеРегл) КАК Себестоимость
	|ПОМЕСТИТЬ СебестоимостьПродаж
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК СебестоимостьПродаж
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Справочник.КлючиАналитикиУчетаПоПартнерам КАК АналитикаУчета
	|	ПО 
	|		СебестоимостьПродаж.АналитикаУчетаПоПартнерам = АналитикаУчета.Ссылка
	|ГДЕ
	|	СебестоимостьПродаж.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ) И КОНЕЦПЕРИОДА(&Период, КВАРТАЛ)
	|	И АналитикаУчета.Организация В(&МассивОрганизаций)
	|	И (СебестоимостьПродаж.СтоимостьРегл <> 0
	|		ИЛИ СебестоимостьПродаж.ДопРасходыРегл <> 0
	|		ИЛИ СебестоимостьПродаж.ТрудозатратыРегл <> 0
	|		ИЛИ СебестоимостьПродаж.ПостатейныеПостоянныеРегл <> 0
	|		ИЛИ СебестоимостьПродаж.ПостатейныеПеременныеРегл <> 0)
	|	И СебестоимостьПродаж.ТипЗапасов В (&ТипыЗапасовСобственные)
	|
	|СГРУППИРОВАТЬ ПО
	|	АналитикаУчета.Организация,
	|	ВЫБОР
	|		КОГДА СебестоимостьПродаж.НалогообложениеНДС В (&ТипыНалогообложенияНДСНеоблагаемые)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СебестоимостьПродаж.Организация КАК Организация,
	|	СебестоимостьПродаж.РасходыПоДеятельностиНеОблагаемойНДС КАК РасходыПоДеятельностиНеОблагаемойНДС,
	|	СебестоимостьПродаж.РасходыВсего КАК РасходыВсего,
	|	ВЫБОР
	|		КОГДА СебестоимостьПродаж.РасходыВсего = 0
	|			ТОГДА 0
	|		ИНАЧЕ 100 * СебестоимостьПродаж.РасходыПоДеятельностиНеОблагаемойНДС / СебестоимостьПродаж.РасходыВсего
	|	КОНЕЦ КАК Доля
	|ИЗ
	|	(ВЫБРАТЬ
	|		Организации.Ссылка КАК Организация,
	|		ЕСТЬNULL(СУММА(ВЫБОР
	|					КОГДА СебестоимостьПродаж.НеОблагаетсяНДС
	|						ТОГДА СебестоимостьПродаж.Себестоимость
	|					ИНАЧЕ 0
	|				КОНЕЦ), 0) КАК РасходыПоДеятельностиНеОблагаемойНДС,
	|		ЕСТЬNULL(СУММА(СебестоимостьПродаж.Себестоимость), 0) КАК РасходыВсего
	|	ИЗ
	|		Справочник.Организации КАК Организации
	|			ЛЕВОЕ СОЕДИНЕНИЕ СебестоимостьПродаж КАК СебестоимостьПродаж
	|			ПО Организации.Ссылка = СебестоимостьПродаж.Организация
	|	ГДЕ
	|		Организации.Ссылка В(&МассивОрганизаций)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Организации.Ссылка) КАК СебестоимостьПродаж";
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("МассивОрганизаций", ОбщегоНазначенияУТКлиентСервер.Массив(МассивОрганизаций));
	Запрос.УстановитьПараметр("ТипыНалогообложенияНДСНеоблагаемые", УчетНДСУП.ТипыНалогообложенияНДСНеоблагаемые());
	Запрос.УстановитьПараметр("ТипыЗапасовСобственные", УчетНДСУПСлужебный.ТипыЗапасовСобственные());
	
	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Индексы.Добавить("Организация");
	
	Возврат Результат;
	
КонецФункции

//-- Локализация

#КонецОбласти

//++ Локализация

#Область СлужебныеПроцедурыИФункции

Процедура РаспределитьПартииНДСКРаспределениюЭкспортПоДокументам(ПартииНДСКРаспределениюЭкспорт, Реквизиты, РаспределятьНаВесьЭкспорт)
	
	Если ПартииНДСКРаспределениюЭкспорт.Итог("НДСРегл") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ИменаКолонок = РасчетСебестоимостиПрикладныеАлгоритмы.ПолучитьИменаКолонокСтрокой(ПартииНДСКРаспределениюЭкспорт);
	РасчетСебестоимостиПрикладныеАлгоритмы.ПоместитьТаблицуЗначенийВоВременнуюТаблицу(
		МенеджерВременныхТаблиц, "ПартииНДСКРаспределениюЭкспорт", ПартииНДСКРаспределениюЭкспорт, ИменаКолонок);
		
	ПартииНДСКРаспределениюЭкспорт.Очистить();
	
	РаспределитьПартииНДСКРаспределениюЭкспортПоДокументамТекущегоПериода(
		ПартииНДСКРаспределениюЭкспорт, 
		Реквизиты, 
		МенеджерВременныхТаблиц, 
		РаспределятьНаВесьЭкспорт);
		
	РаспределитьПартииНДСКРаспределениюЭкспортПоДокументамПрошлыхПериодов(
		ПартииНДСКРаспределениюЭкспорт, 
		Реквизиты, 
		МенеджерВременныхТаблиц);
	
КонецПроцедуры

Процедура РаспределитьПартииНДСКРаспределениюЭкспортПоДокументамТекущегоПериода(ПартииНДСКРаспределениюЭкспорт, Реквизиты, МенеджерВременныхТаблиц, РаспределятьНаВесьЭкспорт)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокументыЭкспорт.Документ             КАК Документ,
	|	ДокументыЭкспорт.СуммаВыручки         КАК СуммаНесырьевыеТовары,
	|	ДокументыЭкспорт.КорректировкаВыручки КАК КорректировкаНесырьевыеТовары
	|ПОМЕСТИТЬ ДокументыЭкспортНесырьевыхТоваров
	|ИЗ
	|	&ДокументыЭкспорт КАК ДокументыЭкспорт
	|ГДЕ
	|	ДокументыЭкспорт.СуммаВыручки > 0
	|;
	|
	|/////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	База.Дата КАК Дата,
	|	База.Документ КАК Документ,
	|	СУММА(База.Сумма) КАК Сумма
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокументыЭкспорт.Документ.Дата             КАК Дата,
	|		ДокументыЭкспорт.Документ                  КАК Документ,
	|		(ДокументыЭкспорт.СуммаВыручки 
	|			+ ДокументыЭкспорт.КорректировкаВыручки)  КАК Сумма
	|	ИЗ
	|		Документ.РаспределениеНДС.ДокументыЭкспорт КАК ДокументыЭкспорт
	|	ГДЕ
	|		ДокументыЭкспорт.Ссылка = &Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДокументыЭкспорт.Документ.Дата КАК Дата,
	|		ДокументыЭкспорт.Документ      КАК Документ,
	|		(ДокументыЭкспорт.СуммаНесырьевыеТовары 
	|			+ ДокументыЭкспорт.КорректировкаНесырьевыеТовары) КАК Сумма
	|	ИЗ
	|		ДокументыЭкспортНесырьевыхТоваров КАК ДокументыЭкспорт) База
	|
	|СГРУППИРОВАТЬ ПО
	|	База.Дата,
	|	База.Документ
	|
	|ИМЕЮЩИЕ
	|	СУММА(База.Сумма) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата
	|;
	|
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ПартииНДСКРаспределениюЭкспорт КАК ПартииНДСКРаспределениюЭкспорт
	|ГДЕ
	|	ПартииНДСКРаспределениюЭкспорт.ПериодБазы = &ПериодБазы
	|	И ПартииНДСКРаспределениюЭкспорт.НДСРегл >= 0
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ПартииНДСКРаспределениюЭкспорт.ДатаПоступленияРасходов
	|;
	|
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ПартииНДСКРаспределениюЭкспорт КАК ПартииНДСКРаспределениюЭкспорт
	|ГДЕ
	|	ПартииНДСКРаспределениюЭкспорт.ПериодБазы = &ПериодБазы
	|	И ПартииНДСКРаспределениюЭкспорт.НДСРегл < 0
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ПартииНДСКРаспределениюЭкспорт.ДатаПоступленияРасходов
	|";
	
	Запрос.УстановитьПараметр("ПериодБазы", Реквизиты.ПериодБазы);
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Если РаспределятьНаВесьЭкспорт Тогда
		ДополнительныеПараметрыПолученияВыручки = Новый Структура();
		ДополнительныеПараметрыПолученияВыручки.Вставить("ВключатьВсеДокументыЭкспорта", Истина);
		База = Документы.РаспределениеНДС.ПолучитьБазуРаспределенияНДС(
			Реквизиты.ПериодБазы, Реквизиты.ПериодНачало, Реквизиты.Организация, ДополнительныеПараметрыПолученияВыручки);
		Запрос.УстановитьПараметр("ДокументыЭкспорт", База.ДокументыЭкспорт);
	Иначе
		ДокументыЭкспорт = Новый ТаблицаЗначений;
		ДокументыЭкспорт.Колонки.Добавить("Документ", Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг"));
		ДокументыЭкспорт.Колонки.Добавить("СуммаВыручки", Новый ОписаниеТипов("Число"));
		ДокументыЭкспорт.Колонки.Добавить("КорректировкаВыручки", Новый ОписаниеТипов("Число"));
		Запрос.УстановитьПараметр("ДокументыЭкспорт", ДокументыЭкспорт);
	КонецЕсли;
	
	Результат = Запрос.ВыполнитьПакет();
	
	ДокументыРеализации                         = Результат[Результат.Количество() - 3].Выгрузить(); // ТаблицаЗначений - 
	ДокументыРеализации.Колонки.Добавить("НДС");
	
	// Положительные и отрицательные остатки распределим отдельно.
	ТаблицыДляРаспределения = Новый Массив;
	ТаблицыДляРаспределения.Добавить(Результат[Результат.Количество() - 2].Выгрузить()); // Положительные суммы по СФ и ИСФ, КСФ
	ТаблицыДляРаспределения.Добавить(Результат[Результат.Количество() - 1].Выгрузить()); // Отрицательные суммы по КСФ
	
	Для каждого ПартииНДСКРаспределениюЭкспортДляРаспределения Из ТаблицыДляРаспределения Цикл
	
		Если ПартииНДСКРаспределениюЭкспортДляРаспределения.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Если ДокументыРеализации.Количество() = 0 Тогда
			// Нет документов для распределения, вернет таблицу как есть
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(
				ПартииНДСКРаспределениюЭкспортДляРаспределения,
				ПартииНДСКРаспределениюЭкспорт); // ТаблицаЗначений
			Возврат;
		КонецЕсли;
		
		НДСВсего         = ПартииНДСКРаспределениюЭкспортДляРаспределения.Итог("НДСРегл");
		Коэффициенты     = ДокументыРеализации.ВыгрузитьКолонку("Сумма");
		НДСПоРеализациям = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(НДСВсего, Коэффициенты); 
		
		ДокументыРеализации.ЗагрузитьКолонку(НДСПоРеализациям, "НДС");
		
		Для каждого СтрокаДокумент Из ДокументыРеализации Цикл
			
			НДСОсталосьРаспределить = СтрокаДокумент.НДС;
			
			РаспределенныеПартии = Новый Массив();
			
			Для каждого ПартияПрочихРасходов Из ПартииНДСКРаспределениюЭкспортДляРаспределения Цикл
				
				Если НДСОсталосьРаспределить = 0 Тогда
					Прервать;
				КонецЕсли;
				
				Если ПартияПрочихРасходов.НДСРегл = 0 Тогда
					
					Если ПартияПрочихРасходов.СтоимостьРегл > 0 Тогда
						// Распределять по реализациям не требуется, но остаток по регистру необходимо закрыть.
						НоваяСтрока = ПартииНДСКРаспределениюЭкспорт.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ПартияПрочихРасходов);
					КонецЕсли;
					
					РаспределенныеПартии.Добавить(ПартияПрочихРасходов);
					
					Продолжить;
					
				КонецЕсли;
				
				Если НДСОсталосьРаспределить < 0 Тогда
					НДСРегл = Макс(НДСОсталосьРаспределить, ПартияПрочихРасходов.НДСРегл);
				Иначе
					НДСРегл = Мин(НДСОсталосьРаспределить, ПартияПрочихРасходов.НДСРегл);
				КонецЕсли;
				 
				СтоимостьРегл = Окр(ПартияПрочихРасходов.СтоимостьРегл * НДСРегл / ПартияПрочихРасходов.НДСРегл, 2);
				НДСУпр =  Окр(ПартияПрочихРасходов.НДСУпр * НДСРегл / ПартияПрочихРасходов.НДСРегл, 2);
				
				НоваяСтрока = ПартииНДСКРаспределениюЭкспорт.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ПартияПрочихРасходов, , "НДСРегл, СтоимостьРегл");
				
				НоваяСтрока.ДокументРеализации = СтрокаДокумент.Документ;
				
				НоваяСтрока.НДСРегл = НДСРегл;
				НоваяСтрока.СтоимостьРегл = СтоимостьРегл;
				НоваяСтрока.НДСУпр = НДСУпр;
				
				ПартияПрочихРасходов.НДСРегл = ПартияПрочихРасходов.НДСРегл - НДСРегл;
				ПартияПрочихРасходов.СтоимостьРегл = ПартияПрочихРасходов.СтоимостьРегл - СтоимостьРегл;
				ПартияПрочихРасходов.НДСУпр = ПартияПрочихРасходов.НДСУпр - НДСУпр;
				
				НДСОсталосьРаспределить = НДСОсталосьРаспределить - НДСРегл;
				
			КонецЦикла;
			
			Для каждого РаспределеннаяПартия Из РаспределенныеПартии Цикл
				ПартииНДСКРаспределениюЭкспортДляРаспределения.Удалить(РаспределеннаяПартия);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РаспределитьПартииНДСКРаспределениюЭкспортПоДокументамПрошлыхПериодов(ПартииНДСКРаспределениюЭкспорт, Реквизиты, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПартииНДСКРаспределениюЭкспорт.ПериодБазы                  КАК ПериодБазы,
	|	ПартииНДСКРаспределениюЭкспорт.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	ПартииНДСКРаспределениюЭкспорт.ОснованиеКорректировки      КАК ОснованиеКорректировки
	|ПОМЕСТИТЬ ПартииПоДокументамПрошлыхПериодов
	|ИЗ
	|	ПартииНДСКРаспределениюЭкспорт КАК ПартииНДСКРаспределениюЭкспорт
	|ГДЕ
	|	ПартииНДСКРаспределениюЭкспорт.ПериодБазы < &ПериодБазы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодБазы,
	|	ОснованиеКорректировки
	|;
	|
	|ВЫБРАТЬ
	|	ПартииПоДокументамПрошлыхПериодов.ДокументПоступленияРасходов КАК ДокументПоступленияРасходов,
	|	ПартииНДСКРаспределению.ДокументРеализации КАК ДокументРеализации,
	|	ПартииНДСКРаспределению.НДСРегл КАК Сумма
	|ИЗ
	|	ПартииПоДокументамПрошлыхПериодов КАК ПартииПоДокументамПрошлыхПериодов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПартииНДСКРаспределению КАК ПартииНДСКРаспределению
	|	ПО
	|		КОНЕЦПЕРИОДА(ПартииНДСКРаспределению.Период, МЕСЯЦ) = ПартииПоДокументамПрошлыхПериодов.ПериодБазы
	|		И ПартииНДСКРаспределению.Регистратор ССЫЛКА Документ.РаспределениеНДС 
	|		И ПартииНДСКРаспределению.ДокументПоступленияРасходов = ПартииПоДокументамПрошлыхПериодов.ОснованиеКорректировки
	|		И ПартииНДСКРаспределению.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|;
	|
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ПартииНДСКРаспределениюЭкспорт КАК ПартииНДСКРаспределениюЭкспорт
	|ГДЕ
	|	ПартииНДСКРаспределениюЭкспорт.ПериодБазы < &ПериодБазы
	|";
	
	Запрос.УстановитьПараметр("ПериодБазы", Реквизиты.ПериодБазы);
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ДокументыРеализации                         = Результат[Результат.Количество() - 2].Выгрузить(); // ТаблицаЗначений
	ПартииНДСКРаспределениюЭкспортДляРаспределения = Результат[Результат.Количество() - 1].Выгрузить(); // ТаблицаЗначений
	
	Если ПартииНДСКРаспределениюЭкспортДляРаспределения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДокументыРеализации.Индексы.Добавить("ДокументПоступленияРасходов");
	ОтборДокументов = Новый Структура("ДокументПоступленияРасходов");
	
	Для каждого Партия Из ПартииНДСКРаспределениюЭкспортДляРаспределения Цикл
		
		ЗаполнитьЗначенияСвойств(ОтборДокументов, Партия);
		ДокументыПоПартии = ДокументыРеализации.НайтиСтроки(ОтборДокументов);
		
		Если ДокументыПоПартии.Количество() = 0 Тогда
			// Не удалось найти документы реализации, добавим строку без распределения по документам.
			НоваяСтрока = ПартииНДСКРаспределениюЭкспорт.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Партия); 
			Продолжить;
		КонецЕсли;
		
		МассивКоэффициентов = Новый Массив();
		Для каждого Документ Из ДокументыПоПартии Цикл
			МассивКоэффициентов.Добавить(Документ.Сумма);
		КонецЦикла;
		
		РаспределениеСтоимостьРегл = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(Партия.СтоимостьРегл, МассивКоэффициентов);
		РаспределениеНДСРегл = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(Партия.НДСРегл, МассивКоэффициентов);
		РаспределениеНДСУпр = ОбщегоНазначенияКлиентСервер.РаспределитьСуммуПропорциональноКоэффициентам(Партия.НДСУпр, МассивКоэффициентов);
			
		Индекс = 0;
		Для каждого Документ Из ДокументыПоПартии Цикл
			
			СтоимостьРегл = ?(РаспределениеСтоимостьРегл <> Неопределено, РаспределениеСтоимостьРегл[Индекс], 0);
			НДСРегл       = ?(РаспределениеНДСРегл       <> Неопределено, РаспределениеНДСРегл[Индекс], 0);
			НДСУпр        = ?(РаспределениеНДСУпр       <> Неопределено, РаспределениеНДСУпр[Индекс], 0);

			НоваяСтрока = ПартииНДСКРаспределениюЭкспорт.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Партия);
			НоваяСтрока.СтоимостьРегл = СтоимостьРегл;
			НоваяСтрока.НДСРегл = НДСРегл;
			НоваяСтрока.НДСУпр = НДСУпр;
			НоваяСтрока.ДокументРеализации = Документ.ДокументРеализации;
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

//-- Локализация
