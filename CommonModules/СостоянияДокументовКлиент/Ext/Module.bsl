/////////////////////////////////////////////////////////////////////////
// Модуль "СостоянияДокументовКлиентСервер" содержит процедуры и функции
// для работы с механизмом состояния документов.
//
/////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Обработчик после записи для форм заказов.
// Проверяет возможность запуска и запускает обработчик ожидания проверки задания к отражению состояния заказов.
// 
// Параметры:
//  Форма - см. СостоянияДокументов.ПослеЗаписиНаСервере.Форма
//  ИмяОбработчика - Строка - имя процедуры обработчика ожидания для задания к отражению состояния заказов.
//                            По умолчанию "Подключаемый_ПроверитьЗаданияКОтражениюСостоянияЗаказов".
//
Процедура ПослеЗаписи(Форма, ИмяОбработчика = "Подключаемый_ПроверитьЗаданияКОтражениюСостоянияЗаказов") Экспорт
	
	Если Не ЗапуститьПроверкуЗаданияКОтражениюСостоянияЗаказов(Форма) Тогда
		Возврат;
	КонецЕсли;
	
	Форма.ПризнакПроверкиЗаданияКОтражениюСостоянияЗаказов = 2;
	
	Форма.ПодключитьОбработчикОжидания(ИмяОбработчика, 1);
	
КонецПроцедуры

// Возвращает признак запуска проверки задания к отражению состояния заказов.
// 
// Параметры:
//  Форма - см. СостоянияДокументов.ПослеЗаписиНаСервере.Форма
// 
// Возвращаемое значение:
//  Булево - признак запуска проверки задания к отражению состояния заказов
//
Функция ЗапуститьПроверкуЗаданияКОтражениюСостоянияЗаказов(Форма) Экспорт
	
	Возврат Форма.ПризнакПроверкиЗаданияКОтражениюСостоянияЗаказов = 1;
	
КонецФункции

// Возвращает признак запуска проверки задания к отражению состояния заказов.
// 
// Параметры:
//  Форма - см. СостоянияДокументов.ПослеЗаписиНаСервере.Форма
// 
// Возвращаемое значение:
//  Булево - признак запуска проверки задания к отражению состояния заказов
//
Функция СтартПроверкиЗаданияКОтражениюСостоянияЗаказов(Форма) Экспорт
	
	Возврат Форма.ПризнакПроверкиЗаданияКОтражениюСостоянияЗаказов = 2;
	
КонецФункции

// Возвращает признак проверка задания к отражению состояния заказов выполняется.
// 
// Параметры:
//  Форма - см. СостоянияДокументов.ПослеЗаписиНаСервере.Форма
// 
// Возвращаемое значение:
//  Булево - признак проверка задания к отражению состояния заказов выполняется
//
Функция ПроверкаЗаданияКОтражениюСостоянияЗаказовВыполняется(Форма) Экспорт
	
	Возврат Форма.ПризнакПроверкиЗаданияКОтражениюСостоянияЗаказов = 3;
	
КонецФункции

// Устанавливает признак проверка задания к отражению состояния заказов выполняется.
// 
// Параметры:
//  Форма - см. СостоянияДокументов.ПослеЗаписиНаСервере.Форма
//
Процедура УстановитьПризнакПроверкаЗаданияКОтражениюСостоянияЗаказовВыполняется(Форма) Экспорт
	
	Форма.ПризнакПроверкиЗаданияКОтражениюСостоянияЗаказов = 3;
	
КонецПроцедуры

// Обрабатывает результат проверки задания к отражению состояния заказов.
// 
// Параметры:
//  Форма - см. СостоянияДокументов.ПослеЗаписиНаСервере.Форма
//  ЕстьЗаданияКОтражениюСостоянияЗаказов - Булево - признак наличие задания к отражению состояния заказов
//  ИмяОбработчика - см. ПослеЗаписи.ИмяОбработчика
//  ИмяЭлементаСостояние - Строка - имя элемента формы состояние.
//                                  По умолчанию "Состояние".
//  ИмяГруппыСостояниеРассчитывается - Строка - имя группы элементов формы состояние рассчитывается.
//                                              По умолчанию "ГруппаСостояниеРассчитывается".
//
Процедура ОбработатьРезультатПроверкиЗаданияКОтражениюСостоянияЗаказов(
			Форма,
			ЕстьЗаданияКОтражениюСостоянияЗаказов,
			ИмяОбработчика = "Подключаемый_ПроверитьЗаданияКОтражениюСостоянияЗаказов",
			ИмяЭлементаСостояние = "Состояние",
			ИмяГруппыСостояниеРассчитывается = "ГруппаСостояниеРассчитывается") Экспорт
	
	Если ЕстьЗаданияКОтражениюСостоянияЗаказов Тогда
		Возврат;
	КонецЕсли;
	
	Форма.ПризнакПроверкиЗаданияКОтражениюСостоянияЗаказов = 0;
	
	Форма.ОтключитьОбработчикОжидания(ИмяОбработчика);
	
	СостоянияДокументовКлиентСервер.УстановитьВидимостьЭлементов(
		Форма.Элементы,
		ИмяЭлементаСостояние,
		ИмяГруппыСостояниеРассчитывается,
		Ложь);
	
КонецПроцедуры

// Дополняет структуру состояния заказа ключом "ЕстьЗаданияКОтражениюСостоянияЗаказов".
// 
// Параметры:
//  СтруктураСостояния - Структура - структура состояния заказа.
//
Процедура ДополнитьСтруктуруСостоянияЗаказа(СтруктураСостояния) Экспорт
	
	СтруктураСостояния.Вставить("ЕстьЗаданияКОтражениюСостоянияЗаказов", Ложь);
	
КонецПроцедуры

#КонецОбласти