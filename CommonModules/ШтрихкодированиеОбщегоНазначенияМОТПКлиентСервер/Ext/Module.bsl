
#Область ПрограммныйИнтерфейс

#Область ПараметрыСканирования

// Заполняет параметры сканирования по контексту.
// 
// Параметры:
//  ПараметрыСканирования - (См. ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования).
//  Контекст - ФормаКлиентскогоПриложения, ДокументСсылка - источник заполнения параметров сканирования.
//  ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС - по данному параметру будет проиходить отбор заполнения.
//  ФормаВыбора - ФормаКлиентскогоПриложения - Форма выбора.
//  ПараметрыРежимаИсправленияОшибок - Структура - Параметры режима исправления ошибок.
Процедура ЗаполнитьПараметрыСканирования(ПараметрыСканирования, Контекст, ВидПродукции, ФормаВыбора, ПараметрыРежимаИсправленияОшибок = Неопределено) Экспорт

	Если ЗначениеЗаполнено(ВидПродукции) И Не ОбщегоНазначенияИСКлиентСервер.ЭтоПродукцияМОТП(ВидПродукции) Тогда
		Возврат;
	ИначеЕсли ЗначениеЗаполнено(ВидПродукции) И Контекст = Неопределено Тогда
		ВключитьПоддержкуТабачнойПродукции(ПараметрыСканирования);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРасширенныеПараметрыСканированияПоДокументам(Контекст, ПараметрыСканирования, ФормаВыбора, ПараметрыРежимаИсправленияОшибок);
	
КонецПроцедуры

// Дополняет параметры сканирования свойствами специфичными для табачной продукции.
//
// Параметры:
// 	ПараметрыСканирования - См. ШтрихкодированиеОбщегоНазначенияИСКлиент.ПараметрыСканирования.
// 	ВидПродукции          - ПеречислениеСсылка.ВидыПродукцииИС - Вид продукции.
// 	АнализироватьУчитываемыеВидыПродукции - Булево - Анализировать учитываемые виды продукции.
// 	Операция              - ПеречислениеСсылка.ВидыОперацийИСМП - Вид операции.
// Возвращаемое значение:
// 	Булево - поддержка табачной продукции включена.
Функция ВключитьПоддержкуТабачнойПродукции(ПараметрыСканирования, ВидПродукции = Неопределено, АнализироватьУчитываемыеВидыПродукции = Истина, Операция = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(ВидПродукции) И Не ОбщегоНазначенияИСКлиентСервер.ЭтоПродукцияМОТП(ВидПродукции) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если АнализироватьУчитываемыеВидыПродукции Тогда
		ВидыПродукцииМОТП = ОбщегоНазначенияИСМПКлиентСерверПовтИсп.УчитываемыеВидыМаркируемойПродукции(Ложь);
		Если ВидыПродукцииМОТП.Количество() = 0 Тогда
			Возврат Ложь;
		КонецЕсли;
	Иначе
		ВидыПродукцииМОТП = ОбщегоНазначенияКлиентСервер.РазностьМассивов(
			ОбщегоНазначенияИСКлиентСервер.ВидыПродукцииИСМП(Истина, Ложь, Ложь),
			ОбщегоНазначенияИСКлиентСервер.ВидыПродукцииИСМП(Ложь, Ложь, Ложь));
	КонецЕсли;
	
	Если ВидПродукции = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПараметрыСканирования.ДопустимыеВидыПродукции, ВидыПродукцииМОТП, Истина);
	ИначеЕсли ВидыПродукцииМОТП.Найти(ВидПродукции) = Неопределено Тогда
		Возврат Ложь;
	Иначе
		ПараметрыСканирования.ДопустимыеВидыПродукции.Добавить(ВидПродукции);
	КонецЕсли;
	
	ПараметрыСканирования.Вставить("ДатаПроизводстваНачалаКонтроляСтатусовКодовМаркировкиМОТП", ОбщегоНазначенияИСМПКлиентСервер.ДатаНачалаКонтроляКодовМаркировкиМОТП());
	ПараметрыСканирования.Вставить("ДопустимыеСтатусыМОТП",                                 Новый Массив);
	ПараметрыСканирования.Вставить("ДопустимыеСтатусыУпаковокМОТП",                         Новый Массив);
	ПараметрыСканирования.Вставить("ДопустимыеСтатусыНаборовМОТП",                          Неопределено);
	ПараметрыСканирования.Вставить("ВариантПолученияМРЦ",                                   "Вычисление");
	ПараметрыСканирования.Вставить("КонтролироватьРасхождениеСоставаУпаковокМеждуИБиИСМП",  Ложь);
	
	ПараметрыСканирования.Вставить("ДопустимыПроверкиСеройЗоныМОТП",                                     Ложь);
	ПараметрыСканирования.Вставить("ПроверятьПотребительскиеУпаковкиНаВхождениеВСеруюЗонуМОТП",          Ложь);
	ПараметрыСканирования.Вставить("ПроверятьЛогистическиеИГрупповыеУпаковкиНаСодержаниеСерыхКодовМОТП", Ложь);
	
	ШтрихкодированиеОбщегоНазначенияИСМПКлиентСервер.ДополнитьПараметрамиСканированияИСМП(ПараметрыСканирования);
	
	ДляВидаПродукцииСуществуетМРЦ = ПараметрыСканирования.ДопустимыеВидыПродукции.Найти(
		ПредопределенноеЗначение("Перечисление.ВидыПродукцииИС.Табак")) <> Неопределено;
	
	Если ОбщегоНазначенияИСМПКлиентСервер.ЗначениеПараметраСканированияЗапрашиватьДанныеСервисаИСМП(ПараметрыСканирования)
		И ДляВидаПродукцииСуществуетМРЦ Тогда
		ПараметрыСканирования.ВариантПолученияМРЦ = "ВычислениеИЗапрос";
	Иначе
		ПараметрыСканирования.ВариантПолученияМРЦ = "Вычисление";
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьРасширенныеПараметрыСканированияПоДокументам(Контекст, ПараметрыСканирования, ФормаВыбора, ПараметрыРежимаИсправленияОшибок)
	
	Если ОбщегоНазначенияИСКлиентСервер.ЭтоРасширеннаяВерсияГосИС("ИСМП") Тогда
		
		#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
			//@skip-check wrong-string-literal-content
			Модуль = ОбщегоНазначения.ОбщийМодуль("ШтрихкодированиеМОТПКлиентСервер");
		#Иначе
			//@skip-check wrong-string-literal-content
			Модуль = ОбщегоНазначенияКлиент.ОбщийМодуль("ШтрихкодированиеМОТПКлиентСервер");
		#КонецЕсли
		
		Модуль.ЗаполнитьРасширенныеПараметрыСканированияПоДокументам(Контекст, ПараметрыСканирования, ФормаВыбора, ПараметрыРежимаИсправленияОшибок);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
