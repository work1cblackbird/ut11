////////////////////////////////////////////////////////////////////////////////
// Подсистема "Торговые предложения".
// ОбщийМодуль.ТорговыеПредложенияПереопределяемый.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ФункциональностьПрограммы

// Переопределяет настройки подсистемы.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
//    Ключи:
//    * ДоступнаФункциональностьЗапросаЦен - Булево - флаг наличия функционала запроса цен в прикладном решении.
//    * ИспользоватьХарактеристики - Булево - флаг использования характеристик. 
//    * ВариантыПубликацииОстатков - Массив - из ПеречислениеСсылка.ВариантыПубликацииОстатковТорговыеПредложения 
//                                   список из доступных вариантов публикации остатков. Если массив заполнен 
//                                   не будет, функциональность публикации остатков будет отключена.
//    * ВариантыПубликацииСкидок   - Массив- из ПеречислениеСсылка.ВариантыПубликацииСкидок 
//                                   список из доступных вариантов публикации скидок. Если список заполнен
//                                   не будет, функциональность публикации скидок будет отключена.
//
Процедура ПриОпределенииНастроек(Настройки) Экспорт
	
	Настройки.ВариантыПубликацииОстатков.Добавить(Перечисления.ВариантыПубликацииОстатковТорговыеПредложения.Наличие);
	Настройки.ВариантыПубликацииОстатков.Добавить(Перечисления.ВариантыПубликацииОстатковТорговыеПредложения.Количество);
	Настройки.ВариантыПубликацииОстатков.Добавить(Перечисления.ВариантыПубликацииОстатковТорговыеПредложения.КоличествоИНаличие);
		
КонецПроцедуры

// Проверяет доступность функциональных опций перед открытием формы публикации торговых предложений.
//    В случае, если в процедуре параметр Результат не будет установлен в Истина, будет вызвана процедура 
//    ТорговыеПредложенияПереопределяемый.СообщитьОНеобходимостиИспользованияФункциональнойОпции.
//
// Параметры:
//   ИмяФормы - Строка - имя формы, для которой получаются данные.
//   Результат - Булево - признак того, что функциональные опции включены.
//
Процедура ФункциональнаяОпцияИспользуется(Знач ИмяФормы, Результат) Экспорт
	
	//++ НЕ ГОСИС
	МассивОпций = ЗависимостьФункционалаОтФункциональныхОпций().Получить(ИмяФормы);
	Если ЗначениеЗаполнено(МассивОпций) Тогда
		Для Каждого Опция из МассивОпций Цикл
			Если Не ПолучитьФункциональнуюОпцию(Опция) Тогда
				Результат = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Результат = Истина;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Выдает сообщение пользователю о том, что функциональная опция использования видов номенклатуры отключена.
//
// Параметры:
//  ИмяФормы - Строка - имя формы из которой вызывается сообщение.
//  Используется - Булево - признак того, что функциональная опция включена или нет.
//  Отказ - Булево - признак того, что форму сопоставления номенклатуры открывать не нужно.
//
Процедура СообщитьОНеобходимостиИспользованияФункциональнойОпции(Знач ИмяФормы, Знач Используется, Отказ) Экспорт
	
	//++ НЕ ГОСИС
	Если Используется Тогда
		Возврат;
	КонецЕсли;
	
	МассивОпций = ЗависимостьФункционалаОтФункциональныхОпций().Получить(ИмяФормы);
	
	Для Каждого Опция из МассивОпций Цикл
		Если Опция = "ИспользоватьНесколькоВидовНоменклатуры" Тогда
			ТекстСообщения = НСтр("ru = 'Опция использования нескольких видов номенклатуры отключена.'");
		ИначеЕсли Опция = "ИспользоватьСоглашенияСКлиентами" Тогда
			ТекстСообщения = НСтр("ru = 'Опция использования соглашений с клиентами отключена.'");
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,,,,Отказ);
	КонецЦикла;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Заполнение адресов абонента по зарегистрированным организациям и складам.
//
// Параметры:
//  АдресаАбонента - ТаблицаЗначения - таблица для заполнения:
//   * Представление - Строка - представление адреса.
//   * ЗначенияПолей - Строка - адрес в формате XML.
//   * Описание - Строка - комментарий адреса.
//   * Ссылка - Ссылка - объект хранения контактной информации.
//   * Вид - СправочникСсылка.ВидыКонтактнойИнформации - вид контактной информации.
//
Процедура ЗаполнитьАдресаАбонента(АдресаАбонента) Экспорт
	
	//++ НЕ ГОСИС
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОрганизацииКонтактнаяИнформация.Представление КАК Представление,
	|	ОрганизацииКонтактнаяИнформация.ЗначенияПолей КАК ЗначенияПолей,
	|	ОрганизацииКонтактнаяИнформация.Вид КАК Вид,
	|	ОрганизацииКонтактнаяИнформация.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.ОрганизацииБизнесСеть КАК ОрганизацииБизнесСеть
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации.КонтактнаяИнформация КАК ОрганизацииКонтактнаяИнформация
	|		ПО (ОрганизацииКонтактнаяИнформация.Ссылка = ОрганизацииБизнесСеть.Организация)
	|ГДЕ
	|	ОрганизацииКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СкладыКонтактнаяИнформация.Представление,
	|	СкладыКонтактнаяИнформация.ЗначенияПолей,
	|	СкладыКонтактнаяИнформация.Вид,
	|	СкладыКонтактнаяИнформация.Ссылка
	|ИЗ
	|	Справочник.Склады.КонтактнаяИнформация КАК СкладыКонтактнаяИнформация
	|ГДЕ
	|	СкладыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если ПустаяСтрока(Выборка.Представление) Тогда
			Продолжить;
		КонецЕсли;
		СтрокаАдреса = АдресаАбонента.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаАдреса, Выборка);
		СтрокаАдреса.Описание = СтрШаблон("%1 (%2)", Выборка.Вид, Выборка.Ссылка);
	КонецЦикла;
	
	АдресаАбонента.Сортировать("Представление");	
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Получение способов доставки для заполнения по умолчанию значений при формировании заказов.
//
// Параметры:
//  СпособыДоставки - СписокЗначений - возможные значения способа доставки.
//                                     Первое значение является значением по умолчанию.
//  ВидДоставки	- Строка - значение вида доставки, варианты "Самовывоз", "Доставка".
//
Процедура ПолучитьСпособыДоставки(СпособыДоставки, ВидДоставки = Неопределено) Экспорт
	
	//++ НЕ ГОСИС
	Если ВРег(ВидДоставки) = "САМОВЫВОЗ" Тогда
		СпособыДоставки.Добавить(Перечисления.СпособыДоставки.НашимиСиламиСАдресаОтправителя);
	ИначеЕсли ВРег(ВидДоставки) = "ДОСТАВКА" Тогда
		СпособыДоставки.Добавить(Перечисления.СпособыДоставки.СиламиПоставщикаДоНашегоСклада);
	Иначе
		СпособыДоставки.Добавить(Перечисления.СпособыДоставки.НашимиСиламиСАдресаОтправителя);
		СпособыДоставки.Добавить(Перечисления.СпособыДоставки.СиламиПоставщикаДоНашегоСклада);
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

#КонецОбласти

#Область ДанныеИнформационнойБазы

// Получение валюты регламентированного учета.
// 
// Параметры:
//  Валюта - СправочникСсылка - валюта регламентированного учета.
//
Процедура ПолучитьВалютуРегламентированногоУчета(Валюта) Экспорт
	
	//++ НЕ ГОСИС
	Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Получение имени ставки НДС.
//
// Параметры:
//  Ссылка		 - СправочникСсылка, ПеречислениеСсылка - ссылка на значение ставки НДС прикладного решения.
//  ИмяСтавкиНДС - Строка - идентификатор ставки НДС, вида: "НДС0", "НДС10", НДС10_110, "НДС18", НДС18_118,
//        "НДС20", НДС20_120, "БезНДС".
//
Процедура ПолучитьИмяСтавкиНДС(Знач Ссылка, ИмяСтавкиНДС) Экспорт
	
	//++ НЕ ГОСИС
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.СтавкиНДС") И ЗначениеЗаполнено(Ссылка) Тогда
		Ставка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Ставка");
		ИмяСтавкиНДС = "НДС" + Ставка;
	Иначе
		ИмяСтавкиНДС = Неопределено;
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Получение значения ставки НДС по идентификатору.
//
// Параметры:
//  ИмяСтавкиНДС - Строка - идентификатор ставки НДС, например "НДС0", "НДС10", "НДС18", "НДС20", "БезНДС".
//  Ссылка		 - СправочникСсылка, ПеречислениеСсылка - ссылка на значение ставки НДС прикладного решения.
//
Процедура ПолучитьЗначениеСтавкиНДС(Знач ИмяСтавкиНДС, Ссылка) Экспорт
	
	//++ НЕ ГОСИС
	Если Не ПустаяСтрока(ИмяСтавкиНДС)
		И Метаданные.Перечисления.СтавкиНДС.ЗначенияПеречисления.Найти(ИмяСтавкиНДС) <> Неопределено Тогда
		Ссылка = УчетНДСЛокализация.СтавкаНДСПоПеречислению(Перечисления.СтавкиНДС[ИмяСтавкиНДС]);
	Иначе
		Ссылка = Справочники.СтавкиНДС.БезНДС;
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Получить единицы измерения.
//
// Параметры:
//  Код	   - Строка - код единицы измерения.
//  Ссылка - Ссылка - ссылку на единицу измерения
//  Представление - Строка - представление единицы измерения в базе.
//
Процедура ПолучитьПараметрыЕдиницыИзмерения(Знач Код, Ссылка, Представление) Экспорт
	
	//++ НЕ ГОСИС
	Ссылка = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду(Код);
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Представление = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Наименование");
	КонецЕсли;
	//-- НЕ ГОСИС

КонецПроцедуры

// Заполняет основные сведения о номенклатуре. В обработчике следует по колонке "Номенклатура"
//  заполнить колонки "ЕдиницаИзмерения", "Упаковка", "ИспользованиеХарактеристик". При заполнении
//  следует учитывать, что все заполняемые колонки не являются обязательными. Устанавливать значения
//  следует конструкцией ЗаполнитьЗначенияСвойств(Строка, ИсточникДанных, , "Номенклатура").
//
// Параметры:
//  ДанныеНоменклатуры - ТаблицаЗначений, ДанныеФормыКоллекция - заполняемая таблица номенклатуры:
//    * Номенклатура - ОпределяемыйТип.НоменклатураБЭД - ссылка на номенклатуру
//    * ЕдиницаИзмерения - СправочникСсылка - единица измерения номенклатуры
//    * Упаковка - ОпределяемыйТип.УпаковкаНоменклатурыБЭД - упаковка номенклатуры
//    * ИспользованиеХарактеристик - Булево - признак использования характеристик номенклатуры
//
Процедура ЗаполнитьСведенияОНоменклатуре(ДанныеНоменклатуры) Экспорт
	
	ИспользуемаяНоменклатура = Новый Массив;
	
	Для каждого Строка Из ДанныеНоменклатуры Цикл
		ИспользуемаяНоменклатура.Добавить(Строка.Номенклатура);
	КонецЦикла;
	
	ИспользуемаяНоменклатура = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ИспользуемаяНоменклатура);
	
	ИспользованиеХарактеристик = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИспользуемаяНоменклатура", ИспользуемаяНоменклатура);
	Запрос.УстановитьПараметр("ИспользованиеХарактеристик", ИспользованиеХарактеристик);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Номенклатура.Ссылка КАК Номенклатура,
	               |	ВЫБОР
	               |		КОГДА &ИспользованиеХарактеристик
	               |			ТОГДА Номенклатура.ВидНоменклатуры.ИспользоватьХарактеристики
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК ИспользованиеХарактеристик,
	               |	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	               |	УпаковкиЕдиницыИзмерения.Ссылка КАК Упаковка
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
				   |		ПО (УпаковкиЕдиницыИзмерения.Владелец = Номенклатура.Ссылка)
	               |
	               |ГДЕ
	               |	Номенклатура.Ссылка В(&ИспользуемаяНоменклатура)";
	
	УстановитьПривилегированныйРежим(Истина);
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаЗапроса.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Номенклатура", ВыборкаЗапроса.Номенклатура);
		
		НайденныеСтроки = ДанныеНоменклатуры.НайтиСтроки(СтруктураПоиска);
		
		Для каждого Строка Из НайденныеСтроки Цикл
			ЗаполнитьЗначенияСвойств(Строка, ВыборкаЗапроса, , "Номенклатура");
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Получение свойств торгового предложения.
//
// Параметры:
//  Источник        - СправочникСсылка - источник торгового соглашения, например СправочникСсылка.Соглашения.
//  ЗначенияСвойств - Структура - возвращаемое значение заполнения:
//      * Организация     - ОпределяемыйТип.Организация - организация торгового предложения.
//      * Валюта          - СправочникСсылка            - валюта торгового предложения.
//      * ЦенаВключаетНДС - Булево                      - признак указания цен с учетом НДС.
//
Процедура ПолучитьСвойстваТорговогоПредложения(Знач Источник, ЗначенияСвойств) Экспорт
	
	//++ НЕ ГОСИС
	ЗаполнитьЗначенияСвойств(ЗначенияСвойств,
		ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Источник, "Организация, Валюта"));
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Добавление служебных колонок в таблицу товары.
//
// Параметры:
//  Товары - ТаблицаЗначений - исходная таблица с товарами, колонки:
//    Обязательные поля:
//    * Номенклатура   - ОпределяемыйТип.НоменклатураБЭД - номенклатурная позиция.
//    * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД - характеристика номенклатуры.
//    * Упаковка       - ОпределяемыйТип.УпаковкаНоменклатурыБЭД - упаковка номенклатуры.
//    * Количество     - Число - количество.
//    Заполняемые поля:
//    * УпаковкаКод         - Строка - код упаковки.
//    * ЕдиницаИзмеренияКод - Строка - код единицы измерения.
//    * УпаковкаЧислитель   - Число - числитель упаковки номенклатуры.
//    * УпаковкаЗнаменатель - Число - знаменатель упаковки номенклатуры.
//    * Артикул             - Строка - артикул номенклатуры.
//    * Наименование        - Строка - наименование номенклатуры.
//    * Штрихкоды           - Массив из Строка - штрихкоды номенклатуры.
//  ПолучатьШтрихКоды - Булево - признак необходимости заполнения штрихкодов номенклатуры.
//                               Для значения Ложь, штрихкоды не заполняются.
//
Процедура ДобавитьСлужебныеКолонкиТовары(Товары, Знач ПолучатьШтрихКоды = Ложь) Экспорт
	
	//++ НЕ ГОСИС
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(Товары.Характеристика КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика,
	|	ВЫРАЗИТЬ(Товары.Упаковка КАК Справочник.УпаковкиЕдиницыИзмерения) КАК Упаковка,
	|	ВЫРАЗИТЬ(Товары.Количество КАК ЧИСЛО(15, 3)) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура.Артикул КАК Артикул,
	|	Товары.Номенклатура.Наименование КАК Наименование,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка.Знаменатель = 0
	|			ТОГДА 1
	|		ИНАЧЕ Товары.Упаковка.Знаменатель
	|	КОНЕЦ КАК УпаковкаЗнаменатель,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка.Числитель = 0
	|			ТОГДА 1
	|		ИНАЧЕ Товары.Упаковка.Числитель
	|	КОНЕЦ КАК УпаковкаЧислитель,
	|	Товары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка.Знаменатель = 0
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(Товары.Упаковка)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Товары.Упаковка.ЕдиницаИзмерения)
	|	КОНЕЦ КАК ЕдиницаИзмеренияНаименование,
	|	ВЫБОР
	|		КОГДА Товары.Упаковка.Знаменатель = 0
	|			ТОГДА Товары.Упаковка.Код
	|		ИНАЧЕ Товары.Номенклатура.ЕдиницаИзмерения.Код
	|	КОНЕЦ КАК УпаковкаКод,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод
	|ИЗ
	|	Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка,
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО Товары.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|			И Товары.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|			И Товары.Упаковка = ШтрихкодыНоменклатуры.Упаковка";
	
	Запрос.УстановитьПараметр("Товары", Товары);
	
	РезультатПакета = Запрос.ВыполнитьПакет();
	Выборка = РезультатПакета[1].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокиТовара = Товары.НайтиСтроки(Новый Структура("Номенклатура, Характеристика, Упаковка",
			Выборка.Номенклатура, Выборка.Характеристика, Выборка.Упаковка));
		Для Каждого СтрокаТовара Из СтрокиТовара Цикл
			ЗаполнитьЗначенияСвойств(СтрокаТовара, Выборка,, "Номенклатура, Характеристика, Упаковка");
		КонецЦикла;
	КонецЦикла;
	
	Если ПолучатьШтрихКоды Тогда
		ВыборкаШтрихКоды = РезультатПакета[2].Выбрать();
		Пока ВыборкаШтрихКоды.Следующий() Цикл
			СтрокаТовары = Товары.НайтиСтроки(Новый Структура("Номенклатура, Характеристика, Упаковка",
				ВыборкаШтрихКоды.Номенклатура, ВыборкаШтрихКоды.Характеристика, ВыборкаШтрихКоды.Упаковка));
				
			Если СтрокаТовары <> Неопределено Тогда
				Если СтрокаТовары[0].ШтрихКоды = Неопределено Тогда
					МассивШтрихКодов = Новый Массив;
					МассивШтрихКодов.Добавить(ВыборкаШтрихКоды.ШтрихКод);
					СтрокаТовары[0].ШтрихКоды = МассивШтрихКодов;
				Иначе
					СтрокаТовары[0].ШтрихКоды.Добавить(ВыборкаШтрихКоды.ШтрихКод);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Получает значения контекста на основании которого будет производиться поиск предложений
// и которые будут переданы в шапку создаваемых заказов.
//
// Параметры:
//  ПараметрКоманды   - Массив из ДокументСсылка - ссылки на документы для заполнения таблицы поиска товаров в 1С:Бизнес-сеть.
//  КонтекстИсточника - Структура - свойства источника, используемые для формирования заказов.
//  ТаблицаТовары     - ТаблицаЗначений - товары для поиска с реквизитами, состав:
//    * Номенклатура     - СправочникСсылка - номенклатура.
//    * Характеристика   - СправочникСсылка - характеристика номенклатуры.
//    * Упаковка         - СправочникСсылка - упаковка номенклатуры.
//    * Количество       - Число - количество.
//    * ЕдиницаИзмерения - СправочникСсылка - единица измерения номенклатуры.
//    * Числитель        - Число - числитель упаковки.
//    * Знаменатель      - Число - знаменатель номенклатуры.
//    * Склад            - СправочникСсылка - склад для заказа.
//    * КонтекстСтроки   - Произвольный - дополнительные свойства по источнику.
//
Процедура СвойстваКонтекстаДокументовДляПоискаПредложений(Знач ПараметрКоманды, КонтекстИсточника, ТаблицаТовары) Экспорт
	
	//++ НЕ ГОСИС
	Запрос = Новый Запрос;
	
	Если ТипЗнч(ПараметрКоманды[0]) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		
		ДополнительныеРеквизиты = Новый Структура();
		ДополнительныеРеквизиты.Вставить("Организация");
		ДополнительныеРеквизиты.Вставить("Валюта");
		ДополнительныеРеквизиты.Вставить("Приоритет");
		ДополнительныеРеквизиты.Вставить("Проведен");
		ДополнительныеРеквизиты.Вставить("Сделка");
		ДополнительныеРеквизиты.Вставить("Статус");
		ДополнительныеРеквизиты.Вставить("Склад");
		ДополнительныеРеквизиты.Вставить("НаправлениеДеятельности");
		ДополнительныеРеквизиты.Вставить("ЗакупкаПодДеятельность");
		
		СтруктураКонтекстаСтроки = Новый Структура("КонтекстСтрокиСклад");
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаказПоставщикуТовары.Номенклатура                      КАК Номенклатура,
		|	ЗаказПоставщикуТовары.Характеристика                    КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ЗаказПоставщикуТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЗаказПоставщикуТовары.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ ЗаказПоставщикуТовары.Упаковка
		|	КОНЕЦ                                                   КАК Упаковка,
		|	ЗаказПоставщикуТовары.КоличествоУпаковок                КАК Количество,
		|	ЗаказПоставщикуТовары.Номенклатура.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
		|	ЗаказПоставщикуТовары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
		|	ЗаказПоставщикуТовары.Упаковка.Числитель                КАК Числитель,
		|	ЗаказПоставщикуТовары.Упаковка.Знаменатель              КАК Знаменатель,
		|	ЗаказПоставщикуТовары.Склад                             КАК КонтекстСтрокиСклад
		|ИЗ
		|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
		|ГДЕ
		|	ЗаказПоставщикуТовары.Ссылка В(&СписокСсылок)";
		
	ИначеЕсли ТипЗнч(ПараметрКоманды[0]) = Тип("ДокументСсылка.ПланЗакупок") Тогда
		
		ДополнительныеРеквизиты = "Валюта, Склад";
		СтруктураКонтекстаСтроки = Новый Структура("КонтекстСтрокиСклад");
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПланЗакупокТовары.Номенклатура                      КАК Номенклатура,
		|	ПланЗакупокТовары.Характеристика                    КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ПланЗакупокТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ПланЗакупокТовары.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ ПланЗакупокТовары.Упаковка
		|	КОНЕЦ                                               КАК Упаковка,
		|	ПланЗакупокТовары.КоличествоУпаковок                КАК Количество,
		|	ПланЗакупокТовары.Номенклатура.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
		|	ПланЗакупокТовары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
		|	ПланЗакупокТовары.Упаковка.Числитель                КАК Числитель,
		|	ПланЗакупокТовары.Упаковка.Знаменатель              КАК Знаменатель,
		|	ПланЗакупокТовары.Склад                             КАК КонтекстСтрокиСклад
		|ИЗ
		|	Документ.ПланЗакупок.Товары КАК ПланЗакупокТовары
		|ГДЕ
		|	ПланЗакупокТовары.Ссылка В(&СписокСсылок)";
		
	ИначеЕсли ТипЗнч(ПараметрКоманды[0]) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		
		ДополнительныеРеквизиты = Новый Структура();
		ДополнительныеРеквизиты.Вставить("Организация");
		ДополнительныеРеквизиты.Вставить("Валюта");
		ДополнительныеРеквизиты.Вставить("Приоритет");
		ДополнительныеРеквизиты.Вставить("Проведен");
		ДополнительныеРеквизиты.Вставить("Сделка");
		ДополнительныеРеквизиты.Вставить("Склад");
		ДополнительныеРеквизиты.Вставить("Статус");
		ДополнительныеРеквизиты.Вставить("НаправлениеДеятельности");
		ДополнительныеРеквизиты.Вставить("ДокументОснование",      "Ссылка");
		ДополнительныеРеквизиты.Вставить("ЗакупкаПодДеятельность", "НалогообложениеНДС");
		
		СтруктураКонтекстаСтроки = Новый Структура("КонтекстСтрокиСклад");
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаказКлиентаТовары.Номенклатура                      КАК Номенклатура,
		|	ЗаказКлиентаТовары.Характеристика                    КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ЗаказКлиентаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЗаказКлиентаТовары.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ ЗаказКлиентаТовары.Упаковка
		|	КОНЕЦ                                                КАК Упаковка,
		|	ЗаказКлиентаТовары.КоличествоУпаковок                КАК Количество,
		|	ЗаказКлиентаТовары.Номенклатура.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
		|	ЗаказКлиентаТовары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
		|	ЗаказКлиентаТовары.Упаковка.Числитель                КАК Числитель,
		|	ЗаказКлиентаТовары.Упаковка.Знаменатель              КАК Знаменатель,
		|	ЗаказКлиентаТовары.Склад                             КАК КонтекстСтрокиСклад
		|ИЗ
		|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|ГДЕ
		|	ЗаказКлиентаТовары.Ссылка В(&СписокСсылок)";
		
	ИначеЕсли ТипЗнч(ПараметрКоманды[0]) = Тип("ДокументСсылка.ЗапросКоммерческихПредложенийПоставщиков") Тогда
		
		ДополнительныеРеквизиты = Новый Структура;
		ДополнительныеРеквизиты.Вставить("Организация");
		ДополнительныеРеквизиты.Вставить("Валюта");
		
		СтруктураКонтекстаСтроки = Новый Структура("КонтекстСтрокиСклад");
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗапросКоммерческихПредложенийПоставщиковТовары.ИдентификаторСтрокиЗапроса КАК ИдентификаторСтрокиЗапроса,
		|	ВЫБОР
		|		КОГДА ЗапросКоммерческихПредложенийПоставщиковТовары.ИсточникДобавленияТовара = 0
		|			ТОГДА ЗапросКоммерческихПредложенийПоставщиковТовары.Номенклатура.Наименование
		|		КОГДА ЗапросКоммерческихПредложенийПоставщиковТовары.ИсточникДобавленияТовара = 1
		|			ТОГДА ЗапросКоммерческихПредложенийПоставщиковТовары.НоменклатураВСервисеПредставление
		|		ИНАЧЕ ЗапросКоммерческихПредложенийПоставщиковТовары.НоменклатураТекстом
		|	КОНЕЦ КАК Наименование,
		|	ЗапросКоммерческихПредложенийПоставщиковТовары.Характеристика КАК Характеристика,
		|	ЗапросКоммерческихПредложенийПоставщиковТовары.КатегорияВСервисеИдентификатор КАК ИдентификаторКатегории,
		|	СУММА(ЗапросКоммерческихПредложенийПоставщиковТовары.Количество) КАК Количество,
		|	ВЫБОР
		|		КОГДА ЗапросКоммерческихПредложенийПоставщиковТовары.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ТОГДА ЗапросКоммерческихПредложенийПоставщиковТовары.ЕдиницаИзмерения
		|		КОГДА ЗапросКоммерческихПредложенийПоставщиковТовары.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЗапросКоммерческихПредложенийПоставщиковТовары.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ ЗапросКоммерческихПредложенийПоставщиковТовары.Номенклатура.ЕдиницаИзмерения
		|	КОНЕЦ КАК ЕдиницаИзмерения,
		|	ЗапросКоммерческихПредложенийПоставщиковТовары.Номенклатура КАК Номенклатура,
		|	ЗапросКоммерческихПредложенийПоставщиковТовары.МаксимальнаяЦена КАК ЦенаДо,
		|	ЗапросКоммерческихПредложенийПоставщиков.Склад КАК КонтекстСтрокиСклад
		|ИЗ
		|	Документ.ЗапросКоммерческихПредложенийПоставщиков.Товары КАК ЗапросКоммерческихПредложенийПоставщиковТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗапросКоммерческихПредложенийПоставщиков КАК ЗапросКоммерческихПредложенийПоставщиков
		|		ПО ЗапросКоммерческихПредложенийПоставщиковТовары.Ссылка = ЗапросКоммерческихПредложенийПоставщиков.Ссылка
		|ГДЕ
		|	ЗапросКоммерческихПредложенийПоставщиков.Ссылка В(&СписокСсылок)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗапросКоммерческихПредложенийПоставщиковТовары.ЕдиницаИзмерения,
		|	ЗапросКоммерческихПредложенийПоставщиковТовары.КатегорияВСервисеИдентификатор,
		|	ЗапросКоммерческихПредложенийПоставщиковТовары.Характеристика,
		|	ВЫБОР
		|		КОГДА ЗапросКоммерческихПредложенийПоставщиковТовары.ИсточникДобавленияТовара = 0
		|			ТОГДА ЗапросКоммерческихПредложенийПоставщиковТовары.Номенклатура.Наименование
		|		КОГДА ЗапросКоммерческихПредложенийПоставщиковТовары.ИсточникДобавленияТовара = 1
		|			ТОГДА ЗапросКоммерческихПредложенийПоставщиковТовары.НоменклатураВСервисеПредставление
		|		ИНАЧЕ ЗапросКоммерческихПредложенийПоставщиковТовары.НоменклатураТекстом
		|	КОНЕЦ,
		|	ЗапросКоммерческихПредложенийПоставщиковТовары.ИдентификаторСтрокиЗапроса,
		|	ЗапросКоммерческихПредложенийПоставщиковТовары.Номенклатура,
		|	ЗапросКоммерческихПредложенийПоставщиковТовары.МаксимальнаяЦена,
		|	ЗапросКоммерческихПредложенийПоставщиков.Склад,
		|	ВЫБОР
		|		КОГДА ЗапросКоммерческихПредложенийПоставщиковТовары.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ТОГДА ЗапросКоммерческихПредложенийПоставщиковТовары.ЕдиницаИзмерения
		|		КОГДА ЗапросКоммерческихПредложенийПоставщиковТовары.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЗапросКоммерческихПредложенийПоставщиковТовары.Номенклатура.ЕдиницаИзмерения
		|		ИНАЧЕ ЗапросКоммерческихПредложенийПоставщиковТовары.Номенклатура.ЕдиницаИзмерения
		|	КОНЕЦ";
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СписокСсылок", ПараметрКоманды);
	Товары = Запрос.Выполнить().Выгрузить();
	Товары.Колонки.Добавить("КонтекстСтроки");
	Для Каждого СтрокаТоваров Из Товары Цикл
		КонтекстСтроки = Новый Структура();
		Для Каждого Свойство из СтруктураКонтекстаСтроки Цикл
			ИмяРеквизита = СтрЗаменить(Свойство.Ключ, "КонтекстСтроки", "");
			КонтекстСтроки.Вставить(ИмяРеквизита, СтрокаТоваров[Свойство.Ключ])
		КонецЦикла;
		СтрокаТоваров.КонтекстСтроки = КонтекстСтроки;
		ЗаполнитьЗначенияСвойств(ТаблицаТовары.Добавить(), СтрокаТоваров);
	КонецЦикла;
	КонтекстИсточника = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрКоманды[0], ДополнительныеРеквизиты);
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Вызывается для определения кода единицы измерения по единице измерения.
//  В случае если не определять код единицы измерения внутри данной процедуры,
//  код будет определен как значение реквизита код элемента, в случае, если
//  справочник имеет длину кода не равную нулю.
//
// Параметры:
//  ЕдиницаИзмерения    - СправочникСсылка - единица измерения
//  КодЕдиницыИзмерения - Строка - Код единицы измерения
//
Процедура ОпределитьКодЕдиницыИзмерения(ЕдиницаИзмерения, КодЕдиницыИзмерения) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	КодЕдиницыИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЕдиницаИзмерения, "Код");
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСФормами

// Процедура, вызываемая из обработчика события формы ПриСозданииНаСервере.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма, из обработчика события которой происходит вызов процедуры.
//
Процедура ПриСозданииНаСервере(Форма) Экспорт
	
	//++ НЕ ГОСИС
	Если Найти(Форма.ИмяФормы, "ПоискПоТоварам") Тогда
		
		ГруппЭлементов = Форма.Элементы.Найти("ГруппаКоманднойПанелиПереопределяемая");
		Если ГруппЭлементов = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		ИмяКоманды = ГруппЭлементов.Имя + "ВставкаИзБуфера";
		
		Если Форма.Команды.Найти(ИмяКоманды) <> Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		// Формирование команды вставки из буфера.
		КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
		КомандаФормы.Действие = "Подключаемый_ПереопределяемаяКоманда";
		КомандаФормы.Заголовок = "Вставка из буфера";
		КомандаФормы.ИзменяетСохраняемыеДанные = Истина;
		КомандаФормы.Отображение = ОтображениеКнопки.Картинка;
		КомандаФормы.Картинка = БиблиотекаКартинок.ВставитьИзБуфераОбмена;
		КомандаФормы.СочетаниеКлавиш = Новый СочетаниеКлавиш(Клавиша.V, , Истина, Истина);
		КомандаФормы.Подсказка = "Вставка из буфера";
		КнопкаФормы = Форма.Элементы.Добавить("ТоварыВставитьСтроки", Тип("КнопкаФормы"), ГруппЭлементов);
		КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		КнопкаФормы.ИмяКоманды = ИмяКоманды;
		
		// Формирование команды вставки из буфера.
		ИмяКоманды = ГруппЭлементов.Имя + "ПодобратьТовары";
		КомандаФормы = Форма.Команды.Добавить(ИмяКоманды);
		КомандаФормы.Действие = "Подключаемый_ПереопределяемаяКоманда";
		КомандаФормы.Заголовок = "Подобрать товары";
		КомандаФормы.ИзменяетСохраняемыеДанные = Истина;
		КомандаФормы.Отображение = ОтображениеКнопки.КартинкаИТекст;
		КомандаФормы.Картинка = БиблиотекаКартинок.ПодобратьТовары;
		КомандаФормы.Подсказка = "Открыть подбор товаров";
		КнопкаФормы = Форма.Элементы.Добавить("ПодобратьТовары", Тип("КнопкаФормы"), ГруппЭлементов);
		КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
		КнопкаФормы.ИмяКоманды = ИмяКоманды;
		
		УстановитьДоступностьКомандБуфераОбмена(Форма);
		
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Обработка выбора формы (переопределяемое событие).
// См. описание метода ОбработкаВыбора.
//
// Параметры:
//  Форма             - ФормаКлиентскогоПриложения - форма источника события.
//  ВыбранноеЗначение - Произвольный - выбранное событие.
//  ИсточникВыбора    - Произвольный - форма, где осуществлен выбор.
//
Процедура ОбработатьВыбор(Форма, Знач ВыбранноеЗначение, Знач ИсточникВыбора) Экспорт
	
	//++ НЕ ГОСИС
	Если ИсточникВыбора.ИмяФормы = "Обработка.ПодборТоваровПоОтбору.Форма.Форма"
		И Форма.ИмяФормы = "Обработка.ТорговыеПредложения.Форма.ПоискПоТоварам" Тогда
		
		ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
		
		ЕдиницыИзмеренияНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(
			ТаблицаТоваров.ВыгрузитьКолонку("Номенклатура"),
			"ЕдиницаИзмерения");
		
		Для Каждого СтрокаТовара Из ТаблицаТоваров Цикл
			
			ТекущаяСтрока = Форма.Список.Добавить();
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара);
			
			ТекущаяСтрока.Упаковка = ЕдиницыИзмеренияНоменклатуры.Получить(СтрокаТовара.Номенклатура);
			ТекущаяСтрока.Количество = 1;
			
		КонецЦикла;
		
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Обработка оповещения формы (переопределяемое событие).
// См. описание метода ОбработкаОповещения.
//
// Параметры:
//  ИмяСобытия - Строка - имя оповещения.
//  Параметр   - Произвольный - параметр сообщения.
//  Источник   - ФормаКлиентскогоПриложения - форма источника события.
//
Процедура ОбработатьОповещение(Знач ИмяСобытия, Параметр, Источник) Экспорт
	
	//++ НЕ ГОСИС
	Если ИмяСобытия = "КопированиеСтрокВБуферОбмена"
		И Источник.ИмяФормы = "Обработка.ТорговыеПредложения.Форма.ПоискПоТоварам" Тогда
		
		УстановитьДоступностьКомандБуфераОбмена(Источник);
		
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Устанавливаем условное оформление для единиц измерения номенклатуры.
//
// Параметры:
// 	 Форма - Форма - управляемая форму.
// 	 ИмяПоляВводаЕдиницИзмерения - Строка - наименование элемента формы, содержащего ед. измерения номенклатуры.
// 	 ПутьКПолюОтбора - Строка - полный путь к реквизиту.
//
Процедура УстановитьУсловноеОформлениеЕдиницИзмерения(Форма, Знач ИмяПоляВводаЕдиницИзмерения, Знач ПутьКПолюОтбора) Экспорт
	
	//++ НЕ ГОСИС
	// См. процедуру НоменклатураСервер.УстановитьУсловноеОформлениеЕдиницИзмерения.
	ПараметрыУсловногоОформления = НоменклатураСервер.НовыеПараметрыУсловногоОформленияЕдиницИзмерения();
	ПараметрыУсловногоОформления.ИмяПоляЕдиницаИзмерения = ИмяПоляВводаЕдиницИзмерения;
	ПараметрыУсловногоОформления.ПутьКПолюУпаковка = ПутьКПолюОтбора;
	НоменклатураСервер.УстановитьУсловноеОформлениеЕдиницИзмерения(Форма, ПараметрыУсловногоОформления);
	//-- НЕ ГОСИС
	
КонецПроцедуры

#КонецОбласти

#Область Подсказки

// Добавление служебных колонок в таблицу товары.
//
// Параметры:
//  Ссылка            - ДокументСсылка - ссылка на документ с товарами.
//  ПолучатьШтрихКоды - Булево - признак необходимости заполнения штрихкодов номенклатуры.
//  Товары            - ТаблицаЗначений - таблица с товарами:
//   * Номенклатура        - Ссылка - номенклатура.
//   * Характеристика      - Ссылка - характеристика.
//   * Упаковка            - Ссылка - упаковка.
//   * Количество          - Число - количество товара.
//   * УпаковкаКод         - Строка - код упаковки по классификатору ОКЕИ.
//   * ЕдиницаИзмеренияКод - Строка - код единицы измерений по классификатору ОКЕИ.
//   * УпаковкаЧислитель   - Число - числитель упаковки по отношению к единице измерения.
//   * УпаковкаЗнаменатель - Знаменатель - знаменатель упаковки по отношению к единице измерения.
//   * Артикул             - Строка - артикул товара.
//   * Наименование        - Строка - наименование товара.
//   * Штрихкоды           - Массив из Строка - штрихкоды товара.
//
Процедура ПолучитьТоварыДляПодсказокПоСсылке(Знач Ссылка, Знач ПолучатьШтрихКоды, Товары) Экспорт
	
	//++ НЕ ГОСИС
	Если ТипЗнч(Ссылка) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗаказПоставщикуТовары.Номенклатура КАК Номенклатура,
		|	ЗаказПоставщикуТовары.Характеристика КАК Характеристика,
		|	ЗаказПоставщикуТовары.Упаковка КАК Упаковка,
		|	ЗаказПоставщикуТовары.Количество КАК Количество
		|ИЗ
		|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
		|ГДЕ
		|	ЗаказПоставщикуТовары.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Товары.Добавить(), Выборка);
		КонецЦикла;
		ДобавитьСлужебныеКолонкиТовары(Товары, ПолучатьШтрихКоды);
		
	ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика, 
		|	Номенклатура.ЕдиницаИзмерения КАК Упаковка,
		|	1 КАК Количество
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Товары.Добавить(), Выборка);
		КонецЦикла;
		ДобавитьСлужебныеКолонкиТовары(Товары, ПолучатьШтрихКоды);
		
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Заполняет данных номенклатуры для выгрузки в сервис 1С:Бизнес-сеть. Выгрузка необходима для формирования
// уведомлений пользователю о наличии в сервисе предложений по товарам, которые он закупает, 
// а также уведомлений о наличии спроса на товар, который он продает.
// Данные должны формироваться на основании оборотов организации за день, предшествующий дню даты вызова метода.
//
// Параметры:
//  Организации	    - Массив из ОпределяемыйТип.Организация - список организаций, для которых производится выгрузка.
//  РежимПоставщика - Булево - выгружать только данные по продажам.
//  РежимПокупателя - Булево - выгружать только данные по покупкам.
//  Штрихкоды       - ТаблицаЗначений - данные по штрихкодам:
//    * Организация     - ОпределяемыйТип.Организация - ссылка на организацию.
//    * Штрихкод        - Строка - штрихкод товара.
//    * Артикул         - Строка - артикул товара.
//    * Наименование    - Строка - наименование товара.
//    * ВидНоменклатуры - Строка, Массив - наименование вида номенклатуры (категории, группы номенклатуры) 
//                                         или массив из наименований видов номенклатуры по иерархии.
//    * РежимПоставщика - Булево - признак использования штрихкода в продажах.
//    * РежимПокупателя - Булево - признак использования штрихкода в закупках.
//
Процедура ЗаполнитьШтрихкодыДляВыгрузки(Знач Организации, Знач РежимПоставщика, Знач РежимПокупателя, Штрихкоды) Экспорт
	
	//++ НЕ ГОСИС
	ВзаиморасчетыСервер.ЗаполнитьШтрихкодыДляВыгрузки(Организации, РежимПоставщика, РежимПокупателя, Штрихкоды)
	//-- НЕ ГОСИС
	
КонецПроцедуры

#КонецОбласти

#Область ЗаказыПоставщикам

// Создает документ заказ поставщику на основании данных торгового предложения.
//
// Параметры:
//  ДанныеЗаполнения - Структура - данные торгового предложения:
//   * Организация       - ОпределяемыйТип.Организация   - организация торгового предложения.
//   * Контрагент        - ОпределяемыйТип.КонтрагентБЭД - поставщик торгового предложения.
//   * Валюта            - СправочникСсылка - валюта торгового предложения.
//   * СтрокиЗаказа      - ТаблицаЗначений - содержит данные табличной части.
//      ** Номенклатура     - СправочникСсылка.
//      ** Характеристика   - СправочникСсылка.
//      ** ЕдиницаИзмерения - СправочникСсылка.
//      ** Количество       - Число.
//      ** Цена             - Число.
//      ** ЦенаВключаетНДС  - Булево.
//      ** СтавкаНДС        - ПеречислениеСсылка.
//      ** СуммаНДС         - Число.
//      ** СуммаСНДС        - Число.
//      ** Сумма            - Число.
//      ** ИдентификаторНоменклатуры - Строка - идентификатор номенклатуры поставщика.
//   * КонтекстИсточника - Структура - набор данных из основания содержащий данные для заполнения шапки документа.
//   * СпособДоставки    - Ссылка - способ доставки прикладного решения.
//   * АдресДоставки     - Строка - представление адреса доставки.
//   * АдресДоставкиЗначенияПолей - Строка - значение адреса доставки в формате XML.
//  ДокументОбъект - ДокументОбъект - созданный документ для заказа товаров, может быть не записан.
//  Отказ - Булево - признак ошибки при работе метода.
//
Процедура СоздатьДокументЗаказПоставщикуНаОснованииТорговогоПредложения(Знач ДанныеЗаполнения, ДокументОбъект, Отказ) Экспорт
	
	//++ НЕ ГОСИС
	КонтекстИсточника = ДанныеЗаполнения.КонтекстИсточника;
	СтрокиЗаказа = ДанныеЗаполнения.СтрокиЗаказа;
	Организация = ДанныеЗаполнения.Организация;
	Контрагент = ДанныеЗаполнения.Контрагент;
	Валюта = ДанныеЗаполнения.Валюта;
	
	ДокументОбъект = Документы.ЗаказПоставщику.СоздатьДокумент();
	ДокументОбъект.Дата = ТекущаяДатаСеанса();
	ДокументОбъект.Автор = Пользователи.АвторизованныйПользователь();

	// Реквизиты шапки.
	ДокументОбъект.Организация = Организация;
	ДокументОбъект.Контрагент =  Контрагент;
	ДокументОбъект.Партнер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Контрагент, "Партнер");
	ДокументОбъект.Валюта = Валюта;
	ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
	ДокументОбъект.Статус = Перечисления.СтатусыЗаказовПоставщикам.НеСогласован;
	Если КонтекстИсточника <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект, КонтекстИсточника);
	КонецЕсли;
	
	// Заполнение данных по доставке.
	Если ДанныеЗаполнения.Свойство("СпособДоставки") Тогда
		ДокументОбъект.СпособДоставки = ДанныеЗаполнения.СпособДоставки;
		Если ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.НашимиСиламиСАдресаОтправителя Тогда
			ДокументОбъект.АдресДоставки = ДанныеЗаполнения.АдресДоставки;
			ДокументОбъект.АдресДоставкиЗначенияПолей = ДанныеЗаполнения.АдресДоставкиЗначенияПолей;
		ИначеЕсли ДокументОбъект.СпособДоставки = Перечисления.СпособыДоставки.СиламиПоставщикаДоНашегоСклада Тогда
			ДокументОбъект.АдресДоставкиДляПоставщика = ДанныеЗаполнения.АдресДоставки;
			ДокументОбъект.АдресДоставкиЗначенияПолей = ДанныеЗаполнения.АдресДоставкиЗначенияПолей;
		КонецЕсли;
	КонецЕсли;
	
	// Заполнение соглашения по статистике.
	ОписаниеРеквизитов = Новый Структура;
	Параметры = ЗаполнениеОбъектовПоСтатистике.ПараметрыЗаполняемыхРеквизитов();
	Параметры.РазрезыСбораСтатистики.ИспользоватьТолькоЗаполненные = "Партнер, Валюта, ЦенаВключаетНДС";
	ЗаполнениеОбъектовПоСтатистике.ДобавитьОписаниеЗаполняемыхРеквизитов(ОписаниеРеквизитов, "Соглашение", Параметры);
	ЗаполнениеОбъектовПоСтатистике.ЗаполнитьРеквизитыОбъекта(ДокументОбъект, Неопределено, ОписаниеРеквизитов);
	
	Сегодня = НачалоДня(ТекущаяДата());
	Сутки = 60 * 60 * 24;
	
	// Товары.
	Для каждого СтрокаЗаказа Из СтрокиЗаказа Цикл
		СтрокаТовары = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовары, СтрокаЗаказа);
		СтрокаТовары.Характеристика = СтрокаЗаказа.Характеристика;
		СтрокаТовары.КоличествоУпаковок = СтрокаЗаказа.Количество;
		СтрокаТовары.ДатаПоступления = Сегодня + (СтрокаЗаказа.СрокПоставки * Сутки);
		Если ЗначениеЗаполнено(СтрокаЗаказа.КонтекстСтроки) Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТовары, СтрокаЗаказа.КонтекстСтроки);
		КонецЕсли;
		Если Не ПустаяСтрока(СтрокаЗаказа.ИдентификаторНоменклатуры) Тогда
			СтрокаТовары.НоменклатураПартнера = Справочники.НоменклатураКонтрагентов.НайтиПоРеквизиту("Идентификатор", СтрокаЗаказа.ИдентификаторНоменклатуры);
		КонецЕсли;
	КонецЦикла;
	
	ДокументОбъект.Заполнить(Неопределено); // Инициализация документа.
	ДокументОбъект.УстановитьНовыйНомер();
	
	ТаблицаДатПоступления = ДокументОбъект.Товары.Выгрузить(, "ДатаПоступления");
	ТаблицаДатПоступления.Свернуть("ДатаПоступления");
	ДокументОбъект.ПоступлениеОднойДатой = ТаблицаДатПоступления.Количество() = 1;
	Если ДокументОбъект.ПоступлениеОднойДатой Тогда
		ДокументОбъект.ДатаПоступления = ТаблицаДатПоступления[0].ДатаПоступления;
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Удаляет созданные заказы поставщику при переходе на шаг назад.
//
// Параметры:
//  ТаблицаДокументы - ТаблицаЗначений - таблица документов для удаления, состав:
//    * Ссылка - ДокументСсылка - ссылка на удаляемый документ.
//  Отказ - Булево - признак результата удаления документов.
//
Процедура УдалитьДокументыЗаказПоставщику(ТаблицаДокументы, Отказ) Экспорт
	
	//++ НЕ ГОСИС
	Сообщение = Новый СообщениеПользователю();
	ТекстИмеютсяСсылки = НСтр("ru = 'Имеются ссылки на %1 - %2.'");
	ТекстПомечен = НСтр("ru = '%1 - помечен на удаление.'");
	ТекстЗаблокирован  = НСтр("ru = '%1 - заблокирован. Пометить на удаление не удалось.'");
	ТекстУдален = НСтр("ru = '%1 - удален.'");
	
	ИменаОбъектовМетаданных = "Документ.ЗаказПоставщику";
	Регистры = ОбщегоНазначенияУТПовтИсп.РегистрыСведенийПоМетаданнымИзмерений(ИменаОбъектовМетаданных, Истина);
	
	СсылкиНаУдаление = Новый Массив();
	Для Каждого Строка Из ТаблицаДокументы Цикл
		СсылкиНаУдаление.Добавить(Строка.Ссылка);
	КонецЦикла;

	ОбъектыРасчетовСервер.ДополнитьСсылкамиНаОбъектыРасчетов(СсылкиНаУдаление);

	НазначенияЗаказов = НазначенияЗаказов(СсылкиНаУдаление);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СсылкиНаУдаление, НазначенияЗаказов);
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаСсылок = НайтиПоСсылкам(СсылкиНаУдаление);
	
	ВсегоСтрок = ТаблицаСсылок.Количество();
	Для Счетчик = 1 По ВсегоСтрок Цикл
		Ссылка = ТаблицаСсылок[ВсегоСтрок - Счетчик];
		Если Ссылка[0] = Ссылка[1] Или ЭтоЗаписьВедомогоРегистраСведений(Ссылка[1], Регистры) Тогда
			ТаблицаСсылок.Удалить(Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	ПомечатьНаУдаление = Новый Массив();
	
	ВсегоСтрок = ТаблицаСсылок.Количество();
	Для Счетчик = 1 По ВсегоСтрок Цикл
		Ссылка = ТаблицаСсылок[ВсегоСтрок - Счетчик];
		Индекс = СсылкиНаУдаление.Найти(Ссылка[1]);
		Если Индекс = Неопределено Тогда
			Если ПомечатьНаУдаление.Найти(Ссылка[0]) = Неопределено Тогда
				ПомечатьНаУдаление.Добавить(Ссылка[0]);
				Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстИмеютсяСсылки, СокрЛП(Ссылка[0]), СокрЛП(Ссылка[1]));
				Сообщение.Сообщить();
			КонецЕсли;
			ТаблицаСсылок.Удалить(Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	ОбработкаЗавершена = Ложь;
	Пока Не ОбработкаЗавершена Цикл
		ОбработкаЗавершена = Истина;
		ВсегоСтрок = ТаблицаСсылок.Количество();
		Для Счетчик = 1 По ВсегоСтрок Цикл
			Ссылка = ТаблицаСсылок[ВсегоСтрок - Счетчик];
			Если ПомечатьНаУдаление.Найти(Ссылка[0]) <> Неопределено Тогда
				Если ПомечатьНаУдаление.Найти(Ссылка[1]) = Неопределено Тогда
					ПомечатьНаУдаление.Добавить(Ссылка[1]);
				КонецЕсли;
				ТаблицаСсылок.Удалить(Ссылка);
				ОбработкаЗавершена = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ТаблицаДокументы.Очистить();
	
	Для Каждого Ссылка из ПомечатьНаУдаление Цикл
		Индекс = СсылкиНаУдаление.Найти(Ссылка);
		Если Индекс <> Неопределено Тогда
			СсылкиНаУдаление.Удалить(Индекс);
		КонецЕсли;
		ДокументОбъект = Ссылка.ПолучитьОбъект();
		Если Не ДокументОбъект.Заблокирован() Тогда
			ДокументОбъект.УстановитьПометкуУдаления(Истина);
			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстПомечен, СокрЛП(Ссылка));
		Иначе
			Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаблокирован, СокрЛП(Ссылка));
		КонецЕсли;
		Сообщение.Сообщить();
	КонецЦикла;
	
	Для Каждого Ссылка Из СсылкиНаУдаление Цикл
		Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстУдален, СокрЛП(Ссылка));
		Сообщение.Сообщить();
	КонецЦикла;
	
	УдалитьОбъекты(СсылкиНаУдаление, Ложь);
	УстановитьПривилегированныйРежим(Ложь);
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Производит пересчет суммы для заказа товаров.
//
// Параметры:
//  СтрокаТоваров - Структура - реквизиты строки товаров для пересчета суммы при формировании заказов:
//    * ПроцентНДС      - Строка - значение НДС, полученное из сервиса.
//    * СтавкаНДС       - Ссылка - значение ставки НДС.
//    * Цена            - Число - цена товара для заказа.
//    * ЦенаВключаетНДС - Булево - признак включения НДС в цену.
//    * Количество      - Число - количество товара для заказа.
//    * Сумма           - Число - сумма заказа по строке.
//    * СуммаНДС        - Число - сумма НДС строки.
//    * СуммаСНДС       - Число - значение суммы с НДС.
//    * ПроцентСкидки   - Число - процент скидки по строке.
//    * СуммаСкидки     - Число - сумма скидки по строке.
//
Процедура ПересчитатьСуммуПоСтроке(СтрокаТоваров) Экспорт
	
	//++ НЕ ГОСИС
	СуммаБезСкидки = СтрокаТоваров.Количество * СтрокаТоваров.Цена;
	
	СтрокаТоваров.СуммаСкидки = Окр(СуммаБезСкидки * СтрокаТоваров.ПроцентСкидки / 100, 2);
	СтрокаТоваров.Сумма = Макс(СуммаБезСкидки - СтрокаТоваров.СуммаСкидки,0);
	
	СтрокаТоваров.СуммаНДС = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(СтрокаТоваров.Сумма,
																			СтрокаТоваров.СтавкаНДС,
																			СтрокаТоваров.ЦенаВключаетНДС);
	Если СтрокаТоваров.ЦенаВключаетНДС Тогда
		СтрокаТоваров.СуммаСНДС = СтрокаТоваров.Сумма;
	Иначе
		СтрокаТоваров.СуммаСНДС = СтрокаТоваров.Сумма + СтрокаТоваров.СуммаНДС;
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Заполнение реквизитов заказов.
//
// Параметры:
//  ТаблицаЗаказов	 - ТаблицаЗначений - таблица с ссылками и реквизитами для заполнения:
//                       *Ссылка - ДокументСсылка - ссылка на документ заказа
//                       *Контрагент - ОпределяемыйТип.КонтрагентБЭД - контрагент документа
//                       *Организация - ОпределяемыйТип.Организация - организация документа
//                       *СуммаДокумента - Число - сумма документа
//                       *Валюта - СправочникСсылка -валюта документа
//                       *ЗначениеКартинки - Число - индекс картинки документа коллекции 
//                          БиблиотекаКартинок.СтатусыДокумента для отображения статуса документа
//
Процедура ЗаполнитьРеквизитыЗаказов(ТаблицаЗаказов) Экспорт
	
	//++ НЕ ГОСИС
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказПоставщику.Ссылка,
	|	ЗаказПоставщику.Контрагент,
	|	ЗаказПоставщику.Организация,
	|	ЗаказПоставщику.СуммаДокумента,
	|	ЗаказПоставщику.Валюта,
	|	ВЫБОР
	|		КОГДА ЗаказПоставщику.Проведен
	|			ТОГДА 1
	|		КОГДА ЗаказПоставщику.ПометкаУдаления
	|			ТОГДА 2
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗначениеКартинки
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|ГДЕ
	|	ЗаказПоставщику.Ссылка В(&СписокДокументов)
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("СписокДокументов", ТаблицаЗаказов.ВыгрузитьКолонку("Ссылка"));
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаТаблицы = ТаблицаЗаказов.Найти(Выборка.Ссылка, "Ссылка");
		Если СтрокаТаблицы = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
	КонецЦикла;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// В обработчике требуется определить право текущего пользователя на создание
//   документов заказа поставщику.
//
// Параметры:
//  ЕстьПраво      - Булево - признак наличия прав у текущего пользователя на
//                         создание документов заказа поставщику
//                         Истина - пользователь имеет права создавать документы
//                         Ложь - права на создание документов отсутствуют
//  ТекстСообщения - Строка - текст сообщения пользователю, выводимое при отсутствии
//                         права на создание документов.
//
Процедура ПриОпределенииПраваСозданияЗаказовПоставщику(ЕстьПраво, ТекстСообщения) Экспорт
	
	ЕстьПраво = ПравоДоступа("Добавление", Метаданные.Документы.ЗаказПоставщику);
	ТекстСообщения = НСтр("ru = 'Отсутствуют права на создание документов.'");
	
КонецПроцедуры

#КонецОбласти

#Область ПубликацияТорговыхПредложений

// Инициализация запроса публикуемых прайс листов.
// В запросе необходимо описать получение временных таблицы с предопределенными полями.
// Возможно добавление дополнительных полей для использования в других временных таблицах.
//
// Параметры запроса:
//  * ПрайсЛист - ОпределяемыйТип.ТорговоеПредложение - ссылка на прайс-лист.
//  * Период    - дата - получения периодических данных, например дата установки цены.
//
// Временные таблицы и предопределенные поля:
// ПрайсЛисты - данные прайс листов:
//  * Ссылка                - ОпределяемыйТип.ТорговоеПредложение - ссылка на прайс-лист.
//  * Организация           - ОпределяемыйТип.Организация - ссылка на организацию.
//  * Наименование          - Строка - наименование.
//  * ДатаНачалаДействия    - Дата - дата начала действия.
//  * ДатаОкончанияДействия - Дата - дата окончания действия.
//  * Валюта                - СправочникСсылка.Валюты - валюта публикации.
//  * ЦенаВключаетНДС        - Булево - признак включения НДС в минимальную сумму заказа.
//  * СрокПоставки           - Число - срок поставки товара.
//  * ПоВсемТоварам          - Булево - признак того, что предложение формируется по всем товарам прайс листа.
//  * ВидЦены                - СправочникСсылка.ВидыЦен - вид цены.
//  * МинимальнаяСуммаЗаказа - Число - минимальная сумма для оформления заказа (0 - сумма заказа может быть любой).
//  * ПубликоватьЦены        - Булево - признак публикации цен на товары.
//
// Контрагенты - для которых доступны торговые предложения:
//  * ПрайсЛист - ОпределяемыйТип.ТорговоеПредложение - ссылка прайс-листа.
//  * Контрагент - ОпределяемыйТип.КонтрагентБЭД - ссылка на контрагента.
//
// Контакты - контактная информация:
//  * ПрайсЛист             - ОпределяемыйТип.ТорговоеПредложение - ссылка на прайс-лист.
//  * ПредставлениеКонтакта - Строка - представление контакта, например ФИО.
//  * Телефон               - Строка - телефон.
//  * ЭлектроннаяПочта      - Строка - адрес электронной почты.
//  * ВебСайт               - Строка - адрес сайта.
//
// Товары - данные товаров:
//  * ПрайсЛист        - ОпределяемыйТип.ТорговоеПредложение - ссылка на прайс-лист.
//  * Номенклатура     - ОпределяемыйТип.НоменклатураБЭД - номенклатура.
//  * Характеристика   - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД - характеристика.
//  * ЕдиницаИзмерения - СправочникСсылка - базовая единица измерения товара.
//  * НаименованиеНоменклатуры   - Строка - публикуемое представление номенклатуры.
//  * НаименованиеХарактеристики - Строка - публикуемое представление характеристики.
//  * ОписаниеНоменклатуры       - Строка - описание номенклатуры.
//  * Артикул              - Строка - артикул товара.
//  * Упаковка             - ОпределяемыйТип.УпаковкаНоменклатурыБЭД - упаковка товара.
//  * НаименованиеУпаковки - Строка - наименование упаковки товара.
//  * ЧислительУпаковки    - Число  - числитель отношения упаковки к единице измерения.
//  * ЗнаменательУпаковки  - Число  - знаменатель отношения упаковки к единице измерения.
//  * КратностьУпаковки    - Число  - кратность количества логистических упаковок в торговом предложении.
//  * СтавкаНДС            - Ссылка - значение ставки НДС.
//  * ЦенаВключаетНДС      - Булево - признак включения НДС в цену
//  * Цена                 - Число  - стоимость товара в валюте публикации.
//  * СрокПоставки         - Число  - срок поставки на склад поставщика.
//  * Наличие              - Число - наличие товара на складах (0 - нет на складе, 1 - мало, 2 - достаточно, 3 - много).
//  * Количество           - Число - количество товара на складах. 
//  * ВидНоменклатуры      - СправочникСсылка - группировка номенклатуры в прикладном решении.
//  * Родитель             - СправочникСсылка - родитель номенклатуры в иерархии.
//  * ПричинаИсключенияИзПубликации - ОпределяемыйТип.ПричинаИсключенияИзПубликацииТорговыеПредложения - причина по которой
//         данная позиция не должна быть опубликована в сервисе. В случае, если данная позиция должна быть опубликована
//         содержит в себе пустое значение типа ОпределяемыйТип.ПричинаИсключенияИзПубликацииТорговыеПредложения.
//
// Свойства - характеристики номенклатуры:
//  * Номенклатура   - ОпределяемыйТип.НоменклатураБЭД - номенклатура.
//  * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД - характеристика.
//  * Свойство       - Ссылка - свойство товара.
//  * Значение       - Ссылка - значение свойства товара.
//
// Штрихкоды - штрихкоды номенклатуры:
//  * Номенклатура   - ОпределяемыйТип.НоменклатураБЭД - номенклатура.
//  * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД - характеристика.
//  * Упаковка       - СправочникСсылка - единица измерения упаковки товара.
//  * Значение       - Строка - штрихкод.
//
// Изображения - отбираются актуальные изображения товаров поставщика для публикации:
//  * Номенклатура    - ОпределяемыйТип.НоменклатураБЭД                                   - номенклатура.
//  * Характеристика  - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД                     - характеристика.
//  * ФайлИзображения - ОпределяемыйТип.ПрисоединенныеФайлыИзображенийТорговоеПредложение - ссылка на
//                        справочник "ПрисоединенныеФайлы", реализованный по технологии библиотеки стандартных подсистем,
//                        обрабатываются с расширением: jpeg, jpg, jpe, png, gif, bmp.
//
// СкидкиЗаОбъемПродаж - описывает цену одной логистической упаковки ТП при приобретении указанного объема товара
// при варианте публикации "Виды скидок". Из выборки необходимо исключить записи где количество = 1:
//  * Номенклатура   - ОпределяемыйТип.НоменклатураБЭД - номенклатура.
//  * Количество     - Число  - при покупке заданного количества логистических упаковок, от.
//  * ВидыЦен        - ОпределяемыйТип.ВидыСкидок
//  * Цена           - Число  - стоимость товара в валюте публикации.
//  * ЦенаДоСкидки   - Число  - в случае, если товар имеет дополнительную скидку, по мимо скидки за объем продаж, 
//  								указывается стоимость товара до скидки в валюте публикации.
//  * Комментарий    - Строка - текстовое описание ценового условия.
//
// СкидкиЗаОбъемПродажВидыЦен - описывает цену одной логистической упаковки ТП при приобретении указанного объема товара
// при варианте публикации "Виды цен". Из выборки необходимо исключить записи где количество = 1:
//  * Номенклатура   - ОпределяемыйТип.НоменклатураБЭД - номенклатура.
//  * Количество     - Число  - при покупке заданного количества логистических упаковок, от.
//  * ВидыЦен        - ОпределяемыйТип.ВидыЦен
//  * Цена           - Число  - стоимость товара в валюте публикации.
//  * ЦенаДоСкидки   - Число  - в случае, если товар имеет дополнительную скидку, по мимо скидки за объем продаж, 
//  								указывается стоимость товара до скидки в валюте публикации.
//  * Комментарий    - Строка - текстовое описание ценового условия.
//
// СкидкиПроцентСумма - описывает цену одной логистической упаковки ТП для выбранной скидки, 
// при варианте публикации "Виды скидок". Из выборки необходимо исключить записи где количество > 1:
//  * Номенклатура   - ОпределяемыйТип.НоменклатураБЭД - номенклатура.
//  * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД - характеристика.
//  * ВидыЦен      - ОпределяемыйТип.ВидыСкидок
//  * Цена           - Число  - стоимость товара в валюте публикации.
//  * Комментарий    - Строка - текстовое описание ценового условия.
//
// СкидкиПроцентСуммаВидыЦен - описывает цену одной логистической упаковки ТП для выбранной скидки,
// при варианте публикации "Виды цен". Из выборки необходимо исключить записи где количество > 1:
//  * Номенклатура   - ОпределяемыйТип.НоменклатураБЭД - номенклатура.
//  * Характеристика - ОпределяемыйТип.ХарактеристикаНоменклатурыБЭД - характеристика.
//  * ВидыЦен        - ОпределяемыйТип.ВидыЦен
//  * Цена           - Число  - стоимость товара в валюте публикации.
//  * Комментарий    - Строка - текстовое описание ценового условия.
//
// Параметры:
//  Запрос - Запрос - запрос для получения публикуемых прайс-листов и товаров.
//
Процедура ИнициализацияЗапросаПубликуемыхТоваров(Запрос) Экспорт
	
	//++ НЕ ГОСИС
	
	// Описание возвращаемых данных по запросу.
	//
	// ПрайсЛисты: соглашения с клиентами, по которым публикуются торговые предложения в сервисе 1С:Бизнес-сеть.
	//   Условия публикации:
	//    - Установлен признак публикации.
	//    - Нет пометки удаления.
	//
	// Контрагенты: клиенты, для которых доступно торговое предложение.
	//   Условия доступности товаров для просмотра/заказа:
	//    - Клиент входит в состав сегмента клиентов соглашения.
	//    - Индивидуальное соглашение с клиентом.
	//
	// Контакты: данные контактной информации публикуемые в сервисе:
	//    - ПредставлениеКонтакта - ФИО менеджера соглашения.
	//    - Телефон - рабочий телефон менеджера соглашения.
	//    - ЭлектроннаяПочта - электронная почта менеджера соглашения.
	//
	// Товары: товары, публикуемые в сервисе 1С:Бизнес-сеть.
	//   Условия публикации товаров:
	//    - Сегмент номенклатуры соглашения не заполнен или номенклатура входит в сегмент номенклатуры.
	//    - Товар указан в таблице "Уточнение цен по товарам".
	//    - На товар установлена цена по виду цены соглашения, или товар указан на закладке
	//      "Уточнение цен по товарам".
	//    - Товар находится на остатках склада, указанном в соглашении, или склад соглашения не заполнен
	//      и товар находится на остатках предприятия.
	//
	// Свойства: значения дополнительных реквизитов товаров.
	//
	// Штрихкоды: список штрихкодов номенклатуры товаров.
	
	Тексты = Новый Массив();
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СоглашенияСКлиентами.Ссылка КАК Ссылка,
	|	СоглашенияСКлиентами.СегментНоменклатуры КАК СегментНоменклатуры,
	|	СоглашенияСКлиентами.Склад КАК Склад,
	|	СоглашенияСКлиентами.ВидЦен КАК ВидЦен,
	|	СоглашенияСКлиентами.ИндивидуальныйВидЦены КАК ИндивидуальныйВидЦены,
	|	СоглашенияСКлиентами.МинимальнаяСуммаЗаказа КАК МинимальнаяСуммаЗаказа,
	|	СоглашенияСКлиентами.Организация КАК Организация,
	|	СоглашенияСКлиентами.Наименование КАК Наименование,
	|	СоглашенияСКлиентами.ДатаНачалаДействия КАК ДатаНачалаДействия,
	|	СоглашенияСКлиентами.ДатаОкончанияДействия КАК ДатаОкончанияДействия,
	|	СоглашенияСКлиентами.Валюта КАК Валюта,
	|	СоглашенияСКлиентами.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	СоглашенияСКлиентами.СрокПоставки КАК СрокПоставки,
	|	СоглашенияСКлиентами.Типовое КАК Типовое,
	|	СоглашенияСКлиентами.СегментПартнеров КАК СегментПартнеров,
	|	СоглашенияСКлиентами.Контрагент КАК Контрагент,
	|	СоглашенияСКлиентами.Партнер КАК Партнер,
	|	СоглашенияСКлиентами.Менеджер.ФизическоеЛицо КАК МенеджерФизическоеЛицо,
	|	СоглашенияСКлиентами.Менеджер КАК Менеджер,
	|	Истина КАК ОбновлятьОстаткиИЦены,
	|	СостоянияСинхронизацииТорговыеПредложения.ПубликоватьЦены КАК ПубликоватьЦены,
	|	СостоянияСинхронизацииТорговыеПредложения.ПубликоватьСрокиПоставки КАК ПубликоватьСрокиПоставки,
	|	СостоянияСинхронизацииТорговыеПредложения.ПубликоватьОстатки КАК ПубликоватьОстатки
	|ПОМЕСТИТЬ ПрайсЛисты
	|ИЗ
	|	РегистрСведений.СостоянияСинхронизацииТорговыеПредложения КАК СостоянияСинхронизацииТорговыеПредложения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|		ПО СостоянияСинхронизацииТорговыеПредложения.ТорговоеПредложение = СоглашенияСКлиентами.Ссылка
	|ГДЕ
	|	НЕ СоглашенияСКлиентами.ПометкаУдаления
	|	И (&ПрайсЛист = НЕОПРЕДЕЛЕНО
	|			ИЛИ &ПрайсЛист = ЗНАЧЕНИЕ(Справочник.СоглашенияСКлиентами.ПУстаяСсылка)
	|			ИЛИ СоглашенияСКлиентами.Ссылка В (&ПрайсЛист))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрайсЛисты.Ссылка КАК ПрайсЛист,
	|	Контрагенты.Ссылка КАК Контрагент
	|ПОМЕСТИТЬ Контрагенты
	|ИЗ
	|	ПрайсЛисты КАК ПрайсЛисты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПартнерыСегмента КАК ПартнерыСегмента
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|			ПО ПартнерыСегмента.Партнер = Контрагенты.Партнер
	|		ПО ПрайсЛисты.СегментПартнеров = ПартнерыСегмента.Сегмент
	|ГДЕ
	|	НЕ Контрагенты.ИНН = """"
	|	И ПрайсЛисты.Типовое = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	Контрагенты.Ссылка,
	|	ПрайсЛисты.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрайсЛисты.Ссылка,
	|	Контрагенты.Ссылка
	|ИЗ
	|	ПрайсЛисты КАК ПрайсЛисты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ПрайсЛисты.Партнер = Контрагенты.Партнер
	|ГДЕ
	|	НЕ Контрагенты.ИНН = """"
	|	И ПрайсЛисты.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|	И ПрайсЛисты.Типовое = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	Контрагенты.Ссылка,
	|	ПрайсЛисты.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрайсЛисты.Ссылка,
	|	Контрагенты.Ссылка
	|ИЗ
	|	ПрайсЛисты КАК ПрайсЛисты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|		ПО ПрайсЛисты.Контрагент = Контрагенты.Ссылка
	|ГДЕ
	|	НЕ Контрагенты.ИНН = """"
	|	И ПрайсЛисты.Типовое = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	Контрагенты.Ссылка,
	|	ПрайсЛисты.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПрайсЛисты.Ссылка КАК ПрайсЛист,
	|	ПРЕДСТАВЛЕНИЕ(ПрайсЛисты.МенеджерФизическоеЛицо) КАК ПредставлениеКонтакта,
	|	ЕСТЬNULL(ФизическиеЛицаТелефон.Представление, """") КАК Телефон,
	|	ЕСТЬNULL(ФизическиеЛицаЭлектроннаяПочта.Представление, """") КАК ЭлектроннаяПочта
	|ПОМЕСТИТЬ Контакты
	|ИЗ
	|	Справочник.ФизическиеЛица.КонтактнаяИнформация КАК Контакты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрайсЛисты КАК ПрайсЛисты
	|		ПО Контакты.Ссылка = ПрайсЛисты.МенеджерФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаТелефон
	|		ПО Контакты.Ссылка = ФизическиеЛицаТелефон.Ссылка
	|			И (ФизическиеЛицаТелефон.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.КонтактнаяИнформация КАК ФизическиеЛицаЭлектроннаяПочта
	|		ПО Контакты.Ссылка = ФизическиеЛицаЭлектроннаяПочта.Ссылка
	|			И (ФизическиеЛицаЭлектроннаяПочта.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|ГДЕ
	|	НЕ ПрайсЛисты.МенеджерФизическоеЛицо = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрайсЛисты.Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ПрайсЛисты.Менеджер),
	|	ЕСТЬNULL(ПользователиТелефон.Представление, """"),
	|	ЕСТЬNULL(ПользователиЭлектроннаяПочта.Представление, """")
	|ИЗ
	|	Справочник.Пользователи.КонтактнаяИнформация КАК Контакты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрайсЛисты КАК ПрайсЛисты
	|		ПО Контакты.Ссылка = ПрайсЛисты.Менеджер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиТелефон
	|		ПО Контакты.Ссылка = ПользователиТелефон.Ссылка
	|			И (ПользователиТелефон.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи.КонтактнаяИнформация КАК ПользователиЭлектроннаяПочта
	|		ПО Контакты.Ссылка = ПользователиЭлектроннаяПочта.Ссылка
	|			И (ПользователиЭлектроннаяПочта.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|ГДЕ
	|	ПрайсЛисты.МенеджерФизическоеЛицо = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрайсЛисты.Ссылка КАК ТорговоеПредложение,
	|	ПрайсЛисты.Склад КАК Склад
	|ПОМЕСТИТЬ ТорговыеПредложенияБезУчетаСегментов
	|ИЗ
	|	ПрайсЛисты КАК ПрайсЛисты
	|ГДЕ
	|	ПрайсЛисты.СегментНоменклатуры = ЗНАЧЕНИЕ(Справочник.СегментыНоменклатуры.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТорговоеПредложение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрайсЛисты.СегментНоменклатуры КАК СегментНоменклатуры,
	|	ПрайсЛисты.Ссылка КАК ТорговоеПредложение,
	|	ПрайсЛисты.Склад КАК Склад
	|ПОМЕСТИТЬ ТорговыеПредложенияПоСегментам
	|ИЗ
	|	ПрайсЛисты КАК ПрайсЛисты
	|ГДЕ
	|	НЕ ПрайсЛисты.СегментНоменклатуры = ЗНАЧЕНИЕ(Справочник.СегментыНоменклатуры.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СегментНоменклатуры";
	Тексты.Добавить(ТекстЗапроса);
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Запасы.Склад КАК Склад,
		|	Запасы.Номенклатура КАК Номенклатура,
		|	Запасы.Характеристика КАК Характеристика,
		|	Запасы.ВНаличииОстаток КАК Количество
		|ПОМЕСТИТЬ СвободныеОстаткиИсходные
		|ИЗ
		|	РегистрНакопления.ЗапасыИПотребности.Остатки(,
		|		Склад ССЫЛКА Справочник.Склады
		|			И ИСТИНА В (
		|				ВЫБРАТЬ ПЕРВЫЕ 1
		|					ИСТИНА КАК ЕстьЗаписи
		|				ИЗ
		|					ПрайсЛисты КАК ПрайсЛисты
		|				ГДЕ
		|					ПрайсЛисты.ПубликоватьОстатки)
		|			И (Склад В(
		|					ВЫБРАТЬ РАЗЛИЧНЫЕ
		|							ПрайсЛисты.Склад КАК Склад
		|						ИЗ
		|							ПрайсЛисты КАК ПрайсЛисты)
		|					ИЛИ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) В(
		|						ВЫБРАТЬ ПЕРВЫЕ 1
		|							ПрайсЛисты.Склад КАК Склад
		|						ИЗ
		|							ПрайсЛисты КАК ПрайсЛисты
		|						ГДЕ
		|							ПрайсЛисты.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)))
		|		{Номенклатура.* КАК Номенклатура, Характеристика.* КАК Характеристика}) КАК Запасы
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад";
	Тексты.Добавить(ТекстЗапроса);
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СвободныеОстатки.Склад КАК Склад,
	|	СвободныеОстатки.Номенклатура КАК Номенклатура,
	|	СвободныеОстатки.Характеристика КАК Характеристика,
	|	СвободныеОстатки.Количество КАК Количество
	|ПОМЕСТИТЬ СвободныеОстатки
	|ИЗ
	|	СвободныеОстаткиИсходные КАК СвободныеОстатки
	|ГДЕ
	|	СвободныеОстатки.Склад В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ПрайсЛисты.Склад
	|			ИЗ
	|				ПрайсЛисты КАК ПрайсЛисты)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
	|	СвободныеОстатки.Номенклатура,
	|	СвободныеОстатки.Характеристика,
	|	СУММА(СвободныеОстатки.Количество)
	|ИЗ
	|	СвободныеОстаткиИсходные КАК СвободныеОстатки
	|ГДЕ
	|	ИСТИНА В
	|			(ВЫБРАТЬ
	|				ИСТИНА
	|			ИЗ
	|				ПрайсЛисты КАК ПрайсЛисты
	|			ГДЕ
	|				ПрайсЛисты.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	СвободныеОстатки.Номенклатура,
	|	СвободныеОстатки.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Склад,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СвободныеОстаткиИсходные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоглашенияСКлиентамиТовары.Ссылка КАК ТорговоеПредложение,
	|	СоглашенияСКлиентамиТовары.Номенклатура КАК Номенклатура,
	|	СоглашенияСКлиентамиТовары.Характеристика КАК Характеристика,
	|	СоглашенияСКлиентамиТовары.Упаковка КАК Упаковка,
	|	СоглашенияСКлиентамиТовары.Цена КАК Цена
	|ПОМЕСТИТЬ УточнениеЦенТоваров
	|ИЗ
	|	Справочник.СоглашенияСКлиентами.Товары КАК СоглашенияСКлиентамиТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрайсЛисты КАК ПрайсЛисты
	|		ПО СоглашенияСКлиентамиТовары.Ссылка = ПрайсЛисты.Ссылка
	|ГДЕ
	|	НЕ &ИспользуетсяЦенообразование25
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТорговоеПредложение,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТорговыеПредложенияПоСегментам.Склад КАК Склад,
	|	НоменклатураСегмента.Номенклатура КАК Номенклатура,
	|	НоменклатураСегмента.Характеристика КАК Характеристика,
	|	ТорговыеПредложенияПоСегментам.ТорговоеПредложение КАК ТорговоеПредложение
	|ПОМЕСТИТЬ НоменклатураСегментовТорговыхПредложений
	|ИЗ
	|	ТорговыеПредложенияПоСегментам КАК ТорговыеПредложенияПоСегментам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураСегмента КАК НоменклатураСегмента
	|		ПО ТорговыеПредложенияПоСегментам.СегментНоменклатуры = НоменклатураСегмента.Сегмент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТорговыеПредложенияПоСегментам.Склад,
	|	УточнениеЦенТоваров.Номенклатура,
	|	УточнениеЦенТоваров.Характеристика,
	|	ТорговыеПредложенияПоСегментам.ТорговоеПредложение
	|ИЗ
	|	УточнениеЦенТоваров КАК УточнениеЦенТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТорговыеПредложенияПоСегментам КАК ТорговыеПредложенияПоСегментам
	|		ПО УточнениеЦенТоваров.ТорговоеПредложение = ТорговыеПредложенияПоСегментам.ТорговоеПредложение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Склад,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТорговыеПредложенияПоСегментам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка) КАК ХарактеристикаЦО
	|ПОМЕСТИТЬ ПолныйСписокТоваров
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ВидыНоменклатуры.Ссылка = Номенклатура.ВидНоменклатуры
	|ГДЕ
	|	(НЕ ВидыНоменклатуры.ИспользоватьХарактеристики
	|			ИЛИ ВидыНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать))
	|	И ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				ТорговыеПредложенияБезУчетаСегментов КАК ТорговыеПредложенияБезУчетаСегментов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	ХарактеристикиНоменклатуры.Ссылка,
	|	ВЫБОР
	|		КОГДА
	|			ВидыНоменклатуры.НастройкиКлючаЦенПоХарактеристике = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка)
	|		ИНАЧЕ ХарактеристикиНоменклатуры.ХарактеристикаНоменклатурыДляЦенообразования
	|	КОНЕЦ
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|			ПО Номенклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|		ПО ВидыНоменклатуры.Ссылка = Номенклатура.ВидНоменклатуры
	|ГДЕ
	|	ВидыНоменклатуры.ИспользоватьХарактеристики
	|	И ВидыНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры)
	|	И ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				ТорговыеПредложенияБезУчетаСегментов КАК ТорговыеПредложенияБезУчетаСегментов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	ХарактеристикиНоменклатуры.Ссылка,
	|	ВЫБОР
	|		КОГДА
	|			ВидыНоменклатуры.НастройкиКлючаЦенПоХарактеристике = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка)
	|		ИНАЧЕ ХарактеристикиНоменклатуры.ХарактеристикаНоменклатурыДляЦенообразования
	|	КОНЕЦ
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ВидыНоменклатуры.Ссылка = Номенклатура.ВидНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО ВидыНоменклатуры.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	ВидыНоменклатуры.ИспользоватьХарактеристики
	|	И ВидыНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры)
	|	И ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				ТорговыеПредложенияБезУчетаСегментов КАК ТорговыеПредложенияБезУчетаСегментов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	ХарактеристикиНоменклатуры.Ссылка,
	|	ВЫБОР
	|		КОГДА
	|			ВидыНоменклатуры.НастройкиКлючаЦенПоХарактеристике = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка)
	|		ИНАЧЕ ХарактеристикиНоменклатуры.ХарактеристикаНоменклатурыДляЦенообразования
	|	КОНЕЦ
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|		ПО ВидыНоменклатуры.Ссылка = Номенклатура.ВидНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО ВидыНоменклатуры.ВладелецХарактеристик = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	ВидыНоменклатуры.ИспользоватьХарактеристики
	|	И ВидыНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры)
	|	И ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				ТорговыеПредложенияБезУчетаСегментов КАК ТорговыеПредложенияБезУчетаСегментов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТорговыеПредложенияБезУчетаСегментов.Склад КАК Склад,
	|	ПолныйСписокТоваров.Номенклатура КАК Номенклатура,
	|	ПолныйСписокТоваров.Характеристика КАК Характеристика,
	|	ПолныйСписокТоваров.ХарактеристикаЦО КАК ХарактеристикаЦО,
	|	ТорговыеПредложенияБезУчетаСегментов.ТорговоеПредложение КАК ТорговоеПредложение
	|ПОМЕСТИТЬ ПозицииТорговыхПредложений
	|ИЗ
	|	ТорговыеПредложенияБезУчетаСегментов КАК ТорговыеПредложенияБезУчетаСегментов,
	|	ПолныйСписокТоваров КАК ПолныйСписокТоваров
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НоменклатураСегментовТорговыхПредложений.Склад,
	|	НоменклатураСегментовТорговыхПредложений.Номенклатура,
	|	НоменклатураСегментовТорговыхПредложений.Характеристика,
	|	ВЫБОР
	|		КОГДА
	|			ВидыНоменклатуры.НастройкиКлючаЦенПоХарактеристике = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка)
	|		ИНАЧЕ НоменклатураСегментовТорговыхПредложений.Характеристика.ХарактеристикаНоменклатурыДляЦенообразования
	|	КОНЕЦ,
	|	НоменклатураСегментовТорговыхПредложений.ТорговоеПредложение
	|ИЗ
	|	НоменклатураСегментовТорговыхПредложений КАК НоменклатураСегментовТорговыхПредложений
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО НоменклатураСегментовТорговыхПредложений.Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Склад,
	|	Номенклатура,
	|	Характеристика,
	|	ХарактеристикаЦО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТорговыеПредложенияБезУчетаСегментов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПолныйСписокТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НоменклатураСегментовТорговыхПредложений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварныеОграничения.Склад КАК Склад,
	|	ТоварныеОграничения.Номенклатура КАК Номенклатура,
	|	ТоварныеОграничения.Характеристика КАК Характеристика,
	|	СУММА(ТоварныеОграничения.МинимальноеКоличествоЗапаса) КАК МинимальноеКоличествоЗапаса,
	|	СУММА(ТоварныеОграничения.МаксимальноеКоличествоЗапаса) КАК МаксимальноеКоличествоЗапаса
	|ПОМЕСТИТЬ ТоварныеОграничения
	|ИЗ
	|	РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
	|ГДЕ
	|	ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ПрайсЛисты.ПубликоватьОстатки
	|			ИЗ
	|				ПрайсЛисты КАК ПрайсЛисты
	|			ГДЕ
	|				ПрайсЛисты.ПубликоватьОстатки)
	|	И (ТоварныеОграничения.Склад, ТоварныеОграничения.Номенклатура, ТоварныеОграничения.Характеристика) В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ПозицииТорговыхПредложений.Склад,
	|				ПозицииТорговыхПредложений.Номенклатура,
	|				ПозицииТорговыхПредложений.Характеристика
	|			ИЗ
	|				ПозицииТорговыхПредложений КАК ПозицииТорговыхПредложений)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварныеОграничения.Склад,
	|	ТоварныеОграничения.Номенклатура,
	|	ТоварныеОграничения.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Склад,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПозицииТорговыхПредложений.Номенклатура КАК Номенклатура,
	|	ПозицииТорговыхПредложений.Характеристика КАК Характеристика,
	|	ПозицииТорговыхПредложений.ХарактеристикаЦО КАК ХарактеристикаЦО,
	|	ПрайсЛисты.ВидЦен КАК ВидЦены,
	|	ПрайсЛисты.ИндивидуальныйВидЦены КАК ИндивидуальныйВидЦены,
	|	ПозицииТорговыхПредложений.ТорговоеПредложение КАК ТорговоеПредложение,
	|	ВЫБОР
	|		КОГДА НЕ ПрайсЛисты.ПубликоватьОстатки
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА СвободныеОстатки.Количество <= 0
	|			ТОГДА 0
	|		КОГДА СвободныеОстатки.Количество <= ЕСТЬNULL(ТоварныеОграничения.МинимальноеКоличествоЗапаса, 0)
	|			ТОГДА 1
	|		КОГДА СвободныеОстатки.Количество < ЕСТЬNULL(ТоварныеОграничения.МаксимальноеКоличествоЗапаса, 0)
	|			ТОГДА 2
	|		КОГДА СвободныеОстатки.Количество >= ЕСТЬNULL(ТоварныеОграничения.МаксимальноеКоличествоЗапаса, 0)
	|			ТОГДА 3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Наличие,
	|	ВЫБОР
	|		КОГДА НЕ ПрайсЛисты.ПубликоватьОстатки
	|			ТОГДА 0
	|		ИНАЧЕ СвободныеОстатки.Количество
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ПозицииТорговыхПредложенийСОстатками
	|ИЗ
	|	ПозицииТорговыхПредложений КАК ПозицииТорговыхПредложений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрайсЛисты КАК ПрайсЛисты
	|		ПО ПозицииТорговыхПредложений.ТорговоеПредложение = ПрайсЛисты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СвободныеОстатки КАК СвободныеОстатки
	|		ПО ПозицииТорговыхПредложений.Склад = СвободныеОстатки.Склад
	|			И ПозицииТорговыхПредложений.Номенклатура = СвободныеОстатки.Номенклатура
	|			И ПозицииТорговыхПредложений.Характеристика = СвободныеОстатки.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварныеОграничения КАК ТоварныеОграничения
	|		ПО ПозицииТорговыхПредложений.Склад = ТоварныеОграничения.Склад
	|			И ПозицииТорговыхПредложений.Номенклатура = ТоварныеОграничения.Номенклатура
	|			И ПозицииТорговыхПредложений.Характеристика = ТоварныеОграничения.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	ХарактеристикаЦО,
	|	ВидЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СвободныеОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПозицииТорговыхПредложений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТоварныеОграничения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатуры.Характеристика КАК Характеристика,
	|	ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
	|	ЦеныНоменклатуры.Цена КАК Цена,
	|	ЦеныНоменклатуры.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ ЦеныНоменклатуры
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних({(&Период)}, (Номенклатура, Характеристика, ВидЦены) В
	|		(ВЫБРАТЬ
	|		Т.Номенклатура,
	|		Т.Характеристика,
	|		Т.ВидЦены
	|	ИЗ
	|		ПозицииТорговыхПредложенийСОстатками КАК Т)) КАК ЦеныНоменклатуры
	|	ГДЕ
	|		НЕ &ИспользуетсяЦенообразование25
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ПозицииТорговыхПредложенийСОстатками.Характеристика КАК Характеристика,
	|	ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
	|	ЦеныНоменклатуры.Цена КАК Цена,
	|	ЦеныНоменклатуры.Упаковка КАК Упаковка
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры25.СрезПоследних({(&Период)}, 
	|		(Номенклатура, ХарактеристикаЦО, СерияЦО, УпаковкаЦО, ВидЦены) В
	|		(ВЫБРАТЬ
	|		Т.Номенклатура,
	|		Т.ХарактеристикаЦО,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатурыДляЦенообразования.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|		Т.ВидЦены
	|	ИЗ
	|		ПозицииТорговыхПредложенийСОстатками КАК Т)) КАК ЦеныНоменклатуры
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПозицииТорговыхПредложенийСОстатками КАК ПозицииТорговыхПредложенийСОстатками
	|ПО ЦеныНоменклатуры.Номенклатура = ПозицииТорговыхПредложенийСОстатками.Номенклатура
	|	И ЦеныНоменклатуры.ХарактеристикаЦО = ПозицииТорговыхПредложенийСОстатками.ХарактеристикаЦО
	|	ГДЕ
	|		&ИспользуетсяЦенообразование25
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	ВидЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ПозицииТорговыхПредложенийСОстатками.Характеристика КАК Характеристика,
	|	ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
	|	ЦеныНоменклатуры.Цена КАК Цена,
	|	ЦеныНоменклатуры.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ ЦеныНоменклатурыИндивидуальные
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры25.СрезПоследних({(&Период)}, 
	|		(Номенклатура, ХарактеристикаЦО, СерияЦО, УпаковкаЦО, ВидЦены) В
	|		(ВЫБРАТЬ
	|		Т.Номенклатура,
	|		Т.ХарактеристикаЦО,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатурыДляЦенообразования.ПустаяСсылка),
	|		ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|		Т.ИндивидуальныйВидЦены
	|	ИЗ
	|		ПозицииТорговыхПредложенийСОстатками КАК Т)) КАК ЦеныНоменклатуры
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПозицииТорговыхПредложенийСОстатками КАК ПозицииТорговыхПредложенийСОстатками
	|ПО ЦеныНоменклатуры.Номенклатура = ПозицииТорговыхПредложенийСОстатками.Номенклатура
	|	И ЦеныНоменклатуры.ХарактеристикаЦО = ПозицииТорговыхПредложенийСОстатками.ХарактеристикаЦО
	|	ГДЕ
	|		&ИспользуетсяЦенообразование25
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	ВидЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПозицииТорговыхПредложенийСОстатками.ТорговоеПредложение КАК ТорговоеПредложение,
	|	ПозицииТорговыхПредложенийСОстатками.Номенклатура КАК Номенклатура,
	|	ПозицииТорговыхПредложенийСОстатками.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(ЦеныНоменклатурыИндивидуальные.ВидЦены, ПозицииТорговыхПредложенийСОстатками.ВидЦены) КАК ВидЦены,
	|	ПозицииТорговыхПредложенийСОстатками.Наличие КАК Наличие,
	|	ПозицииТорговыхПредложенийСОстатками.Количество КАК Количество,
	|	ЕСТЬNULL(ЦеныНоменклатурыИндивидуальные.Упаковка, ЕСТЬNULL(ЦеныНоменклатуры.Упаковка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка))) КАК Упаковка,
	|	ЕСТЬNULL(ЦеныНоменклатурыИндивидуальные.Цена, ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)) КАК Цена
	|ПОМЕСТИТЬ ПозицииТорговыхПредложенийСЦенами
	|ИЗ
	|	ПозицииТорговыхПредложенийСОстатками КАК ПозицииТорговыхПредложенийСОстатками
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ПозицииТорговыхПредложенийСОстатками.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И ПозицииТорговыхПредложенийСОстатками.Характеристика = ЦеныНоменклатуры.Характеристика
	|			И ПозицииТорговыхПредложенийСОстатками.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныНоменклатурыИндивидуальные КАК ЦеныНоменклатурыИндивидуальные
	|		ПО ПозицииТорговыхПредложенийСОстатками.Номенклатура = ЦеныНоменклатурыИндивидуальные.Номенклатура
	|			И ПозицииТорговыхПредложенийСОстатками.Характеристика = ЦеныНоменклатурыИндивидуальные.Характеристика
	|			И ПозицииТорговыхПредложенийСОстатками.ИндивидуальныйВидЦены = ЦеныНоменклатурыИндивидуальные.ВидЦены
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТорговоеПредложение,
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЦеныНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЦеныНоменклатурыИндивидуальные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПозицииТорговыхПредложенийСОстатками
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПозицииТорговыхПредложенийСЦенами.ТорговоеПредложение КАК ТорговоеПредложение,
	|	ПозицииТорговыхПредложенийСЦенами.Номенклатура КАК Номенклатура,
	|	ПозицииТорговыхПредложенийСЦенами.Характеристика КАК Характеристика,
	|	ПозицииТорговыхПредложенийСЦенами.ВидЦены КАК ВидЦены,
	|	ВЫБОР
	|		КОГДА НЕ УточнениеЦенТоваров.Упаковка ЕСТЬ NULL
	|				И НЕ УточнениеЦенТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА УточнениеЦенТоваров.Упаковка
	|		КОГДА НЕ ПозицииТорговыхПредложенийСЦенами.Упаковка ЕСТЬ NULL
	|				И НЕ ПозицииТорговыхПредложенийСЦенами.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ПозицииТорговыхПредложенийСЦенами.Упаковка
	|		ИНАЧЕ ПозицииТорговыхПредложенийСЦенами.Номенклатура.ЕдиницаИзмерения
	|	КОНЕЦ КАК Упаковка,
	|	ПозицииТорговыхПредложенийСЦенами.Наличие КАК Наличие,
	|	ПозицииТорговыхПредложенийСЦенами.Количество КАК Количество,
	|	ЕСТЬNULL(УточнениеЦенТоваров.Цена, ПозицииТорговыхПредложенийСЦенами.Цена) КАК Цена
	|ПОМЕСТИТЬ ПозицииТорговыхПредложенийСУточнениями
	|ИЗ
	|	ПозицииТорговыхПредложенийСЦенами КАК ПозицииТорговыхПредложенийСЦенами
	|		ЛЕВОЕ СОЕДИНЕНИЕ УточнениеЦенТоваров КАК УточнениеЦенТоваров
	|		ПО ПозицииТорговыхПредложенийСЦенами.ТорговоеПредложение = УточнениеЦенТоваров.ТорговоеПредложение
	|			И ПозицииТорговыхПредложенийСЦенами.Номенклатура = УточнениеЦенТоваров.Номенклатура
	|			И ПозицииТорговыхПредложенийСЦенами.Характеристика = УточнениеЦенТоваров.Характеристика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрайсЛисты КАК ПрайсЛисты
	|		ПО ПозицииТорговыхПредложенийСЦенами.ТорговоеПредложение = ПрайсЛисты.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТорговоеПредложение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УточнениеЦенТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПозицииТорговыхПредложенийСЦенами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПозицииТорговыхПредложенийСУточнениями.ТорговоеПредложение КАК ПрайсЛист,
	|	ПозицииТорговыхПредложенийСУточнениями.Номенклатура КАК Номенклатура,
	|	ПозицииТорговыхПредложенийСУточнениями.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА НЕ ПозицииТорговыхПредложенийСУточнениями.Упаковка.Владелец В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения), ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры))
	|			ТОГДА ПозицииТорговыхПредложенийСУточнениями.Упаковка.Владелец.ЕдиницаИзмерения
	|		ИНАЧЕ ПозицииТорговыхПредложенийСУточнениями.Упаковка
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	ПозицииТорговыхПредложенийСУточнениями.Номенклатура.НаименованиеПолное КАК НаименованиеНоменклатуры,
	|	ПозицииТорговыхПредложенийСУточнениями.Характеристика.Наименование КАК НаименованиеХарактеристики,
	|	ПозицииТорговыхПредложенийСУточнениями.Номенклатура.Артикул КАК Артикул,
	|	ВЫРАЗИТЬ(ПозицииТорговыхПредложенийСУточнениями.Номенклатура.Описание КАК СТРОКА(1000)) КАК ОписаниеНоменклатуры,
	|	ЕСТЬNULL(СтавкиНДСНоменклатуры.СтавкаНДС, ЕСТЬNULL(ОсновныеСтавкиНДС.СтавкаНДС,
	|		ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка))) КАК СтавкаНДС,
	|	ПозицииТорговыхПредложенийСУточнениями.Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ПозицииТорговыхПредложенийСУточнениями.Номенклатура.Родитель КАК Родитель,
	|	ПозицииТорговыхПредложенийСУточнениями.Упаковка КАК Упаковка,
	|	ПозицииТорговыхПредложенийСУточнениями.Упаковка.Наименование КАК НаименованиеУпаковки,
	|	ВЫБОР
	|		КОГДА ПозицииТорговыхПредложенийСУточнениями.Упаковка.Числитель = 0
	|			ТОГДА 1
	|		ИНАЧЕ ПозицииТорговыхПредложенийСУточнениями.Упаковка.Числитель
	|	КОНЕЦ КАК ЧислительУпаковки,
	|	ВЫБОР
	|		КОГДА ПозицииТорговыхПредложенийСУточнениями.Упаковка.Знаменатель = 0
	|			ТОГДА 1
	|		ИНАЧЕ ПозицииТорговыхПредложенийСУточнениями.Упаковка.Знаменатель
	|	КОНЕЦ КАК ЗнаменательУпаковки,
	|	1 КАК КратностьУпаковки,
	|	ПозицииТорговыхПредложенийСУточнениями.ВидЦены.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ПозицииТорговыхПредложенийСУточнениями.Наличие КАК Наличие,
	|	ПозицииТорговыхПредложенийСУточнениями.Количество  КАК Количество,
	|	ПозицииТорговыхПредложенийСУточнениями.Цена КАК Цена,
	|	ВЫБОР
	|		КОГДА ПрайсЛисты.ПубликоватьЦены
	|				И ПозицииТорговыхПредложенийСУточнениями.Цена = 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ПричиныИсключенияИзПубликацииТорговогоПредложения.НеУказанаЦена)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ПричиныИсключенияИзПубликацииТорговогоПредложения.ПустаяСсылка)
	|	КОНЕЦ КАК ПричинаИсключенияИзПубликации,
	|	ПрайсЛисты.СрокПоставки КАК СрокПоставки,
	|	ПрайсЛисты.ВидЦен КАК ВидЦен
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	ПозицииТорговыхПредложенийСУточнениями КАК ПозицииТорговыхПредложенийСУточнениями
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрайсЛисты КАК ПрайсЛисты
	|		ПО ПозицииТорговыхПредложенийСУточнениями.ТорговоеПредложение = ПрайсЛисты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры.СрезПоследних({(&Период)}) КАК СтавкиНДСНоменклатуры
	|		ПО ПозицииТорговыхПредложенийСУточнениями.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура
	|			И ПозицииТорговыхПредложенийСУточнениями.ТорговоеПредложение.Организация.СтранаРегистрации = СтавкиНДСНоменклатуры.Страна
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС.СрезПоследних({(&Период)}) КАК ОсновныеСтавкиНДС
	|		ПО ПозицииТорговыхПредложенийСУточнениями.ТорговоеПредложение.Организация.СтранаРегистрации = ОсновныеСтавкиНДС.Страна
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПозицииТорговыхПредложенийСУточнениями
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	НоменклатураДополнительныеРеквизиты.Свойство КАК Свойство,
	|	НоменклатураДополнительныеРеквизиты.Значение КАК Значение
	|ПОМЕСТИТЬ Свойства
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Товары КАК Товары
	|		ПО (Товары.Номенклатура = НоменклатураДополнительныеРеквизиты.Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ХарактеристикиНоменклатурыДополнительныеРеквизиты.Свойство,
	|	ХарактеристикиНоменклатурыДополнительныеРеквизиты.Значение
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры.ДополнительныеРеквизиты КАК ХарактеристикиНоменклатурыДополнительныеРеквизиты
	|		ПО Товары.Характеристика = ХарактеристикиНоменклатурыДополнительныеРеквизиты.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	&Свойство,
	|	&Значение
	|ИЗ
	|	Товары КАК Товары
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.ЕдиницаИзмерения КАК Упаковка,
	|	ЕСТЬNULL(Штрихкоды.Штрихкод, """") КАК Значение
	|ПОМЕСТИТЬ Штрихкоды
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|		ПО Товары.Номенклатура = Штрихкоды.Номенклатура
	|			И Товары.Характеристика = Штрихкоды.Характеристика
	|			И (Товары.ЕдиницаИзмерения = ВЫБОР
	|				КОГДА НЕ Штрихкоды.Упаковка.Владелец В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения), ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры))
	|					ТОГДА Штрихкоды.Упаковка.Владелец.ЕдиницаИзмерения
	|				КОГДА Штрихкоды.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА ВЫБОР
	|							КОГДА НЕ Штрихкоды.Номенклатура.ЕдиницаИзмерения.Владелец В (НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения), ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры))
	|								ТОГДА Штрихкоды.Номенклатура.ЕдиницаИзмерения.Владелец.ЕдиницаИзмерения
	|							ИНАЧЕ Товары.ЕдиницаИзмерения
	|						КОНЕЦ
	|				ИНАЧЕ Штрихкоды.Упаковка
	|			КОНЕЦ)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.ЕдиницаИзмерения,
	|	ЕСТЬNULL(Штрихкоды.Штрихкод, """")
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	НоменклатураПрисоединенныеФайлы.Ссылка КАК ФайлИзображения
	|ПОМЕСТИТЬ Изображения
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НоменклатураПрисоединенныеФайлы КАК НоменклатураПрисоединенныеФайлы
	|		ПО Товары.Номенклатура.ФайлКартинки = НоменклатураПрисоединенныеФайлы.Ссылка
	|ГДЕ
	|	НоменклатураПрисоединенныеФайлы.ИндексКартинки МЕЖДУ 42 И 50
	|	И НЕ НоменклатураПрисоединенныеФайлы.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	ФайлИзображения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Количество КАК Количество,
	|	Товары.ВидЦен КАК ВидыЦен,
	|	Товары.Цена КАК Цена,
	|	0 КАК ЦенаДоСкидки,
	|	"""" КАК Комментарий
	|ПОМЕСТИТЬ СкидкиЗаОбъемПродажВидыЦен
	|ИЗ
	|	Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Количество КАК Количество,
	|	Товары.ВидЦен КАК ВидыЦен,
	|	Товары.Цена КАК Цена,
	|	0 КАК ЦенаДоСкидки,
	|	"""" КАК Комментарий
	|ПОМЕСТИТЬ СкидкиПроцентСуммаВидыЦен
	|ИЗ
	|	Товары КАК Товары";

	Тексты.Добавить(ТекстЗапроса);
	Запрос.Текст = СтрСоединить(Тексты, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос.УстановитьПараметр("Период", ТекущаяДатаСеанса());
	Запрос.УстановитьПараметр("ИспользуетсяЦенообразование25", ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25());
	
	ДобавитьРеквизитыНоменклатурыВЗапрос(Запрос);
	//-- НЕ ГОСИС
	
КонецПроцедуры

#КонецОбласти

#Область ДиагностикаОшибокТорговыхПредложений

// Определяет возможность изменения реквизитов карточки торгового предложения, которые доступны
//    к интерактивному редактированию из печатной формы.
//
// Реквизиты, для которых доступность редактирования будет установлена в Истина будут выделены
//    цветом и пиктограммой в карточке торгового предложения. При нажатии на значение данного 
//    реквизита будет вызван метод ОбработатьНажатиеПоГиперссылкеРеквизитаКарточкиТорговогоПредложения
//    общего модуля ТорговыеПредложенияКлиентПереопределяемый.
//
// Параметры:
//  Реквизиты - Соответствие     - соответствие, определяющее доступность интерактивного изменения
//        реквизитов торгового предложения в карточке торгового предложения:
//            * Ключ - Строка - имя реквизита с учетом имени таблицы. Например:
//                    "Товары.НаименованиеНоменклатуры", "Контакты.Телефон"
//            * Значение - Булево - определяет, будет ли доступно интерактивное изменение реквизита
//
// Пример:
//    Реквизиты["Товары.НаименованиеНоменклатуры"] = Истина;
//    Реквизиты["Контакты.Телефон"] = Ложь;
//
Процедура ОпределитьОбрабатываемыеРеквизитыКарточкиТорговогоПредложения(Реквизиты) Экспорт 
	
	//++ НЕ ГОСИС
	
	// Таблица "Товары"
	Реквизиты.Вставить("Товары.НаименованиеНоменклатуры"                 , Истина);
	Реквизиты.Вставить("Товары.Артикул"                                  , Истина);
	Реквизиты.Вставить("Товары.НаименованиеУпаковки"                     , Истина);
	Реквизиты.Вставить("Товары.Цена"                                     , Истина);
	Реквизиты.Вставить("Товары.СтавкаНДС"                                , Истина);
	Реквизиты.Вставить("Товары.СрокПоставки"                             , Истина);
	Реквизиты.Вставить("Товары.Наличие"                                  , Истина);
	
	// Таблица "ПрайсЛистыСлужебный"
	Реквизиты.Вставить("ПрайсЛистыСлужебный.НаименованиеОрганизации"     , Истина);
	Реквизиты.Вставить("ПрайсЛистыСлужебный.ИННОрганизации"              , Истина);
	Реквизиты.Вставить("ПрайсЛистыСлужебный.КППОрганизации"              , Истина);
	Реквизиты.Вставить("ПрайсЛистыСлужебный.ТелефонОрганизации"          , Истина);
	Реквизиты.Вставить("ПрайсЛистыСлужебный.СайтОрганизации"             , Истина);
	Реквизиты.Вставить("ПрайсЛистыСлужебный.ЭлектроннаяПочтаОрганизации" , Истина);
	
	// Таблица "Контакты"
	Реквизиты.Вставить("Контакты.ПредставлениеКонтакта"                  , Истина);
	Реквизиты.Вставить("Контакты.Телефон"                                , Истина);
	Реквизиты.Вставить("Контакты.ЭлектроннаяПочта"                       , Истина);
	
	// Изображения.
	Реквизиты.Вставить("Изображения.ФайлИзображения"                     , Истина);

	//-- НЕ ГОСИС
	
КонецПроцедуры

// Вызывается для получения информации об объектах-источниках незаполненных данных при
//    проверке заполнения обязательных реквизитов.
//
// В последствии выводит ссылки для диагностики на форму и при нажатии пользователем на 
//    ошибку открывает объект и выводит сообщение, позиционируясь на реквизите для заполнения.
//    В случае открытии формы сообщение выводится стандартно, без позиционирования.
// Проверяемые реквизиты:
//  "Товары.Артикул"
//  "Товары.НаименованиеНоменклатуры"
//  "Товары.НаименованиеХарактеристики"
//  "Товары.НаименованиеУпаковки" 
//  "Товары.НаименованиеУпаковки" 
//  "Товары.УпаковкаКод" 
//  "Товары.УпаковкаКод" 
//  "Товары.СтавкаНДС"
//  "Товары.Изображения"
//  "СкидкиЗаОпт.Цена"
//  "Скидки.Цена"
//  "Свойства.Свойство"
//  "Контакты.Телефон"
//  "ПрайсЛисты.АдресЭлектроннойПочты"
//  "ПрайсЛисты.Наименование"
//  "ПрайсЛисты.ДатаНачалаДействия"
//  "ПрайсЛисты.ДатаОкончанияДействия"
//  "КонтрагентыСлужебный.КонтрагентИНН"
//  "КонтрагентыСлужебный.КонтрагентКПП"
//  "ПричинаИсключенияИзПубликации"
//
// Параметры:
//  ПроверяемыйРеквизит        -     Строка - имя колонки и таблицы для публикации товаров
//            см. ТорговыеПредложенияПереопределяемый.ИнициализацияЗапросаПубликуемыхТоваров
//  СтрокаТорговогоПредложения -     СтрокаТаблицыЗначений - строка таблицы для публикации товаров
//            см. ТорговыеПредложенияПереопределяемый.ИнициализацияЗапросаПубликуемыхТоваров
//  ДополнительныйРеквизит     -     ОпределяемыйТип.ДополнительныеРеквизитыРаботаСНоменклатурой, Строка - ссылка на 
//  		  дополнительный реквизит. Используется в случае, если ПроверяемыйРеквизит равен "Свойства.Свойство" 
//  		  или "Свойства.Значение".
//            уникальный идентификатор строкой. Используется в случае, если необходимо передать уникальный идентификатор
//            объекта, используемого для целей получения информации об объектах-источниках незаполненных данных.
//            см. ТорговыеПредложенияПереопределяемый.ИнициализацияЗапросаПубликуемыхТоваров
//  СсылкаНаОбъект             -     ЛюбаяСсылка - ссылка на объект-владелец данных.
//  ПутьКДанным                -     Строка - путь к данным объекта на открываемой форме
//                                            для заполнения. Если нужно открыть иную форму то указывается полный путь 
//                                            до формы и через "|" путь до реквизита указываемой формы.
//  ТекстСообщения             -     Строка - текст сообщения, выводимый пользователю при активации реквизита.
// 
// Пример:
//    Если ПроверяемыйРеквизит = "Товары.Артикул" Тогда
//        СсылкаНаОбъект = СтрокаТорговогоПредложения.Номенклатура;
//        ПутьКДанным = "Объект.Артикул";
//        ТекстСообщения = "Не заполнен артикул номенклатуры";
//    ИначеЕсли ПроверяемыйРеквизит = "ПрайсЛисты.АдресЭлектроннойПочты" Тогда
//		СсылкаНаОбъект  = СтрокаТорговогоПредложения.ПрайсЛист;
//		ПутьКДанным = "РегистрСведений.СостоянияСинхронизацииТорговыеПредложения.Форма.НастройкиПубликации|Запись.АдресЭлектроннойПочты";
//		ТекстСообщения = НСтр("ru = 'Необходимо заполнить поле ""Уведомление о заказах по эл.почте"".'");
//    ИначеЕсли ПроверяемыйРеквизит = "СкидкиЗаОпт.Цена" 
//		Или ПроверяемыйРеквизит = "Скидки.Цена" Тогда
//		
//		СсылкаНаОбъект = СтрокаТорговогоПредложения.ПрайсЛист;
//		ПутьКДанным    = "РегистрСведений.ПрайсЛист.Форма.ФормаПрайсЛиста|";
//		
//		ИдентификаторСсылки = Новый УникальныйИдентификатор(ДополнительныйРеквизит);
//		ВидЦеныСсылка = Справочники.ВидыЦен.ПолучитьСсылку(ИдентификаторСсылки);
//		ПредставлениеВидЦены = ВидЦеныСсылка.ПолноеНаименование();
//		ПредставлениеНоменклатуры = СтрокаТорговогоПредложения.Номенклатура.ПолноеНаименование();
//		
//		ШаблонСообщения = НСтр("ru = 'Для товара ""%1"" не заполнен вид цены: ""%2""'");
//		ТекстСообщения = СтрШаблон(ШаблонСообщения, ПредставлениеНоменклатуры, ПредставлениеВидЦены);
//    КонецЕсли;
//
Процедура ОпределитьВладельцевНезаполненныхРеквизитов(ПроверяемыйРеквизит, СтрокаТорговогоПредложения, 
		ДополнительныйРеквизит, СсылкаНаОбъект, ПутьКДанным, ТекстСообщения) Экспорт
	
	//++ НЕ ГОСИС
	Если ПроверяемыйРеквизит = "Товары.Артикул" Тогда
		СсылкаНаОбъект = СтрокаТорговогоПредложения.Номенклатура;
		ПутьКДанным    = "Объект.Артикул";
		ТекстСообщения = НСтр("ru = 'Не заполнен артикул номенклатуры'");
	ИначеЕсли ПроверяемыйРеквизит = "Товары.НаименованиеНоменклатуры" Тогда
		СсылкаНаОбъект = СтрокаТорговогоПредложения.Номенклатура;
		ПутьКДанным    = "Объект.Наименование";
		ТекстСообщения = НСтр("ru = 'Не заполнено наименование номенклатуры'");
	ИначеЕсли ПроверяемыйРеквизит = "Товары.НаименованиеХарактеристики"
		И ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры") Тогда
		СсылкаНаОбъект = СтрокаТорговогоПредложения.Характеристика;
		ПутьКДанным    = "Объект.Наименование";
		ТекстСообщения = НСтр("ru = '""Не заполнено наименование характеристики'");
	ИначеЕсли ПроверяемыйРеквизит = "Товары.НаименованиеУпаковки" 
		И СтрокаТорговогоПредложения.Упаковка.Пустая() Тогда
		СсылкаНаОбъект = СтрокаТорговогоПредложения.Номенклатура;
		ПутьКДанным    = "Объект.ЕдиницаИзмерения";
		ТекстСообщения = НСтр("ru = 'Не заполнена единица измерения'");
	ИначеЕсли ПроверяемыйРеквизит = "Товары.НаименованиеУпаковки" 
		И НЕ СтрокаТорговогоПредложения.Упаковка.Пустая() Тогда
		СсылкаНаОбъект = СтрокаТорговогоПредложения.Упаковка;
		ПутьКДанным    = "Объект.Наименование";
		ТекстСообщения = НСтр("ru = 'Не заполнено наименование единицы измерения'");
	ИначеЕсли ПроверяемыйРеквизит = "Товары.УпаковкаКод" 
		И СтрокаТорговогоПредложения.Упаковка.Пустая() Тогда
		СсылкаНаОбъект = СтрокаТорговогоПредложения.Номенклатура;
		ПутьКДанным    = "Объект.ЕдиницаИзмерения";
		ТекстСообщения = НСтр("ru = 'Не заполнена единица измерения'");
	ИначеЕсли ПроверяемыйРеквизит = "Товары.УпаковкаКод" 
		И НЕ СтрокаТорговогоПредложения.Упаковка.Пустая() Тогда
		СсылкаНаОбъект = СтрокаТорговогоПредложения.Упаковка;
		ПутьКДанным    = "Объект.Код";
		ТекстСообщения = НСтр("ru = 'Не заполнен код ОКЕИ'");
	ИначеЕсли ПроверяемыйРеквизит = "Товары.СтавкаНДС" Тогда
		СтавкаНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТорговогоПредложения.Номенклатура, "СтавкаНДС");
		
		Если ЗначениеЗаполнено(СтавкаНДС) Тогда
			СсылкаНаОбъект = СтрокаТорговогоПредложения.Номенклатура;
			ПутьКДанным    = "Объект.СтавкаНДС";
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Ставка НДС %1 является недопустимой для публикации товаров'"), СтавкаНДС);
		Иначе
			СсылкаНаОбъект = СтрокаТорговогоПредложения.Номенклатура;
			ПутьКДанным    = "Объект.СтавкаНДС";
			ТекстСообщения = НСтр("ru = 'Некорректно заполнена ставка НДС'");
		КонецЕсли;
		
	ИначеЕсли ПроверяемыйРеквизит = "Свойства.Свойство" Тогда
		СсылкаНаОбъект  = СтрокаТорговогоПредложения.Номенклатура;
		ДанныеРеквизита = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДополнительныйРеквизит, "НаборСвойств, Заголовок");
		ПутьКДанным     = СтрШаблон("ДополнительныйРеквизитЗначение_%1_%2", 
			СтрЗаменить(ВРег(Строка(ДанныеРеквизита.НаборСвойств.УникальныйИдентификатор())), "-", "x"),
			СтрЗаменить(ВРег(Строка(ДополнительныйРеквизит.УникальныйИдентификатор())), "-", "x"));
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Некорректно заполнен реквизит ""%1""'"), ДанныеРеквизита.Заголовок);
	ИначеЕсли ПроверяемыйРеквизит = "Контакты.ПредставлениеКонтакта" Тогда
		Если НЕ ЗначениеЗаполнено(СтрокаТорговогоПредложения.ПрайсЛист.Менеджер) Тогда
			СсылкаНаОбъект  = СтрокаТорговогоПредложения.ПрайсЛист;
			ПутьКДанным     = "Объект.Менеджер";
			ТекстСообщения = НСтр("ru = 'Не заполнен менеджер соглашения'");
		КонецЕсли
	ИначеЕсли ПроверяемыйРеквизит = "Контакты.Телефон" Тогда
		Если ЗначениеЗаполнено(СтрокаТорговогоПредложения.ПрайсЛист.Менеджер.ФизическоеЛицо) Тогда
			СсылкаНаОбъект  = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТорговогоПредложения.ПрайсЛист.Менеджер, "ФизическоеЛицо");
			ПутьКДанным     = СтрШаблон("КонтактнаяИнформацияПоле%1%2", 
				СтрЗаменить(Справочники.ВидыКонтактнойИнформации.ТелефонРабочийФизическиеЛица.УникальныйИдентификатор(), "-", "x"), 1);
		ИначеЕсли ЗначениеЗаполнено(СтрокаТорговогоПредложения.ПрайсЛист.Менеджер) Тогда
			СсылкаНаОбъект  = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТорговогоПредложения.ПрайсЛист, "Менеджер");
			ПутьКДанным     = СтрШаблон("КонтактнаяИнформацияПоле%1%2", 
				СтрЗаменить(Справочники.ВидыКонтактнойИнформации.ТелефонПользователя.УникальныйИдентификатор(), "-", "x"), 1);
		КонецЕсли;		
		ТекстСообщения = НСтр("ru = 'Не заполнен рабочий телефон менеджера соглашения'");
	ИначеЕсли ПроверяемыйРеквизит = "ПрайсЛисты.Наименование" Тогда
		СсылкаНаОбъект  = СтрокаТорговогоПредложения.ПрайсЛист;
		ПутьКДанным     = "Объект.Наименование";
		ТекстСообщения = НСтр("ru = 'Не заполнено наименование торгового предложения'");
	ИначеЕсли ПроверяемыйРеквизит = "ПрайсЛисты.ДатаНачалаДействия" Тогда
		СсылкаНаОбъект  = СтрокаТорговогоПредложения.ПрайсЛист;
		ПутьКДанным     = "Объект.ДатаНачалаДействия";
		ТекстСообщения = НСтр("ru = 'Не заполнена дата начала публикации торгового предложения'");
	ИначеЕсли ПроверяемыйРеквизит = "ПрайсЛисты.ДатаОкончанияДействия" Тогда
		СсылкаНаОбъект  = СтрокаТорговогоПредложения.ПрайсЛист;
		ПутьКДанным     = "Объект.ДатаОкончанияДействия";
		ТекстСообщения = НСтр("ru = 'Не верно заполнена дата окончания публикации торгового предложения'");
	ИначеЕсли ПроверяемыйРеквизит = "КонтрагентыСлужебный.КонтрагентИНН" Тогда
		СсылкаНаОбъект  = ДополнительныйРеквизит;
		ПутьКДанным     = "Объект.ИНН";
		ТекстСообщения = НСтр("ru = 'Не верно задан ИНН контрагента'");
	ИначеЕсли ПроверяемыйРеквизит = "КонтрагентыСлужебный.КонтрагентКПП" Тогда
		СсылкаНаОбъект  = ДополнительныйРеквизит;
		ПутьКДанным     = "Объект.КПП";
		ТекстСообщения = НСтр("ru = 'Не верно задан КПП контрагента'");
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Вызывается для определения причин отсутствия позиции торгового предложения в публикации,
//    доступных для исправления интерактивно.
//
// Для указанных в обработчике значений при расшифровке причины будет вызван обработчик
//    ТорговыеПредложенияКлиентПереопределяемый.ОбработатьНажатиеПоГиперссылкеПричиныИсключенияИзПубликации.
//
// Параметры:
//  Причины - Массив из ОпределяемыйТип.ПричинаИсключенияИзПубликацииТорговыеПредложения - значения,
//             для которых доступна расшифровка причины, по которой данная позиция не публикуется в
//             сервисе.
//
// Пример:
//    Причины.Добавить(Перечисления._ДемоПричиныИсключенияИзПубликации.ОтсутствуетНаСкладе);
//    Причины.Добавить(Перечисления._ДемоПричиныИсключенияИзПубликации.НеУказанаЦена);
//
Процедура ОпределитьОбрабатываемыеПричиныИсключенияИзПубликации(Причины) Экспорт 

	//++ НЕ ГОСИС
	Причины.Добавить(Перечисления.ПричиныИсключенияИзПубликацииТорговогоПредложения.НеУказанаЦена);
	//-- НЕ ГОСИС
	
КонецПроцедуры

#КонецОбласти

#Область УстаревшиеПроцедурыИФункции

// Устарела. Не используется
// Заполнение пакета торговых предложений.
//
// Параметры:
//  ТорговоеПредложение	 - СправочникСсылка - ссылка на элемент справочника определяющего торговые предложения,
//                                            например СправочникСсылка.Соглашения.
//  ПакетПредложений	 - Структура - свойства публикуемого торгового предложения.
//
Процедура ЗаполнитьПакетПредложений(Знач ТорговоеПредложение, ПакетПредложений) Экспорт
	
КонецПроцедуры

// Устарела. Используется метод РаботаСНоменклатуройПереопределяемый.ПолучитьРеквизитыНоменклатурыДоступныеДляПубликации.
// Получение публикуемых реквизитов номенклатуры.
// 
// Параметры:
//  ПубликуемыеРеквизиты - Соответствие - реквизиты справочника Номенклатура, публикуемые для торговых предложений.
//    * Ключ     - Произвольный - значение реквизита сопоставления, см. определяемый тип ДополнительныеРеквизитыРаботаСНоменклатурой.
//    * Значение - Структура - свойства реквизита:
//      ** Представление    - Строка - наименование для отображения.
//      ** ПутьКДанным      - Строка - текст запроса для получения данных.
//      ** ТипЗначения      - ОписаниеТипов - описание типа данных.
//      ** ПустоеЗначение   - Произвольный - Значение реквизита, при котором, он считается не заполненным.
//
Процедура ПолучитьРеквизитыНоменклатурыДоступныеДляПубликации(ПубликуемыеРеквизиты) Экспорт
	
КонецПроцедуры

// Устарела. Используется метод РаботаСНоменклатуройПереопределяемый.ПолучитьДоступныеТипыЗначенийСвойствДляСопоставления.
// Получение доступных типов значений свойств для сопоставления.
// 
// Параметры:
//  ТипыЗначенийСвойств - СписокЗначений - доступные типы значений, например Тип("СправочникСсылка.Производители").
//
Процедура ПолучитьДоступныеТипыЗначенийСвойствДляСопоставления(ТипыЗначенийСвойств) Экспорт
	
КонецПроцедуры

// Устарела. Используется метод РаботаСНоменклатуройПереопределяемый.ПустаяСсылкаРеквизитаОбъектаДляСопоставления.
// Возвращает пустую ссылку реквизита объекта для сопоставления.
// 
// Параметры:
//  Ссылка - ЛюбаяСсылка - пустая ссылка для заполнения сопоставления,
//                         например ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.
//
Процедура ПустаяСсылкаРеквизитаОбъектаДляСопоставления(Ссылка) Экспорт

КонецПроцедуры

// Устарела. Используется метод РаботаСНоменклатуройПереопределяемый.ИнициализацияСпискаСопоставленияНоменклатуры.
// Инициализация динамического списка сопоставления номенклатуры в форме сопоставления номенклатуры.
// Заполняется переопределяемый текст запроса и свойства списка.
//
// Параметры:
//  Список - ЭлементФормы - элемент динамического списка в форме.
//
Процедура ИнициализацияСпискаСопоставленияНоменклатуры(Список) Экспорт

КонецПроцедуры

// Устарела. Используется метод РаботаСНоменклатуройПереопределяемый.ПолучитьДанныеСопоставленияРеквизитов
// Получение данных для сопоставления реквизитов и значений реквизитов информационной базы и сервиса.
//
// Параметры:
//  ОбъектСопоставления      - СправочникСсылка - ссылка на справочник виды номенклатуры.
//  СопоставленныеРеквизиты	 - ТаблицаЗначений - сопоставленные реквизиты в ИБ.
//    * РеквизитОбъекта                 - Произвольный - реквизит.
//    * ИдентификаторРеквизитаКатегории - Строка - идентификатор реквизита категории в сервисе.
//    * Представление                   - Строка - представление реквизита.
//  ДополнительныеРеквизиты  - ТаблицаЗначений - дополнительные реквизиты номенклатуры.
//    * РеквизитОбъекта - Произвольный - реквизит.
//    * ТипЗначения     - ОписаниеТипов - тип реквизита.
//  РасчетСоответствий       - ТаблицаЗначений - таблица количества соответствий значений реквизитов.
//    * РеквизитОбъекта                    - Произвольный - реквизит.
//    * КоличествоЗначенийРеквизита        - Число - количество значений реквизита в ИБ.
//    * КоличествоСопоставленныхРеквизитов - Число - количество сопоставленных значений реквизитов.
//
Процедура ПолучитьДанныеСопоставленияРеквизитов(ОбъектСопоставления, СопоставленныеРеквизиты, ДополнительныеРеквизиты, РасчетСоответствий) Экспорт

КонецПроцедуры

// Устарела. Используется метод РаботаСНоменклатуройПереопределяемый.ПолучитьСопоставленныеЗначенияРеквизитаВидаНоменклатуры.
// Получение сопоставленных значений реквизита вида номенклатуры.
//
// Параметры:
//  ОбъектСопоставления - СправочникСсылка - ссылка на справочник виды номенклатуры.
//  РеквизитОбъекта	    - Строка, СправочникСсылка - реквизит объекта.
//  ТипЗначения	        - ОписаниеТипов - тип значений реквизита.
//  ЗначенияРеквизита   - ТаблицаЗначений - список сопоставленных реквизитов, колонки:
//   * Значение                                - СправочникСсылка, Строка, Число, Булево - сопоставленное значение.
//   * ИдентификаторЗначенияРеквизитаКатегории - Строка - идентификатор сопоставленного значения.
//   * ПредставлениеЗначенияРеквизитаКатегории - Строка - представление сопоставленного значения.
//
Процедура ПолучитьСопоставленныеЗначенияРеквизитаВидаНоменклатуры(Знач ОбъектСопоставления, Знач РеквизитОбъекта, Знач ТипЗначения, ЗначенияРеквизита) Экспорт

КонецПроцедуры

// Устарела. Используется метод РаботаСНоменклатуройПереопределяемый.ИнициализацияСпискаСопоставленияПоИерархии.
// Инициализация динамического списка сопоставления номенклатуры в форме сопоставления номенклатуры.
// Заполняется переопределяемый текст запроса и свойства списка.
//
// Параметры:
//  Список - ЭлементФормы - элемент динамического списка в форме.
//
Процедура ИнициализацияСпискаСопоставленияПоИерархии(Список) Экспорт

КонецПроцедуры

// Устарела. Используется метод РаботаСНоменклатуройПереопределяемый.ИнициализацияСпискаСопоставленияПоНоменклатуре.
// Инициализация динамического списка сопоставления номенклатуры в форме сопоставления номенклатуры.
// Заполняется переопределяемый текст запроса и свойства списка.
//
// Параметры:
//  Список - ЭлементФормы - элемент динамического списка в форме.
//
Процедура ИнициализацияСпискаСопоставленияПоНоменклатуре(Список) Экспорт

КонецПроцедуры

// Устарела. Используется метод РаботаСНоменклатуройПереопределяемый.ИнициализацияЗапросаСоответствияЗначенийРеквизитовВидаНоменклатуры.
// Инициализация запроса соответствия значений реквизитов вида номенклатуры.
// 
// В запросе необходимо вернуть таблицу содержащую количество значений
// реквизита в информационной базе и количество сопоставленных реквизитов.
// Параметры запроса: &РеквизитОбъекта, &ОбъектСопоставления.
// Поля запроса:
//  * КоличествоЗначенийРеквизита - Число - количество возможных значений реквизита.
//  * КоличествоСопоставленныхРеквизитов - Число - количество реквизитов, сопоставленных в базе.
//
// Параметры:
//  Запрос - Запрос - запрос инициализации, установки параметров
//
Процедура ИнициализацияЗапросаСоответствияЗначенийРеквизитовВидаНоменклатуры(Запрос) Экспорт

КонецПроцедуры

// Устарела. Отсутствует необходимость в использовании.
// 
// Устанавливает значение свойства элементов формы, если находит элемент на форме.
//
// Параметры:
//  ЭлементыФормы  - ВсеЭлементыФормы - элементы формы, среди которых содержится искомый элемент.
//  ИменаЭлементов - Массив из Строка, Строка, Структура - имена искомых элементов.
//  ИмяСвойства    - Строка - имя свойства, для которого будет устанавливаться значение.
//  Значение       - Произвольный - значение, которое будет установлено.
//  УстанавливатьДляПодчиненных - Булево - установить аналогичное свойство для подчиненных элементов искомых элементов.
//
Процедура УстановитьСвойствоЭлементовФормы(ЭлементыФормы, ИменаЭлементов, ИмяСвойства, Значение, УстанавливатьДляПодчиненных = Ложь) Экспорт

	
КонецПроцедуры

// Устарела. Отсутствует необходимость в использовании.
// 
// Заполнение контактной информации по контактному лицу.
//
// Параметры:
//  КонтактноеЛицо    - СправочникСсылка - контактное лицо в информационной базе, например СправочникСсылка.ФизическиеЛица.
//  ЭлектроннаяПочта  - Строка - адрес электронной почты.
//  Телефон           - Строка - номер телефона.
//  УведомлятьПоПочте - Булево - признак необходимости уведомления по электронной почте.
//  Перезаполнять     - Булево - признак необходимости перезаполнения информации.
//
Процедура ЗаполнитьКонтактнуюИнформациюПоКонтактномуЛицу(Знач КонтактноеЛицо, ЭлектроннаяПочта, Телефон, УведомлятьПоПочте, Знач Перезаполнять = Ложь) Экспорт
	
	
КонецПроцедуры

// Устарела. Отсутствует необходимость в использовании.
// Получить параметры поиска номенклатуры сервиса.
//
// Параметры:
//  Номенклатура	 - Ссылка - номенклатура.
//  Характеристика	 - Ссылка - характеристика.
//  Результат		 - Структура - возвращаемые данные:
//   * НаименованиеНоменклатуры - Строка - имя номенклатуры.
//   * НаименованиеХарактеристики - Строка - наименование характеристики.
//   * Штрихкоды - Массив из Строка - штрихкоды по ссылке, тип строка.
//
Процедура ПолучитьПараметрыПоискаНоменклатурыСервиса(Знач Номенклатура, Знач Характеристика, Результат) Экспорт
	

КонецПроцедуры

// Устарела. Следует использовать ТорговыеПредложенияПереопределяемый.ЗаполнитьСведенияОНоменклатуре
// Заполнение реквизитов номенклатуры в процедуре формирования заказа.
//
// Параметры:
//  Номенклатура - СправочникСсылка - ссылка на справочник номенклатура.
//  Результат	 - Структура - возвращаемые реквизиты ссылки справочника:
//    * ИспользованиеХарактеристик - Булево - признак использования характеристик номенклатуры.
//    * ЕдиницаИзмерения - СправочникСсылка - единица измерения номенклатуры.
//    * Упаковка - СправочникСсылка - упаковка номенклатуры.
//
Процедура ЗаполнитьРеквизитыНоменклатурыДляФормированияЗаказа(Знач Номенклатура, Результат) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ПрограммныйИнтерфейсУП

// Добавление команды поиска торговых предложений в формах.
//
// Параметры:
//  КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании.
//
Процедура ДобавитьКомандуПоискаТорговыхПредложений(КомандыСоздатьНаОсновании) Экспорт
	
	//++ НЕ ГОСИС
	Если ПравоДоступа("Использование", Метаданные.Обработки.ТорговыеПредложения) И Не Пользователи.ЭтоСеансВнешнегоПользователя() Тогда
		КомандаСоздатьНаОсновании =  КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "ТорговыеПредложенияКлиентПереопределяемый.ОткрытьПоискТоваровПоСписку";
		КомандаСоздатьНаОсновании.Идентификатор = "ПоискТоваровПоСписку";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru = 'Заказы поставщикам в 1С:Бизнес-сеть'");
		КомандаСоздатьНаОсновании.РежимЗаписи = "";
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьОбменБизнесСеть";
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получение признака записи ведомого регистра сведений.
//
// Параметры:
//  Ссылка	 - Произвольный - ссылка на объект информационной базы.
//  Регистры - Массив - список регистров сведений.
// 
// Возвращаемое значение:
//  Булево - признак записи ведомого регистра.
//
Функция ЭтоЗаписьВедомогоРегистраСведений(Ссылка, Регистры)
	
	//++ НЕ ГОСИС
	Для Каждого Элемент Из Регистры Цикл
		Если ТипЗнч(Ссылка) = Тип("РегистрСведенийКлючЗаписи." + Элемент.Имя) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	//-- НЕ ГОСИС
	
КонецФункции

// Получение дополнительных ссылок назначения заказов.
//
// Параметры:
//  УдалямыеСсылки	 - Массив - ссылки документов Заказ поставщику для удаления.
// 
// Возвращаемое значение:
//  СписокЗначений - дополнительные ссылки для удаления, тип СправочникСсылка.Назначения.
//
Функция НазначенияЗаказов(УдалямыеСсылки)
	
	//++ НЕ ГОСИС
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Назначения КАК Таблица
	|ГДЕ
	|	Таблица.Заказ В(&УдалямыеСсылки)";
	Запрос.УстановитьПараметр("УдалямыеСсылки", УдалямыеСсылки);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	//-- НЕ ГОСИС
	
КонецФункции

// Получение соответствия для определения функциональных опция по имени объектов.
// 
// Возвращаемое значение:
//  Соответствие - значение зависимостей, где Ключ - имя формы, Значение - функциональная опция.
//
Функция ЗависимостьФункционалаОтФункциональныхОпций()
	
	//++ НЕ ГОСИС
	Зависимость = Новый Соответствие;
	Зависимость.Вставить("Обработка.ТорговыеПредложения.Форма.СопоставлениеНоменклатуры",
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ИспользоватьНесколькоВидовНоменклатуры"));
	Зависимость.Вставить("Обработка.ТорговыеПредложения.Форма.ФормаСписка",
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ИспользоватьСоглашенияСКлиентами"));
		
	Возврат Зависимость;
	//-- НЕ ГОСИС
	
КонецФункции

// Дополнение в запрос источников по дополнительным реквизитам номенклатуры.
//
// Параметры:
//   Запрос - Запрос - основной запрос сбора данных.
//
Процедура ДобавитьРеквизитыНоменклатурыВЗапрос(Запрос)
	
	//++ НЕ ГОСИС
	БлокРеквизитовШаблон =
	"ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	&Свойство,
	|	&Значение
	|ИЗ
	|	Товары КАК Товары
	|";
	БлокРеквизитовПодстановка = "";
	
	ДоступныеДляПубликацииРеквизиты = Новый Соответствие;
	ПолучитьРеквизитыНоменклатурыДоступныеДляПубликации(ДоступныеДляПубликацииРеквизиты);
	
	МассивПодзапросов = Новый Массив;
	СчетчикРеквизитов = 0;
	Для каждого СвойстваРеквизита Из ДоступныеДляПубликацииРеквизиты Цикл
		
		ИндексСтрокой = XMLСтрока(СчетчикРеквизитов);
		
		СчетчикРеквизитов = СчетчикРеквизитов + 1;
		ТекстПодзапроса = БлокРеквизитовШаблон;
		
		ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "&Значение", СвойстваРеквизита.Значение.ПутьКДанным);
		ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "&Свойство", "&Свойство" + ИндексСтрокой);
		
		Запрос.УстановитьПараметр("Свойство" + ИндексСтрокой, СвойстваРеквизита.Ключ);
		
		Если СвойстваРеквизита.Значение.Свойство("ПустоеЗначение") Тогда
			ТекстПодзапроса = ТекстПодзапроса + Символы.ПС
				+ "ГДЕ НЕ "+ СвойстваРеквизита.Значение.ПутьКДанным + " = &ПустоеЗначение" + ИндексСтрокой;
			Запрос.УстановитьПараметр("ПустоеЗначение" + ИндексСтрокой,
				СвойстваРеквизита.Значение.ПустоеЗначение);
		КонецЕсли;
		
		МассивПодзапросов.Добавить(ТекстПодзапроса);
		
	КонецЦикла;
	
	БлокРеквизитовПодстановка = СтрСоединить(МассивПодзапросов, Символы.ПС);
	
	Если СтрЧислоВхождений(Запрос.Текст, БлокРеквизитовШаблон) = 0 Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка компоновки запроса получения данных номенклатуры.'");
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, БлокРеквизитовШаблон, БлокРеквизитовПодстановка);
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Установка доступность команд буфера обмена в форме.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - форма установки доступности команд.
//
Процедура УстановитьДоступностьКомандБуфераОбмена(Форма)
	
	//++ НЕ ГОСИС
	// Наименование элементов формы.
	МассивЭлементов = Новый Массив();
	МассивЭлементов.Добавить("ТоварыВставитьСтроки");
	МассивЭлементов.Добавить("ТоварыКонтекстноеМенюВставитьСтроки");
	
	ПустойБуферОбмена = ОбщегоНазначения.ПустойБуферОбмена("Строки");
	
	УстановитьСвойствоЭлементовФормы(Форма.Элементы, МассивЭлементов, "Доступность",
		НЕ ПустойБуферОбмена);
	//-- НЕ ГОСИС
	
КонецПроцедуры

#КонецОбласти
