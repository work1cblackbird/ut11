#Область ПрограммныйИнтерфейс

// Открыть форму назначения управляемых скидок наценок.
//
// Параметры:
//  АдресВоВременномХранилище - Строка - Адрес дополнительных данных во временном хранилище.
//  ОповещениеОЗакрытии - ОписаниеОповещения - Оповещение о закрытии.
//
Процедура ОткрытьФормуНазначенияУправляемыхСкидокНаценок(АдресВоВременномХранилище, ОповещениеОЗакрытии) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресВоВременномХранилище", АдресВоВременномХранилище);
	ОткрытьФорму("ОбщаяФорма.НазначениеАвтоматическихУправляемыхСкидокНаценок", 
		ПараметрыФормы,
		,
		,
		,
		,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

// Процедура сбрасывает флаг СкидкиРассчитаны и делает недоступными колонки табличной части.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма объекта.
//
Процедура СброситьФлагСкидкиРассчитаны(Форма) Экспорт
	
	Форма.Объект.СкидкиРассчитаны = Ложь;
	
КонецПроцедуры

// Предложить пользователю рассчитать скидки.
//
// Параметры:
//  ОписаниеОповещения - ОписаниеОповещения - Описание оповещения, вызываемое после завершения вопроса.
//
Процедура ПредложитьПользователюРассчитатьСкидки(ОписаниеОповещения) Экспорт
	
	ТекстВопроса = НСтр("ru='Автоматические скидки (наценки) не рассчитаны. Рассчитать автоматические скидки (наценки)?'");
	ПоказатьВопрос(
		ОписаниеОповещения,
		ТекстВопроса,
		РежимДиалогаВопрос.ОКОтмена);
	
КонецПроцедуры


// Открыть форму назначения ручных скидок.
//
// Параметры:
//  АдресВоВременномХранилище - Строка - Адрес дополнительных данных во временном хранилище.
//  Валюта - СправочникСсылка.Валюты - Валюта.
//  ОповещениеОЗакрытии - ОписаниеОповещения - Оповещение о закрытии.
//  ЭтоЗакупки - Булево - Признак закупок.
//
Процедура ОткрытьФормуНазначенияРучныхСкидок(
		АдресВоВременномХранилище,
		Валюта,
		ОповещениеОЗакрытии,
		ЭтоЗакупки = Ложь) Экспорт

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АдресВоВременномХранилище",             АдресВоВременномХранилище);
	ПараметрыФормы.Вставить("Валюта",                                Валюта);
	ПараметрыФормы.Вставить("ЭтоЗакупки", ЭтоЗакупки);

	ОткрытьФорму("ОбщаяФорма.НазначениеРучнойСкидкиНаценки", 
		ПараметрыФормы,
		,
		,
		,
		,
		ОповещениеОЗакрытии,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

// Проверяет заполненность реквизитов, необходимых для назначения скидок.
//
// Параметры:
//   Документ                    - ДокументОбъект - Объект, для которого выполняются проверки.
//   ИмяТабличнойЧасти           - Строка - имя табличной части, в которой необходимо осуществить проверку.
//   ПредставлениеТабличнойЧасти - Строка - представление табличной части для информирования пользователя.
//
// Возвращаемое значение:
//   Булево - Возможность назначения ручных скидок (наценок).
//
Функция ВозможноНазначениеРучнойСкидкиНаценки(Документ, ИмяТабличнойЧасти, ПредставлениеТабличнойЧасти) Экспорт

	Если Документ[ИмяТабличнойЧасти].Количество() = 0 Тогда
		
		ТекстПредупреждения = НСтр("ru='В документе не заполнена таблица %ПредставлениеТабличнойЧасти%. Ручная скидка (наценка) не может быть назначена'");
		ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат Ложь;
		
	КонецЕсли;

	Возврат Истина;

КонецФункции

// Проверяет заполненность реквизитов, необходимых для отмены скидок.
//
// Параметры:
//   Документ                    - ДокументОбъект - Объект, для которого выполняются проверки.
//   ИмяТабличнойЧасти           - Строка - имя табличной части, в которой необходимо осуществить проверку.
//   ПредставлениеТабличнойЧасти - Строка - представление табличной части для информирования пользователя.
//
// Возвращаемое значение:
//  Булево - Возможность отмены ручных скидок (наценок).
//
Функция ВозможнаОтменаРучныхСкидокНаценок(Документ, ИмяТабличнойЧасти, ПредставлениеТабличнойЧасти) Экспорт

	Если Документ[ИмяТабличнойЧасти].Количество() = 0 Тогда
		
		ТекстПредупреждения = НСтр("ru='В документе не заполнена таблица %ПредставлениеТабличнойЧасти%. Ручные скидки (наценки) не могут быть отменены'");
		ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат Ложь;
		
	ИначеЕсли Документ[ИмяТабличнойЧасти].Итог("СуммаРучнойСкидки") = 0 Тогда
		
		ТекстПредупреждения = НСтр("ru='В документе не заполнена сумма ручной скидки в таблице %ПредставлениеТабличнойЧасти%. Ручные скидки (наценки) не могут быть отменены'");
		ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат Ложь;
		
	КонецЕсли;

	Возврат Истина;

КонецФункции

// Показывает оповещение пользователя об окончании назначения ручных скидок (наценок).
//
// Параметры:
//   СуммаСкидкиНаценки - Число - Сумма ручной скидки.
//   Валюта             - СправочникСсылка.Валюты, Неопределено - Валюта скидки.
//
Процедура ОповеститьОбОкончанииНазначенияРучныхСкидокНаценок(СуммаСкидкиНаценки = 0, Валюта = Неопределено) Экспорт

	Если СуммаСкидкиНаценки > 0 Тогда
		
		ТекстСообщения = НСтр("ru = 'Назначена ручная скидка %СуммаСкидкиНаценки% %Валюта%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаСкидкиНаценки%", СуммаСкидкиНаценки);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", Валюта);
		
	ИначеЕсли СуммаСкидкиНаценки < 0 Тогда
		
		ТекстСообщения = НСтр("ru = 'Назначена ручная наценка %СуммаСкидкиНаценки% %Валюта%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаСкидкиНаценки%", СуммаСкидкиНаценки);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", Валюта);
		
	Иначе
		
		ТекстСообщения = НСтр("ru = 'Ручные скидки (наценки) отменены'");
		
	КонецЕсли;
		
	ПоказатьОповещениеПользователя(
		НСтр("ru = 'Скидки (наценки)'"),
		,
		ТекстСообщения,
		БиблиотекаКартинок.Информация32);

КонецПроцедуры // ОповеститьОбОкончанииНазначенияРучныхСкидокНаценок()




// Процедура открывает форму расшифровки скидок рассчитанных по текущей строке табличной части.
//
// Параметры:
//  ТекущиеДанные           - СтрокаТабличнойЧасти - Строка, для которой необходимо открыть расшифровку скидок.
//  Объект                  - ДанныеФормыСтруктура, ДокументОбъект - Объект, для которого нужно открыть форму расшифровки скидок.
//  Форма                   - ФормаКлиентскогоПриложения - Форма объекта.
//  ДополнительныеПараметры - Структура - Дополнительные параметры:
//  	* ИмяКолонкиКоличество - Строка -
//
Процедура ОткрытьФормуПримененныеСкидки(ТекущиеДанные, Объект, Форма, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.АктВыполненныхРабот") Тогда
		ИмяКоличества = "Количество";
	ИначеЕсли ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
		И ДополнительныеПараметры.Свойство("ИмяКолонкиКоличество") Тогда
		ИмяКоличества = ДополнительныеПараметры.ИмяКолонкиКоличество; 
	Иначе
		ИмяКоличества = "КоличествоУпаковок";
	КонецЕсли;
	
	Если ТекущиеДанные <> Неопределено Тогда
	
		СтруктураТекущиеДанные = Новый Структура;
		СтруктураТекущиеДанные.Вставить("КлючСвязи",         ТекущиеДанные.КлючСвязи);
		СтруктураТекущиеДанные.Вставить("Номенклатура",      ТекущиеДанные.Номенклатура);
		СтруктураТекущиеДанные.Вставить("Характеристика",    ТекущиеДанные.Характеристика);
		СтруктураТекущиеДанные.Вставить("СуммаРучнойСкидки", ТекущиеДанные.СуммаРучнойСкидки);
		СтруктураТекущиеДанные.Вставить("СуммаБезСкидки",    ТекущиеДанные.Цена * ТекущиеДанные[ИмяКоличества]);
		
		СтруктураПараметров = Новый Структура();
		СтруктураПараметров.Вставить("Объект", Объект);
		СтруктураПараметров.Вставить("Заголовок", НСтр("ru = 'Примененные скидки (наценки) для строки'"));
		СтруктураПараметров.Вставить("ТекущиеДанные", СтруктураТекущиеДанные);
		СтруктураПараметров.Вставить("АдресПримененныхСкидокВоВременномХранилище",          Форма.АдресПримененныхСкидокВоВременномХранилище);
		СтруктураПараметров.Вставить("ОтображатьИнформациюОСкидкахПоСтроке",                Истина);
		СтруктураПараметров.Вставить("ОтображатьИнформациюОРасчетеСкидокПоСтроке",          Истина);
		СтруктураПараметров.Вставить("ОтображатьИнформациюОРасчетеСкидокПоДокументуВЦелом", Ложь);
		
		Если ДополнительныеПараметры <> Неопределено И ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
			Для Каждого Параметр Из ДополнительныеПараметры Цикл
				СтруктураПараметров.Вставить(Параметр.Ключ,Параметр.Значение);
			КонецЦикла;
		КонецЕсли;
		
		ОткрытьФорму("ОбщаяФорма.ПримененныеСкидкиНаценки", СтруктураПараметров, Форма, Форма.УникальныйИдентификатор);
	
	КонецЕсли;

КонецПроцедуры

// Открыть форму сообщений
//
// Параметры:
//  СтруктураСообщений - см. СкидкиНаценкиЗаполнениеСервер.СтруктураСообщений 
//  Форма - ФормаКлиентскогоПриложения - Форма объекта.
//
Процедура ОткрытьФормуСообщений(СтруктураСообщений, Форма) Экспорт
	
	ОткрытьФорму("ОбщаяФорма.СообщенияСкидокНаценок", СтруктураСообщений, Форма, Форма.УникальныйИдентификатор);
	
КонецПроцедуры



#КонецОбласти