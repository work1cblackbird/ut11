#Область СлужебныйПрограммныйИнтерфейс

// Инициализирует структуру передачи данных
// 
// Возвращаемое значение:
// 	Структура - Описание:
// * Ссылка - ОпределяемыйТип.ДокументыСАТУРН, СправочникСсылка.СтанцииУправленияЗаказамиСАТУРН - Передаваемый документ
// * ОрганизацияСАТУРН - СправочникСсылка.КлассификаторОрганизацийСАТУРН - Организация
// * ДальнейшееДействие - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюСАТУРН - Дальнейшее действие
Функция ПараметрыОбработкиДокументов() Экспорт
	
	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить("Ссылка");
	ПараметрыОбработки.Вставить("ОрганизацияСАТУРН");
	ПараметрыОбработки.Вставить("ДальнейшееДействие");
	ПараметрыОбработки.Вставить("ДополнительныеПараметры");
	
	Возврат ПараметрыОбработки;
	
КонецФункции

// Инициализирует структуру передачи данных на создание классификаторов
// 
// Возвращаемое значение:
// 	Структура - Описание:
// * Ссылка - СправочникСсылка.КлассификаторОрганизацийСАТУРН, СправочникСсылка.КлассификаторПАТСАТУРН, СправочникСсылка.ИмпортируемаяПартияСАТУРН - Передаваемый классификатор
// * ОрганизацияСАТУРН - СправочникСсылка.КлассификаторОрганизацийСАТУРН - Организация
// * ДальнейшееДействие - ПеречислениеСсылка.ДальнейшиеДействияПоВзаимодействиюСАТУРН - Дальнейшее действие
// * ДополнительныеПараметры - Структура
Функция ПараметрыПередачиДанныхКлассификаторов() Экспорт
	
	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить("Ссылка");
	ПараметрыОбработки.Вставить("ОрганизацияСАТУРН");
	ПараметрыОбработки.Вставить("ДальнейшееДействие");
	ПараметрыОбработки.Вставить("ДополнительныеПараметры");
	
	Возврат ПараметрыОбработки;
	
КонецФункции

// Возвращает структуру параметров обновления статуса.
// 
// Параметры:
//  ПараметрыОбновленияСтатуса - Неопределено - Параметры обновления статуса
// 
// Возвращаемое значение:
//  Структура, Неопределено - Параметры обновления статуса:
// * Статус - ПеречислениеСсылка
// * СтатусОбработки - ПеречислениеСсылка
// * ОперацияКвитанции - ПеречислениеСсылка
// * ПротоколОбмена - СправочникСсылка.САТУРНПрисоединенныеФайлы
// * ПараметрыЗапроса - Структура
// * ИдентификаторСтроки - Неопределено, Строка -
// * ОрганизацияСАТУРН - СправочникСсылка.КлассификаторОрганизацийСАТУРН
Функция ПараметрыОбновленияСтатуса(ПараметрыОбновленияСтатуса = Неопределено) Экспорт
	
	Если ПараметрыОбновленияСтатуса = Неопределено Тогда
		ПараметрыОбновленияСтатуса = Новый Структура;
	КонецЕсли;
	
	ПараметрыОбновленияСтатуса.Вставить("Статус");
	ПараметрыОбновленияСтатуса.Вставить("СтатусОбработки");
	ПараметрыОбновленияСтатуса.Вставить("ОперацияКвитанции");
	ПараметрыОбновленияСтатуса.Вставить("ПротоколОбмена");
	ПараметрыОбновленияСтатуса.Вставить("ПараметрыЗапроса");
	ПараметрыОбновленияСтатуса.Вставить("ИдентификаторСтроки");
	ПараметрыОбновленияСтатуса.Вставить("ОрганизацияСАТУРН");
	
	Возврат ПараметрыОбновленияСтатуса;
	
КонецФункции

// Получает значение свойства переданного констекста
// 
// Параметры:
// 	Контекст - ФормаКлиентскогоПриложения - Передаваемый контекст.
// 	ИмяСвойства - Строка - Имя свойства контекста
// Возвращаемое значение:
// 	Произвольный, Неопределено - Значение свойства контекста.
Функция ЗначениеСвойстваКонтекста(Контекст, ИмяСвойства) Экспорт
	
	ВозвращаемоеЗначение = Неопределено;
	
	ИсточникДанных = Контекст;
	Если ТипЗнч(Контекст) = Тип("ФормаКлиентскогоПриложения") Тогда
		ИсточникДанных = Контекст.Объект;
	КонецЕсли;
		
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ИсточникДанных, ИмяСвойства) Тогда
		ВозвращаемоеЗначение = ИсточникДанных[ИмяСвойства];
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПредставлениеНомераСтраницы(НомерСтраницы) Экспорт
	
	Если ЗначениеЗаполнено(НомерСтраницы) Тогда
		Возврат СтрШаблон(НСтр("ru = 'Страница %1'"), НомерСтраницы);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
		
КонецФункции

#КонецОбласти