
#Область ПрограммныйИнтерфейс

// Проверяет наличие дублей УИН в документах
//
// Параметры:
//	ИдентификаторПлатежа - Строка - Проверяемый идентификатор платежа
//	Ссылка - ДокументСсылка - Проверяемый документ.
//
// Возвращаемое значение:
//	Массив - массив ошибок
//
Функция ПроверитьДублиУИН(ИдентификаторПлатежа, Ссылка) Экспорт
	
	Результат = Новый Массив;	
	Дубли = ДублиУИН(ИдентификаторПлатежа, Ссылка);
	Если Дубли.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	ШаблонТекста = НСтр("ru = 'Возможно, уникальный идентификатор платежа указан ошибочно.
    	|
        |[ГдеЕщеУказанЭтотИдентификатор]
        |
        |Одинаковые идентификаторы следует указывать только при частичной оплате.'");
						
	
	Если Дубли.Количество() = 1 Тогда
			
		ГдеЕщеУказанЭтотИдентификатор = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Этот же идентификатор платежа указан в другом документе:
				|%1.'"),
			Дубли[0]);
			
	ИначеЕсли Дубли.Количество() = 2 Тогда
			
		ГдеЕщеУказанЭтотИдентификатор = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Этот же идентификатор платежа указан в других документах:
				|- %1
				|- %2.'"), 
			Дубли[0], 
			Дубли[1]);
			
	ИначеЕсли Дубли.Количество() = 3 Тогда
		
		ГдеЕщеУказанЭтотИдентификатор = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Этот же идентификатор платежа указан в других документах:
				|- %1
				|- %2
				|- %3.'"),
			Дубли[0], 
			Дубли[1], 
			Дубли[2]);
			
	Иначе
		
		ТекстЕщеДокументов = СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(
			Дубли.Количество() - 2, 
			НСтр("ru = 'более ранний документ, более ранних документа, более ранних документов'"));
			
		ГдеЕщеУказанЭтотИдентификатор = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Этот же идентификатор платежа указан в других документах:
				|- %1
				|- %2
				|  и еще %3.'"),
			Дубли[0], 
			Дубли[1],
			ТекстЕщеДокументов);
			
	КонецЕсли;
	
	ПараметрыТекста = Новый Структура;
	ПараметрыТекста.Вставить("ГдеЕщеУказанЭтотИдентификатор", ГдеЕщеУказанЭтотИдентификатор);
	
	ТекстОшибки = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ШаблонТекста, ПараметрыТекста);
	
	ОписаниеОшибки = Новый Структура;
	ОписаниеОшибки.Вставить("ТекстОшибки", ТекстОшибки);
	ОписаниеОшибки.Вставить("ИмяПоля",     "ИдентификаторПлатежа");
	
	Результат.Добавить(ОписаниеОшибки);
	
	Возврат Результат;
	
КонецФункции

// Устанавливает надпись реквизитов платежа в бюджет
//
// Параметры:
//    Форма - ФормаКлиентскогоПриложения - форма, из которой вызвана функция.
//
Процедура УстановитьНадписьРеквизитовПлатежаВБюджет(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	Если СокрЛП(Объект.КодБК) <> "" Тогда
		КБК = СокрЛП(Объект.КодБК);
	Иначе
		КБК = НСтр("ru = '<КБК не указан>'");
	КонецЕсли;
	
	Если СокрЛП(Объект.КодОКАТО) <> "" Тогда
		КодТерритории = СокрЛП(Объект.КодОКАТО);
	Иначе
		
		Если ПлатежиВБюджетКлиентСервер.ДействуетПриказ199н_202302(Объект.Дата)
			И (ПлатежиВБюджетКлиентСервер.ЭтоЕдиныйНалоговыйПлатеж(Объект.КодБК)
			ИЛИ Объект.ТипНалога = Справочники.ВидыНалоговВзносов.ЕдиныйНалоговыйПлатеж) Тогда
			КодТерритории = СокрЛП(Объект.КодОКАТО);
		Иначе
			КодТерритории = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '<%1 не указан>'"),
				?(Объект.Дата >= Форма.ДатаНачалаПримененияПриказа107н Или Не ЗначениеЗаполнено(Объект.Дата), НСтр("ru='ОКТМО'"), НСтр("ru='ОКАТО'")));
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПлатежиВБюджетКлиентСервер.РеквизитЗаполнен(Объект.СтатусСоставителя) Тогда
		СтатусСоставителя = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Статус: %1'"),
			Объект.СтатусСоставителя);
	Иначе
		СтатусСоставителя = НСтр("ru = '<Статус: не указан>'");
	КонецЕсли;
	
	Форма.НадписьРеквизитыПлатежаВБюджет = КБК + "; "
		+ КодТерритории + "; "
		+ СтатусСоставителя + "; "
		+ Объект.ПоказательОснования + "; ";
		
	Если Объект.ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж
		Или Объект.ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ТаможенныйПлатеж Тогда
		Форма.НадписьРеквизитыПлатежаВБюджет = Форма.НадписьРеквизитыПлатежаВБюджет
			+ Объект.ПоказательПериода + "; "
			+ Объект.ПоказательНомера + "; "
			+ Объект.ПоказательДаты + "; ";
	Иначе
		Если Объект.СтатусСоставителя = "03"
			Или Объект.СтатусСоставителя = "19"
			Или Объект.СтатусСоставителя = "20"
			Или Объект.СтатусСоставителя = "24"
		Тогда
			Форма.НадписьРеквизитыПлатежаВБюджет = Форма.НадписьРеквизитыПлатежаВБюджет
				+ Объект.ПоказательНомера + "; ";
		КонецЕсли;
	КонецЕсли;
	
	Форма.НадписьРеквизитыПлатежаВБюджет = Форма.НадписьРеквизитыПлатежаВБюджет + ?(Не Форма.ПрименениеПриказа126н, Объект.ПоказательТипа + "; ", "");
	
	Отказ = Ложь; МассивНепроверяемыхРеквизитов = Новый Массив; ФлагОбменСБанками = Истина; ОшибкиЗаполнения = "";
	ТекущийОбъект = Форма.РеквизитФормыВЗначение("Объект");
	ДенежныеСредстваСерверЛокализация.ПроверитьЗаполнениеНалоговыхРеквизитов(ТекущийОбъект, Отказ, МассивНепроверяемыхРеквизитов, ФлагОбменСБанками, ОшибкиЗаполнения);
	
	Если Объект.ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж Тогда
		Если Не ЗначениеЗаполнено(Объект.ПоказательПериода) Тогда
			ОшибкиЗаполнения = ОшибкиЗаполнения + "
			|" + НСтр("ru = 'Поле ""Период"" не заполнено'");
		КонецЕсли;
	КонецЕсли;
	Если Объект.ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж
		Или Объект.ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.ТаможенныйПлатеж Тогда
		Если Не ЗначениеЗаполнено(Объект.ПоказательНомера) Тогда
			ОшибкиЗаполнения = ОшибкиЗаполнения + "
			|" + НСтр("ru = 'Поле ""Номер документа"" не заполнено'");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.ПоказательДаты) Тогда
			ОшибкиЗаполнения = ОшибкиЗаполнения + "
			|" + НСтр("ru = 'Поле ""Дата документа"" не заполнено'");
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОшибкиЗаполнения)
		Или Не ЗначениеЗаполнено(Объект.КодБК)
		Или Не ЗначениеЗаполнено(Объект.КодОКАТО) Тогда
		Форма.Элементы.НадписьРеквизитыПлатежаВБюджет.ЦветТекста = ЦветаСтиля.РезультатПроблемаЦвет;
		Форма.Элементы.НадписьРеквизитыПлатежаВБюджет.Подсказка = ОшибкиЗаполнения;
	Иначе
		Форма.Элементы.НадписьРеквизитыПлатежаВБюджет.ЦветТекста = ЦветаСтиля.ГиперссылкаЦвет;
		Форма.Элементы.НадписьРеквизитыПлатежаВБюджет.Подсказка = "";
	КонецЕсли;
	
КонецПроцедуры

#Область ЕдиныйНалоговыйПлатеж

// Возвращает признак использования Единого налогового платежа
//
// Параметры:
//	Организация - СправочникСсылка.Организации - проверяемая организация
//	Период - Дата - дата проверки
//	
// Возвращаемое значение:
//	Булево - признак использования ЕНП.
//
Функция ИспользуетсяЕдиныйНалоговыйПлатеж(Организация, Период) Экспорт
	
	Если ПлатежиВБюджетКлиентСервер.ДействуетФедеральныйЗакон263ФЗ(Период) Тогда
		Возврат Истина;
	КонецЕсли;
	
	// Федеральный закон от 29.11.2021 № 379-ФЗ "О внесении изменений в часть первую Налогового кодекса
	// Российской Федерации" устанавливает что с 1 июля по 31 декабря 2022 года (включительно) организации
	// и индивидуальные предприниматели вправе применять особый порядок уплаты налогов посредством перечисления
	// в бюджетную систему Российской Федерации единого налогового платежа.
	
	ДатаНачалаЭксперимента = '20220701';
	Если Период < ДатаНачалаЭксперимента Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
		"НастройкиСистемыНалогообложения", Организация, Период);
	Возврат ПараметрыУчетнойПолитики.ПлательщикЕНП;
	
КонецФункции

// Проверяет корректность указания типа налога и выводит предупреждение
//
// Параметры:
//    Форма - ФормаКлиентскогоПриложения - форма, из которой вызвана функция
//    ДатаПлатежа - Дата - дата платежа.
//
Процедура ПроверитьКорректностьЗаполненияПлатежаВБюджет(Форма, Знач ДатаПлатежа) Экспорт
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.ГруппаТипНалога.ЦветФона = Новый Цвет;
	Элементы.ТипНалога.ОтображениеПодсказки = ОтображениеПодсказки.Авто;
	Элементы.ТипНалога.Подсказка = "";
	
	
	Если Не ИспользуетсяЕдиныйНалоговыйПлатеж(Объект.Организация, ДатаПлатежа) Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьОшибкаРеквизитовПолучателя = Ложь;
	
	
	ДоступныеВидыНалоговВзносов = Новый Массив;
	ДоступныеВидыНалоговВзносов.Добавить(Справочники.ВидыНалоговВзносов.ПустаяСсылка());
	ДоступныеВидыНалоговВзносов.Добавить(Справочники.ВидыНалоговВзносов.ПрочиеНалогиИСборы);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ДоступныеВидыНалоговВзносов, ТипыНалоговУплачиваемыеОтдельно());
	
	Если ДоступныеВидыНалоговВзносов.Найти(Объект.ТипНалога) = Неопределено ИЛИ ЕстьОшибкаРеквизитовПолучателя Тогда
		ТекстПодсказки = НСтр(
			"ru = 'С 1 января 2023 года уплату любых налогов необходимо в обязательном порядке осуществлять посредством единого налогового платежа на единый налоговый счет.
			|Проверьте корректность заполнения реквизитов.'"); // https://www.nalog.gov.ru/rn77/ens/
		Элементы.ГруппаТипНалога.ЦветФона = ЦветаСтиля.ПолеСОшибкойФон;
		Элементы.ТипНалога.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		Элементы.ТипНалога.Подсказка = ТекстПодсказки;
	КонецЕсли;
	
КонецПроцедуры

// Проверяет использование регламентированного учета в рассчитываемом периоде.
//
// Возвращаемое значение:
//	Массив - массив налогов, уплачиваемых отдельно
//
Функция ТипыНалоговУплачиваемыеОтдельно() Экспорт
	
	ВидыНалоговВзносов = Новый Массив;
	ВидыНалоговВзносов.Добавить(Справочники.ВидыНалоговВзносов.ЕдиныйНалоговыйПлатеж);
	ВидыНалоговВзносов.Добавить(Справочники.ВидыНалоговВзносов.ФССНС);
	
	Возврат ВидыНалоговВзносов;
	
КонецФункции

#КонецОбласти

// Устанавливает реквизиты платежа в бюджет по умолчанию.
// 
// Параметры:
//  ДокументОбъект - ДокументОбъект.СписаниеБезналичныхДенежныхСредств, ДокументОбъект.ЗаявкаНаРасходованиеДенежныхСредств -
//                   объект, в котором заполняются реквизиты платежа в бюджет.
//
Процедура РеквизитыПлатежаВБюджетПоУмолчанию(ДокументОбъект) Экспорт

	Если ПлатежиВБюджетКлиентСервер.ДействуетПриказ199н_202302(ДокументОбъект.Дата) Тогда
		
		Если ДокументОбъект.ВидПеречисленияВБюджет = Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж Тогда
			
			Если ЗначениеЗаполнено(ДокументОбъект.КодБК) Тогда
				
				Если ПлатежиВБюджетКлиентСервер.ЭтоЕдиныйНалоговыйПлатеж(ДокументОбъект.КодБК) Тогда
					ЗначенияПоУмолчанию = РеквизитыЕдиногоНалоговогоПлатежа199н_202302();
				ИначеЕсли ПлатежиВБюджетКлиентСервер.ПлатежАдминистрируетсяНалоговымиОрганами(ДокументОбъект.КодБК) Тогда
					ЗначенияПоУмолчанию = РеквизитыПлатежейВНалоговыеОрганы199н_202302();
				Иначе
					
					Если ПлатежиВБюджетКлиентСервер.ДействуетПриказ199н_202401(ДокументОбъект.Дата) Тогда
						ЗначенияПоУмолчанию = РеквизитыПрочихПлатежей199н_202401();
					Иначе
						ЗначенияПоУмолчанию = РеквизитыПрочихПлатежей199н_202302();
					КонецЕсли;
					
				КонецЕсли;
				
			Иначе
				
				Если ДокументОбъект.ТипНалога = Справочники.ВидыНалоговВзносов.ЕдиныйНалоговыйПлатеж Тогда
					ЗначенияПоУмолчанию = РеквизитыЕдиногоНалоговогоПлатежа199н_202302();
				Иначе
					
					Если ПлатежиВБюджетКлиентСервер.ДействуетПриказ199н_202401(ДокументОбъект.Дата) Тогда
						ЗначенияПоУмолчанию = РеквизитыПрочихПлатежей199н_202401();
					Иначе
						ЗначенияПоУмолчанию = РеквизитыПрочихПлатежей199н_202302();
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			СписокИсключаемыхСвойств = Новый Массив;
			
			Если ЗначениеЗаполнено(ДокументОбъект.КодОКАТО)
				И ДокументОбъект.КодОКАТО <> "0" Тогда
				СписокИсключаемыхСвойств.Добавить("КодОКАТО");
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДокументОбъект.ПоказательПериода)
				И ДокументОбъект.ПоказательПериода <> "0" Тогда
				СписокИсключаемыхСвойств.Добавить("ПоказательПериода");
			КонецЕсли;
			
			ИсключаяСвойства = СтрСоединить(СписокИсключаемыхСвойств, ",");
			ЗаполнитьЗначенияСвойств(ДокументОбъект, ЗначенияПоУмолчанию, , ИсключаяСвойства);
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДублиУИН(ИдентификаторПлатежа, Ссылка)
	Дубли = Новый СписокЗначений;
	
	Если Не ПлатежиВБюджетКлиентСервер.РеквизитЗаполнен(ИдентификаторПлатежа) Тогда
		Возврат Дубли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИдентификаторПлатежа", ИдентификаторПлатежа);
	Запрос.УстановитьПараметр("Ссылка",               Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписаниеБезналичныхДенежныхСредств.Ссылка КАК Ссылка,
	|	СписаниеБезналичныхДенежныхСредств.Дата КАК Дата,
	|	СписаниеБезналичныхДенежныхСредств.Представление КАК Представление
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
	|ГДЕ
	|	СписаниеБезналичныхДенежныхСредств.ИдентификаторПлатежа = &ИдентификаторПлатежа
	|	И СписаниеБезналичныхДенежныхСредств.Ссылка <> &Ссылка
	|	И СписаниеБезналичныхДенежныхСредств.ПеречислениеВБюджет
	|	И НЕ СписаниеБезналичныхДенежныхСредств.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ,
	|	Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Дубли.Добавить(Выборка.Ссылка, Выборка.Представление);
	КонецЦикла;
	
	Возврат Дубли;
	
КонецФункции

Функция РеквизитыЕдиногоНалоговогоПлатежа199н_202302()

	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("СтатусСоставителя", "01");
	ДанныеЗаполнения.Вставить("КодОКАТО", "0");
	ДанныеЗаполнения.Вставить("ПоказательОснования", "0");
	ДанныеЗаполнения.Вставить("ПоказательПериода", "0");
	ДанныеЗаполнения.Вставить("ПоказательНомера", "0");
	ДанныеЗаполнения.Вставить("ПоказательДаты", "0");
	
	Возврат ДанныеЗаполнения;

КонецФункции

Функция РеквизитыПлатежейВНалоговыеОрганы199н_202302()

	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("СтатусСоставителя", "01");
	ДанныеЗаполнения.Вставить("КодОКАТО", "");
	ДанныеЗаполнения.Вставить("ПоказательОснования", "0");
	ДанныеЗаполнения.Вставить("ПоказательПериода", "0");
	ДанныеЗаполнения.Вставить("ПоказательНомера", "0");
	ДанныеЗаполнения.Вставить("ПоказательДаты", "0");
	
	Возврат ДанныеЗаполнения;

КонецФункции

Функция РеквизитыПрочихПлатежей199н_202302()

	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("СтатусСоставителя", "02");
	ДанныеЗаполнения.Вставить("КодОКАТО", "");
	ДанныеЗаполнения.Вставить("ПоказательОснования", "0");
	ДанныеЗаполнения.Вставить("ПоказательПериода", "");
	ДанныеЗаполнения.Вставить("ПоказательНомера", "0");
	ДанныеЗаполнения.Вставить("ПоказательДаты", "0");
	
	Возврат ДанныеЗаполнения;

КонецФункции

Функция РеквизитыПрочихПлатежей199н_202401()

	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("СтатусСоставителя", "08");
	ДанныеЗаполнения.Вставить("КодОКАТО", "");
	ДанныеЗаполнения.Вставить("ПоказательОснования", "0");
	ДанныеЗаполнения.Вставить("ПоказательПериода", "");
	ДанныеЗаполнения.Вставить("ПоказательНомера", "0");
	ДанныеЗаполнения.Вставить("ПоказательДаты", "0");
	
	Возврат ДанныеЗаполнения;

КонецФункции

#КонецОбласти
