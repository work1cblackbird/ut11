
#Область СлужебныйПрограммныйИнтерфейс

// См. Интеграция1СШтампКлиент.УстановитьШтампВДокумент
Процедура УстановитьШтампВДокумент(Знач ОписаниеОповещенияОВыполнении,
	Знач ПараметрыДобавленияШтампов,
	Знач ТаймаутПолученияСтатусаВыполненияЗаданияВСервисе = Неопределено,
	Знач ПараметрыОжидания = Неопределено) Экспорт
	
	КонтекстПроверки = "Интеграция1СШтампСлужебныйКлиент.УстановитьШтампВДокумент";
	
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		КонтекстПроверки,
		"ПараметрыДобавленияШтампов",
		ПараметрыДобавленияШтампов,
		Тип("Структура"));
	
	МассивТиповТаймаут = Новый Массив;
	МассивТиповТаймаут.Добавить(Тип("Неопределено"));
	МассивТиповТаймаут.Добавить(Тип("Число"));
	
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		КонтекстПроверки,
		"ТаймаутПолученияСтатусаВыполненияЗаданияВСервисе",
		ТаймаутПолученияСтатусаВыполненияЗаданияВСервисе,
		МассивТиповТаймаут);
	
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		КонтекстПроверки,
		"ОписаниеОповещенияОВыполнении",
		ОписаниеОповещенияОВыполнении,
		Тип("ОписаниеОповещения"));
		
	ТекстОшибки = Нстр("ru ='Не указано расширение документа.'",
							ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
		
	ОбщегоНазначенияКлиентСервер.Проверить(
		Не ПустаяСтрока(ПараметрыДобавленияШтампов.ПараметрыДокумента.Расширение),
		ТекстОшибки,
		КонтекстПроверки);
		
	ТекстОшибки = Нстр("ru ='Не указаны двоичные данные документа.'",
							ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
		
	ОбщегоНазначенияКлиентСервер.Проверить(
		ЗначениеЗаполнено(ПараметрыДобавленияШтампов.ПараметрыДокумента.ДвоичныеДанные),
		ТекстОшибки,
		КонтекстПроверки);
		
	ТекстОшибки = Нстр("ru ='Не указаны данные картинок штампов.'",
							ОбщегоНазначенияКлиент.КодОсновногоЯзыка());
		
	ОбщегоНазначенияКлиентСервер.Проверить(
		ЗначениеЗаполнено(ПараметрыДобавленияШтампов.ПараметрыШтампов),
		ТекстОшибки,
		КонтекстПроверки);
		
	ОписаниеПриЗавершении = Новый ОписаниеОповещения("ПродолжитьПослеДобавленияШтамповВДокумент", 
		Интеграция1СШтампСлужебныйКлиент, ОписаниеОповещенияОВыполнении);
	
	ДлительнаяОперация = Интеграция1СШтампВызовСервера.ДлительнаяОперацияДобавленияШтамповВДокумент(
		ПараметрыДобавленияШтампов,
		ТаймаутПолученияСтатусаВыполненияЗаданияВСервисе);

	Если ПараметрыОжидания = Неопределено Тогда
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
		ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
		ПараметрыОжидания.ВыводитьСообщения    = Истина;
		
	КонецЕсли;
		
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОписаниеПриЗавершении, ПараметрыОжидания);
	
КонецПроцедуры

// Возвращает через описание оповещения адрес временного хранилища, в котором хранится результат штампирования документа.
// //
// Параметры:
//  Результат - см. Интеграция1СШтампСлужебный.НовыйРезультатОбработкиДокумента
//  ОписаниеОповещенияОВыполнении - ОписаниеОповещения - Данные процедуры в которую необходимо вернуть результат выполнения функции.
//
Процедура ПродолжитьПослеДобавленияШтамповВДокумент(Результат, ОписаниеОповещенияОВыполнении) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.ПодробноеПредставлениеОшибки;
	КонецЕсли;
	
	ТекстОшибки = СтрШаблон(
					Нстр("ru ='Получен не верный формат результата установки штампов в документ. 
						|Параметр %1 не является адресом во временном хранилище.'",
							ОбщегоНазначенияКлиент.КодОсновногоЯзыка()),
					"АдресРезультата");
	
	ОбщегоНазначенияКлиентСервер.Проверить(
		ЭтоАдресВременногоХранилища(Результат.АдресРезультата),
		ТекстОшибки,
		"Интеграция1СШтампСлужебныйКлиент.ПродолжитьПослеДобавленияШтамповВДокумент");
	
	РезультатОбработкиДокумента = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещенияОВыполнении, РезультатОбработкиДокумента);
	
КонецПроцедуры

#КонецОбласти
