
#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытийДокументов

// Вызывается при вводе документа (Уведомление об остатках, Уведомление о ввозе, 
// Уведомление о перемещении) на основании,
// при выполнении метода Заполнить или при интерактивном вводе нового.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - заполняемый документ,
//  ДанныеЗаполнения - Произвольный - значение, которое используется как основание для заполнения,
//  ТекстЗаполнения - Строка, Неопределено - текст, используемый для заполнения документа,
//  СтандартнаяОбработка - Булево - признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполненияДокумента(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	МетаданныеДокумента = ДокументОбъект.Метаданные();

	Если НЕ ЗначениеЗаполнено(ДокументОбъект.Дата) Тогда
		ДокументОбъект.Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	КонецЕсли;

	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ПрослеживаемостьУП.ЗаполнитьПоСтруктуре(ДокументОбъект, ДанныеЗаполнения, МетаданныеДокумента);
	КонецЕсли;
	
КонецПроцедуры

// Предоставляет возможность переопределить обработку заполнения документа "Уведомление о перемещении"
//
// Параметры:
//  УведомлениеОбъект    - ДокументОбъект.УведомлениеОперемещенииПрослеживаемыхТоваров - документ, для которого
//                                                                                        выполняется заполнение.
//  ДанныеЗаполнения - Произвольный - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//  ТекстЗаполнения - Строка - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//  СтандартнаяОбработка - Булево - см. описание параметра в синтаксис-помощнике к обработчику ОбработкаЗаполнения.
//
Процедура ОбработкаЗаполненияУведомленияОПеремещении(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДанныеЗаполнения) 
		ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("Структура")  Тогда
		Возврат;
	КонецЕсли;
	
	ПрослеживаемостьБРУ.ЗаполнитьУведомлениеОПеремещенииПрослеживаемыхТоваров(
		УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
	ОбработкаЗаполненияДокумента(УведомлениеОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
		
КонецПроцедуры

// Вызывается расширением формы при необходимости проверки заполнения реквизитов при записи или при проведении документа в форме,
// а также при выполнении метода ПроверитьЗаполнение.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - проверяемый документ,
//  Отказ - Булево - признак отказа от проведения документа,
//  ПроверяемыеРеквизиты - Массив - массив путей к реквизитам, для которых будет выполнена проверка заполнения,
//  МассивНепроверяемыхРеквизитов - Массив - массив путей к реквизитам, для которых не будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Переопределяемая процедура обработки проведения документов 
// "Уведомление об остатках прослеживаемых товаров" и "Уведомление о ввозе прослеживаемых товаров"
// 
// Параметры:
//  ПараметрыПроведения - Структура таблиц см. Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров.ПодготовитьПараметрыПроведения и 
//                        Документы.УведомлениеОВвозеПрослеживаемыхТоваров.ПодготовитьПараметрыПроведения
//  Движения - ссылка на движения документа
//  Отказ - Булево - признак отказа от записи
//
Процедура ОбработкаПроведенияУведомление(ПараметрыПроведения, Движения, Отказ) Экспорт
	
КонецПроцедуры

// Переопределяемая процедура обработки удаления проведения документов
// "Уведомление об остатках прослеживаемых товаров" и "Уведомление о ввозе прослеживаемых товаров"
// 
// Параметры:
//  Регистратор - ДокументСсылка - документ регистратор
//  Основание - ДокументСсылка - основание регистратора
//
Процедура ОбработкаУдаленияПроведенияУведомление(Регистратор, Основание) Экспорт
	
КонецПроцедуры

// Переопределяемая процедура обработки проведения документа Уведомление о перемещении
// 
// Параметры:
//  ПараметрыПроведения - Структура таблиц см. Документы.УведомлениеОПеремещении.ПодготовитьПараметрыПроведения
//  Движения - ссылка на движения документа
//  Отказ - Булево - признак отказа от записи
//
Процедура ОбработкаПроведенияУведомлениеОПеремещении(ПараметрыПроведения, Движения, Отказ) Экспорт
	
КонецПроцедуры

// Возникает перед выполнением записи документа (Уведомление об остатках, Уведомление о ввозе, 
// Уведомление о перемещении). Вызывается после начала транзакции записи, но до начала записи документа.
//
// Параметры:
//  ДокументОбъект - ДокументОбъект - записываемый документ,
//  Отказ - Булево - признак отказа от записи,
//  РежимЗаписи - РежимЗаписиДокумента - текущий режим записи документа,
//  РежимПроведения - РежимПроведенияДокумента - текущий режим проведения документа.
Процедура ПередЗаписью(ДокументОбъект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область РегистрацияПрослеживаемогоТовара

// Функция возвращает параметры документа основания
// 
// Параметры:
// ДокументОснования - ДокументСсылка - документ основание
//
// Возвращаемое значение:
// - Структура - параметры документа
//
//
Функция ПолучитьПараметрыДокументаОснования(ДокументОснования) Экспорт
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснования, "Дата, Организация, Склад");
	
КонецФункции

// Проверяет необходимость обновления регистра сведений Регистрация прослеживаемого товара
//
// Параметры:
// ДокументОснование - ДокументСсылка - Документ, по которому будет формироваться запись в регистре и расчет остатка 
// Период - Дата - Дата документа основания
// 
// Возвращаемое значение:
// Булево - Истина если не надо обновлять запись в регистре
//
Функция НеОбновлятьСостояние(ДокументОснование, Период) Экспорт
	
КонецФункции

// Считает количество товара по которому необходимо сделать запись в регистре Регистрация прослеживаемого товара
//
// Параметры:
// ДокументОснование - ДокументСсылка - Документ, по которому будет формироваться запись в регистре и расчет остатка 
// ПараметрыДокументаОснования - Структура - 
//												Дата - Дата - дата документа основания
//							 					Организация - СправочникСсылка.Организация - организация 
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблица готовых записей в регистр Регистрация прослеживаемого товара
//
Функция ПолучитьТаблицуДляОбновленияРегистрацииПрослеживаемогоТовара(ДокументРегистратор, ДокументОснование, УдалениеПроведения, ПараметрыДокументаОснования) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("Основание", ДокументОснование);
	Запрос.УстановитьПараметр("НачалоПериода", ПрослеживаемостьБРУ.ДатаНачалаУчетаПрослеживаемыхТоваров());
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыДокументаОснования.Дата);
	Запрос.УстановитьПараметр("ПустаяСсылкаРнпт", Справочники.НомераГТД.ПустаяСсылка());
	Запрос.УстановитьПараметр("Организация", ПараметрыДокументаОснования.Организация);
	Запрос.УстановитьПараметр("ДокументИсключение",
		?(УдалениеПроведения, ДокументРегистратор, Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров.ПустаяСсылка()));
	
	Запрос.Текст = ТекстЗапросаПоОснованию(ДокументОснование, ПараметрыДокументаОснования)
				+ ТекстЗапросаПоУведомлениямИВычислениюОстатка();
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат.Выгрузить();
	
КонецФункции

Процедура СформироватьДвиженияКорректировкиПрослеживаемыхТоваровВЕАЭС(ТаблицаТовары, ТаблицаРеквизиты, Движения) Экспорт
	
КонецПроцедуры

Функция ПодготовитьПараметрыКорректировкиПрослеживаемыхТоваров(ТаблицаТовары) Экспорт
	
КонецФункции

// Считает количество комплектующих в составе ОС
//
// Параметры:
// ПараметрыТоваров - Структура - 
//                             - Организация - СправочникСсылка.Организация - Организация
//                             - ОсновноеСредство - СправочникСсылка.ОсновноеСредство - Основное средство 
// 
// Возвращаемое значение:
//  Число - количество комплектующих в составе ОС
//
Функция КоличествоТоваровВСоставеОС(ПараметрыТоваров) Экспорт
	
КонецФункции

#КонецОбласти

#Область Уведомления

// Формирует и возвращает текст запроса для выборки данных
// необходимых для формирования движений документа
//
// Параметры:
//  НомераТаблиц - Число - Структура с таблицами параметров проведения
// 
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаТаблицаТоваровУведомлениеОбОстатках(НомераТаблиц, ДокументСсылка) Экспорт
	
	МетаданныеДокумента = ДокументСсылка.Метаданные();
	ИмяВидаДокумента = МетаданныеДокумента.Имя;
	
	НомераТаблиц.Вставить("ТаблицаТоваров", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Уведомление.Ссылка КАК Ссылка,
	|	Уведомление.НомерСтроки КАК НомерСтроки,
	|	Уведомление.Номенклатура КАК Номенклатура,
	|	Уведомление.Количество КАК Количество,
	|	Уведомление.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	Уведомление.Сумма КАК Сумма,
	|	НоменклатураСправочник.СтранаПроисхождения КАК СтранаПроисхождения,
	|	"""" КАК Комиссионер
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.Товары КАК Уведомление
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|		ПО Уведомление.Номенклатура = НоменклатураСправочник.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО Уведомление.Ссылка = Реквизиты.Ссылка
	|ГДЕ
	|	Уведомление.Ссылка = &Ссылка
	|	И НЕ Реквизиты.ЭтоКорректировочноеУведомление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировочноеУведомление.Ссылка,
	|	КорректировочноеУведомление.НомерСтроки,
	|	КорректировочноеУведомление.Номенклатура,
	|	-КорректировочноеУведомление.Количество,
	|	-КорректировочноеУведомление.КоличествоПрослеживаемости,
	|	-КорректировочноеУведомление.Сумма,
	|	НоменклатураСправочник.СтранаПроисхождения,
	|	"""" КАК Комиссионер
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.Товары КАК КорректировочноеУведомление
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|		ПО КорректировочноеУведомление.Номенклатура = НоменклатураСправочник.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО КорректировочноеУведомление.Ссылка = Реквизиты.Ссылка
	|ГДЕ
	|	КорректировочноеУведомление.Ссылка = &Ссылка
	|	И ВЫБОР
	|			КОГДА Реквизиты.ЭтоКорректировочноеУведомление
	|				ТОГДА Реквизиты.ПолученоПодтверждениеИзФНС
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И (КорректировочноеУведомление.Количество <> КорректировочноеУведомление.КоличествоПослеИзменения
	|			ИЛИ КорректировочноеУведомление.КоличествоПрослеживаемости <> КорректировочноеУведомление.КоличествоПрослеживаемостиПослеИзменения
	|			ИЛИ КорректировочноеУведомление.Сумма <> КорректировочноеУведомление.СуммаПослеИзменения)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировочноеУведомление.Ссылка,
	|	КорректировочноеУведомление.НомерСтроки,
	|	КорректировочноеУведомление.Номенклатура,
	|	КорректировочноеУведомление.КоличествоПослеИзменения,
	|	КорректировочноеУведомление.КоличествоПрослеживаемостиПослеИзменения,
	|	КорректировочноеУведомление.СуммаПослеИзменения,
	|	НоменклатураСправочник.СтранаПроисхождения,
	|	"""" КАК Комиссионер
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.Товары КАК КорректировочноеУведомление
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСправочник
	|		ПО КорректировочноеУведомление.Номенклатура = НоменклатураСправочник.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО КорректировочноеУведомление.Ссылка = Реквизиты.Ссылка
	|ГДЕ
	|	КорректировочноеУведомление.Ссылка = &Ссылка
	|	И ВЫБОР
	|			КОГДА Реквизиты.ЭтоКорректировочноеУведомление
	|				ТОГДА Реквизиты.ПолученоПодтверждениеИзФНС
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И (КорректировочноеУведомление.Количество <> КорректировочноеУведомление.КоличествоПослеИзменения
	|			ИЛИ КорректировочноеУведомление.КоличествоПрослеживаемости <> КорректировочноеУведомление.КоличествоПрослеживаемостиПослеИзменения
	|			ИЛИ КорректировочноеУведомление.Сумма <> КорректировочноеУведомление.СуммаПослеИзменения)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// Формирует и возвращает текст запроса для выборки данных
// необходимых для формирования движений документа Уведомление о перемещении
//
// Параметры:
//  НомераТаблиц - Число - Структура с таблицами параметров проведения
// 
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаТаблицаТоваровУведомлениеОПеремещении(НомераТаблиц, ДокументСсылка) Экспорт
	
	НомераТаблиц.Вставить("ТаблицаТоваров", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Ссылка КАК Ссылка,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Номенклатура КАК Номенклатура,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Количество КАК Количество,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Сумма КАК Сумма,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.РНПТ КАК РНПТ,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ПорядковыйНомер КАК ПорядковыйНомер,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.Контрагент КАК Контрагент,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.СопроводительныйДокумент КАК СопроводительныйДокумент,
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Товары КАК УведомлениеОПеремещенииПрослеживаемыхТоваровТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Контрагенты КАК УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты
	|		ПО УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Ссылка = УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.Ссылка
	|			И УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КлючСтроки = УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.КлючСтроки
	|ГДЕ
	|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

//Переопределяемые дополнительные параметры
//
// Параметры:
//  НомераТаблиц - ТаблицаЗначений - структура таблиц параметров проведения
//  Запрос - Запрос - запрос параметров проведения
//
Процедура ДополнительныеПараметрыЗапроса(НомераТаблиц, Запрос) Экспорт
	
	
КонецПроцедуры

// Формирует текст запроса по таблице товаров
// документа УведомлениеОбОстаткахПрослеживаемыхТоваров
//
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаПоТаблицеТоваровУведомленияОбОстатках() Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	УведомлениеОбОстаткахТовары.АналитикаУчетаНоменклатуры.Номенклатура.Наименование КАК НаименованиеТовара,
		|	ВЫБОР
		|		КОГДА УведомлениеОбОстатках.КодОКПД2 = ЗНАЧЕНИЕ(Справочник.КлассификаторОКПД2.ПустаяСсылка)
		|			ТОГДА """"
		|		ИНАЧЕ ВЫРАЗИТЬ(УведомлениеОбОстатках.КодОКПД2 КАК Справочник.КлассификаторОКПД2).Код
		|	КОНЕЦ КАК КодОКПД2,
		|	ВЫРАЗИТЬ(УведомлениеОбОстатках.ЕдиницаИзмерения КАК Справочник.УпаковкиЕдиницыИзмерения).Код КАК ЕдинИзмерДок,
		|	УведомлениеОбОстатках.Количество КАК КолТоварДок,
		|	ВЫРАЗИТЬ(УведомлениеОбОстатках.ЕдиницаПрослеживаемости КАК Справочник.УпаковкиЕдиницыИзмерения).Код КАК ЕдинИзмерПер,
		|	УведомлениеОбОстатках.КоличествоПрослеживаемости КАК КоличТоварПер,
		|	УведомлениеОбОстатках.Сумма КАК СтТоварБезНДС,
		|	УведомлениеОбОстатках.НаименованиеПервичногоДокумента КАК ПервичныйДокумент,     
		|	ВЫРАЗИТЬ(УведомлениеОбОстатках.КодТНВЭД КАК Справочник.КлассификаторТНВЭД).Наименование КАК ТНВЭДНаименование,
		|	ВЫРАЗИТЬ(УведомлениеОбОстатках.КодТНВЭД КАК Справочник.КлассификаторТНВЭД).Код КАК КодТНВЭД,
		|	УведомлениеОбОстатках.НомерПервичногоДокумента КАК НомПервичДок,
		|	УведомлениеОбОстатках.ДатаПервичногоДокумента КАК ДатаПервичДок,
		|	УведомлениеОбОстатках.РНПТ КАК РегНомерТов  
		|	ПОМЕСТИТЬ ВТ_ВыборкаДанных  
		|ИЗ      
		|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ВидыЗапасов КАК УведомлениеОбОстаткахТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК УведомлениеОбОстатках
		|		ПО УведомлениеОбОстаткахТовары.Ссылка = УведомлениеОбОстатках.Ссылка
		|ГДЕ
		|	УведомлениеОбОстатках.Ссылка = &Документ
		|
		|
		| ОБЪЕДИНИТЬ ВСЕ  
		|
		|ВЫБРАТЬ
		|	УведомлениеОбОстаткахТМЦ.Номенклатура.Наименование КАК НаименованиеТовара,
		|	ВЫБОР
		|		КОГДА УведомлениеОбОстатках.КодОКПД2 = ЗНАЧЕНИЕ(Справочник.КлассификаторОКПД2.ПустаяСсылка)
		|			ТОГДА """"
		|		ИНАЧЕ ВЫРАЗИТЬ(УведомлениеОбОстатках.КодОКПД2 КАК Справочник.КлассификаторОКПД2).Код
		|	КОНЕЦ КАК КодОКПД2,
		|	ВЫРАЗИТЬ(УведомлениеОбОстатках.ЕдиницаИзмерения КАК Справочник.УпаковкиЕдиницыИзмерения).Код КАК ЕдинИзмерДок,
		|	УведомлениеОбОстатках.Количество КАК КолТоварДок,
		|	ВЫРАЗИТЬ(УведомлениеОбОстатках.ЕдиницаПрослеживаемости КАК Справочник.УпаковкиЕдиницыИзмерения).Код КАК ЕдинИзмерПер,
		|	УведомлениеОбОстатках.КоличествоПрослеживаемости КАК КоличТоварПер,
		|	УведомлениеОбОстатках.Сумма КАК СтТоварБезНДС,
		|	УведомлениеОбОстатках.НаименованиеПервичногоДокумента КАК ПервичныйДокумент,     
		|	ВЫРАЗИТЬ(УведомлениеОбОстатках.КодТНВЭД КАК Справочник.КлассификаторТНВЭД).Наименование КАК ТНВЭДНаименование,
		|	ВЫРАЗИТЬ(УведомлениеОбОстатках.КодТНВЭД КАК Справочник.КлассификаторТНВЭД).Код КАК КодТНВЭД,
		|	УведомлениеОбОстатках.НомерПервичногоДокумента КАК НомПервичДок,
		|	УведомлениеОбОстатках.ДатаПервичногоДокумента КАК ДатаПервичДок,
		|	УведомлениеОбОстатках.РНПТ КАК РегНомерТов  
		|ИЗ      
		|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ТМЦВЭксплуатации КАК УведомлениеОбОстаткахТМЦ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК УведомлениеОбОстатках
		|		ПО УведомлениеОбОстаткахТМЦ.Ссылка = УведомлениеОбОстатках.Ссылка
		|ГДЕ
		|	УведомлениеОбОстатках.Ссылка = &Документ;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(1) КАК Количество,
		|	ВТ_ВыборкаДанных.КодТНВЭД КАК КодТНВЭД
		|ПОМЕСТИТЬ ВТ_КоличествоСтрок
		|ИЗ
		|	ВТ_ВыборкаДанных КАК ВТ_ВыборкаДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВыборкаДанных.КодТНВЭД;
		|
		|//////////////////////////////////////////////////////////////////////////////// 
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ВТ_КоличествоСтрок.Количество > 1
		|			ТОГДА ВТ_ВыборкаДанных.ТНВЭДНаименование
		|		ИНАЧЕ ВТ_ВыборкаДанных.НаименованиеТовара
		|	КОНЕЦ КАК НаимТовДок,
		|	ВТ_ВыборкаДанных.КодОКПД2 КАК КодОКПД2,
		|	ВТ_ВыборкаДанных.ЕдинИзмерДок КАК ЕдинИзмерДок,
		|	ВТ_ВыборкаДанных.КолТоварДок КАК КолТоварДок,
		|	ВТ_ВыборкаДанных.ЕдинИзмерПер КАК ЕдинИзмерПер,
		|	ВТ_ВыборкаДанных.КоличТоварПер КАК КоличТоварПер,
		|	ВТ_ВыборкаДанных.СтТоварБезНДС КАК СтТоварБезНДС,
		|	ВТ_ВыборкаДанных.КодТНВЭД КАК КодТНВЭД,
		|	ВТ_ВыборкаДанных.НомПервичДок КАК НомПервичДок,
		|	ВТ_ВыборкаДанных.ДатаПервичДок КАК ДатаПервичДок,
		|	ВТ_ВыборкаДанных.РегНомерТов КАК РегНомерТов
		|ИЗ
		|	ВТ_ВыборкаДанных КАК ВТ_ВыборкаДанных
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоСтрок КАК ВТ_КоличествоСтрок
		|		ПО ВТ_ВыборкаДанных.КодТНВЭД = ВТ_КоличествоСтрок.КодТНВЭД";
		
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует текст запроса по таблице товаров
// документа УведомлениеОВвозеПрослеживаемыхТоваров
//
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаПоТаблицеТоваровУведомленияОВвозе() Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(УведомлениеОВвозеПрослеживаемыхТоваровТовары.Номенклатура КАК Справочник.Номенклатура).Наименование КАК НаименованиеТовара,
		|	ВЫБОР
		|		КОГДА УведомлениеОВвозеПрослеживаемыхТоваровТовары.КодОКПД2 = ЗНАЧЕНИЕ(Справочник.КлассификаторОКПД2.ПустаяСсылка)
		|			ТОГДА """"
		|		ИНАЧЕ ВЫРАЗИТЬ(УведомлениеОВвозеПрослеживаемыхТоваровТовары.КодОКПД2 КАК Справочник.КлассификаторОКПД2).Код
		|	КОНЕЦ КАК КодОКПД2,
		|	ВЫРАЗИТЬ(УведомлениеОВвозеПрослеживаемыхТоваров.ЕдиницаИзмерения КАК Справочник.УпаковкиЕдиницыИзмерения).Код КАК ЕдиницаИзмерения,
		|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Количество КАК Количество,
		|	ВЫРАЗИТЬ(УведомлениеОВвозеПрослеживаемыхТоваров.ЕдиницаПрослеживаемости КАК Справочник.УпаковкиЕдиницыИзмерения).Код КАК ЕдиницаПрослеживаемости,
		|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.КоличествоПоРНПТ КАК КоличествоПрослеживаемости,
		|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Сумма КАК Сумма,
		|	УведомлениеОВвозеПрослеживаемыхТоваров.ПервичныйДокумент КАК ПервичныйДокумент,
		|	ВЫРАЗИТЬ(УведомлениеОВвозеПрослеживаемыхТоваров.КодТНВЭД КАК Справочник.КлассификаторТНВЭД).Код КАК КодТНВЭД,
		|	ВЫРАЗИТЬ(УведомлениеОВвозеПрослеживаемыхТоваров.КодТНВЭД КАК Справочник.КлассификаторТНВЭД).Наименование КАК ТНВЭДНаименование,
		|	ДанныеПервичныхДокументов.Номер КАК НомерСопроводительногоДокумента,
		|	ДанныеПервичныхДокументов.Дата КАК ДатаСопроводительногоДокумента,
		|	УведомлениеОВвозеПрослеживаемыхТоваров.РНПТ КАК РНПТ
		|ПОМЕСТИТЬ ВТ_ВыборкаДанных
		|ИЗ
		|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров.Товары КАК УведомлениеОВвозеПрослеживаемыхТоваровТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|			ПО УведомлениеОВвозеПрослеживаемыхТоваров.ПервичныйДокумент = ДанныеПервичныхДокументов.Документ
		|				И УведомлениеОВвозеПрослеживаемыхТоваров.Организация = ДанныеПервичныхДокументов.Организация
		|		ПО УведомлениеОВвозеПрослеживаемыхТоваровТовары.Ссылка = УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка
		|ГДЕ
		|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка = &Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(1) КАК Количество,
		|	ВТ_ВыборкаДанных.КодТНВЭД КАК КодТНВЭД
		|ПОМЕСТИТЬ ВТ_КоличествоСтрок
		|ИЗ
		|	ВТ_ВыборкаДанных КАК ВТ_ВыборкаДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВыборкаДанных.КодТНВЭД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ВТ_КоличествоСтрок.Количество > 1
		|			ТОГДА ВТ_ВыборкаДанных.ТНВЭДНаименование
		|		ИНАЧЕ ВТ_ВыборкаДанных.НаименованиеТовара
		|	КОНЕЦ КАК НаимТовДок,
		|	ВТ_ВыборкаДанных.КодОКПД2 КАК КодОКПД2,
		|	ВТ_ВыборкаДанных.ЕдиницаИзмерения КАК ЕдинИзмерДок,
		|	СУММА(ВТ_ВыборкаДанных.Количество) КАК КолТоварДок,
		|	ВТ_ВыборкаДанных.ЕдиницаПрослеживаемости КАК ЕдинИзмерПрослеж,
		|	СУММА(ВТ_ВыборкаДанных.КоличествоПрослеживаемости) КАК КоличТоварПрослеж,
		|	СУММА(ВТ_ВыборкаДанных.Сумма) КАК СтТоварБезНДС,
		|	ВТ_ВыборкаДанных.КодТНВЭД КАК КодТНВЭД,
		|	ВТ_ВыборкаДанных.НомерСопроводительногоДокумента КАК НомСопрДок,
		|	ВТ_ВыборкаДанных.ДатаСопроводительногоДокумента КАК ДатаСопрДок,
		|	ВТ_ВыборкаДанных.РНПТ КАК РНПТ
		|ИЗ
		|	ВТ_ВыборкаДанных КАК ВТ_ВыборкаДанных
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоСтрок КАК ВТ_КоличествоСтрок
		|		ПО ВТ_ВыборкаДанных.КодТНВЭД = ВТ_КоличествоСтрок.КодТНВЭД
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВыборкаДанных.КодОКПД2,
		|	ВТ_ВыборкаДанных.ЕдиницаИзмерения,
		|	ВТ_ВыборкаДанных.ЕдиницаПрослеживаемости,
		|	ВЫБОР
		|		КОГДА ВТ_КоличествоСтрок.Количество > 1
		|			ТОГДА ВТ_ВыборкаДанных.ТНВЭДНаименование
		|		ИНАЧЕ ВТ_ВыборкаДанных.НаименованиеТовара
		|	КОНЕЦ,
		|	ВТ_ВыборкаДанных.КодТНВЭД,
		|	ВТ_ВыборкаДанных.ДатаСопроводительногоДокумента,
		|	ВТ_ВыборкаДанных.НомерСопроводительногоДокумента,
		|	ВТ_ВыборкаДанных.РНПТ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует текст запроса по таблице товаров
// документа УведомлениеОПеремещенииПрослеживаемыхТоваров
//
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаПоТаблицамУведомленияОПеремещенииПрослеживаемыхТоваров() Экспорт
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.Контрагент КАК Контрагент,
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.СопроводительныйДокумент КАК СопроводительныйДокумент,
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Номенклатура КАК Номенклатура,
		|	МАКСИМУМ(УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Номенклатура.Наименование) КАК НоменклатураНаименование,
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КодТНВЭД КАК КодТНВЭД,
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ЕдиницаПрослеживаемости КАК ЕдиницаПрослеживаемости,
		|	МАКСИМУМ(УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Количество) КАК Количество,
		|	МАКСИМУМ(УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КоличествоПрослеживаемости) КАК КоличествоПрослеживаемости,
		|	МАКСИМУМ(УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Сумма) КАК Сумма,
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.РНПТ КАК РНПТ,
		|	МАКСИМУМ(ДанныеПервичныхДокументов.Номер) КАК НомерСопроводительногоДокумента,
		|	МАКСИМУМ(ДанныеПервичныхДокументов.Дата) КАК ДатаСопроводительногоДокумента,
		|	МАКСИМУМ(УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КодТНВЭД.Код) КАК КодТНВЭДКод,
		|	МАКСИМУМ(УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ЕдиницаИзмерения.Код) КАК ЕдиницаИзмеренияКод,
		|	МАКСИМУМ(УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ЕдиницаПрослеживаемости.Код) КАК ЕдиницаПрослеживаемостиКод,
		|	МАКСИМУМ(УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.РНПТ.Код) КАК РНПТКод,
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.НомерСтроки КАК НомерСтроки,
		|	СтраныМира.Код КАК КодТранзитнойСтраны
		|ИЗ
		|	Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Контрагенты КАК УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.Товары КАК УведомлениеОПеремещенииПрослеживаемыхТоваровТовары
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|			ПО УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.СопроводительныйДокумент = ДанныеПервичныхДокументов.Документ
		|		ПО УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.Ссылка = УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Ссылка
		|			И УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.КлючСтроки = УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КлючСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров КАК УведомлениеОПеремещенииПрослеживаемыхТоваров
		|		ПО УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.Ссылка = УведомлениеОПеремещенииПрослеживаемыхТоваров.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПеремещенииПрослеживаемыхТоваров.ТранзитныеСтраныЕАЭС КАК УведомлениеОПеремещенииПрослеживаемыхТоваровТранзитныеСтраныЕАЭС
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтраныМира КАК СтраныМира
		|			ПО УведомлениеОПеремещенииПрослеживаемыхТоваровТранзитныеСтраныЕАЭС.Страна = СтраныМира.Ссылка
		|		ПО УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.Ссылка = УведомлениеОПеремещенииПрослеживаемыхТоваровТранзитныеСтраныЕАЭС.Ссылка
		|			И УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.КлючСтроки = УведомлениеОПеремещенииПрослеживаемыхТоваровТранзитныеСтраныЕАЭС.КлючСтроки
		|ГДЕ
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.Ссылка = &Документ
		|
		|СГРУППИРОВАТЬ ПО
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровКонтрагенты.Контрагент,
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.СопроводительныйДокумент,
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.Номенклатура,
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ЕдиницаПрослеживаемости,
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.ЕдиницаИзмерения,
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.КодТНВЭД,
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.РНПТ,
		|	УведомлениеОПеремещенииПрослеживаемыхТоваровТовары.НомерСтроки,
		|	СтраныМира.Код
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСопроводительногоДокумента,
		|	НомерСтроки
		|ИТОГИ ПО
		|	Контрагент,
		|	СопроводительныйДокумент,
		|	НомерСтроки,
		|	КодТранзитнойСтраны";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует данные по контрагенту
// документа УведомлениеОбОстаткахПрослеживаемыхТоваров
//
// Возвращаемое значение:
//  Строка - текст запроса
//
// Формирует структуру данных контрагента, необходимых для печати
// Уведомления о перемещении прослеживаемых товаров
//
// Параметры:
// Контрагент - СправочникСсылка.Контрагенты - Контрагент 
// 
// Возвращаемое значение:
//    Структура:
//		Признак - Строка - Признак физического лица, возможны значения: "V" - физ. лицо; "" - организация.
//		КодГосударства - Строка - Код государства-члена ЕАЭС по ОКСМ (3 цифры).
//		Наименование - Строка - Наименование организации (1 - 1000 символов).
//		Фамилия - Строка - Фамилия физического лица (1 - 60 символов).
//		Имя - Строка - Имя физического лица (1 - 60 символов).
//		Отчетсво - -  Отчество физического лица (1 - 60 символов).
//		ИдентификационныйКод - Строка -  Идентификационный код (номер) в государстве-члене ЕАЭС (8 - 14 символов).
//		Адрес - Строка - Адрес (Строка: 1 - 1000 символов).
//
Функция РеквизитыКонтрагента(Контрагент) Экспорт
	
	Реквизиты = Новый Структура("Признак,КодГосударства,Наименование,Фамилия,Имя,Отчетсво,ИдентификационныйКод,Адрес",
	 "","","","","","","","");
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		
		ДанныеКонтрагента = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Контрагент);
		
		Если ДанныеКонтрагента.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо
			ИЛИ ДанныеКонтрагента.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ИндивидуальныйПредприниматель Тогда
			
			ЧастиФИО= ФизическиеЛицаКлиентСервер.ЧастиИмени(ДанныеКонтрагента.ПолноеНаименование);
			
			Реквизиты["Признак"] = "V";
			Реквизиты["Фамилия"] = ЧастиФИО.Фамилия;
			Реквизиты["Имя"] = ЧастиФИО.Имя;
			Реквизиты["Отчетсво"] = ЧастиФИО.Отчество;
			
		Иначе
			
			Реквизиты["Наименование"] = ДанныеКонтрагента.ПолноеНаименование;
			
		КонецЕсли;
		
		Реквизиты["КодГосударства"] = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			ДанныеКонтрагента.СтранаРегистрации, "Код");
		
		Реквизиты["ИдентификационныйКод"] = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			Контрагент, "НалоговыйНомер");
		
		Реквизиты["Адрес"] = ДанныеКонтрагента.ЮридическийАдрес;
		
	КонецЕсли;
	
	Возврат Реквизиты;
		
КонецФункции

// Формирует данные многострочной строки по таблице товаров
// документа УведомлениеОПеремещенииПрослеживаемыхТоваров
//
// Возвращаемое значение:
//  Структура:
//			- НомерПоПорядкуТоваров - Число  - графа 1 (0 - 999)
//			- НаименованиеСопроводительногоДокумента - Строка - графа 2 (1 - 255 символов)
//			- НомерСопроводительногоДокумента - Строка - графа 3 (1 - 255 символов)
//			- ДатаСопроводительногоДокумента - Дата   - графа 4.
//			- КодТНВЭД - Строка - графа 6 (6 - 10 символов)
//			- ПорядковыйНомерСопроводительногоДокумента - Число - графа 7 (0 - 9999)
//			- НаименованиеТовара - Строка - графа 8 (1 - 255 символов)
//			- Количество - Число  - графа 9 (0 - 9999999999999.999999)
//			- КодЕдиницаИзмерения - Строка - графа 10 (3 - 4 цифры)
//			- КоличествоПрослеживаемости - Число  - графа 11 (0 - 999999999999999.99999999999)
//			- ЕдиницаПрослеживаемости - Строка - графа 12 (3 - 4 цифры)
//			- РНПТ - Строка - графа 13 (27 - 29 смволов)
//			- АдресДоставки - Строка - графа 14 (1 - 255 символов)
//			- СуммаБезНДС - Число  - графа 15 (0 - 99999999999999999.99)
//
Функция ПолучитьДанныеСтрокиВыборки(ВыборкаНомерСтроки) Экспорт
	
	ДанныеСтроки = Новый Структура();
	
	НаименованиеСопроводительногоДокумента = "";
	АдресДоставки = "";
	
	Если ТипЗНЧ(ВыборкаНомерСтроки.СопроводительныйДокумент) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		НаименованиеСопроводительногоДокумента = "Накладная";
		
		АдресДоставки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
			ВыборкаНомерСтроки.СопроводительныйДокумент, "АдресДоставки");
			
	КонецЕсли;
		
	ДанныеСтроки.Вставить("НаименованиеСопроводительногоДокумента", НаименованиеСопроводительногоДокумента);
	ДанныеСтроки.Вставить("НомерСопроводительногоДокумента", ВыборкаНомерСтроки.НомерСопроводительногоДокумента);
	ДанныеСтроки.Вставить("ДатаСопроводительногоДокумента", ВыборкаНомерСтроки.ДатаСопроводительногоДокумента);
	
	ДанныеСтроки.Вставить("КодТНВЭД", ВыборкаНомерСтроки.КодТНВЭДКод);
	ДанныеСтроки.Вставить("ПорядковыйНомерВСопроводительномДокументе", ВыборкаНомерСтроки.НомерСтроки);
	ДанныеСтроки.Вставить("НаименованиеТовара", ВыборкаНомерСтроки.НоменклатураНаименование);
	ДанныеСтроки.Вставить("Количество", ВыборкаНомерСтроки.Количество);
	ДанныеСтроки.Вставить("КодЕдиницаИзмерения", ВыборкаНомерСтроки.ЕдиницаИзмеренияКод);
	ДанныеСтроки.Вставить("КоличествоПрослеживаемости", ВыборкаНомерСтроки.КоличествоПрослеживаемости);
	ДанныеСтроки.Вставить("ЕдиницаПрослеживаемости", ВыборкаНомерСтроки.ЕдиницаПрослеживаемостиКод);
	ДанныеСтроки.Вставить("РНПТ", ВыборкаНомерСтроки.РНПТКод);
	ДанныеСтроки.Вставить("СуммаБезНДС", ВыборкаНомерСтроки.Сумма);
	
	ДанныеСтроки.Вставить("АдресДоставки", АдресДоставки);
	
	Возврат ДанныеСтроки;
	
КонецФункции

// Определяет код государственного органа, администрирующего деятельность организации
//
// Параметры:
//  Организация					 - СправочникСсылка.Организации, СправочникОбъект.Организации - администрируемая организация
// 
// Возвращаемое значение:
//  Строка - значащая часть кода государственного органа, заданного в информационной базе
//
Функция КодГосударственногоОрганаОрганизации(Организация) Экспорт
	
	Возврат "";
	
КонецФункции

// Определяет КПП организации на заданную дату
//
// Параметры:
//  Организация					 - СправочникСсылка.Организации, СправочникОбъект.Организации - администрируемая организация
//  ДатаСведений - Дата - Дата, на которую нужно получить КПП организации.
// Возвращаемое значение:
//  Строка - КПП.
//
Функция КППНаДату(Организация, ДатаСведений) Экспорт
	
	Возврат ОрганизацииЛокализация.КППНаДату(Организация, ДатаСведений);
	
КонецФункции

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	Списки.Вставить(Метаданные.РегистрыНакопления.ПрослеживаемыеТоварыОтгруженныеВЕАЭС, Истина);
	
КонецПроцедуры

// Формирует и возвращает текст запроса для выборки данных
// необходимых для формирования движений документа
//
// Параметры:
//  НомераТаблиц - Число - Структура с таблицами параметров проведения
// 
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаТаблицаТоваровУведомлениеОВвозе(НомераТаблиц, ДокументСсылка) Экспорт
	
КонецФункции

// Формирует и возвращает текст запроса для выборки данных
// необходимых для формирования движений документа
//
// Параметры:
//  НомераТаблиц - Число - Структура с таблицами параметров проведения
// 
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаТаблицаОСУведомлениеОбОстатках(НомераТаблиц, ДокументСсылка) Экспорт
	
КонецФункции

// Возвращает структуру реквизитов основного средства 
// Параметры: 
//  ОсновноеСредство - СправочникСсылка - основное средство
// 
// Возвращаемое значение:
//  Строка.
Функция ПараметрыОС(ОсновноеСредство) Экспорт
	
КонецФункции

// Процедура выполняет подготовку наборов записей документа к проведению документа.
// 1. Очищает наборы записей от "старых записей" (ситуация возможна только в толстом клиенте)
// 2. Взводит флаг записи у наборов, по которым документ имел движения при прошлом проведении
// 3. Устанавливает активность наборам записей документов с установленным флагом ручной корректировки
// 4. Записывает пустые наборы, если дата ранее проведенного документа была сдвинута вперед
// Вызывается из модуля документа при проведении.
//
Процедура ПодготовитьНаборыЗаписейКПроведению(Объект) Экспорт
	
КонецПроцедуры

// Процедура выполняет подготовку наборов записей документа к отмене проведения документа.
// 1. Взводит флаг записи у наборов, по которым документ имел движения при прошлом проведении
// 2. Снимает активность у наборов записей документов с установленным флагом ручной корректировки
// Вызывается из модуля документа при отмене проведения.
//
Процедура ПодготовитьНаборыЗаписейКОтменеПроведения(Объект) Экспорт
	
КонецПроцедуры

// Функция формирует сведения об указанном ЮрФизЛице. К сведениям относятся -
// наименование, адрес, номер телефона, банковские реквизиты.
//
// Параметры: 
//  ЮрФизЛицо   - организация или физическое лицо, о котором собираются сведения.
//  Период - дата, на которую выбираются сведения о ЮрФизЛице.
//  БанковскийСчет - банковский счет, реквизиты которого выводятся.
//
// Возвращаемое значение:
//  Сведения - собранные сведения.
//
//  Функция формирует сведения об указанном ЮрФизЛице. К сведениям относятся -
// наименование, адрес, номер телефона, банковские реквизиты.
//
// Параметры: 
//  ЮрФизЛицо   - организация или физическое лицо, о котором собираются сведения.
//  ДатаПериода - дата, на которую выбираются сведения о ЮрФизЛице.
//  БанковскийСчет - банковский счет, реквизиты которого выводятся.
//
// Возвращаемое значение:
//  Сведения - собранные сведения.
//
Функция СведенияОЮрФизЛице(ЮрФизЛицо, Период = '20300101') Экспорт

	Возврат БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
		ЮрФизЛицо, Период);
	
КонецФункции

// Вызывается перед загрузкой пользовательских настроек на сервере
//
// Параметры:
//  Список      - ДинамическийСписок - Динамический список, для которого устанавливается отбор.
//  Настройки   - ПользовательскиеНастройкиКомпоновкиДанных - Восстанавливаемые настройки списка.
//  ИмяОтбора   - Строка - Имя элемента отбора.
//
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Список, Настройки, ИмяОтбора) Экспорт
	
	ОбщегоНазначенияБП.ВосстановитьОтборСписка(Список, Настройки, "Организация");
	
КонецПроцедуры

Функция УчетнаяПолитикаСуществует(Организация, Период, ВыводитьСообщениеОбОтсутствииУчетнойПолитики = Ложь, ДокументСсылка = Неопределено) Экспорт
	
	Возврат УчетнаяПолитика.Существует(Организация, Период, ВыводитьСообщениеОбОтсутствииУчетнойПолитики, ДокументСсылка);
	
КонецФункции

Функция УстановитьСостояниеДокумента(Форма) Экспорт
	
	Объект = Форма.Объект;
	Форма.СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецФункции

// Возвращает перечень (массив) всех структурных частей переданной головной организации, имеющих отдельный баланс.
// В перечень входит головная организация и все ее обособленные подразделения на выделенном балансе.
// В перечень входят только те организации, данные по которым доступны текущему пользователю.
//
// Возвращаемое значение:
// 	Массив из СправочникСсылка.Организации - Массив Организаций.
//
Функция ВсяОрганизация(Организация) Экспорт
	
	МассивОрганизаций = БухгалтерскийУчетПереопределяемый.ВсяОрганизация(Организация);

	Возврат МассивОрганизаций;

КонецФункции

Функция ЭтоЮридическоеЛицо(СведенияОПродавце) Экспорт
	
	Возврат ПартнерыИКонтрагенты.ЭтоЮрЛицо(СведенияОПродавце.ЮрФизЛицо);
	
КонецФункции

Функция ЗапросЗаполнитьДокументДаннымиУведомлениеОперемещении() Экспорт

	Возврат 
	"ВЫБРАТЬ
	|	РеализацияПрослеживаемыхТоваровОстатки.Контрагент КАК Контрагент,
	|	РеализацияПрослеживаемыхТоваровОстатки.СопроводительныйДокумент КАК СопроводительныйДокумент,
	|	РеализацияПрослеживаемыхТоваровОстатки.Номенклатура КАК Номенклатура,
	|	РеализацияПрослеживаемыхТоваровОстатки.РНПТ КАК РНПТ,
	|	РеализацияПрослеживаемыхТоваровОстатки.ПорядковыйНомер КАК ПорядковыйНомер,
	|	РеализацияПрослеживаемыхТоваровОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	РеализацияПрослеживаемыхТоваровОстатки.КоличествоПрослеживаемостиОстаток КАК КоличествоПрослеживаемостиОстаток,
	|	РеализацияПрослеживаемыхТоваровОстатки.СуммаОстаток КАК СуммаОстаток,
	|	ВЫРАЗИТЬ(РеализацияПрослеживаемыхТоваровОстатки.Номенклатура КАК Справочник.Номенклатура).КодТНВЭД КАК КодТНВЭД,
	|	ВЫРАЗИТЬ(РеализацияПрослеживаемыхТоваровОстатки.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ПОМЕСТИТЬ ВТ_ВыборкаДанных
	|ИЗ
	|	РегистрНакопления.ПрослеживаемыеТоварыОтгруженныеВЕАЭС.Остатки(&Период, Организация = &Организация) КАК РеализацияПрослеживаемыхТоваровОстатки
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ДокументОснование <> НЕОПРЕДЕЛЕНО
	|				ТОГДА РеализацияПрослеживаемыхТоваровОстатки.СопроводительныйДокумент = &ДокументОснование
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
КонецФункции

Функция ПолучитьПоНоменклатуреЗначенияПоУмолчанию(Номенклатура) Экспорт
	
	ИзменяемыеПоля = Новый Структура("КодТНВЭД,ЕдиницаИзмерения,ЕдиницаПрослеживаемости,РНПТ");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВЫРАЗИТЬ(Номенклатура.КодТНВЭД КАК Справочник.КлассификаторТНВЭД).ЕдиницаИзмерения КАК ЕдиницаПрослеживаемости
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
	
		ЗаполнитьЗначенияСвойств(ИзменяемыеПоля, Результат);
		
	Иначе
	
		ИзменяемыеПоля.КодТНВЭД = Справочники.КлассификаторТНВЭД.ПустаяСсылка();
		ИзменяемыеПоля.ЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
		ИзменяемыеПоля.ЕдиницаПрослеживаемости = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
		
	КонецЕсли;
	
	ИзменяемыеПоля.РНПТ = "";
	
	Возврат ИзменяемыеПоля;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрослеживаемыхТоваровПоОснованиюУведомленияОбОстатках() Экспорт
	
КонецФункции

#КонецОбласти

#Область ПомощникПолученияРНПТ

Функция ПолучитьРНПТНаСервере(СтрРНПТ) Экспорт
	
КонецФункции

// Проверяет ведется учет по складам или нет на счете товары
//
// Возвращаемое значение:
// Булево - Да, по складам ведется учет
//
Функция ВедетсяУчетПоСкладам() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Получаем таблицу остатков прослеживаемых товаров и ОС
// Уточнение: попадают остатки, по которым делали инвентаризацию и без инвентаризации
//
// Параметры:
//  Период - Дата - дата остатков
//  Организация - СправочникСсылка.Организация - Организация
//
// Возвращаемое значение:
//		Структура - 
//					НачальныеДанныеТоваров - ТаблицаЗначений - остатки товаров
//					НачальныеДанныеОС -      ТаблицаЗначений - остатки ОС
//
Функция ПолучитьНачальныеДанныеДляПомощникаПолученияРНПТ(Период, Организация) Экспорт
	
	Возврат Неопределено;
	
КонецФункции

// Возвращает представление документа на форме
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ
//  
// Возвращаемое значение:
//  Строка - Текст, составленный по ссылке документа
// 
Функция ПредставлениеДокумента(Документ, ЭтоДокументОснования = Ложь) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Документ) Тогда
		Возврат "";
	КонецЕсли;
	
	ПараметрыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, "Номер,Дата");
	ТекстОснование = "";
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.УведомлениеОбОстаткахПрослеживаемыхТоваров") Тогда
		
		ТекстОснование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Уведомление об остатках №%1 от %2'"),
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ПараметрыДокумента.Номер, Истина, Ложь), 
			Формат(ПараметрыДокумента.Дата, "ДФ=dd.MM.yyyy"));
			
	ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.УведомлениеОВвозеПрослеживаемыхТоваров") Тогда
		
		ТекстОснование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Уведомление о ввозе №%1 от %2'"),
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ПараметрыДокумента.Номер, Истина, Ложь), 
			Формат(ПараметрыДокумента.Дата, "ДФ=dd.MM.yyyy"));
			
	ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.УведомлениеОПеремещенииПрослеживаемыхТоваров") Тогда
		
		ТекстОснование = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Уведомление о перемещении №%1 от %2'"),
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ПараметрыДокумента.Номер, Истина, Ложь), 
			Формат(ПараметрыДокумента.Дата, "ДФ=dd.MM.yyyy"));
			
	КонецЕсли;
	
	Возврат ТекстОснование;
	
КонецФункции

// Процедура в которой можно добавить новые реквизиты на форму
// 
// Параметры:
// Форма - ФормаКлиентскогоПриложения - форма помощника получения РНПТ
// 
// Пример как добавлять колонку в таблицу НачальныеДанне
// нРеквизиты = Новый Массив;
// нРеквизиты.Добавить(Новый РеквизитФормы("Тест1", Новый ОписаниеТипов("Строка"), "Объект.НачальныеДанные", "Тест3", Истина));
// Форма.ИзменитьРеквизиты(нРеквизиты);
//
// Пример как добавлять колонку в таблицу на форму
// нЭлемент = Элементы.Вставить("Тест3", Тип("ПолеФормы"), Элементы.НачальныеДанные, Элементы.НачальныеДанныеКоличество);
// нЭлемент.Вид = ВидПоляФормы.ПолеВвода;
// нЭлемент.ПутьКДанным = "Объект.НачальныеДанные.Тест1";
//
// Пример как добавлять колонку в таблицу на форму
// переопределение запроса динамического списка Функция: ТекстЗапросаДинамическогоСпискаУведомления()
// нЭлемент = Элементы.Вставить("ТестУведомления", Тип("ПолеФормы"), Элементы.Уведомления, Элементы.УведомленияПредставлениеУведомление);
// нЭлемент.Вид = ВидПоляФормы.ПолеВвода;
// нЭлемент.ПутьКДанным = "Уведомления.ТестУведомления";
//
Процедура ДобавитьДополнительныеРеквизитыНаФорму(Форма) Экспорт

	Элементы = Форма.Элементы;
	
	Возврат ;
	
КонецПроцедуры

Функция ТекстЗапросаДинамическогоСпискаУведомления(ТекстЗапроса) Экспорт
	
	Возврат "";
	
КонецФункции

Функция ТекстЗапросаДинамическогоСпискаТоварыПоУведомлениям(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	УведомлениеОбОстаткахПрослеживаемогоТовараТовары.Ссылка КАК Уведомление,
	|	УведомлениеОбОстаткахПрослеживаемогоТовараТовары.Номенклатура КАК Номенклатура,
	|	УведомлениеОбОстаткахПрослеживаемогоТовараТовары.КодОКПД2 КАК КодОКПД2,
	|	ЛОЖЬ КАК ЗаполненоОКПД2,
	|	УведомлениеОбОстаткахПрослеживаемогоТовараТовары.Количество КАК Количество,
	|	УведомлениеОбОстаткахПрослеживаемогоТовараТовары.КоличествоПрослеживаемости КАК КоличествоПрослеживаемости,
	|	УведомлениеОбОстаткахПрослеживаемогоТовараТовары.Сумма КАК Сумма,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.ЕдиницаПрослеживаемости КАК ЕдиницаПрослеживаемости,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.ЕдиницаИзмерения = УведомлениеОбОстаткахПрослеживаемыхТоваров.ЕдиницаПрослеживаемости КАК ЕдиницыИзмеренияОдинаковы,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(1)) КАК Отступ
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.Товары КАК УведомлениеОбОстаткахПрослеживаемогоТовараТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК УведомлениеОбОстаткахПрослеживаемыхТоваров
	|		ПО УведомлениеОбОстаткахПрослеживаемогоТовараТовары.Ссылка = УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка
	|ГДЕ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Проведен = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Ссылка,
	|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Номенклатура,
	|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.КодОКПД2,
	|	ЛОЖЬ,
	|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Количество,
	|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.КоличествоПрослеживаемости,
	|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Сумма,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.ЕдиницаИзмерения,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.ЕдиницаПрослеживаемости,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.ЕдиницаИзмерения = УведомлениеОВвозеПрослеживаемыхТоваров.ЕдиницаПрослеживаемости,
	|	ВЫРАЗИТЬ("""" КАК СТРОКА(1))
	|ИЗ
	|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров.Товары КАК УведомлениеОВвозеПрослеживаемыхТоваровТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
	|		ПО УведомлениеОВвозеПрослеживаемыхТоваровТовары.Ссылка = УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка
	|ГДЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Проведен = ИСТИНА";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ПустоеЗначениеРНПТ() Экспорт
	
	Возврат Справочники.НомераГТД.ПустаяСсылка();
	
КонецФункции

// Возвращает текст представления первичного документа
// Представление документа определяется по наименованию, ввденному вручную или по ссылке документа
//
// Параметры:
//  СсылкаНаПервичныйДокумент - СсылкаНаДокумент - Ссылка на документ
//  ТекстНаименованиеПервичногоДокумента - Строка - наименование документа, заполняется при ручном вводе первичного документа
//  ТекстНомерПервичногоДокумента - Строка - номер документа, заполняется при ручном вводе первичного документа
//  ДатаПервичногоДокумента - Дата - дата документа,  заполняется при ручном вводе первичного документа
//
// Возвращаемое значение:
//		Строка - Представление первичного докуметнта
//
Функция ПредставлениеПервичногоДокументаВУведомленииОбОстатках(
			СсылкаНаПервичныйДокумент, ТекстНаименованиеПервичногоДокумента, 
			ТекстНомерПервичногоДокумента, ДатаПервичногоДокумента) Экспорт
	
КонецФункции

// Функция возвращает значение по умолчанию для передаваемого пользователя и настройки.
//
// Параметры:
//  Настройка    - Строка - вид настройки, значение по умолчанию которой необходимо получить.
//  Пользователь - СправочникСсылка.Пользователи - пользователь программы, настройка которого
//				   запрашивается, если параметр не передается настройка возвращается для текущего пользователя.
//
// Возвращаемое значение:
//  Строка
//
Функция ПолучитьЗначениеПоУмолчанию(Настройка) Экспорт
	
КонецФункции

// Возвращает строку с представлением периода.
//
// Параметры:
//	НачалоПериода - Дата - Начало периода.
//	КонецПериода - Дата - Конец периода.
//	ТолькоДаты - Булево - Если Ложь, то возвращаемая строка включает предлог "за".
//
// Возвращаемое значение:
//  Строка - Текст представления периода.
//
Функция ПолучитьПредставлениеПериода(НачалоПериода = '00010101', КонецПериода = '00010101', ТолькоДаты  = Ложь) Экспорт
	
КонецФункции

// Создает инвентаризацию товаров в помощнике Получения РНПТ
//
// Параметры:
// 
// Дата - Дата - Дата, на которую будет создана инвентаризация
// Организация - СправочникСсылка.Организации
// ТекущийСклад - Склад, по которому необходимо создать инвентаризацию
// СписокНоменклатуры - СписокЗначений - список товаров для инвентаризации
// 
// Возвращаемое значение:
// СсылкаОбъект.ИнвентаризацияТоваровНаСкладе - Ссылка на документ инвентаризации
Функция СоздатьИнвентаризациюТовара(Дата, Организация, ТекущийСклад, СписокНоменклатуры) Экспорт
	
КонецФункции

#КонецОбласти

// Формирует временные таблицы СведенияОСсылкахНаДаты и СведенияОНоменклатуре со сведениями, необходимыми
// для отчета об операциях.
// СведенияОСсылкахНаДаты:
//  * Ссылка - СправочникСсылка.Контрагенты
//  * ДатаСведений - дата на которую получены сведения о контрагенте
//  * Наименование, ИНН, КПП - сведения о контрагенте
// СведенияОНоменклатуре:
//  * Ссылка - СправочникСсылка.Номенклатура
//  * КодТНВЭД, КодОКПД2, ЕдиницаИзмерения, ЕдиницаИзмеренияПрослеживаемости - сведения о номенклатуре
//
Процедура ДополнительныеСведенияДляОтчетаОбОперациях(МенеджерВременныхТаблиц) Экспорт
	
КонецПроцедуры

// Для пустого отчета об операциях в процедуре заполняется текст предупреждения для пользователя
Процедура ПредупреждениеОбОтсутствииДанныхВОтчете(ПараметрыОтчета) Экспорт
	
КонецПроцедуры

// Формирует таблицу товаров, для регистра РеализацияПрослеживаемыхТоваров в ЕАЭС. 
// Далее по этим движениям будет заполняться документ Уведомление о перемещении прослеживаемых товаров
// 
// Возвращаемое значение:
// 	ТаблицаЗначений - Описание:
// * Номенклатура - СправочникСсылка.Номенклатура
// * РНПТ - СправочникСсылка.НомераГТД
// * Количество - Число
// * СопроводительныйДокумент - ДокументСсылка.РеализацияТоваровУслуг
// * Контрагент - СправочникСсылка.Контрагенты
// * ПорядковыйНомер - Число
// * КоличествоПрослеживаемости - Число
// * Сумма - Число
// * Период - Дата
// * Регистратор - ДокументСсылка
// * Организация - СправочникСсылка.Организации
//
Функция ПодготовитьТаблицуРеализацияПрослеживаемыхТоваровВЕАЭС(ПрослеживаемыеТоварыРеализованные, РеализацияТаблицаДокумента, ТаблицаРеквизитов) Экспорт
	Если Не ЗначениеЗаполнено(ПрослеживаемыеТоварыРеализованные)
		ИЛИ Не ЗначениеЗаполнено(ТаблицаРеквизитов) Тогда
			Возврат Неопределено;
	КонецЕсли;
	
	Параметры = ПодготовитьПараметрыПрослеживаемыхТоваров(ПрослеживаемыеТоварыРеализованные, РеализацияТаблицаДокумента, ТаблицаРеквизитов);
	
	Реквизиты = Параметры.Реквизиты[0];
	
	Если НЕ (ПрослеживаемостьБРУ.ВедетсяУчетПрослеживаемыхТоваров(Реквизиты.Период))
		ИЛИ (НЕ УправлениеКонтактнойИнформацией.ЭтоСтранаУчастникЕАЭС(Реквизиты.СтранаРегистрации)) Тогда
			Возврат Неопределено;
	КонецЕсли;
	
	РеализацияПрослеживаемыхТоваров = Параметры.ПрослеживаемыеТовары.Скопировать();
	РеализацияПрослеживаемыхТоваров.Колонки.Добавить("Сумма", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	РеализацияПрослеживаемыхТоваров.Колонки.Добавить("Период", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	РеализацияПрослеживаемыхТоваров.Колонки.Добавить("Регистратор", Документы.ТипВсеСсылки());
	РеализацияПрослеживаемыхТоваров.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	
	РаспределитьСуммуПродажиПоПрослеживаемымТоварам(РеализацияПрослеживаемыхТоваров, Параметры.РеализацияТаблицаДокумента, Реквизиты);
	
	Возврат РеализацияПрослеживаемыхТоваров;
	
КонецФункции

Функция ПодготовитьПараметрыПрослеживаемыхТоваров(ТаблицаТовары, РеализацияТаблицаДокумента, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;

	СписокОбязательныхКолонок = ""
	+ "Номенклатура,"               // <СправочникСсылка.Номенклатура>
	+ "РНПТ,"                       // <СправочникСсылка.НомераГТД>
	+ "Количество,"                 // <Число,15,3> - количество
	+ "СопроводительныйДокумент,"   // <ДокументСсылка.РеализацияТоваровУслуг> - документ реализации
	+ "Контрагент,"                 // <СправочникСсылка.Контрагенты> - Контрагент
	+ "ПорядковыйНомер,"                 // <Число> - НомерСтроки номенклатуры в табличной части документа
	+ "КоличествоПрослеживаемости"; // <Число,26,11> - количество в единицах прослеживаемости
	
	Параметры.Вставить("ПрослеживаемыеТовары", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаТовары, СписокОбязательныхКолонок));
		
	СписокОбязательныхКолонок = ""
	+ "Номенклатура,"// <СправочникСсылка.Номенклатура>
	+ "Количество,"  // <Число,15,3> - количество
	+ "СуммаРуб,"    // <Число,26,11> - Сумма продажи
	+ "СуммаНДСРуб," // <Число,26,11> - Сумма НДС
	+ "НомерСтроки"; // <Число> - Номер строки документа в табличной части
	
	Параметры.Вставить("РеализацияТаблицаДокумента", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		РеализацияТаблицаДокумента, СписокОбязательныхКолонок));
		
	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "Регистратор," // <ДокументСсылка>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "СтранаРегистрации," // <СправочникСсылка.СтраныМира>
	+ "Контрагент"; // <СправочникСсылка.Контрагенты>
	
	Параметры.Вставить("Реквизиты", ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(
		ТаблицаРеквизиты, СписокОбязательныхКолонок));
		
	Возврат Параметры;
	
	
КонецФункции

Процедура РаспределитьСуммуПродажиПоПрослеживаемымТоварам(РеализацияПрослеживаемыхТоваров, РеализацияТаблицаДокумента, Реквизиты)
	
	РеализацияТаблицаДокумента.Свернуть("Номенклатура, НомерСтроки","Количество, СуммаРуб, СуммаНДСРуб");
	РеализацияТаблицаДокумента.Колонки.Добавить("Списано", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3));
	
	ФильтрПоНоменклатуре = Новый Структура("Номенклатура,НомерСтроки");
	
	Для каждого ТекСтрокаРеализацияПрослеживаемыхТоваров Из РеализацияПрослеживаемыхТоваров Цикл
		
		ЗаполнитьЗначенияСвойств(ТекСтрокаРеализацияПрослеживаемыхТоваров, Реквизиты);
		ЗаполнитьЗначенияСвойств(ФильтрПоНоменклатуре, ТекСтрокаРеализацияПрослеживаемыхТоваров, "Номенклатура");
		ФильтрПоНоменклатуре.НомерСтроки = ТекСтрокаРеализацияПрослеживаемыхТоваров.ПорядковыйНомер;
		
		НайденныеСтроки = РеализацияТаблицаДокумента.НайтиСтроки(ФильтрПоНоменклатуре);
		Для каждого ТекущаяСтрока Из НайденныеСтроки Цикл
			
			ОстатокКоличество = ТекущаяСтрока.Количество - ТекущаяСтрока.Списано;
			
			Если ОстатокКоличество = ТекСтрокаРеализацияПрослеживаемыхТоваров.Количество Тогда
				
				ТекСтрокаРеализацияПрослеживаемыхТоваров.Сумма = ТекущаяСтрока.СуммаРуб - ТекущаяСтрока.СуммаНДСРуб;
			Иначе
				
				СуммаБезНДСРуб = ТекущаяСтрока.СуммаРуб - ТекущаяСтрока.СуммаНДСРуб;
				Цена = СуммаБезНДСРуб/ТекущаяСтрока.Количество;
				
				ТекСтрокаРеализацияПрослеживаемыхТоваров.Сумма = ТекущаяСтрока.Количество * Цена;
				
			КонецЕсли;
			
			ТекущаяСтрока.Списано = ТекущаяСтрока.Списано - ТекущаяСтрока.Количество;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#Область ВыбытиеВЕАЭС

Процедура СформироватьДвиженияПрослеживаемыхТоваровВЕАЭС(ПрослеживаемыеТоварыРеализованные, РеализацияТаблицаДокумента, ТаблицаРеквизитов, Движения) Экспорт
	
	РеализацияПрослеживаемыхТоваровВЕАЭС = ПодготовитьТаблицуРеализацияПрослеживаемыхТоваровВЕАЭС(
		ПрослеживаемыеТоварыРеализованные, РеализацияТаблицаДокумента, ТаблицаРеквизитов);
	
	Если НЕ ЗначениеЗаполнено(РеализацияПрослеживаемыхТоваровВЕАЭС) Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из РеализацияПрослеживаемыхТоваровВЕАЭС Цикл
		Запись = Движения.ПрослеживаемыеТоварыОтгруженныеВЕАЭС.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Запись, СтрокаТаблицы);
	КонецЦикла;
	
	Движения.ПрослеживаемыеТоварыОтгруженныеВЕАЭС.Записывать = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РегистрацияПрослеживаемогоТовара

Функция ТекстЗапросаПоОснованию(ДокументОснование, ПараметрыДокументаОснования)
	
	ОбъектМетаданных = ДокументОснование.Метаданные();
	
	ТекстЗапроса = Документы[ОбъектМетаданных.Имя].ТекстЗапросаТаблицаПрослеживаемыхТоваровПоОснованию();
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПоУведомлениямИВычислениюОстатка()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Номенклатура КАК Номенклатура,
	|	СУММА(УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Количество) КАК Количество,
	|	СУММА(УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Сумма) КАК Сумма,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.КодТНВЭД КАК ТНВЭД,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки КАК НомерКорректировки,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка КАК СсылкаНаУведомление
	|ПОМЕСТИТЬ ВТ_ВыписанныеУведомления
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.Товары КАК УведомлениеОбОстаткахПрослеживаемыхТоваровТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК УведомлениеОбОстаткахПрослеживаемыхТоваров
	|		ПО УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Ссылка = УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка
	|ГДЕ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.ПервичныйДокумент = &Основание
	|	И УведомлениеОбОстаткахПрослеживаемыхТоваров.Проведен
	|	И УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка <> &ДокументИсключение
	|	И УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки = 0
	|
	|СГРУППИРОВАТЬ ПО
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.КодТНВЭД,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Номенклатура,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Номенклатура,
	|	СУММА(УведомлениеОВвозеПрослеживаемыхТоваровТовары.Количество),
	|	СУММА(УведомлениеОВвозеПрослеживаемыхТоваровТовары.Сумма),
	|	УведомлениеОВвозеПрослеживаемыхТоваров.КодТНВЭД,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка
	|ИЗ
	|	Документ.УведомлениеОВвозеПрослеживаемыхТоваров.Товары КАК УведомлениеОВвозеПрослеживаемыхТоваровТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОВвозеПрослеживаемыхТоваров КАК УведомлениеОВвозеПрослеживаемыхТоваров
	|		ПО УведомлениеОВвозеПрослеживаемыхТоваровТовары.Ссылка = УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка
	|ГДЕ
	|	УведомлениеОВвозеПрослеживаемыхТоваров.ПервичныйДокумент = &Основание
	|	И УведомлениеОВвозеПрослеживаемыхТоваров.Проведен
	|	И УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка <> &ДокументИсключение
	|
	|СГРУППИРОВАТЬ ПО
	|	УведомлениеОВвозеПрослеживаемыхТоваровТовары.Номенклатура,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.КодТНВЭД,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.НомерКорректировки,
	|	УведомлениеОВвозеПрослеживаемыхТоваров.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Номенклатура,
	|	СУММА(УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.КоличествоПослеИзменения),
	|	СУММА(УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.СуммаПослеИзменения),
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.КодТНВЭДПослеИзменения,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка
	|ИЗ
	|	Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.Товары КАК УведомлениеОбОстаткахПрослеживаемыхТоваровТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров КАК УведомлениеОбОстаткахПрослеживаемыхТоваров
	|		ПО УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Ссылка = УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка
	|ГДЕ
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.ПервичныйДокумент = &Основание
	|	И УведомлениеОбОстаткахПрослеживаемыхТоваров.Проведен
	|	И УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка <> &ДокументИсключение
	|	И УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки > 0
	|	И УведомлениеОбОстаткахПрослеживаемыхТоваров.ПолученоПодтверждениеИзФНС
	|
	|СГРУППИРОВАТЬ ПО
	|	УведомлениеОбОстаткахПрослеживаемыхТоваровТовары.Номенклатура,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.КодТНВЭДПослеИзменения,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.НомерКорректировки,
	|	УведомлениеОбОстаткахПрослеживаемыхТоваров.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваровПоОснованию.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровПоОснованию.Количество КАК Количество,
	|	ТаблицаТоваровПоОснованию.Сумма КАК Сумма,
	|	ТаблицаТоваровПоОснованию.ТНВЭД КАК ТНВЭД,
	|	ТаблицаТоваровПоОснованию.Организация КАК Организация,
	|	ТаблицаТоваровПоОснованию.ВидОперации КАК ВидОперации,
	|	ТаблицаТоваровПоОснованию.ПериодСобытия КАК ПериодСобытия
	|ПОМЕСТИТЬ ВТ_ТаблицаТоваровПоОснованию
	|ИЗ
	|	ВТ_ТоварыПоОснованию КАК ТаблицаТоваровПоОснованию
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТ_ВыписанныеУведомления.СсылкаНаУведомление) КАК СсылкаНаУведомление,
	|	МАКСИМУМ(ВТ_ВыписанныеУведомления.НомерКорректировки) КАК НомерКорректировки,
	|	ВЫБОР
	|		КОГДА ВТ_ВыписанныеУведомления.СсылкаНаУведомление.ДокументУведомлениеОбОстатках = ЗНАЧЕНИЕ(Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ПустаяСсылка)
	|			ТОГДА ВТ_ВыписанныеУведомления.СсылкаНаУведомление
	|		ИНАЧЕ ВТ_ВыписанныеУведомления.СсылкаНаУведомление.ДокументУведомлениеОбОстатках
	|	КОНЕЦ КАК Основание
	|ПОМЕСТИТЬ ПоследниеУведомления
	|ИЗ
	|	ВТ_ВыписанныеУведомления КАК ВТ_ВыписанныеУведомления
	|ГДЕ
	|	ВТ_ВыписанныеУведомления.СсылкаНаУведомление ССЫЛКА Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ВТ_ВыписанныеУведомления.СсылкаНаУведомление.ДокументУведомлениеОбОстатках = ЗНАЧЕНИЕ(Документ.УведомлениеОбОстаткахПрослеживаемыхТоваров.ПустаяСсылка)
	|			ТОГДА ВТ_ВыписанныеУведомления.СсылкаНаУведомление
	|		ИНАЧЕ ВТ_ВыписанныеУведомления.СсылкаНаУведомление.ДокументУведомлениеОбОстатках
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВТ_ВыписанныеУведомления.СсылкаНаУведомление),
	|	МАКСИМУМ(ВТ_ВыписанныеУведомления.НомерКорректировки),
	|	ВТ_ВыписанныеУведомления.СсылкаНаУведомление
	|ИЗ
	|	ВТ_ВыписанныеУведомления КАК ВТ_ВыписанныеУведомления
	|ГДЕ
	|	ВТ_ВыписанныеУведомления.СсылкаНаУведомление ССЫЛКА Документ.УведомлениеОВвозеПрослеживаемыхТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ВыписанныеУведомления.СсылкаНаУведомление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваровПоУведомлениям.Номенклатура КАК Номенклатура,
	|	СУММА(ТаблицаТоваровПоУведомлениям.Количество) КАК Количество,
	|	СУММА(ТаблицаТоваровПоУведомлениям.Сумма) КАК Сумма,
	|	ТаблицаТоваровПоУведомлениям.ТНВЭД КАК ТНВЭД
	|ПОМЕСТИТЬ ВТ_ТаблицаТоваровПоУведомлениям
	|ИЗ
	|	ПоследниеУведомления КАК ПоследниеУведомления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыписанныеУведомления КАК ТаблицаТоваровПоУведомлениям
	|		ПО ПоследниеУведомления.СсылкаНаУведомление = ТаблицаТоваровПоУведомлениям.СсылкаНаУведомление
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваровПоУведомлениям.Номенклатура,
	|	ТаблицаТоваровПоУведомлениям.ТНВЭД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТНВЭД,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваровПоОснованию.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваровПоОснованию.Количество - ЕСТЬNULL(ТаблицаТоваровПоУведомлениям.Количество, 0) < 0
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТоваровПоОснованию.Количество - ЕСТЬNULL(ТаблицаТоваровПоУведомлениям.Количество, 0)
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваровПоОснованию.Количество - ЕСТЬNULL(ТаблицаТоваровПоУведомлениям.Количество, 0) < 0
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТоваровПоОснованию.Сумма - ЕСТЬNULL(ТаблицаТоваровПоУведомлениям.Сумма, 0)
	|	КОНЕЦ КАК Сумма,
	|	ТаблицаТоваровПоОснованию.ТНВЭД КАК ТНВЭД,
	|	ТаблицаТоваровПоОснованию.Организация КАК Организация,
	|	ТаблицаТоваровПоОснованию.ВидОперации КАК ВидОперации,
	|	&Основание КАК Основание,
	|	ТаблицаТоваровПоОснованию.ПериодСобытия КАК ПериодСобытия
	|ИЗ
	|	ВТ_ТаблицаТоваровПоОснованию КАК ТаблицаТоваровПоОснованию
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаблицаТоваровПоУведомлениям КАК ТаблицаТоваровПоУведомлениям
	|		ПО ТаблицаТоваровПоОснованию.ТНВЭД = ТаблицаТоваровПоУведомлениям.ТНВЭД
	|			И ТаблицаТоваровПоОснованию.Номенклатура = ТаблицаТоваровПоУведомлениям.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ТаблицаТоваровТолькоОприходование.Номенклатура,
	|	ВТ_ТаблицаТоваровТолькоОприходование.Количество,
	|	ВТ_ТаблицаТоваровТолькоОприходование.Сумма,
	|	ВТ_ТаблицаТоваровТолькоОприходование.ТНВЭД,
	|	ВТ_ТаблицаТоваровТолькоОприходование.Организация,
	|	ВТ_ТаблицаТоваровТолькоОприходование.ВидОперации,
	|	&Основание,
	|	ВТ_ТаблицаТоваровТолькоОприходование.ПериодСобытия
	|ИЗ
	|	ВТ_ТаблицаТоваровРазмеченный КАК ВТ_ТаблицаТоваровТолькоОприходование
	|ГДЕ
	|	ВТ_ТаблицаТоваровТолькоОприходование.РанееРегистрировалсяВПрослеживаемости
	|	И ВТ_ТаблицаТоваровТолькоОприходование.Количество > ВТ_ТаблицаТоваровТолькоОприходование.КоличествоУчет";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОтключениеФункциональноастиПоОС

// Вызывается при установке отображения страниц в Помощнике получения РНПТ
//
// Параметры:
// 
// ОтображениеСтраниц - ОтображениеСтраницФормы - ссылка на отображение страниц
//
Процедура ОтображениеСтраницФормыПомощникаРНПТ(ОтображениеСтраниц) Экспорт
	
КонецПроцедуры

// Вызывается при открытии Помощника получения РНПТ и при открытии журнала по уведомлениям
//
// Параметры:
//
// Форма - ФормаКлиентскогоПриложения - форма объекта
//
Процедура ИзменитьУсловноеОформление(Форма) Экспорт
	
КонецПроцедуры

// Добавляет список видов уведомлений, что будут отражаться при добавлении нового документа Уведомления об остатках
//
// Возвращаемое значение:
// СписокЗначений - список видов уведомлений
//
Функция СписокВидовУведомленийОбОстатках() Экспорт
	
КонецФункции

// Функция, которая отключает функциональность по прослеживаемым ОС
// в Помощнике получения РНПТ и в журнале уведомлений
//
// Возвращаемое значение:
//  Булево - Истина - функциональность отключить по прослеживаемы ОС, ложь - не отключать
//
Функция ОтключитьФункциональностьПоОС() Экспорт
	Возврат Истина;
КонецФункции

#КонецОбласти
