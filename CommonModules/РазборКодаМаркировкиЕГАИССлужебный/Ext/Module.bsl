
#Область СлужебныйПрограммныйИнтерфейс

#Область НастройкиРазбораКодаМаркировки

Процедура ДополнитьРасширенныеОписанияКодовМаркировки(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля) Экспорт
	
	// Упаковки
	ОписаниеКодаМаркировкиЛогистическойУпаковки(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
	ОписаниеКодаМаркировкиЛогистическойУпаковкиРасширенный(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область НастройкиРазбораКодаМаркировки

#Область ОписаниеКодаМаркировки

Процедура ОписаниеКодаМаркировкиЛогистическойУпаковки(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	// Формат маркировки для паллеты
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("КодФСРАР, ПорядковыйНомер");
	ОписаниеЭлементовКМ.КодФСРАР        = РазборКодаМаркировкиЕГАИСОбщегоНазначения.ОписаниеЭлементаКодаМаркировки("", "КодФСРАР",       12, Алфавит.Цифры);
	ОписаниеЭлементовКМ.ПорядковыйНомер = РазборКодаМаркировкиЕГАИСОбщегоНазначения.ОписаниеЭлементаКодаМаркировки("", "ПорядковыйНомер", 6, Алфавит.Цифры);
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("КодФСРАР + ПорядковыйНомер");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.Code128;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Логистическая;
	
	СоставКодаМаркировки = РазборКодаМаркировкиЕГАИСОбщегоНазначения.НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

Процедура ОписаниеКодаМаркировкиЛогистическойУпаковкиРасширенный(ДанныеОписанийКодаМаркировки, ВидПродукции, ДанныеОбщегоМодуля)
	
	// Формат маркировки для короба
	// http://egais.ru/files/format_tara6.pdf
	
	Алфавит = ДанныеОписанийКодаМаркировки.Алфавит;
	
	ОписаниеЭлементовКМ = Новый Структура("КодФСРАР, ТипЛогистическойЕдиницы, НомерПлощадки, Год, СерийныйНомер");
	ОписаниеЭлементовКМ.КодФСРАР                = РазборКодаМаркировкиЕГАИСОбщегоНазначения.ОписаниеЭлементаКодаМаркировки("", "КодФСРАР",               12, Алфавит.Цифры); // идентификатор организации в ЕГАИС, осуществляющей маркировку групповой тары (FSRAR_ID). (12 знаков).
	ОписаниеЭлементовКМ.ТипЛогистическойЕдиницы = РазборКодаМаркировкиЕГАИСОбщегоНазначения.ОписаниеЭлементаКодаМаркировки("", "ТипЛогистическойЕдиницы", 1, Алфавит.Цифры); // тип логистической единицы (1- короб, 2- паллет, 3-сборный короб, 4-сборный паллет).
	ОписаниеЭлементовКМ.НомерПлощадки           = РазборКодаМаркировкиЕГАИСОбщегоНазначения.ОписаниеЭлементаКодаМаркировки("", "НомерПлощадки",           2, Алфавит.БуквыЦифры); // номер линии розлива/площадки маркировки.
	ОписаниеЭлементовКМ.Год                     = РазборКодаМаркировкиЕГАИСОбщегоНазначения.ОписаниеЭлементаКодаМаркировки("", "Год",                     2, Алфавит.Цифры); // год, в который производится генерация групповой маркировки.
	ОписаниеЭлементовКМ.СерийныйНомер           = РазборКодаМаркировкиЕГАИСОбщегоНазначения.ОписаниеЭлементаКодаМаркировки("", "СерийныйНомер",           9, Алфавит.БуквыЦифры); // логистический идентификатор, счетчик, обнуляемый в начале каждого года.
	
	ШаблоныСтрокой = Новый Массив;
	ШаблоныСтрокой.Добавить("КодФСРАР + ТипЛогистическойЕдиницы + НомерПлощадки + Год + СерийныйНомер");
	
	СписокШаблонов = РазборКодаМаркировкиИССлужебный.ОписанияШаблоновКодаМаркировки(ОписаниеЭлементовКМ, ШаблоныСтрокой);
	
	ТипШтрихкодаИВидУпаковки = РазборКодаМаркировкиИССлужебныйКлиентСервер.ТипШтрихкодаИВидУпаковки();
	ТипШтрихкодаИВидУпаковки.ТипШтрихкода = Перечисления.ТипыШтрихкодов.Code128;
	ТипШтрихкодаИВидУпаковки.ВидУпаковки  = Перечисления.ВидыУпаковокИС.Логистическая;
	
	СоставКодаМаркировки = РазборКодаМаркировкиЕГАИСОбщегоНазначения.НовыйСоставКодаМаркировки(ТипШтрихкодаИВидУпаковки);
	
	// Добавление настроек
	НастройкаОписанияКодаМаркировки = РазборКодаМаркировкиИССлужебный.НастройкиОписанияШаблонаКодаМаркировкиВидаПродукции();
	НастройкаОписанияКодаМаркировки.ВидПродукции             = ВидПродукции;
	НастройкаОписанияКодаМаркировки.ТипШтрихкодаИВидУпаковки = ТипШтрихкодаИВидУпаковки;
	НастройкаОписанияКодаМаркировки.СоставКодаМаркировки     = СоставКодаМаркировки;
	НастройкаОписанияКодаМаркировки.ДанныеОбщегоМодуля       = ДанныеОбщегоМодуля;
	НастройкаОписанияКодаМаркировки.СписокШаблонов           = СписокШаблонов;
	
	ДанныеОписанийКодаМаркировки.ОписанияКодовМаркировки.Добавить(НастройкаОписанияКодаМаркировки);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти