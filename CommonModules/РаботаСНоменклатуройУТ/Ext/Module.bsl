
////////////////////////////////////////////////////////////////////////////////
// Подсистема "Работа с номенклатурой".
// ОбщийМодуль.РаботаСНоменклатуройПереопределяемый.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

//++ Локализация

#Область АвтоподборНоменклатуры

// См. РаботаСНоменклатуройПереопределяемый.ЗаполнитьМассивПолейСобытияИзменениеТекстаРедактирования.
Процедура ЗаполнитьМассивПолейСобытияИзменениеТекстаРедактирования(МассивПолей) Экспорт
	
	МассивПолей.Добавить("Наименование");
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ЗаполнитьМассивПолейСобытияПриИзменении.
Процедура ЗаполнитьМассивПолейСобытияПриИзменении(МассивПолей) Экспорт
	
	МассивПолей.Добавить("Наименование");
	МассивПолей.Добавить("Штрихкод");
	МассивПолей.Добавить("ЕдиницаИзмерения");
	МассивПолей.Добавить("Артикул");
	
КонецПроцедуры

#КонецОбласти

#Область СозданиеВидаНоменклатуры

// См. РаботаСНоменклатуройПереопределяемый.СоздатьВидНоменклатуры.
Процедура СоздатьВидНоменклатуры(ДанныеЗаполнения, ВидНоменклатурыСсылка) Экспорт
	СтавкаНДС = Справочники.СтавкиНДС.ПустаяСсылка();
	ПреобразоватьСтавкуНДССервиса(ДанныеЗаполнения.СтавкаНДС, СтавкаНДС);
	
	ТипНоменклатуры = Перечисления.ТипыНоменклатуры.ПустаяСсылка();
	ПреобразоватьТипНоменклатурыСервиса(ДанныеЗаполнения.Тип, ТипНоменклатуры);
	
	Родитель = ДанныеЗаполнения.РодительИнформационнойБазы;
	
	СтруктураДанных = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ДанныеЗаполнения);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГруппыДоступаНоменклатуры") Тогда
		СтруктураДанных.Вставить("ГруппаДоступа", Константы.ГруппаДоступаНоменклатурыИзСервиса.Получить());
	КонецЕсли;
	
	СтруктураДанных.Вставить("ВариантОформленияПродажи", Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг);
	СтруктураДанных.Вставить("СтавкаНДС", СтавкаНДС);
	СтруктураДанных.Вставить("ТипНоменклатуры", ТипНоменклатуры);
	СтруктураДанных.Вставить("Родитель", Родитель);
	СтруктураДанных.Вставить("ЕдиницаИзмерения", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
	СтруктураДанных.Вставить("ЕдиницаДляОтчетов", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
	СтруктураДанных.Вставить("ИспользоватьХарактеристики", ДанныеЗаполнения.Характеристики.Идентификаторы.Количество() > 0);
	СтруктураДанных.Вставить("ИспользованиеХарактеристик", Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГруппыДоступаНоменклатуры") и 
			НЕ ЗначениеЗаполнено(СтруктураДанных.ГруппаДоступа) Тогда
			ТекстОшибки = НСтр("ru = 'Не заполнена группа доступа для вида номенклатуры.
				|Необходимо в настройках создания номенклатуры выбрать группу доступа по умолчанию.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
			ВызватьИсключение НСтр("ru = 'Ошибка создания вида номенклатуры.'");;
	КонецЕсли;
	
	Справочники.ВидыНоменклатуры.СоздатьВидНоменклатуры(СтруктураДанных, ВидНоменклатурыСсылка);
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПрисвоитьРеквизитыОбъекту.
Процедура ПрисвоитьРеквизитыОбъекту(ВидНоменклатуры, ДополнительныеРеквизиты, ЯвляетсяРеквизитомХарактеристики) Экспорт
	Если ЯвляетсяРеквизитомХарактеристики Тогда
		НаборСвойствСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидНоменклатуры, "НаборСвойствХарактеристик");
	Иначе
		НаборСвойствСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидНоменклатуры, "НаборСвойств");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НаборСвойствСсылка) Тогда
		Возврат;
	КонецЕсли;

	НачатьТранзакцию();
	
	Попытка

		УстановитьИсключительнуюБлокировкуПоСсылке(НаборСвойствСсылка);
		
		НаборСвойствОбъект = НаборСвойствСсылка.ПолучитьОбъект();
		
		Для каждого ДополнительныйРеквизит Из ДополнительныеРеквизиты Цикл
			
			НоваяСтрокаРеквизита = НаборСвойствОбъект.ДополнительныеРеквизиты.Добавить();	
			
			НоваяСтрокаРеквизита.Свойство = ДополнительныйРеквизит;
			
		КонецЦикла;
		
		НаборСвойствОбъект.Записать();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.СоздатьОбновитьЗначениеРеквизита.
Процедура СоздатьОбновитьЗначениеРеквизита(ДополнительныйРеквизит, СтрокаДанных, ЗначениеРеквизитаСсылка) Экспорт
	НачатьТранзакцию();
	
	Попытка
		
		Если ЗначениеЗаполнено(ЗначениеРеквизитаСсылка) Тогда
			
			УстановитьИсключительнуюБлокировкуПоСсылке(ЗначениеРеквизитаСсылка);
			
			ЗначениеОбъект = ЗначениеРеквизитаСсылка.ПолучитьОбъект();
		Иначе		
			ЗначениеВБазе = РаботаСНоменклатурой.ЗначениеПоИдентификатору(ДополнительныйРеквизит, СтрокаДанных.Идентификатор);
			
			Если ЗначениеВБазе <> Неопределено Тогда
				ЗначениеРеквизитаСсылка = ЗначениеВБазе;
				ЗафиксироватьТранзакцию();
				Возврат;
			КонецЕсли;
			
			ЗначениеОбъект = Справочники.ЗначенияСвойствОбъектов.СоздатьЭлемент();
		КонецЕсли;
		
		ЗначениеОбъект.Владелец           = ДополнительныйРеквизит;
		ЗначениеОбъект.Наименование       = СтрокаДанных.Наименование;
		ЗначениеОбъект.ПолноеНаименование = СтрокаДанных.Наименование;
		ЗначениеОбъект.Записать();
		
		ЗначениеРеквизитаСсылка = ЗначениеОбъект.Ссылка;

		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.СоздатьОбновитьДополнительныйРеквизит.
Процедура СоздатьОбновитьДополнительныйРеквизит(ВидНоменклатуры, СтрокаДанных, РеквизитСсылка) Экспорт
	
	НачатьТранзакцию();
	
	Попытка
		
		Если ЗначениеЗаполнено(РеквизитСсылка) Тогда
			
			УстановитьИсключительнуюБлокировкуПоСсылке(РеквизитСсылка);
			РеквизитОбъект = РеквизитСсылка.ПолучитьОбъект();
			
		Иначе
			
			РеквизитВБазе = РаботаСНоменклатурой.РеквизитПоИдентификатору(СтрокаДанных.Идентификатор);
			Если РеквизитВБазе <> Неопределено Тогда
				
				РеквизитСсылка = РеквизитВБазе;
				ЗафиксироватьТранзакцию();
				
				Возврат;
				
			КонецЕсли;
			
			РеквизитОбъект = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
			РеквизитОбъект.ТипЗначения = РаботаСНоменклатурой.ОписаниеТипаНаОснованииТипаСервиса(СтрокаДанных.Тип);
			
		КонецЕсли;
		
		НаборСвойств = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидНоменклатуры, "НаборСвойств");
		НаименованиеНабора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НаборСвойств, "Наименование");
		
		Наименование = СтрШаблон("%1 (%2)",
			СтрокаДанных.Наименование,
			НаименованиеНабора
		);
		
		РеквизитОбъект.НаборСвойств = НаборСвойств;
		РеквизитОбъект.Доступен = Истина;
		РеквизитОбъект.Наименование = Наименование;
		РеквизитОбъект.Заголовок = СтрокаДанных.Наименование;
		
		Имя = "";
		
		ЗаголовокОбъектаЧастями = СтрРазделить(РеквизитОбъект.Заголовок, " ", Ложь);
		Для Каждого ЧастьЗаголовка Из ЗаголовокОбъектаЧастями Цикл
			
			Имя = Имя + ВРег(Лев(ЧастьЗаголовка, 1)) + Сред(ЧастьЗаголовка, 2);
			
		КонецЦикла;
		
		УИД = Новый УникальныйИдентификатор();
		СтрокаУИД = СтрЗаменить(Строка(УИД), "-", "");
		
		РеквизитОбъект.Имя = СтрШаблон("%1_%2",
			Имя,
			СтрокаУИД
		);
		
		РеквизитОбъект.Записать();
		РеквизитСсылка = РеквизитОбъект.Ссылка;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ЗаписатьШтрихкоды.
Процедура ЗаписатьШтрихкоды(ДанныеПоШтрихкодам) Экспорт 
	
	Штрихкоды = НовыеШтрихкоды(ДанныеПоШтрихкодам);
	
	Для каждого ЭлементКоллекции Из Штрихкоды Цикл
				
		МенеджерЗаписи                  = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Штрихкод         = ЭлементКоллекции.Штрихкод;
		МенеджерЗаписи.Номенклатура     = ЭлементКоллекции.Номенклатура;
		МенеджерЗаписи.Характеристика   = ЭлементКоллекции.Характеристика;
		МенеджерЗаписи.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

// Сравнение значений реквизитов вида номенклатуры и категории.
//
// Параметры:
//  ДанныеКатегории       - СтрокаТаблицыЗначений - данные по категории. Описание таблицы значений см. РаботаСНоменклатурой.ДанныеКатегорийСервиса
//  ДанныеВидаНоменклатуры - СтрокаТаблицыЗначений, Структура - данные по виду номенклатуре. См. ПолучитьЗначенияРеквизитовВидовНоменклатуры
//  ТаблицаОтличийРеквизитов - см. РаботаСНоменклатурой.ТаблицаОтличийРеквизитов.
//
Процедура ПолучитьОтличияВидаНоменклатурыИКатегории(ДанныеКатегории, ДанныеВидаНоменклатуры, ТаблицаОтличийРеквизитов) Экспорт
	// Проверка наименования
	
	Если ДанныеВидаНоменклатуры.Наименование <> ДанныеКатегории.Наименование Тогда
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"Наименование", ДанныеКатегории.Наименование, ДанныеВидаНоменклатуры.Наименование);
	КонецЕсли; 
	
	// Проверка ставки НДС
	
	СтавкаНДССервиса = Справочники.СтавкиНДС.ПустаяСсылка();
	ПреобразоватьСтавкуНДССервиса(ДанныеКатегории.СтавкаНДС, СтавкаНДССервиса);
	
	Если ДанныеВидаНоменклатуры.СтавкаНДС <> СтавкаНДССервиса Тогда
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"СтавкаНДС", СтавкаНДССервиса, ДанныеВидаНоменклатуры.СтавкаНДС, НСтр("ru = 'Ставка НДС'"));
	КонецЕсли; 
	
	// Проверка типа номенклатуры
	
	ТипНоменклатурыСервиса = Перечисления.ТипыНоменклатуры.ПустаяСсылка();
	ПреобразоватьТипНоменклатурыСервиса(ДанныеКатегории.Тип, ТипНоменклатурыСервиса);
	
	Если ДанныеВидаНоменклатуры.ТипНоменклатуры <> ТипНоменклатурыСервиса Тогда
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"ТипНоменклатуры", ТипНоменклатурыСервиса, ДанныеВидаНоменклатуры.ТипНоменклатуры, 
			НСтр("ru = 'Тип номенклатуры'"),,НЕ ЗначениеЗаполнено(ДанныеВидаНоменклатуры.ТипНоменклатуры));
	КонецЕсли; 
КонецПроцедуры

// Создание группы видов номенклатуры.
//
// Параметры:
//  ДанныеЗаполнения				 - СтрокаТаблицыЗначений - Колонки: Идентификатор, Наименование, 
//                                                             ИдентификаторРодителя, Уровень, РодительИнформационнойБазы.
//  ГруппаВидовНоменклатурыСсылка	 - СправочникСсылка.ВидыНоменклатуры - ссылка на новую группу.
//
Процедура СоздатьОбновитьГруппуВидовНоменклатуры(ДанныеЗаполнения, ГруппаВидовНоменклатурыСсылка) Экспорт
	НачатьТранзакцию();

	Попытка
				
		Если ЗначениеЗаполнено(ГруппаВидовНоменклатурыСсылка) Тогда
			
			УстановитьИсключительнуюБлокировкуПоСсылке(ГруппаВидовНоменклатурыСсылка);
			
			НоваяГруппа = ГруппаВидовНоменклатурыСсылка.ПолучитьОбъект();
		Иначе
			НоваяГруппа = Справочники.ВидыНоменклатуры.СоздатьГруппу();
		КонецЕсли; 
		
		НоваяГруппа.Наименование = ДанныеЗаполнения.Наименование;
		НоваяГруппа.Родитель     = ДанныеЗаполнения.РодительИнформационнойБазы;
		
		НоваяГруппа.Записать();
		
		ГруппаВидовНоменклатурыСсылка = НоваяГруппа.Ссылка;
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
КонецПроцедуры

#КонецОбласти

#Область СозданиеНоменклатуры

#Область ОсновныеРеквизиты

// См. РаботаСНоменклатуройПереопределяемый.СоздатьНоменклатуру.
Процедура СоздатьНоменклатуру(ДанныеЗаполнения, НоменклатураСсылка) Экспорт
	// Подготовка данных
	
	СтавкаНДС = Справочники.СтавкиНДС.ПустаяСсылка();
	ПреобразоватьСтавкуНДССервиса(ДанныеЗаполнения.СтавкаНДС, СтавкаНДС);
	
	СсылкаНаЕдиницуИзмерения = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	ЕдиницаИзмеренияПоДаннымСервиса(ДанныеЗаполнения.ЕдиницаИзмерения, СсылкаНаЕдиницуИзмерения);
	
	Вес = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	ЕдиницаИзмеренияПоДаннымСервиса(ДанныеЗаполнения.Вес.ЕдиницаИзмерения, Вес);
	
	Объем = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	ЕдиницаИзмеренияПоДаннымСервиса(ДанныеЗаполнения.Объем.ЕдиницаИзмерения, Объем);
	
	Длина = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	ЕдиницаИзмеренияПоДаннымСервиса(ДанныеЗаполнения.Длина.ЕдиницаИзмерения, Длина);
	
	Площадь = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
	ЕдиницаИзмеренияПоДаннымСервиса(ДанныеЗаполнения.Площадь.ЕдиницаИзмерения, Площадь);
	
	// Заполнение объекта
	
	НоменклатураОбъект = Справочники.Номенклатура.СоздатьЭлемент();
	НоменклатураОбъект.Заполнить(Неопределено);
	
	НоменклатураОбъект.УстановитьНовыйКод();
	
	НаименованиеПолное = ?(ЗначениеЗаполнено(ДанныеЗаполнения.НаименованиеДляПечати), 
		ДанныеЗаполнения.НаименованиеДляПечати, 
		ДанныеЗаполнения.Наименование);
		
	НоменклатураОбъект.Наименование = ДанныеЗаполнения.Наименование;
	НоменклатураОбъект.Артикул = ДанныеЗаполнения.Артикул;
	НоменклатураОбъект.НаименованиеПолное = НаименованиеПолное;
	НоменклатураОбъект.ЕдиницаИзмерения = СсылкаНаЕдиницуИзмерения;
	НоменклатураОбъект.СтавкаНДС = СтавкаНДС;
	НоменклатураОбъект.Описание = ДанныеЗаполнения.Описание;
	НоменклатураОбъект.ВидНоменклатуры = ДанныеЗаполнения.ВидНоменклатурыПоУмолчанию.ВидНоменклатуры;
	НоменклатураОбъект.ГруппаДоступа = Константы.ГруппаДоступаНоменклатурыИзСервиса.Получить();
	НоменклатураОбъект.ИспользованиеХарактеристик =
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоменклатураОбъект.ВидНоменклатуры, "ИспользованиеХарактеристик");
	
	Если ЗначениеЗаполнено(Вес) Тогда
		НоменклатураОбъект.ВесЕдиницаИзмерения = Вес;
		НоменклатураОбъект.ВесИспользовать = Истина;
		НоменклатураОбъект.ВесЗнаменатель = ДанныеЗаполнения.Вес.ЗнаменательКратности;
		НоменклатураОбъект.ВесЧислитель = ДанныеЗаполнения.Вес.ЧислительКратности;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объем) Тогда
		НоменклатураОбъект.ОбъемЕдиницаИзмерения = Объем;
		НоменклатураОбъект.ОбъемИспользовать = Истина;
		НоменклатураОбъект.ОбъемЗнаменатель = ДанныеЗаполнения.Объем.ЗнаменательКратности;
		НоменклатураОбъект.ОбъемЧислитель = ДанныеЗаполнения.Объем.ЧислительКратности;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Длина) Тогда
		НоменклатураОбъект.ДлинаЕдиницаИзмерения = Длина;
		НоменклатураОбъект.ДлинаИспользовать = Истина;
		НоменклатураОбъект.ДлинаЗнаменатель = ДанныеЗаполнения.Длина.ЗнаменательКратности;
		НоменклатураОбъект.ДлинаЧислитель = ДанныеЗаполнения.Длина.ЧислительКратности;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Площадь) Тогда
		НоменклатураОбъект.ПлощадьЕдиницаИзмерения = Площадь;
		НоменклатураОбъект.ПлощадьИспользовать = Истина;
		НоменклатураОбъект.ПлощадьЗнаменатель = ДанныеЗаполнения.Площадь.ЗнаменательКратности;
		НоменклатураОбъект.ПлощадьЧислитель = ДанныеЗаполнения.Площадь.ЧислительКратности;
	КонецЕсли;
	
	Для каждого Элемент Из ДанныеЗаполнения.Классификаторы Цикл
		Если СтрНайти(ВРег(Элемент.Наименование), "TNVED") <> 0 Тогда
			НоменклатураОбъект.КодТНВЭД = Справочники.КлассификаторТНВЭД.НайтиСоздатьЭлементКлассификатораТНВЭД(Элемент.Идентификатор);
		ИначеЕсли СтрНайти(ВРег(Элемент.Наименование), "OKPD2") <> 0 Тогда
			НоменклатураОбъект.КодОКПД2 = Справочники.КлассификаторОКПД2.НайтиСоздатьПоКоду(Элемент.Идентификатор);
		КонецЕсли;
	КонецЦикла; 
		
	Если НЕ ЗначениеЗаполнено(НоменклатураОбъект.ВидНоменклатуры) Тогда
		ТекстОшибки = НСтр("ru = 'Для номенклатуры <%1> не удалось подобрать вид номенклатуры.
		|В базе ни один вид номенклатуры не сопоставлен с категорией <%2> из сервиса 1С:Номенклатура.'");
		ТекстОшибки = СтрШаблон(ТекстОшибки, ДанныеЗаполнения.Наименование, ДанныеЗаполнения.Категория.Наименование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
		ВызватьИсключение НСтр("ru = 'Ошибка создания номенклатуры.'");;
	КонецЕсли;
	
	НоменклатураОбъект.Записать();
	
	НоменклатураСсылка = НоменклатураОбъект.Ссылка;
	
	// Сохранение изображения
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения.Изображения) Тогда
		ПрикрепитьИзображения(НоменклатураСсылка, ДанныеЗаполнения.Изображения.ВыгрузитьКолонку("ИзображениеURL"));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область Характеристики

// См. РаботаСНоменклатуройПереопределяемый.СоздатьХарактеристику.
Процедура СоздатьХарактеристику(Характеристика, Владелец, ХарактеристикаСсылка) Экспорт
	НоваяХарактеристика = Справочники.ХарактеристикиНоменклатуры.СоздатьЭлемент();
	
	НоваяХарактеристика.Владелец = Владелец;
	НоваяХарактеристика.Наименование = Характеристика.Наименование;
	
	НоваяХарактеристика.Записать();
	
	ХарактеристикаСсылка = НоваяХарактеристика.Ссылка;
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.СоздатьХарактеристикуСДополнительнымиРеквизитами.
Процедура СоздатьХарактеристикуСДополнительнымиРеквизитами(Характеристика, Владелец, ХарактеристикаСсылка) Экспорт
	ЗначенияДополнительныхРеквизитов = Новый ТаблицаЗначений;
	
	ЗначенияДополнительныхРеквизитов.Колонки.Добавить("Свойство");
	ЗначенияДополнительныхРеквизитов.Колонки.Добавить("Значение");
	
	ХарактеристикаСсылка = Неопределено;
	СоздатьХарактеристику(Характеристика, Владелец, ХарактеристикаСсылка);
	
	ЗаполнитьЗначенияРеквизитовХарактеристики(
		ЗначенияДополнительныхРеквизитов, 
		Характеристика);
			
	Если ЗначенияДополнительныхРеквизитов.Количество() <> 0 Тогда
		УправлениеСвойствами.ЗаписатьСвойстваУОбъекта(ХарактеристикаСсылка, ЗначенияДополнительныхРеквизитов);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ДополнительныеРеквизиты

// См. РаботаСНоменклатуройПереопределяемый.ЗаполнитьЗначенияДополнительныхРеквизитов.
Процедура ЗаполнитьЗначенияДополнительныхРеквизитов(ДанныеЗаполнения, НоменклатураСсылка) Экспорт 
	ЗначенияДополнительныхРеквизитов = Новый ТаблицаЗначений;
	
	ЗначенияДополнительныхРеквизитов.Колонки.Добавить("Свойство");
	ЗначенияДополнительныхРеквизитов.Колонки.Добавить("Значение");
	
	Для каждого ДополнительныйРеквизит Из ДанныеЗаполнения Цикл
		
		Если НЕ ЗначениеЗаполнено(ДополнительныйРеквизит.РеквизитИнформационнойБазы) Тогда
			Продолжить;
		КонецЕсли;	
		
		НоваяСтрока = ЗначенияДополнительныхРеквизитов.Добавить();
		
		НоваяСтрока.Свойство = ДополнительныйРеквизит.РеквизитИнформационнойБазы;
		НоваяСтрока.Значение = РаботаСНоменклатурой.ЗначениеДополнительногоРеквизита(ДополнительныйРеквизит);
		
	КонецЦикла;
	
	Если ЗначенияДополнительныхРеквизитов.Количество() > 0 Тогда
		УправлениеСвойствами.ЗаписатьСвойстваУОбъекта(НоменклатураСсылка, ЗначенияДополнительныхРеквизитов);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

// Сравнение значений реквизитов номенклатуры информационной базы и номенклатуры сервиса.
//
// Параметры:
//  ДанныеНоменклатурыСервиса - СтрокаТаблицыЗначений - Данные по номенклатуре.
//                              Описание таблицы значений в РаботаСНоменклатурой.ДанныеНоменклатурыСервиса.
//  ДанныеНоменклатурыБазы    - СтрокаТаблицыЗначений, Структура - данные по номенклатуре.
//                              См. процедуры ПолучитьЗначенияРеквизитовНоменклатуры,
//                              ПолучитьЗначенияДополнительныхРеквизитовИзФормы.
//  ТаблицаОтличийРеквизитов  - см. РаботаСНоменклатурой.ТаблицаОтличийРеквизитов.
//
Процедура ПолучитьОтличияНоменклатуры(ДанныеНоменклатурыСервиса, ДанныеНоменклатурыБазы, ТаблицаОтличийРеквизитов) Экспорт
	СоответствиеПолей = Новый Структура();
	
	СоответствиеПолей.Вставить("Наименование", "Наименование");
	СоответствиеПолей.Вставить("Артикул",      "Артикул");
	
	Для каждого ЭлементКоллекции Из СоответствиеПолей Цикл
		Если ДанныеНоменклатурыБазы[ЭлементКоллекции.Значение] <> ДанныеНоменклатурыСервиса[ЭлементКоллекции.Ключ] Тогда
			РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
				ЭлементКоллекции.Значение, ДанныеНоменклатурыСервиса[ЭлементКоллекции.Ключ], ДанныеНоменклатурыБазы[ЭлементКоллекции.Значение]);
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеНоменклатурыБазы.НаименованиеПолное <> ДанныеНоменклатурыСервиса.Наименование Тогда
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"НаименованиеПолное", ДанныеНоменклатурыСервиса.Наименование, ДанныеНоменклатурыБазы.НаименованиеПолное, НСтр("ru = 'Полное наименование'"));
	КонецЕсли;
	
	СтавкаНДССервиса = Справочники.СтавкиНДС.ПустаяСсылка();
	ПреобразоватьСтавкуНДССервиса(ДанныеНоменклатурыСервиса.СтавкаНДС, СтавкаНДССервиса);
	
	Если ДанныеНоменклатурыБазы.СтавкаНДС <> СтавкаНДССервиса Тогда
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"СтавкаНДС", СтавкаНДССервиса, ДанныеНоменклатурыБазы.СтавкаНДС, НСтр("ru = 'Ставка НДС'"));		
	КонецЕсли; 
	
	ЕдиницаИзмеренияСервиса = ДанныеНоменклатурыСервиса.ЕдиницаИзмерения;
	
	Если Строка(ДанныеНоменклатурыБазы.ЕдиницаИзмерения) <> ЕдиницаИзмеренияСервиса.Наименование Тогда
		СоответствиеКодовОКЕИ = Справочники.УпаковкиЕдиницыИзмерения.ЗаполнитьЕдиницыИзмеренияИзКлассификатора(ЕдиницаИзмеренияСервиса.ОКЕИ);
		ЕдиницаИзмеренияВБазе = СоответствиеКодовОКЕИ[ЕдиницаИзмеренияСервиса.ОКЕИ];
		
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"ЕдиницаИзмерения",  ЕдиницаИзмеренияВБазе, ДанныеНоменклатурыБазы.ЕдиницаИзмерения, НСтр("ru = 'Единица измерения'"), ЕдиницаИзмеренияСервиса.Наименование);
	КонецЕсли;
	
	Если ДанныеНоменклатурыСервиса.Классификаторы.Количество() > 0 Тогда
		Для каждого Элемент Из ДанныеНоменклатурыСервиса.Классификаторы Цикл
			КодТНВЭД = ДанныеНоменклатурыБазы.КодТНВЭД;
			КодОКПД2 = ДанныеНоменклатурыБазы.КодОКПД2;
			Если СтрНайти(ВРег(Элемент.Наименование), "TNVED") <> 0 и Строка(КодТНВЭД) <> Элемент.Идентификатор Тогда
				КодТНВЭДСервис = Справочники.КлассификаторТНВЭД.НайтиСоздатьЭлементКлассификатораТНВЭД(Элемент.Идентификатор);
				РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, "КодТНВЭД", КодТНВЭДСервис, КодТНВЭД, НСтр("ru = 'ТНВЭД'"));
				
			ИначеЕсли СтрНайти(ВРег(Элемент.Наименование), "OKPD2") <> 0 и Строка(КодОКПД2) <> Элемент.Идентификатор Тогда
				КодОКПД2Сервис = Справочники.КлассификаторОКПД2.НайтиСоздатьПоКоду(Элемент.Идентификатор);		
				РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, "КодОКПД2", КодОКПД2Сервис, КодОКПД2, НСтр("ru = 'ОКПД2'"));
				
			КонецЕсли;
			
		КонецЦикла; 

	КонецЕсли;
	
	Если Строка(ДанныеНоменклатурыБазы.ВесЕдиницаИзмерения) <> ДанныеНоменклатурыСервиса.Вес.ЕдиницаИзмерения.Наименование Тогда
		
		СоответствиеКодовОКЕИ = Справочники.УпаковкиЕдиницыИзмерения.ЗаполнитьЕдиницыИзмеренияИзКлассификатора(ДанныеНоменклатурыСервиса.Вес.ЕдиницаИзмерения.ОКЕИ);
		ЕдиницаИзмеренияВБазе = СоответствиеКодовОКЕИ[ДанныеНоменклатурыСервиса.Вес.ЕдиницаИзмерения.ОКЕИ];
		
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"ВесЕдиницаИзмерения", ЕдиницаИзмеренияВБазе, ДанныеНоменклатурыБазы.ВесЕдиницаИзмерения, НСтр("ru = 'Единица измерения веса'"));
	КонецЕсли;
	
	Если ДанныеНоменклатурыБазы.ВесЗнаменатель <> ДанныеНоменклатурыСервиса.Вес.ЗнаменательКратности Тогда
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"ВесЗнаменатель", ДанныеНоменклатурыСервиса.Вес.ЗнаменательКратности, ДанныеНоменклатурыБазы.ВесЗнаменатель, НСтр("ru = 'Вес (знаменатель)'"));
	КонецЕсли;
	
	Если ДанныеНоменклатурыБазы.ВесЧислитель <> ДанныеНоменклатурыСервиса.Вес.ЧислительКратности Тогда
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"ВесЧислитель", ДанныеНоменклатурыСервиса.Вес.ЧислительКратности, ДанныеНоменклатурыБазы.ВесЧислитель, НСтр("ru = 'Вес (числитель)'"));
	КонецЕсли;
	
	Если Строка(ДанныеНоменклатурыБазы.ОбъемЕдиницаИзмерения) <> ДанныеНоменклатурыСервиса.Объем.ЕдиницаИзмерения.Наименование Тогда
		
		СоответствиеКодовОКЕИ = Справочники.УпаковкиЕдиницыИзмерения.ЗаполнитьЕдиницыИзмеренияИзКлассификатора(ДанныеНоменклатурыСервиса.Объем.ЕдиницаИзмерения.ОКЕИ);
		ЕдиницаИзмеренияВБазе = СоответствиеКодовОКЕИ[ДанныеНоменклатурыСервиса.Объем.ЕдиницаИзмерения.ОКЕИ];
		
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"ОбъемЕдиницаИзмерения", ЕдиницаИзмеренияВБазе, ДанныеНоменклатурыБазы.ОбъемЕдиницаИзмерения, НСтр("ru = 'Единица измерения объема'"));
	КонецЕсли;
	
	Если ДанныеНоменклатурыБазы.ОбъемЗнаменатель <> ДанныеНоменклатурыСервиса.Объем.ЗнаменательКратности Тогда
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"ОбъемЗнаменатель", ДанныеНоменклатурыСервиса.Объем.ЗнаменательКратности, ДанныеНоменклатурыБазы.ОбъемЗнаменатель, НСтр("ru = 'Объем (знаменатель)'"));
	КонецЕсли;
	
	Если ДанныеНоменклатурыБазы.ОбъемЧислитель <> ДанныеНоменклатурыСервиса.Объем.ЧислительКратности Тогда
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"ОбъемЧислитель", ДанныеНоменклатурыСервиса.Объем.ЧислительКратности, ДанныеНоменклатурыБазы.ОбъемЧислитель, НСтр("ru = 'Объем (числитель)'"));
	КонецЕсли;
	
	Если Строка(ДанныеНоменклатурыБазы.ДлинаЕдиницаИзмерения) <> ДанныеНоменклатурыСервиса.Длина.ЕдиницаИзмерения.Наименование Тогда
		
		СоответствиеКодовОКЕИ = Справочники.УпаковкиЕдиницыИзмерения.ЗаполнитьЕдиницыИзмеренияИзКлассификатора(ДанныеНоменклатурыСервиса.Длина.ЕдиницаИзмерения.ОКЕИ);
		ЕдиницаИзмеренияВБазе = СоответствиеКодовОКЕИ[ДанныеНоменклатурыСервиса.Длина.ЕдиницаИзмерения.ОКЕИ];
		
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"ДлинаЕдиницаИзмерения", ЕдиницаИзмеренияВБазе, ДанныеНоменклатурыБазы.ДлинаЕдиницаИзмерения, НСтр("ru = 'Единица измерения длины'"));
	КонецЕсли;
	
	Если ДанныеНоменклатурыБазы.ДлинаЗнаменатель <> ДанныеНоменклатурыСервиса.Длина.ЗнаменательКратности Тогда
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"ДлинаЗнаменатель", ДанныеНоменклатурыСервиса.Длина.ЗнаменательКратности, ДанныеНоменклатурыБазы.ДлинаЗнаменатель, НСтр("ru = 'Длина (знаменатель)'"));
	КонецЕсли;
	
	Если ДанныеНоменклатурыБазы.ДлинаЧислитель <> ДанныеНоменклатурыСервиса.Длина.ЧислительКратности Тогда
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"ДлинаЧислитель", ДанныеНоменклатурыСервиса.Длина.ЧислительКратности, ДанныеНоменклатурыБазы.ДлинаЧислитель, НСтр("ru = 'Длина (числитель)'"));
	КонецЕсли;
	
	Если Строка(ДанныеНоменклатурыБазы.ПлощадьЕдиницаИзмерения) <> ДанныеНоменклатурыСервиса.Площадь.ЕдиницаИзмерения.Наименование Тогда
		
		СоответствиеКодовОКЕИ = Справочники.УпаковкиЕдиницыИзмерения.ЗаполнитьЕдиницыИзмеренияИзКлассификатора(ДанныеНоменклатурыСервиса.Площадь.ЕдиницаИзмерения.ОКЕИ);
		ЕдиницаИзмеренияВБазе = СоответствиеКодовОКЕИ[ДанныеНоменклатурыСервиса.Площадь.ЕдиницаИзмерения.ОКЕИ];
		
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"ПлощадьЕдиницаИзмерения", ЕдиницаИзмеренияВБазе, ДанныеНоменклатурыБазы.ПлощадьЕдиницаИзмерения, НСтр("ru = 'Единица измерения площади'"));
	КонецЕсли;
	
	Если ДанныеНоменклатурыБазы.ПлощадьЗнаменатель <> ДанныеНоменклатурыСервиса.Площадь.ЗнаменательКратности Тогда
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"ПлощадьЗнаменатель", ДанныеНоменклатурыСервиса.Площадь.ЗнаменательКратности, ДанныеНоменклатурыБазы.ПлощадьЗнаменатель, НСтр("ru = 'Площадь (знаменатель)'"));
	КонецЕсли;
	
	Если ДанныеНоменклатурыБазы.ПлощадьЧислитель <> ДанныеНоменклатурыСервиса.Площадь.ЧислительКратности Тогда
		РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
			"ПлощадьЧислитель", ДанныеНоменклатурыСервиса.Площадь.ЧислительКратности, ДанныеНоменклатурыБазы.ПлощадьЧислитель, НСтр("ru = 'Площадь (числитель)'"));
	КонецЕсли;
	
	Если ДанныеНоменклатурыСервиса.ШтрихКоды.Количество() > 0 Тогда
		МассивШтрихкодов = ДанныеНоменклатурыБазы.Штрихкоды;		
		Для Каждого Элемент Из ДанныеНоменклатурыСервиса.ШтрихКоды Цикл
			Если МассивШтрихкодов.Найти(Элемент) = Неопределено Тогда
				РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, "Штрихкод", Элемент, "", НСтр("ru = 'Штрихкод'"));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеНоменклатурыСервиса.Производитель) Тогда 
		Если ДанныеНоменклатурыБазы.Производитель.Наименование <> ДанныеНоменклатурыСервиса.Производитель.Наименование Тогда
			РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
				"Производитель", ДанныеНоменклатурыСервиса.Производитель.Наименование, ДанныеНоменклатурыБазы.Производитель.Наименование, НСтр("ru = 'Производитель'"));
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеНоменклатурыСервиса.Бренд) Тогда	
		ИспользоватьТоварныеКатегории = ПолучитьФункциональнуюОпцию("ИспользоватьТоварныеКатегории");
		Если ДанныеНоменклатурыБазы.Марка.Наименование <> ДанныеНоменклатурыСервиса.Бренд.Наименование И ИспользоватьТоварныеКатегории Тогда
			РаботаСНоменклатурой.ДобавитьСтрокуВТаблицуОтличий(ТаблицаОтличийРеквизитов, 
				"Бренд", ДанныеНоменклатурыСервиса.Бренд.Наименование, ДанныеНоменклатурыБазы.Марка.Наименование, НСтр("ru = 'Бренд'"));
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.СохранитьИзображенияНоменклатуры.
Процедура СохранитьИзображенияНоменклатуры(НоменклатураСсылка, Изображения) Экспорт
	Если ЗначениеЗаполнено(Изображения) Тогда
		ПрикрепитьИзображения(НоменклатураСсылка, Изображения.ВыгрузитьКолонку("ИзображениеURL"));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

//-- Локализация

#Область ПолучениеДанныхИнформационнойБазы

//++ Локализация

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьШтрихкоды.
Процедура ПолучитьШтрихкоды(НоменклатураИХарактеристики, ДанныеПоШтрихкодам) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	НоменклатураИХарактеристикиСсылки.Номенклатура КАК Номенклатура,
	|	НоменклатураИХарактеристикиСсылки.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ НоменклатураИХарактеристики
	|ИЗ
	|	&НоменклатураИХарактеристики КАК НоменклатураИХарактеристикиСсылки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Штрихкоды.Штрихкод, """") КАК Штрихкод,
	|	НоменклатураИХарактеристики.Номенклатура КАК Номенклатура,
	|	НоменклатураИХарактеристики.Характеристика КАК Характеристика
	|ИЗ
	|	НоменклатураИХарактеристики КАК НоменклатураИХарактеристики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|		ПО НоменклатураИХарактеристики.Номенклатура = Штрихкоды.Номенклатура
	|			И НоменклатураИХарактеристики.Характеристика = Штрихкоды.Характеристика
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика";
	
	Запрос.УстановитьПараметр("НоменклатураИХарактеристики", НоменклатураИХарактеристики);
	
	ДанныеПоШтрихкодам = Запрос.Выполнить().Выгрузить();
		
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ТекстЗапросаНоменклатурыИХарактеристик.
Процедура ТекстЗапросаНоменклатурыИХарактеристик(ТекстЗапроса) Экспорт
	
	ТекстЗапроса =
	
	"ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК Характеристика
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО СправочникНоменклатура.ВидНоменклатуры = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	НЕ СправочникНоменклатура.ЭтоГруппа
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка,
	|	ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО СправочникНоменклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	НЕ СправочникНоменклатура.ЭтоГруппа";
		
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьВидыНоменклатурыПоНоменклатуре.
Процедура ПолучитьВидыНоменклатурыПоНоменклатуре(Номенклатура, ВидыНоменклатуры) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В (&Номенклатура)";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	ВидыНоменклатуры = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьКоличествоХарактеристик.
Процедура ПолучитьКоличествоХарактеристик(Номенклатура, Результат) Экспорт
	ВидНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ВидНоменклатуры");
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ВидНоменклатуры, "ИспользованиеХарактеристик, ИспользоватьХарактеристики");	

	Если Не ЗначенияРеквизитов.ИспользоватьХарактеристики Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначенияРеквизитов.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры Тогда
		Владелец = Номенклатура;
	Иначе
		Владелец = ВидНоменклатуры;	
	КонецЕсли;
		
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ЕСТЬNULL(КОЛИЧЕСТВО(ХарактеристикиНоменклатуры.Ссылка), 0) КАК КоличествоХарактеристик
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Владелец);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Результат = Выборка.КоличествоХарактеристик;
	Иначе
		Результат = 0;	
	КонецЕсли;
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ТекстЗапросаХарактеристикПоВладельцу.
Процедура ТекстЗапросаХарактеристикПоВладельцу(ТекстЗапроса) Экспорт
	
	ТекстЗапроса = 
	
	"ВЫБРАТЬ
	|	Характеристики.Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК Характеристики
	|ГДЕ
	|	Характеристики.Владелец = &Владелец";
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьВариантИспользованияХарактеристик.
Процедура ПолучитьВариантИспользованияХарактеристик(ВидНоменклатуры, Результат) Экспорт
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ВидНоменклатуры, "ИспользованиеХарактеристик, ИспользоватьХарактеристики");	
	
	Если ЗначенияРеквизитов.ИспользоватьХарактеристики 
		И ЗначенияРеквизитов.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры Тогда
		
		Результат = "Индивидуальные";
		
	ИначеЕсли ЗначенияРеквизитов.ИспользоватьХарактеристики 
		И (ЗначенияРеквизитов.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры
		   ИЛИ ЗначенияРеквизитов.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры) Тогда
		
		Результат = "Общие";
		
	ИначеЕсли (Не ЗначенияРеквизитов.ИспользоватьХарактеристики) ИЛИ (ЗначенияРеквизитов.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать) Тогда
		
		Результат = "НеВедутся";
		
	КонецЕсли;	
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьДополнительныеРеквизитыВидаНоменклатуры.
Процедура ПолучитьДополнительныеРеквизитыВидаНоменклатуры(ВидНоменклатуры, ТаблицаРеквизитов) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ДополнительныеРеквизиты.Свойство КАК РеквизитВидаНоменклатуры,
	|	ЛОЖЬ КАК ЯвляетсяХарактеристикой,
	|	ДополнительныеРеквизиты.Свойство.Заголовок КАК РеквизитВидаНоменклатурыПредставление
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|ГДЕ
	|	ДополнительныеРеквизиты.Ссылка В
	|			(ВЫБРАТЬ
	|				ВидыНоменклатуры.НаборСвойств КАК НаборСвойств
	|			ИЗ
	|				Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|			ГДЕ
	|				ВидыНоменклатуры.Ссылка = &ВидНоменклатуры)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДополнительныеРеквизиты.Свойство,
	|	ИСТИНА,
	|	ДополнительныеРеквизиты.Свойство.Заголовок
	|ИЗ
	|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДополнительныеРеквизиты
	|ГДЕ
	|	ДополнительныеРеквизиты.Ссылка В
	|			(ВЫБРАТЬ
	|				ВидыНоменклатуры.НаборСвойствХарактеристик КАК НаборСвойств
	|			ИЗ
	|				Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|			ГДЕ
	|				ВидыНоменклатуры.Ссылка = &ВидНоменклатуры)";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	
	ТаблицаРеквизитов = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

//-- Локализация

// Процедура, вызываемая из обработчика события ПриСозданииНаСервере формы ПоискНоменклатурыПоШтрихкоду.
//
// Параметры:
//  Форма  - ФормаКлиентскогоПриложения - форма ПоискНоменклатурыПоШтрихкоду.
//
Процедура ПоискНоменклатурыПоШтрихкодуПриСозданииНаСервере(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	
	// Связь характеристики и номенклатуры
	
	СвязиПараметровВыбора = Новый Массив();
	СвязиПараметровВыбора.Добавить(
		Новый СвязьПараметраВыбора("Номенклатура", 
			"Элементы.ШтрихкодыНоменклатуры.ТекущиеДанные.Номенклатура", РежимИзмененияСвязанногоЗначения.НеИзменять));
	
	Элементы.ШтрихкодыНоменклатурыХарактеристика.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметровВыбора);
		
	// Добавление реквизитов
	
	МассивДобавляемыхРеквизитов = Новый Массив;
	//++ Локализация
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("АлкогольнаяПродукция", Новый ОписаниеТипов("СправочникСсылка.КлассификаторАлкогольнойПродукцииЕГАИС"), "ШтрихкодыНоменклатуры"));
	//-- Локализация
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ЕстьАлкогольнаяПродукция", Новый ОписаниеТипов("Булево")));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ИспользоватьПодключаемоеОборудование", Новый ОписаниеТипов("Булево")));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("ПоддерживаемыеТипыПодключаемогоОборудования", Новый ОписаниеТипов("Строка")));
	МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Упаковка", Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"), "ШтрихкодыНоменклатуры"));
	
	Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	
	// Добавление элементов
	
	//++ Локализация
	НовыйЭлемент             = Форма.Элементы.Вставить("АлкогольнаяПродукция", Тип("ПолеФормы"), Элементы.ШтрихкодыНоменклатуры, Элементы.ШтрихкодыНоменклатурыНоменклатураСервиса);
	НовыйЭлемент.Вид         = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = "ШтрихкодыНоменклатуры.АлкогольнаяПродукция";
	НовыйЭлемент.Заголовок   = НСтр("ru = 'Алкогольная продукция'");
	НовыйЭлемент.Видимость   = Ложь;
	//-- Локализация
	НовыйЭлемент             = Форма.Элементы.Вставить("ГруппаУпаковкаЕдиницаИзмерения", Тип("ГруппаФормы"), Элементы.ШтрихкодыНоменклатуры, Элементы.ШтрихкодыНоменклатурыКоличество);
	НовыйЭлемент.Вид         = ВидГруппыФормы.ГруппаКолонок;
	НовыйЭлемент.Заголовок   = НСтр("ru = 'Упаковка, единица измерения'");
	НовыйЭлемент.Группировка = ГруппировкаКолонок.ВЯчейке;
	НовыйЭлемент.Видимость   = Истина;
	
	НовыйЭлемент            	  		= Форма.Элементы.Вставить("Упаковка", Тип("ПолеФормы"), Элементы.ГруппаУпаковкаЕдиницаИзмерения);
	НовыйЭлемент.Вид         	  		= ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ОтображатьВШапке 		= Ложь;
	НовыйЭлемент.ПутьКДанным 	  		= "ШтрихкодыНоменклатуры.Упаковка";
	НовыйЭлемент.СвязиПараметровВыбора  = Новый ФиксированныйМассив(СвязиПараметровВыбора);
	НовыйЭлемент.Видимость   	  		= Истина;
	
	Элемент = Форма.Элементы.Найти("ШтрихкодыНоменклатурыЕдиницаИзмерения");
	Элемент.ОтображатьВШапке 			= Ложь;
	Элемент.Видимость 					= Ложь;
	Форма.Элементы.Переместить(Элемент, Элементы.ГруппаУпаковкаЕдиницаИзмерения);	
	
	НовыйЭлемент            	  		= Форма.Элементы.Вставить("ЕдиницаИзмерения", Тип("ПолеФормы"), Элементы.ГруппаУпаковкаЕдиницаИзмерения);
	НовыйЭлемент.Вид         	  		= ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.Заголовок 				= НСтр("ru = 'Ед. изм.'");
	НовыйЭлемент.ПутьКДанным 	  		= "ШтрихкодыНоменклатуры.Номенклатура.ЕдиницаИзмерения";
	НовыйЭлемент.Видимость   	  		= Истина;
	//++ Локализация

	// Настройка видимости колонки алкогольной продукции
	
	ДанныеСтроки = Новый Структура;
	ДанныеСтроки.Вставить("АлкогольнаяПродукция", Справочники.КлассификаторАлкогольнойПродукцииЕГАИС.ПустаяСсылка());
	
	Для каждого ЭлементКоллекции Из Форма.Параметры.НеизвестныеШтрихкоды Цикл
		
		ЗаполнитьЗначенияСвойств(ДанныеСтроки, ЭлементКоллекции);
		Если ЗначениеЗаполнено(ДанныеСтроки.АлкогольнаяПродукция) Тогда
			Форма.ЕстьАлкогольнаяПродукция = Истина;
			НовыйЭлемент.Видимость = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	//-- Локализация
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПоискНоменклатурыПоШтрихкодуОбработкаПроверкиЗаполнения.
Процедура ПоискНоменклатурыПоШтрихкодуОбработкаПроверкиЗаполнения(Форма, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	ШтрихкодыНоменклатуры = Форма.ШтрихкодыНоменклатуры;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ШтрихкодыНоменклатуры.Штрихкод                      КАК Штрихкод,
	|	ШтрихкодыНоменклатуры.Номенклатура                  КАК Номенклатура,
	|	ШтрихкодыНоменклатуры.Характеристика                КАК Характеристика,
	|	ШтрихкодыНоменклатуры.Упаковка                      КАК ЕдиницаИзмерения,
	|	ШтрихкодыНоменклатуры.Номенклатура.Наименование     КАК НоменклатураПредставление,
	|	ШтрихкодыНоменклатуры.Характеристика.Наименование   КАК ХарактеристикаПредставление,
	|	ШтрихкодыНоменклатуры.Упаковка.Наименование         КАК ЕдиницаИзмеренияПредставление
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод В(&Штрихкоды)";
	
	Запрос.УстановитьПараметр("Штрихкоды", ШтрихкодыНоменклатуры.Выгрузить(Новый Структура("Зарегистрирован", Ложь),"Штрихкод").ВыгрузитьКолонку("Штрихкод"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда // Штрихкод уже записан в БД
		
		СтрокаТЧ = ШтрихкодыНоменклатуры.НайтиСтроки(Новый Структура("Штрихкод", Выборка.Штрихкод))[0];
		
		ОписаниеОшибки = НСтр("ru='Такой штрихкод уже назначен для номенклатуры %Номенклатура%'");
		ОписаниеОшибки = СтрЗаменить(ОписаниеОшибки, "%Номенклатура%", """" + Выборка.НоменклатураПредставление + """"
			+ ?(ЗначениеЗаполнено(Выборка.Характеристика), " " + НСтр("ru='с характеристикой'") + " """ + Выборка.ХарактеристикаПредставление + """", "")
			+ ?(ЗначениеЗаполнено(Выборка.ЕдиницаИзмерения), " """ + НСтр("ru='с единицей измерения'") + " " + Выборка.ЕдиницаИзмеренияПредставление + """", ""));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки,,"ШтрихкодыНоменклатуры["+ШтрихкодыНоменклатуры.Индекс(СтрокаТЧ)+"].Штрихкод",,Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ЗарегистрироватьШтрихкоды.
Процедура ЗарегистрироватьШтрихкоды(ШтрихкодыНоменклатуры) Экспорт
	
	НачатьТранзакцию();
	
	Попытка
		
		Блокировка = Новый БлокировкаДанных();
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ШтрихкодыНоменклатуры");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		
		Блокировка.Заблокировать();
		
		Для Каждого СтрокаШтрихкода Из ШтрихкодыНоменклатуры Цикл
					
			МенеджерЗаписи                  = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Штрихкод         = СтрокаШтрихкода.Штрихкод;
			МенеджерЗаписи.Номенклатура     = СтрокаШтрихкода.Номенклатура;
			МенеджерЗаписи.Характеристика   = СтрокаШтрихкода.Характеристика;
			МенеджерЗаписи.Упаковка 		= СтрокаШтрихкода.Упаковка;
			МенеджерЗаписи.Записать();
			
		КонецЦикла;
				
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
		
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПоискНоменклатурыПоШтрихкодуПослеЗагрузкиНоменклатуры.
Процедура ПоискНоменклатурыПоШтрихкодуПослеЗагрузкиНоменклатуры(СтрокаТаблицыШтрихкодов, НоменклатураСсылка) Экспорт
		
	СтрокаТаблицыШтрихкодов.Упаковка 
		= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоменклатураСсылка, "ЕдиницаИзмерения");
	
КонецПроцедуры

//++ Локализация

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьЗначенияРеквизитовВидаНоменклатурыИзФормы.
Процедура ПолучитьЗначенияРеквизитовВидаНоменклатурыИзФормы(Форма, ЗначенияРеквизитов) Экспорт
	
	ЗначенияРеквизитов.Вставить("Наименование");
	ЗначенияРеквизитов.Вставить("ТипНоменклатуры");
	ЗначенияРеквизитов.Вставить("СтавкаНДС");
	
	Для каждого ЭлементКоллекции Из ЗначенияРеквизитов Цикл
		ЗначенияРеквизитов[ЭлементКоллекции.Ключ] = Форма.Объект[ЭлементКоллекции.Ключ];
	КонецЦикла;
		
КонецПроцедуры

//-- Локализация

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьНоменклатуруПоШтрихкодам.
Процедура ПолучитьНоменклатуруПоШтрихкодам(Штрихкоды, ДанныеПоШтрихкодам) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Штрихкоды.Штрихкод КАК Штрихкод,
	|	Штрихкоды.Номенклатура КАК Номенклатура,
	|	Штрихкоды.Упаковка КАК ЕдиницаИзмерения,
	|	Штрихкоды.Характеристика КАК Характеристика
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|ГДЕ
	|	Штрихкоды.Штрихкод В(&ШтрихКоды)";
	
	Запрос.УстановитьПараметр("ШтрихКоды", ШтрихКоды);
	
	ДанныеПоШтрихкодам = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

//++ Локализация

Функция ПолучитьШтрихкодыПоНоменклатуре(Номенклатура, Упаковка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Номенклатура = &Номенклатура
	|	И ШтрихкодыНоменклатуры.Упаковка = &Упаковка
	|";

	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Упаковка", Упаковка);

	Штрихкоды = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Штрихкод");
	
	ВозвращаемоеЗначение = Новый Массив;
	Для Каждого ЭлементМассива Из Штрихкоды Цикл
		ВозвращаемоеЗначение.Добавить(РегистрыСведений.ШтрихкодыНоменклатуры.ПодготовитьШтрихкод(ЭлементМассива));
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// См. РаботаСНоменклатуройПереопределяемый.ЗаполнитьТаблицуХарактеристикПоВидуНоменклатуры.
Процедура ЗаполнитьТаблицуХарактеристикПоВидуНоменклатуры(ВидНоменклатуры, ЗначенияХарактеристикТекущейБазы) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХарактеристикиНоменклатурыДополнительныеРеквизиты.Ссылка КАК ХарактеристикаБазы,
	|	ХарактеристикиНоменклатурыДополнительныеРеквизиты.Свойство КАК Свойство,
	|	ХарактеристикиНоменклатурыДополнительныеРеквизиты.Значение КАК Значение
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры.ДополнительныеРеквизиты КАК ХарактеристикиНоменклатурыДополнительныеРеквизиты
	|ГДЕ
	|	ХарактеристикиНоменклатурыДополнительныеРеквизиты.Ссылка.Владелец = &ВидНоменклатуры
	|	И НЕ ХарактеристикиНоменклатурыДополнительныеРеквизиты.Ссылка.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	
	ЗначенияХарактеристикТекущейБазы = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьЗначенияРеквизитовВидовНоменклатуры.
Процедура ПолучитьЗначенияРеквизитовВидовНоменклатуры(Знач ВидыНоменклатуры, Результат) Экспорт
	
	Если ТипЗнч(ВидыНоменклатуры) <> Тип("Массив") Тогда
		ВидыНоменклатуры = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ВидыНоменклатуры);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры,
	|	ВидыНоменклатуры.Наименование КАК Наименование,
	|	ВидыНоменклатуры.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ВидыНоменклатуры.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	ВидыНоменклатуры.Ссылка В(&ВидыНоменклатуры)";
	
	Запрос.УстановитьПараметр("ВидыНоменклатуры", ВидыНоменклатуры);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьЗначенияРеквизитовНоменклатуры.
Процедура ПолучитьЗначенияРеквизитовНоменклатуры(Знач Номенклатура, Результат) Экспорт

	Если ТипЗнч(Номенклатура) <> Тип("Массив") Тогда
		Номенклатура = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Номенклатура);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Номенклатура.Артикул КАК Артикул,
	|	Номенклатура.Наименование КАК Наименование,
	|	Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Номенклатура.Ссылка КАК Номенклатура,
	|	Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	|	Номенклатура.Описание КАК Описание,
	|	Номенклатура.НаименованиеПолное КАК НаименованиеПолное,
	|	Номенклатура.КодТНВЭД КАК КодТНВЭД,
	|	Номенклатура.КодОКПД2 КАК КодОКПД2,
	|	Номенклатура.ВесЕдиницаИзмерения КАК ВесЕдиницаИзмерения,
	|	Номенклатура.ВесЗнаменатель КАК ВесЗнаменатель,
	|	Номенклатура.ВесИспользовать КАК ВесИспользовать,
	|	Номенклатура.ВесЧислитель КАК ВесЧислитель,
	|	Номенклатура.ОбъемЕдиницаИзмерения КАК ОбъемЕдиницаИзмерения,
	|	Номенклатура.ОбъемЗнаменатель КАК ОбъемЗнаменатель,
	|	Номенклатура.ОбъемИспользовать КАК ОбъемИспользовать,
	|	Номенклатура.ОбъемЧислитель КАК ОбъемЧислитель,
	|	Номенклатура.ДлинаЕдиницаИзмерения КАК ДлинаЕдиницаИзмерения,
	|	Номенклатура.ДлинаЗнаменатель КАК ДлинаЗнаменатель,
	|	Номенклатура.ДлинаИспользовать КАК ДлинаИспользовать,
	|	Номенклатура.ДлинаЧислитель КАК ДлинаЧислитель,
	|	Номенклатура.ПлощадьЕдиницаИзмерения КАК ПлощадьЕдиницаИзмерения,
	|	Номенклатура.ПлощадьЗнаменатель КАК ПлощадьЗнаменатель,
	|	Номенклатура.ПлощадьИспользовать КАК ПлощадьИспользовать,
	|	Номенклатура.ПлощадьЧислитель КАК ПлощадьЧислитель,
	|	Номенклатура.Марка КАК Марка,
	|	Номенклатура.Производитель КАК Производитель,
	|	Номенклатура.СтавкаНДС КАК СтавкаНДС
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В(&Номенклатура)";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Результат.Колонки.Добавить("Штрихкоды");
	Для каждого Элемент Из Результат Цикл
	    Элемент.Штрихкоды = ПолучитьШтрихкодыПоНоменклатуре(Элемент.Номенклатура, Элемент.ЕдиницаИзмерения);
	КонецЦикла;    
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьВидНоменклатуры.
Процедура ПолучитьВидНоменклатуры(НоменклатураСсылка, ВидНоменклатуры) Экспорт
	
	ВидНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НоменклатураСсылка, "ВидНоменклатуры");
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьВидНоменклатурыИзФормы.
Процедура ПолучитьВидНоменклатурыИзФормы(Форма, ВидНоменклатуры) Экспорт
	
	ВидНоменклатуры = Форма.Объект.ВидНоменклатуры;
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьЗначенияРеквизитовНоменклатурыИзФормы.
Процедура ПолучитьЗначенияРеквизитовНоменклатурыИзФормы(Форма, ЗначенияРеквизитов) Экспорт
	ЗначенияРеквизитов.Вставить("Наименование");
	ЗначенияРеквизитов.Вставить("СтавкаНДС");
	ЗначенияРеквизитов.Вставить("Описание");
	ЗначенияРеквизитов.Вставить("Артикул");
	ЗначенияРеквизитов.Вставить("ЕдиницаИзмерения");
	ЗначенияРеквизитов.Вставить("НаименованиеПолное");
	ЗначенияРеквизитов.Вставить("КодТНВЭД");
	ЗначенияРеквизитов.Вставить("КодОКПД2");
	ЗначенияРеквизитов.Вставить("ВесЕдиницаИзмерения");
	ЗначенияРеквизитов.Вставить("ВесЗнаменатель");
	ЗначенияРеквизитов.Вставить("ВесИспользовать");
	ЗначенияРеквизитов.Вставить("ВесЧислитель");
	ЗначенияРеквизитов.Вставить("ОбъемЕдиницаИзмерения");
	ЗначенияРеквизитов.Вставить("ОбъемЗнаменатель");
	ЗначенияРеквизитов.Вставить("ОбъемИспользовать");
	ЗначенияРеквизитов.Вставить("ОбъемЧислитель");
	ЗначенияРеквизитов.Вставить("ДлинаЕдиницаИзмерения");
	ЗначенияРеквизитов.Вставить("ДлинаЗнаменатель");
	ЗначенияРеквизитов.Вставить("ДлинаИспользовать");
	ЗначенияРеквизитов.Вставить("ДлинаЧислитель");
	ЗначенияРеквизитов.Вставить("ПлощадьЕдиницаИзмерения");
	ЗначенияРеквизитов.Вставить("ПлощадьЗнаменатель");
	ЗначенияРеквизитов.Вставить("ПлощадьИспользовать");
	ЗначенияРеквизитов.Вставить("ПлощадьЧислитель");
	ЗначенияРеквизитов.Вставить("Производитель");
	ЗначенияРеквизитов.Вставить("Марка");
	
	Для каждого ЭлементКоллекции Из ЗначенияРеквизитов Цикл
		ЗначенияРеквизитов[ЭлементКоллекции.Ключ] = Форма.Объект[ЭлементКоллекции.Ключ];
	КонецЦикла;
	
	ШтрихКоды = РегистрыСведений.ШтрихкодыНоменклатуры.ШтрихкодыНоменклатуры(Форма.Объект.Ссылка, 
		Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(), Форма.Объект.ЕдиницаИзмерения);
	ЗначенияРеквизитов.Вставить("Штрихкоды", ШтрихКоды);	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьЗначенияДополнительныхРеквизитовИзФормы.
Процедура ПолучитьЗначенияДополнительныхРеквизитовИзФормы(Форма, ЗначенияРеквизитов) Экспорт
	
	УправлениеСвойствами.ПеренестиЗначенияИзРеквизитовФормыВОбъект(Форма,Форма.Объект);
	
	ЗначенияРеквизитов = Форма.Объект.ДополнительныеРеквизиты.Выгрузить(, "Свойство, Значение");
	
КонецПроцедуры

Процедура ПолучитьДополненныйЗапросДинамическогоСписка(ТекстЗапроса) Экспорт
	ТекстЗапроса =
	
	"ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка КАК Ссылка,
	|	СпрНоменклатура.Код КАК Код,
	|	СпрНоменклатура.Наименование КАК Наименование,
	|	СпрНоменклатура.Артикул КАК Артикул,
	|	СпрНоменклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	|	СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СпрНоменклатура.СтавкаНДС КАК СтавкаНДС,
	|	СпрНоменклатура.Родитель КАК Родитель,
	|	ВЫБОР
	|		КОГДА СпрНоменклатура.ЕстьТоварыДругогоКачества
	|			ТОГДА 4 + ВЫБОР
	|					КОГДА СпрНоменклатура.ПометкаУдаления
	|						ТОГДА 1
	|					ИНАЧЕ 0
	|				КОНЕЦ + ВЫБОР
	|					КОГДА СпрНоменклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	|						ТОГДА 0
	|					ИНАЧЕ 2
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА СпрНоменклатура.ПометкаУдаления
	|					ТОГДА 1
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|			+ ВЫБОР
	|						КОГДА СпрНоменклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	|							ТОГДА 0
	|						ИНАЧЕ 2
	|					КОНЕЦ
	|	КОНЕЦ КАК ИндексКартинки,
	|	
	|	// ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	|    
	|    ВЫБОР
	|        КОГДА СоответствиеНоменклатурыРаботаСНоменклатурой.СтатусСопоставления = &Сопоставлено
	|            ТОГДА СоответствиеНоменклатурыРаботаСНоменклатурой.ПредставлениеНоменклатурыСервиса
	|        КОГДА СоответствиеНоменклатурыРаботаСНоменклатурой.СтатусСопоставления = &НеСопоставлено
	|                И СоответствиеНоменклатурыРаботаСНоменклатурой.КоличествоВариантов > 0
	|            ТОГДА ВЫРАЗИТЬ(&СтрокаНайденыВарианты КАК СТРОКА(256))
	|        КОГДА СоответствиеНоменклатурыРаботаСНоменклатурой.СтатусСопоставления В (&СтатусыНайдено)
	|            ТОГДА ВЫРАЗИТЬ(&СтрокаНайдено КАК СТРОКА(256)) + ВЫРАЗИТЬ(СоответствиеНоменклатурыРаботаСНоменклатурой.ПредставлениеНоменклатурыСервиса КАК СТРОКА(1024))
	|        ИНАЧЕ ВЫРАЗИТЬ(&СтрокаСопоставить КАК СТРОКА(256))
	|    КОНЕЦ КАК НоменклатураРаботаСНоменклатурой,
	|    ВЫБОР
	|        КОГДА СоответствиеНоменклатурыРаботаСНоменклатурой.КоличествоВариантов > 0
	|                ИЛИ СоответствиеНоменклатурыРаботаСНоменклатурой.СтатусСопоставления В (&СтатусыНайдено)
	|            ТОГДА 1
	|        КОГДА СоответствиеНоменклатурыРаботаСНоменклатурой.СтатусСопоставления = &Сопоставлено
	|            ТОГДА 
	|                ВЫБОР 
	|                    КОГДА СоответствиеНоменклатурыРаботаСНоменклатурой.РежимЗагрузкиХарактеристик = &Сопоставление 
	|                        ТОГДА 3
	|                    ИНАЧЕ 2 
	|                КОНЕЦ
	|        ИНАЧЕ 0
	|    КОНЕЦ КАК КодСтатусаСопоставленияРаботаСНоменклатурой,
	|    СоответствиеНоменклатурыРаботаСНоменклатурой.ИдентификаторНоменклатурыСервиса КАК ИдентификаторНоменклатурыРаботаСНоменклатурой,
	|    ВЫБОР
	|        КОГДА СоответствиеНоменклатурыРаботаСНоменклатурой.ОбновляетсяАвтоматически
	|            ТОГДА 1
	|        ИНАЧЕ 0
	|    КОНЕЦ КАК КартинкаРежимаОбновленияРаботаСНоменклатурой
	|    
	|    // Конец ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	|	
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|	
	|        // ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	|        
	|        ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыРаботаСНоменклатурой КАК СоответствиеНоменклатурыРаботаСНоменклатурой
	|        ПО СпрНоменклатура.Ссылка = СоответствиеНоменклатурыРаботаСНоменклатурой.Номенклатура
	|            И (СоответствиеНоменклатурыРаботаСНоменклатурой.Характеристика = &ПустаяХарактеристика)
	|        
	|        // Конец ЭлектронноеВзаимодействие.РаботаСНоменклатурой
	|	
	|ГДЕ
	|	НЕ СпрНоменклатура.ЭтоГруппа
	|{ГДЕ
	|	(СпрНоменклатура.Ссылка В
	|			(ВЫБРАТЬ
	|				Сегменты.Номенклатура
	|			ИЗ
	|				РегистрСведений.НоменклатураСегмента КАК Сегменты
	|			ГДЕ
	|				Сегменты.Сегмент = &СегментНоменклатуры))}";
					
КонецПроцедуры

//-- Локализация

#КонецОбласти

//++ Локализация

#Область ЗаполнениеДанных

// См. РаботаСНоменклатуройПереопределяемый.ЗаполнитьВидНоменклатурыВФорме.
Процедура ЗаполнитьВидНоменклатурыВФорме(Форма, ТаблицаОтличий = Неопределено, ДанныеИнтерактивногоЗаполнения = Неопределено) Экспорт
	Если ТаблицаОтличий <> Неопределено Тогда  // заполнение при наличии изменений
		
		// Заполнение при наличии отличий после работы формы заполнения.
		
		Если ЗначениеЗаполнено(Форма.Объект.Ссылка) Тогда
			Форма.Прочитать(); // для обновления отображения дополнительных реквизитов
		КонецЕсли;
				
		Для каждого ЭлементКоллекции Из ТаблицаОтличий Цикл
			Если ЭлементКоллекции.Пометка Тогда
				Форма.Объект[ЭлементКоллекции.РеквизитОбъекта] = ЭлементКоллекции.НовоеЗначение;
			КонецЕсли;
		КонецЦикла;	
		
		Если Не ЗначениеЗаполнено(Форма.Объект.Ссылка)
			И ДанныеИнтерактивногоЗаполнения <> Неопределено Тогда	
			
			// Для новых объектов идет заполнение дополнительных реквизитов на форме для имитации их присутствия.
			
			ЗаполнитьДополнительныеРеквизитыНаФорме(Форма, ДанныеИнтерактивногоЗаполнения);
		КонецЕсли;

	КонецЕсли;	
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьГруппыДоступаНоменклатуры")
		и НЕ ЗначениеЗаполнено(Форма.Объект.ГруппаДоступа) Тогда
		Форма.Объект.ГруппаДоступа = Константы.ГруппаДоступаНоменклатурыИзСервиса.Получить();
	КонецЕсли;
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ЗаполнитьВидНоменклатуры.
Процедура ЗаполнитьВидНоменклатуры(ВидНоменклатурыСсылка, ТаблицаИзменений) Экспорт
	Если ТаблицаИзменений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		
		УстановитьИсключительнуюБлокировкуПоСсылке(ВидНоменклатурыСсылка);
		
		ЗаблокироватьДанныеДляРедактирования(ВидНоменклатурыСсылка);
		
		ВидНоменклатурыОбъект = ВидНоменклатурыСсылка.ПолучитьОбъект();

		Для каждого ЭлементКоллекции Из ТаблицаИзменений Цикл
			ВидНоменклатурыОбъект[ЭлементКоллекции.РеквизитОбъекта] = ЭлементКоллекции.НовоеЗначение;
		КонецЦикла;
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьГруппыДоступаНоменклатуры")
			и НЕ ЗначениеЗаполнено(ВидНоменклатурыОбъект.ГруппаДоступа) Тогда
			ВидНоменклатурыОбъект.ГруппаДоступа = Константы.ГруппаДоступаНоменклатурыИзСервиса.Получить();
		КонецЕсли;

		ВидНоменклатурыОбъект.Записать();
				
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ЗаполнитьНоменклатуру.
Процедура ЗаполнитьНоменклатуру(НоменклатураСсылка, ТаблицаИзменений) Экспорт
	Если ТаблицаИзменений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		
		УстановитьИсключительнуюБлокировкуПоСсылке(НоменклатураСсылка);
	
		ЗаблокироватьДанныеДляРедактирования(НоменклатураСсылка);
		
		НоменклатураОбъект = НоменклатураСсылка.ПолучитьОбъект();
		
		Для каждого ЭлементКоллекции Из ТаблицаИзменений Цикл
			Если ЭлементКоллекции.РеквизитОбъекта <> "Штрихкод" Тогда
				НоменклатураОбъект[ЭлементКоллекции.РеквизитОбъекта] = ЭлементКоллекции.НовоеЗначение;
			КонецЕсли;		
		КонецЦикла;
		
		Если ЗначениеЗаполнено(НоменклатураОбъект.ВесЕдиницаИзмерения) Тогда
			НоменклатураОбъект.ВесИспользовать = Истина;
		КонецЕсли;
		Если ЗначениеЗаполнено(НоменклатураОбъект.ОбъемЕдиницаИзмерения) Тогда
			НоменклатураОбъект.ОбъемИспользовать = Истина;
		КонецЕсли;
		Если ЗначениеЗаполнено(НоменклатураОбъект.ДлинаЕдиницаИзмерения) Тогда
			НоменклатураОбъект.ДлинаИспользовать = Истина;
		КонецЕсли;
		Если ЗначениеЗаполнено(НоменклатураОбъект.ПлощадьЕдиницаИзмерения) Тогда
			НоменклатураОбъект.ПлощадьИспользовать = Истина;
		КонецЕсли;
		
		НоменклатураОбъект.Записать();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
	КонецПопытки;
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ЗаполнитьДополнительныеРеквизитыНоменклатуры.
Процедура ЗаполнитьДополнительныеРеквизитыНоменклатуры(НоменклатураСсылка, ДополнительныеРеквизиты) Экспорт
	Если ДополнительныеРеквизиты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЗначенияДополнительныхРеквизитов = Новый ТаблицаЗначений;
	
	ЗначенияДополнительныхРеквизитов.Колонки.Добавить("Свойство");
	ЗначенияДополнительныхРеквизитов.Колонки.Добавить("Значение");
	
	Для каждого Реквизит Из ДополнительныеРеквизиты Цикл
		
		НоваяСтрока = ЗначенияДополнительныхРеквизитов.Добавить();
		
		НоваяСтрока.Свойство = Реквизит.РеквизитОбъекта;
		НоваяСтрока.Значение = Реквизит.НовоеЗначение;
		
	КонецЦикла;
	
	УправлениеСвойствами.ЗаписатьСвойстваУОбъекта(НоменклатураСсылка, ЗначенияДополнительныхРеквизитов);
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьЗначенияДополнительныхРеквизитов.
Процедура ПолучитьЗначенияДополнительныхРеквизитов(Номенклатура, ЗначенияРеквизитов) Экспорт
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	НоменклатураДополнительныеРеквизиты.Ссылка КАК ВладелецСвойств,
	|	НоменклатураДополнительныеРеквизиты.Свойство КАК Свойство,
	|	НоменклатураДополнительныеРеквизиты.Значение КАК Значение
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|ГДЕ
	|	НоменклатураДополнительныеРеквизиты.Ссылка В(&Номенклатура)";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	ЗначенияРеквизитов = Запрос.Выполнить().Выгрузить();
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ЗаполнитьНоменклатуруВФорме.
Процедура ЗаполнитьНоменклатуруВФорме(Форма, ТаблицаИзменений = Неопределено, ДанныеИнтерактивногоЗаполнения = Неопределено) Экспорт
	ЭтоНовыйОбъект = Истина;
	Если ЗначениеЗаполнено(Форма.Объект.Ссылка) Тогда
		 ЭтоНовыйОбъект = Ложь;
	КонецЕсли;
	
	Если ТаблицаИзменений <> Неопределено И НЕ ЭтоНовыйОбъект Тогда
		
		// Заполнение при наличии отличий после работы формы заполнения.
		Для каждого ЭлементКоллекции Из ТаблицаИзменений Цикл
			Если ЭлементКоллекции.РеквизитОбъекта = "Бренд" Тогда
				Форма.Объект.Марка = НайтиСоздатьБрендПоНаименованию(ЭлементКоллекции.НовоеЗначение, Форма.Объект.Производитель);
			ИначеЕсли ЭлементКоллекции.РеквизитОбъекта = "Производитель" Тогда
				Форма.Объект.Производитель = НайтиСоздатьПроизводителяПоНаименованию(ЭлементКоллекции.НовоеЗначение);			
			ИначеЕсли ЭлементКоллекции.РеквизитОбъекта = "Штрихкод" Тогда
				Форма.Штрихкод = ЭлементКоллекции.НовоеЗначение;				
			Иначе 
				Форма.Объект[ЭлементКоллекции.РеквизитОбъекта] = ЭлементКоллекции.НовоеЗначение;
			КонецЕсли;
		КонецЦикла;
		
		// Отображение картинки на форме.
		Если Не ЗначениеЗаполнено(Форма.АдресКартинки)
			И ЗначениеЗаполнено(ДанныеИнтерактивногоЗаполнения)
			И ЗначениеЗаполнено(ДанныеИнтерактивногоЗаполнения[0].Изображения) Тогда
			
			Форма.Элементы.ФайлКартинки.ТекстНевыбраннойКартинки 
				= НСтр("ru = 'Изображение появится после записи'");
		КонецЕсли;
	
	ИначеЕсли ДанныеИнтерактивногоЗаполнения <> Неопределено Тогда
		
		// Заполнение при интерактивном создании.
		
		ЕстьДопРеквизиты = ДанныеИнтерактивногоЗаполнения.Колонки.Найти("ДополнительныеРеквизиты") <> Неопределено;
		ЕстьКлассификаторы  = ДанныеИнтерактивногоЗаполнения.Колонки.Найти("Классификаторы") <> Неопределено;
		
		Для каждого ДанныеЗаполнения Из ДанныеИнтерактивногоЗаполнения Цикл
			
			СтавкаНДС = Справочники.СтавкиНДС.ПустаяСсылка();
			ПреобразоватьСтавкуНДССервиса(ДанныеЗаполнения.СтавкаНДС, СтавкаНДС);
			
			СсылкаНаЕдиницуИзмерения = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
			ЕдиницаИзмеренияПоДаннымСервиса(ДанныеЗаполнения.ЕдиницаИзмерения, СсылкаНаЕдиницуИзмерения);
			
			НаименованиеПолное = ?(ЗначениеЗаполнено(ДанныеЗаполнения.НаименованиеДляПечати), ДанныеЗаполнения.НаименованиеДляПечати, 
			ДанныеЗаполнения.Наименование);
			Форма.Объект.Наименование = ДанныеЗаполнения.Наименование;
			Форма.Объект.Артикул = ДанныеЗаполнения.Артикул;
			Форма.Объект.НаименованиеПолное = НаименованиеПолное;
			Форма.Объект.ЕдиницаИзмерения = СсылкаНаЕдиницуИзмерения;
			Форма.Объект.СтавкаНДС = СтавкаНДС;
			Форма.Объект.Описание = ДанныеЗаполнения.Описание;
			Если ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВидовНоменклатуры") Тогда
				Форма.Объект.ВидНоменклатуры = ДанныеЗаполнения.ВидНоменклатурыПоУмолчанию.ВидНоменклатуры;
			Иначе
				МассивВидов = Справочники.ВидыНоменклатуры.ПолучитьПредустановленныеВидыНоменклатуры();
				Для каждого ТекВид Из МассивВидов Цикл
					Если ТекВид.Наименование = ДанныеЗаполнения.Тип Тогда
						Форма.Объект.ВидНоменклатуры = ТекВид;
					КонецЕсли;
				КонецЦикла; 
			КонецЕсли;
			Если ЗначениеЗаполнено(Форма.Объект.ВидНоменклатуры.ГруппаДоступа) Тогда
				Форма.Объект.ГруппаДоступа = Форма.Объект.ВидНоменклатуры.ГруппаДоступа;
			Иначе
				Форма.Объект.ГруппаДоступа = Константы.ГруппаДоступаНоменклатурыИзСервиса.Получить();
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Форма.Объект.ВидНоменклатуры) Тогда
				ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.Объект.ВидНоменклатуры, "ИспользованиеХарактеристик");
				Форма.Объект.ИспользованиеХарактеристик = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.Объект.ВидНоменклатуры, "ИспользованиеХарактеристик");
				Справочники.Номенклатура.ЗаполнитьРеквизитыПоВидуНоменклатуры(Форма.Объект);
			КонецЕсли;
			
			Если ЕстьДопРеквизиты Тогда
				Для каждого ЭлементКоллекции Из ДанныеЗаполнения.ДополнительныеРеквизиты Цикл
					НоваяСтрока = Форма.Объект.ДополнительныеРеквизиты.Добавить();
					НоваяСтрока.Свойство = ЭлементКоллекции.РеквизитИнформационнойБазы;
					НоваяСтрока.Значение = РаботаСНоменклатурой.ЗначениеДополнительногоРеквизита(ЭлементКоллекции);
				КонецЦикла; 
				УправлениеСвойствами.ЗаполнитьДополнительныеРеквизитыВФорме(Форма, Форма.Объект);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДанныеЗаполнения.Изображения) Тогда
				Форма.ИзображенияИзСервиса.ЗагрузитьЗначения(ДанныеЗаполнения.Изображения.ВыгрузитьКолонку("ИзображениеURL"));
			КонецЕсли;
			Если ДанныеЗаполнения.ШтрихКоды.Количество() > 0
				или ДанныеЗаполнения.Характеристики.Количество() > 0 Тогда
				Штрихкоды = Новый ТаблицаЗначений;
				Штрихкоды.Колонки.Добавить("Номенклатура");
				Штрихкоды.Колонки.Добавить("Характеристика");
				Штрихкоды.Колонки.Добавить("Штрихкод", Новый ОписаниеТипов("Строка"));
			КонецЕсли;
			Если ДанныеЗаполнения.ШтрихКоды.Количество() > 0 Тогда
				Форма.ШтрихКод = ДанныеЗаполнения.Штрихкоды[0];
				Для каждого Штрихкод Из ДанныеЗаполнения.Штрихкоды Цикл
					НоваяСтрока = Штрихкоды.Добавить();
					НоваяСтрока.ШтрихКод = Штрихкод;
				КонецЦикла;
				Форма.ШтрихкодыСервис = ПоместитьВоВременноеХранилище(Штрихкоды, Форма.УникальныйИдентификатор);
			ИначеЕсли ДанныеЗаполнения.Характеристики.Количество() > 0 Тогда
				Для каждого Характеристика Из ДанныеЗаполнения.Характеристики Цикл
					Для каждого Штрихкод Из Характеристика.ШтрихКоды Цикл
						Если НЕ ЗначениеЗаполнено(Характеристика.ХарактеристикаИнформационнойБазы) Тогда
							Продолжить;
						КонецЕсли;
						Для каждого Штрихкод Из ДанныеЗаполнения.Штрихкоды Цикл
							НоваяСтрока = Штрихкоды.Добавить();
							НоваяСтрока.Характеристика = Характеристика.ХарактеристикаИнформационнойБазы;
							НоваяСтрока.ШтрихКод = Штрихкод;
						КонецЦикла;
						Форма.ШтрихкодыСервис = ПоместитьВоВременноеХранилище(Штрихкоды, Форма.УникальныйИдентификатор);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			Вес = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
			Если ЗначениеЗаполнено(ДанныеЗаполнения.Вес) Тогда
				ЕдиницаИзмеренияПоДаннымСервиса(ДанныеЗаполнения.Вес.ЕдиницаИзмерения, Вес);
			КонецЕсли;
			
			Объем = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
			Если ЗначениеЗаполнено(ДанныеЗаполнения.Объем) Тогда
				ЕдиницаИзмеренияПоДаннымСервиса(ДанныеЗаполнения.Объем.ЕдиницаИзмерения, Объем);
			КонецЕсли;
			
			Длина = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
			Если ЗначениеЗаполнено(ДанныеЗаполнения.Длина) Тогда
				ЕдиницаИзмеренияПоДаннымСервиса(ДанныеЗаполнения.Длина.ЕдиницаИзмерения, Длина);
			КонецЕсли;
			
			Площадь = Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка();
			Если ЗначениеЗаполнено(ДанныеЗаполнения.Площадь) Тогда
				ЕдиницаИзмеренияПоДаннымСервиса(ДанныеЗаполнения.Площадь.ЕдиницаИзмерения, Площадь);
			КонецЕсли;

			Если ЗначениеЗаполнено(Вес) Тогда
				Форма.Объект.ВесЕдиницаИзмерения = Вес;
				Форма.Объект.ВесИспользовать = Истина;
				Форма.Объект.ВесЗнаменатель = ДанныеЗаполнения.Вес.ЗнаменательКратности;
				Форма.Объект.ВесЧислитель = ДанныеЗаполнения.Вес.ЧислительКратности;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объем) Тогда
				Форма.Объект.ОбъемЕдиницаИзмерения = Объем;
				Форма.Объект.ОбъемИспользовать = Истина;
				Форма.Объект.ОбъемЗнаменатель = ДанныеЗаполнения.Объем.ЗнаменательКратности;
				Форма.Объект.ОбъемЧислитель = ДанныеЗаполнения.Объем.ЧислительКратности;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Длина) Тогда
				Форма.Объект.ДлинаЕдиницаИзмерения = Длина;
				Форма.Объект.ДлинаИспользовать = Истина;
				Форма.Объект.ДлинаЗнаменатель = ДанныеЗаполнения.Длина.ЗнаменательКратности;
				Форма.Объект.ДлинаЧислитель = ДанныеЗаполнения.Длина.ЧислительКратности;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Площадь) Тогда
				Форма.Объект.ПлощадьЕдиницаИзмерения = Площадь;
				Форма.Объект.ПлощадьИспользовать = Истина;
				Форма.Объект.ПлощадьЗнаменатель = ДанныеЗаполнения.Площадь.ЗнаменательКратности;
				Форма.Объект.ПлощадьЧислитель = ДанныеЗаполнения.Площадь.ЧислительКратности;
			КонецЕсли;

			Если ЗначениеЗаполнено(ДанныеЗаполнения.Производитель) Тогда
				Форма.Объект.Производитель = НайтиСоздатьПроизводителяПоНаименованию(ДанныеЗаполнения.Производитель.Наименование);
			КонецЕсли;
			ИспользоватьТоварныеКатегории = ПолучитьФункциональнуюОпцию("ИспользоватьТоварныеКатегории");			
			Если ЗначениеЗаполнено(ДанныеЗаполнения.Бренд) И ИспользоватьТоварныеКатегории Тогда
				Форма.Объект.Марка = НайтиСоздатьБрендПоНаименованию(ДанныеЗаполнения.Бренд.Наименование, Форма.Объект.Производитель);
			КонецЕсли;				
				
			Если ЕстьКлассификаторы Тогда
				Для каждого Элемент Из ДанныеЗаполнения.Классификаторы Цикл
					Если СтрНайти(ВРег(Элемент.Наименование), "TNVED") <> 0 Тогда
						Форма.Объект.КодТНВЭД = Справочники.КлассификаторТНВЭД.НайтиСоздатьЭлементКлассификатораТНВЭД(Элемент.Идентификатор);
					ИначеЕсли СтрНайти(ВРег(Элемент.Наименование), "OKPD2") <> 0 Тогда
						Форма.Объект.КодОКПД2 = Справочники.КлассификаторОКПД2.НайтиСоздатьПоКоду(Элемент.Идентификатор);
					КонецЕсли;
					
				КонецЦикла; 
				
			КонецЕсли; 
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Форма.Объект.ВесЕдиницаИзмерения) Тогда
		Форма.Объект.ВесИспользовать = Истина;
	КонецЕсли;
	Если ЗначениеЗаполнено(Форма.Объект.ОбъемЕдиницаИзмерения) Тогда
		Форма.Объект.ОбъемИспользовать = Истина;
	КонецЕсли;
	Если ЗначениеЗаполнено(Форма.Объект.ДлинаЕдиницаИзмерения) Тогда
		Форма.Объект.ДлинаИспользовать = Истина;
	КонецЕсли;
	Если ЗначениеЗаполнено(Форма.Объект.ПлощадьЕдиницаИзмерения) Тогда
		Форма.Объект.ПлощадьИспользовать = Истина;
	КонецЕсли;
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ЗаполнитьДополнительныеРеквизитыНоменклатурыВФорме.
Процедура ЗаполнитьДополнительныеРеквизитыНоменклатурыВФорме(Форма, ТаблицаИзменений) Экспорт
	Объект = Форма.Объект;
	
	Для каждого ЭлементКоллекции Из ТаблицаИзменений Цикл
		
		СтрокиРеквизита = Объект.ДополнительныеРеквизиты.
			НайтиСтроки(Новый Структура("Свойство", ЭлементКоллекции.РеквизитОбъекта));
		
		Если СтрокиРеквизита.Количество() = 0 Тогда
			НоваяСтрока = Объект.ДополнительныеРеквизиты.Добавить();
			НоваяСтрока.Свойство = ЭлементКоллекции.РеквизитОбъекта;
			НоваяСтрока.Значение = ЭлементКоллекции.НовоеЗначение;	
		Иначе
			СтрокиРеквизита[0].Значение = ЭлементКоллекции.НовоеЗначение; 
		КонецЕсли;
		
	КонецЦикла;	

	УправлениеСвойствами.ЗаполнитьДополнительныеРеквизитыВФорме(Форма, Объект);
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.СформироватьНаименованиеПоХарактеристике.
Процедура СформироватьНаименованиеПоХарактеристике(НаименованиеНоменклатуры, ПредставлениеХарактеристики, НаименованиеХарактеристики) Экспорт
	
	НаименованиеХарактеристики = СтрШаблон("%1 ,%2", НаименованиеНоменклатуры, ПредставлениеХарактеристики);
	
КонецПроцедуры

#КонецОбласти

#Область Разное

// См. РаботаСНоменклатуройПереопределяемый.ПриОпределенииНастроек.
Процедура ПриОпределенииНастроек(Настройки) Экспорт
	
	Настройки.ИспользоватьВидыНоменклатуры             = Истина;
	Настройки.ИспользоватьХарактеристики               = Истина;
	Настройки.ИспользоватьПакетноеСозданиеНоменклатуры = Ложь;
	Настройки.ИспользоватьПоискПоШтрихкодуВСервисе     = Истина;
	Настройки.СохранятьИерархиюКатегорийПриЗагрузке    = Истина;
	Настройки.ИспользоватьДополнительныеРеквизиты      = ПолучитьФункциональнуюОпцию("ИспользоватьДополнительныеРеквизитыИСведения");
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьКонтактнуюИнформациюПользователя.
Процедура ПолучитьКонтактнуюИнформациюПользователя(Знач КонтактноеЛицо, Результат) Экспорт
	
	Если КонтактноеЛицо = Пользователи.СсылкаНеуказанногоПользователя() Тогда 
		Возврат;
	КонецЕсли;
	
	Результат.ФИО = Строка(КонтактноеЛицо);
	Результат.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(КонтактноеЛицо, Справочники.ВидыКонтактнойИнформации.EmailПользователя);
	Результат.Телефон = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(КонтактноеЛицо, Справочники.ВидыКонтактнойИнформации.ТелефонПользователя);
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ЗаполнитьЧитаемыеИзменяемыеДанныеМетода.
Процедура ЗаполнитьЧитаемыеИзменяемыеДанныеМетода(Метод, ЧитаемыеИзменяемыеДанные) Экспорт
	
	Если Метод = "РаботаСНоменклатуройПереопределяемый.ПолучитьВидыНоменклатурыПоНоменклатуре" Тогда
		ЧитаемыеИзменяемыеДанные.Читаемые.Добавить("Справочник.Номенклатура");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СопоставлениеНоменклатурыСРубрикатором

// См. РаботаСНоменклатуройПереопределяемый.ИнициализацияЗапросаОтбораДанныхНоменклатуры.
Процедура ИнициализацияЗапросаОтбораДанныхНоменклатуры(ТекстЗапроса) Экспорт 

	ТекстЗапроса = "ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	СправочникНоменклатура.ВидНоменклатуры КАК ВидНоменклатуры,
	|	СправочникНоменклатура.Родитель КАК Родитель
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|{ГДЕ
	|	СправочникНоменклатура.Ссылка.* КАК Номенклатура,
	|	СправочникНоменклатура.ВидНоменклатуры.* КАК ВидНоменклатуры,
	|	СправочникНоменклатура.Родитель.* КАК Родитель,
	|	СправочникНоменклатура.Код,
	|	СправочникНоменклатура.Артикул}
	|{ХАРАКТЕРИСТИКИ
	|	ТИП(Справочник.Номенклатура)
	|	ВИДЫХАРАКТЕРИСТИК (ВЫБРАТЬ
	|			ДополнительныеРеквизитыИСведения.Ссылка КАК Ссылка,
	|			ДополнительныеРеквизитыИСведения.Наименование КАК Наименование,
	|			ДополнительныеРеквизитыИСведения.ТипЗначения КАК ТипЗначения
	|		ИЗ
	|			ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения)
	|	ПОЛЕКЛЮЧА Ссылка
	|	ПОЛЕИМЕНИ Наименование
	|	ПОЛЕТИПАЗНАЧЕНИЯ ТипЗначения
	|	ЗНАЧЕНИЯХАРАКТЕРИСТИК (ВЫБРАТЬ
	|			НоменклатураДополнительныеРеквизиты.Ссылка КАК Ссылка,
	|			НоменклатураДополнительныеРеквизиты.Свойство КАК Свойство,
	|			НоменклатураДополнительныеРеквизиты.Значение КАК Значение
	|		ИЗ
	|			Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты)
	|	ПОЛЕОБЪЕКТА Ссылка
	|	ПОЛЕВИДА Свойство
	|	ПОЛЕЗНАЧЕНИЯ Значение }";
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьРеквизитыНоменклатурыДоступныеДляПубликации.
Процедура ПолучитьРеквизитыНоменклатурыДоступныеДляПубликации(ПубликуемыеРеквизиты) Экспорт
	// Номенклатура.Вес.
	СвойстваРеквизита = Новый Структура;
	СвойстваРеквизита.Вставить("Представление", НСтр("ru = 'Вес'"));
	СвойстваРеквизита.Вставить("ПутьКДанным",
		"ВЫБОР КОГДА Номенклатура.ВесИспользовать И Номенклатура.ВесЗнаменатель <> 0 ТОГДА
		|		Номенклатура.ВесЧислитель/Номенклатура.ВесЗнаменатель ИНАЧЕ 0 КОНЕЦ");
	СвойстваРеквизита.Вставить("ТипЗначения", Новый ОписаниеТипов("Число"));
	СвойстваРеквизита.Вставить("ПустоеЗначение", 0);
	ПубликуемыеРеквизиты.Вставить(Перечисления.РеквизитыСопоставленияНоменклатурыБизнесСеть.Вес, СвойстваРеквизита);
		
	// Номенклатура.Длина.
	СвойстваРеквизита = Новый Структура;
	СвойстваРеквизита.Вставить("Представление", НСтр("ru = 'Длина'"));
	СвойстваРеквизита.Вставить("ПутьКДанным",
		"ВЫБОР КОГДА Номенклатура.ДлинаИспользовать И Номенклатура.ДлинаЗнаменатель <> 0 ТОГДА
		|		Номенклатура.ДлинаЧислитель/Номенклатура.ДлинаЗнаменатель ИНАЧЕ 0 КОНЕЦ");
	СвойстваРеквизита.Вставить("ТипЗначения", Новый ОписаниеТипов("Число"));
	СвойстваРеквизита.Вставить("ПустоеЗначение", 0);
	ПубликуемыеРеквизиты.Вставить(Перечисления.РеквизитыСопоставленияНоменклатурыБизнесСеть.Длина, СвойстваРеквизита);
	
	// Номенклатура.Объем.
	СвойстваРеквизита = Новый Структура;
	СвойстваРеквизита.Вставить("Представление", НСтр("ru = 'Объем'"));
	СвойстваРеквизита.Вставить("ПутьКДанным",
		"ВЫБОР КОГДА Номенклатура.ОбъемИспользовать И Номенклатура.ОбъемЗнаменатель <> 0 ТОГДА
		|		Номенклатура.ОбъемЧислитель/Номенклатура.ОбъемЗнаменатель ИНАЧЕ 0 КОНЕЦ");
	СвойстваРеквизита.Вставить("ТипЗначения", Новый ОписаниеТипов("Число"));
	СвойстваРеквизита.Вставить("ПустоеЗначение", 0);
	ПубликуемыеРеквизиты.Вставить(Перечисления.РеквизитыСопоставленияНоменклатурыБизнесСеть.Объем, СвойстваРеквизита);
	
	// Номенклатура.Производитель.
	СвойстваРеквизита = Новый Структура;
	СвойстваРеквизита.Вставить("Представление", НСтр("ru = 'Производитель'"));
	СвойстваРеквизита.Вставить("ПутьКДанным", "Номенклатура.Производитель");
	СвойстваРеквизита.Вставить("ТипЗначения", Новый ОписаниеТипов("СправочникСсылка.Производители"));
	СвойстваРеквизита.Вставить("ПустоеЗначение", Справочники.Производители.ПустаяСсылка());
	ПубликуемыеРеквизиты.Вставить(Перечисления.РеквизитыСопоставленияНоменклатурыБизнесСеть.Производитель, СвойстваРеквизита);
	
	// Номенклатура.Марка.
	СвойстваРеквизита = Новый Структура;
	СвойстваРеквизита.Вставить("Представление", НСтр("ru = 'Марка'"));
	СвойстваРеквизита.Вставить("ПутьКДанным", "Номенклатура.Марка");
	СвойстваРеквизита.Вставить("ТипЗначения", Новый ОписаниеТипов("СправочникСсылка.Марки"));
	СвойстваРеквизита.Вставить("ПустоеЗначение", Справочники.Марки.ПустаяСсылка());
	ПубликуемыеРеквизиты.Вставить(Перечисления.РеквизитыСопоставленияНоменклатурыБизнесСеть.Марка, СвойстваРеквизита);
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ИнициализацияЗапросаЗначенийДополнительныхРеквизитов.
Процедура ИнициализацияЗапросаЗначенийДополнительныхРеквизитов(Запрос, ДополнительныеРеквизиты) Экспорт 
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Владелец КАК РеквизитОбъекта,
	|	ЗначенияСвойствОбъектов.Ссылка КАК Значение
	|ИЗ
	|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Владелец В(&ДополнительныеРеквизиты)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Владелец,
	|	ЗначенияСвойствОбъектов.Ссылка
	|ИЗ
	|	Справочник.ЗначенияСвойствОбъектовИерархия КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Владелец В(&ДополнительныеРеквизиты)";
	
	Если ДополнительныеРеквизиты = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЗначенияСвойствОбъектов.Владелец В(&ДополнительныеРеквизиты)", "ИСТИНА");
	Иначе 
		Запрос.УстановитьПараметр("ДополнительныеРеквизиты", ДополнительныеРеквизиты);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ВыгрузкаНоменклатуры

// См. РаботаСНоменклатуройПереопределяемый.ФормализованныеРеквизитыНоменклатурыДляВыгрузки.
Процедура ФормализованныеРеквизитыНоменклатурыДляВыгрузки(ФормализованныеРеквизиты) Экспорт 
	ФормализованныеРеквизиты.ВесЧислитель 	= Перечисления.РеквизитыСопоставленияНоменклатурыБизнесСеть.Вес;
	ФормализованныеРеквизиты.ДлинаЧислитель = Перечисления.РеквизитыСопоставленияНоменклатурыБизнесСеть.Длина;
	ФормализованныеРеквизиты.ОбъемЧислитель = Перечисления.РеквизитыСопоставленияНоменклатурыБизнесСеть.Объем;
	ФормализованныеРеквизиты.Производитель 	= Перечисления.РеквизитыСопоставленияНоменклатурыБизнесСеть.Производитель;
	ФормализованныеРеквизиты.Марка 			= Перечисления.РеквизитыСопоставленияНоменклатурыБизнесСеть.Марка;
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ДополнительныеРеквизитыНоменклатурыДляВыгрузки.
Процедура ДополнительныеРеквизитыНоменклатурыДляВыгрузки(ДополнительныеРеквизиты, ВидыНоменклатуры) Экспорт 
	
	ДополнительныеРеквизиты.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры,
	|	ВидыНоменклатуры.Наименование + &ПояснениеВид КАК ВидНоменклатурыНаименование,
	|	ВидыНоменклатуры.ИспользоватьХарактеристики КАК ИспользоватьХарактеристики,
	|	ДополнительныеРеквизиты.Ссылка КАК Свойство,
	|	ДополнительныеРеквизиты.ТипЗначения КАК ТипЗначения,
	|	ДополнительныеРеквизиты.Наименование КАК Синоним
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК Наборы
	|		ПО ВидыНоменклатуры.НаборСвойств = Наборы.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизиты
	|		ПО (Наборы.Свойство = ДополнительныеРеквизиты.Ссылка)
	|ГДЕ
	|	НЕ ДополнительныеРеквизиты.ПометкаУдаления
	|	И ВидыНоменклатуры.Ссылка В(&ВидыНоменклатуры)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыНоменклатуры.Ссылка,
	|	ВидыНоменклатуры.Наименование + &ПояснениеВид,
	|	ИСТИНА,
	|	ДополнительныеРеквизиты.Ссылка,
	|	ДополнительныеРеквизиты.ТипЗначения,
	|	ДополнительныеРеквизиты.Наименование
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидНоменклатурыВладелецХарактеристик
	|		ПО ВидыНоменклатуры.ВладелецХарактеристик = ВидНоменклатурыВладелецХарактеристик.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК Наборы
	|		ПО (ВидНоменклатурыВладелецХарактеристик.НаборСвойствХарактеристик = Наборы.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизиты
	|		ПО (Наборы.Свойство = ДополнительныеРеквизиты.Ссылка)
	|ГДЕ
	|	НЕ ДополнительныеРеквизиты.ПометкаУдаления
	|	И ВидыНоменклатуры.Ссылка В(&ВидыНоменклатуры)
	|	И ВидыНоменклатуры.ИспользоватьХарактеристики
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыНоменклатуры.Ссылка,
	|	ВидыНоменклатуры.Наименование + &ПояснениеВид,
	|	ИСТИНА,
	|	ДополнительныеРеквизиты.Ссылка,
	|	ДополнительныеРеквизиты.ТипЗначения,
	|	ДополнительныеРеквизиты.Наименование
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК Наборы
	|		ПО ВидыНоменклатуры.НаборСвойствХарактеристик = Наборы.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизиты
	|		ПО (Наборы.Свойство = ДополнительныеРеквизиты.Ссылка)
	|ГДЕ
	|	НЕ ДополнительныеРеквизиты.ПометкаУдаления
	|	И ВидыНоменклатуры.Ссылка В(&ВидыНоменклатуры)
	|	И ВидыНоменклатуры.ИспользоватьХарактеристики
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка),
	|	&ПояснениеОбщие,
	|	ЛОЖЬ,
	|	ДополнительныеРеквизиты.Ссылка,
	|	ДополнительныеРеквизиты.ТипЗначения,
	|	ДополнительныеРеквизиты.Заголовок
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизиты
	|ГДЕ
	|	НЕ ДополнительныеРеквизиты.ПометкаУдаления
	|	И ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК Наборы
	|			ГДЕ
	|				Наборы.Ссылка = &Набор_Справочник_Номенклатура_Общие
	|				И Наборы.Свойство = ДополнительныеРеквизиты.Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка),
	|	&ПояснениеОбщие,
	|	ЛОЖЬ,
	|	ДополнительныеРеквизиты.Ссылка,
	|	ДополнительныеРеквизиты.ТипЗначения,
	|	ДополнительныеРеквизиты.Заголовок
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизиты
	|ГДЕ
	|	НЕ ДополнительныеРеквизиты.ПометкаУдаления
	|	И ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК Наборы
	|			ГДЕ
	|				Наборы.Ссылка = &Набор_Справочник_ХарактеристикиНоменклатуры_Общие
	|				И Наборы.Свойство = ДополнительныеРеквизиты.Ссылка)";
	
	Если ВидыНоменклатуры = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВидыНоменклатуры.Ссылка В(&ВидыНоменклатуры)", "ИСТИНА");
	Иначе
		Запрос.УстановитьПараметр("ВидыНоменклатуры", ВидыНоменклатуры);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПояснениеВид", СтрШаблон(НСтр("ru = '%1(Вид номенклатуры)'"), " "));
	Запрос.УстановитьПараметр("ПояснениеОбщие", НСтр("ru = 'Общие доп.реквизиты'"));
	Запрос.УстановитьПараметр("Набор_Справочник_Номенклатура_Общие", УправлениеСвойствами.НаборСвойствПоИмени("Справочник_Номенклатура_Общие"));
	Запрос.УстановитьПараметр("Набор_Справочник_ХарактеристикиНоменклатуры_Общие", УправлениеСвойствами.НаборСвойствПоИмени("Справочник_ХарактеристикиНоменклатуры_Общие"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ДополнительныеРеквизиты.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ИнициализацияЗапросаВыборкиДанныхДляВыгрузки.
Процедура ИнициализацияЗапросаВыборкиДанныхДляВыгрузки(Запрос) Экспорт 
	Запрос.Текст = Запрос.Текст + Символы.ПС + ";" + Символы.ПС
	+ "ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
	|	СправочникНоменклатура.Наименование КАК Наименование,
	|	ХарактеристикиНоменклатуры.Наименование КАК ХарактеристикаНаименование,
	|	СправочникНоменклатура.Артикул КАК Артикул,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.СтавкаНДС.ПеречислениеСтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|			ТОГДА &НДС10
	|		КОГДА СправочникНоменклатура.СтавкаНДС.ПеречислениеСтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|			ТОГДА &НДС10
	|		КОГДА СправочникНоменклатура.СтавкаНДС.ПеречислениеСтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|			ТОГДА &НДС18
	|		КОГДА СправочникНоменклатура.СтавкаНДС.ПеречислениеСтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА &НДС18
	|		КОГДА СправочникНоменклатура.СтавкаНДС.ПеречислениеСтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|			ТОГДА &НДС20
	|		КОГДА СправочникНоменклатура.СтавкаНДС.ПеречислениеСтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|			ТОГДА &НДС20
	|		КОГДА СправочникНоменклатура.СтавкаНДС.ПеречислениеСтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА &НДС0
	|		КОГДА СправочникНоменклатура.СтавкаНДС.ПеречислениеСтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА &НДС0
	|	КОНЕЦ КАК СтавкаНДС,
	|	СправочникНоменклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	|	СправочникНоменклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКодОКЕИ,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|			ТОГДА &Вес
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
	|			ТОГДА &Объем
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь)
	|			ТОГДА &Площадь
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина)
	|			ТОГДА &Длина
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук)
	|			ТОГДА &КоличествоШтук
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА &Упаковка
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Мощность)
	|			ТОГДА &Мощность
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Энергия)
	|			ТОГДА &Энергия
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ЭлектрическийЗаряд)
	|			ТОГДА &ЭлектрическийЗаряд
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Время)
	|			ТОГДА &Время
	|	КОНЕЦ КАК ЕдиницаИзмеренияТипИзмеряемойВеличины,
	|	СправочникНоменклатура.ЕдиницаИзмерения.НаименованиеПолное КАК ЕдиницаИзмеренияНаименованиеПолное,
	|	СправочникНоменклатура.ЕдиницаИзмерения.МеждународноеСокращение КАК ЕдиницаИзмеренияМеждународноеСокращение,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|			ТОГДА ""166 ""
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
	|			ТОГДА ""113 ""
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь)
	|			ТОГДА ""055 ""
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина)
	|			ТОГДА ""006 ""
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Мощность)
	|			ТОГДА ""212 ""
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Энергия)
	|			ТОГДА ""243 ""
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.ЭлектрическийЗаряд)
	|			ТОГДА ""263 ""
	|		КОГДА СправочникНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Время)
	|			ТОГДА ""354 ""
	|	КОНЕЦ КАК ЕдиницаИзмеренияБазоваяЕдиница,
	|	СправочникНоменклатура.ЕдиницаИзмерения.Числитель КАК ЕдиницаИзмеренияЧислитель,
	|	СправочникНоменклатура.ЕдиницаИзмерения.Знаменатель КАК ЕдиницаИзмеренияЗнаменатель,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.ВидНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА &Услуга
	|		ИНАЧЕ &Товар
	|	КОНЕЦ КАК ТипНоменклатуры,
	|	СправочникНоменклатура.Описание КАК Описание,
	|	СправочникНоменклатура.Наименование КАК НаименованияДляПечатиЧека,
	|	СправочникНоменклатура.ВестиУчетПоГТД КАК ВестиУчетПоГТД,
	|	СправочникНоменклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха) КАК ПродукцияМаркируемаяДляГИСМ,
	|	СправочникНоменклатура.ПодакцизныйТовар КАК ПодакцизныйТовар,
	|	NULL КАК СтранаПроисхождения,
	|	Производители.Ссылка КАК Производитель,
	|	Производители.Наименование КАК ПроизводительНаименование,
	|	NULL КАК ПроизводительИНН,
	|	NULL КАК ПроизводительКПП,
	|	Марки.Ссылка КАК Марка,
	|	Марки.Наименование КАК МаркаНаименование,
	|	NULL КАК КоличествоВУпаковке,
	|	NULL КАК КоличествоВУпаковкеЕдиницаИзмерения,
	|	NULL КАК КоличествоВУпаковкеЕдиницаИзмеренияКодОКЕИ,
	|	NULL КАК КоличествоВУпаковкеЕдиницаИзмеренияТипИзмеряемойВеличины,
	|	NULL КАК КоличествоВУпаковкеЕдиницаИзмеренияНаименованиеПолное,
	|	NULL КАК КоличествоВУпаковкеЕдиницаИзмеренияМеждународноеСокращение,
	|	NULL КАК КоличествоВУпаковкеЕдиницаИзмеренияБазоваяЕдиница,
	|	NULL КАК КоличествоВУпаковкеЕдиницаИзмеренияЧислитель,
	|	NULL КАК КоличествоВУпаковкеЕдиницаИзмеренияЗнаменатель,
	|	СправочникНоменклатура.ВесЧислитель КАК ВесЧислитель,
	|	СправочникНоменклатура.ВесЗнаменатель КАК ВесЗнаменатель,
	|	ВесЕдиницыИзмерения.Наименование КАК ВесЕдиницаИзмерения,
	|	ВесЕдиницыИзмерения.Код КАК ВесЕдиницаИзмеренияКодОКЕИ,
	|	&Вес КАК ВесЕдиницаИзмеренияТипИзмеряемойВеличины,
	|	ВесЕдиницыИзмерения.НаименованиеПолное КАК ВесЕдиницаИзмеренияНаименованиеПолное,
	|	ВесЕдиницыИзмерения.МеждународноеСокращение КАК ВесЕдиницаИзмеренияМеждународноеСокращение,
	|	""166 "" КАК ВесЕдиницаИзмеренияБазоваяЕдиница,
	|	ВесЕдиницыИзмерения.Числитель КАК ВесЕдиницаИзмеренияЧислитель,
	|	ВесЕдиницыИзмерения.Знаменатель КАК ВесЕдиницаИзмеренияЗнаменатель,
	|	СправочникНоменклатура.ДлинаЧислитель КАК ДлинаЧислитель,
	|	СправочникНоменклатура.ДлинаЗнаменатель КАК ДлинаЗнаменатель,
	|	ДлинаЕдиницыИзмерения.Наименование КАК ДлинаЕдиницаИзмерения,
	|	ДлинаЕдиницыИзмерения.Код КАК ДлинаЕдиницаИзмеренияКодОКЕИ,
	|	&Длина КАК ДлинаЕдиницаИзмеренияТипИзмеряемойВеличины,
	|	ДлинаЕдиницыИзмерения.НаименованиеПолное КАК ДлинаЕдиницаИзмеренияНаименованиеПолное,
	|	ДлинаЕдиницыИзмерения.МеждународноеСокращение КАК ДлинаЕдиницаИзмеренияМеждународноеСокращение,
	|	""006 "" КАК ДлинаЕдиницаИзмеренияБазоваяЕдиница,
	|	ДлинаЕдиницыИзмерения.Числитель КАК ДлинаЕдиницаИзмеренияЧислитель,
	|	ДлинаЕдиницыИзмерения.Знаменатель КАК ДлинаЕдиницаИзмеренияЗнаменатель,
	|	СправочникНоменклатура.ОбъемЧислитель КАК ОбъемЧислитель,
	|	СправочникНоменклатура.ОбъемЗнаменатель КАК ОбъемЗнаменатель,
	|	ОбъемЕдиницыИзмерения.Наименование КАК ОбъемЕдиницаИзмерения,
	|	ОбъемЕдиницыИзмерения.Код КАК ОбъемЕдиницаИзмеренияКодОКЕИ,
	|	&Объем КАК ОбъемЕдиницаИзмеренияТипИзмеряемойВеличины,
	|	ОбъемЕдиницыИзмерения.НаименованиеПолное КАК ОбъемЕдиницаИзмеренияНаименованиеПолное,
	|	ОбъемЕдиницыИзмерения.МеждународноеСокращение КАК ОбъемЕдиницаИзмеренияМеждународноеСокращение,
	|	""113 "" КАК ОбъемЕдиницаИзмеренияБазоваяЕдиница,
	|	ОбъемЕдиницыИзмерения.Числитель КАК ОбъемЕдиницаИзмеренияЧислитель,
	|	ОбъемЕдиницыИзмерения.Знаменатель КАК ОбъемЕдиницаИзмеренияЗнаменатель,
	|	СправочникНоменклатура.ПлощадьЧислитель КАК ПлощадьЧислитель,
	|	СправочникНоменклатура.ПлощадьЗнаменатель КАК ПлощадьЗнаменатель,
	|	ПлощадьЕдиницыИзмерения.Наименование КАК ПлощадьЕдиницаИзмерения,
	|	ПлощадьЕдиницыИзмерения.Код КАК ПлощадьЕдиницаИзмеренияКодОКЕИ,
	|	&Площадь КАК ПлощадьЕдиницаИзмеренияТипИзмеряемойВеличины,
	|	ПлощадьЕдиницыИзмерения.НаименованиеПолное КАК ПлощадьЕдиницаИзмеренияНаименованиеПолное,
	|	ПлощадьЕдиницыИзмерения.МеждународноеСокращение КАК ПлощадьЕдиницаИзмеренияМеждународноеСокращение,
	|	""055 "" КАК ПлощадьЕдиницаИзмеренияБазоваяЕдиница,
	|	ПлощадьЕдиницыИзмерения.Числитель КАК ПлощадьЕдиницаИзмеренияЧислитель,
	|	ПлощадьЕдиницыИзмерения.Знаменатель КАК ПлощадьЕдиницаИзмеренияЗнаменатель,
	|	СправочникНоменклатура.НаименованиеПолное КАК НаименованиеТовараВУчетнойСистеме,
	|	СправочникНоменклатура.Код КАК КодТовараВУчетнойСистеме,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.ВидНоменклатуры.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Набор)
	|			ТОГДА Истина
	|		ИНАЧЕ Ложь
	|	КОНЕЦ КАК ЭтоНабор
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО ОтборНоменклатуры.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО (СправочникНоменклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО (ВЫБОР
	|				КОГДА ВидыНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры)
	|					ТОГДА ХарактеристикиНоменклатуры.Владелец = ОтборНоменклатуры.Номенклатура
	|							И &ВыгружатьИндивидуальныеХарактеристики = ИСТИНА
	|				КОГДА ВидыНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры)
	|					ТОГДА ХарактеристикиНоменклатуры.Владелец = ВидыНоменклатуры.Ссылка
	|							И ВидыНоменклатуры.ИспользоватьХарактеристики = ИСТИНА
	|							И НЕ ВидыНоменклатуры.Ссылка В (&ИсключенныеВидыНоменклатуры)
	|				КОГДА ВидыНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры)
	|					ТОГДА ХарактеристикиНоменклатуры.Владелец = СправочникНоменклатура.ВладелецХарактеристик
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Производители КАК Производители
	|		ПО (СправочникНоменклатура.Производитель = Производители.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Марки КАК Марки
	|		ПО (СправочникНоменклатура.Марка = Марки.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ВесЕдиницыИзмерения
	|		ПО (СправочникНоменклатура.ВесЕдиницаИзмерения = ВесЕдиницыИзмерения.Ссылка)
	|			И (ВесЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ДлинаЕдиницыИзмерения
	|		ПО (СправочникНоменклатура.ДлинаЕдиницаИзмерения = ДлинаЕдиницыИзмерения.Ссылка)
	|			И (ДлинаЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ОбъемЕдиницыИзмерения
	|		ПО (СправочникНоменклатура.ОбъемЕдиницаИзмерения = ОбъемЕдиницыИзмерения.Ссылка)
	|			И (ОбъемЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ПлощадьЕдиницыИзмерения
	|		ПО (СправочникНоменклатура.ПлощадьЕдиницаИзмерения = ПлощадьЕдиницыИзмерения.Ссылка)
	|			И (ПлощадьЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь))
	|ГДЕ
	|	(ХарактеристикиНоменклатуры.Ссылка = ОтборНоменклатуры.Характеристика
	|			ИЛИ ОтборНоменклатуры.Характеристика ЕСТЬ NULL)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтборНоменклатуры.Номенклатура КАК Номенклатура,
	|	ОтборНоменклатуры.ВидНоменклатуры КАК Категория,
	|	ОтборНоменклатуры.ВидНоменклатуры.Наименование КАК Наименование,
	|	ОтборНоменклатуры.ВидНоменклатуры.Родитель КАК Родитель
	|ПОМЕСТИТЬ Категории
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|ГДЕ
	|	ОтборНоменклатуры.ВидНоменклатуры <> ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|	И (ЕСТЬNULL(ОтборНоменклатуры.Характеристика, ИСТИНА), ИСТИНА) В
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(ЕСТЬNULL(ТаблицаУсловия.Характеристика, ИСТИНА)),
	|				ИСТИНА
	|			ИЗ
	|				ОтборНоменклатуры КАК ТаблицаУсловия
	|			ГДЕ
	|				ТаблицаУсловия.Номенклатура = ОтборНоменклатуры.Номенклатура)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтборНоменклатуры.Номенклатура,
	|	ОтборНоменклатуры.ВидНоменклатуры.Родитель,
	|	ОтборНоменклатуры.ВидНоменклатуры.Родитель.Наименование,
	|	ОтборНоменклатуры.ВидНоменклатуры.Родитель.Родитель
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|ГДЕ
	|	ОтборНоменклатуры.ВидНоменклатуры.Родитель <> ЗНАЧЕНИЕ(Справочник.ВидыНоменклатуры.ПустаяСсылка)
	|	И (ЕСТЬNULL(ОтборНоменклатуры.Характеристика, ИСТИНА), ИСТИНА) В
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(ЕСТЬNULL(ТаблицаУсловия.Характеристика, ИСТИНА)),
	|				ИСТИНА
	|			ИЗ
	|				ОтборНоменклатуры КАК ТаблицаУсловия
	|			ГДЕ
	|				ТаблицаУсловия.Номенклатура = ОтборНоменклатуры.Номенклатура)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтборНоменклатуры.Номенклатура,
	|	ОтборНоменклатуры.Родитель,
	|	ОтборНоменклатуры.Родитель.Наименование,
	|	ОтборНоменклатуры.Родитель.Родитель
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|ГДЕ
	|	ОтборНоменклатуры.Родитель <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И (ЕСТЬNULL(ОтборНоменклатуры.Характеристика, ИСТИНА), ИСТИНА) В
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(ЕСТЬNULL(ТаблицаУсловия.Характеристика, ИСТИНА)),
	|				ИСТИНА
	|			ИЗ
	|				ОтборНоменклатуры КАК ТаблицаУсловия
	|			ГДЕ
	|				ТаблицаУсловия.Номенклатура = ОтборНоменклатуры.Номенклатура)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтборНоменклатуры.Номенклатура,
	|	ОтборНоменклатуры.Родитель.Родитель,
	|	ОтборНоменклатуры.Родитель.Родитель.Наименование,
	|	ОтборНоменклатуры.Родитель.Родитель.Родитель
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|ГДЕ
	|	ОтборНоменклатуры.Родитель.Родитель <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И (ЕСТЬNULL(ОтборНоменклатуры.Характеристика, ИСТИНА), ИСТИНА) В
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(ЕСТЬNULL(ТаблицаУсловия.Характеристика, ИСТИНА)),
	|				ИСТИНА
	|			ИЗ
	|				ОтборНоменклатуры КАК ТаблицаУсловия
	|			ГДЕ
	|				ТаблицаУсловия.Номенклатура = ОтборНоменклатуры.Номенклатура)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураДополнительныеРеквизиты.Ссылка КАК Номенклатура,
	|	NULL КАК Характеристика,
	|	НоменклатураДополнительныеРеквизиты.Свойство КАК Свойство,
	|	НоменклатураДополнительныеРеквизиты.Значение КАК Значение,
	|	ЛОЖЬ КАК РеквизитХарактеристики
	|ПОМЕСТИТЬ Свойства
	|ИЗ
	|	Справочник.Номенклатура.ДополнительныеРеквизиты КАК НоменклатураДополнительныеРеквизиты
	|ГДЕ
	|	НЕ НоменклатураДополнительныеРеквизиты.Свойство В (&ИсключенныеДополнительныеРеквизиты)
	|	И ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				ОтборНоменклатуры КАК Товары
	|			ГДЕ
	|				Товары.Номенклатура = НоменклатураДополнительныеРеквизиты.Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ХарактеристикиНоменклатурыДополнительныеРеквизиты.Свойство,
	|	ХарактеристикиНоменклатурыДополнительныеРеквизиты.Значение,
	|	ИСТИНА
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры.ДополнительныеРеквизиты КАК ХарактеристикиНоменклатурыДополнительныеРеквизиты
	|		ПО Товары.Характеристика = ХарактеристикиНоменклатурыДополнительныеРеквизиты.Ссылка
	|ГДЕ
	|	НЕ ХарактеристикиНоменклатурыДополнительныеРеквизиты.Свойство В (&ИсключенныеДополнительныеРеквизиты)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка,
	|	NULL,
	|	&Свойство,
	|	&Значение,
	|	ЛОЖЬ
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ГДЕ
	|	ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				ОтборНоменклатуры КАК Товары
	|			ГДЕ
	|				Товары.Номенклатура = СправочникНоменклатура.Ссылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтборНоменклатуры.Номенклатура КАК Номенклатура,
	|	Штрихкоды.Характеристика КАК Характеристика,
	|	Штрихкоды.Упаковка КАК Упаковка,
	|	Штрихкоды.Штрихкод КАК Штрихкод
	|ПОМЕСТИТЬ Штрихкоды
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|		ПО ОтборНоменклатуры.Номенклатура = Штрихкоды.Номенклатура
	|			И ОтборНоменклатуры.Характеристика = Штрихкоды.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтборНоменклатуры.Номенклатура,
	|	Штрихкоды.Характеристика,
	|	Штрихкоды.Упаковка,
	|	Штрихкоды.Штрихкод
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|		ПО ОтборНоменклатуры.Номенклатура = Штрихкоды.Номенклатура
	|			И (ОтборНоменклатуры.Характеристика ЕСТЬ NULL)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтборНоменклатуры.Номенклатура КАК Номенклатура,
	|	NULL КАК Характеристика,
	|	УпаковкиНоменклатуры.Ссылка КАК Ссылка,
	|	УпаковкиНоменклатуры.Наименование КАК Наименование,
	|	УпаковкиНоменклатуры.Родитель КАК Родитель,
	|	УпаковкиНоменклатуры.Родитель.Наименование КАК РодительНаименование,
	|	УпаковкиНоменклатуры.ЕдиницаИзмерения.Код КАК ЕдиницаКодОКЕИ,
	|	УпаковкиНоменклатуры.ЕдиницаИзмерения.Наименование КАК ЕдиницаНаименование,
	|	УпаковкиНоменклатуры.Числитель КАК Числитель,
	|	УпаковкиНоменклатуры.Знаменатель КАК Знаменатель,
	|	УпаковкиНоменклатуры.Вес КАК Вес,
	|	ВесЕдиницыИзмерения.Наименование КАК ВесЕдиницаИзмерения,
	|	ВесЕдиницыИзмерения.Код КАК ВесЕдиницаИзмеренияКодОКЕИ,
	|	&Вес КАК ВесЕдиницаИзмеренияТипИзмеряемойВеличины,
	|	ВесЕдиницыИзмерения.НаименованиеПолное КАК ВесЕдиницаИзмеренияНаименованиеПолное,
	|	ВесЕдиницыИзмерения.МеждународноеСокращение КАК ВесЕдиницаИзмеренияМеждународноеСокращение,
	|	""166 "" КАК ВесЕдиницаИзмеренияБазоваяЕдиница,
	|	ВесЕдиницыИзмерения.Числитель КАК ВесЕдиницаИзмеренияЧислитель,
	|	ВесЕдиницыИзмерения.Знаменатель КАК ВесЕдиницаИзмеренияЗнаменатель,
	|	УпаковкиНоменклатуры.Объем КАК Объем,
	|	ОбъемЕдиницыИзмерения.Наименование КАК ОбъемЕдиницаИзмерения,
	|	ОбъемЕдиницыИзмерения.Код КАК ОбъемЕдиницаИзмеренияКодОКЕИ,
	|	&Объем КАК ОбъемЕдиницаИзмеренияТипИзмеряемойВеличины,
	|	ОбъемЕдиницыИзмерения.НаименованиеПолное КАК ОбъемЕдиницаИзмеренияНаименованиеПолное,
	|	ОбъемЕдиницыИзмерения.МеждународноеСокращение КАК ОбъемЕдиницаИзмеренияМеждународноеСокращение,
	|	""113 "" КАК ОбъемЕдиницаИзмеренияБазоваяЕдиница,
	|	ОбъемЕдиницыИзмерения.Числитель КАК ОбъемЕдиницаИзмеренияЧислитель,
	|	ОбъемЕдиницыИзмерения.Знаменатель КАК ОбъемЕдиницаИзмеренияЗнаменатель,
	|	УпаковкиНоменклатуры.Высота КАК Высота,
	|	ВысотаЕдиницыИзмерения.Наименование КАК ВысотаЕдиницаИзмерения,
	|	ВысотаЕдиницыИзмерения.Код КАК ВысотаЕдиницаИзмеренияКодОКЕИ,
	|	&Длина КАК ВысотаЕдиницаИзмеренияТипИзмеряемойВеличины,
	|	ВысотаЕдиницыИзмерения.НаименованиеПолное КАК ВысотаЕдиницаИзмеренияНаименованиеПолное,
	|	ВысотаЕдиницыИзмерения.МеждународноеСокращение КАК ВысотаЕдиницаИзмеренияМеждународноеСокращение,
	|	""006 "" КАК ВысотаЕдиницаИзмеренияБазоваяЕдиница,
	|	ВысотаЕдиницыИзмерения.Числитель КАК ВысотаЕдиницаИзмеренияЧислитель,
	|	ВысотаЕдиницыИзмерения.Знаменатель КАК ВысотаЕдиницаИзмеренияЗнаменатель,
	|	УпаковкиНоменклатуры.Ширина КАК Ширина,
	|	ШиринаЕдиницыИзмерения.Наименование КАК ШиринаЕдиницаИзмерения,
	|	ШиринаЕдиницыИзмерения.Код КАК ШиринаЕдиницаИзмеренияКодОКЕИ,
	|	&Длина КАК ШиринаЕдиницаИзмеренияТипИзмеряемойВеличины,
	|	ШиринаЕдиницыИзмерения.НаименованиеПолное КАК ШиринаЕдиницаИзмеренияНаименованиеПолное,
	|	ШиринаЕдиницыИзмерения.МеждународноеСокращение КАК ШиринаЕдиницаИзмеренияМеждународноеСокращение,
	|	""006 "" КАК ШиринаЕдиницаИзмеренияБазоваяЕдиница,
	|	ШиринаЕдиницыИзмерения.Числитель КАК ШиринаЕдиницаИзмеренияЧислитель,
	|	ШиринаЕдиницыИзмерения.Знаменатель КАК ШиринаЕдиницаИзмеренияЗнаменатель,
	|	УпаковкиНоменклатуры.Глубина КАК Глубина,
	|	ГлубинаЕдиницыИзмерения.Наименование КАК ГлубинаЕдиницаИзмерения,
	|	ГлубинаЕдиницыИзмерения.Код КАК ГлубинаЕдиницаИзмеренияКодОКЕИ,
	|	&Длина КАК ГлубинаЕдиницаИзмеренияТипИзмеряемойВеличины,
	|	ГлубинаЕдиницыИзмерения.НаименованиеПолное КАК ГлубинаЕдиницаИзмеренияНаименованиеПолное,
	|	ГлубинаЕдиницыИзмерения.МеждународноеСокращение КАК ГлубинаЕдиницаИзмеренияМеждународноеСокращение,
	|	""006 "" КАК ГлубинаЕдиницаИзмеренияБазоваяЕдиница,
	|	ГлубинаЕдиницыИзмерения.Числитель КАК ГлубинаЕдиницаИзмеренияЧислитель,
	|	ГлубинаЕдиницыИзмерения.Знаменатель КАК ГлубинаЕдиницаИзмеренияЗнаменатель
	|ПОМЕСТИТЬ Упаковки
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (ВЫБОР
	|				КОГДА ОтборНоменклатуры.Номенклатура.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры)
	|					ТОГДА УпаковкиНоменклатуры.Владелец = ОтборНоменклатуры.Номенклатура
	|				КОГДА ОтборНоменклатуры.Номенклатура.НаборУпаковок <> ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ПустаяСсылка)
	|					ТОГДА УпаковкиНоменклатуры.Владелец = ОтборНоменклатуры.Номенклатура.НаборУпаковок
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ВесЕдиницыИзмерения
	|		ПО (УпаковкиНоменклатуры.ВесЕдиницаИзмерения = ВесЕдиницыИзмерения.Ссылка)
	|			И (ВесЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ОбъемЕдиницыИзмерения
	|		ПО (УпаковкиНоменклатуры.ОбъемЕдиницаИзмерения = ОбъемЕдиницыИзмерения.Ссылка)
	|			И (ОбъемЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ВысотаЕдиницыИзмерения
	|		ПО (УпаковкиНоменклатуры.ВысотаЕдиницаИзмерения = ВысотаЕдиницыИзмерения.Ссылка)
	|			И (ВысотаЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ШиринаЕдиницыИзмерения
	|		ПО (УпаковкиНоменклатуры.ШиринаЕдиницаИзмерения = ШиринаЕдиницыИзмерения.Ссылка)
	|			И (ШиринаЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК ГлубинаЕдиницыИзмерения
	|		ПО (УпаковкиНоменклатуры.ГлубинаЕдиницаИзмерения = ГлубинаЕдиницыИзмерения.Ссылка)
	|			И (ГлубинаЕдиницыИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина))
	|ГДЕ
	|	(ЕСТЬNULL(ОтборНоменклатуры.Характеристика, ИСТИНА), ИСТИНА) В
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(ЕСТЬNULL(ТаблицаУсловия.Характеристика, ИСТИНА)),
	|				ИСТИНА
	|			ИЗ
	|				ОтборНоменклатуры КАК ТаблицаУсловия
	|			ГДЕ
	|				ТаблицаУсловия.Номенклатура = ОтборНоменклатуры.Номенклатура)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтборНоменклатуры.Номенклатура КАК Номенклатура,
	|	NULL КАК Характеристика,
	|	&ОКПД2 КАК Наименование,
	|	КлассификаторОКПД2.Код КАК Код,
	|	КлассификаторОКПД2.Наименование КАК Описание
	|ПОМЕСТИТЬ Классификаторы
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторОКПД2 КАК КлассификаторОКПД2
	|		ПО ОтборНоменклатуры.Номенклатура.КодОКПД2 = КлассификаторОКПД2.Ссылка
	|ГДЕ
	|	(ЕСТЬNULL(ОтборНоменклатуры.Характеристика, ИСТИНА), ИСТИНА) В
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(ЕСТЬNULL(ТаблицаУсловия.Характеристика, ИСТИНА)),
	|				ИСТИНА
	|			ИЗ
	|				ОтборНоменклатуры КАК ТаблицаУсловия
	|			ГДЕ
	|				ТаблицаУсловия.Номенклатура = ОтборНоменклатуры.Номенклатура)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтборНоменклатуры.Номенклатура,
	|	NULL,
	|	&ТНВЭД,
	|	КлассификаторТНВЭД.Код,
	|	КлассификаторТНВЭД.Наименование
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|		ПО ОтборНоменклатуры.Номенклатура.КодТНВЭД = КлассификаторТНВЭД.Ссылка
	|ГДЕ
	|	(ЕСТЬNULL(ОтборНоменклатуры.Характеристика, ИСТИНА), ИСТИНА) В
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(ЕСТЬNULL(ТаблицаУсловия.Характеристика, ИСТИНА)),
	|				ИСТИНА
	|			ИЗ
	|				ОтборНоменклатуры КАК ТаблицаУсловия
	|			ГДЕ
	|				ТаблицаУсловия.Номенклатура = ОтборНоменклатуры.Номенклатура)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтборНоменклатуры.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика,
	|	&КодПродукцииЕГАИС,
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.Код,
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.Наименование
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ОтборНоменклатуры.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И ОтборНоменклатуры.Характеристика = СоответствиеНоменклатурыЕГАИС.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтборНоменклатуры.Номенклатура,
	|	СоответствиеНоменклатурыЕГАИС.Характеристика,
	|	&КодПродукцииЕГАИС,
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.Код,
	|	СоответствиеНоменклатурыЕГАИС.АлкогольнаяПродукция.Наименование
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыЕГАИС КАК СоответствиеНоменклатурыЕГАИС
	|		ПО ОтборНоменклатуры.Номенклатура = СоответствиеНоменклатурыЕГАИС.Номенклатура
	|			И (ОтборНоменклатуры.Характеристика ЕСТЬ NULL)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтборНоменклатуры.Номенклатура,
	|	СоответствиеНоменклатурыВЕТИС.Характеристика,
	|	&ИдентификаторВЕТИС,
	|	СоответствиеНоменклатурыВЕТИС.Продукция.Идентификатор,
	|	СоответствиеНоменклатурыВЕТИС.Продукция.Наименование
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО ОтборНоменклатуры.Номенклатура = СоответствиеНоменклатурыВЕТИС.Номенклатура
	|			И ОтборНоменклатуры.Характеристика = СоответствиеНоменклатурыВЕТИС.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтборНоменклатуры.Номенклатура,
	|	СоответствиеНоменклатурыВЕТИС.Характеристика,
	|	&ИдентификаторВЕТИС,
	|	СоответствиеНоменклатурыВЕТИС.Продукция.Идентификатор,
	|	СоответствиеНоменклатурыВЕТИС.Продукция.Наименование
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыВЕТИС КАК СоответствиеНоменклатурыВЕТИС
	|		ПО ОтборНоменклатуры.Номенклатура = СоответствиеНоменклатурыВЕТИС.Номенклатура
	|			И (ОтборНоменклатуры.Характеристика ЕСТЬ NULL)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтборНоменклатуры.Номенклатура,
	|	NULL,
	|	&ОКВЭД2,
	|	КлассификаторОКВЭД2.Код,
	|	КлассификаторОКВЭД2.Наименование
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлассификаторОКВЭД2 КАК КлассификаторОКВЭД2
	|		ПО ОтборНоменклатуры.Номенклатура.КодОКВЭД2 = КлассификаторОКВЭД2.Ссылка
	|ГДЕ
	|	(ЕСТЬNULL(ОтборНоменклатуры.Характеристика, ИСТИНА), ИСТИНА) В
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(ЕСТЬNULL(ТаблицаУсловия.Характеристика, ИСТИНА)),
	|				ИСТИНА
	|			ИЗ
	|				ОтборНоменклатуры КАК ТаблицаУсловия
	|			ГДЕ
	|				ТаблицаУсловия.Номенклатура = ОтборНоменклатуры.Номенклатура)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтборНоменклатуры.Номенклатура КАК Номенклатура,
	|	Сертификаты.Характеристика КАК Характеристика,
	|	Сертификаты.СертификатНоменклатуры.Ссылка КАК Сертификат,
	|	Сертификаты.СертификатНоменклатуры.Номер КАК Номер,
	|	Сертификаты.СертификатНоменклатуры.ДатаНачалаСрокаДействия КАК ДатаНачалаСрокаДействия,
	|	Сертификаты.СертификатНоменклатуры.ДатаОкончанияСрокаДействия КАК ДатаОкончанияСрокаДействия,
	|	Сертификаты.СертификатНоменклатуры.ТипСертификата КАК ТипСертификата,
	|	Сертификаты.СертификатНоменклатуры.ОрганВыдавшийДокумент КАК ОрганВыдавшийДокумент
	|ПОМЕСТИТЬ Сертификаты
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОбластиДействияСертификатовНоменклатуры КАК Сертификаты
	|		ПО ОтборНоменклатуры.Номенклатура = Сертификаты.Номенклатура
	|			И ОтборНоменклатуры.Характеристика = Сертификаты.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОтборНоменклатуры.Номенклатура,
	|	Сертификаты.Характеристика,
	|	Сертификаты.СертификатНоменклатуры.Ссылка,
	|	Сертификаты.СертификатНоменклатуры.Номер,
	|	Сертификаты.СертификатНоменклатуры.ДатаНачалаСрокаДействия,
	|	Сертификаты.СертификатНоменклатуры.ДатаОкончанияСрокаДействия,
	|	Сертификаты.СертификатНоменклатуры.ТипСертификата,
	|	Сертификаты.СертификатНоменклатуры.ОрганВыдавшийДокумент
	|ИЗ
	|	ОтборНоменклатуры КАК ОтборНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОбластиДействияСертификатовНоменклатуры КАК Сертификаты
	|		ПО ОтборНоменклатуры.Номенклатура = Сертификаты.Номенклатура
	|			И (ОтборНоменклатуры.Характеристика ЕСТЬ NULL)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("КодПродукцииЕГАИС", "EGAIS_code");
	Запрос.УстановитьПараметр("ИдентификаторВЕТИС", "Mercury");
	ДобавитьРеквизитыНоменклатурыВЗапрос(Запрос);

КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПолучитьТоварныеГруппыНоменклатуры.
Процедура ПолучитьТоварныеГруппыНоменклатуры(ТоварныеГруппыНоменклатуры) Экспорт 
	Номенклатура     = Новый Массив;
	ВидыНоменклатуры = Новый Массив;
	Для каждого ЭлементКоллекции Из ТоварныеГруппыНоменклатуры Цикл
		СсылкаНаОбъект = ЭлементКоллекции.Ключ;
		Если ТипЗнч(СсылкаНаОбъект) = Тип("СправочникСсылка.Номенклатура") Тогда
			Номенклатура.Добавить(СсылкаНаОбъект);
		ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("СправочникСсылка.ВидыНоменклатуры") Тогда
			ВидыНоменклатуры.Добавить(СсылкаНаОбъект);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка,
	|	Номенклатура.ОсобенностьУчета КАК ТоварнаяГруппа
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В(&Номенклатура)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыНоменклатуры.Ссылка,
	|	ВидыНоменклатуры.ОсобенностьУчета
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|ГДЕ
	|	ВидыНоменклатуры.Ссылка В(&ВидыНоменклатуры)";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ВидыНоменклатуры", ВидыНоменклатуры);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТоварныеГруппыНоменклатуры.Вставить(Выборка.Ссылка, ТоварнаяГруппаСервиса(Выборка.ТоварнаяГруппа));	
	КонецЦикла;
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ПредставлениеТоварныхГрупп.
Процедура ПредставлениеТоварныхГрупп(ЗаголовокТоварныхГрупп, ТоварныеГруппыСервиса) Экспорт 
	ЗаголовокТоварныхГрупп = НСтр("ru = 'особенность учета'");
	
	СоответствиеТоварныхГрупп = СоответствиеТоварныхГрупп(); 
	
	Для каждого ТоварнаяГруппа Из ТоварныеГруппыСервиса Цикл
		ТоварныеГруппыСервиса.Вставить(ТоварнаяГруппа.Ключ, СоответствиеТоварныхГрупп.Получить(ТоварнаяГруппа.Ключ));
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

//-- Локализация

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ Локализация

// Прикрепление изображений к номенклатуре по массиву адресов.
//
// Параметры:
//  НоменклатураСсылка	 - СправочникСсылка.Номенклатура - владелец изображений.
//  СсылкиНаИзображения	 - Массив из Строка - ссылки на изображения.
//
Процедура ПрикрепитьИзображения(НоменклатураСсылка, СсылкиНаИзображения) Экспорт
	ЭтоСсылка = ТипЗнч(НоменклатураСсылка) = Тип("СправочникСсылка.Номенклатура");
	
	СозданныеИзображения = Новый Массив;
	
	Для каждого ИзображениеURL Из СсылкиНаИзображения Цикл
		
		ДанныеИзображения = ДвоичныеДанныеПоАдресуURL(ИзображениеURL);
		
		ИмяИзображения = "";
		РасширениеИзображения = "";
		
		ПодстрокиАдреса = СтрРазделить(ИзображениеURL, "/");
		
		Если ПодстрокиАдреса.Количество() > 0  Тогда
			ИмяИзображения = ПодстрокиАдреса[ПодстрокиАдреса.ВГраница()];
			
			ПодстрокиИмени = СтрРазделить(ИмяИзображения, ".");
			
			Если ПодстрокиИмени.Количество() = 2 Тогда
				ИмяИзображения = ПодстрокиИмени[0];	
				РасширениеИзображения = ПодстрокиИмени[1];	
			КонецЕсли;	
		КонецЕсли;
		
		ПараметрыФайла = Новый Структура();
		ПараметрыФайла.Вставить("Автор", Пользователи.АвторизованныйПользователь());
		ПараметрыФайла.Вставить("ВладелецФайлов", ?(ЭтоСсылка,НоменклатураСсылка,НоменклатураСсылка.Ссылка));
		ПараметрыФайла.Вставить("ИмяБезРасширения", ИмяИзображения);
		ПараметрыФайла.Вставить("РасширениеБезТочки", РасширениеИзображения);
		ПараметрыФайла.Вставить("ВремяИзмененияУниверсальное");
		
		СозданныеИзображения.Добавить(
			РаботаСФайлами.ДобавитьФайл(ПараметрыФайла, ПоместитьВоВременноеХранилище(ДанныеИзображения)));
		
	КонецЦикла;
	
	Если СозданныеИзображения.Количество() > 0 Тогда
		
		НачатьТранзакцию();
		
		Попытка
						
			УстановитьИсключительнуюБлокировкуПоСсылке(НоменклатураСсылка);
				
			НоменклатураОбъект = ?(ЭтоСсылка, НоменклатураСсылка.ПолучитьОбъект(), НоменклатураСсылка);
			НоменклатураОбъект.ФайлКартинки = СозданныеИзображения[0];
			НоменклатураОбъект.ОбменДанными.Загрузка = Истина;
			
			НоменклатураОбъект.Записать();
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение;
		КонецПопытки;
			
	КонецЕсли;
КонецПроцедуры

// Получение значения ставки НДС по идентификатору.
//
// Параметры:
//  Значение - Строка - значение ставки НДС (-, 10, 18, 20).
//  Ссылка	 - СправочникСсылка, ПеречислениеСсылка - ссылка на значение ставки НДС прикладного решения.
//
Процедура ПреобразоватьСтавкуНДССервиса(Знач Значение, Ссылка) Экспорт
	СоответствиеСтавокНСД = УчетНДСРФ.СоответствиеСтавокНДССтроковымЗначениям();
	Если СтрЗаканчиваетсяНа(Значение, "%") Тогда
		ЗначениеСтавки = Лев(Значение, СтрДлина(Значение) - 1);
	Иначе
		ЗначениеСтавки = Значение;	
	КонецЕсли;
	Ссылка = СоответствиеСтавокНСД.Получить(ЗначениеСтавки);
	
	Если Ссылка = Неопределено Тогда
		Ссылка = Справочники.СтавкиНДС.БезНДС;
	КонецЕсли;
КонецПроцедуры

// Поиск и создание единицы измерения, на основании данных сервиса
//
// Параметры:
//  ЕдиницаИзмеренияСервиса	 - Структура - см. в РаботаСНоменклатурой.ДанныеНоменклатурыСервиса, колонка ЕдиницаИзмерения.
//  ЕдиницуИзмеренияСсылка	 - СправочникСсылка.УпаковкиЕдиницыИзмерения - ссылка на созданную единицу измерения.
//
Процедура ЕдиницаИзмеренияПоДаннымСервиса(ЕдиницаИзмеренияСервиса, ЕдиницуИзмеренияСсылка) Экспорт 
	ЕдиницаИзмеренияВБазе(ЕдиницаИзмеренияСервиса, ЕдиницуИзмеренияСсылка);
	
	Если ЕдиницуИзмеренияСсылка <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЕдиницуИзмеренияСсылка = Справочники.УпаковкиЕдиницыИзмерения.СоздатьЭлемент();
	
	ЕдиницуИзмеренияСсылка.Наименование = СокрЛП(ЕдиницаИзмеренияСервиса.Наименование);
	
	ЕдиницуИзмеренияСсылка.Записать();
КонецПроцедуры

// См. РаботаСНоменклатуройПереопределяемый.ЗаполнитьЗначенияРеквизитовХарактеристики.
Процедура ЗаполнитьЗначенияРеквизитовХарактеристики(ЗначенияДополнительныхРеквизитов, Характеристика)
	
	ЗначенияДополнительныхРеквизитов.Очистить();
	
	Для каждого Свойство Из Характеристика.ДополнительныеРеквизиты Цикл
		
		Если Не ЗначениеЗаполнено(Свойство.РеквизитИнформационнойБазы) Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ЗначенияДополнительныхРеквизитов.Добавить();
		
		НоваяСтрока.Свойство = Свойство.РеквизитИнформационнойБазы;
		НоваяСтрока.Значение = РаботаСНоменклатурой.ЗначениеДополнительногоРеквизита(Свойство);
		
	КонецЦикла;
КонецПроцедуры

//-- Локализация

Функция ПолучитьДанныеШтрихкода(Штрихкод) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Номенклатура,
	|	ШтрихкодыНоменклатуры.Характеристика,
	|	ШтрихкодыНоменклатуры.Упаковка
	|ИЗ
	|	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|ГДЕ
	|	ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод";
	
	Запрос.УстановитьПараметр("Штрихкод", Штрихкод);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ДанныеШтрихкода = Новый Структура("Номенклатура, Характеристика, Упаковка");
		ЗаполнитьЗначенияСвойств(ДанныеШтрихкода, Выборка);
		Возврат ДанныеШтрихкода;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Процедура ЗаполнитьНоменклатуруПоШтрихкоду(Форма, Номенклатура) Экспорт
	
	ШтрихКоды = РегистрыСведений.ШтрихкодыНоменклатуры.ШтрихкодыНоменклатуры(Номенклатура, 
		Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(), Номенклатура.ЕдиницаИзмерения);
	
	Если ШтрихКоды.Количество() > 0 Тогда
		НайденныеСтроки = Форма.ШтрихкодыНоменклатуры.НайтиСтроки(Новый Структура("Штрихкод", ШтрихКоды[0]));
		Для каждого ТекСтрока Из НайденныеСтроки Цикл
			ТекСтрока.Зарегистрирован = Истина;
			ТекСтрока.Номенклатура = Номенклатура;
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры

//++ Локализация

// Функция возвращает штрихкоды из входящих данных, которые еще не были загружены в систему.
//
// Параметры:
//  ДанныеПоШтрихкодам	 - ТаблицаЗначений - данные по штрихкодам из сервиса.
//                                           См. РаботаСНоменклатуройПереопределяемый.ЗаписатьШтрихкоды.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблица значений с колонками: Номенклатура, ЕдиницаИзмерения, Характеристика, Штрихкод.
//
Функция НовыеШтрихкоды(ДанныеПоШтрихкодам)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ДанныеПоШтрихкодам.Номенклатура КАК Номенклатура,
	|	ДанныеПоШтрихкодам.Характеристика КАК Характеристика,
	|	ДанныеПоШтрихкодам.Штрихкод КАК Штрихкод
	|ПОМЕСТИТЬ ШтрихкодыСервиса
	|ИЗ
	|	&ДанныеПоШтрихкодам КАК ДанныеПоШтрихкодам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтрихкодыСервиса.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ШтрихкодыСервиса.Номенклатура КАК Справочник.Номенклатура).ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ШтрихкодыСервиса.Характеристика КАК Характеристика,
	|	ШтрихкодыСервиса.Штрихкод КАК Штрихкод
	|ИЗ
	|	ШтрихкодыСервиса КАК ШтрихкодыСервиса
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК Штрихкоды
	|		ПО ШтрихкодыСервиса.Номенклатура = Штрихкоды.Номенклатура
	|			И ШтрихкодыСервиса.Характеристика = Штрихкоды.Характеристика
	|			И ШтрихкодыСервиса.Штрихкод = Штрихкоды.Штрихкод
	|ГДЕ
	|	Штрихкоды.Штрихкод ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("ДанныеПоШтрихкодам", ДанныеПоШтрихкодам);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Получение двоичных данных по адресу URL, например изображения.
//
// Параметры:
//  АдресURL - Строка - адрес хранения данных.
// 
// Возвращаемое значение:
//  ДвоичныеДанные - полученные данные.
//
Функция ДвоичныеДанныеПоАдресуURL(АдресURL)
	
	СтруктураURI = ОбщегоНазначенияКлиентСервер.СтруктураURI(АдресURL);
	
	ПараметрыСоединения = Новый Структура("Протокол, ИмяСервера, АдресРесурса, Порт, Таймаут, ЗащищенноеСоединение, Прокси");
	ПараметрыСоединения.Протокол     = СтруктураURI.Схема;
	ПараметрыСоединения.ИмяСервера   = СтруктураURI.Хост;
	ПараметрыСоединения.АдресРесурса = СтруктураURI.ПутьНаСервере;
	ПараметрыСоединения.Порт         = СтруктураURI.Порт;
	ПараметрыСоединения.Таймаут      = 30;
	ПараметрыСоединения.ЗащищенноеСоединение = ПараметрыСоединения.Протокол = "https";
	ПараметрыСоединения.Прокси = ПолучениеФайловИзИнтернета.ПолучитьПрокси(ПараметрыСоединения.Протокол);
	
	ЗащищенноеСоединение = Неопределено;
	Если ПараметрыСоединения.ЗащищенноеСоединение Тогда
		СертификатыУдостоверяющихЦентров = Неопределено;
		Если Не ОбщегоНазначения.ЭтоLinuxСервер() И Не ОбщегоНазначения.РазделениеВключено() Тогда
			// Ошибка фреша при работе с веб сервисами. Не работает проверка доверенных сертификатов при установке соединения.
			СертификатыУдостоверяющихЦентров = Новый СертификатыУдостоверяющихЦентровWindows;
		КонецЕсли;
		ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL(, СертификатыУдостоверяющихЦентров);
	КонецЕсли;
	
	Попытка
		Соединение = Новый HTTPСоединение(ПараметрыСоединения.ИмяСервера,
			ПараметрыСоединения.Порт,,, ПараметрыСоединения.Прокси, ПараметрыСоединения.Таймаут, ЗащищенноеСоединение);
	Исключение
		ВызватьИсключение НСтр("ru = 'Ошибка установки соединения при получении изображения'");
	КонецПопытки;
	
	HTTPЗапрос = Новый HTTPЗапрос(ПараметрыСоединения.АдресРесурса);
	
	Попытка
		HTTPОтвет = Соединение.Получить(HTTPЗапрос);
	Исключение
		ВызватьИсключение НСтр("ru = 'Ошибка получения изображения'");
	КонецПопытки;
	
	Возврат HTTPОтвет.ПолучитьТелоКакДвоичныеДанные();
	
КонецФункции

Процедура УстановитьИсключительнуюБлокировкуПоСсылке(Ссылка)
	
	Блокировка = Новый БлокировкаДанных();
	
	ЭлементБлокировки = Блокировка.Добавить(Ссылка.Метаданные().ПолноеИмя());
	ЭлементБлокировки.УстановитьЗначение("Ссылка", Ссылка);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
		
КонецПроцедуры

// Поиск единицы измерения в информационной базе, на основании данных сервиса
//
// Параметры:
//  ЕдиницаИзмеренияСервиса	 - Структура - см. в РаботаСНоменклатурой.ДанныеНоменклатурыСервиса, колонка ЕдиницаИзмерения.
//  ЕдиницуИзмеренияСсылка	 - СправочникСсылка - ссылка на созданную единицу измерения.
//
Процедура ЕдиницаИзмеренияВБазе(ЕдиницаИзмеренияСервиса, ЕдиницуИзмеренияСсылка)
	КодОКЕИ = "";
	СсылкаНаЕдиницуИзмерения = Неопределено;
	
	Если ЕдиницаИзмеренияСервиса.Свойство("ОКЕИ", КодОКЕИ) Тогда
		СоответствиеКодовОКЕИ = Справочники.УпаковкиЕдиницыИзмерения.ЗаполнитьЕдиницыИзмеренияИзКлассификатора(КодОКЕИ);
		СсылкаНаЕдиницуИзмерения = СоответствиеКодовОКЕИ[КодОКЕИ];
	КонецЕсли;
	
	Если СсылкаНаЕдиницуИзмерения <> Неопределено Тогда
		ЕдиницуИзмеренияСсылка = СсылкаНаЕдиницуИзмерения;
		Возврат ;
	КонецЕсли;
	
	НаименованиеЕдиницыИзмерения = СокрЛП(ЕдиницаИзмеренияСервиса.Наименование);
	
	Если НЕ ЗначениеЗаполнено(НаименованиеЕдиницыИзмерения) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ЕдиницыИзмерения.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.УпаковкиЕдиницыИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	ЕдиницыИзмерения.Наименование = &Наименование
	|	И ЕдиницыИзмерения.Код = """"";
	
	Запрос.УстановитьПараметр("Наименование", НаименованиеЕдиницыИзмерения);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	Если Выгрузка.Количество() > 0 Тогда
		ЕдиницуИзмеренияСсылка = Выгрузка[0].Ссылка;
	КонецЕсли;
КонецПроцедуры

// При объединении категорий в одну, метода заполняет представления дополнительных реквизитов на форма.
//
// Параметры:
//  Форма							 - ФормаКлиентскогоПриложения - форма вида номенклатуры.
//  ДанныеИнтерактивногоЗаполнения	 - см. РаботаСНоменклатурой.ДанныеКатегорийСервиса.
//
Процедура ЗаполнитьДополнительныеРеквизитыНаФорме(Форма, ДанныеИнтерактивногоЗаполнения)
	Объект = Форма.Объект;
	
	// Заполнение наименование на основании всех выбранных категорий при множественной привязке.
	
	Если ДанныеИнтерактивногоЗаполнения.Количество() > 1
		И Не ЗначениеЗаполнено(Объект.Наименование) Тогда
		
		Объект.Наименование =
			СтрСоединить(ДанныеИнтерактивногоЗаполнения.ВыгрузитьКолонку("Наименование"), "; ");
	КонецЕсли;
			
	// Заполнение дополнительных реквизитов и реквизитов характеристик.	
		
	ДанныеДополнительныхРеквизитов = РаботаСНоменклатурой.ОбъединитьДанныеДополнительныхРеквизитов(ДанныеИнтерактивногоЗаполнения);
	
	Для каждого ТекущийРеквизит Из ДанныеДополнительныхРеквизитов.ДополнительныеРеквизиты Цикл
		НоваяСтрока = Форма.ТаблицаДопРеквизитовНоменклатуры.Добавить();
		НоваяСтрока.ПредставлениеРеквизита = ТекущийРеквизит.Наименование;
	КонецЦикла;
	
	Для каждого ТекущийРеквизит Из ДанныеДополнительныхРеквизитов.Характеристики.ДополнительныеРеквизиты Цикл
		НоваяСтрока = Форма.ТаблицаДопРеквизитовХарактеристик.Добавить();
		НоваяСтрока.ПредставлениеРеквизита = ТекущийРеквизит.Наименование;
	КонецЦикла;
	
	// Установка варианта ведения учета характеристик.
	
	Если Форма.ТаблицаДопРеквизитовХарактеристик.Количество() > 0 Тогда
		Объект.ИспользоватьХарактеристики = Истина;	
		Объект.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры;
	КонецЕсли;
	
	// Блокировка дополнительных реквизитов.
	
	Форма.Элементы.ТаблицаДопРеквизитовНоменклатуры.ТолькоПросмотр = Истина;
	Форма.Элементы.ТаблицаДопРеквизитовХарактеристик.ТолькоПросмотр = Истина;
КонецПроцедуры

// Преобразование типа объекта сервиса в объект прикладного решения.
//
// Параметры:
//  Значение	 - Строка - тип объекта сервиса.
//  Результат	 - Произвольный - преобразованный тип.
//
Процедура ПреобразоватьТипНоменклатурыСервиса(Знач Значение, Результат)
	Если Значение = "Услуга" Тогда 
		Результат = Перечисления.ТипыНоменклатуры.Услуга;
	ИначеЕсли Значение = "Товар" Тогда 
		Результат = Перечисления.ТипыНоменклатуры.Товар;
	Иначе 
		Результат = Перечисления.ТипыНоменклатуры.ПустаяСсылка();	
	КонецЕсли;
КонецПроцедуры

Функция НайтиСоздатьПроизводителяПоНаименованию(Наименование)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Производитель.Ссылка КАК Производитель
	|ИЗ
	|	Справочник.Производители КАК Производитель
	|ГДЕ
	|	Производитель.Наименование = &Наименование
	|	И НЕ Производитель.ЭтоГруппа
	|	И НЕ Производитель.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Производитель;
	Иначе
		НовыйПроизводитель = Справочники.Производители.СоздатьЭлемент();
		НовыйПроизводитель.Наименование = Наименование;
		НовыйПроизводитель.Записать();
		Возврат НовыйПроизводитель.Ссылка
	КонецЕсли;
	
КонецФункции

Функция НайтиСоздатьБрендПоНаименованию(Наименование, Производитель)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Бренд.Ссылка КАК Бренд 
	|ИЗ
	|	Справочник.Марки КАК Бренд
	|ГДЕ
	|	Бренд.Наименование = &Наименование
	|	И НЕ Бренд.ЭтоГруппа
	|   И НЕ Бренд.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Бренд;
	Иначе
		НовыйБренд = Справочники.Марки.СоздатьЭлемент();
		НовыйБренд.Наименование = Наименование;
		НовыйБренд.Производитель = Производитель;
		НовыйБренд.Записать();		
		Возврат НовыйБренд.Ссылка
	КонецЕсли;
	
КонецФункции

// Дополнение в запрос источников по дополнительным реквизитам номенклатуры.
//
// Параметры:
//   Запрос - Запрос - основной запрос сбора данных.
//
Процедура ДобавитьРеквизитыНоменклатурыВЗапрос(Запрос)
	
	БлокРеквизитовШаблон = "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка,
	|	NULL,
	|	&Свойство,
	|	&Значение,
	|	ЛОЖЬ
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|ГДЕ
	|	ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				ОтборНоменклатуры КАК Товары
	|			ГДЕ
	|				Товары.Номенклатура = СправочникНоменклатура.Ссылка)";
	
	ДоступныеДляПубликацииРеквизиты = Новый Соответствие;
	ПолучитьРеквизитыНоменклатурыДоступныеДляПубликации(ДоступныеДляПубликацииРеквизиты);
	
	МассивПодзапросов = Новый Массив;
	СчетчикРеквизитов = 0;
	Для каждого СвойстваРеквизита Из ДоступныеДляПубликацииРеквизиты Цикл
		
		Если Запрос.Параметры.ИсключенныеДополнительныеРеквизиты.Найти(СвойстваРеквизита.Ключ) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ИндексСтрокой = XMLСтрока(СчетчикРеквизитов);
		ПутьКДанным   = СтрЗаменить(СвойстваРеквизита.Значение.ПутьКДанным, "Номенклатура.", "СправочникНоменклатура.");
		СчетчикРеквизитов = СчетчикРеквизитов + 1;
		ТекстПодзапроса = БлокРеквизитовШаблон;
		
		ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "&Значение", ПутьКДанным);
		ТекстПодзапроса = СтрЗаменить(ТекстПодзапроса, "&Свойство", "&Свойство" + ИндексСтрокой);
		
		Запрос.УстановитьПараметр("Свойство" + ИндексСтрокой, СвойстваРеквизита.Ключ);
		
		Если СвойстваРеквизита.Значение.Свойство("ПустоеЗначение") Тогда
			ТекстПодзапроса = ТекстПодзапроса + Символы.ПС
			+ "И НЕ "+ ПутьКДанным + " = &ПустоеЗначение" + ИндексСтрокой;
			Запрос.УстановитьПараметр("ПустоеЗначение" + ИндексСтрокой,
			СвойстваРеквизита.Значение.ПустоеЗначение);
		КонецЕсли;
		
		МассивПодзапросов.Добавить(ТекстПодзапроса);
		
	КонецЦикла;
	
	БлокРеквизитовПодстановка = СтрСоединить(МассивПодзапросов, Символы.ПС + Символы.ПС);
	
	// Если реквизиты не найдены, удалить БлокРеквизитовШаблон.
	Если ПустаяСтрока(БлокРеквизитовПодстановка) Тогда
		БлокРеквизитовПодстановка = "";
	КонецЕсли;
	
	Если СтрЧислоВхождений(Запрос.Текст, БлокРеквизитовШаблон) = 0 Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка компоновки запроса получения данных номенклатуры.'");
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, БлокРеквизитовШаблон, БлокРеквизитовПодстановка);
	
КонецПроцедуры

Функция ТоварнаяГруппаСервиса(ОсобенностьУчета)

	Возврат СоответствиеТоварныхГрупп().Получить(ОсобенностьУчета);

КонецФункции

Функция СоответствиеТоварныхГрупп()

	СоответствиеТоварныхГрупп = Новый Соответствие;
	СоответствиеТоварныхГрупп.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.Велосипеды, "Велосипеды");
	СоответствиеТоварныхГрупп.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.Духи, "Духи");
	СоответствиеТоварныхГрупп.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.КреслаКоляски, "КреслаКоляски");
	СоответствиеТоварныхГрупп.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.ЛегкаяПромышленность, "ЛегкаяПромышленность");
	СоответствиеТоварныхГрупп.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС, "МолочнаяПродукция");
	СоответствиеТоварныхГрупп.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияБезВЕТИС, "МолочнаяПродукция");
	СоответствиеТоварныхГрупп.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция, "ОбувнаяПродукция");
	СоответствиеТоварныхГрупп.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция, "ТабачнаяПродукция");
	СоответствиеТоварныхГрупп.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.Фотоаппараты, "Фотоаппараты");
	СоответствиеТоварныхГрупп.Вставить(Перечисления.ОсобенностиУчетаНоменклатуры.Шины, "Шины");

	СоответствиеТоварныхГрупп.Вставить("Велосипеды", Перечисления.ОсобенностиУчетаНоменклатуры.Велосипеды);
	СоответствиеТоварныхГрупп.Вставить("Духи", Перечисления.ОсобенностиУчетаНоменклатуры.Духи);
	СоответствиеТоварныхГрупп.Вставить("КреслаКоляски", Перечисления.ОсобенностиУчетаНоменклатуры.КреслаКоляски);
	СоответствиеТоварныхГрупп.Вставить("ЛегкаяПромышленность", Перечисления.ОсобенностиУчетаНоменклатуры.ЛегкаяПромышленность);
	СоответствиеТоварныхГрупп.Вставить("МолочнаяПродукция", Перечисления.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС);
	СоответствиеТоварныхГрупп.Вставить("ОбувнаяПродукция", Перечисления.ОсобенностиУчетаНоменклатуры.ОбувнаяПродукция);
	СоответствиеТоварныхГрупп.Вставить("ТабачнаяПродукция", Перечисления.ОсобенностиУчетаНоменклатуры.ТабачнаяПродукция);
	СоответствиеТоварныхГрупп.Вставить("Фотоаппараты", Перечисления.ОсобенностиУчетаНоменклатуры.Фотоаппараты);
	СоответствиеТоварныхГрупп.Вставить("Шины", Перечисления.ОсобенностиУчетаНоменклатуры.Шины);

	Возврат СоответствиеТоварныхГрупп;

КонецФункции

//-- Локализация

#КонецОбласти
