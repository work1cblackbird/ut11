
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИсходящаяТранспортнаяОперацияВЕТИС") Тогда
		
		ИнтеграцияВЕТИСУТ.ЗаполнитьПеремещениеТоваровНаОснованииИсходящейТранспортнойОперацииВЕТИС(Объект, ДанныеЗаполнения);
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОформлениеСДИЗЗЕРНО") Тогда
		
		ИнтеграцияЗЕРНОУТ.ЗаполнитьПеремещениеТоваровНаОснованииОформленияСДИЗЗЕРНО(Объект, ДанныеЗаполнения);
		
	КонецЕсли;
	
	//-- Локализация
		
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	//++ Локализация
	Документы.ТранспортнаяНакладная.ОбновитьРеквизитыТранспортныхНакладныхПриЗаписиДокументаОснования(Объект, Отказ);
	//-- Локализация
	
	Возврат;
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.ПеремещениеТоваров - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт

//++ Локализация

	Объект.ШтрихкодыУпаковок.Очистить();

//-- Локализация

КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	//++ Локализация
	ОбменСГИСЭПДПереопределяемый.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	//-- Локализация
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-1 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ1";
		КомандаПечати.Представление = НСтр("ru='Акт о приеме-передаче ТМЦ на хранение (МХ-1)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 13;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		// МХ-3 
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "МХ3";
		КомандаПечати.Представление = НСтр("ru = 'Акт о возврате ТМЦ, сданных на хранение (МХ-3)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 14;
	КонецЕсли;
		
	
	// Накладная на внутреннее перемещение (ТОРГ-13)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТОРГ13";
	КомандаПечати.Представление = НСтр("ru = 'Накладная на внутреннее перемещение (ТОРГ-13)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 4;

	Документы.ТранспортнаяНакладная.ДобавитьКомандыПечати(КомандыПечати);
	
	// Требование-накладная (М-11)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьМ11";
	КомандаПечати.Идентификатор = "М11";
	КомандаПечати.Представление = НСтр("ru = 'Требование-накладная (М-11)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 6;	
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	//++ Локализация
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТОРГ13") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ТОРГ13",
			НСтр("ru = 'Накладная на внутреннее перемещение (ТОРГ-13)'"),
			СформироватьПечатнуюФормуТОРГ13(МассивОбъектов, ОбъектыПечати));
		
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

Процедура СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, КомплектПечатныхФорм) Экспорт
	//++ Локализация
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
		КомплектПечатныхФорм,
		МассивОбъектов,
		"ТТН");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		ОбъектыКоторыеМожноПечатать = Документы.ТранспортнаяНакладная.ОбъектыКоторыеМожноПечатать(КомплектПечати.Объекты);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Документы.ТранспортнаяНакладная.СформироватьПечатнуюФормуТТН(ОбъектыКоторыеМожноПечатать, ОбъектыПечати, ПараметрыПечати));
	КонецЦикла;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
		КомплектПечатныхФорм,
		МассивОбъектов,
		"М11");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		СтруктураТипов = Новый Соответствие;
		СтруктураТипов.Вставить("Документ.ПеремещениеТоваров", КомплектПечати.Объекты);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Обработки.ПечатьМ11.СформироватьПечатнуюФормуМ11(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЦикла;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
		КомплектПечатныхФорм,
		МассивОбъектов,
		"ТранспортнаяНакладная");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		ОбъектыКоторыеМожноПечатать = Документы.ТранспортнаяНакладная.ОбъектыКоторыеМожноПечатать(КомплектПечати.Объекты);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Документы.ТранспортнаяНакладная.СформироватьПечатнуюФормуТранспортнойНакладной(ОбъектыКоторыеМожноПечатать, ОбъектыПечати));
	КонецЦикла;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
		КомплектПечатныхФорм,
		МассивОбъектов,
		"МХ3");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		СтруктураТипов = Новый Соответствие;
		СтруктураТипов.Вставить("Документ.ПеремещениеТоваров", КомплектПечати.Объекты);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Обработки.ПечатьОбщихФорм.СформироватьПечатнуюФормуМХ3(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЦикла;
	
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
		КомплектПечатныхФорм,
		МассивОбъектов,
		"МХ1");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		СтруктураТипов = Новый Соответствие;
		СтруктураТипов.Вставить("Документ.ПеремещениеТоваров", КомплектПечати.Объекты);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			Обработки.ПечатьОбщихФорм.СформироватьПечатнуюФормуМХ1(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
	КонецЦикла;
		
	КомплектыПечатиПоОбъектам = РегистрыСведений.НастройкиПечатиОбъектов.КомплектыПечатиПоОбъектам(КоллекцияПечатныхФорм,
		КомплектПечатныхФорм,
		МассивОбъектов,
		"ТОРГ13");
	Для Каждого КомплектПечати Из КомплектыПечатиПоОбъектам Цикл
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			КомплектПечати.Имя,
			КомплектПечати.Представление,
			СформироватьПечатнуюФормуТОРГ13(КомплектПечати.Объекты, ОбъектыПечати));
	КонецЦикла;
	//-- Локализация
	
КонецПроцедуры

Процедура КомплектПечатныхФорм(КомплектПечатныхФорм) Экспорт
	//++ Локализация
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "ТОРГ13", НСтр("ru = 'Накладная на внутреннее перемещение (ТОРГ-13)'"),                2);
	РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "М11", НСтр("ru = 'Требование-накладная (М-11)'"),                                                            0);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьТТН") Тогда
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "ТТН", НСтр("ru = 'Товарно-транспортная накладная (1-Т)'"),                            0);
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "ТранспортнаяНакладная", НСтр("ru = 'Транспортная накладная'"),                        0);
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм,
			"МХ1", 
			НСтр("ru='Акт о приеме-передаче ТМЦ на хранение (МХ-1)'"),
			0);
	КонецЕсли; 
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОтветственноеХранение") Тогда
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм,
			"МХ3",
			НСтр("ru = 'Акт о возврате ТМЦ, сданных на хранение (МХ-3)'"),
			0);
	КонецЕсли;
	//-- Локализация
КонецПроцедуры

//++ Локализация

// Формирует табличный документ по унифицированной форме ТОРГ-13
//
// Возвращаемое значение
//  Табличный документ - унифицированная форма ТОРГ-13.
//
Функция СформироватьПечатнуюФормуТОРГ13(МассивОбъектов, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТоварКод = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(ТоварКод) Тогда
		ТоварКод = "Код";
	КонецЕсли;

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПеремещениеТоваров.ПФ_MXL_ТОРГ13_ru");
	Макет.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по-умолчанию
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеТоваров_ТОРГ13_";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Перемещение.Ссылка                                          КАК Ссылка,
	|	ЕСТЬNULL(Перемещение.ИсправляемыйДокумент.Номер, Перемещение.Номер) КАК Номер,
	|	ЕСТЬNULL(Перемещение.ИсправляемыйДокумент.Дата, Перемещение.Дата) КАК ДатаДокумента,
	|	Перемещение.Организация                                     КАК Организация,
	|	Перемещение.Организация.Префикс                             КАК Префикс,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Перемещение.СкладОтправитель)           КАК ОтправительПодразделение,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(Перемещение.СкладПолучатель)            КАК ПолучательПодразделение,
	|	Перемещение.СкладОтправитель.ТекущийОтветственный           КАК КладовщикОтправитель,
	|	Перемещение.СкладОтправитель.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщикаОтправителя,
	|	Перемещение.СкладПолучатель.ТекущийОтветственный            КАК КладовщикПолучатель,
	|	Перемещение.СкладПолучатель.ТекущаяДолжностьОтветственного  КАК ДолжностьКладовщикаПолучателя,
	|	Перемещение.ВидЦены                                         КАК УчетныйВидЦены,
	|	Перемещение.ВидЦены.ВалютаЦены                              КАК УчетныйВидЦеныВалютаЦены
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Перемещение
	|ГДЕ
	|	Перемещение.Ссылка В(&МассивПеремещений)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента, Ссылка
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1", СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("ПЕРВЫЕ %1", МассивОбъектов.Количество()));
	Запрос.УстановитьПараметр("МассивПеремещений", МассивОбъектов);
	Шапка = Запрос.ВыполнитьПакетСПромежуточнымиДанными()[0].Выбрать();
	
	ПоместитьВременнуюТаблицуНаборов(МенеджерВременныхТаблиц);
	
	ТекстЗапросаВыборкиСтрокТоваров25 = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ПеремещениеТоваров.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|	ПеремещениеТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	ПеремещениеТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ПеремещениеТоваров.ЭтоКомплектующие КАК ЭтоКомплектующие,
	|	ПеремещениеТоваров.ЭтоНабор КАК ЭтоНабор,
	|	ПеремещениеТоваров.ПолныйНабор КАК ПолныйНабор,
	|	ПеремещениеТоваров.НомерСтроки КАК НомерСтроки,
	|	ПеремещениеТоваров.НомерСтрокиНаборы КАК НомерСтрокиНаборы,
	|	ПеремещениеТоваров.Номенклатура КАК Номенклатура,
	|	ПеремещениеТоваров.Номенклатура КАК Товар,
	|	ПеремещениеТоваров.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВЫБОР
	|		КОГДА &ТоварКод = ""Код""
	|			ТОГДА ПеремещениеТоваров.Номенклатура.Код
	|		ИНАЧЕ ПеремещениеТоваров.Номенклатура.Артикул
	|	КОНЕЦ КАК ТоварКод,
	|	ПеремещениеТоваров.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ЕСТЬNULL(ВЫБОР
	|		КОГДА
	|			ВидыНоменклатуры.НастройкиКлючаЦенПоХарактеристике = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка)
	|		ИНАЧЕ ПеремещениеТоваров.Характеристика.ХарактеристикаНоменклатурыДляЦенообразования
	|	КОНЕЦ, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка)) КАК ХарактеристикаЦО,
	|	ЕСТЬNULL(ВЫБОР
	|		КОГДА ВидыНоменклатуры.НастройкиКлючаЦенПоСерии = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СерииНоменклатурыДляЦенообразования.ПустаяСсылка)
	|		ИНАЧЕ ПеремещениеТоваров.Серия.СерияНоменклатурыДляЦенообразования
	|	КОНЕЦ, ЗНАЧЕНИЕ(Справочник.СерииНоменклатурыДляЦенообразования.ПустаяСсылка)) КАК СерияЦО,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.НастройкиКлючаЦенПоУпаковке = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ИНАЧЕ ПеремещениеТоваров.Упаковка
	|	КОНЕЦ КАК УпаковкаЦО,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПеремещениеТоваров.Упаковка.Наименование
	|	КОНЕЦ КАК УпаковкаНаименование,
	|	ПеремещениеТоваров.Упаковка КАК Упаковка,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	ПеремещениеТоваров.КоличествоУпаковок КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения И Не ПеремещениеТоваров.ЭтоНабор
	|			ТОГДА ВЫБОР
	|				КОГДА КоэффициентыУпаковок.Количество < КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|					ТОГДА КоэффициентыУпаковок.Количество
	|				ИНАЧЕ КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|			КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ПеремещениеТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				ТОГДА 1
	|			ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки1
	|		КОНЕЦ
	|	КОНЕЦ КАК КоличествоВОдномМесте,
	|	ПеремещениеТоваров.МассаНетто КАК МассаНетто,
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ПеремещениеТоваров.Количество
	|		ИНАЧЕ ПеремещениеТоваров.КоличествоУпаковок
	|	КОНЕЦ * &ТекстЗапросаВесУпаковки КАК МассаБрутто,
	|	ПеремещениеТоваров.НеВыводить
	|ПОМЕСТИТЬ ПеремещениеТоваров
	|ИЗ
	|	ПеремещениеТоваровТаблицаТоваров КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО (ВидыНоменклатуры.Ссылка = ПеремещениеТоваров.Номенклатура.ВидНоменклатуры)
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыУпаковок КАК КоэффициентыУпаковок
	|		ПО (ПеремещениеТоваров.Ссылка = КоэффициентыУпаковок.Ссылка)
	|		И (ПеремещениеТоваров.НомерСтроки = КоэффициентыУпаковок.НомерСтроки)
	|		И (ПеремещениеТоваров.КоличествоУпаковок = КоэффициентыУпаковок.КоличествоУпаковок)
	|		И (НЕ &ВыводитьБазовыеЕдиницыИзмерения)
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ПеремещениеТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеТоваров.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ПеремещениеТоваров.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|	ПеремещениеТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	ПеремещениеТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ПеремещениеТоваров.ЭтоКомплектующие КАК ЭтоКомплектующие,
	|	ПеремещениеТоваров.ЭтоНабор КАК ЭтоНабор,
	|	ПеремещениеТоваров.ПолныйНабор КАК ПолныйНабор,
	|	ПеремещениеТоваров.НомерСтроки КАК НомерСтроки,
	|	ПеремещениеТоваров.Товар КАК Товар,
	|	ПеремещениеТоваров.ТоварНаименование КАК ТоварНаименование,
	|	ПеремещениеТоваров.ТоварКод КАК ТоварКод,
	|	ПеремещениеТоваров.Характеристика КАК Характеристика,
	|	ПеремещениеТоваров.УпаковкаНаименование КАК Упаковка,
	|	ПеремещениеТоваров.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
	|	ПеремещениеТоваров.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмерения,
	|	ПеремещениеТоваров.ЕдиницаИзмеренияКодПоОКЕИ КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|	ПеремещениеТоваров.Количество КАК Количество,
	|	ПеремещениеТоваров.КоличествоВОдномМесте КАК КоличествоВОдномМесте,
	|	ПеремещениеТоваров.МассаНетто КАК МассаНетто,
	|	ПеремещениеТоваров.МассаБрутто КАК МассаБрутто,
	|	ПеремещениеТоваров.НеВыводить,
	|	(ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) *
	|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЧИСЛО(31, 2))) * ПеремещениеТоваров.Количество КАК Сумма,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) *
	|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЧИСЛО(31, 2)) КАК Цена
	|ИЗ
	|	ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25.СрезПоследних(КОНЕЦПЕРИОДА(&ДатаДокумента, ДЕНЬ), (Номенклатура,
	|			ХарактеристикаЦО, СерияЦО, УпаковкаЦО, ВидЦены) В
	|			(ВЫБРАТЬ
	|				Т.Товар,
	|				Т.ХарактеристикаЦО,
	|				Т.СерияЦО,
	|				Т.УпаковкаЦО,
	|				&УчетныйВидЦены
	|			ИЗ
	|				ПеремещениеТоваров КАК Т)) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО (ПеремещениеТоваров.Товар = ЦеныНоменклатурыСрезПоследних.Номенклатура)
	|		И (ПеремещениеТоваров.ХарактеристикаЦО = ЦеныНоменклатурыСрезПоследних.ХарактеристикаЦО)
	|		И (ПеремещениеТоваров.СерияЦО = ЦеныНоменклатурыСрезПоследних.СерияЦО)
	|		И (ПеремещениеТоваров.УпаковкаЦО = ЦеныНоменклатурыСрезПоследних.УпаковкаЦО)
	|УПОРЯДОЧИТЬ ПО
	|	ПеремещениеТоваров.НомерСтрокиНаборы,
	|	ПеремещениеТоваров.ЭтоНабор УБЫВ,
	|	ПеремещениеТоваров.НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПеремещениеТоваров
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КоэффициентыУпаковок
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТоваров";
		
	ТекстЗапросаВыборкиСтрокТоваров20 = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваров.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ПеремещениеТоваров.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|	ПеремещениеТоваров.НоменклатураНабора КАК НоменклатураНабора,
	|	ПеремещениеТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ПеремещениеТоваров.ЭтоКомплектующие КАК ЭтоКомплектующие,
	|	ПеремещениеТоваров.ЭтоНабор КАК ЭтоНабор,
	|	ПеремещениеТоваров.ПолныйНабор КАК ПолныйНабор,
	|	ПеремещениеТоваров.Номенклатура                    КАК Товар,
	|	ПеремещениеТоваров.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВЫБОР КОГДА &ТоварКод = ""Код"" ТОГДА
	|		ПеремещениеТоваров.Номенклатура.Код
	|	ИНАЧЕ
	|		ПеремещениеТоваров.Номенклатура.Артикул
	|	КОНЕЦ                                                  КАК ТоварКод,
	|
	|	ПеремещениеТоваров.Характеристика.НаименованиеПолное   КАК Характеристика,
	|	ВЫБОР КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
	|		ТОГДА НЕОПРЕДЕЛЕНО 
	|		ИНАЧЕ ПеремещениеТоваров.Упаковка.Наименование
	|	КОНЕЦ                                                  КАК Упаковка,
	|
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмерения,
	|
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|
	|	ПеремещениеТоваров.КоличествоУпаковок КАК Количество,
	|
	|	ВЫБОР
	|		КОГДА НЕ &ВыводитьБазовыеЕдиницыИзмерения И Не ПеремещениеТоваров.ЭтоНабор
	|			ТОГДА ВЫБОР
	|					КОГДА КоэффициентыУпаковок.Количество < КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|						ТОГДА КоэффициентыУпаковок.Количество
	|					ИНАЧЕ КоэффициентыУпаковок.КоэффициентВложеннойУпаковки
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПеремещениеТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА 1
	|				ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоВОдномМесте,
	|
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	|			/ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1)
	|			* ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
	|		КАК ЧИСЛО(31,2)) * ПеремещениеТоваров.КоличествоУпаковок КАК Сумма,
	|
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	|			/ ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1)
	|			* ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)
	|		КАК ЧИСЛО(31,2)) КАК Цена,
	|
	|	ВЫБОР
	|		КОГДА ПеремещениеТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|			ПеремещениеТоваров.Количество
	|		ИНАЧЕ
	|			ПеремещениеТоваров.КоличествоУпаковок
	|	КОНЕЦ * &ТекстЗапросаВесУпаковки КАК МассаБрутто,
	|	ПеремещениеТоваров.НеВыводить,
	|	ПеремещениеТоваров.МассаНетто КАК МассаНетто
	|
	|ИЗ
	|	ПеремещениеТоваровТаблицаТоваров КАК ПеремещениеТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			КОНЕЦПЕРИОДА(&ДатаДокумента, ДЕНЬ),
	|			(Номенклатура, Характеристика, ВидЦены)
	|				В 
	|				(ВЫБРАТЬ
	|					Т.Номенклатура,
	|					Т.Характеристика,
	|					&УчетныйВидЦены
	|				ИЗ
	|					ПеремещениеТоваровТаблицаТоваров КАК Т)
	|
	|		) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО ПеремещениеТоваров.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|			И ПеремещениеТоваров.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ КоэффициентыУпаковок КАК КоэффициентыУпаковок
	|		ПО ПеремещениеТоваров.Ссылка = КоэффициентыУпаковок.Ссылка
	|			И ПеремещениеТоваров.НомерСтроки = КоэффициентыУпаковок.НомерСтроки
	|			И ПеремещениеТоваров.КоличествоУпаковок = КоэффициентыУпаковок.КоличествоУпаковок 
	|			И НЕ &ВыводитьБазовыеЕдиницыИзмерения
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &ПеремещениеТоваров
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПеремещениеТоваров.НомерСтрокиНаборы,
	|	ПеремещениеТоваров.ЭтоНабор УБЫВ,
	|	ПеремещениеТоваров.НомерСтроки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КоэффициентыУпаковок
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТоваров";
	
	Запрос20 = ПолучитьЗапросВыборкиСтрокТоваров(ТекстЗапросаВыборкиСтрокТоваров20, ТоварКод);
	Запрос25 = ПолучитьЗапросВыборкиСтрокТоваров(ТекстЗапросаВыборкиСтрокТоваров25, ТоварКод);
	
	ЗапросТоваров = Новый Запрос();
	ЗапросТоваров.Текст = 
	"ВЫБРАТЬ
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.НомерСтроки,
	|	ПеремещениеТоваровТовары.Ссылка,
	|	ПеремещениеТоваровТовары.Упаковка,
	|	ПеремещениеТоваровТовары.КоличествоУпаковок,
	|	ПеремещениеТоваровТовары.Количество
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка = &ПеремещениеТоваров";
	
	МассивВыводимыхОбластей = Новый Массив;
	
	ДопПараметрыПредставлениеНоменклатуры = НоменклатураКлиентСервер.ДополнительныеПараметрыПредставлениеНоменклатурыДляПечати();
	ДопПараметрыПредставлениеНоменклатуры.КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	
	Пока Шапка.Следующий() Цикл
		
		ИспользуетсяЦенообразование25 = ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25(Шапка.ДатаДокумента);
	
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ЗапросТоваров.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		ЗапросТоваров.УстановитьПараметр("ПеремещениеТоваров", Шапка.Ссылка);
		ЗапросТоваров.Выполнить();
		
		ПродажиСервер.ПоместитьВременнуюТаблицуКоэффициентыУпаковок(МенеджерВременныхТаблиц);
		
		Запрос = ?(ИспользуетсяЦенообразование25, Запрос25, Запрос20);
		
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Запрос.УстановитьПараметр("ПеремещениеТоваров", Шапка.Ссылка);
		Запрос.УстановитьПараметр("ДатаДокумента", Шапка.ДатаДокумента);
		Запрос.УстановитьПараметр("УчетныйВидЦены", Шапка.УчетныйВидЦены);
		
		Если ИспользуетсяЦенообразование25 Тогда
			РезультатТовары = Запрос.ВыполнитьПакет()[1].Выгрузить();
		Иначе
			РезультатТовары = Запрос.Выполнить().Выгрузить();
		КонецЕсли;

		// Выводим общие реквизиты шапки.
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);

		// Вывод шапки таблицы.
		ОбластьМакетаШапка    = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
		ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
		ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
		ОбластьМакетаШапка.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер, Ложь, Истина);
		ОбластьМакетаШапка.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакетаШапка, Шапка.Ссылка);
		ТабличныйДокумент.Вывести(ОбластьМакетаШапка);

		НомерСтраницы = 1;

		// Вывод заголовка таблицы.
		ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);

		// Инициализация итогов по странице
		ИтогКоличествоМестПоСтранице = 0;
		ИтогМассаБруттоПоСтранице    = 0;
		ИтогМассыНеттоПоСтранице     = 0;
		ИтогСуммыПоСтранице          = 0;

		// Инициализация итогов по документу
		ИтогоКоличество  = 0;
		ИтогоМассаБрутто = 0;
		ИтогоМассаНетто  = 0;
		ИтогоСумма       = 0;

		// Области макета.
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
		ОбластьМакетаСтрока     = Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаВсего      = Макет.ПолучитьОбласть("Всего");
		ОбластьМакетаПодвал     = Макет.ПолучитьОбласть("Подвал");

		ОбластьМакетаНабор         = Макет.ПолучитьОбласть("СтрокаНабор");
		ОбластьМакетаКомплектующие = Макет.ПолучитьОбласть("СтрокаКомплектующие");
		
		Ном = 0;
		ПустыеДанные = НаборыСервер.ПустыеДанные();
		ПустыеДанные.Вставить("МассаНетто", "");
		КоличествоСтрок = РезультатТовары.Количество();
		Для Каждого СтрокаТовары Из РезультатТовары Цикл
			
			Если СтрокаТовары.НеВыводить Тогда
				Ном = Ном + 1;
				Продолжить;
			КонецЕсли;
			
			ИспользоватьНаборы = ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(СтрокаТовары, "ЭтоНабор");
			
			ПрефиксИПостфикс = НаборыСервер.ПолучитьПрефиксИПостфикс(СтрокаТовары, ИспользоватьНаборы);
			
			Если НаборыСервер.ИспользоватьОбластьНабор(СтрокаТовары, ИспользоватьНаборы) Тогда
				ОбластьМакета = ОбластьМакетаНабор;
			ИначеЕсли НаборыСервер.ИспользоватьОбластьКомплектующие(СтрокаТовары, ИспользоватьНаборы) Тогда
				ОбластьМакета = ОбластьМакетаКомплектующие;
			Иначе
				ОбластьМакета = ОбластьМакетаСтрока;
			КонецЕсли;
			
			Если Не НаборыСервер.ВыводитьТолькоЗаголовок(СтрокаТовары, ИспользоватьНаборы) Тогда
				Ном = Ном + 1;
			КонецЕсли;
			
			Если ИспользоватьНаборы 
				И СтрокаТовары.ЭтоНабор
				И СтрокаТовары.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих Тогда
				
				Колонки = "Товар, Характеристика, Упаковка, Цена";
				Комплектующие = РезультатТовары.Скопировать(Новый Структура("НоменклатураНабора, ЭтоНабор", СтрокаТовары.НоменклатураНабора, ЛОЖЬ),
					Колонки);
				
				Комплектующие.Свернуть(Колонки);
				СтрокаТовары.Цена = 0;
				
				Для Каждого Комплектующая Из Комплектующие Цикл
					СтрокаТовары.Цена = СтрокаТовары.Цена + Комплектующая.Цена;
				КонецЦикла;
				
			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
			ОбластьМакета.Параметры.КоличествоМест    = Формат(СтрокаТовары.Количество, "ЧЦ=15; ЧДЦ=3");
			ОбластьМакета.Параметры.ТоварНаименование = ПрефиксИПостфикс.Префикс
				+ НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					СокрЛП(СтрокаТовары.ТоварНаименование),
					СокрЛП(СтрокаТовары.Характеристика),
					СокрЛП(СтрокаТовары.Упаковка),
					,
					ДопПараметрыПредставлениеНоменклатуры)
				+ ПрефиксИПостфикс.Постфикс;
			
			СуммаСтроки = Окр(СтрокаТовары.Количество * СтрокаТовары.Цена, 2);
			ОбластьМакета.Параметры.Сумма = СуммаСтроки;
			
			Если ИспользоватьНаборы
				И СтрокаТовары.ЭтоКомплектующие
				И СтрокаТовары.ВариантПредставленияНабораВПечатныхФормах = Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие
				И (СтрокаТовары.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям
				   ИЛИ СтрокаТовары.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам) Тогда
				// Область должна остаться незаполненной
				ОбластьМакета.Параметры.Заполнить(ПустыеДанные);
				СуммаСтроки = 0;
			ИначеЕсли ИспользоватьНаборы
				И СтрокаТовары.ЭтоНабор
				И СтрокаТовары.ВариантПредставленияНабораВПечатныхФормах = Перечисления.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие
				И (СтрокаТовары.ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих) Тогда
				// Область должна остаться незаполненной
				ОбластьМакета.Параметры.Заполнить(ПустыеДанные);
				СуммаСтроки = 0;
			КонецЕсли;
			
			Если Ном > 1 Тогда
			
				// Умещаются ли области на страницу при печати.
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьМакета);
				МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
				Если Ном = КоличествоСтрок Тогда
					МассивВыводимыхОбластей.Добавить(ОбластьМакетаВсего);
					МассивВыводимыхОбластей.Добавить(ОбластьМакетаПодвал);
				КонецЕсли;
				
				Если Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					// Вывод итогов по странице.
					ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
					ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице;
					ОбластьИтоговПоСтранице.Параметры.ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице;
					ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице;
					ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);
					
					// Инициализация итогов по странице.
					ИтогКоличествоМестПоСтранице = 0;
					ИтогМассаБруттоПоСтранице    = 0;
					ИтогМассаНеттоПоСтранице     = 0;
					ИтогСуммыПоСтранице          = 0;

					НомерСтраницы = НомерСтраницы + 1;
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();

					// Вывод заголовка таблицы.
					ОбластьЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
					ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);

				КонецЕсли;

			КонецЕсли;

			ТабличныйДокумент.Вывести(ОбластьМакета);

			Если Не НаборыСервер.ИспользоватьОбластьКомплектующие(СтрокаТовары, ИспользоватьНаборы) Тогда
				// Обновление итоги по странице
				ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице + СтрокаТовары.Количество;
				ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице    + СтрокаТовары.МассаБрутто;
				ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице     + СтрокаТовары.МассаНетто;
	
				// Обновление итогов по документу
				ИтогоКоличество  = ИтогоКоличество  + СтрокаТовары.Количество;
				ИтогоМассаБрутто = ИтогоМассаБрутто + СтрокаТовары.МассаБрутто;
				ИтогоМассаНетто  = ИтогоМассаНетто  + СтрокаТовары.МассаНетто;

			КонецЕсли;
			
			ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице          + СуммаСтроки;
			ИтогоСумма       = ИтогоСумма       + СуммаСтроки;
		КонецЦикла;

		// Вывод итогов по странице.
		ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогМассаБруттоПоСтранице    = ИтогМассаБруттоПоСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогМассыНеттоПоСтранице     = ИтогМассыНеттоПоСтранице;
		ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице;
		ТабличныйДокумент.Вывести(ОбластьИтоговПоСтранице);

		// Вывод итогов по документу в целом.
		ОбластьМакетаВсего.Параметры.ИтогоКоличествоМест = ИтогоКоличество;
		ОбластьМакетаВсего.Параметры.ИтогоМассаБрутто    = ИтогоМассаБрутто;
		ОбластьМакетаВсего.Параметры.ИтогоМассаНетто     = ИтогоМассаНетто;
		ОбластьМакетаВсего.Параметры.ИтогоСумма          = ИтогоСумма;
		ТабличныйДокумент.Вывести(ОбластьМакетаВсего);

		// Вывод подвала документа.
		ОбластьМакетаПодвал.Параметры.Заполнить(Шапка);
		ОбластьМакетаПодвал.Параметры.ДолжностьОтправителя = Шапка.ДолжностьКладовщикаОтправителя;
		ОбластьМакетаПодвал.Параметры.ФИООтправителя       = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.КладовщикОтправитель, Шапка.ДатаДокумента);
		ОбластьМакетаПодвал.Параметры.ДолжностьПолучателя  = Шапка.ДолжностьКладовщикаПолучателя;
		ОбластьМакетаПодвал.Параметры.ФИОПолучателя        = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(Шапка.КладовщикПолучатель, Шапка.ДатаДокумента);
		ОбластьМакетаПодвал.Параметры.ИтогоСуммаПрописью   = РаботаСКурсамиВалютУТ.СформироватьСуммуПрописью(
																Цел(ИтогоСумма),
																ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Шапка.Организация),
																Истина);
		ОбластьМакетаПодвал.Параметры.ИтогоСуммаКоп        = Формат(Цел((ИтогоСумма-Цел(ИтогоСумма))*100), "ЧЦ=2; ЧН=00");
		ТабличныйДокумент.Вывести(ОбластьМакетаПодвал);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции

Функция ПолучитьЗапросВыборкиСтрокТоваров(ТекстЗапросаВыборкиСтрокТоваров, ТоварКод)
	
	ТекстЗапросаВыборкиСтрокТоваров = СтрЗаменить(ТекстЗапросаВыборкиСтрокТоваров, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ПеремещениеТоваров.Упаковка",
			"ПеремещениеТоваров.Номенклатура"));
			
	ТекстЗапросаВыборкиСтрокТоваров = СтрЗаменить(ТекстЗапросаВыборкиСтрокТоваров, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЦеныНоменклатурыСрезПоследних.Упаковка",
			"ЦеныНоменклатурыСрезПоследних.Номенклатура"));
				
	ТекстЗапросаВыборкиСтрокТоваров = СтрЗаменить(ТекстЗапросаВыборкиСтрокТоваров, "&ТекстЗапросаВесУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"ПеремещениеТоваров.Упаковка",
			"ПеремещениеТоваров.Номенклатура"));
		
	ТекстЗапросаВыборкиСтрокТоваров = СтрЗаменить(ТекстЗапросаВыборкиСтрокТоваров, "&ТекстЗапросаВесНоменклатуры",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"ПеремещениеТоваров.Номенклатура.ЕдиницаИзмерения",
			"ПеремещениеТоваров.Номенклатура"));
		
	ТекстЗапросаВыборкиСтрокТоваров = СтрЗаменить(ТекстЗапросаВыборкиСтрокТоваров, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ПеремещениеТоваров.Упаковка",
			"ПеремещениеТоваров.Номенклатура"));
	
	ТекстЗапросаВыборкиСтрокТоваров = СтрЗаменить(ТекстЗапросаВыборкиСтрокТоваров, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"ПеремещениеТоваров.Упаковка",
			"ПеремещениеТоваров.Номенклатура"));

	Запрос = Новый Запрос(ТекстЗапросаВыборкиСтрокТоваров);

	Запрос.УстановитьПараметр("ТоварКод", ТоварКод);
	Запрос.УстановитьПараметр("ВыводитьБазовыеЕдиницыИзмерения", Константы.ВыводитьБазовыеЕдиницыИзмерения.Получить());
	
	Возврат Запрос;
	
КонецФункции

// Возвращает данные для формирования печатной формы МХ - 1.
//
// Параметры:
//	ПараметрыПечати	- Структура -дополнительные настройки печати.
//	МассивОбъектов	- Массив из ДокументСсылка.ПеремещениеТоваров - коллекция значений ссылок на документы,
//																	по которым необходимо получить данные.
//
// Возвращаемое значение:
//	Структура - коллекция данных, используемых для печати, содержащая следующие следующие свойства:
//		* РезультатПоШапке			- РезультатЗапроса - данные шапки документа.
//		* РезультатПоСкладам		- РезультатЗапроса - данные о складе ответственного хранения.
//		* РезультатПоТабличнойЧасти	- РезультатЗапроса - данные табличной части документа.
//		* РезультатПоОшибкам		- РезультатЗапроса - данные об ошибках, возникающих при печати документа.
//
Функция ПолучитьДанныеДляПечатнойФормыМХ1(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка									КАК Ссылка,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Номер, ДанныеДокумента.Номер)	КАК Номер,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Дата, ДанныеДокумента.Дата)	КАК Дата,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Дата, ДанныеДокумента.Дата)	КАК ДатаДокумента,
	|	ДанныеДокумента.Организация								КАК Организация,
	|	ДанныеДокумента.СкладПолучатель							КАК Склад,
	|	ЕСТЬNULL(Склады.СкладОтветственногоХранения, ЛОЖЬ)		КАК СкладОтветственногоХранения,
	|	ДанныеДокумента.Организация = Склады.Поклажедержатель	КАК ОрганизацияПоклажедержатель,
	|	Склады.ИсточникИнформацииОЦенахДляПечати				КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены									КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены						КАК ВалютаЦены,
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет	КАК ПредварительныйРасчет,
	|	ДанныеДокумента.Дата									КАК ДатаПолученияСебестоимости
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ)
	|			И РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен
	|			И ДанныеДокумента.Организация = РасчетСебестоимостиТоваровОрганизации.Организация
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ДанныеДокумента.СкладПолучатель = Склады.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.Ссылка В(&МассивДокументов)
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка								КАК Ссылка,
	|	ДанныеДокумента.Номер								КАК Номер,
	|	ДанныеДокумента.Дата								КАК Дата,
	|	ДанныеДокумента.ДатаДокумента						КАК ДатаДокумента,
	|	ДанныеДокумента.Организация							КАК Организация,
	|	ДанныеДокумента.Склад								КАК Склад,
	|	ДанныеДокумента.ИсточникИнформацииОЦенахДляПечати	КАК ИсточникИнформацииОЦенахДляПечати,
	|	ДанныеДокумента.ВидЦены								КАК ВидЦены,
	|	ДанныеДокумента.ВалютаЦены							КАК ВалютаЦены,
	|	ДанныеДокумента.ПредварительныйРасчет				КАК ПредварительныйРасчет,
	|	ДанныеДокумента.ДатаПолученияСебестоимости			КАК ДатаПолученияСебестоимости
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.СкладОтветственногоХранения
	|	И НЕ ДанныеДокумента.ОрганизацияПоклажедержатель
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.Серия КАК Серия,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	Шапка.Склад КАК Склад,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасов.Количество КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены КАК ВидЦены,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПеремещениеТоваров.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И Шапка.Склад.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "Товары.Упаковка", "Товары.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "Товары.Упаковка", "Товары.Номенклатура"));
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[МассивРезультатов.ВГраница() - 3];
	РезультатПоСкладам			= МассивРезультатов[МассивРезультатов.ВГраница() - 2];
	РезультатПоТабличнойЧасти	= МассивРезультатов[МассивРезультатов.ВГраница() - 1];
	РезультатПоОшибкам			= МассивРезультатов[МассивРезультатов.ВГраница()];
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",			РезультатПоШапке);
	СтруктураДанныхДляПечати.Вставить("РезультатПоСкладам",			РезультатПоСкладам);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти",	РезультатПоТабличнойЧасти);
	СтруктураДанныхДляПечати.Вставить("РезультатПоОшибкам",			РезультатПоОшибкам);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Возвращает данные для формирования печатной формы МХ - 3.
//
// Параметры:
//	ПараметрыПечати	- Структура -дополнительные настройки печати.
//	МассивОбъектов	- Массив из ДокументСсылка.ПеремещениеТоваров - коллекция значений ссылок на документы,
//																	по которым необходимо получить данные.
//
// Возвращаемое значение:
//	Структура - коллекция данных, используемых для печати, содержащая следующие следующие свойства:
//		* РезультатПоШапке			- РезультатЗапроса - данные шапки документа.
//		* РезультатПоСкладам		- РезультатЗапроса - данные о складе ответственного хранения.
//		* РезультатПоТабличнойЧасти	- РезультатЗапроса - данные табличной части документа.
//		* РезультатПоОшибкам		- РезультатЗапроса - данные об ошибках, возникающих при печати документа.
//
Функция ПолучитьДанныеДляПечатнойФормыМХ3(ПараметрыПечати, МассивОбъектов) Экспорт
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка									КАК Ссылка,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Номер, ДанныеДокумента.Номер)	КАК Номер,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Дата, ДанныеДокумента.Дата)	КАК Дата,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Дата, ДанныеДокумента.Дата)	КАК ДатаДокумента,
	|	ДанныеДокумента.Организация								КАК Организация,
	|	ДанныеДокумента.СкладОтправитель						КАК Склад,
	|	ЕСТЬNULL(Склады.СкладОтветственногоХранения, ЛОЖЬ)		КАК СкладОтветственногоХранения,
	|	ДанныеДокумента.Организация = Склады.Поклажедержатель	КАК ОрганизацияПоклажедержатель,
	|	Склады.ИсточникИнформацииОЦенахДляПечати				КАК ИсточникИнформацииОЦенахДляПечати,
	|	Склады.УчетныйВидЦены									КАК ВидЦены,
	|	Склады.УчетныйВидЦены.ВалютаЦены						КАК ВалютаЦены,
	|	РасчетСебестоимостиТоваровОрганизации.Ссылка.ПредварительныйРасчет	КАК ПредварительныйРасчет,
	|	ДанныеДокумента.Дата									КАК ДатаПолученияСебестоимости
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасчетСебестоимостиТоваров.Организации КАК РасчетСебестоимостиТоваровОрганизации
	|		ПО РасчетСебестоимостиТоваровОрганизации.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ)
	|			И РасчетСебестоимостиТоваровОрганизации.Ссылка.Проведен
	|			И ДанныеДокумента.Организация = РасчетСебестоимостиТоваровОрганизации.Организация
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ДанныеДокумента.СкладОтправитель = Склады.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.Ссылка В(&МассивДокументов)
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 1
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка								КАК Ссылка,
	|	ДанныеДокумента.Номер								КАК Номер,
	|	ДанныеДокумента.Дата								КАК Дата,
	|	ДанныеДокумента.ДатаДокумента						КАК ДатаДокумента,
	|	ДанныеДокумента.Организация							КАК Организация,
	|	ДанныеДокумента.Склад								КАК Склад,
	|	ДанныеДокумента.ИсточникИнформацииОЦенахДляПечати	КАК ИсточникИнформацииОЦенахДляПечати,
	|	ДанныеДокумента.ВидЦены								КАК ВидЦены,
	|	ДанныеДокумента.ВалютаЦены							КАК ВалютаЦены,
	|	ДанныеДокумента.ПредварительныйРасчет				КАК ПредварительныйРасчет,
	|	ДанныеДокумента.ДатаПолученияСебестоимости			КАК ДатаПолученияСебестоимости
	|ПОМЕСТИТЬ ВтШапка
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.СкладОтветственногоХранения
	|	И НЕ ДанныеДокумента.ОрганизацияПоклажедержатель
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 2
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Шапка.Склад КАК Склад,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.Серия КАК Серия,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ВидУпаковки,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Шапка.ВидЦены КАК ВидЦены,
	|	Шапка.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО Товары.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоВидуЦен)
	|		ИЛИ (Шапка.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|			И Шапка.ПредварительныйРасчет ЕСТЬ NULL))
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////// 3
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Шапка.Организация КАК Организация,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК Упаковка,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения.Представление ВидУпаковки,
	|	ВидыЗапасов.Количество КАК КоличествоУпаковок,
	|	ВидыЗапасов.Количество КАК Количество,
	|	КОНЕЦПЕРИОДА(ВидыЗапасов.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены КАК ВидЦены,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.УчетныйВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	Шапка.ПредварительныйРасчет КАК ПредварительныйРасчет
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПеремещениеТоваров.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтШапка КАК Шапка
	|		ПО ВидыЗапасов.Ссылка = Шапка.Ссылка
	|ГДЕ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ВидыЗапасов.АналитикаУчетаНоменклатуры.СкладскаяТерритория.ИсточникИнформацииОЦенахДляПечати = ЗНАЧЕНИЕ(Перечисление.ИсточникиИнформацииОЦенахДляПечати.ПоСебестоимости)
	|;
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование", "Товары.Упаковка", "Товары.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код", "Товары.Упаковка", "Товары.Номенклатура"));
	
	СкладыСервер.ДополнитьТекстЗапросаДляПечатныхФормМХ1Х3(Запрос);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("КолонкаКодов", КолонкаКодов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[МассивРезультатов.ВГраница() - 3];
	РезультатПоСкладам			= МассивРезультатов[МассивРезультатов.ВГраница() - 2];
	РезультатПоТабличнойЧасти	= МассивРезультатов[МассивРезультатов.ВГраница() - 1];
	РезультатПоОшибкам			= МассивРезультатов[МассивРезультатов.ВГраница()];
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке",			РезультатПоШапке);
	СтруктураДанныхДляПечати.Вставить("РезультатПоСкладам",			РезультатПоСкладам);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти",	РезультатПоТабличнойЧасти);
	СтруктураДанныхДляПечати.Вставить("РезультатПоОшибкам",			РезультатПоОшибкам);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Функция получает данные для формирования печатной формы МХ - 18
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив из ДокументСсылка.ПеремещениеТоваров - Массив ссылок на документы, 
//																по которым необходимо получить данные.
//
// Возвращаемое значение:
// 	Структура:
// 		* РезультатПоШапке - РезультатЗапроса
// 		* РезультатПоТабличнойЧасти - РезультатЗапроса
//
Функция ПолучитьДанныеДляПечатнойФормыМХ18(ПараметрыПечати, МассивОбъектов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КолонкаКодов			= ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если НЕ ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка						КАК Ссылка,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Номер, ДанныеДокумента.Номер) КАК Номер,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Дата, ДанныеДокумента.Дата) КАК Дата,
	|	ЕСТЬNULL(ДанныеДокумента.ИсправляемыйДокумент.Дата, ДанныеДокумента.Дата) КАК ДатаДокумента,
	|	ДанныеДокумента.СкладОтправитель.Представление	КАК ПредставлениеПодразделения
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокВыпуск.Ссылка       КАК Ссылка,
	|	ДокВыпуск.Дата         КАК Дата,
	|	ДокВыпуск.Организация  КАК Организация,
	|	ДокВыпуск.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ПОМЕСТИТЬ ВТДанныеДокументовВыпуска
	|ИЗ 
	|	Документ.ПеремещениеТоваров КАК ДокВыпуск
	|ГДЕ 
	|	ДокВыпуск.Ссылка В (&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.Ссылка,
	|	РСУчетнаяПолитика.УчетГотовойПродукцииПоПлановойСтоимости КАК ИспользоватьПлановыеЦены
	|ПОМЕСТИТЬ ВТИспользованиеПлановыхЦен
	|ИЗ (
	|	ВЫБРАТЬ
	|		ДокументыВыпуска.Ссылка,
	|		ДокументыВыпуска.Дата,
	|		ДокументыВыпуска.Организация,
	|		ДокументыВыпуска.ГоловнаяОрганизация,
	|		МАКСИМУМ (РСУчетнаяПолитика.Период) КАК УчетнаяПолитикаПериод
	|
	|	ИЗ ВТДанныеДокументовВыпуска КАК ДокументыВыпуска
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК РСУчетнаяПолитика
	|		ПО РСУчетнаяПолитика.Организация = ДокументыВыпуска.ГоловнаяОрганизация
	|		И  РСУчетнаяПолитика.Период <= ДокументыВыпуска.Дата
	|	СГРУППИРОВАТЬ ПО
	|		ДокументыВыпуска.Ссылка,
	|		ДокументыВыпуска.Дата,
	|		ДокументыВыпуска.Организация,
	|		ДокументыВыпуска.ГоловнаяОрганизация
	|	) КАК Таб
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК РСУчетнаяПолитика
	|	ПО Таб.ГоловнаяОрганизация = РСУчетнаяПолитика.Организация
	|	И  Таб.УчетнаяПолитикаПериод = РСУчетнаяПолитика.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка														КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Организация											КАК Организация,
	|	ТаблицаТовары.Ссылка.Организация.Префикс									КАК Префикс,
	|	ТаблицаТовары.Номенклатура													КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное								КАК НоменклатураНаименование,
	|	ТаблицаТовары.Номенклатура." + КолонкаКодов + "								КАК НоменклатураКод,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное								КАК ХарактеристикаНаименование,
	|	ТаблицаТовары.Характеристика												КАК Характеристика,
	|	ТаблицаТовары.Серия.Наименование											КАК СерияНаименование,
	|	ТаблицаТовары.Серия															КАК Серия,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения 									КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения 											КАК ЕдиницаИзмеренияКод,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения 									КАК ВидУпаковки,
	|	ВЫБОР КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|		1
	|	ИНАЧЕ
	|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1)
	|	КОНЕЦ																		КАК КоличествоВОдномМесте,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок * &ТекстЗапросаВес)					КАК МассаБрутто,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок)										КАК Количество,
	|	СУММА(ТаблицаТовары.КоличествоУпаковок) 									КАК КоличествоМест,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки)											КАК НомерСтроки,
	|	ЛОЖЬ																		КАК ЭтоВозвратнаяТара,
	|	СРЕДНЕЕ(ВЫБОР
	|			КОГДА ВТИспользованиеПлановыхЦен.ИспользоватьПлановыеЦены ЕСТЬ NULL
	|				  ИЛИ НЕ ВТИспользованиеПлановыхЦен.ИспользоватьПлановыеЦены
	|			ТОГДА 0
	|			ИНАЧЕ 0
	|			КОНЕЦ)																КАК Цена,
	|	СУММА(ВЫБОР
	|			КОГДА ВТИспользованиеПлановыхЦен.ИспользоватьПлановыеЦены ЕСТЬ NULL
	|				  ИЛИ НЕ ВТИспользованиеПлановыхЦен.ИспользоватьПлановыеЦены
	|			ТОГДА 0
	|			ИНАЧЕ 0
	|		КОНЕЦ)																	КАК Сумма,
	|	ТаблицаТовары.Ссылка.СкладПолучатель.Представление							КАК Получатель,
	|	&ТекстПоляНДИГКОтправителя													КАК НДИГКОтправителя,
	|	&ТекстПоляНДИГКПолучателя													КАК НДИГКПолучателя
	|
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТовары
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТИспользованиеПлановыхЦен КАК ВТИспользованиеПлановыхЦен
	|	ПО ТаблицаТовары.Ссылка = ВТИспользованиеПлановыхЦен.Ссылка 
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|	ПО ТаблицаТовары.Назначение = Назначения.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаправленияДеятельности КАК НаправленияДеятельности
	|	ПО Назначения.НаправлениеДеятельности = НаправленияДеятельности.Ссылка
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивДокументов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|					ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|															)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Упаковка,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения,
	|	&ТекстЗапросаКодЕдиницыИзмерения,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1),
	|	&ТекстПоляНДИГКОтправителя,
	|	&ТекстПоляНДИГКПолучателя
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Ссылка,
	|	Организация,
	|	Получатель";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаВес",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
			
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
			
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстПоляНДИГКОтправителя",
		ВнутреннееТовародвижение.ТекстПоляНДИГК(
			"НаправленияДеятельности"));

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстПоляНДИГКПолучателя",
		ВнутреннееТовародвижение.ТекстПоляНДИГК(
			"НаправленияДеятельности"));
			
	Запрос.Текст = ТекстЗапроса;
	
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	РезультатПоШапке = МассивРезультатов[0];
	РезультатПоТабличнойЧасти = МассивРезультатов[3];
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Функция получает данные для формирования печатной формы М-11
//
// Параметры:
//  ПараметрыПечати - Структура - дополнительные настройки печати
//  МассивДокументов - СписокЗначений Из ДокументСсылка.ПеремещениеТоваров - ссылки на печатаемые объекты
//  Возвращаемое значение:
//   Структура - структура с полями:
//    * РезультатПоШапке - РезультатЗапроса -
//    * РезультатПоТабличнойЧасти - РезультатЗапроса -
Функция ПолучитьДанныеДляПечатнойФормыМ11(ПараметрыПечати, МассивДокументов) Экспорт
	
	Запрос = ПолучитьЗапросПолученияДанныхДляПечатнойФормыМ11();
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Цены.Упаковка",
			"Товары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКодЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Код",
			"Товары.Упаковка",
			"Товары.Номенклатура"));

	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстПоляНДИГКОтправителя",
		ВнутреннееТовародвижение.ТекстПоляНДИГК(
			"НаправленияДеятельности"));

	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстПоляНДИГКПолучателя",
		ВнутреннееТовародвижение.ТекстПоляНДИГК(
			"НаправленияДеятельности"));


	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);

	РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();
	
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПакетаЗапросов[РезультатПакетаЗапросов.ВГраница() - 1],
		РезультатПакетаЗапросов[РезультатПакетаЗапросов.ВГраница()]);
	
КонецФункции

Функция ПолучитьЗапросПолученияДанныхДляПечатнойФормыМ11()

	ИспользуетсяЦенообразование25 = ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25();
	Если ИспользуетсяЦенообразование25 Тогда
		ДатаПереходаНаЦенообразование25 = ЦенообразованиеВызовСервера.ДатаПереходаНаЦенообразованиеВерсии25();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИспользуетсяЦенообразование25", ИспользуетсяЦенообразование25);
	Запрос.УстановитьПараметр("ДатаПереходаНаЦенообразование25", ДатаПереходаНаЦенообразование25);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Товары.Ссылка,
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Упаковка,
	|	ЕСТЬNULL(ВЫБОР
	|		КОГДА
	|			ВидыНоменклатуры.НастройкиКлючаЦенПоХарактеристике = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка)
	|		ИНАЧЕ Товары.Характеристика.ХарактеристикаНоменклатурыДляЦенообразования
	|	КОНЕЦ, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатурыДляЦенообразования.ПустаяСсылка)) КАК ХарактеристикаЦО,
	|	ЕСТЬNULL(ВЫБОР
	|		КОГДА ВидыНоменклатуры.НастройкиКлючаЦенПоСерии = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СерииНоменклатурыДляЦенообразования.ПустаяСсылка)
	|		ИНАЧЕ Товары.Серия.СерияНоменклатурыДляЦенообразования
	|	КОНЕЦ, ЗНАЧЕНИЕ(Справочник.СерииНоменклатурыДляЦенообразования.ПустаяСсылка)) КАК СерияЦО,
	|	ВЫБОР
	|		КОГДА ВидыНоменклатуры.НастройкиКлючаЦенПоУпаковке = ЗНАЧЕНИЕ(Перечисление.ВариантОтбораДляКлючаЦен.НеИспользовать)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|		ИНАЧЕ Товары.Упаковка
	|	КОНЕЦ КАК УпаковкаЦО,
	|	Товары.КоличествоУпаковок,
	|	КОНЕЦПЕРИОДА(Товары.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	Товары.Ссылка.ВидЦены КАК ВидЦены,
	|	Товары.Ссылка.ВидЦены.ВалютаЦены КАК ВалютаЦены
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО (ВидыНоменклатуры.Ссылка = Товары.Номенклатура.ВидНоменклатуры)
	|		И &ИспользуетсяЦенообразование25
	|ГДЕ
	|	Товары.Ссылка В (&МассивДокументов)
	|;
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатуры.Характеристика КАК Характеристика,
	|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|ПОМЕСТИТЬ ПериодыЦенНоменклатуры
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|		И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|		И Товары.Характеристика = ЦеныНоменклатуры.Характеристика
	|		И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
	|		И Товары.ВалютаЦены = ЦеныНоменклатуры.Валюта
	|		И (ВЫБОР
	|			КОГДА &ИспользуетсяЦенообразование25
	|				ТОГДА Товары.ДатаПолученияЦены < &ДатаПереходаНаЦенообразование25
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ)
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.НомерСтроки,
	|	ЦеныНоменклатуры.ВидЦены,
	|	ЦеныНоменклатуры.Номенклатура,
	|	ЦеныНоменклатуры.Характеристика
	|;
	|
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
	|	ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатуры.ХарактеристикаЦО КАК ХарактеристикаЦО,
	|	ЦеныНоменклатуры.СерияЦО КАК СерияЦО,
	|	ЦеныНоменклатуры.УпаковкаЦО КАК УпаковкаЦО,
	|	МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|ПОМЕСТИТЬ ПериодыЦенНоменклатуры25
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25 КАК ЦеныНоменклатуры
	|		ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|		И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|		И Товары.ХарактеристикаЦО = ЦеныНоменклатуры.ХарактеристикаЦО
	|		И Товары.СерияЦО = ЦеныНоменклатуры.СерияЦО
	|		И Товары.УпаковкаЦО = ЦеныНоменклатуры.УпаковкаЦО
	|		И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
	|		И Товары.ВалютаЦены = ЦеныНоменклатуры.Валюта
	|		И &ИспользуетсяЦенообразование25
	|		И Товары.ДатаПолученияЦены >= &ДатаПереходаНаЦенообразование25
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.НомерСтроки,
	|	ЦеныНоменклатуры.ВидЦены,
	|	ЦеныНоменклатуры.Номенклатура,
	|	ЦеныНоменклатуры.ХарактеристикаЦО,
	|	ЦеныНоменклатуры.СерияЦО,
	|	ЦеныНоменклатуры.УпаковкаЦО
	|;
	|
	|ВЫБРАТЬ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Организация.ВалютаРегламентированногоУчета КАК БазоваяВалюта,
	|	МАКСИМУМ(КурсыВалют.Период) КАК Период,
	|	КурсыВалют.Валюта КАК Валюта
	|ПОМЕСТИТЬ ПериодыКурсовВалютПоДокументам
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|		ПО Документы.ВидЦены.ВалютаЦены = КурсыВалют.Валюта
	|		И Документы.Организация.ВалютаРегламентированногоУчета = КурсыВалют.БазоваяВалюта
	|		И Документы.Дата >= КурсыВалют.Период
	|ГДЕ
	|	Документы.Ссылка В (&МассивДокументов)
	|СГРУППИРОВАТЬ ПО
	|	Документы.Ссылка,
	|	Документы.Организация.ВалютаРегламентированногоУчета,
	|	КурсыВалют.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыЦенНоменклатуры.Ссылка КАК Ссылка,
	|	ПериодыЦенНоменклатуры.НомерСтроки КАК НомерСтроки,
	|	ЦеныНоменклатуры.Цена КАК Цена,
	|	ЦеныНоменклатуры.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ Цены
	|ИЗ
	|	ПериодыЦенНоменклатуры КАК ПериодыЦенНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
	|		И ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|		И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|		И ПериодыЦенНоменклатуры.Характеристика = ЦеныНоменклатуры.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПериодыЦенНоменклатуры.Ссылка,
	|	ПериодыЦенНоменклатуры.НомерСтроки,
	|	ЦеныНоменклатуры.Цена,
	|	ЦеныНоменклатуры.Упаковка
	|ИЗ
	|	ПериодыЦенНоменклатуры25 КАК ПериодыЦенНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25 КАК ЦеныНоменклатуры
	|		ПО ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
	|		И ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|		И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|		И ПериодыЦенНоменклатуры.ХарактеристикаЦО = ЦеныНоменклатуры.ХарактеристикаЦО
	|		И ПериодыЦенНоменклатуры.СерияЦО = ЦеныНоменклатуры.СерияЦО
	|		И ПериодыЦенНоменклатуры.УпаковкаЦО = ЦеныНоменклатуры.УпаковкаЦО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыКурсовВалютПоДокументам.Ссылка КАК Ссылка,
	|	КурсыВалют.Валюта КАК Валюта,
	|	КурсыВалют.КурсЧислитель КАК КурсЧислитель,
	|	КурсыВалют.КурсЗнаменатель КАК КурсЗнаменатель
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	ПериодыКурсовВалютПоДокументам КАК ПериодыКурсовВалютПоДокументам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|		ПО ПериодыКурсовВалютПоДокументам.Период = КурсыВалют.Период
	|		И ПериодыКурсовВалютПоДокументам.Валюта = КурсыВалют.Валюта
	|		И ПериодыКурсовВалютПоДокументам.БазоваяВалюта = КурсыВалют.БазоваяВалюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Номер, Документы.Номер) КАК Номер,
	|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Дата, Документы.Дата) КАК ДатаСоставления,
	|	ЕСТЬNULL(Документы.ИсправляемыйДокумент.Дата, Документы.Дата) КАК ДатаДокумента,
	|	Документы.Организация КАК Организация,
	|	Документы.Организация.Префикс КАК Префикс,
	|	Документы.СкладПолучатель КАК Подразделение,
	|	Документы.ВидЦены КАК УчетныйВидЦены,
	|	Документы.ВидЦены.ВалютаЦены КАК УчетныйВидЦеныВалютаЦены
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК Документы
	|ГДЕ
	|	Документы.Ссылка В (&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Ссылка.СкладОтправитель КАК Склад,
	|	Товары.Ссылка.СкладОтправитель.ТекущийОтветственный КАК КладовщикОтправитель,
	|	Товары.Ссылка.СкладОтправитель.ТекущаяДолжностьОтветственного КАК ДолжностьКладовщикаОтправителя,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	Товары.Номенклатура.Код КАК НоменклатурныйНомерКод,
	|	Товары.Номенклатура.Артикул КАК НоменклатурныйНомерАртикул,
	|	Товары.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Товары.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияНаименование,
	|	&ТекстЗапросаКодЕдиницыИзмерения КАК ЕдиницаИзмеренияКод,
	|	Товары.КоличествоУпаковок КАК Количество,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) *
	|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(КурсыВалют.КурсЧислитель, 1) /
	|		ЕСТЬNULL(КурсыВалют.КурсЗнаменатель, 1) КАК ЧИСЛО(31, 2)) * Товары.КоличествоУпаковок КАК Сумма,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(Цены.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) *
	|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ЕСТЬNULL(КурсыВалют.КурсЧислитель, 1) /
	|		ЕСТЬNULL(КурсыВалют.КурсЗнаменатель, 1) КАК ЧИСЛО(31, 2)) КАК Цена,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	&ТекстПоляНДИГКОтправителя	КАК НДИГКОтправителя,
	|	&ТекстПоляНДИГКПолучателя	КАК НДИГКПолучателя	
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
	|		ПО Товары.Ссылка = КурсыВалют.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Цены КАК Цены
	|		ПО Товары.Ссылка = Цены.Ссылка
	|		И Товары.НомерСтроки = Цены.НомерСтроки 
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО Товары.Назначение = Назначения.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаправленияДеятельности КАК НаправленияДеятельности
	|		ПО Назначения.НаправлениеДеятельности = НаправленияДеятельности.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(КладовщикОтправитель),
	|	МАКСИМУМ(ДолжностьКладовщикаОтправителя)
	|ПО
	|	Ссылка,
	|	Склад";
	
	Возврат Запрос;
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц.
//	ПараметрыЗаполнения - см. ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ИспользуетсяЦенообразование25 = ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.КоличествоУпаковок КАК КоличествоУпаковок,
	|	КОНЕЦПЕРИОДА(ТаблицаТоваров.Ссылка.Дата, ДЕНЬ) КАК ДатаПолученияЦены,
	|	ТаблицаТоваров.Ссылка.ВидЦены КАК ВидЦены,
	|	ТаблицаТоваров.Ссылка.ВидЦены.ВалютаЦены КАК ВалютаЦены,
	|	&ПоляДляЦенообразованияВыборка,
	|	ТаблицаТоваров.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ ТаблицаТоваровДокументов
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ПО ВидыНоменклатуры.Ссылка = ТаблицаТоваров.Номенклатура.ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыЦенНоменклатуры.Ссылка,
	|	ПериодыЦенНоменклатуры.НомерСтроки,
	|	ПериодыЦенНоменклатуры.Номенклатура,
	|	ЦеныНоменклатуры.Цена,
	|	ЦеныНоменклатуры.Упаковка,
	|	ЦеныНоменклатуры.Валюта
	|ПОМЕСТИТЬ ЦеныНоменклатуры
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Ссылка КАК Ссылка,
	|		Товары.НомерСтроки КАК НомерСтроки,
	|		ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|		ЦеныНоменклатуры.Характеристика КАК Характеристика,
	|		ЦеныНоменклатуры.Валюта КАК Валюта,
	|		МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|	ИЗ
	|		ТаблицаТоваровДокументов КАК Товары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|			ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|			И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|			И Товары.Характеристика = ЦеныНоменклатуры.Характеристика
	|			И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
	|	ГДЕ &УсловиеПоЦенообразованию1
	|	СГРУППИРОВАТЬ ПО
	|		Товары.Ссылка,
	|		Товары.НомерСтроки,
	|		ЦеныНоменклатуры.ВидЦены,
	|		ЦеныНоменклатуры.Номенклатура,
	|		ЦеныНоменклатуры.Характеристика,
	|		ЦеныНоменклатуры.Валюта) КАК ПериодыЦенНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период
	|		И ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены
	|		И ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура
	|		И ПериодыЦенНоменклатуры.Характеристика = ЦеныНоменклатуры.Характеристика";
	
	Если ИспользуетсяЦенообразование25 Тогда
		
		Запрос.Текст = Запрос.Текст + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПериодыЦенНоменклатуры.Ссылка,
		|	ПериодыЦенНоменклатуры.НомерСтроки,
		|	ПериодыЦенНоменклатуры.Номенклатура,
		|	ЦеныНоменклатуры.Цена,
		|	ЦеныНоменклатуры.Упаковка,
		|	ЦеныНоменклатуры.Валюта
		|ИЗ
		|	(ВЫБРАТЬ
		|		Товары.Ссылка КАК Ссылка,
		|		Товары.НомерСтроки КАК НомерСтроки,
		|		ЦеныНоменклатуры.ВидЦены КАК ВидЦены,
		|		ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
		|		ЦеныНоменклатуры.ХарактеристикаЦО КАК ХарактеристикаЦО,
		|		ЦеныНоменклатуры.СерияЦО КАК СерияЦО,
		|		ЦеныНоменклатуры.УпаковкаЦО КАК УпаковкаЦО,
		|		ЦеныНоменклатуры.Валюта КАК Валюта,
		|		МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
		|	ИЗ
		|		ТаблицаТоваровДокументов КАК Товары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25 КАК ЦеныНоменклатуры
		|			ПО Товары.ВидЦены = ЦеныНоменклатуры.ВидЦены
		|			И Товары.Номенклатура = ЦеныНоменклатуры.Номенклатура
		|			И Товары.ХарактеристикаЦО = ЦеныНоменклатуры.ХарактеристикаЦО
		|			И Товары.СерияЦО = ЦеныНоменклатуры.СерияЦО
		|			И Товары.УпаковкаЦО = ЦеныНоменклатуры.УпаковкаЦО
		|			И Товары.ДатаПолученияЦены >= ЦеныНоменклатуры.Период
		|	ГДЕ
		|		&УсловиеПоЦенообразованию2
		|	СГРУППИРОВАТЬ ПО
		|		Товары.Ссылка,
		|		Товары.НомерСтроки,
		|		ЦеныНоменклатуры.ВидЦены,
		|		ЦеныНоменклатуры.Номенклатура,
		|		ЦеныНоменклатуры.ХарактеристикаЦО,
		|		ЦеныНоменклатуры.СерияЦО,
		|		ЦеныНоменклатуры.УпаковкаЦО,
		|		ЦеныНоменклатуры.Валюта) КАК ПериодыЦенНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры25 КАК ЦеныНоменклатуры
		|		ПО (ПериодыЦенНоменклатуры.Период = ЦеныНоменклатуры.Период)
		|		И (ПериодыЦенНоменклатуры.ВидЦены = ЦеныНоменклатуры.ВидЦены)
		|		И (ПериодыЦенНоменклатуры.Номенклатура = ЦеныНоменклатуры.Номенклатура)
		|		И (ПериодыЦенНоменклатуры.ХарактеристикаЦО = ЦеныНоменклатуры.ХарактеристикаЦО)
		|		И (ПериодыЦенНоменклатуры.СерияЦО = ЦеныНоменклатуры.СерияЦО)
		|		И (ПериодыЦенНоменклатуры.УпаковкаЦО = ЦеныНоменклатуры.УпаковкаЦО)";
		
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка.Организация.СтранаРегистрации КАК Страна,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(СтавкиНДСНоменклатуры.Период) КАК Период
	|ПОМЕСТИТЬ ТаблицаПериодовСтавокНДСНоменклатуры
	|ИЗ
	|	ТаблицаТоваровДокументов КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
	|		ПО ТаблицаТоваров.Ссылка.Организация.СтранаРегистрации = СтавкиНДСНоменклатуры.Страна
	|		И ТаблицаТоваров.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура
	|		И ТаблицаТоваров.Ссылка.Дата >= СтавкиНДСНоменклатуры.Период
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка.Организация.СтранаРегистрации,
	|	ТаблицаТоваров.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка.Организация.СтранаРегистрации КАК Страна,
	|	МАКСИМУМ(ОсновныеСтавкиНДС.Период) КАК Период
	|ПОМЕСТИТЬ ТаблицаПериодовОсновныхСтавокНДС
	|ИЗ
	|	ТаблицаТоваровДокументов КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
	|		ПО ТаблицаТоваров.Ссылка.Организация.СтранаРегистрации = ОсновныеСтавкиНДС.Страна
	|		И ТаблицаТоваров.Ссылка.Дата >= ОсновныеСтавкиНДС.Период
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка.Организация.СтранаРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыКурсовВалютПоДокументам.Ссылка,
	|	КурсыВалют.Валюта,
	|	КурсыВалют.КурсЧислитель,
	|	КурсыВалют.КурсЗнаменатель
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	(ВЫБРАТЬ
	|		Документы.Ссылка КАК Ссылка,
	|		Документы.Организация.ВалютаРегламентированногоУчета КАК БазоваяВалюта,
	|		МАКСИМУМ(КурсыВалют.Период) КАК Период,
	|		КурсыВалют.Валюта КАК Валюта
	|	ИЗ
	|		Документ.ПеремещениеТоваров КАК Документы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|			ПО Документы.Ссылка = ДанныеДокументов.Ссылка
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|			ПО Документы.Организация.ВалютаРегламентированногоУчета = КурсыВалют.БазоваяВалюта
	|			И Документы.Дата >= КурсыВалют.Период
	|	СГРУППИРОВАТЬ ПО
	|		Документы.Ссылка,
	|		Документы.Организация.ВалютаРегламентированногоУчета,
	|		КурсыВалют.Валюта) КАК ПериодыКурсовВалютПоДокументам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют КАК КурсыВалют
	|		ПО ПериодыКурсовВалютПоДокументам.Период = КурсыВалют.Период
	|		И ПериодыКурсовВалютПоДокументам.Валюта = КурсыВалют.Валюта
	|		И ПериодыКурсовВалютПоДокументам.БазоваяВалюта = КурсыВалют.БазоваяВалюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ЕСТЬNULL(СтавкиНДСНоменклатуры.СтавкаНДС, ЕСТЬNULL(ОсновныеСтавкиНДС.СтавкаНДС,
	|		ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка))) КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки2 ЕСТЬ NULL
	|		И &ТекстЗапросаКоэффициентУпаковки2 <> 0
	|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки2
	|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
	|	КОНЕЦ * ЕСТЬNULL(КурсыВалют.КурсЧислитель, 1) / ЕСТЬNULL(КурсыВалют.КурсЗнаменатель, 1) *
	|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) * ТаблицаТоваров.КоличествоУпаковок КАК СуммаБезНДС,
	|	ВЫБОР
	|		КОГДА НЕ &ТекстЗапросаКоэффициентУпаковки2 ЕСТЬ NULL
	|		И &ТекстЗапросаКоэффициентУпаковки2 <> 0
	|			ТОГДА ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0) / &ТекстЗапросаКоэффициентУпаковки2
	|		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатуры.Цена, 0)
	|	КОНЕЦ * ЕСТЬNULL(КурсыВалют.КурсЧислитель, 1) / ЕСТЬNULL(КурсыВалют.КурсЗнаменатель, 1) *
	|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК Цена,
	|	0 КАК СуммаНДС,
	|	ИСТИНА КАК ЭтоТовар,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоНеВозвратнаяТара,
	|	ТаблицаТоваров.Упаковка КАК Упаковка
	|ПОМЕСТИТЬ ПеремещениеТоваровТаблицаТоваров
	|ИЗ
	|	ТаблицаТоваровДокументов КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ПО ТаблицаТоваров.Ссылка = ЦеныНоменклатуры.Ссылка
	|		И ТаблицаТоваров.НомерСтроки = ЦеныНоменклатуры.НомерСтроки
	|			ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют КАК КурсыВалют
	|			ПО ЦеныНоменклатуры.Ссылка = КурсыВалют.Ссылка
	|			И ЦеныНоменклатуры.Валюта = КурсыВалют.Валюта
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПериодовСтавокНДСНоменклатуры КАК ТаблицаПериодовСтавокНДСНоменклатуры
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтавкиНДСНоменклатуры КАК СтавкиНДСНоменклатуры
	|			ПО ТаблицаПериодовСтавокНДСНоменклатуры.Страна = СтавкиНДСНоменклатуры.Страна
	|			И ТаблицаПериодовСтавокНДСНоменклатуры.Номенклатура = СтавкиНДСНоменклатуры.Номенклатура
	|			И ТаблицаПериодовСтавокНДСНоменклатуры.Период = СтавкиНДСНоменклатуры.Период
	|		ПО ТаблицаТоваров.Ссылка.Организация.СтранаРегистрации = ТаблицаПериодовСтавокНДСНоменклатуры.Страна
	|		И ТаблицаТоваров.Номенклатура = ТаблицаПериодовСтавокНДСНоменклатуры.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПериодовОсновныхСтавокНДС КАК ТаблицаПериодовОсновныхСтавокНДС
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСтавкиНДС КАК ОсновныеСтавкиНДС
	|			ПО ТаблицаПериодовОсновныхСтавокНДС.Страна = ОсновныеСтавкиНДС.Страна
	|			И ТаблицаПериодовОсновныхСтавокНДС.Период = ОсновныеСтавкиНДС.Период
	|		ПО ТаблицаТоваров.Ссылка.Организация.СтранаРегистрации = ТаблицаПериодовОсновныхСтавокНДС.Страна
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЦеныНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПериодовСтавокНДСНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПериодовОсновныхСтавокНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТоваровДокументов";

	Если ИспользуетсяЦенообразование25 Тогда
		ДатаПереходаНаЦенообразование25 = ЦенообразованиеВызовСервера.ДатаПереходаНаЦенообразованиеВерсии25();
		УсловиеПоЦенообразованию1 = "Товары.ДатаПолученияЦены < &ДатаПереходаНаЦенообразование25";
		УсловиеПоЦенообразованию2 = "Товары.ДатаПолученияЦены >= &ДатаПереходаНаЦенообразование25";
	Иначе
		ДатаПереходаНаЦенообразование25 = Дата(1,1,1);
		УсловиеПоЦенообразованию1 = "Истина";
		УсловиеПоЦенообразованию2 = "Ложь";
	КонецЕсли;

	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоЦенообразованию1", УсловиеПоЦенообразованию1);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоЦенообразованию2", УсловиеПоЦенообразованию2);

	НастройкаЦенообразования = ЦенообразованиеКлиентСервер.НастройкиДляВременнойТаблицыСДополнениемДляЦенообразования();
	НастройкаЦенообразования.ИсточникТоваров = "ТаблицаТоваров";

	ТекстЗамены = ЦенообразованиеКлиентСервер.ТекстПолейДляЦенообразования(НастройкаЦенообразования,
																			,
																			ИспользуетсяЦенообразование25);
	
	Если ЗначениеЗаполнено(ТекстЗамены) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПоляДляЦенообразованияВыборка", ТекстЗамены);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПоляДляЦенообразованияВыборка,", "");
	КонецЕсли;

	Запрос.УстановитьПараметр("ДатаПереходаНаЦенообразование25", ДатаПереходаНаЦенообразование25);
	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ТаблицаТоваров.Упаковка",
			"ТаблицаТоваров.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЦеныНоменклатуры.Упаковка",
			"ЦеныНоменклатуры.Номенклатура"));
		
	Запрос.Выполнить();
	
КонецПроцедуры
//-- Локализация
#КонецОбласти


//++ Локализация

// Правила получения значений реквизитов ТТН
// 
// Возвращаемое значение:
//  см. Документы.ТранспортнаяНакладная.ПараметрыФормированияТранспортныхНакладных 
//
Функция ПараметрыФормированияТранспортныхНакладных() Экспорт
	
	ПараметрыФормированияТранспортныхНакладных =
		Документы.ТранспортнаяНакладная.ПараметрыФормированияТранспортныхНакладных();
		
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.Грузоотправитель = "ОснованиеТранспортнойНакладной.Организация";
	
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.Грузополучатель = 
	"	ВЫБОР
	|		КОГДА ОснованиеТранспортнойНакладной.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|			ОснованиеТранспортнойНакладной.Организация
	|		ИНАЧЕ
	|			ОснованиеТранспортнойНакладной.ОрганизацияПолучатель
	|	КОНЕЦ";
	
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.ЗаказчикПеревозки                 = "ОснованиеТранспортнойНакладной.Организация";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.БанковскийСчетЗаказчикаПеревозки  = "ОснованиеТранспортнойНакладной.БанковскийСчетОрганизации";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.Плательщик                        =
	"	ВЫБОР
	|		КОГДА ОснованиеТранспортнойНакладной.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|			ОснованиеТранспортнойНакладной.Организация
	|		ИНАЧЕ
	|			ОснованиеТранспортнойНакладной.ОрганизацияПолучатель
	|	КОНЕЦ";
	
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.БанковскийСчетПлательщика         = 
	"	ВЫБОР
	|		КОГДА ОснованиеТранспортнойНакладной.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|			ОснованиеТранспортнойНакладной.БанковскийСчетОрганизации
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|	КОНЕЦ";
	
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.ДоверенностьНомер                 = """""";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.ДоверенностьДата                  = "ДАТАВРЕМЯ(1,1,1)";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.ДоверенностьВыдана                = """""";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.ДоверенностьЛицо                  = """""";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.Отпустил                          = "ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)";
	ПараметрыФормированияТранспортныхНакладных.Реквизиты.ОтпустилДолжность                 = """""";
	
	ПараметрыФормированияТранспортныхНакладных.ЕстьЗаказы = Истина;
	ПараметрыФормированияТранспортныхНакладных.ИмяПоляЗаказВТЧТовары = "ЗаказНаПеремещение";
	ПараметрыФормированияТранспортныхНакладных.ИмяПоляНакладнаяПоЗаказу = "ПеремещениеПоЗаказам";
	
	ПараметрыФормированияТранспортныхНакладных.ИмяПоляСклад = "СкладОтправитель";
	
	ПараметрыФормированияТранспортныхНакладных.РеквизитыШапкиДляПечати.Валюта = "ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)";
	
	Возврат	ПараметрыФормированияТранспортныхНакладных;
	
КонецФункции

// Правила получения значений реквизитов ЭТН
// 
// Возвращаемое значение:
//  см. ОбменСГИСЭПДПереопределяемый.ПараметрыФормированияЭлектронныхТранспортныхНакладных
//
Функция ПараметрыФормированияЭлектронныхТранспортныхНакладных() Экспорт
	
	ПараметрыФормирования =
		ОбменСГИСЭПДПереопределяемый.ПараметрыФормированияЭлектронныхТранспортныхНакладных();

	ПараметрыФормирования.Реквизиты.СсылкаТитулГрузоотправителяГрузоотправитель = "ОснованиеТранспортнойНакладной.Организация";
	ПараметрыФормирования.Реквизиты.СсылкаТитулГрузоотправителяФХЖБанковскиеРеквизиты = "ОснованиеТранспортнойНакладной.БанковскийСчетОрганизации";
	
	ПараметрыФормирования.Реквизиты.СсылкаТитулГрузоотправителяГрузополучатель = 
	"	ВЫБОР
	|		КОГДА ОснованиеТранспортнойНакладной.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|			ОснованиеТранспортнойНакладной.Организация
	|		ИНАЧЕ
	|			ОснованиеТранспортнойНакладной.ОрганизацияПолучатель
	|	КОНЕЦ";

	ПараметрыФормирования.Реквизиты.ТитулГрузоотправителяДоверенностьНомер                 = """""";
	ПараметрыФормирования.Реквизиты.ТитулГрузоотправителяДоверенностьДата                  = "ДАТАВРЕМЯ(1,1,1)";
	ПараметрыФормирования.Реквизиты.СсылкаТитулГрузоотправителяВалюта                      = """""";
	
	ПараметрыФормирования.ЕстьЗаказы = Истина;
	ПараметрыФормирования.ИмяПоляЗаказВТЧТовары = "ЗаказНаПеремещение";
	ПараметрыФормирования.ИмяПоляНакладнаяПоЗаказу = "ПеремещениеПоЗаказам";
	ПараметрыФормирования.ИмяПоляСуммы = "";
	
	ПараметрыФормирования.ИмяПоляСклад = "СкладОтправитель";
	
	Возврат	ПараметрыФормирования;
	
КонецФункции

// Правила получения значений реквизитов ЭЗН
// 
// Возвращаемое значение:
//  см. ОбменСГИСЭПДПереопределяемый.ПараметрыФормированияЭлектронныхЗаказНарядов
//
Функция ПараметрыФормированияЭлектронныхЗаказНарядов() Экспорт
	
	ПараметрыФормирования =
		ОбменСГИСЭПДПереопределяемый.ПараметрыФормированияЭлектронныхЗаказНарядов();
		
	ПараметрыФормирования.Реквизиты.СсылкаТитулФрахтователяФрахтователь = 
	"	ВЫБОР
	|		КОГДА ОснованиеТранспортнойНакладной.ОрганизацияПолучатель = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) ТОГДА
	|			ОснованиеТранспортнойНакладной.Организация
	|		ИНАЧЕ
	|			ОснованиеТранспортнойНакладной.ОрганизацияПолучатель
	|	КОНЕЦ";
	
	ПараметрыФормирования.Реквизиты.СсылкаТитулФрахтователяВалютаОбщейСтоимости       = """""";

	ПараметрыФормирования.ЕстьЗаказы = Истина;
	ПараметрыФормирования.ИмяПоляЗаказВТЧТовары = "ЗаказНаПеремещение";
	ПараметрыФормирования.ИмяПоляНакладнаяПоЗаказу = "ПеремещениеПоЗаказам";
	
	ПараметрыФормирования.ИмяПоляСклад = "СкладОтправитель";
	
	Возврат	ПараметрыФормирования;
	
КонецФункции

//-- Локализация

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ЗаполнениеДокументаПоЗаказамОрдерам

#Область ПодборМаркируемойПродукцииИзОрдеров

// Заполнить штрихкоды упаковок.
// 
// Параметры:
//  РаспоряженияДляОрдеров - Массив Из ДокументСсылка - Распоряжения для ордеров
//  Товары - ТаблицаЗначений - Товары
//  ШтрихкодыУпаковок - ТаблицаЗначений - Штрихкоды упаковок
Процедура ЗаполнитьШтрихкодыУпаковок(РаспоряженияДляОрдеров, Товары, ШтрихкодыУпаковок) Экспорт

//++ Локализация

	ИнтеграцияИСУТ.ЗаполнитьШтрихкодыУпаковок(РаспоряженияДляОрдеров, Товары, ШтрихкодыУпаковок);

//-- Локализация

КонецПроцедуры

// Перенести штрих коды упаковок в документ при завершении подбора.
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма документа Внутреннее потребление
//  ШтрихкодыУпаковок - ТаблицаЗначений - Штрихкоды упаковок к загрузке
Процедура ПеренестиШтрихкодыУпаковок(Форма, ШтрихкодыУпаковок) Экспорт

//++ Локализация

	ИнтеграцияИСУТ.ПеренестиШтрихкодыУпаковок(Форма, ШтрихкодыУпаковок);

//-- Локализация

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация


	//-- Локализация
	
КонецПроцедуры

//++ Локализация


//-- Локализация

#КонецОбласти

//++ Локализация


Процедура ПоместитьВременнуюТаблицуНаборов(МенеджерВременныхТаблиц)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
		|	СтрокиТоваров.Ссылка                                        КАК Ссылка,
		|
		|	ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.ВариантыКомплектацииНоменклатуры.ПустаяСсылка)) КАК ВариантКомплектацииНоменклатуры,
		|	ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах, ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)) КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ЕСТЬNULL(ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора, ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)) КАК ВариантРасчетаЦеныНабора,
		|
		|	СтрокиТоваров.НоменклатураНабора   КАК НоменклатураНабора,
		|	СтрокиТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|
		|	СтрокиТоваров.НомерСтроки        КАК НомерСтроки,
		|	СтрокиТоваров.Номенклатура       КАК Номенклатура,
		|	СтрокиТоваров.Характеристика     КАК Характеристика,
		|	СтрокиТоваров.Серия              КАК Серия,
		|	
		|	СтрокиТоваров.Количество         КАК Количество,
		|	СтрокиТоваров.КоличествоУпаковок КАК КоличествоУпаковок,
		|	
		|	СтрокиТоваров.Упаковка КАК Упаковка,
		|	ВЫРАЗИТЬ(&ТекстЗапросаВесНоменклатуры КАК ЧИСЛО(12,3))         КАК МассаНетто
		|
		|ПОМЕСТИТЬ ПеремещениеТоваровТаблицаТоваровДляПреобразования
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК СтрокиТоваров
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаДанныхДокументов КАК ДанныеДокументов
		|	ПО
		|		СтрокиТоваров.Ссылка = ДанныеДокументов.Ссылка
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
		|		ПО ВариантыКомплектацииНоменклатуры.Владелец = СтрокиТоваров.АналитикаУчетаНаборов.НоменклатураНабора
		|		И ВариантыКомплектацииНоменклатуры.Характеристика = СтрокиТоваров.АналитикаУчетаНаборов.ХарактеристикаНабора
		|		И ВариантыКомплектацииНоменклатуры.Основной
		|
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	НомерСтроки
		//Наборы
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.Ссылка КАК Ссылка,
		|	ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	МИНИМУМ(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки,
		|	СУММА(ТаблицаТоваров.Количество * ТаблицаТоваров.МассаНетто) КАК МассаНетто
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
		|ИЗ
		|	ПеремещениеТоваровТаблицаТоваровДляПреобразования КАК ТаблицаТоваров
		|ГДЕ
		|	ТаблицаТоваров.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.Ссылка,
		|	ТаблицаТоваров.НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Результат.Ссылка КАК Ссылка,
		|	Результат.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатуры,
		|	Результат.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
		|	Результат.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|	Результат.НоменклатураНабора КАК НоменклатураНабора,
		|	Результат.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	(ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
		|				КОГДА Результат.КоличествоПоУмолчанию <> 0
		|						И Результат.ОсновнаяКомплектующая
		|					ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
		|				ИНАЧЕ NULL
		|			КОНЕЦ) + 0.5 КАК ЧИСЛО(10, 0))) - 1 КАК Количество,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА Результат.КоличествоПоУмолчанию <> 0
		|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
		|			ИНАЧЕ NULL
		|		КОНЕЦ) КАК КоэффициентМаксимум,
		|	(ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
		|				КОГДА Результат.КоличествоПоУмолчанию <> 0
		|					ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
		|				ИНАЧЕ NULL
		|			КОНЕЦ) + 0.5 КАК ЧИСЛО(10, 0))) - 1 КАК КоэффициентМинимум
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
		|ИЗ
		|	(ВЫБРАТЬ
		|		Таблица.Ссылка КАК Ссылка,
		|		Таблица.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатуры,
		|		Таблица.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
		|		Таблица.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|		Таблица.НоменклатураНабора КАК НоменклатураНабора,
		|		Таблица.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|		Таблица.Номенклатура КАК Номенклатура,
		|		Таблица.Характеристика КАК Характеристика,
		|		МАКСИМУМ(Таблица.ОсновнаяКомплектующая) КАК ОсновнаяКомплектующая,
		|		СУММА(Таблица.КоличествоПоУмолчанию) КАК КоличествоПоУмолчанию,
		|		СУММА(Таблица.Количество) КАК Количество
		|	ИЗ
		|		(ВЫБРАТЬ
		|			Товары.Ссылка КАК Ссылка,
		|			Товары.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатуры,
		|			Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
		|			Товары.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
		|			Товары.НоменклатураНабора КАК НоменклатураНабора,
		|			Товары.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|			Товары.Номенклатура КАК Номенклатура,
		|			Товары.Характеристика КАК Характеристика,
		|			ВЫБОР
		|				КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
		|						И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ КАК ОсновнаяКомплектующая,
		|			0 КАК КоличествоПоУмолчанию,
		|			Товары.Количество КАК Количество
		|		ИЗ
		|			ПеремещениеТоваровТаблицаТоваровДляПреобразования КАК Товары
		|		ГДЕ
		|			Товары.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ТаблицаДанныхДокументов.Ссылка,
		|			ВариантыКомплектацииНоменклатурыТовары.Ссылка,
		|			ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантПредставленияНабораВПечатныхФормах,
		|			ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантРасчетаЦеныНабора,
		|			ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец,
		|			ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика,
		|			ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
		|			ВариантыКомплектацииНоменклатурыТовары.Характеристика,
		|			ЛОЖЬ,
		|			ВариантыКомплектацииНоменклатурыТовары.Количество,
		|			0
		|		ИЗ
		|			Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
		|				ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ТаблицаДанныхДокументов
		|				ПО (ИСТИНА)
		|		ГДЕ
		|			ВариантыКомплектацииНоменклатурыТовары.Ссылка В
		|					(ВЫБРАТЬ
		|						ПеремещениеТоваровТаблицаТоваровДляПреобразования.ВариантКомплектацииНоменклатуры
		|					ИЗ
		|						ПеремещениеТоваровТаблицаТоваровДляПреобразования КАК ПеремещениеТоваровТаблицаТоваровДляПреобразования)) КАК Таблица
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Таблица.Ссылка,
		|		Таблица.ВариантКомплектацииНоменклатуры,
		|		Таблица.ВариантРасчетаЦеныНабора,
		|		Таблица.ВариантПредставленияНабораВПечатныхФормах,
		|		Таблица.НоменклатураНабора,
		|		Таблица.ХарактеристикаНабора,
		|		Таблица.Номенклатура,
		|		Таблица.Характеристика) КАК Результат
		|
		|СГРУППИРОВАТЬ ПО
		|	Результат.Ссылка,
		|	Результат.ВариантКомплектацииНоменклатуры,
		|	Результат.ВариантРасчетаЦеныНабора,
		|	Результат.ВариантПредставленияНабораВПечатныхФормах,
		|	Результат.НоменклатураНабора,
		|	Результат.ХарактеристикаНабора
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	НоменклатураНабора,
		|	ХарактеристикаНабора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры КАК ВариантКомплектацииНоменклатуры,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(Таблица.Ссылка КАК Документ.ПеремещениеТоваров).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
		|			ТОГДА ВЫБОР
		|					КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор)
		|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
		|					ИНАЧЕ ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
		|				КОНЕЦ
		|		ИНАЧЕ ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
		|	КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
		|	Таблица.Ссылка КАК Ссылка,
		|	Таблица.НоменклатураНабора КАК НоменклатураНабора,
		|	Таблица.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	Таблица.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК КоличествоУпаковок,
		|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК Количество,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблицаНаборыДополнительно.КоэффициентМинимум = ВременнаяТаблицаНаборыДополнительно.КоэффициентМаксимум
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПолныйНабор,
		|	Таблица.МассаНетто КАК МассаНетто
		|ПОМЕСТИТЬ ВременнаяТаблицаНаборы
		|ИЗ
		|	ВременнаяТаблицаНаборыПодготовка КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ВременнаяТаблицаНаборыДополнительно
		|		ПО Таблица.НоменклатураНабора = ВременнаяТаблицаНаборыДополнительно.НоменклатураНабора
		|			И Таблица.ХарактеристикаНабора = ВременнаяТаблицаНаборыДополнительно.ХарактеристикаНабора
		|			И Таблица.Ссылка = ВременнаяТаблицаНаборыДополнительно.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка,
		|	НоменклатураНабора,
		|	ХарактеристикаНабора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0
		|			ТОГДА ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)
		|	КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0
		|			ТОГДА ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)
		|	КОНЕЦ КАК ВариантРасчетаЦеныНабора,
		|	ТаблицаТоваров.НоменклатураНабора КАК НоменклатураНабора,
		|	ТаблицаТоваров.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоКомплектующие,
		|	ЛОЖЬ КАК ЭтоНабор,
		|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0
		|			ТОГДА ВременнаяТаблицаНаборы.НомерСтроки
		|		ИНАЧЕ ТаблицаТоваров.НомерСтроки
		|	КОНЕЦ КАК НомерСтрокиНаборы,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0
		|			ТОГДА ВременнаяТаблицаНаборы.ПолныйНабор
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПолныйНабор,
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваров.Количество КАК Количество,
		|	ТаблицаТоваров.КоличествоУпаковок КАК КоличествоУпаковок,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ТаблицаТоваров.Серия КАК Серия,
		|	ТаблицаТоваров.Упаковка КАК Упаковка,
		|
		|	ТаблицаТоваров.Количество * ТаблицаТоваров.МассаНетто КАК МассаНетто,
		|	ВЫБОР
		|		КОГДА (ТаблицаТоваров.НоменклатураНабора = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|				ИЛИ ТаблицаТоваров.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|				И ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие), ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)))
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК НеВыводить
		|ПОМЕСТИТЬ ПеремещениеТоваровТаблицаТоваров
		|ИЗ
		|	ПеремещениеТоваровТаблицаТоваровДляПреобразования КАК ТаблицаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
		|		ПО (ВременнаяТаблицаНаборы.НоменклатураНабора = ТаблицаТоваров.НоменклатураНабора)
		|			И (ВременнаяТаблицаНаборы.ХарактеристикаНабора = ТаблицаТоваров.ХарактеристикаНабора)
		|			И (ВременнаяТаблицаНаборы.Ссылка = ТаблицаТоваров.Ссылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВременнаяТаблицаНаборы.Ссылка,
		|	ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах,
		|	ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора,
		|	ВременнаяТаблицаНаборы.НоменклатураНабора,
		|	ВременнаяТаблицаНаборы.ХарактеристикаНабора,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ВременнаяТаблицаНаборы.НомерСтроки,
		|	ВременнаяТаблицаНаборы.НомерСтроки,
		|	ВременнаяТаблицаНаборы.ПолныйНабор,
		|	ВременнаяТаблицаНаборы.НоменклатураНабора,
		|	ВременнаяТаблицаНаборы.Количество,
		|	ВременнаяТаблицаНаборы.КоличествоУпаковок,
		|	ВременнаяТаблицаНаборы.ХарактеристикаНабора,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
		|	ВременнаяТаблицаНаборы.МассаНетто,
		|	ЛОЖЬ
		|ИЗ
		|	ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
		|ГДЕ
		|	ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор), ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВременнаяТаблицаНаборыПодготовка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВременнаяТаблицаНаборыДополнительно
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВременнаяТаблицаНаборы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПеремещениеТоваровТаблицаТоваровДляПреобразования";		
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст, 
		"&ТекстЗапросаВесНоменклатуры",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"СтрокиТоваров.Номенклатура.ЕдиницаИзмерения",
			"СтрокиТоваров.Номенклатура"));
	
	Запрос.Выполнить();
	
КонецПроцедуры

//-- Локализация

#КонецОбласти
