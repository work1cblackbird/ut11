///////////////////////////////////////////////////////////////////////////////
// Модуль "НаправленияДеятельностиСервер", содержит процедуры и функции необходимые для
// работы серверной части форм накладных и заказов.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ОбщиеОбработчикиСобытийФорм

// Устарело. Необходимо использовать НазначенияСервер.ПриЧтенииСозданииНаСервере
// Используется в формах документов, в одноименных процедурах "ПриЧтенииСозданииНаСервере".
// Инициализирует реквизиты формы, используемые при интерактивной работе пользователя. Заполняет назначение, исходя из
// направления деятельности.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма в которой необходимо инициализировать реквизиты связанные с использованием
//                             направлений деятельности.
//
Процедура ПриЧтенииСозданииНаСервере(Форма) Экспорт
	
	НазначенияСервер.ПриЧтенииСозданииНаСервере(Форма, Истина);
	
КонецПроцедуры

// Устарело. Необходимо использовать НазначенияСервер.ПослеЗаписиНаСервере
// Используется в формах документов, в одноименных процедурах "ПослеЗаписиНаСервере".
// Заполняет реквизит формы "Отгружать обособленно" табличной части исходя из заполненности назначения.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма в которой необходимо инициализировать реквизиты связанные с использованием
//                             направлений деятельности.
//
Процедура ПослеЗаписиНаСервере(Форма) Экспорт
	
	НазначенияСервер.ПослеЗаписиНаСервере(Форма, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовНаФормах

// Устарело. Необходимо использовать НазначенияСервер.ПриИзмененииШаблонаНазначенияВДокументе
// Используется в формах документов, в процедурах, приводящих к изменению направления деятельности.
// Инициализирует реквизиты формы, используемые при интерактивной работе пользователя. Заполняет назначение, исходя из
// направления деятельности. При необходимости актуализирует назначения в табличных частях документа, в соответствии с
// изменившимся направлением деятельности.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма в которой необходимо инициализировать реквизиты связанные с использованием
//                             направлений деятельности.
//
// Возвращаемое значение:
//  Массив Из ДанныеФормыЭлементКоллекции - массив измененных строк табличной части документа.
//
Функция ПриИзмененииНаправленияДеятельности(Форма) Экспорт
	
	Возврат НазначенияСервер.ПриИзмененииШаблонаНазначенияВДокументе(Форма, Истина);
	
КонецФункции

// Устарело. Необходимо использовать НазначенияСервер.УстановитьВидимостьЭлементовОбособленно
// Используется в формах документов, в процедурах, приводящих к изменению флага по заказам.
// Управляет видимостью элементов.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма в которой необходимо отреагировать на изменение флага по заказам.
//
Процедура УстановитьВидимостьЭлементовОбособленно(Форма) Экспорт
	
	НазначенияСервер.УстановитьВидимостьЭлементовОбособленно(Форма, Истина);
	 
КонецПроцедуры

// Устарело. Необходимо использовать НазначенияСервер.ПриЗаполненииПоСпецификацииСервер
// Используется в форме документа заказ переработчику при заполнении документа по спецификации.
// Инициализирует реквизиты формы, используемые при интерактивной работе пользователя. Заполняет назначение, исходя из
// направления деятельности.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма в которой необходимо инициализировать реквизиты связанные с использованием
//                             направлений деятельности.
//
Процедура ПриЗаполненииПоСпецификацииСервер(Форма) Экспорт
	
	НазначенияСервер.ПриЗаполненииПоСпецификацииСервер(Форма, Истина);
	
КонецПроцедуры

// Устарело. Необходимо использовать НазначенияСервер.УстановитьУсловноеОформлениеФлагаОбособленно
// Используется в формах документов. Устанавливает условное оформление флага Обособленно..
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма в которой необходимо установить условное оформление.
//
Процедура УстановитьУсловноеОформлениеФлагаОбособленно(Форма) Экспорт
	
	НазначенияСервер.УстановитьУсловноеОформлениеФлагаОбособленно(Форма, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Устарело. Необходимо использовать НазначенияСервер.УстановитьСнятьОтметкуОбособленно
// В табличной части формы документа устанавливает флаг "Обособленно" для выделенных строк.
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - Форма.
//  Установить - Булево - Истина если нужно установить флаг, Ложь - если нужно сбросить флаг.
Процедура УстановитьСнятьОтметкуОбособленно(Форма, Установить) Экспорт
	
	НазначенияСервер.УстановитьСнятьОтметкуОбособленно(Форма, Установить, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область Заполнение

// Заполняет реквизит "НаправлениеДеятельности" в строке по данным назначение или переданного параметра
//
// Параметры:
//  ТекущаяСтрока		 - Структура - данные обрабатываемой строки.
//  СтруктураДействий	 - Структура - описывает действия, где Ключ - наименование действия,
//  														   Значение - Структура - параметры действия.
//  КэшированныеЗначения - Структура - сохраненные значения параметров, используемых при обработке.
//  ПараметрыДействия    - Структура, Неопределено - параметры для выполнения данного действия.
//
Процедура ЗаполнитьНаправлениеДеятельности(
			ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения, ПараметрыДействия = Неопределено) Экспорт

	Перем НаправлениеДеятельности;

	Если ЗначениеЗаполнено(ТекущаяСтрока.Назначение) Тогда

		СвойстваНазначение = КэшированныеЗначения.СвойстваНазначений.Получить(ТекущаяСтрока.Назначение);

		Если СвойстваНазначение = Неопределено Тогда

			СвойстваНазначений = Справочники.Назначения.СвойстваНазначений(ТекущаяСтрока.Назначение);
			СвойстваНазначение = СвойстваНазначений.Получить(ТекущаяСтрока.Назначение);

			КэшированныеЗначения.СвойстваНазначений.Вставить(ТекущаяСтрока.Назначение, СвойстваНазначение);

		КонецЕсли;

		НаправлениеДеятельности = СвойстваНазначение.НаправлениеДеятельности;

	ИначеЕсли ПараметрыДействия <> Неопределено Тогда

		НаправлениеДеятельности = ПараметрыДействия.НаправлениеДеятельности;

	КонецЕсли;

	ТекущаяСтрока.НаправлениеДеятельности = НаправлениеДеятельности;

КонецПроцедуры

// Заполняет реквизит "НаправлениеДеятельности" в строке по данным назначение или переданного параметра
// с помощью пакетного механизма пакетной обработки строк табличных частей.
//
// Параметры:
//  ТекущаяСтрока - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧВЦикле.ТекущаяСтрока.
//  СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧВЦикле.Действия.
//  КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения.
//  ПараметрыДействия    - Структура, Неопределено - параметры для выполнения данного действия.
//
Процедура ЗаполнитьНаправлениеДеятельностиПакетно(
			ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения, ПараметрыДействия = Неопределено) Экспорт

	Перем НаправлениеДеятельности;

	Если ЗначениеЗаполнено(ТекущаяСтрока.Назначение) Тогда

		СвойстваНазначение = КэшированныеЗначения.СвойстваНазначений.Получить(ТекущаяСтрока.Назначение);

		Если СвойстваНазначение = Неопределено Тогда
			
			НаправлениеДеятельности = ПакетнаяОбработкаТабличнойЧастиСервер.ДанныеДляОбработкиСтроки(
										"НаправлениеДеятельностиПоНазначению",
										КэшированныеЗначения)[0].НаправлениеДеятельности;
			
		Иначе
			
			НаправлениеДеятельности = СвойстваНазначение.НаправлениеДеятельности;
			
		КонецЕсли;
		
	ИначеЕсли ПараметрыДействия <> Неопределено Тогда

		НаправлениеДеятельности = ПараметрыДействия.НаправлениеДеятельности;

	КонецЕсли;

	ТекущаяСтрока.НаправлениеДеятельности = НаправлениеДеятельности;

КонецПроцедуры

// Заполняет направление из соглашения или договора
//
// Параметры:
//  НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности - направление деятельности, которое будет заполнено.
//  Соглашение - СправочникСсылка.СоглашенияСКлиентами, СправочникСсылка.СоглашенияСПоставщиками - Соглашение документа.
//  Договор - СправочникСсылка.ДоговорыКонтрагентов,
//            СправочникСсылка.ДоговорыКредитовИДепозитов,
//            СправочникСсылка.ДоговорыАренды,
//            СправочникСсылка.ДоговорыМеждуОрганизациями - Договор документа.
//
Процедура ЗаполнитьНаправлениеПоУмолчанию(НаправлениеДеятельности, Знач Соглашение = Неопределено, Знач Договор = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(Договор) Тогда
					
		НаправлениеДеятельности = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "НаправлениеДеятельности");
		
	ИначеЕсли ЗначениеЗаполнено(Соглашение) Тогда
		
		НаправлениеДеятельности = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Соглашение, "НаправлениеДеятельности");
		
	КонецЕсли;
		
КонецПроцедуры

// Устарело. Необходимо использовать НазначенияСервер.ПерезаполнитьСлужебныеРеквизитыТабличнойЧасти
//  Используется в формах документов. Заполняет реквизит формы "Отгружать обособленно" табличной части исходя из заполненности назначения.
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма в которой необходимо инициализировать реквизиты связанные с использованием
//                             направлений деятельности.
//
Процедура ПерезаполнитьСлужебныеРеквизитыТабличнойЧасти(Форма) Экспорт
	
	НазначенияСервер.ПерезаполнитьСлужебныеРеквизитыТабличнойЧасти(Форма, Истина);
	
КонецПроцедуры

// Добавляет запрос в пакет запросов для получения данных, необходимых для заполнения направления деятельности
// по назначению. 
//
// Параметры:
//  СтруктураДействий - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения
//  ОписаниеЗапроса - см. ПакетнаяОбработкаТабличнойЧастиСервер.ОписаниеЗапроса
//  КэшированныеЗначения - см. ПакетнаяОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения
//
Процедура ДополнитьТекстЗапросаНаправлениеДеятельностиПоНазначению(СтруктураДействий, ОписаниеЗапроса, КэшированныеЗначения) Экспорт
	
	Если ПакетнаяОбработкаТабличнойЧастиСервер.ТребуетсяВыполнитьДействие(
		"ЗаполнитьНаправлениеДеятельности", СтруктураДействий, КэшированныеЗначения) Тогда
	
		ТекстЗапроса = "ВЫБРАТЬ
			|	ИсточникДанных.ИдентификаторСтрокиВТ КАК ИдентификаторСтрокиВТ,
			|	ЕСТЬNULL(СправочникНазначения.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК НаправлениеДеятельности
			|ИЗ
			|	ВтИсточникДанных КАК ИсточникДанных
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СправочникНазначения
			|		ПО ИсточникДанных.Назначение = СправочникНазначения.Ссылка";
		ОписаниеЗапроса.ТекстыЗапросов.Добавить(ТекстЗапроса, "НаправлениеДеятельностиПоНазначению");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Устанавливает условное для реквизита НаправлениеДеятельности.
//
// Параметры:
//	Форма - ФормаКлиентскогоПриложения - форма, для которой настраивается условное оформление.
//
Процедура УстановитьУсловноеОформлениеНаправленияДеятельности(Форма) Экспорт
	
	//
	Элемент = Форма.УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеНаправления = Форма.Элементы.НаправлениеДеятельности; // ПолеФормы - 
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ПолеНаправления.Имя);

	ГруппаОтбора1 = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;

	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НаправлениеДеятельностиОбязательно");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НаправлениеДеятельности");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	//
	Элемент = Форма.УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ПолеНаправления.Имя);

	ГруппаОтбора1 = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;

	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НаправлениеДеятельностиОбязательно");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НаправлениеДеятельности");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
КонецПроцедуры

// Определяет образует ли хозяйственная операция доход
//
// Параметры:
//  ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа или договора.
//
// Возвращаемое значение:
// 		Булево - Истина, если образуется доход.
//
Функция ХозяйственнаяОперацияОбразуетДоход(ХозяйственнаяОперация) Экспорт
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКомиссионногоТовара
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияВРозницу
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтгрузкаБезПереходаПраваСобственности
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента 
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомиссионера
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомиссионераОСписании
		//++ Устарело_Переработка24
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья
		//-- Устарело_Переработка24
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья2_5
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыкупТоваровХранителем
		//Интеркампани
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями 
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоставкаПодПринципала
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию Тогда
		
		Возврат Истина;
	
	Иначе
	
		Возврат Ложь;
	
	КонецЕсли;

КонецФункции

// Определяет образует ли хозяйственная операция актив
//
// Параметры:
//  ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа или договора.
//
// Возвращаемое значение:
// 		Булево - Истина, если образуется актив.
//
Функция ХозяйственнаяОперацияОбразуетАктив(ХозяйственнаяОперация) Экспорт
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемНаКомиссию
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаТоварыВПути
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаФактуровкаПоставки
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщикаРеглУчет
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо 
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпортуТоварыВПути
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭС
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСТоварыВПути
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСФактуровкаПоставки
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровПоставщику
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОформлениеГТДБрокером
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОформлениеГТДСамостоятельно 
		//++ Устарело_Переработка24
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчика
		//-- Устарело_Переработка24
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчика2_5
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПроизводствоУПереработчикаВСтранахЕАЭС2_5
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПриемНаКомиссию
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомитенту
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомитентуОСписании
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров
		
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.Ремонт
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.Модернизация
		//++ Устарело_Переработка24
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПереработчику
		//-- Устарело_Переработка24
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаПереработчику2_5
		//++ Устарело_Переработка24
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчика
		//-- Устарело_Переработка24
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОтПереработчика2_5
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РазборкаТоваров
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеИзПроизводства
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОприходованиеЗаСчетДоходов
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОприходованиеЗаСчетРасходов
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОприходованиеПриВыбытииОС
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратИзЭксплуатации
		
		
		//Интеркампани
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию 
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями 
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями 
		
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации Тогда
		
		Возврат Истина;
	
	Иначе
	
		Возврат Ложь;
	
	КонецЕсли;

КонецФункции

// Устанавливает видимость направления деятельности по порядку расчетов документа.
//
// Параметры:
//	Форма - ФормаКлиентскогоПриложения - Форма, в которой было находится элемент группы финансового учета.
//	ЭтоЗаказ - Булево - Истина - Документ является заказом.
//	ПоЗаказу - Булево - Истина - Документ введен на основании заказа/заказов.
//
Процедура УстановитьВидимостьНаправленияДеятельности(Форма, ЭтоЗаказ = Ложь, ПоЗаказу = Ложь) Экспорт
	
	ВидимостьЭлемента = Ложь;
	ПорядокРасчетов = Форма.Объект.ПорядокРасчетов;
	
	Если ЭтоЗаказ Тогда
		ВидимостьЭлемента = ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоЗаказам
			Или ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоЗаказамНакладным;
	ИначеЕсли ПоЗаказу Тогда
		ВидимостьЭлемента = ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоНакладным
			Или ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоДоговорамНакладным
	Иначе
		ВидимостьЭлемента = ПорядокРасчетов <> Перечисления.ПорядокРасчетов.ПоДоговорамКонтрагентов;
	КонецЕсли;
	
	Форма.Элементы.НаправлениеДеятельности.Видимость = ВидимостьЭлемента;
	
КонецПроцедуры

// Определяет, порядок формирования назначения при фиксации обособленных потребностей в заказах по данному направлению деятельности.
//
// Параметры:
//  Ссылка - СправочникСсылка.НаправленияДеятельности - направление деятельности, которое может быть указано в заказе.
//
// Возвращаемое значение:
//  Булево - Истина, если данное направление деятельности будет использоваться в аналитике обособленной потребности
//           заказа, Ложь - в противном случае.
//
Функция ЭтоНаправлениеДеятельностиСОбособлениемТоваровИРабот(Ссылка) Экспорт
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "УчетЗатрат");
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;
	
КонецФункции

// Устарело. Необходимо использовать НазначенияСервер.ПорядокЗаполненияНазначенийВДокументе
// Конструктор структуры парамтеров встраивания направлений деятельности в документ.
//  Возвращаемое значение:
//   см. НазначенияСервер.ПорядокЗаполненияНазначенийВДокументе
Функция ПорядокОбработкиДокументаПриИзмененииНаправленияДеятельности() Экспорт
	
	Возврат НазначенияСервер.ПорядокЗаполненияНазначенийВДокументе();
	
КонецФункции

// Устарело. Необходимо использовать НазначенияСервер.УсловияОбработкиНазначенийВСтроках
// 
// Параметры:
//  ШаблоныУсловий - Строка
// 
// Возвращаемое значение:
//  Массив из Структура - Условия обработки назначений в строках
//
Функция УсловияОбработкиНазначенийВСтроках(ШаблоныУсловий) Экспорт
	
	Возврат НазначенияСервер.УсловияОбработкиНазначенийВСтроках(ШаблоныУсловий);
	
КонецФункции

// Устарело. Необходимо использовать НазначенияСервер.СтруктураОбъекта
// Конструктор структуры по умолчанию для использования в функциях ОписаниеФормыДокументаДляЗаполненияРеквизитовСвязанныхСНаправлениемДеятельности
// модулей менеджеров документов.
//
// Возвращаемое значение:
//  Структура - структура с полями:
//   *ОформляетсяПоЗаказу - Булево - признак, что строки табличных частей могут быть оформлены по заказу.
//   *ЭтоИсточникПотребности - Булево - признак, что документ является документом фиксации обособленной потребности (заказом).
//   *ЕстьНазначениеВТЧ - Булево - признак, что в строках табличных частей есть реквизит назначение.
//   *ВТЧНазначениеОтгрузки - Булево - признак, что в строках табличных частей реквизит назначение используется для указания
//                            назначения отгружаемых товаров и работ, а не принимаемых).
//   *ТабЧасти - Структура - описание табличной части документа, используется для переопределения общих параметров, заданных для
//                           всех табличных частей.
//
Функция СтруктураОбъекта() Экспорт
	
	Возврат НазначенияСервер.СтруктураОбъекта();
	
КонецФункции

// Устарело. Необходимо использовать НазначенияСервер.ТолкающееНазначение
//  Возвращает назначение по направлению деятельности.
//
// Параметры:
//  НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности - направление деятельности.
//
// Возвращаемое значение:
//  СправочникСсылка.Назначения - назначение, связанное с направлением деятельности.
//
Функция ТолкающееНазначение(НаправлениеДеятельности) Экспорт
	
	Возврат НазначенияСервер.ТолкающееНазначение(НаправлениеДеятельности);
	
КонецФункции

#КонецОбласти

#КонецОбласти





