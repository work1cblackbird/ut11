#Область ПрограммныйИнтерфейс

#Область ОбработчикиСобытийМодуляОбъекта

// Инициализировать документ
//
// Параметры:
//  ДокументОбъект	 - ДокументОбъект.* - обрабатываемый документ.
//  ДанныеЗаполнения - Структура - данные заполнения.
//
Процедура ИнициализироватьДокументМаркировкаТоваров(ДокументОбъект, ДанныеЗаполнения = Неопределено) Экспорт
	
	ДокументОбъект.Склад         = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(ДокументОбъект.Склад);
	ДокументОбъект.Организация   = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(ДокументОбъект.Организация);
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	ДокументОбъект.Подразделение = ЗначениеНастроекПовтИсп.ПодразделениеПользователя(ДокументОбъект.Ответственный, ДокументОбъект.Подразделение);
	ДокументОбъект.НазначениеКиЗ = НаправленияДеятельностиСервер.ТолкающееНазначение(ДокументОбъект.НаправлениеДеятельности);
	ДокументОбъект.ОперацияМаркировки = ОперацияМаркировкиПоУмолчанию(ДокументОбъект.ОперацияМаркировки);
	
	ПараметрыЗаполнения = ПараметрыЗаполненияВидаДеятельностиНДС(ДокументОбъект);
	УчетНДСУП.ЗаполнитьВидДеятельностиНДС(ДокументОбъект.МаркировкаДляДеятельности, ПараметрыЗаполнения);
	
	ПараметрыВыбораСтатейИАналитик = ПараметрыВыбораСтатейИАналитикМаркировкаТоваров(ДокументОбъект.ОперацияМаркировки);
	ДоходыИРасходыСервер.ОбработкаЗаполнения(ДокументОбъект, ПараметрыВыбораСтатейИАналитик);
	
КонецПроцедуры

// Обработка заполнения маркировка товаров
//
// Параметры:
//  ДанныеЗаполнения	 - Структура - данные заполнения.
//  СтандартнаяОбработка - Булево - стандартная обработка.
//  ДокументОбъект	 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ОбработкаЗаполненияМаркировкаТоваров(ДанныеЗаполнения, СтандартнаяОбработка, ДокументОбъект) Экспорт
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
		
		ЗаполнитьМаркировкуТоваровПоВозвратуТоваровОтКлиента(ДанныеЗаполнения, ДокументОбъект);
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПриобретениеТоваровУслуг") Тогда
		
		ЗаполнитьМаркировкуТоваровПоПоступлениюТоваровУслуг(ДанныеЗаполнения, ДокументОбъект);
		
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.УведомлениеОбИмпортеМаркированныхТоваровГИСМ") Тогда
		
		ЗаполнитьМаркировкуТоваровПоУведомлениюОбИмпортеМаркированныхТоваровГИСМ(ДанныеЗаполнения, ДокументОбъект);
		

	КонецЕсли;
	
	ИнициализироватьДокументМаркировкаТоваров(ДокументОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

// Обработка проверки заполнения маркировка товаров
//
// Параметры:
//  Отказ							 - Булево - Отказ.
//  ПроверяемыеРеквизиты			 - Массив - массив проверяемых реквизитов.
//  МассивНепроверяемыхРеквизитов	 - Массив - массив непроверяемых реквизитов.
//  ДокументОбъект	 				 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ОбработкаПроверкиЗаполненияМаркировкаТоваров(Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, ДокументОбъект) Экспорт
	
	Перем МассивВсехРеквизитов;
	Перем МассивРеквизитовОперации;
	
	ЗаполнитьИменаРеквизитовМаркировкиТоваровПоОперацииМаркировки(
		ДокументОбъект.ОперацияМаркировки,
		МассивВсехРеквизитов,
		МассивРеквизитовОперации);
	
	ОбщегоНазначенияУТКлиентСервер.ЗаполнитьМассивНепроверяемыхРеквизитов(
		МассивВсехРеквизитов,
		МассивРеквизитовОперации,
		МассивНепроверяемыхРеквизитов);
	
	// Проверка характеристик в табличной части Товары и в шапке документа.
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверки.ИменаПолейССуффиксом.Вставить("Номенклатура", "НоменклатураКиЗ");
	ПараметрыПроверки.ИменаПолейССуффиксом.Вставить("Характеристика", "ХарактеристикаКиЗ");

	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
	
	Для каждого СтрТабл Из ДокументОбъект.Товары Цикл
		Если СтрТабл.СтатусУказанияСерий = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Для товара %Товар% не настроено указание серий на складе %Склад%.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Товар%", НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрТабл.Номенклатура, СтрТабл.Характеристика));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%", ДокументОбъект.Склад);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрТабл.НомерСтроки, "Номенклатура");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле,"Объект",Отказ);
		КонецЕсли;
	КонецЦикла;	
			
	// Проверка заполнения серий в т.ч. серии.
	НоменклатураСервер.ПроверитьЗаполнениеСерий(
		ДокументОбъект,
		НоменклатураСервер.ПараметрыУказанияСерий(ДокументОбъект, Документы.МаркировкаТоваровГИСМ),
		Отказ,
		МассивНепроверяемыхРеквизитов);
		
	ПараметрыВыбораСтатейИАналитик = ПараметрыВыбораСтатейИАналитикМаркировкаТоваров(ДокументОбъект.ОперацияМаркировки);
	ДоходыИРасходыСервер.ОбработкаПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, ПараметрыВыбораСтатейИАналитик);

	ПараметрыПроверки = УчетНДСУП.ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС();
	ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов = "СтатьяРасходов";
	ПараметрыПроверки.ИмяРеквизитаАналитикаРасходов = "АналитикаРасходов";
	УчетНДСУП.ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС(
		ДокументОбъект,
		ДокументОбъект.МаркировкаДляДеятельности,
		ПараметрыПроверки,
		Отказ);

	ПодразделениеОбязательно = ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство")
		Или ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам");
	
	Если Не ПодразделениеОбязательно Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Подразделение");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетЗатратПоНаправлениямДеятельности") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НаправлениеДеятельности");
	КонецЕсли;
	
КонецПроцедуры

// Перед записью маркировка товаров
//
// Параметры:
//  Отказ							 - Булево - Отказ.
//  РежимЗаписи						 - РежимЗаписи - Режим записи документа.
//  РежимПроведения	 				 - РежимПроведения - Режим проведения документа.
//  ДокументОбъект	 				 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ПередЗаписьюМаркировкаТоваров(Отказ, РежимЗаписи, РежимПроведения, ДокументОбъект) Экспорт
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ДокументОбъект);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ДокументОбъект, РежимЗаписи, РежимПроведения);
	
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ДокументОбъект,
		НоменклатураСервер.ПараметрыУказанияСерий(ДокументОбъект, Документы.МаркировкаТоваровГИСМ));
	
	ПараметрыВыбораСтатейИАналитик = ПараметрыВыбораСтатейИАналитикМаркировкаТоваров(ДокументОбъект.ОперацияМаркировки);
	ДоходыИРасходыСервер.ПередЗаписью(ДокументОбъект, ПараметрыВыбораСтатейИАналитик);
	
	ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ДокументОбъект, "Товары");
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(
			Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию,
			ДокументОбъект.Склад,
			ДокументОбъект.Подразделение,
			Неопределено);
		ИменаПолей = РегистрыСведений.АналитикаУчетаНоменклатуры.ИменаПолейКоллекцииПоУмолчанию();
		ИменаПолей.Номенклатура = "НоменклатураКиЗ";
		ИменаПолей.Характеристика = "ХарактеристикаКиЗ";
		ИменаПолей.Серия = "";
		ИменаПолей.СтатусУказанияСерий = "";
		ИменаПолей.Вставить("Назначение", Новый Структура("ТекстПоля,Значение","&Назначение",ДокументОбъект.НазначениеКиЗ));
		РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ДокументОбъект.Товары, МестаУчета, ИменаПолей);
		
		ЗаполнитьВидыЗапасов(ДокументОбъект, Отказ, "МаркировкаТоваровГИСМ");
		ПроверитьЗаполнитьСерииКиЗ(ДокументОбъект, Отказ);
		
		ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ДокументОбъект, "ВидыЗапасов");
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		Если Не ДокументОбъект.ВидыЗапасовУказаныВручную Тогда
			ДокументОбъект.ВидыЗапасов.Очистить();
		КонецЕсли;
		ДокументОбъект.СерииКиЗ.Очистить();
	КонецЕсли;
	
КонецПроцедуры

// При копировании документа маркировка товаров.
//
// Параметры:
//  ОбъектКопирования - см. описание параметра в синтаксис-помощнике к обработчику "ПриКопировании".
//  ДокументОбъект    - ДокументОбъект.МаркировкаТоваров - обрабатываемый документ.
//
Процедура ПриКопированииМаркировкаТоваров(ОбъектКопирования, ДокументОбъект) Экспорт
	
	ДокументОбъект.Основание = Неопределено;
	ДокументОбъект.ВидыЗапасовУказаныВручную = Ложь;
	
	ДокументОбъект.ВидыЗапасов.Очистить();
	ДокументОбъект.Серии.Очистить();
	ДокументОбъект.СерииКиЗ.Очистить();
	
	ОбщегоНазначенияУТ.ОчиститьИдентификаторыДокумента(ДокументОбъект, "Товары,ВидыЗапасов");
	
	ИнициализироватьДокументМаркировкаТоваров(ДокументОбъект);
	
КонецПроцедуры

// Процедура - Обработка проведения маркировка товаров
//
// Параметры:
//  Отказ			 - Булево - Отказ.
//  РежимПроведения	 				 - РежимПроведения - Режим проведения документа.
//  ДокументОбъект	 				 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ОбработкаПроведенияМаркировкаТоваров(Отказ, РежимПроведения, ДокументОбъект) Экспорт
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ДокументОбъект, Отказ);
	
КонецПроцедуры

// Обработка удаления проведения маркировка товаров
//
// Параметры:
//  Отказ			 - Булево - Отказ.
//  ДокументОбъект	 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ОбработкаУдаленияПроведенияМаркировкаТоваров(Отказ, ДокументОбъект) Экспорт
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("ПараметрыЗаполненияВидовЗапасов",
		ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов());
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ДокументОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииФормыДокумента

// Заполняет номенклатуру КиЗ в строке документа
//
// Параметры:
//  ТекущаяСтрока				 - ТекущаяСтрока - текущая строка таблицы Товары/
//  СписокНоменклатураКиЗ		 - СписокЗначений - список номенклатуры КиЗ, подходящих под выбранную категорию КиЗ в документе.
//  КиЗГИСМСИндивидуализацией	 - Булево - Признак получения КиЗ по GTIN или без GTIN.
//
Процедура ЗаполнитьНоменклатуруКиЗВСтроке(ТекущаяСтрока, СписокНоменклатураКиЗ, КиЗГИСМСИндивидуализацией) Экспорт
	
	GTIN = ?(КиЗГИСМСИндивидуализацией, ТекущаяСтрока.GTIN, "");
	ТаблицаРезультат = ПолучитьКизы(СписокНоменклатураКиЗ, GTIN);
	
	Если ТаблицаРезультат.Количество() = 1 Тогда
		СтрокаРезультат = ТаблицаРезультат.Получить(0);
		ТекущаяСтрока.НоменклатураКиЗ = СтрокаРезультат.НоменклатураКиЗ;
		ТекущаяСтрока.ХарактеристикаКиЗ = СтрокаРезультат.ХарактеристикаКиЗ;
		ТекущаяСтрока.ХарактеристикиКизИспользуются = СтрокаРезультат.ХарактеристикиКизИспользуются;
	ИначеЕсли ТаблицаРезультат.Количество() = 0 Тогда
		ТекущаяСтрока.НоменклатураКиЗ = Неопределено;
		ТекущаяСтрока.ХарактеристикаКиЗ = Неопределено;
		ТекущаяСтрока.ХарактеристикиКизИспользуются = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Заполняет номенклатуру КиЗ в строках документа
//
// Параметры:
//  Объект				 		 - ДокументОбъект.* - текущая строка таблицы Товары.
//  СписокНоменклатураКиЗ		 - СписокЗначений - список номенклатуры КиЗ, подходящих под выбранную категорию КиЗ в документе.
//  ЗаполнятьСерии				 - Булево - Признак заполнения серий в ТЧ Серии.
//
Процедура ЗаполнитьНоменклатуруКиЗВСтроках(ДокументОбъект, СписокНоменклатураКиЗ, ЗаполнятьСерии = Истина) Экспорт
	
	GTIN = ?(ДокументОбъект.КиЗГИСМСИндивидуализацией, ДокументОбъект.Товары.Выгрузить(,"GTIN").ВыгрузитьКолонку("GTIN"),"");
	ТаблицаРезультат = ПолучитьКизы(СписокНоменклатураКиЗ, GTIN);
	
	СтруктураПоиска = Новый Структура("GTIN","");
	Для каждого СтрокаТовары Из ДокументОбъект.Товары Цикл
		
		Если ДокументОбъект.КиЗГИСМСИндивидуализацией Тогда
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТовары);
		КонецЕсли;
		НайденныеСтроки = ТаблицаРезультат.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 1 Тогда
			НайденнаяСтрока = НайденныеСтроки.Получить(0);
			СтрокаТовары.НоменклатураКиЗ = НайденнаяСтрока.НоменклатураКиЗ;
			СтрокаТовары.ХарактеристикаКиЗ = НайденнаяСтрока.ХарактеристикаКиЗ;
			СтрокаТовары.ХарактеристикиКизИспользуются = НайденнаяСтрока.ХарактеристикиКизИспользуются;
		ИначеЕсли НайденныеСтроки.Количество() = 0 Тогда
			СтрокаТовары.НоменклатураКиЗ = Неопределено;
			СтрокаТовары.ХарактеристикаКиЗ = Неопределено;
			СтрокаТовары.ХарактеристикиКизИспользуются = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗаполнятьСерии Тогда
		Для каждого СтрокаСерии Из ДокументОбъект.Серии Цикл
			Если ДокументОбъект.КиЗГИСМСИндивидуализацией Тогда
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаСерии);
			КонецЕсли;
			НайденныеСтроки = ТаблицаРезультат.НайтиСтроки(СтруктураПоиска);
			Если НайденныеСтроки.Количество() = 1 Тогда
				НайденнаяСтрока = НайденныеСтроки.Получить(0);
				СтрокаСерии.НоменклатураКиЗ = НайденнаяСтрока.НоменклатураКиЗ;
				СтрокаСерии.ХарактеристикаКиЗ = НайденнаяСтрока.ХарактеристикаКиЗ;
			ИначеЕсли НайденныеСтроки.Количество() = 0 Тогда
				СтрокаСерии.НоменклатураКиЗ = Неопределено;
				СтрокаСерии.ХарактеристикаКиЗ = Неопределено;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

// Заполняет список КиЗ, подходящих для заполнения документ по выбранным категориям КиЗ.
//
// Параметры:
//  Объект				 		 - ДокументОбъект.* - текущая строка таблицы Товары.
//  СписокНоменклатураКиЗ		 - СписокЗначений - список номенклатуры КиЗ, подходящих под выбранную категорию КиЗ в документе.
//
Процедура ПолучитьКиЗДляЗаполнения(ДокументОбъект, СписокНоменклатураКиЗ) Экспорт
	
	СписокНоменклатураКиЗ.Очистить();
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.КиЗГИСМВид)
		И НЕ ЗначениеЗаполнено(ДокументОбъект.КиЗГИСМРазмер)
		И НЕ ЗначениеЗаполнено(ДокументОбъект.КиЗГИСМСпособВыпускаВОборот) Тогда
		
		Возврат
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК НоменклатураКиЗ
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.КиЗГИСМВид = &КиЗГИСМВид
	|	И Номенклатура.КиЗГИСМСпособВыпускаВОборот = &КиЗГИСМСпособВыпускаВОборот
	|	И Номенклатура.КиЗГИСМРазмер = &КиЗГИСМРазмер
	|	И НЕ Номенклатура.ПометкаУдаления
	|	И ВЫБОР
	|			КОГДА &КиЗГИСМСИндивидуализацией = ЛОЖЬ
	|					И Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	|					И Номенклатура.КиЗГИСМGTIN ПОДОБНО """"
	|				ТОГДА ИСТИНА
	|			КОГДА (Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры)
	|					ИЛИ Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры)
	|					ИЛИ Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры)
	|					ИЛИ НЕ Номенклатура.КиЗГИСМGTIN ПОДОБНО """")
	|					И &КиЗГИСМСИндивидуализацией = ИСТИНА
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("КиЗГИСМВид",                  ДокументОбъект.КиЗГИСМВид);
	Запрос.УстановитьПараметр("КиЗГИСМРазмер",               ДокументОбъект.КиЗГИСМРазмер);
	Запрос.УстановитьПараметр("КиЗГИСМСпособВыпускаВОборот", ДокументОбъект.КиЗГИСМСпособВыпускаВОборот);
	Запрос.УстановитьПараметр("КиЗГИСМСИндивидуализацией",   ДокументОбъект.КиЗГИСМСИндивидуализацией);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокНоменклатураКиЗ.Добавить(Выборка.НоменклатураКиЗ);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет GTINВСтроках
//
// Параметры:
//  ДокументОбъект	 - ДокументОбъект. - Документ для заполнения GTIN.
//
Процедура ЗаполнитьGTINВСтроках(ДокументОбъект) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Номенклатура,
	|	Товары.Характеристика
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	&Товары КАК Товары;
	|
	|ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
	|	ШтрихкодыНоменклатуры.Характеристика КАК Характеристика,
	|	ШтрихкодыНоменклатуры.Штрихкод КАК GTIN
	|ИЗ
	|	ВтТовары КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ПО ШтрихкодыНоменклатуры.Номенклатура = Товары.Номенклатура
	|			И ШтрихкодыНоменклатуры.Характеристика = Товары.Характеристика");
	
	Запрос.УстановитьПараметр("Товары", ДокументОбъект.Товары.Выгрузить());
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат
	КонецЕсли;
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
	МассивGTIN = Новый Массив;
	Для каждого СтрокаТовары Из ДокументОбъект.Товары Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТовары);
		НайденныеСтроки = ТаблицаРезультат.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			Продолжить;
		ИначеЕсли НайденныеСтроки.Количество() = 1
			И МенеджерОборудованияКлиентСервер.ПроверитьКорректностьGTIN(НайденныеСтроки[0].GTIN) Тогда
			
			СтрокаТовары.GTIN = НайденныеСтроки[0].GTIN;
			
		Иначе
			МассивGTIN.Очистить();
			Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				Если МенеджерОборудованияКлиентСервер.ПроверитьКорректностьGTIN(НайденнаяСтрока.GTIN) Тогда
					МассивGTIN.Добавить(НайденнаяСтрока.GTIN);
				КонецЕсли;
			КонецЦикла;
			Если МассивGTIN.Количество() = 1 Тогда
				СтрокаТовары.GTIN = МассивGTIN.Получить(0);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Обработчик Категория КиЗ при изменении
//
// Параметры:
//  ДокументОбъект			 - ДокументОбъект.* - обрабатываемый документ.
//  СписокНоменклатураКиЗ	 - СписокЗначений - список номенклатуры КиЗ, подходящих под выбранную категорию КиЗ в документе.
//  ЗаполнятьСерии			 - Булево - Признак заполнения серий в ТЧ Серии.
//
Процедура КатегорияКиЗПриИзменении(ДокументОбъект, СписокНоменклатураКиЗ, ЗаполнятьСерии=Истина) Экспорт
	МаркировкаТоваровГИСМУТ.ПолучитьКиЗДляЗаполнения(ДокументОбъект, СписокНоменклатураКиЗ);
	МаркировкаТоваровГИСМУТ.ЗаполнитьНоменклатуруКиЗВСтроках(ДокументОбъект, СписокНоменклатураКиЗ, ЗаполнятьСерии);
КонецПроцедуры

// Заполняет списки выбора реквизитов шапки.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - форма документа.
//
Процедура ЗаполнитьСпискиВыбораРеквизитовШапки(Форма) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.КиЗГИСМВид
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.КиЗГИСМ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.КиЗГИСМСпособВыпускаВОборот
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.КиЗГИСМ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.КиЗГИСМРазмер
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.КиЗГИСМ";
		
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаКиЗГИСМВид = ПакетРезультатов[0].Выбрать();
	ВыборкаКиЗГИСМСпособВыпускаВОборот = ПакетРезультатов[1].Выбрать();
	ВыборкаКиЗГИСМРазмер = ПакетРезультатов[2].Выбрать();
	
	Форма.Элементы.КиЗГИСМВид.СписокВыбора.Очистить();
	Форма.Элементы.КиЗГИСМРазмер.СписокВыбора.Очистить();
	Форма.Элементы.КиЗГИСМСпособВыпускаВОборот.СписокВыбора.Очистить();
	
	Пока ВыборкаКиЗГИСМВид.Следующий() Цикл
		Форма.Элементы.КиЗГИСМВид.СписокВыбора.Добавить(ВыборкаКиЗГИСМВид.КиЗГИСМВид);
	КонецЦикла;
	Если ВыборкаКиЗГИСМВид.Количество() = 1 Тогда
		Форма.Объект.КиЗГИСМВид = ВыборкаКиЗГИСМВид.КиЗГИСМВид;
	КонецЕсли;
	
	Пока ВыборкаКиЗГИСМРазмер.Следующий() Цикл
		Форма.Элементы.КиЗГИСМРазмер.СписокВыбора.Добавить(ВыборкаКиЗГИСМРазмер.КиЗГИСМРазмер);
	КонецЦикла;
	Если ВыборкаКиЗГИСМРазмер.Количество() = 1 Тогда
		Форма.Объект.КиЗГИСМРазмер = ВыборкаКиЗГИСМРазмер.КиЗГИСМРазмер;
	КонецЕсли;
	
	Пока ВыборкаКиЗГИСМСпособВыпускаВОборот.Следующий() Цикл
		Форма.Элементы.КиЗГИСМСпособВыпускаВОборот.СписокВыбора.Добавить(ВыборкаКиЗГИСМСпособВыпускаВОборот.КиЗГИСМСпособВыпускаВОборот);
	КонецЦикла;
	Если ВыборкаКиЗГИСМСпособВыпускаВОборот.Количество() = 1 Тогда
		Форма.Объект.КиЗГИСМСпособВыпускаВОборот = ВыборкаКиЗГИСМСпособВыпускаВОборот.КиЗГИСМСпособВыпускаВОборот;
	КонецЕсли;
	
	Форма.Элементы.ОперацияМаркировки.СписокВыбора.Очистить();
	Форма.Элементы.ОперацияМаркировки.СписокВыбора.Добавить(Перечисления.ОперацииМаркировкиГИСМ.ИдентификацияРанееМаркированнойНаПроизводствеПродукции);
	Форма.Элементы.ОперацияМаркировки.СписокВыбора.Добавить(Перечисления.ОперацииМаркировкиГИСМ.ИдентификацияРанееМаркированныхПриИмпортеТоваров);
	
	Если ВыборкаКиЗГИСМВид.Количество() > 0 И ВыборкаКиЗГИСМРазмер.Количество() > 0 И ВыборкаКиЗГИСМСпособВыпускаВОборот.Количество() > 0 Тогда
		Форма.Элементы.ОперацияМаркировки.СписокВыбора.Добавить(Перечисления.ОперацииМаркировкиГИСМ.МаркировкаОстатковНа12082016);
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство") Тогда
			Форма.Элементы.ОперацияМаркировки.СписокВыбора.Добавить(Перечисления.ОперацииМаркировкиГИСМ.МаркировкаПроизведеннойПродукции);
		КонецЕсли;
		Форма.Элементы.ОперацияМаркировки.СписокВыбора.Добавить(Перечисления.ОперацииМаркировкиГИСМ.МаркировкаТоваровВозвращенныхПокупателем);
		Форма.Элементы.ОперацияМаркировки.СписокВыбора.Добавить(Перечисления.ОперацииМаркировкиГИСМ.МаркировкаТоваровПринятыхНаКомиссию);
		Если ПолучитьФункциональнуюОпцию("ИспользоватьИмпортныеЗакупки") Тогда
			Форма.Элементы.ОперацияМаркировки.СписокВыбора.Добавить(Перечисления.ОперацииМаркировкиГИСМ.МаркировкаИмпортированныхТоваров);
		КонецЕсли;
	КонецЕсли;
	
	Если Форма.Элементы.ОперацияМаркировки.СписокВыбора.НайтиПоЗначению(Форма.Объект.ОперацияМаркировки) = Неопределено Тогда
		
		ВызватьИсключение НСтр("ru='Выбранная операция маркировки отличается от доступных для выбора операций маркировки'");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииФормыДокумента

// Заполняет служебные реквизиты табличной части
//
// Параметры:
//  Товары	 - ТаблицаФормы - ТЧ Товары документа.
//
Процедура ЗаполнитьСлужебныеРеквизитыТабличнойЧасти(Товары) Экспорт
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Товары, СтруктураДействий, Неопределено);
	СтруктураДействий.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются", Новый Структура("НоменклатураКиЗ", "ХарактеристикиКиЗИспользуются"));
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Товары, СтруктураДействий, Неопределено);
	
КонецПроцедуры

// Управляет доступностью элементов формы
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - форма документа.
//
Процедура УправлениеДоступностью(Форма) Экспорт
	
	ОперацияИдентификации = Форма.ОперацияИдентификации;
	
	Форма.Элементы.НаправлениеДеятельности.Видимость = НЕ ОперацияИдентификации;
	Форма.Элементы.МаркировкаДляДеятельности.Видимость = НЕ ОперацияИдентификации;
	Форма.Элементы.СтатьяРасходов.Видимость = НЕ ОперацияИдентификации;
	Форма.Элементы.АналитикаРасходов.Видимость = НЕ ОперацияИдентификации;
	
	МаркировкаТоваровГИСМ.УправлениеДоступностью(Форма);
	
КонецПроцедуры

// Инициализирует параметры заполнения вида деятельности НДС
//
// Параметры:
//  Объект - ДокументОбъект.МаркировкаТоваровГИСМ, 
//           ДокументОбъект.МаркировкаТоваровГИСМ,
//           ДанныеФормыСтруктура - документ, для которого необходимо получить параметры.
// 
// Возвращаемое значение:
//  см. УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС
Функция ПараметрыЗаполненияВидаДеятельностиНДС(Объект) Экспорт
	
	ПараметрыЗаполнения = УчетНДСУПКлиентСервер.ПараметрыЗаполненияВидаДеятельностиНДС();
	
	ПараметрыЗаполнения.Организация             = Объект.Организация;
	ПараметрыЗаполнения.Дата                    = Объект.Дата;
	ПараметрыЗаполнения.Склад                   = Объект.Склад;
	ПараметрыЗаполнения.Договор                 = Неопределено;
	ПараметрыЗаполнения.НаправлениеДеятельности = Объект.НаправлениеДеятельности;
	
	ПараметрыЗаполнения.СписаниеТоваровИРаботНаСтатьи = Истина;
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

#КонецОбласти

#Область ПеремаркировкаТоваров

#Область ОбработчикиСобытийМодуляОбъекта

// Инициализировать документ
//
// Параметры:
//  ДокументОбъект	 - ДокументОбъект.* - обрабатываемый документ.
//  ДанныеЗаполнения - Структура - данные заполнения.
//
Процедура ИнициализироватьДокументПеремаркировкаТоваров(ДокументОбъект, ДанныеЗаполнения = Неопределено) Экспорт
	
	ДокументОбъект.Склад         = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(ДокументОбъект.Склад);
	ДокументОбъект.Организация   = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(ДокументОбъект.Организация);
	ДокументОбъект.Подразделение = ЗначениеНастроекПовтИсп.ПодразделениеПользователя(ДокументОбъект.Ответственный, ДокументОбъект.Подразделение);
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	ДокументОбъект.НазначениеКиЗ = НаправленияДеятельностиСервер.ТолкающееНазначение(ДокументОбъект.НаправлениеДеятельности);
	
	ПараметрыЗаполнения = ПараметрыЗаполненияВидаДеятельностиНДС(ДокументОбъект);
	УчетНДСУП.ЗаполнитьВидДеятельностиНДС(ДокументОбъект.МаркировкаДляДеятельности, ПараметрыЗаполнения);
	
	ПараметрыВыбораСтатейИАналитик = ПараметрыВыбораСтатейИАналитикПеремаркировкаТоваров();
	ДоходыИРасходыСервер.ОбработкаЗаполнения(ДокументОбъект, ПараметрыВыбораСтатейИАналитик);
	
КонецПроцедуры

// Обработка заполнения перемаркировка товаров
//
// Параметры:
//  ДанныеЗаполнения	 - Структура - данные заполнения.
//  СтандартнаяОбработка - Булево - стандартная обработка.
//  ДокументОбъект	 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ОбработкаЗаполненияПеремаркировкаТоваров(ДанныеЗаполнения, СтандартнаяОбработка, ДокументОбъект) Экспорт
	
	ИнициализироватьДокументПеремаркировкаТоваров(ДокументОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

// Обработка проверки заполнения перемаркировка товаров
//
// Параметры:
//  Отказ							 - Булево - Отказ.
//  ПроверяемыеРеквизиты			 - Массив - массив проверяемых реквизитов.
//  МассивНепроверяемыхРеквизитов	 - Массив - массив непроверяемых реквизитов.
//  ДокументОбъект	 				 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ОбработкаПроверкиЗаполненияПеремаркировкаТоваров(Отказ, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, ДокументОбъект) Экспорт
	
	// Проверка характеристик в табличной части Товары и в шапке документа.
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверки.ИменаПолейССуффиксом.Вставить("Номенклатура", "НоменклатураКиЗ");
	ПараметрыПроверки.ИменаПолейССуффиксом.Вставить("Характеристика", "ХарактеристикаКиЗ");
	
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ);
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ДокументОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверки);
	
	Для каждого СтрТабл Из ДокументОбъект.Товары Цикл
		Если СтрТабл.СтатусУказанияСерий = 0 Тогда
			ТекстСообщения = НСтр("ru = 'Для товара %Товар% не настроено указание серий на складе %Склад%.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Товар%", НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрТабл.Номенклатура, СтрТабл.Характеристика));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%", ДокументОбъект.Склад);
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрТабл.НомерСтроки, "Номенклатура");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,Поле,"Объект",Отказ);
		КонецЕсли;
	КонецЦикла;	
			
	// Проверка заполнения серий, в т.ч. серии.
	НоменклатураСервер.ПроверитьЗаполнениеСерий(
		ДокументОбъект,
		НоменклатураСервер.ПараметрыУказанияСерий(ДокументОбъект, Документы.ПеремаркировкаТоваровГИСМ),
		Отказ,
		МассивНепроверяемыхРеквизитов);
		
	ПараметрыВыбораСтатейИАналитик = ПараметрыВыбораСтатейИАналитикПеремаркировкаТоваров();
	ДоходыИРасходыСервер.ОбработкаПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, ПараметрыВыбораСтатейИАналитик);
		
	ПараметрыПроверки = УчетНДСУП.ПараметрыПроверкиЗаполненияДокументаПоВидуДеятельностиНДС();
	ПараметрыПроверки.ИмяРеквизитаСтатьяРасходов = "СтатьяРасходов";
	ПараметрыПроверки.ИмяРеквизитаАналитикаРасходов = "АналитикаРасходов";
	УчетНДСУП.ПроверитьЗаполнениеДокументаПоВидуДеятельностиНДС(
		ДокументОбъект,
		ДокументОбъект.МаркировкаДляДеятельности,
		ПараметрыПроверки,
		Отказ);
	
	ПодразделениеОбязательно = ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство")
		Или ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам");
	
	Если Не ПодразделениеОбязательно Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Подразделение");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьУчетЗатратПоНаправлениямДеятельности") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НаправлениеДеятельности");
	КонецЕсли;
	
КонецПроцедуры

// Перед записью перемаркировка товаров
//
// Параметры:
//  Отказ							 - Булево - Отказ.
//  РежимЗаписи						 - РежимЗаписи - Режим записи документа.
//  РежимПроведения	 				 - РежимПроведения - Режим проведения документа.
//  ДокументОбъект	 				 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ПередЗаписьюПеремаркировкаТоваров(Отказ, РежимЗаписи, РежимПроведения, ДокументОбъект) Экспорт
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ДокументОбъект);
	
	ПроведениеДокументов.ПередЗаписьюДокумента(ДокументОбъект, РежимЗаписи, РежимПроведения);
	
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ДокументОбъект,
		НоменклатураСервер.ПараметрыУказанияСерий(ДокументОбъект, Документы.ПеремаркировкаТоваровГИСМ));
	
	ПараметрыВыбораСтатейИАналитик = ПараметрыВыбораСтатейИАналитикПеремаркировкаТоваров();
	ДоходыИРасходыСервер.ПередЗаписью(ДокументОбъект, ПараметрыВыбораСтатейИАналитик);
	
	ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ДокументОбъект, "Товары");
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(
			Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию,
			ДокументОбъект.Склад,
			ДокументОбъект.Подразделение,
			Неопределено);
		ИменаПолей = РегистрыСведений.АналитикаУчетаНоменклатуры.ИменаПолейКоллекцииПоУмолчанию();
		ИменаПолей.Номенклатура = "НоменклатураКиЗ";
		ИменаПолей.Характеристика = "ХарактеристикаКиЗ";
		ИменаПолей.Серия = "";
		ИменаПолей.СтатусУказанияСерий = "";
		ИменаПолей.Вставить("Назначение", Новый Структура("ТекстПоля,Значение","&Назначение",ДокументОбъект.НазначениеКиЗ));
		РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(ДокументОбъект.Товары, МестаУчета, ИменаПолей);
		
		ЗаполнитьВидыЗапасов(ДокументОбъект, Отказ, "ПеремаркировкаТоваровГИСМ");
		ПроверитьЗаполнитьСерииКиЗПеремаркировкаТоваров(ДокументОбъект, Отказ);
		
		ОбщегоНазначенияУТ.ЗаполнитьИдентификаторыДокумента(ДокументОбъект, "ВидыЗапасов");
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		Если Не ДокументОбъект.ВидыЗапасовУказаныВручную Тогда
			ДокументОбъект.ВидыЗапасов.Очистить();
		КонецЕсли;
		ДокументОбъект.СерииКиЗ.Очистить();
	КонецЕсли;
	
КонецПроцедуры

// При копировании перемаркировка товаров
//
// Параметры:
//  ОбъектКопирования - см. описание параметра в синтаксис-помощнике к обработчику "ПриКопировании".
//  ДокументОбъект - ДокументОбъект.ПеремаркировкаТоваров - обрабатываемый документ.
//
Процедура ПриКопированииПеремаркировкаТоваров(ОбъектКопирования, ДокументОбъект) Экспорт
	
	ДокументОбъект.ВидыЗапасовУказаныВручную = Ложь;
	
	ДокументОбъект.СерииКиЗ.Очистить();
	ДокументОбъект.ВидыЗапасов.Очистить();
	
	ОбщегоНазначенияУТ.ОчиститьИдентификаторыДокумента(ДокументОбъект, "Товары");
	
	ИнициализироватьДокументПеремаркировкаТоваров(ДокументОбъект);
	
КонецПроцедуры

// Обработка проведения перемаркировка товаров
//
// Параметры:
//  Отказ			 - Булево - Отказ.
//  РежимПроведения	 				 - РежимПроведения - Режим проведения документа.
//  ДокументОбъект	 				 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ОбработкаПроведенияПеремаркировкаТоваров(Отказ, РежимПроведения, ДокументОбъект) Экспорт
	
	ПроведениеДокументов.ОбработкаПроведенияДокумента(ДокументОбъект, Отказ);
	
КонецПроцедуры

// Обработка удаления проведения перемаркировка товаров
//
// Параметры:
//  Отказ			 - Булево - Отказ.
//  ДокументОбъект	 - ДокументОбъект.* - обрабатываемый документ.
//
Процедура ОбработкаУдаленияПроведенияПеремаркировкаТоваров(Отказ, ДокументОбъект) Экспорт
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("ПараметрыЗаполненияВидовЗапасов",
		ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов());
	
	ПроведениеДокументов.ОбработкаУдаленияПроведенияДокумента(ДокументОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

// Заполняет списки выбора реквизитов шапки.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения - форма документа.
//
Процедура ЗаполнитьСпискиВыбораРеквизитовШапкиПеремаркировкаТоваров(Форма) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.КиЗГИСМВид
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.КиЗГИСМ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.КиЗГИСМСпособВыпускаВОборот
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.КиЗГИСМ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.КиЗГИСМРазмер
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.КиЗГИСМ";
		
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаКиЗГИСМВид = ПакетРезультатов[0].Выбрать();
	ВыборкаКиЗГИСМСпособВыпускаВОборот = ПакетРезультатов[1].Выбрать();
	ВыборкаКиЗГИСМРазмер = ПакетРезультатов[2].Выбрать();
	
	Форма.Элементы.КиЗГИСМВид.СписокВыбора.Очистить();
	Форма.Элементы.КиЗГИСМРазмер.СписокВыбора.Очистить();
	Форма.Элементы.КиЗГИСМСпособВыпускаВОборот.СписокВыбора.Очистить();
	
	Пока ВыборкаКиЗГИСМВид.Следующий() Цикл
		Форма.Элементы.КиЗГИСМВид.СписокВыбора.Добавить(ВыборкаКиЗГИСМВид.КиЗГИСМВид);
	КонецЦикла;
	Если ВыборкаКиЗГИСМВид.Количество() = 1 Тогда
		Форма.Объект.КиЗГИСМВид = ВыборкаКиЗГИСМВид.КиЗГИСМВид;
	КонецЕсли;
	
	Пока ВыборкаКиЗГИСМРазмер.Следующий() Цикл
		Форма.Элементы.КиЗГИСМРазмер.СписокВыбора.Добавить(ВыборкаКиЗГИСМРазмер.КиЗГИСМРазмер);
	КонецЦикла;
	Если ВыборкаКиЗГИСМРазмер.Количество() = 1 Тогда
		Форма.Объект.КиЗГИСМРазмер = ВыборкаКиЗГИСМРазмер.КиЗГИСМРазмер;
	КонецЕсли;
	
	Пока ВыборкаКиЗГИСМСпособВыпускаВОборот.Следующий() Цикл
		Форма.Элементы.КиЗГИСМСпособВыпускаВОборот.СписокВыбора.Добавить(ВыборкаКиЗГИСМСпособВыпускаВОборот.КиЗГИСМСпособВыпускаВОборот);
	КонецЦикла;
	Если ВыборкаКиЗГИСМСпособВыпускаВОборот.Количество() = 1 Тогда
		Форма.Объект.КиЗГИСМСпособВыпускаВОборот = ВыборкаКиЗГИСМСпособВыпускаВОборот.КиЗГИСМСпособВыпускаВОборот;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область РеглУчет

// Возвращает параметры выбора статей и аналитик.
// 
// Возвращаемое значение:
//  Структура - Параметры выбора статей и аналитик (См. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики).
//
Функция ПараметрыВыбораСтатейИАналитикМаркировкаТоваров(ОперацияМаркировки) Экспорт
	
	Возврат ПараметрыВыбораСтатейИАналитикМаркировкаПеремаркировкаТоваровГИСМ();
	
КонецФункции

// Возвращает параметры выбора статей и аналитик.
// 
// Возвращаемое значение:
//  Структура - Параметры выбора статей и аналитик (См. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики).
//
Функция ПараметрыВыбораСтатейИАналитикПеремаркировкаТоваров() Экспорт
	
	Возврат ПараметрыВыбораСтатейИАналитикМаркировкаПеремаркировкаТоваровГИСМ();
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнениеМаркировкаТоваров

Процедура ЗаполнитьМаркировкуТоваровПоВозвратуТоваровОтКлиента(ДанныеЗаполнения, ДокументОбъект)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ВозвратТоваровОтКлиента.Ссылка КАК Ссылка,
	|	ВозвратТоваровОтКлиента.Организация КАК Организация,
	|	ВозвратТоваровОтКлиента.Склад КАК Склад,
	|	ВозвратТоваровОтКлиента.Менеджер КАК Ответственный,
	|	ВозвратТоваровОтКлиента.Подразделение КАК Подразделение,
	|	НЕ ВозвратТоваровОтКлиента.Проведен КАК ЕстьОшибкиПроведен,
	|	ВозвратТоваровОтКлиента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВозвратТоваровОтКлиента.НалогообложениеНДС КАК МаркировкаДляДеятельности
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
	|ГДЕ
	|	ВозвратТоваровОтКлиента.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровОтКлиентаТовары.Номенклатура,
	|	ВозвратТоваровОтКлиентаТовары.Характеристика,
	|	ВозвратТоваровОтКлиентаТовары.Количество
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ВозвратТоваровОтКлиентаТовары
	|ГДЕ
	|	ВозвратТоваровОтКлиентаТовары.Ссылка = &Ссылка
	|	И ВозвратТоваровОтКлиентаТовары.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)");
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Ссылка);
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетРезультатов[0].Выбрать();
	ВыборкаШапка.Следующий();
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.Ссылка,
		,
		ВыборкаШапка.ЕстьОшибкиПроведен);
		
	Если ПакетРезультатов[1].Пустой() Тогда
		ТекстОшибки = НСтр("ru='Документ %Документ% не содержит маркируемых товаров для ГИСМ. Ввод на основании такого документа запрещен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения.Ссылка);
		
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, ВыборкаШапка);
	ДокументОбъект.НазначениеКиЗ = НаправленияДеятельностиСервер.ТолкающееНазначение(ВыборкаШапка.НаправлениеДеятельности);
	ДокументОбъект.ОперацияМаркировки = Перечисления.ОперацииМаркировкиГИСМ.МаркировкаТоваровВозвращенныхПокупателем;
	ДокументОбъект.Основание = ДанныеЗаполнения.Ссылка;
	
	ДокументОбъект.Товары.Загрузить(ПакетРезультатов[1].Выгрузить());
	ЗаполнитьGTINВСтроках(ДокументОбъект);
	
КонецПроцедуры

Процедура ЗаполнитьМаркировкуТоваровПоПоступлениюТоваровУслуг(ДанныеЗаполнения, ДокументОбъект)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ПриобретениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ПриобретениеТоваровУслуг.Организация КАК Организация,
	|	ПриобретениеТоваровУслуг.Склад КАК Склад,
	|	ПриобретениеТоваровУслуг.Менеджер КАК Ответственный,
	|	ПриобретениеТоваровУслуг.Подразделение КАК Подразделение,
	|	НЕ ПриобретениеТоваровУслуг.Проведен КАК ЕстьОшибкиПроведен,
	|	ПриобретениеТоваровУслуг.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПриобретениеТоваровУслуг.НалогообложениеНДС КАК МаркировкаДляДеятельности
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриобретениеТоваровУслугТовары.Номенклатура,
	|	ПриобретениеТоваровУслугТовары.Характеристика,
	|	ПриобретениеТоваровУслугТовары.Количество
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|ГДЕ
	|	ПриобретениеТоваровУслугТовары.Ссылка = &Ссылка
	|	И ПриобретениеТоваровУслугТовары.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриобретениеТоваровУслугТовары.Склад КАК Склад
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|ГДЕ
	|	ПриобретениеТоваровУслугТовары.Ссылка = &Ссылка
	|	И ПриобретениеТоваровУслугТовары.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)");
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Ссылка);
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетРезультатов[0].Выбрать();
	ВыборкаШапка.Следующий();
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.Ссылка,
		,
		ВыборкаШапка.ЕстьОшибкиПроведен);
		
	Если ПакетРезультатов[1].Пустой() Тогда
		ТекстОшибки = НСтр("ru='Документ %Документ% не содержит маркируемых товаров для ГИСМ. Ввод на основании такого документа запрещен.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ДанныеЗаполнения.Ссылка);
		
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	МассивСкладов = ПакетРезультатов[2].Выгрузить().ВыгрузитьКолонку("Склад");
	СкладДляЗаполнения = СкладШапкиПоМассиву(МассивСкладов);
	
	ДокументОбъект.Склад = СкладДляЗаполнения;
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, ВыборкаШапка);
	ДокументОбъект.НазначениеКиЗ = НаправленияДеятельностиСервер.ТолкающееНазначение(ВыборкаШапка.НаправлениеДеятельности);
	ДокументОбъект.ОперацияМаркировки = Перечисления.ОперацииМаркировкиГИСМ.МаркировкаИмпортированныхТоваров;
	ДокументОбъект.Основание = ДанныеЗаполнения.Ссылка;
	
	ДокументОбъект.Товары.Загрузить(ПакетРезультатов[1].Выгрузить());
	ЗаполнитьGTINВСтроках(ДокументОбъект);
	
КонецПроцедуры

Процедура ЗаполнитьМаркировкуТоваровПоУведомлениюОбИмпортеМаркированныхТоваровГИСМ(ДанныеЗаполнения, ДокументОбъект)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	УведомлениеОбИмпорте.Основание.Склад КАК Склад,
	|	УведомлениеОбИмпорте.Основание.Подразделение КАК Подразделение,
	|	УведомлениеОбИмпорте.Основание.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	УведомлениеОбИмпорте.Основание.НалогообложениеНДС КАК МаркировкаДляДеятельности
	|ИЗ
	|	Документ.УведомлениеОбИмпортеМаркированныхТоваровГИСМ КАК УведомлениеОбИмпорте
	|ГДЕ
	|	УведомлениеОбИмпорте.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УведомлениеОбИмпортеТовары.Ссылка.Основание.Склад КАК Склад
	|ИЗ
	|	Документ.УведомлениеОбИмпортеМаркированныхТоваровГИСМ.Товары КАК УведомлениеОбИмпортеТовары
	|ГДЕ
	|	УведомлениеОбИмпортеТовары.Ссылка = &Ссылка
	|	И УведомлениеОбИмпортеТовары.Номенклатура.ОсобенностьУчета = ЗНАЧЕНИЕ(Перечисление.ОсобенностиУчетаНоменклатуры.ПродукцияИзНатуральногоМеха)");
	
	Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения.Ссылка);
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетРезультатов[0].Выбрать();
	ВыборкаШапка.Следующий();
	
	МассивСкладов = ПакетРезультатов[1].Выгрузить().ВыгрузитьКолонку("Склад");
	СкладДляЗаполнения = СкладШапкиПоМассиву(МассивСкладов);
	
	ДокументОбъект.Склад = СкладДляЗаполнения;
	
	ЗаполнитьЗначенияСвойств(ДокументОбъект, ВыборкаШапка);
	ДокументОбъект.НазначениеКиЗ = НаправленияДеятельностиСервер.ТолкающееНазначение(ВыборкаШапка.НаправлениеДеятельности);
	ЗаполнитьGTINВСтроках(ДокументОбъект);
	
КонецПроцедуры



Функция ОперацияМаркировкиПоУмолчанию(Операция)
	
	Если ЗначениеЗаполнено(Операция) Тогда
		Возврат Операция
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.КиЗГИСМВид
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.КиЗГИСМ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.КиЗГИСМСпособВыпускаВОборот
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.КиЗГИСМ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Номенклатура.КиЗГИСМРазмер
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ПометкаУдаления
		|	И Номенклатура.КиЗГИСМ";
		
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаКиЗГИСМВид = ПакетРезультатов[0].Выбрать();
	ВыборкаКиЗГИСМСпособВыпускаВОборот = ПакетРезультатов[1].Выбрать();
	ВыборкаКиЗГИСМРазмер = ПакетРезультатов[2].Выбрать();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство") Тогда
		Операция = Перечисления.ОперацииМаркировкиГИСМ.МаркировкаПроизведеннойПродукции;
	Иначе
		Операция = Перечисления.ОперацииМаркировкиГИСМ.ИдентификацияРанееМаркированнойНаПроизводствеПродукции;
	КонецЕсли;
	
	Если ВыборкаКиЗГИСМВид.Количество() = 0 И ВыборкаКиЗГИСМРазмер.Количество() = 0 И ВыборкаКиЗГИСМСпособВыпускаВОборот.Количество() = 0 Тогда
		Операция = Перечисления.ОперацииМаркировкиГИСМ.ИдентификацияРанееМаркированнойНаПроизводствеПродукции;
	КонецЕсли;
	
	Возврат Операция
	
КонецФункции

// Процедура заполняет массивы реквизитов, зависимых от хозяйственной операции документа.
//
Процедура ЗаполнитьИменаРеквизитовМаркировкиТоваровПоОперацииМаркировки(ОперацияМаркировки, МассивВсехРеквизитов, МассивРеквизитовОперации)
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("СтатьяРасходов");
	МассивВсехРеквизитов.Добавить("АналитикаРасходов");
	МассивВсехРеквизитов.Добавить("НаправлениеДеятельности");
	МассивВсехРеквизитов.Добавить("НазначениеКиЗ");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ОперацияМаркировки = Перечисления.ОперацииМаркировкиГИСМ.МаркировкаОстатковНа12082016
		ИЛИ ОперацияМаркировки = Перечисления.ОперацииМаркировкиГИСМ.МаркировкаПроизведеннойПродукции
		ИЛИ ОперацияМаркировки = Перечисления.ОперацииМаркировкиГИСМ.МаркировкаТоваровВозвращенныхПокупателем
		ИЛИ ОперацияМаркировки = Перечисления.ОперацииМаркировкиГИСМ.МаркировкаИмпортированныхТоваров
		ИЛИ ОперацияМаркировки = Перечисления.ОперацииМаркировкиГИСМ.МаркировкаТоваровПринятыхНаКомиссию Тогда
		
		МассивРеквизитовОперации.Добавить("СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("НаправлениеДеятельности");
		МассивРеквизитовОперации.Добавить("НазначениеКиЗ");
	КонецЕсли;
	
КонецПроцедуры

#Область ВидыЗапасов

Функция ВременныеТаблицыДанныхДокумента(ДокументОбъект) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	&Дата КАК Дата,
	|	&Организация КАК Организация,
	|	Неопределено КАК Партнер,
	|	Неопределено КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка) КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	&Валюта КАК Валюта,
	|	&МаркировкаДляДеятельности КАК МаркировкаДляДеятельности,
	|	&МаркировкаДляДеятельности КАК НалогообложениеНДС,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	&Склад КАК Склад,
	|	ЛОЖЬ КАК ЕстьСделкиВТабличнойЧасти,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) КАК ТипЗапасов
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.НоменклатураКиЗ КАК Номенклатура,
	|	ТаблицаТоваров.ХарактеристикаКиЗ КАК Характеристика,
	|	&Назначение КАК Назначение,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Количество КАК Количество
	|	
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	0 КАК СтатусУказанияСерий,
	|	&Назначение КАК Назначение,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	&Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка) КАК СтавкаНДС,
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаВознаграждения,
	|	0 КАК СуммаНДСВознаграждения,
	|	ИСТИНА КАК ПодбиратьВидыЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД	
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаВидыЗапасов.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	&Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	&ВидыЗапасовУказаныВручную КАК ВидыЗапасовУказаныВручную
	|	
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|//////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТаблицаВидыЗапасов.Склад КАК Склад,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную КАК ВидыЗапасовУказаныВручную
	|	
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Дата", ДокументОбъект.Дата);
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Склад", ДокументОбъект.Склад);
	Запрос.УстановитьПараметр("Назначение", ДокументОбъект.НазначениеКиЗ);
	Запрос.УстановитьПараметр("Валюта", Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("НалогообложениеНДС", ДокументОбъект.МаркировкаДляДеятельности);
	Запрос.УстановитьПараметр("МаркировкаДляДеятельности", ДокументОбъект.МаркировкаДляДеятельности);
	Запрос.УстановитьПараметр("ВидыЗапасовУказаныВручную", ДокументОбъект.ВидыЗапасовУказаныВручную);
	Запрос.УстановитьПараметр("ТаблицаТоваров", ДокументОбъект.Товары);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов", ДокументОбъект.ВидыЗапасов);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	ЗапасыСервер.ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос);
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

Функция ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц, Ссылка)
	
	ИменаРеквизитов = "Организация, Дата, МаркировкаДляДеятельности";
	
	Возврат ЗапасыСервер.ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц, Ссылка, ИменаРеквизитов);
	
КонецФункции

Процедура ЗаполнитьВидыЗапасов(ДокументОбъект, Отказ, ИмяДокумента)
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц = ВременныеТаблицыДанныхДокумента(ДокументОбъект);
	ПерезаполнитьВидыЗапасов = ЗапасыСервер.ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ДокументОбъект);
	
	Если Не ДокументОбъект.Проведен
		Или ПерезаполнитьВидыЗапасов
		Или ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц, ДокументОбъект.Ссылка)
		Или ЗапасыСервер.ПроверитьИзменениеТоваровПоКоличеству(МенеджерВременныхТаблиц) Тогда
		
		ПараметрыЗаполнения = ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов();
		ПараметрыЗаполнения.ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение.Вставить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи, "Никогда");
		
		ЗапасыСервер.ЗаполнитьВидыЗапасовПоТоварамОрганизаций(ДокументОбъект,
																МенеджерВременныхТаблиц,
																Отказ,
																ПараметрыЗаполнения);
		
		ДокументОбъект.ВидыЗапасов.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД",
											"Количество, КоличествоПоРНПТ");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СерииКиЗ

Процедура ПроверитьЗаполнитьСерииКиЗ(ДокументОбъект, Отказ)
	
	МаркируемыеСерии = ДокументОбъект.Серии.Выгрузить();
	
	Если Не ДокументОбъект.Проведен
		ИЛИ ПроверитьИзменениеЗависимыхРеквизитовСерий(ДокументОбъект)
		ИЛИ ПроверитьИзменениеЗависимыхРеквизитовСерийДокумента(ДокументОбъект) Тогда
		
		ОперацияИдентификации = ДокументОбъект.ОперацияМаркировки = Перечисления.ОперацииМаркировкиГИСМ.ИдентификацияРанееМаркированнойНаПроизводствеПродукции
			ИЛИ ДокументОбъект.ОперацияМаркировки = Перечисления.ОперацииМаркировкиГИСМ.ИдентификацияРанееМаркированныхПриИмпортеТоваров;
		ЗаполнитьСерииКиЗ(ДокументОбъект, МаркируемыеСерии, ОперацияИдентификации);
		СообщитьОбОшибкахЗаполненияСерииКиЗ(ДокументОбъект, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнитьСерииКиЗПеремаркировкаТоваров(ДокументОбъект, Отказ)
	
	МаркируемыеСерии = ДокументОбъект.Товары.Выгрузить();
	
	Если Не ДокументОбъект.Проведен
		ИЛИ ПроверитьИзменениеЗависимыхРеквизитовСерийПеремаркировкаТоваров(ДокументОбъект)
		ИЛИ ПроверитьИзменениеЗависимыхРеквизитовСерийДокументаПеремаркировкаТоваров(ДокументОбъект) Тогда
		
		ЗаполнитьСерииКиЗ(ДокументОбъект, МаркируемыеСерии, Ложь);
		СообщитьОбОшибкахЗаполненияСерииКиЗ(ДокументОбъект, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСерииКиЗ(ДокументОбъект, МаркируемыеСерии, ОперацияИдентификации)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДокументОбъект.СерииКиЗ.Очистить();
	
	Если ОперацияИдентификации Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	МаркируемыеСерии.Серия КАК Серия,
	|	МаркируемыеСерии.Количество КАК Количество,
	|	МаркируемыеСерии.Номенклатура КАК Номенклатура,
	|	МаркируемыеСерии.Характеристика КАК Характеристика,
	|	МаркируемыеСерии.GTIN КАК GTIN,
	|	МаркируемыеСерии.НоменклатураКиЗ КАК НоменклатураКиЗ,
	|	МаркируемыеСерии.ХарактеристикаКиЗ КАК ХарактеристикаКиЗ
	|ПОМЕСТИТЬ МаркируемыеСерии
	|ИЗ
	|	&МаркируемыеСерии КАК МаркируемыеСерии;
	|
	|ВЫБРАТЬ
	|	МаркируемыеСерии.Серия КАК Серия,
	|	ВЫРАЗИТЬ(МаркируемыеСерии.Серия КАК Справочник.СерииНоменклатуры).НомерКиЗГИСМ КАК НомерКиЗГИСМ,
	|	ВЫБОР
	|		КОГДА ВыпущенныеКиЗ.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК КизВыпущен,
	|	МаркируемыеСерии.Количество КАК Количество,
	|	МаркируемыеСерии.Номенклатура КАК Номенклатура,
	|	МаркируемыеСерии.Характеристика КАК Характеристика,
	|	МаркируемыеСерии.GTIN КАК GTIN,
	|	МаркируемыеСерии.НоменклатураКиЗ КАК НоменклатураКиЗ,
	|	МаркируемыеСерии.ХарактеристикаКиЗ КАК ХарактеристикаКиЗ,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(МаркируемыеСерии.ХарактеристикаКиЗ КАК Справочник.ХарактеристикиНоменклатуры).КиЗГИСМGTIN, ВЫРАЗИТЬ(МаркируемыеСерии.НоменклатураКиЗ КАК Справочник.Номенклатура).КиЗГИСМGTIN) КАК GTINКИЗ,
	|	ВЫРАЗИТЬ(МаркируемыеСерии.НоменклатураКиЗ КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатурыКиЗ
	|ПОМЕСТИТЬ ВтМаркируемыеСерии
	|ИЗ
	|	МаркируемыеСерии КАК МаркируемыеСерии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВыпускКиЗГИСМ.ВыпущенныеКиЗ КАК ВыпущенныеКиЗ
	|		ПО (ВыпущенныеКиЗ.НомерКиЗ = ВЫРАЗИТЬ(МаркируемыеСерии.Серия КАК Справочник.СерииНоменклатуры).НомерКиЗГИСМ)
	|			И (ВыпущенныеКиЗ.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияОтправкиПодтвержденияГИСМ.ПринятоГИСМ))
	|			И (ВыпущенныеКиЗ.Ссылка.ПометкаУдаления = ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка КАК Серия,
	|	ВтМаркируемыеСерии.Количество КАК Количество,
	|	ВтМаркируемыеСерии.НоменклатураКиЗ КАК Номенклатура,
	|	ВтМаркируемыеСерии.ХарактеристикаКиЗ КАК Характеристика,
	|	ВтМаркируемыеСерии.GTINКИЗ КАК GTIN,
	|	ВтМаркируемыеСерии.НомерКиЗГИСМ КАК НомерКиЗГИСМ
	|ПОМЕСТИТЬ ВтСерииКиЗ
	|ИЗ
	|	ВтМаркируемыеСерии КАК ВтМаркируемыеСерии
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО (СерииНоменклатуры.ВидНоменклатуры = ВтМаркируемыеСерии.ВидНоменклатурыКиЗ.ВладелецСерий 
	|				ИЛИ СерииНоменклатуры.ВидНоменклатуры = ВтМаркируемыеСерии.ВидНоменклатурыКиЗ)
	|			И (СерииНоменклатуры.НомерКиЗГИСМ = ВтМаркируемыеСерии.НомерКиЗГИСМ)
	|			И СерииНоменклатуры.ПометкаУдаления = ЛОЖЬ
	|ГДЕ
	|	НЕ СерииНоменклатуры.Ссылка ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтМаркируемыеСерии.Серия,
	|	ВЫРАЗИТЬ(ВтМаркируемыеСерии.Серия КАК Справочник.СерииНоменклатуры).ВидНоменклатуры КАК ВидНоменклатуры,
	|	ВтМаркируемыеСерии.НомерКиЗГИСМ,
	|	ВтМаркируемыеСерии.КизВыпущен,
	|	ВтМаркируемыеСерии.Количество,
	|	ВтМаркируемыеСерии.Номенклатура,
	|	ВтМаркируемыеСерии.Характеристика,
	|	ВтМаркируемыеСерии.GTIN,
	|	ВтМаркируемыеСерии.НоменклатураКиЗ,
	|	ВтМаркируемыеСерии.ХарактеристикаКиЗ,
	|	ВтМаркируемыеСерии.GTINКИЗ,
	|	ВЫБОР 
	|		КОГДА ВтМаркируемыеСерии.ВидНоменклатурыКиЗ.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры ТОГДА
	|			ВтМаркируемыеСерии.ВидНоменклатурыКиЗ.ВладелецСерий
	|		ИНАЧЕ
	|			ВтМаркируемыеСерии.ВидНоменклатурыКиЗ
	|	КОНЕЦ КАК ВидНоменклатурыКиЗ
	|ПОМЕСТИТЬ 
	|	ГенерируемыеСерии
	|ИЗ
	|	ВтМаркируемыеСерии КАК ВтМаркируемыеСерии
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСерииКиЗ КАК ВтСерииКиЗ
	|		ПО (ВтСерииКиЗ.НомерКиЗГИСМ = ВтМаркируемыеСерии.НомерКиЗГИСМ)
	|			И (ВтСерииКиЗ.GTIN = ВтМаркируемыеСерии.GTINКИЗ)
	|ГДЕ
	|	ВтСерииКиЗ.НомерКиЗГИСМ ЕСТЬ NULL;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГенерируемыеСерии.Серия,
	|	ГенерируемыеСерии.НомерКиЗГИСМ,
	|	ГенерируемыеСерии.КизВыпущен,
	|	ГенерируемыеСерии.Количество,
	|	ГенерируемыеСерии.Номенклатура,
	|	ГенерируемыеСерии.Характеристика,
	|	ГенерируемыеСерии.GTIN,
	|	ГенерируемыеСерии.НоменклатураКиЗ,
	|	ГенерируемыеСерии.ХарактеристикаКиЗ,
	|	ГенерируемыеСерии.GTINКИЗ,
	|	ГенерируемыеСерии.ВидНоменклатурыКиЗ
	|ИЗ 
	|	ГенерируемыеСерии КАК ГенерируемыеСерии;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтСерииКиЗ.Серия,
	|	ВтСерииКиЗ.Количество,
	|	ВтСерииКиЗ.Номенклатура,
	|	ВтСерииКиЗ.Характеристика,
	|	ВтСерииКиЗ.GTIN,
	|	ВтСерииКиЗ.НомерКиЗГИСМ
	|ИЗ
	|	ВтСерииКиЗ КАК ВтСерииКиЗ;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка КАК Ссылка,
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство КАК Свойство,
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ДопРеквизитыИсточник
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты
	|		ПО ВидыНоменклатуры.НаборСвойствСерий = НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка
	|ГДЕ
	|	ВидыНоменклатуры.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ ГенерируемыеСерии.ВидНоменклатуры ИЗ ГенерируемыеСерии)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка КАК Ссылка,
	|	НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Свойство КАК Свойство,
	|	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ДопРеквизитыПриемник
	|ИЗ
	|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты
	|		ПО ВидыНоменклатуры.НаборСвойствСерий = НаборыДополнительныхРеквизитовИСведенийДополнительныеРеквизиты.Ссылка
	|ГДЕ
	|	ВидыНоменклатуры.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ ГенерируемыеСерии.ВидНоменклатурыКиЗ ИЗ ГенерируемыеСерии)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДопРеквизитыИсточник.Свойство,
	|	ДопРеквизитыИсточник.ВидНоменклатуры
	|ПОМЕСТИТЬ ДопустимыеСвойства
	|ИЗ
	|	ДопРеквизитыИсточник КАК ДопРеквизитыИсточник
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДопРеквизитыПриемник КАК ДопРеквизитыПриемник
	|		ПО ДопРеквизитыИсточник.Свойство = ДопРеквизитыПриемник.Свойство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииНоменклатурыДополнительныеРеквизиты.Свойство КАК Свойство,
	|	СерииНоменклатурыДополнительныеРеквизиты.Значение КАК Значение,
	|	СерииНоменклатурыДополнительныеРеквизиты.Ссылка КАК Серия
	|ИЗ
	|	Справочник.СерииНоменклатуры.ДополнительныеРеквизиты КАК СерииНоменклатурыДополнительныеРеквизиты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДопустимыеСвойства КАК ДопустимыеСвойства
	|		ПО (СерииНоменклатурыДополнительныеРеквизиты.Ссылка.ВидНоменклатуры = ДопустимыеСвойства.ВидНоменклатуры)
	|			И (ДопустимыеСвойства.Свойство = СерииНоменклатурыДополнительныеРеквизиты.Свойство)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО (СерииНоменклатуры.Ссылка = СерииНоменклатурыДополнительныеРеквизиты.Ссылка)
	|ГДЕ
	|	СерииНоменклатурыДополнительныеРеквизиты.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ГенерируемыеСерии.Серия
	|			ИЗ
	|				ГенерируемыеСерии)
	|УПОРЯДОЧИТЬ ПО
	|	СерииНоменклатурыДополнительныеРеквизиты.Ссылка
	|";
	
	Запрос.УстановитьПараметр("МаркируемыеСерии", МаркируемыеСерии);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ДокументОбъект.СерииКиЗ.Загрузить(РезультатыЗапроса[5].Выгрузить());
	ВыборкаГенерируемыеСерии = РезультатыЗапроса[4].Выбрать();
	ВыборкаДопРеквизиты = РезультатыЗапроса[9].Выбрать();
	Пока ВыборкаГенерируемыеСерии.Следующий() Цикл
		СтрокаСерииКиЗ = ДокументОбъект.СерииКиЗ.Добавить();
		НоваяСерия = СгенерироватьСериюКиЗ(ВыборкаГенерируемыеСерии, ВыборкаДопРеквизиты);
		Если ЗначениеЗаполнено(НоваяСерия) Тогда
			СтрокаСерииКиЗ.Серия = НоваяСерия;
		КонецЕсли;
		СтрокаСерииКиЗ.Номенклатура   = ВыборкаГенерируемыеСерии.НоменклатураКиЗ;
		СтрокаСерииКиЗ.Характеристика = ВыборкаГенерируемыеСерии.ХарактеристикаКиЗ;
		СтрокаСерииКиЗ.GTIN           = ВыборкаГенерируемыеСерии.GTINКИЗ;
		СтрокаСерииКиЗ.Количество     = ВыборкаГенерируемыеСерии.Количество;
	КонецЦикла;
	
КонецПроцедуры

Функция СгенерироватьСериюКиЗ(Данные, ВыборкаДопРеквизиты)
	
	ШаблонОшибкиЗаписать = НСтр("ru='Не удалось записать серию КиЗ. %ОписаниеОшибки%'");
	
	НоваяСерия = Справочники.СерииНоменклатуры.СоздатьЭлемент();
	НоваяСерия.НомерКиЗГИСМ = Данные.НомерКиЗГИСМ;
	НоваяСерия.ВидНоменклатуры = Данные.ВидНоменклатурыКиЗ;
	
	ВыборкаДопРеквизиты.Сбросить();
	
	Пока ВыборкаДопРеквизиты.НайтиСледующий(Данные.Серия, "Серия") Цикл
		СтрокаДопРеквизиты = НоваяСерия.ДополнительныеРеквизиты.Добавить();
		СтрокаДопРеквизиты.Значение = ВыборкаДопРеквизиты.Значение;
		СтрокаДопРеквизиты.Свойство = ВыборкаДопРеквизиты.Свойство;
	КонецЦикла;
	
	Попытка
		НоваяСерия.Записать();
	Исключение
		ТекстОшибки = СтрЗаменить(ШаблонОшибкиЗаписать, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, НоваяСерия);
	КонецПопытки;
	
	Возврат НоваяСерия.Ссылка
	
КонецФункции

Функция ПроверитьИзменениеЗависимыхРеквизитовСерий(ДокументОбъект)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	МаркировкаТоваровГИСМСерии.Серия,
	|	МаркировкаТоваровГИСМСерии.Количество,
	|	МаркировкаТоваровГИСМСерии.Номенклатура,
	|	МаркировкаТоваровГИСМСерии.Характеристика,
	|	МаркировкаТоваровГИСМСерии.GTIN,
	|	МаркировкаТоваровГИСМСерии.НоменклатураКиЗ,
	|	МаркировкаТоваровГИСМСерии.ХарактеристикаКиЗ
	|ПОМЕСТИТЬ
	|	ВтСерии
	|ИЗ
	|	&Серии КАК МаркировкаТоваровГИСМСерии;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Серия КАК Серия
	|ИЗ (
	|	ВЫБРАТЬ
	|		МаркировкаТоваровГИСМСерии.Серия,
	|		МаркировкаТоваровГИСМСерии.Количество,
	|		МаркировкаТоваровГИСМСерии.Номенклатура,
	|		МаркировкаТоваровГИСМСерии.Характеристика,
	|		МаркировкаТоваровГИСМСерии.GTIN,
	|		МаркировкаТоваровГИСМСерии.НоменклатураКиЗ,
	|		МаркировкаТоваровГИСМСерии.ХарактеристикаКиЗ
	|	ИЗ
	|		ВтСерии КАК МаркировкаТоваровГИСМСерии
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		МаркировкаТоваровГИСМСерии.Серия,
	|		-МаркировкаТоваровГИСМСерии.Количество,
	|		МаркировкаТоваровГИСМСерии.Номенклатура,
	|		МаркировкаТоваровГИСМСерии.Характеристика,
	|		МаркировкаТоваровГИСМСерии.GTIN,
	|		МаркировкаТоваровГИСМСерии.НоменклатураКиЗ,
	|		МаркировкаТоваровГИСМСерии.ХарактеристикаКиЗ
	|	ИЗ
	|		Документ.МаркировкаТоваровГИСМ.Серии КАК МаркировкаТоваровГИСМСерии
	|	ГДЕ
	|		МаркировкаТоваровГИСМСерии.Ссылка = &Маркировка
	|	) КАК ТаблицаСерий
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаСерий.Количество) <> 0
	|");
	
	Запрос.УстановитьПараметр("Серии", ДокументОбъект.Серии.Выгрузить());
	Запрос.УстановитьПараметр("Маркировка", ДокументОбъект.Ссылка);
	
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Функция ПроверитьИзменениеЗависимыхРеквизитовСерийДокумента(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокумента.ОперацияМаркировки <> &ОперацияМаркировки ТОГДА
	|		ИСТИНА
	|	КОГДА ДанныеДокумента.Склад <> &Склад ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК РеквизитыИзменены
	|ИЗ
	|	Документ.МаркировкаТоваровГИСМ КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	";
	
	Запрос.УстановитьПараметр("ОперацияМаркировки", ДокументОбъект.ОперацияМаркировки);
	Запрос.УстановитьПараметр("Склад", ДокументОбъект.Склад);
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		РеквизитыИзменены = Выборка.РеквизитыИзменены;
	Иначе
		РеквизитыИзменены = Ложь;
	КонецЕсли;
	
	Возврат РеквизитыИзменены;
	
КонецФункции

Функция ПроверитьИзменениеЗависимыхРеквизитовСерийДокументаПеремаркировкаТоваров(ДокументОбъект)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокумента.Склад <> &Склад ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК РеквизитыИзменены
	|ИЗ
	|	Документ.ПереМаркировкаТоваровГИСМ КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	";
	
	Запрос.УстановитьПараметр("Склад", ДокументОбъект.Склад);
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		РеквизитыИзменены = Выборка.РеквизитыИзменены;
	Иначе
		РеквизитыИзменены = Ложь;
	КонецЕсли;
	
	Возврат РеквизитыИзменены;
	
КонецФункции

Функция ПроверитьИзменениеЗависимыхРеквизитовСерийПеремаркировкаТоваров(ДокументОбъект)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	МаркировкаТоваровГИСМСерии.Серия,
	|	МаркировкаТоваровГИСМСерии.Количество,
	|	МаркировкаТоваровГИСМСерии.Номенклатура,
	|	МаркировкаТоваровГИСМСерии.Характеристика,
	|	МаркировкаТоваровГИСМСерии.GTIN,
	|	МаркировкаТоваровГИСМСерии.НоменклатураКиЗ,
	|	МаркировкаТоваровГИСМСерии.ХарактеристикаКиЗ
	|ПОМЕСТИТЬ
	|	ВтСерии
	|ИЗ
	|	&Серии КАК МаркировкаТоваровГИСМСерии;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Серия КАК Серия
	|ИЗ (
	|	ВЫБРАТЬ
	|		МаркировкаТоваровГИСМСерии.Серия,
	|		МаркировкаТоваровГИСМСерии.Количество,
	|		МаркировкаТоваровГИСМСерии.Номенклатура,
	|		МаркировкаТоваровГИСМСерии.Характеристика,
	|		МаркировкаТоваровГИСМСерии.GTIN,
	|		МаркировкаТоваровГИСМСерии.НоменклатураКиЗ,
	|		МаркировкаТоваровГИСМСерии.ХарактеристикаКиЗ
	|	ИЗ
	|		ВтСерии КАК МаркировкаТоваровГИСМСерии
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПеремаркировкаТоваровГИСМТовары.Серия,
	|		-ПеремаркировкаТоваровГИСМТовары.Количество,
	|		ПеремаркировкаТоваровГИСМТовары.Номенклатура,
	|		ПеремаркировкаТоваровГИСМТовары.Характеристика,
	|		ПеремаркировкаТоваровГИСМТовары.GTIN,
	|		ПеремаркировкаТоваровГИСМТовары.НоменклатураКиЗ,
	|		ПеремаркировкаТоваровГИСМТовары.ХарактеристикаКиЗ
	|	ИЗ
	|		Документ.ПеремаркировкаТоваровГИСМ.Товары КАК ПеремаркировкаТоваровГИСМТовары
	|	ГДЕ
	|		ПеремаркировкаТоваровГИСМТовары.Ссылка = &Маркировка
	|	) КАК ТаблицаСерий
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаСерий.Количество) <> 0
	|");
	
	Запрос.УстановитьПараметр("Серии", ДокументОбъект.Товары.Выгрузить());
	Запрос.УстановитьПараметр("Маркировка", ДокументОбъект.Ссылка);
	
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Процедура СообщитьОбОшибкахЗаполненияСерииКиЗ(ДокументОбъект, Отказ)
	
	Для каждого СтрокаСерии Из ДокументОбъект.СерииКиЗ Цикл
		Если Не ЗначениеЗаполнено(СтрокаСерии.Серия) Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Для КиЗ %1 отсутствуют серии.'"),
				НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
					СтрокаСерии.Номенклатура,
					СтрокаСерии.Характеристика));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				ДокументОбъект.Ссылка,
				,
				,
				Отказ);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	МеханизмыДокумента.Добавить("Обеспечение");
	МеханизмыДокумента.Добавить("ОборотныеРегистрыУправленческогоУчета");
	МеханизмыДокумента.Добавить("ОперативныйУчетТоваровОрганизаций");
	МеханизмыДокумента.Добавить("СебестоимостьИПартионныйУчет");
	МеханизмыДокумента.Добавить("СерийныйУчет");
	МеханизмыДокумента.Добавить("АдресныйСклад");
	МеханизмыДокумента.Добавить("УчетПрочихАктивовПассивов");
	МеханизмыДокумента.Добавить("РеестрДокументов");
	
КонецПроцедуры

// Возвращает таблицы для движений, необходимые для проведения документа по регистрам учетных механизмов.
//
// Параметры:
//  Документ - ДокументСсылка - ссылка на документ, по которому необходимо получить данные
//  Регистры - Структура - список имен регистров, для которых необходимо получить таблицы
//  ДопПараметры - Структура - дополнительные параметры для получения данных, определяющие контекст проведения.
//
// Возвращаемое значение:
//  Структура - коллекция элементов:
//     * Таблица<ИмяРегистра> - ТаблицаЗначений - таблица данных для отражения в регистр.
//
Функция ДанныеДокументаДляПроведения(Документ, Регистры, ДопПараметры = Неопределено) Экспорт
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.МаркировкаТоваровГИСМ") Тогда
		Возврат ДанныеДокументаДляПроведенияМаркировкаТоваров(Документ, Регистры, ДопПараметры);
	Иначе
		Возврат ДанныеДокументаДляПроведенияПеремаркировкаТоваров(Документ, Регистры, ДопПараметры);
	КонецЕсли;
	
КонецФункции

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных 

КонецФункции

#Область ПроведениеМаркировкаТоваров

Функция ДанныеДокументаДляПроведенияМаркировкаТоваров(Документ, Регистры, ДопПараметры)
	
	ИмяДокумента 	= Документ.Метаданные().Имя;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект." + ИмяДокумента) Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		
		ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
		РасчетСебестоимостиПроведениеДокументов.ОтразитьВМеханизмеУчетаЗатратИСебестоимости(ДокументСсылка, Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		
	КонецЕсли;
	
	ОтразитьРаспределениеЗапасовДвижения(Запрос, ТекстыЗапроса, Регистры);
	
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Ссылка                         КАК Ссылка,
		|	Таблица.Дата                           КАК Период,
		|	Таблица.Организация                    КАК Организация,
		|	Таблица.Склад                          КАК Склад,
		|	Таблица.Подразделение                  КАК Подразделение,
		|	Таблица.ОперацияМаркировки             КАК ОперацияМаркировки,
		|	Таблица.МаркировкаДляДеятельности      КАК МаркировкаДляДеятельности,
		|	Таблица.НаправлениеДеятельности        КАК НаправлениеДеятельности,
		|	Таблица.НазначениеКиЗ                  КАК НазначениеКиЗ,
		|	Таблица.СтатьяРасходов                 КАК СтатьяРасходов,
		|	Таблица.АналитикаРасходов              КАК АналитикаРасходов,
		|	ВЫБОР
		|		КОГДА
		|			Таблица.ОперацияМаркировки НЕ В (ЗНАЧЕНИЕ(Перечисление.ОперацииМаркировкиГИСМ.ИдентификацияРанееМаркированнойНаПроизводствеПродукции), ЗНАЧЕНИЕ(Перечисление.ОперацииМаркировкиГИСМ.ИдентификацияРанееМаркированныхПриИмпортеТоваров)) 
		|		ТОГДА
		|			ИСТИНА
		|		ИНАЧЕ
		|			ЛОЖЬ
		|	КОНЕЦ КАК СписаниеКиЗ,
		|	Таблица.Номер КАК Номер,
		|	Таблица.Комментарий КАК Комментарий,
		|	Таблица.Проведен КАК Проведен,
		|	Таблица.ПометкаУдаления КАК ПометкаУдаления,
		|	Таблица.Ответственный КАК Ответственный
		|ИЗ
		|	Документ.МаркировкаТоваровГИСМ КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка";

	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	Запрос.УстановитьПараметр("Ссылка",                    Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Период",                    Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",               Реквизиты.Организация);
	Запрос.УстановитьПараметр("Склад",                     Реквизиты.Склад);
	Запрос.УстановитьПараметр("Подразделение",             Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ОперацияМаркировки",        Реквизиты.ОперацияМаркировки);
	Запрос.УстановитьПараметр("МаркировкаДляДеятельности", Реквизиты.МаркировкаДляДеятельности);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",   Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("НазначениеКиЗ",             Реквизиты.НазначениеКиЗ);
	Запрос.УстановитьПараметр("СтатьяРасходов",            Реквизиты.СтатьяРасходов);
	Запрос.УстановитьПараметр("АналитикаРасходов",         Реквизиты.АналитикаРасходов);
	Запрос.УстановитьПараметр("СписаниеКиЗ",               Реквизиты.СписаниеКиЗ);
	
	Запрос.УстановитьПараметр("Валюта",                Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ПустойКлючСвязи",       Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	Запрос.УстановитьПараметр("ПустаяСерия",           Справочники.СерииНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию);
	
	Запрос.УстановитьПараметр("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.МаркировкаТоваровГИСМ"));
	Запрос.УстановитьПараметр("ХозяОперацияДляРеестра", Перечисления.ХозяйственныеОперации.МаркировкаТоваровГИСМ);
	Запрос.УстановитьПараметр("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	Запрос.УстановитьПараметр("Номер", Реквизиты.Номер);
	Запрос.УстановитьПараметр("Комментарий", Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("Проведен", Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления", Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("Ответственный", Реквизиты.Ответственный);
	
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос.Параметры, "МаркировкаТоваровГИСМ");
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Реквизиты, ИмяДокумента)

	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения КАК МестоХранения,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение
	|ИЗ
	|	&ИмяДокумента КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура = Аналитика.Номенклатура
	|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика = Аналитика.Характеристика
	|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Серия = Аналитика.Серия
	|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения = Аналитика.МестоХранения
	|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = Аналитика.Назначение
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL
	|	И ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И НЕ &УчитыватьСебестоимостьТоваровПоНазначениям
	|");
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ИмяДокумента", "Документ." + ИмяДокумента + ".ВидыЗапасов");
	
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоНазначениям", Реквизиты.УчитыватьСебестоимостьТоваровПоНазначениям);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;

КонецПроцедуры

Функция ТекстЗапросаВтТаблицаСерииТоваров(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаСерииТоваров";

	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаСерии.Номенклатура                                   КАК Номенклатура,
		|	ТаблицаСерии.Характеристика                                 КАК Характеристика,
		|	&НазначениеКиЗ                                              КАК Назначение,
		|	ТаблицаСерии.Количество                                     КАК Количество,
		|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий)                 КАК СтатусУказанияСерий,
		|	ТаблицаСерии.Серия                                          КАК Серия,
		|	МИНИМУМ(ТаблицаСерии.НомерСтроки)                           КАК НомерСтроки,
		|	ЛОЖЬ                                                        КАК КонтролироватьОстатки
		|ПОМЕСТИТЬ ВтТаблицаСерииТоваров
		|ИЗ
		|	Документ.МаркировкаТоваровГИСМ.СерииКиЗ КАК ТаблицаСерии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаркировкаТоваровГИСМ.Товары КАК ТаблицаТовары
		|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
		|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
		|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
		|ГДЕ
		|	ТаблицаСерии.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаСерии.Номенклатура,
		|	ТаблицаСерии.Характеристика,
		|	&НазначениеКиЗ,
		|	ТаблицаСерии.Серия,
		|	ТаблицаСерии.Количество
		|
		|ИМЕЮЩИЕ
		|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4)";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасов";
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаВидыЗапасов.НомерСтроки                КАК НомерСтроки,
		|	Справочник.ВидЗапасовВладельца                КАК ВидЗапасовВладельца,
		|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
		|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	АналитикаБезНазначения.КлючАналитики          КАК АналитикаУчетаНоменклатурыБезНазначения,
		|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
		|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	ТаблицаВидыЗапасов.НомерГТД                   КАК НомерГТД,
		|	ТаблицаВидыЗапасов.Количество                 КАК Количество,
		|	ТаблицаВидыЗапасов.КоличествоПоРНПТ           КАК КоличествоПоРНПТ,
		|	&ХозяйственнаяОперация                        КАК ХозяйственнаяОперация,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(&СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|	ИНАЧЕ
		|		&МаркировкаДляДеятельности
		|	КОНЕЦ                                         КАК НалогообложениеНДС,
		|	&СтатьяРасходов             КАК СтатьяРасходов,
		|	&АналитикаРасходов          КАК АналитикаРасходов,
		|	ТаблицаВидыЗапасов.ВидЗапасов КАК КорВидЗапасов,
		|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов      КАК ТипЗапасов,
		|	ТаблицаВидыЗапасов.ИдентификаторСтроки        КАК ИдентификаторСтроки,
		|	ТаблицаВидыЗапасов.ИдентификаторСтроки        КАК ИдентификаторФинЗаписи
		|ПОМЕСТИТЬ ВтВидыЗапасов
		|ИЗ
		|	Документ.МаркировкаТоваровГИСМ.ВидыЗапасов КАК ТаблицаВидыЗапасов
		|
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Справочник.ВидыЗапасов КАК Справочник
		|	ПО
		|		ТаблицаВидыЗапасов.ВидЗапасов = Справочник.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
		|	ПО
		|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаБезНазначения.Номенклатура
		|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика = АналитикаБезНазначения.Характеристика
		|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Серия = АналитикаБезНазначения.Серия
		|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения = АналитикаБезНазначения.МестоХранения
		|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаБезНазначения.Назначение
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|	ПО
		|		&СтатьяРасходов = СтатьиРасходов.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
		|		ПО АналитикаРасчетов.Организация = &Организация
		|		И АналитикаРасчетов.Партнер = Справочник.ВладелецТовара
		|		И АналитикаРасчетов.Контрагент = Справочник.Контрагент
		|		И АналитикаРасчетов.Договор = Справочник.Договор
		|		И АналитикаРасчетов.НаправлениеДеятельности = &НаправлениеДеятельности
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
		|		ПО АналитикаРасчетовИнтеркампани.Организация = &Организация
		|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
		|		И АналитикаРасчетовИнтеркампани.Контрагент = Справочник.Контрагент
		|		И АналитикаРасчетовИнтеркампани.Договор = Справочник.Договор
		|		И АналитикаРасчетов.НаправлениеДеятельности = &НаправлениеДеятельности
		|ГДЕ
		|	ТаблицаВидыЗапасов.Ссылка = &Ссылка";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаСерииТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСерииТоваров(Запрос, ТекстыЗапроса)
	КонецЕсли;
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&Период КАК Период,
		|	&Склад КАК Склад,
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	&НазначениеКиЗ                         КАК Назначение,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	ТаблицаТовары.Серия                    КАК Серия,
		|	ТаблицаТовары.Количество               КАК ВНаличии,
		|	0                                      КАК КОтгрузке,
		|	ТаблицаТовары.КонтролироватьОстатки    КАК КонтролироватьОстатки
		|ИЗ
		|	ВтТаблицаСерииТоваров КАК ТаблицаТовары
		|ГДЕ
		|	&СписаниеКиЗ
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ (&НазначениеКиЗ КАК Справочник.Назначения).ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА &НазначениеКиЗ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаСерии.Серия КАК Серия,
	|	-ТаблицаСерии.Количество КАК Количество,
	|	&Склад КАК Отправитель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка) КАК ПомещениеОтправителя,
	|	НЕОПРЕДЕЛЕНО КАК ПомещениеПолучателя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.МаркировкаПродукцииДляГИСМ) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	ИСТИНА КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.МаркировкаТоваровГИСМ.СерииКиЗ КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И &СписаниеКиЗ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Склад КАК Отправитель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка) КАК ПомещениеОтправителя,
	|	НЕОПРЕДЕЛЕНО КАК ПомещениеПолучателя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.МаркировкаПродукцииДляГИСМ) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	ИСТИНА КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.МаркировкаТоваровГИСМ.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&Период КАК Период,
		|	&Склад КАК Склад,
		|	&Организация КАК ОрганизацияОтгрузки,
		|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
		|		ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация
		|	ИНАЧЕ
		|		&Организация
		|	КОНЕЦ КАК Организация,
		|
		|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
		|		ТаблицаВидыЗапасов.ВидЗапасовВладельца
		|	ИНАЧЕ
		|		ТаблицаВидыЗапасов.ВидЗапасов
		|	КОНЕЦ КАК ВидЗапасов,
		|
		|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
		|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
		|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
		|	ТаблицаВидыЗапасов.Количество КАК Количество,
		|	ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
		|	ВЫБОР 
		|		КОГДА ТаблицаВидыЗапасов.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
		|				И ТаблицаВидыЗапасов.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|			ТОГДА
		|				ВЫБОР ТаблицаВидыЗапасов.СтатьяРасходов.ВидЦенностиНДС
		|					КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС) ТОГДА
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС)
		|					КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства) ТОГДА
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС)
		|					КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА) ТОГДА
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставНМА)
		|				КОНЕЦ
		|		КОГДА ТаблицаВидыЗапасов.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
		|				И ТаблицаВидыЗапасов.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаПрочиеЦели)
		|		ИНАЧЕ
		|			&ХозяйственнаяОперация
		|	КОНЕЦ КАК ХозяйственнаяОперация,
		|
		|	ТаблицаВидыЗапасов.НалогообложениеНДС КАК НалогообложениеНДС,
		|
		|	ТаблицаВидыЗапасов.СтатьяРасходов КАК СтатьяРасходов,
		|	ТаблицаВидыЗапасов.АналитикаРасходов КАК АналитикаРасходов,
		|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ИЗ
		|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
		|ГДЕ
		|	&СписаниеКиЗ
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)             КАК ВидДвижения,
	|	&Период                                            КАК Период,
	|	&Склад                                             КАК Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация КАК ОрганизацияВладелец,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов                      КАК ВидЗапасовПродавца,
	|	ТаблицаВидыЗапасов.НомерГТД                        КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Номенклатура                    КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика                  КАК Характеристика,
	|	ТаблицаВидыЗапасов.Количество                      КАК Количество,
	|	&ХозяйственнаяОперация                             КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.НалогообложениеНДС              КАК НалогообложениеНДС
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|	И &СписаниеКиЗ
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураДоходыРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	Строки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Склад КАК Склад,
	|
	|	ВЫБОР
	|		КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			Строки.КорВидЗапасов
	|		ИНАЧЕ Строки.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			Строки.КорВидЗапасов.ТипЗапасов
	|		ИНАЧЕ Строки.ТипЗапасов
	|	КОНЕЦ КАК ТипЗапасов,
	|
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	&СтатьяРасходов КАК СтатьяДоходовРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|
	|	Строки.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА
	|				ВЫБОР КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|					Строки.КорВидЗапасов
	|				ИНАЧЕ
	|					Строки.ВидЗапасов
	|				КОНЕЦ
	|		ИНАЧЕ Строки.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтВидыЗапасов КАК Строки
	|	
	|ГДЕ
	|	&СписаниеКиЗ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция АдаптированныйТекстЗапросаДвиженийПоРегиструМаркировкаТоваров(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.МаркировкаТоваровГИСМ";
	
	ЗначенияПараметров = Новый Структура();
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	СписаниеКиЗТекст = 
	"ВЫБОР
	|		КОГДА
	|			ТаблицаСерии.Ссылка.ОперацияМаркировки НЕ В (ЗНАЧЕНИЕ(Перечисление.ОперацииМаркировкиГИСМ.ИдентификацияРанееМаркированнойНаПроизводствеПродукции), ЗНАЧЕНИЕ(Перечисление.ОперацииМаркировкиГИСМ.ИдентификацияРанееМаркированныхПриИмпортеТоваров)) 
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ";
	ПереопределениеРасчетаПараметров.Вставить("СписаниеКиЗ", СписаниеКиЗТекст);
	
	Если ИмяРегистра = "ДвиженияСерийТоваров" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаСерии";
		
	ИначеЕсли ИмяРегистра = "РеестрДокументов" Тогда
		
		ЗначенияПараметров.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.МаркировкаТоваровГИСМ"));
		ЗначенияПараметров.Вставить("ХозяОперацияДляРеестра", Перечисления.ХозяйственныеОперации.МаркировкаТоваровГИСМ);
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента, Ложь);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(ТекстЗапроса,
																									ПолноеИмяДокумента,
																									СинонимТаблицыДокумента,
																									ПереопределениеРасчетаПараметров);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ОтразитьРаспределениеЗапасовДвижения(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЗапросаТабЧасть =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка               КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата          КАК Период,
		|	ТабЧасть.НоменклатураКиЗ      КАК Номенклатура,
		|	ТабЧасть.ХарактеристикаКиЗ    КАК Характеристика,
		|	ТабЧасть.Ссылка.Склад         КАК Склад,
		|	ТабЧасть.Ссылка.НазначениеКиЗ КАК Назначение,
		|	ТабЧасть.Количество           КАК Количество,
		|	НЕОПРЕДЕЛЕНО                  КАК ЗапланированныйРасходРаспределенногоЗапаса,
		|	ИСТИНА                        КАК КонтрольСвободногоОстатка
		|ИЗ
		|	Документ.МаркировкаТоваровГИСМ.Товары КАК ТабЧасть
		|ГДЕ
		|	ТабЧасть.Ссылка.ОперацияМаркировки НЕ В(
		|		ЗНАЧЕНИЕ(Перечисление.ОперацииМаркировкиГИСМ.ИдентификацияРанееМаркированнойНаПроизводствеПродукции),
		|		ЗНАЧЕНИЕ(Перечисление.ОперацииМаркировкиГИСМ.ИдентификацияРанееМаркированныхПриИмпортеТоваров))";
	
	РаспределениеЗапасовДвижения.РасходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
КонецПроцедуры

#КонецОбласти 

#Область ПроведениеПеремаркировкаТоваров

Функция ДанныеДокументаДляПроведенияПеремаркировкаТоваров(Документ, Регистры, ДопПараметры)
	
	ИмяДокумента = Документ.Метаданные().Имя;
	
	Если ТипЗнч(Документ) = Тип("ДокументОбъект." + ИмяДокумента) Тогда
		ДокументСсылка = Документ.Ссылка;
	Иначе
		ДокументСсылка = Документ;
	КонецЕсли;
	
	Запрос			= Новый Запрос;
	ТекстыЗапроса	= Новый СписокЗначений;
	
	Если Не ДопПараметры.ПолучитьТекстыЗапроса Тогда
		////////////////////////////////////////////////////////////////////////////
		// Создадим запрос инициализации движений
		
		ЗаполнитьПараметрыИнициализацииПеремаркировкаТоваров(Запрос, ДокументСсылка);
		
		////////////////////////////////////////////////////////////////////////////
		// Сформируем текст запроса
		
		ТекстЗапросаТаблицаТоварыНаСкладахПеремаркировкаТоваров(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаДвиженияСерийТоваровПеремаркировкаТоваров(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТоварыОрганизацийПеремаркировкаТоваров(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаТоварыОрганизацийКПередачеПеремаркировкаТоваров(Запрос, ТекстыЗапроса, Регистры);
		РасчетСебестоимостиПроведениеДокументов.ОтразитьВМеханизмеУчетаЗатратИСебестоимости(ДокументСсылка, Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаДвиженияНоменклатураДоходыРасходыПеремаркировкаТоваров(Запрос, ТекстыЗапроса, Регистры);
		ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры);
		
	КонецЕсли;
	
	ОтразитьРаспределениеЗапасовДвиженияПеремаркировкаТоваров(Запрос, ТекстыЗапроса, Регистры);
	////////////////////////////////////////////////////////////////////////////
	// Получим таблицы для движений
	
	Возврат ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(Запрос, ТекстыЗапроса, ДопПараметры);
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализацииПеремаркировкаТоваров(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Ссылка                         КАК Ссылка,
		|	Таблица.Дата                           КАК Период,
		|	Таблица.Организация                    КАК Организация,
		|	Таблица.Склад                          КАК Склад,
		|	Таблица.Подразделение                  КАК Подразделение,
		|	Таблица.МаркировкаДляДеятельности      КАК МаркировкаДляДеятельности,
		|	Таблица.НаправлениеДеятельности        КАК НаправлениеДеятельности,
		|	Таблица.НазначениеКиЗ                  КАК НазначениеКиЗ,
		|	Таблица.СтатьяРасходов                 КАК СтатьяРасходов,
		|	Таблица.АналитикаРасходов              КАК АналитикаРасходов,
		|	Таблица.Номер						   КАК Номер,
		|	Таблица.Комментарий					   КАК Комментарий,
		|	Таблица.Проведен					   КАК Проведен,
		|	Таблица.ПометкаУдаления				   КАК ПометкаУдаления,
		|	Таблица.Ответственный				   КАК Ответственный
		|ИЗ
		|	Документ.ПеремаркировкаТоваровГИСМ КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка";

	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Ссылка",                    Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Период",                    Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",               Реквизиты.Организация);
	Запрос.УстановитьПараметр("Склад",                     Реквизиты.Склад);
	Запрос.УстановитьПараметр("Подразделение",             Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("МаркировкаДляДеятельности", Реквизиты.МаркировкаДляДеятельности);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",   Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("НазначениеКиЗ",             Реквизиты.НазначениеКиЗ);
	Запрос.УстановитьПараметр("СтатьяРасходов",            Реквизиты.СтатьяРасходов);
	Запрос.УстановитьПараметр("АналитикаРасходов",         Реквизиты.АналитикаРасходов);
	
	Запрос.УстановитьПараметр("Валюта",                Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ПустойКлючСвязи",       Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	Запрос.УстановитьПараметр("ПустаяСерия",           Справочники.СерииНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию);
	
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	Запрос.УстановитьПараметр("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПеремаркировкаТоваровГИСМ"));
	Запрос.УстановитьПараметр("ХозяОперацияДляРеестра", Перечисления.ХозяйственныеОперации.ПеремаркировкаТоваровГИСМ);
	Запрос.УстановитьПараметр("НомерНаПечать", ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Реквизиты.Номер));
	Запрос.УстановитьПараметр("Номер", Реквизиты.Номер);
	Запрос.УстановитьПараметр("Комментарий", Реквизиты.Комментарий);
	Запрос.УстановитьПараметр("Проведен", Реквизиты.Проведен);
	Запрос.УстановитьПараметр("ПометкаУдаления", Реквизиты.ПометкаУдаления);
	Запрос.УстановитьПараметр("Ответственный", Реквизиты.Ответственный);
	
	РасчетСебестоимостиПрикладныеАлгоритмы.ЗаполнитьПараметрыИнициализации(Запрос, Реквизиты);
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос.Параметры, "ПеремаркировкаТоваровГИСМ");
	
КонецПроцедуры

Функция ТекстЗапросаВтТаблицаСерииТоваровПеремаркировкаТоваров(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаСерииТоваров";

	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаСерии.Номенклатура                                   КАК Номенклатура,
		|	ТаблицаСерии.Характеристика                                 КАК Характеристика,
		|	&НазначениеКиЗ                                              КАК Назначение,
		|	ТаблицаСерии.Количество                                     КАК Количество,
		|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий)                 КАК СтатусУказанияСерий,
		|	ТаблицаСерии.Серия                                          КАК Серия,
		|	МИНИМУМ(ТаблицаСерии.НомерСтроки)                           КАК НомерСтроки,
		|	ЛОЖЬ                                                        КАК КонтролироватьОстатки
		|ПОМЕСТИТЬ ВтТаблицаСерииТоваров
		|ИЗ
		|	Документ.ПеремаркировкаТоваровГИСМ.СерииКиЗ КАК ТаблицаСерии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаркировкаТоваровГИСМ.Товары КАК ТаблицаТовары
		|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
		|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
		|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
		|ГДЕ
		|	ТаблицаСерии.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаСерии.Номенклатура,
		|	ТаблицаСерии.Характеристика,
		|	&НазначениеКиЗ,
		|	ТаблицаСерии.Серия,
		|	ТаблицаСерии.Количество
		|
		|ИМЕЮЩИЕ
		|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4)";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтВидыЗапасовПеремаркировкаТоваров(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасов";
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаВидыЗапасов.НомерСтроки                КАК НомерСтроки,
		|	Справочник.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
		|	Справочник.ВидЗапасовВладельца                КАК ВидЗапасовВладельца,
		|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
		|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	АналитикаБезНазначения.КлючАналитики          КАК АналитикаУчетаНоменклатурыБезНазначения,
		|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
		|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
		|	ТаблицаВидыЗапасов.НомерГТД                   КАК НомерГТД,
		|	ТаблицаВидыЗапасов.Количество                 КАК Количество,
		|	ТаблицаВидыЗапасов.КоличествоПоРНПТ           КАК КоличествоПоРНПТ,
		|	&ХозяйственнаяОперация                        КАК ХозяйственнаяОперация,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(&СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов).ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|	ИНАЧЕ
		|		&МаркировкаДляДеятельности
		|	КОНЕЦ                                         КАК НалогообложениеНДС,
		|	&СтатьяРасходов             КАК СтатьяРасходов,
		|	&АналитикаРасходов          КАК АналитикаРасходов,
		|	ТаблицаВидыЗапасов.ВидЗапасов КАК КорВидЗапасов,
		|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов      КАК ТипЗапасов,
		|	ТаблицаВидыЗапасов.ИдентификаторСтроки        КАК ИдентификаторСтроки,
		|	ТаблицаВидыЗапасов.ИдентификаторСтроки        КАК ИдентификаторФинЗаписи
		|ПОМЕСТИТЬ ВтВидыЗапасов
		|ИЗ
		|	Документ.ПеремаркировкаТоваровГИСМ.ВидыЗапасов КАК ТаблицаВидыЗапасов
		|
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Справочник.ВидыЗапасов КАК Справочник
		|	ПО
		|		ТаблицаВидыЗапасов.ВидЗапасов = Справочник.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаБезНазначения
		|	ПО
		|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура = АналитикаБезНазначения.Номенклатура
		|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика = АналитикаБезНазначения.Характеристика
		|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Серия = АналитикаБезНазначения.Серия
		|		И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения = АналитикаБезНазначения.МестоХранения
		|		И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаБезНазначения.Назначение
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|	ПО
		|		&СтатьяРасходов = СтатьиРасходов.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
		|		ПО АналитикаРасчетов.Организация = &Организация
		|		И АналитикаРасчетов.Партнер = Справочник.ВладелецТовара
		|		И АналитикаРасчетов.Контрагент = Справочник.Контрагент
		|		И АналитикаРасчетов.Договор = Справочник.Договор
		|		И АналитикаРасчетов.НаправлениеДеятельности = &НаправлениеДеятельности
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
		|		ПО АналитикаРасчетовИнтеркампани.Организация = &Организация
		|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
		|		И АналитикаРасчетовИнтеркампани.Контрагент = Справочник.Контрагент
		|		И АналитикаРасчетовИнтеркампани.Договор = Справочник.Договор
		|		И АналитикаРасчетов.НаправлениеДеятельности = &НаправлениеДеятельности
		|ГДЕ
		|	ТаблицаВидыЗапасов.Ссылка = &Ссылка";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладахПеремаркировкаТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаСерииТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСерииТоваровПеремаркировкаТоваров(Запрос, ТекстыЗапроса)
	КонецЕсли;
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&Период КАК Период,
		|	&Склад КАК Склад,
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	&НазначениеКиЗ                         КАК Назначение,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	ТаблицаТовары.Серия                    КАК Серия,
		|	ТаблицаТовары.Количество               КАК ВНаличии,
		|	0                                      КАК КОтгрузке,
		|	ТаблицаТовары.КонтролироватьОстатки    КАК КонтролироватьОстатки
		|ИЗ
		|	ВтТаблицаСерииТоваров КАК ТаблицаТовары
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваровПеремаркировкаТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ (&НазначениеКиЗ КАК Справочник.Назначения).ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА &НазначениеКиЗ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаСерии.Серия КАК Серия,
	|	-ТаблицаСерии.Количество КАК Количество,
	|	&Склад КАК Отправитель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка) КАК ПомещениеОтправителя,
	|	НЕОПРЕДЕЛЕНО КАК ПомещениеПолучателя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.МаркировкаПродукцииДляГИСМ) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	ИСТИНА КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПеремаркировкаТоваровГИСМ.СерииКиЗ КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ (&НазначениеКиЗ КАК Справочник.Назначения).ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА &НазначениеКиЗ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Склад КАК Отправитель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка) КАК ПомещениеОтправителя,
	|	НЕОПРЕДЕЛЕНО КАК ПомещениеПолучателя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.МаркировкаПродукцииДляГИСМ) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	ИСТИНА КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПеремаркировкаТоваровГИСМ.Товары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ (&НазначениеКиЗ КАК Справочник.Назначения).ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА &НазначениеКиЗ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаСерии.СписываемаяСерия КАК Серия,
	|	-ТаблицаСерии.Количество КАК Количество,
	|	&Склад КАК Отправитель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка) КАК ПомещениеОтправителя,
	|	НЕОПРЕДЕЛЕНО КАК ПомещениеПолучателя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.МаркировкаПродукцииДляГИСМ) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	ИСТИНА КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПеремаркировкаТоваровГИСМ.Товары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийПеремаркировкаТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасовПеремаркировкаТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&Период КАК Период,
		|	&Склад КАК Склад,
		|	&Организация КАК ОрганизацияОтгрузки,
		|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
		|		ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация
		|	ИНАЧЕ
		|		&Организация
		|	КОНЕЦ КАК Организация,
		|
		|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
		|		ТаблицаВидыЗапасов.ВидЗапасовВладельца
		|	ИНАЧЕ
		|		ТаблицаВидыЗапасов.ВидЗапасов
		|	КОНЕЦ КАК ВидЗапасов,
		|
		|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
		|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
		|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
		|	ТаблицаВидыЗапасов.Количество КАК Количество,
		|	ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
		|	ВЫБОР 
		|		КОГДА ТаблицаВидыЗапасов.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
		|				И ТаблицаВидыЗапасов.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|			ТОГДА
		|				ВЫБОР ТаблицаВидыЗапасов.СтатьяРасходов.ВидЦенностиНДС
		|					КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС) ТОГДА
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС)
		|					КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства) ТОГДА
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС)
		|					КОГДА ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА) ТОГДА
		|						ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставНМА)
		|				КОНЕЦ
		|		КОГДА ТаблицаВидыЗапасов.СтатьяРасходов ССЫЛКА ПланВидовХарактеристик.СтатьиРасходов
		|				И ТаблицаВидыЗапасов.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаПрочиеЦели)
		|		ИНАЧЕ
		|			&ХозяйственнаяОперация
		|	КОНЕЦ КАК ХозяйственнаяОперация,
		|
		|	ТаблицаВидыЗапасов.НалогообложениеНДС КАК НалогообложениеНДС,
		|
		|	ТаблицаВидыЗапасов.СтатьяРасходов КАК СтатьяРасходов,
		|	ТаблицаВидыЗапасов.АналитикаРасходов КАК АналитикаРасходов,
		|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ИЗ
		|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередачеПеремаркировкаТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасовПеремаркировкаТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)             КАК ВидДвижения,
	|	&Период                                            КАК Период,
	|	&Склад                                             КАК Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация КАК ОрганизацияВладелец,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов                      КАК ВидЗапасовПродавца,
	|	ТаблицаВидыЗапасов.НомерГТД                        КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Номенклатура                    КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика                  КАК Характеристика,
	|	ТаблицаВидыЗапасов.Количество                      КАК Количество,
	|	&ХозяйственнаяОперация                             КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.НалогообложениеНДС              КАК НалогообложениеНДС
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДвиженияНоменклатураДоходыРасходыПеремаркировкаТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураДоходыРасходы";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасовПеремаркировкаТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиНоменклатуры,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоНазначениям
	|		ТОГДА Строки.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ Строки.АналитикаУчетаНоменклатурыБезНазначения
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	&Склад КАК Склад,
	|
	|	ВЫБОР
	|		КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			Строки.КорВидЗапасов
	|		ИНАЧЕ Строки.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			Строки.КорВидЗапасов.ТипЗапасов
	|		ИНАЧЕ Строки.ТипЗапасов
	|	КОНЕЦ КАК ТипЗапасов,
	|
	|	&НаправлениеДеятельности КАК НаправлениеДеятельностиСтатьи,
	|	&СтатьяРасходов КАК СтатьяДоходовРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|
	|	Строки.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА
	|				ВЫБОР КОГДА Строки.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|					Строки.КорВидЗапасов
	|				ИНАЧЕ
	|					Строки.ВидЗапасов
	|				КОНЕЦ
	|		ИНАЧЕ Строки.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтВидыЗапасов КАК Строки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РеестрДокументов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&ИдентификаторМетаданных КАК ТипСсылки,
	|	&ХозяОперацияДляРеестра КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК Партнер,
	|	&Склад КАК МестоХранения,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	&Подразделение КАК Подразделение,
	|	&Период КАК ДатаДокументаИБ,
	|	&Ссылка КАК Ссылка,
	|	&Номер КАК НомерДокументаИБ,
	|	НЕОПРЕДЕЛЕНО КАК Статус,
	|	&Ответственный КАК Ответственный,
	|	НЕОПРЕДЕЛЕНО КАК Автор,
	|	ЛОЖЬ КАК ДополнительнаяЗапись,
	|	НЕОПРЕДЕЛЕНО КАК Дополнительно,
	|	&Комментарий КАК Комментарий,
	|	&Проведен КАК Проведен,
	|	&ПометкаУдаления КАК ПометкаУдаления,
	|	&Период КАК ДатаПервичногоДокумента,
	|	&НомерНаПечать КАК НомерПервичногоДокумента,
	|	0 КАК Сумма,
	|	НЕОПРЕДЕЛЕНО КАК Валюта,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК НаправлениеДеятельности,
	|	ЛОЖЬ КАК СторноИсправление,
	|	НЕОПРЕДЕЛЕНО КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК ИсправляемыйДокумент,
	|	&Период КАК ДатаОтраженияВУчете,
	|	НЕОПРЕДЕЛЕНО КАК Приоритет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегиструПеремаркировкаТоваров(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ПеремаркировкаТоваровГИСМ";
	
	ЗначенияПараметров = Новый Структура();
		
	Если ИмяРегистра = "ДвиженияСерийТоваров" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДвиженияСерийТоваровПеремаркировкаТоваров(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаСерии";
		
	ИначеЕсли ИмяРегистра = "РеестрДокументов" Тогда
		
		ЗначенияПараметров.Вставить("ИдентификаторМетаданных", ОбщегоНазначения.ИдентификаторОбъектаМетаданных("Документ.ПеремаркировкаТоваровГИСМ"));
		ЗначенияПараметров.Вставить("ХозяОперацияДляРеестра", Перечисления.ХозяйственныеОперации.ПеремаркировкаТоваровГИСМ);
		
		ТекстЗапроса = ТекстЗапросаТаблицаРеестрДокументов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "";
		
	Иначе
		ТекстИсключения = НСтр("ru = 'В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ИмяРегистра = "РеестрДокументов" Тогда
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросПроведенияПоНезависимомуРегистру(
			ТекстЗапроса, ПолноеИмяДокумента, СинонимТаблицыДокумента, Ложь);
		
	Иначе
		
		ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(ТекстЗапроса,
																								ПолноеИмяДокумента,
																								СинонимТаблицыДокумента);
		
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = ЗначенияПараметров;
	Результат.ТекстЗапроса = ТекстЗапроса;
	
	Возврат Результат;
	
КонецФункции

Процедура ОтразитьРаспределениеЗапасовДвиженияПеремаркировкаТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ТекстЗапросаТабЧасть =
		"ВЫБРАТЬ
		|	ТабЧасть.Ссылка               КАК Ссылка,
		|	ТабЧасть.Ссылка.Дата          КАК Период,
		|	ТабЧасть.НоменклатураКиЗ      КАК Номенклатура,
		|	ТабЧасть.ХарактеристикаКиЗ    КАК Характеристика,
		|	ТабЧасть.Ссылка.Склад         КАК Склад,
		|	ТабЧасть.Ссылка.НазначениеКиЗ КАК Назначение,
		|	ТабЧасть.Количество           КАК Количество,
		|	НЕОПРЕДЕЛЕНО                  КАК ЗапланированныйРасходРаспределенногоЗапаса,
		|	ИСТИНА                        КАК КонтрольСвободногоОстатка
		|ИЗ
		|	Документ.ПеремаркировкаТоваровГИСМ.Товары КАК ТабЧасть";
	
	РаспределениеЗапасовДвижения.РасходЗапаса(Запрос, ТекстыЗапроса, Регистры, ТекстЗапросаТабЧасть);
	
КонецПроцедуры

#КонецОбласти

#Область ПроведениеОбщиеМетоды

#Область ПартионныйУчет

Функция ОписаниеРегистровУчетаЗатратИСебестоимости(Документ) Экспорт
	
	ОписаниеРегистров = Новый Массив;
	ОписаниеРегистров.Добавить(Метаданные.РегистрыНакопления.СебестоимостьТоваров);
	
	Возврат ОписаниеРегистров;
	
КонецФункции

Функция УстановитьДополнительныеПараметрыОперацийУчетаЗатратИСебестоимости(Документ, Запрос = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Массив;
	
	Если Запрос <> Неопределено Тогда
		// Нет дополнительных параметров.
	КонецЕсли;
	
	Возврат ДополнительныеПараметры;
	
КонецФункции

Функция СформироватьДополнительныеТаблицыОперацийУчетаЗатратИСебестоимости(Документ, Запрос = Неопределено, ТекстыЗапроса = Неопределено) Экспорт
	
	МетаДокумент = Метаданные.НайтиПоТипу(ТипЗнч(Документ));
	
	ДополнительныеТаблицы = Новый Массив;
	ДополнительныеТаблицы.Добавить("ВтВидыЗапасов");
	
	Если Запрос <> Неопределено Тогда
	
		Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса(ДополнительныеТаблицы[0], ТекстыЗапроса) Тогда
			
			Если МетаДокумент = Метаданные.Документы.МаркировкаТоваровГИСМ Тогда
				ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
			ИначеЕсли МетаДокумент = Метаданные.Документы.ПеремаркировкаТоваровГИСМ Тогда
				ТекстЗапросаВтВидыЗапасовПеремаркировкаТоваров(Запрос, ТекстыЗапроса);
			Иначе
				ВызватьИсключение НСтр("ru='Некорректный тип документа ГИСМ'");
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДополнительныеТаблицы;
	
КонецФункции

Функция ОписаниеОперацийУчетаСебестоимости(Документ) Экспорт
	
	МетаДокумент = Метаданные.НайтиПоТипу(ТипЗнч(Документ));
	
	ОписаниеОпераций = Новый Массив;
	
	#Область СписаниеНаРасходыАктивы_Товар
	
	Если МетаДокумент = Метаданные.Документы.МаркировкаТоваровГИСМ Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		// Описание документа
		|	ТаблицаДокумента.Дата 	КАК Период,
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	НЕОПРЕДЕЛЕНО			КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО			КАК ПериодДокументаИсточника,
		|	НЕОПРЕДЕЛЕНО 			КАК КорректируемыйДокумент,
		|
		// Поля учета номенклатуры
		|	ТаблицаДокумента.Организация 					КАК Организация,
		|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаВидыЗапасов.ВидЗапасов 					КАК ВидЗапасов,
		|	ТаблицаДокумента.МаркировкаДляДеятельности		КАК ВидДеятельностиНДС,
		|	ТаблицаДокумента.МаркировкаДляДеятельности		КАК ВидДеятельностиНДСДокумента,
		|
		// Корреспондирующие поля
		|	НЕОПРЕДЕЛЕНО 												КАК КорОрганизация,
		|	НЕОПРЕДЕЛЕНО 								    			КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО				  				    			КАК КорВидЗапасов,
		|	ТаблицаДокумента.СтатьяРасходов 			    			КАК СтатьяРасходовАктивов,
		|	ТаблицаДокумента.АналитикаРасходов			    			КАК АналитикаРасходовАктивов,
		|	НЕОПРЕДЕЛЕНО			    								КАК КорНаправлениеДеятельности,
		|
		// Поля аналитики финансового учета
		|	НЕОПРЕДЕЛЕНО						КАК Сделка,
		|	ТаблицаДокумента.Подразделение		КАК Подразделение,
		|	ТаблицаДокумента.Ответственный		КАК Менеджер,
		|	НЕОПРЕДЕЛЕНО 						КАК ГруппаПродукции,
		|
		// Количественные и суммовые показатели
		|	ТаблицаВидыЗапасов.Количество 		КАК Количество,
		|
		// Прочие поля
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)		КАК ХозяйственнаяОперация,
		|	ТаблицаВидыЗапасов.ИдентификаторСтроки
		|																					КАК ИдентификаторСтроки,
		|	ТаблицаВидыЗапасов.ИдентификаторФинЗаписи					 					КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеТоваровПоТребованию) КАК НастройкаХозяйственнойОперации
		|
		|ИЗ
		|	Документ.МаркировкаТоваровГИСМ КАК ТаблицаДокумента
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыЗапасов КАК ТаблицаВидыЗапасов
		|		ПО ИСТИНА
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В (&Ссылка)
		|	И &СписаниеКиЗ";
		
	ИначеЕсли МетаДокумент = Метаданные.Документы.ПеремаркировкаТоваровГИСМ Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		// Описание документа
		|	ТаблицаДокумента.Дата 	КАК Период,
		|	ТаблицаДокумента.Ссылка КАК Ссылка,
		|	НЕОПРЕДЕЛЕНО			КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО			КАК ПериодДокументаИсточника,
		|	НЕОПРЕДЕЛЕНО 			КАК КорректируемыйДокумент,
		|
		// Поля учета номенклатуры
		|	ТаблицаДокумента.Организация 					КАК Организация,
		|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаВидыЗапасов.ВидЗапасов 					КАК ВидЗапасов,
		|	ТаблицаДокумента.МаркировкаДляДеятельности		КАК ВидДеятельностиНДС,
		|	ТаблицаДокумента.МаркировкаДляДеятельности		КАК ВидДеятельностиНДСДокумента,
		|
		// Корреспондирующие поля
		|	НЕОПРЕДЕЛЕНО 												КАК КорОрганизация,
		|	НЕОПРЕДЕЛЕНО 								    			КАК КорАналитикаУчетаНоменклатуры,
		|	ТаблицаВидыЗапасов.КорВидЗапасов				  			КАК КорВидЗапасов,
		|	ТаблицаДокумента.СтатьяРасходов 			    			КАК СтатьяРасходовАктивов,
		|	ТаблицаДокумента.АналитикаРасходов			    			КАК АналитикаРасходовАктивов,
		|	НЕОПРЕДЕЛЕНО			    								КАК КорНаправлениеДеятельности,
		|
		// Поля аналитики финансового учета
		|	НЕОПРЕДЕЛЕНО						КАК Сделка,
		|	ТаблицаДокумента.Подразделение		КАК Подразделение,
		|	ТаблицаДокумента.Ответственный		КАК Менеджер,
		|	НЕОПРЕДЕЛЕНО 						КАК ГруппаПродукции,
		|
		// Количественные и суммовые показатели
		|	ТаблицаВидыЗапасов.Количество 		КАК Количество,
		|
		// Прочие поля
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)		КАК ХозяйственнаяОперация,
		|	ТаблицаВидыЗапасов.ИдентификаторСтроки
		|																					КАК ИдентификаторСтроки,
		|	ТаблицаВидыЗапасов.ИдентификаторФинЗаписи					 					КАК ИдентификаторФинЗаписи,
		|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.СписаниеТоваровПоТребованию) КАК НастройкаХозяйственнойОперации
		|
		|ИЗ
		|	Документ.ПеремаркировкаТоваровГИСМ КАК ТаблицаДокумента
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтВидыЗапасов КАК ТаблицаВидыЗапасов
		|		ПО ИСТИНА
		|ГДЕ
		|	ТаблицаДокумента.Ссылка В (&Ссылка)";
		
	Иначе
		ВызватьИсключение НСтр("ru='Некорректный тип документа ГИСМ'");
	КонецЕсли;
	
	РасчетСебестоимостиПроведениеДокументов.ДобавитьОписаниеОперацииДляОтраженияВУчетеСебестоимости(
		ОписаниеОпераций,
		Перечисления.ОперацииУчетаСебестоимости.СписаниеНаРасходыАктивы,
		ТекстЗапроса);
	
	#КонецОбласти

	Возврат ОписаниеОпераций;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти


#Область ПроцедурыИФункцииФормыДокумента

Функция ПолучитьКизы(СписокНоменклатураКиЗ, GTIN)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК НоменклатураКИЗ,
	|	ХарактеристикиНоменклатуры.Ссылка КАК ХарактеристикаКиЗ,
	|	ЕСТЬNULL(ХарактеристикиНоменклатуры.КиЗГИСМGTIN, Номенклатура.КиЗГИСМGTIN) КАК GTIN,
	|	ВЫБОР
	|		КОГДА Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры)
	|			ИЛИ Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры)
	|			ИЛИ Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ХарактеристикиКиЗИспользуются
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО (Номенклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|				ИЛИ Номенклатура.ВидНоменклатуры = ХарактеристикиНоменклатуры.Владелец)
	|ГДЕ
	|	Номенклатура.Ссылка В (&СписокНоменклатураКиЗ)
	|	И ЕСТЬNULL(ХарактеристикиНоменклатуры.КиЗГИСМGTIN, Номенклатура.КиЗГИСМGTIN) В(&GTIN)";
	
	Запрос.УстановитьПараметр("GTIN", GTIN);
	Запрос.УстановитьПараметр("СписокНоменклатураКиЗ", СписокНоменклатураКиЗ);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат
	
КонецФункции

#КонецОбласти 

#Область Прочее

// Функция подбирает склад для заполнения шапки документа Маркировка.
//
// Параметры:
//	МассивСкладов - Массив - массив складов.
//
// Возвращаемое значение:
//	СправочникСсылка.
//
Функция СкладШапкиПоМассиву(МассивСкладов)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Склады.Родитель КАК Группа,
	|	ВЫБОР
	|		КОГДА ИспользоватьСкладыВТабличнойЧастиДокументовЗакупки.Значение
	|				И Склады.Родитель.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказахИНакладных)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ГруппаДоступна,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Склады.Ссылка) КАК КоличествоСкладов,
	|	МАКСИМУМ(Склады.Ссылка) КАК Склад
	|ИЗ
	|	Справочник.Склады КАК Склады,
	|	Константа.ИспользоватьСкладыВТабличнойЧастиДокументовЗакупки КАК ИспользоватьСкладыВТабличнойЧастиДокументовЗакупки
	|ГДЕ
	|	Склады.Ссылка В(&МассивСкладов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Склады.Родитель,
	|	ВЫБОР
	|		КОГДА ИспользоватьСкладыВТабличнойЧастиДокументовЗакупки.Значение
	|				И Склады.Родитель.ВыборГруппы = ЗНАЧЕНИЕ(Перечисление.ВыборГруппыСкладов.РазрешитьВЗаказахИНакладных)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ");
	
	Запрос.УстановитьПараметр("МассивСкладов", МассивСкладов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		
		Выборка.Следующий();
		
		Если Выборка.КоличествоСкладов = 1 Тогда
			Возврат Выборка.Склад;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПараметрыВыбораСтатейИАналитикМаркировкаПеремаркировкаТоваровГИСМ()
	
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным         = "Объект";
	ПараметрыВыбора.Статья              = "СтатьяРасходов";
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Истина;
	ПараметрыВыбора.АналитикаРасходов   = "АналитикаРасходов";
	
	МассивВариантов = Новый Массив;
	МассивВариантов.Добавить(Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	МассивВариантов.Добавить(Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров);
	МассивВариантов.Добавить(Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов);
	МассивВариантов.Добавить(Перечисления.ВариантыРаспределенияРасходов.НеРаспределять);
	
	ПараметрыВыбора.ОтборСтатейРасходов.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию;
	ПараметрыВыбора.ОтборСтатейРасходов.ВариантРаспределенияРасходов = Новый ФиксированныйМассив(МассивВариантов);
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяРасходов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаРасходов.Добавить("АналитикаРасходов");
	
	Возврат ПараметрыВыбора;
	
КонецФункции

#КонецОбласти

#КонецОбласти
