
#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - См. ПроведениеДокументов.СвойстваДокумента
//
// Возвращаемое значение:
//  Структура - См. ПроведениеДокументов.ПараметрыУчетногоМеханизма
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ДенежныеСредстваКВыплате);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ЛимитыРасходаДенежныхСредств);
		
		Если ТипЗнч(Документ) = Тип("ДокументОбъект.ЗаявкаНаРасходованиеДенежныхСредств")
			Или ТипЗнч(Документ) = Тип("ДокументОбъект.ЗаявкаНаКомандировку") Тогда
			Параметры.ЕстьПроизводныеДвижения = Истина;
		КонецЕсли;
		
		КонтролироватьЛимиты =
			ПолучитьФункциональнуюОпцию("КонтролироватьПревышениеЛимитовРасходаДенежныхСредств")
			И ((ТипЗнч(Документ) = Тип("ДокументОбъект.ЗаявкаНаРасходованиеДенежныхСредств")
				И Документ.Статус <> Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.Отклонена
				И Не Документ.СверхЛимита)
				Или
				(ТипЗнч(Документ) = Тип("ДокументОбъект.ЗаявкаНаКомандировку")
				И (Документ.Статус <> Перечисления.СтатусыЗаявокСотрудников.Отклонена
					И Документ.Статус <> Перечисления.СтатусыЗаявокСотрудников.Отозвана)
				И Документ.ВыдачаПодОтчет.Количество()
				И Не Документ.СверхЛимита));
		
		Если КонтролироватьЛимиты Тогда
			Параметры.КонтрольныеРегистрыИзменений.Добавить(Метаданные.РегистрыНакопления.ЛимитыРасходаДенежныхСредств);
		КонецЕсли;
	КонецЕсли;
	
	// Контроль
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		
		Если Не Свойства.ЭтоНовый
			И (ТипЗнч(Документ) = Тип("ДокументОбъект.ЗаявкаНаРасходованиеДенежныхСредств")
				Или ТипЗнч(Документ) = Тип("ДокументОбъект.ПоступлениеБезналичныхДенежныхСредств")
					И ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств"))
		Или Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение
			И ((ТипЗнч(Документ) = Тип("ДокументОбъект.ОперацияПоПлатежнойКарте")
				Или ТипЗнч(Документ) = Тип("ДокументОбъект.РаспоряжениеНаПеремещениеДенежныхСредств")
				//++ Локализация
				Или ТипЗнч(Документ) = Тип("ДокументОбъект.УведомлениеОЗачисленииВалюты")
				//-- Локализация
				Или ТипЗнч(Документ) = Тип("ДокументОбъект.РасходныйКассовыйОрдер")
				Или ТипЗнч(Документ) = Тип("ДокументОбъект.СписаниеБезналичныхДенежныхСредств"))
				И (ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств")
					Или ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаКомандировку"))
			)
		Или ИсправлениеДокументов.ЭтоИсправительныйДокумент(Документ)
		Тогда
			Параметры.КонтрольныеРегистрыИзменений.Добавить(Метаданные.РегистрыНакопления.ДенежныеСредстваКВыплате);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Параметры;
	
КонецФункции

// Возвращает тексты запросов для сторнирования движений при исправлении документов
// 
// Параметры:
// 	МетаданныеДокумента - ОбъектМетаданныхДокумент - Метаданные документа, который проводится.
// 
// Возвращаемое значение:
// 	Соответствие - Соответствие полного имени регистра тексту запроса сторнирования
//
Функция ТекстыЗапросовСторнирования(МетаданныеДокумента) Экспорт
	
	ДвиженияДокумента = МетаданныеДокумента.Движения;

	ТекстыЗапросов = Новый Соответствие();
	
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ДенежныеСредстваКВыплате;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра, МетаданныеДокумента));
	КонецЕсли;
		
	МетаданныеРегистра = Метаданные.РегистрыНакопления.ЛимитыРасходаДенежныхСредств;
	Если ДвиженияДокумента.Содержит(МетаданныеРегистра) Тогда
		ТекстыЗапросов.Вставить(МетаданныеРегистра.ПолноеИмя(),
			ПроведениеДокументов.ТекстСторнирующегоЗапроса(
				МетаданныеРегистра, МетаданныеДокумента));
	КонецЕсли;
			
	Возврат ТекстыЗапросов;
	
КонецФункции

// Процедура формирования движений по подчиненным регистрам планирования и контроля денежных средств.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ДенежныеСредстваКВыплате");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ЛимитыРасходаДенежныхСредств");
	
КонецПроцедуры

// Дополняет текст запроса механизма проверки даты запрета по таблице изменений.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 
// Возвращаемое значение:
//	Соответствие - соответствие имен таблиц изменения регистров и текстов запросов.
//	
Функция ТекстыЗапросовКонтрольДатыЗапретаПоТаблицеИзменений(Запрос) Экспорт

	СоответствиеТекстовЗапросов = Новый Соответствие();
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

// Формирует тексты запросов для контроля изменений записанных движений регистров.
//
// Параметры:
//  Запрос - Запрос - запрос, хранящий параметры используемые в списке запросов
//  ТекстыЗапроса - СписокЗначений - список текстов запросов и их имен.
//  Документ - ДокументОбъект - записываемый документ.
//
Процедура ИнициализироватьДанныеКонтроляИзменений(Запрос, ТекстыЗапроса, Документ) Экспорт
	
	#Область ДенежныеСредстваКВыплате
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияДенежныеСредстваКВыплатеИзменение") Тогда
		
		ПредварительныйЗапрос = Новый Запрос;
		ПредварительныйЗапрос.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
		ПредварительныйЗапрос.Текст =
		"ВЫБРАТЬ
		|	ДенежныеСредстваКВыплатеОбороты.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
		|	ДенежныеСредстваКВыплатеОбороты.БанковскийСчетКасса КАК БанковскийСчетКасса,
		|	ДенежныеСредстваКВыплатеОбороты.Получатель КАК Получатель,
		|	ДенежныеСредстваКВыплатеОбороты.Организация КАК Организация,
		|	ДенежныеСредстваКВыплатеОбороты.СуммаПриход КАК СуммаЗапланировано
		|ПОМЕСТИТЬ Запланировано
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваКВыплате.Обороты(
		|			,
		|			,
		|			,
		|			(ЗаявкаНаРасходованиеДенежныхСредств, БанковскийСчетКасса, Получатель, Организация) В
		|				(ВЫБРАТЬ
		|					Таблица.ЗаявкаНаРасходованиеДенежныхСредств,
		|					Таблица.БанковскийСчетКасса,
		|					Таблица.Получатель,
		|					Таблица.Организация
		|				ИЗ
		|					ДвиженияДенежныеСредстваКВыплатеИзменение КАК Таблица)) КАК ДенежныеСредстваКВыплатеОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОстатков.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
		|	ТаблицаОстатков.БанковскийСчетКасса КАК БанковскийСчетКасса,
		|	ТаблицаОстатков.Получатель КАК Получатель,
		|	ТаблицаОстатков.Организация КАК Организация,
		|	ТаблицаОстатков.СуммаОстаток КАК Сумма
		|ПОМЕСТИТЬ ОтрицательныеОстатки
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваКВыплате.Остатки(
		|			,
		|			(ЗаявкаНаРасходованиеДенежныхСредств, БанковскийСчетКасса, Получатель, Организация) В
		|				(ВЫБРАТЬ
		|					Таблица.ЗаявкаНаРасходованиеДенежныхСредств,
		|					Таблица.БанковскийСчетКасса,
		|					Таблица.Получатель,
		|					Таблица.Организация
		|				ИЗ
		|					ДвиженияДенежныеСредстваКВыплатеИзменение КАК Таблица)) КАК ТаблицаОстатков
		|ГДЕ
		|	ТаблицаОстатков.СуммаОстаток < 0
		|";
		
		ПредварительныйЗапрос.Выполнить();
		Запрос.МенеджерВременныхТаблиц = ПредварительныйЗапрос.МенеджерВременныхТаблиц;
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ОтрицательныеОстатки.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств,
		|	ОтрицательныеОстатки.БанковскийСчетКасса КАК БанковскийСчетКасса,
		|	ОтрицательныеОстатки.Получатель КАК Получатель,
		|	ОтрицательныеОстатки.Организация КАК Организация,
		|	ОтрицательныеОстатки.Сумма КАК Сумма,
		|	Заявка.Организация КАК ОрганизацияЗаявки,
		|	ВЫБОР
		|		КОГДА Заявка.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику), 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику))
		|			ТОГДА Заявка.ПодотчетноеЛицо
		|		КОГДА Заявка.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию), 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию), 
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
		|			ТОГДА Заявка.ОрганизацияПолучатель
		|		ИНАЧЕ Заявка.Контрагент
		|	КОНЕЦ КАК ПолучательЗаявки,
		|	Заявка.Валюта КАК Валюта,
		|	Заявка.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	Заявка.СписокФизЛиц КАК СписокФизЛиц,
		|	Заявка.СписокКонтрагентов КАК СписокКонтрагентов,
		|	ВЫБОР
		|		КОГДА Запланировано.СуммаЗапланировано ЕСТЬ NULL И ЕСТЬNULL(Заявка.ПометкаУдаления, ЛОЖЬ) = ЛОЖЬ
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьРасходженияРеквизитов
		|ИЗ
		|	ОтрицательныеОстатки КАК ОтрицательныеОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК Заявка
		|		ПО ОтрицательныеОстатки.ЗаявкаНаРасходованиеДенежныхСредств = Заявка.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Запланировано КАК Запланировано
		|		ПО ОтрицательныеОстатки.ЗаявкаНаРасходованиеДенежныхСредств = Запланировано.ЗаявкаНаРасходованиеДенежныхСредств
		|			И ОтрицательныеОстатки.БанковскийСчетКасса = Запланировано.БанковскийСчетКасса
		|			И ОтрицательныеОстатки.Получатель = Запланировано.Получатель
		|			И ОтрицательныеОстатки.Организация = Запланировано.Организация
		|ГДЕ
		|	ОтрицательныеОстатки.ЗаявкаНаРасходованиеДенежныхСредств ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОтрицательныеОстатки.ЗаявкаНаРасходованиеДенежныхСредств,
		|	ОтрицательныеОстатки.БанковскийСчетКасса,
		|	ОтрицательныеОстатки.Получатель,
		|	ОтрицательныеОстатки.Организация,
		|	ОтрицательныеОстатки.Сумма,
		|	Заявка.Организация,
		|	Заявка.Сотрудник,
		|	Заявка.Валюта,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ВЫБОР
		|		КОГДА Запланировано.СуммаЗапланировано ЕСТЬ NULL И ЕСТЬNULL(Заявка.ПометкаУдаления, ЛОЖЬ) = ЛОЖЬ
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|ИЗ
		|	ОтрицательныеОстатки КАК ОтрицательныеОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаКомандировку КАК Заявка
		|		ПО ОтрицательныеОстатки.ЗаявкаНаРасходованиеДенежныхСредств = Заявка.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Запланировано КАК Запланировано
		|		ПО ОтрицательныеОстатки.ЗаявкаНаРасходованиеДенежныхСредств = Запланировано.ЗаявкаНаРасходованиеДенежныхСредств
		|			И ОтрицательныеОстатки.БанковскийСчетКасса = Запланировано.БанковскийСчетКасса
		|			И ОтрицательныеОстатки.Получатель = Запланировано.Получатель
		|			И ОтрицательныеОстатки.Организация = Запланировано.Организация
		|ГДЕ
		|	ОтрицательныеОстатки.ЗаявкаНаРасходованиеДенежныхСредств ССЫЛКА Документ.ЗаявкаНаКомандировку
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОтрицательныеОстатки.ЗаявкаНаРасходованиеДенежныхСредств,
		|	ОтрицательныеОстатки.БанковскийСчетКасса,
		|	ОтрицательныеОстатки.Получатель,
		|	ОтрицательныеОстатки.Организация,
		|	ОтрицательныеОстатки.Сумма,
		|	Заявка.Организация,
		|	Заявка.Организация,
		|	Заявка.Валюта,
		|	Заявка.ХозяйственнаяОперация,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ВЫБОР
		|		КОГДА Запланировано.СуммаЗапланировано ЕСТЬ NULL И ЕСТЬNULL(Заявка.ПометкаУдаления, ЛОЖЬ) = ЛОЖЬ
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|ИЗ
		|	ОтрицательныеОстатки КАК ОтрицательныеОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РаспоряжениеНаПеремещениеДенежныхСредств КАК Заявка
		|		ПО ОтрицательныеОстатки.ЗаявкаНаРасходованиеДенежныхСредств = Заявка.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Запланировано КАК Запланировано
		|		ПО ОтрицательныеОстатки.ЗаявкаНаРасходованиеДенежныхСредств = Запланировано.ЗаявкаНаРасходованиеДенежныхСредств
		|			И ОтрицательныеОстатки.БанковскийСчетКасса = Запланировано.БанковскийСчетКасса
		|			И ОтрицательныеОстатки.Получатель = Запланировано.Получатель
		|			И ОтрицательныеОстатки.Организация = Запланировано.Организация
		|ГДЕ
		|	ОтрицательныеОстатки.ЗаявкаНаРасходованиеДенежныхСредств ССЫЛКА Документ.РаспоряжениеНаПеремещениеДенежныхСредств
		|";
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, "ОшибкиДенежныеСредстваКВыплате");
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ЛимитыРасходаДенежныхСредств
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияЛимитыРасходаДенежныхСредствИзменение") Тогда
		
		ТекстыЗапроса.Добавить(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ЛимитыРасхода.Ссылка.МоментВремени КАК МоментВремени,
			|	ЛимитыРасхода.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
			|	ЛимитыРасхода.ЕстьЛимит КАК ЕстьЛимит
			|ПОМЕСТИТЬ ВременнаяТаблицаСтатьиДДС
			|ИЗ
			|	Документ.ЛимитыРасходаДенежныхСредств.Лимиты КАК ЛимитыРасхода
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДвиженияЛимитыРасходаДенежныхСредствИзменение КАК Таблица
			|		ПО (ЛимитыРасхода.Ссылка.Организация = Таблица.Организация
			|				ИЛИ НЕ &ИспользоватьЛимитыРасходаДенежныхСредствПоОрганизациям)
			|			И (ЛимитыРасхода.Ссылка.Подразделение = Таблица.Подразделение
			|				ИЛИ НЕ &ИспользоватьЛимитыРасходаДенежныхСредствПоПодразделениям)
			|			И ЛимитыРасхода.СтатьяДвиженияДенежныхСредств = Таблица.СтатьяДвиженияДенежныхСредств
			|ГДЕ
			|	&КонтролироватьПревышениеЛимитовРасходаДенежныхСредств
			|	И НЕ Таблица.СтатьяДвиженияДенежныхСредств ЕСТЬ NULL
			|	И ЛимитыРасхода.Ссылка.Период МЕЖДУ НАЧАЛОПЕРИОДА(&ПериодЛимитаРасходаДС, МЕСЯЦ) И КОНЕЦПЕРИОДА(&ПериодЛимитаРасходаДС, МЕСЯЦ)
			|	И ЛимитыРасхода.Ссылка.Проведен");
		
		ТекстыЗапроса.Добавить(
			"ВЫБРАТЬ
			|	ВременнаяТаблицаСтатьиДДС.СтатьяДвиженияДенежныхСредств
			|ПОМЕСТИТЬ ВременнаяТаблицаСтатьиДДСЛимитНеОграничен
			|ИЗ
			|	ВременнаяТаблицаСтатьиДДС КАК ВременнаяТаблицаСтатьиДДС
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтатьиДДС КАК Отбор
			|		ПО ВременнаяТаблицаСтатьиДДС.СтатьяДвиженияДенежныхСредств = Отбор.СтатьяДвиженияДенежныхСредств
			|			И ВременнаяТаблицаСтатьиДДС.МоментВремени < Отбор.МоментВремени
			|ГДЕ
			|	Отбор.МоментВремени ЕСТЬ NULL
			|	И НЕ ВременнаяТаблицаСтатьиДДС.ЕстьЛимит");
		
		ТекстыЗапроса.Добавить(
			"ВЫБРАТЬ
			|	Таблица.СтатьяДвиженияДенежныхСредств,
			|	Таблица.Организация,
			|	Таблица.Подразделение
			|ПОМЕСТИТЬ ИзмененияЛимитов
			|ИЗ
			|	ДвиженияЛимитыРасходаДенежныхСредствИзменение КАК Таблица
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаСтатьиДДСЛимитНеОграничен КАК СтатьиДДСЛимитНеОграничен
			|		ПО Таблица.СтатьяДвиженияДенежныхСредств = СтатьиДДСЛимитНеОграничен.СтатьяДвиженияДенежныхСредств
			|ГДЕ
			|	СтатьиДДСЛимитНеОграничен.СтатьяДвиженияДенежныхСредств ЕСТЬ NULL
			|	И Таблица.СтатьяДвиженияДенежныхСредств <> ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)");
		
		ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТаблицаОборотов.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
			|	ТаблицаОборотов.Организация КАК Организация,
			|	ТаблицаОборотов.Подразделение КАК Подразделение,
			|	ТаблицаОборотов.РасходВПределахЛимитаОборот - ТаблицаОборотов.ЛимитОборот КАК ПревышениеЛимита
			|ИЗ
			|	РегистрНакопления.ЛимитыРасходаДенежныхСредств.Обороты(
			|			НАЧАЛОПЕРИОДА(&ПериодЛимитаРасходаДС, МЕСЯЦ),
			|			КОНЕЦПЕРИОДА(&ПериодЛимитаРасходаДС, МЕСЯЦ),
			|			,
			|			(СтатьяДвиженияДенежныхСредств, Организация, Подразделение) В
			|				(ВЫБРАТЬ
			|					ИзмененияЛимитов.СтатьяДвиженияДенежныхСредств,
			|					ИзмененияЛимитов.Организация,
			|					ИзмененияЛимитов.Подразделение
			|				ИЗ
			|					ИзмененияЛимитов)) КАК ТаблицаОборотов
			|ГДЕ
			|	&КонтролироватьПревышениеЛимитовРасходаДенежныхСредств
			|	И ТаблицаОборотов.РасходВПределахЛимитаОборот - ТаблицаОборотов.ЛимитОборот > 0";
		
		Если ТипЗнч(Документ) = Тип("ДокументОбъект.ЗаявкаНаРасходованиеДенежныхСредств")
			И ЗначениеЗаполнено(Документ.ДатаПлатежа) Тогда
			Период = Документ.ДатаПлатежа;
		ИначеЕсли ЗначениеЗаполнено(Документ.ЖелательнаяДатаПлатежа) Тогда
			Период = Документ.ЖелательнаяДатаПлатежа;
		Иначе
			Период = Документ.Дата;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ПериодЛимитаРасходаДС", Период);
		Запрос.УстановитьПараметр("ИспользоватьЛимитыРасходаДенежныхСредствПоОрганизациям",
			ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредствПоОрганизациям"));
		Запрос.УстановитьПараметр("ИспользоватьЛимитыРасходаДенежныхСредствПоПодразделениям",
			ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредствПоПодразделениям"));
		Запрос.УстановитьПараметр("КонтролироватьПревышениеЛимитовРасходаДенежныхСредств",
			ПолучитьФункциональнуюОпцию("КонтролироватьПревышениеЛимитовРасходаДенежныхСредств"));
		
		ТекстыЗапроса.Добавить(ТекстЗапроса, "ОшибкиЛимитыРасходаДенежныхСредств");
		
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

// Выводит сообщения пользователю при наличии ошибок контроля изменений записанных движений регистров.
//
// Параметры:
//  РезультатыКонтроля - Структура - таблицы с результатами контроля изменений
//  Документ - ДокументОбъект - записываемый документ
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура СообщитьОРезультатахКонтроляИзменений(РезультатыКонтроля, Документ, Отказ) Экспорт
	
	#Область ДенежныеСредстваКВыплате
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияДенежныеСредстваКВыплатеИзменение") Тогда
		
		ЕстьРасхожденияРеквизитов = Ложь;
		
		Для каждого СтрокаОшибки Из РезультатыКонтроля.ОшибкиДенежныеСредстваКВыплате Цикл
			
			ТекстСообщения = "";
			ЭтоЗаявкаНаРасходованиеДС =
				ТипЗнч(СтрокаОшибки.ЗаявкаНаРасходованиеДенежныхСредств) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств");
			
			Если ЭтоЗаявкаНаРасходованиеДС
				И СтрокаОшибки.ЕстьРасходженияРеквизитов Тогда
				
				ТекстСообщения = СтрШаблон(НСтр("ru = 'По заявке %1 и документу оплаты имеются расхождения в реквизитах.'"),
						СтрокаОшибки.ЗаявкаНаРасходованиеДенежныхСредств);
				ЕстьРасхожденияРеквизитов = Истина;
				
			КонецЕсли;
			
			Если ЭтоЗаявкаНаРасходованиеДС И СтрокаОшибки.Организация <> СтрокаОшибки.ОрганизацияЗаявки Тогда
				
				ТекстСообщения = ТекстСообщения + ?(Не ПустаяСтрока(ТекстСообщения), Символы.ПС, "")
					+ СтрШаблон(НСтр("ru = 'Организация %1 в документе оплаты не соответствует организации %2 в заявке'"),
					СтрокаОшибки.Организация, СтрокаОшибки.ОрганизацияЗаявки);
				ЕстьРасхожденияРеквизитов = Истина;
			КонецЕсли;
			
			Если ЭтоЗаявкаНаРасходованиеДС И СтрокаОшибки.Получатель <> СтрокаОшибки.ПолучательЗаявки
				И СтрокаОшибки.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты
				И НЕ (СтрокаОшибки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику
				И СтрокаОшибки.СписокФизЛиц)
				И НЕ (СтрокаОшибки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
				И СтрокаОшибки.СписокКонтрагентов) Тогда
				
				ТекстСообщения = ТекстСообщения + ?(Не ПустаяСтрока(ТекстСообщения), Символы.ПС, "")
					+ СтрШаблон(НСтр("ru = 'Получатель %1 в документе оплаты не соответствует получателю %2 в заявке'"),
						СтрокаОшибки.Получатель, СтрокаОшибки.ПолучательЗаявки);
				ЕстьРасхожденияРеквизитов = Истина;
			КонецЕсли;
			
			Если Не ЕстьРасхожденияРеквизитов Тогда
				Если ЭтоЗаявкаНаРасходованиеДС Тогда
					
					ТекстСообщения = СтрШаблон(НСтр("ru = 'По заявке %1 оплачено больше, чем утверждено в заявке, на %2 %3'"),
						СтрокаОшибки.ЗаявкаНаРасходованиеДенежныхСредств, -СтрокаОшибки.Сумма, СтрокаОшибки.Валюта);
				Иначе
					
					ТекстСообщения = СтрШаблон(НСтр("ru = 'По документу %1 оплачено больше, чем утверждено в распоряжении, на %2 %3'"),
						СтрокаОшибки.ЗаявкаНаРасходованиеДенежныхСредств, -СтрокаОшибки.Сумма, СтрокаОшибки.Валюта);
				КонецЕсли;
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Документ, ,, Отказ);
			
			Если ЕстьРасхожденияРеквизитов Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ЛимитыРасходаДенежныхСредств
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ДвиженияЛимитыРасходаДенежныхСредствИзменение") Тогда
		
		ШаблонСообщения = НСтр("ru = 'Превышен лимит расхода по статье %1 на сумму %2 %3'");
		ВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();
		
		Для каждого СтрокаОшибки Из РезультатыКонтроля.ОшибкиЛимитыРасходаДенежныхСредств Цикл
			
			ТекстСообщения = СтрШаблон(ШаблонСообщения, СтрокаОшибки.СтатьяДвиженияДенежныхСредств,
				СтрокаОшибки.ПревышениеЛимита, ВалютаУправленческогоУчета);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Документ);
			
		КонецЦикла;
		
		Если ЗначениеЗаполнено(РезультатыКонтроля.ОшибкиЛимитыРасходаДенежныхСредств)
			И Не Документ.СверхЛимита
			И ПолучитьФункциональнуюОпцию("КонтролироватьПревышениеЛимитовРасходаДенежныхСредств") Тогда
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	#КонецОбласти
	
КонецПроцедуры

// Возникает перед выполнением записи регистров документа.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц,
//      используемый для хранения таблиц контроля изменений регистров
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура ПередЗаписьюДвиженийДокумента(Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Возврат; // пустой обработчик
	
КонецПроцедуры

// Возникает после выполнения записи регистров документа.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц,
//      используемый для хранения таблиц контроля изменений регистров
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура ПослеЗаписиДвиженийДокумента(Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти


