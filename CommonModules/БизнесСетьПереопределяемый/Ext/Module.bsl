////////////////////////////////////////////////////////////////////////////////
// Подсистема "Бизнес-сеть".
// ОбщийМодуль.БизнесСетьПереопределяемый.
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Заполнение адресов организации и ее складов.
//
// Параметры:
//  Организация - ОпределяемыйТип.Организация - организация, по которой заполняются адреса.
//  Адреса - ТаблицаЗначения - таблица для заполнения. Содержит колонки:
//   * Представление - Строка - представление адреса.
//   * ЗначенияПолей - Строка - адрес в формате XML. Формат должен соответствовать XDTO-пакету Адрес.
//   * Описание - Строка - комментарий адреса.
//   * Ссылка - Ссылка - объект хранения контактной информации.
//   * Вид - СправочникСсылка.ВидыКонтактнойИнформации - вид контактной информации.
//
Процедура ЗаполнитьАдресаОрганизации(Организация, Адреса) Экспорт
	
	//++ НЕ ГОСИС
	ДатаКИ = ТекущаяДатаСеанса();
	КонтактнаяИнформация = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(Организация, , ДатаКИ);

	Если ЗначениеЗаполнено(КонтактнаяИнформация) Тогда
		Для Каждого СтрокаКИ Из КонтактнаяИнформация Цикл
			
			Если ПустаяСтрока(СтрокаКИ.Представление) Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаАдреса = Адреса.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаАдреса, СтрокаКИ);
			
			СтрокаАдреса.Ссылка = СтрокаКИ.Объект;
			СтрокаАдреса.Описание = СтрШаблон("%1 (%2)", СтрокаКИ.Вид, СтрокаКИ.Объект);
			
		КонецЦикла;
		
		Адреса.Сортировать("Представление");
	КонецЕсли;	
	//-- НЕ ГОСИС
	
КонецПроцедуры	

// Создание контрагента в информационной базе по реквизитам.
//
// Параметры:
//   РеквизитыКонтрагента - Структура - реквизиты необходимые для создания контрагента.
//    * ИНН - Строка - ИНН контрагента.
//    * КПП - Строка - КПП контрагента.
//    * Наименование - Строка - наименование контрагента.
//   Контрагент - СправочникСсылка - ссылка на созданного контрагента.
//   Отказ - Булево - признак ошибки.
//
Процедура СоздатьКонтрагентаПоРеквизитам(Знач РеквизитыКонтрагента, Контрагент, Отказ = Ложь) Экспорт
	
	//++ НЕ ГОСИС
	Контрагент = ОбменСКонтрагентамиУТ.СоздатьКонтрагентаВБД(РеквизитыКонтрагента);
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Возвращает контакты пользователя для регистрации в сервисе.
//
// Параметры:
//   КонтактноеЛицо - СправочникСсылка - пользователь программы, контактное лицо.
//   Результат - Структура - информация о пользователе:
//     * ФИО - Строка - ФИО пользователя.
//     * Телефон - Строка - номер телефона.
//     * ЭлектроннаяПочта - Строка - адрес электронной почты пользователя.
//
Процедура ПолучитьКонтактнуюИнформациюПользователя(Знач КонтактноеЛицо, Результат) Экспорт
	
	//++ НЕ ГОСИС
	Если Не ЗначениеЗаполнено(КонтактноеЛицо) Тогда
		КонтактноеЛицо = Пользователи.ТекущийПользователь();
	КонецЕсли;
	
	Если ТипЗнч(КонтактноеЛицо) = Тип("СправочникСсылка.Пользователи") Тогда
		КонтактноеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Пользователи.ТекущийПользователь(), "ФизическоеЛицо");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КонтактноеЛицо) И ТипЗнч(КонтактноеЛицо) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Результат.ФИО = Строка(КонтактноеЛицо);
		Результат.ЭлектроннаяПочта = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(КонтактноеЛицо, Справочники.ВидыКонтактнойИнформации.EMailФизическиеЛица);
		Результат.Телефон = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъекта(КонтактноеЛицо, Справочники.ВидыКонтактнойИнформации.ТелефонМобильныйФизическиеЛица);
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Проверка соответствия реквизитов в документах. Выполняется перед формированием электронных документов
// и проверяет реквизиты перед отправкой. Должны быть одинаковыми Организация, Контрагент, вид формируемого
// электронного документа, а также дополнительные реквизиты связанные с формированием.
//
// Параметры:
//   ДокументыКонтроля - Массив из ДокументСсылка - проверяемые ссылки объектов.
//   ТекстСообщения    - Строка - текст сообщения в случае ошибки проверки.
//   Отказ             - Булево - результат проверки.
//
Процедура ВыполнитьКонтрольРеквизитовДокументов(Знач ДокументыКонтроля, ТекстСообщения, Отказ) Экспорт
	
	//++ НЕ ГОСИС
	ИмяМетаданных = "";
	Для Каждого Ссылка Из ДокументыКонтроля Цикл
		Если ИмяМетаданных = "" Тогда
			ИмяМетаданных = Ссылка.Метаданные().Имя;
		ИначеЕсли ИмяМетаданных <> Ссылка.Метаданные().Имя Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru = 'Операция невозможна для разных видов документов'");
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	Реквизиты = "Организация, Контрагент";
	Если ИмяМетаданных = "КоммерческоеПредложениеКлиенту" Тогда
		Реквизиты = "Организация, Соглашение.Контрагент";
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ";
	МассивРеквизитов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивСлов(Реквизиты, ",");
	ПоследнийЭлемент = МассивРеквизитов.Получить(МассивРеквизитов.Количество()-1);
	Для Каждого Элемент Из МассивРеквизитов Цикл
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + Символы.Таб + ИмяМетаданных + "." + СокрЛП(Элемент)
			+ ?(Элемент = ПоследнийЭлемент, "", ",");
	КонецЦикла;
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + "ИЗ " + "Документ." + ИмяМетаданных + " КАК "
		+ ИмяМетаданных	+ " ГДЕ " + ИмяМетаданных + ".Ссылка В(&ДокументыКонтроля)";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДокументыКонтроля", ДокументыКонтроля);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 1 Тогда
		Отказ = Истина;
		Шаблон = НСтр("ru = 'Операция невозможна. Отличаются реквизиты документов (%1)'");
		ТекстСообщения = СтрШаблон(Шаблон, Реквизиты);
	КонецЕсли;
	//-- НЕ ГОСИС
	
КонецПроцедуры

// Получение списка контрагентов по сделкам для отправки приглашений.
//
// Параметры:
//  Организация			 - СправочникСсылка - ссылка на организацию, от которой производится приглашение.
//  РежимЗаполнения		 - Строка - режим заполнения контрагентов: "ЗаполнитьПоПоставкам", "ЗаполнитьПоЗакупкам", "ЗаполнитьПоВсемСделкам".
//  НачалоПериода		 - Дата - начало периода заполнения.
//  СписокКонтрагентов	 - ТаблицаЗначений - список контрагентов:
//    * Ссылка - СправочникСсылка - контрагент.
//    * ЭлектроннаяПочта - Строка - адрес электронной почты.
//
Процедура ПолучитьКонтрагентовПоСделкам(Знач Организация, Знач РежимЗаполнения, Знач НачалоПериода, СписокКонтрагентов) Экспорт
	
	//++ НЕ ГОСИС
	ВзаиморасчетыСервер.ПолучитьКонтрагентовПоСделкам(Организация, РежимЗаполнения, НачалоПериода, СписокКонтрагентов)
	//-- НЕ ГОСИС
	
КонецПроцедуры

#Область QRКод

// Формирует представление прикладного документа с QR-кодом, если включена ФО ВыводитьQRКодНаПечатныхФормахДокументов.
// По этим данным можно найти и загрузить в базу 1С документ из сервиса 1С:Бизнес-сеть.
//
// Параметры:
//  СсылкиНаДокументы         - Массив из ДокументСсылка  - ссылки на документы, по которым необходимо сформировать представления файла ЭД.
//  ВидЭД                     - ПеречислениеСсылка.ВидыЭД - ссылка на вид электронного документа.
//  ДанныеQRКодовПоДокументам - СписокЗначений            - объекты печати (значение - ссылка на объект, представление - имя области, в которой был выведен объект).
//  ПечатнаяФорма             - ТабличныйДокумент         - печатная форма, в которой должна быть область "ДанныеQRКода", в которой должны быть параметры:
//                                                          КартинкаQRКода        - Картинка - для заполнения рисунка QR-кода. 
//                                                          ПубличнаяСсылкаQRКода - Строка   - для заполнения публичной ссылки.
//
Процедура СформироватьПредставлениеПрикладногоДокументаСQRКодом(Знач СсылкиНаДокументы, Знач ВидЭД, Знач ДанныеQRКодовПоДокументам, ПечатнаяФорма) Экспорт
	
КонецПроцедуры

// Переопределяет картинку на форме поиска электронного документа с отображением подсказки, где искать QR-код.
//
// Параметры:
//  ЭлементФормыКартинка - ДекорацияФормы - элемент формы картинки подсказки.
//
Процедура УстановитьКартинкуПодсказкиОтображенияQRКодаНаДокументе(ЭлементФормыКартинка) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
