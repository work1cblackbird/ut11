#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает имена блокруемых реквизитов для механизма блокирования реквизитов БСП.
//
// Возвращаемое значение:
//	Массив - имена блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("АктивПассив; АктивПассив");
	Результат.Добавить("ТипЗначения; ТипЗначения");
	Результат.Добавить("Аналитика; Аналитика");
	
	Возврат Результат;
	
КонецФункции

// Функция определяет аналитику активов и пассивов для подстановки в документ по статье активов и пассивов.
//
// Параметры:
//  СтатьяАктивовПассивов - ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов - Ссылка на статью активов и пассивов
//	Объект - ДанныеФормыСтруктура - Текущий объект.
//
// Возвращаемое значение:
//	СправочникСсылка - значение аналитики по умолчанию для активов и пассивов.
//
Функция ПолучитьАналитикуАктивовПассивовПоУмолчанию(СтатьяАктивовПассивов, Объект) Экспорт
	
	СтатьяТипЗначения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтатьяАктивовПассивов, "ТипЗначения");
	
	ОписаниеТипов = Новый ОписаниеТипов(СтатьяТипЗначения);
	АналитикаАктивовПассивов = ОписаниеТипов.ПривестиЗначение();
	
	Если СтатьяТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Склады")
		И Объект.Свойство("Склад") Тогда
	
		АналитикаАктивовПассивов = Объект.Склад;
	
	ИначеЕсли СтатьяТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Партнеры")
		И Объект.Свойство("Партнер") Тогда
		
		АналитикаАктивовПассивов = Объект.Партнер;
		
	ИначеЕсли СтатьяТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Контрагенты")
		И Объект.Свойство("Контрагент") Тогда
		
		АналитикаАктивовПассивов = Объект.Контрагент;
		
	ИначеЕсли СтатьяТипЗначения = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия")
		И Объект.Свойство("Подразделение") Тогда
		
		АналитикаАктивовПассивов = Объект.Подразделение;
		
	ИначеЕсли СтатьяТипЗначения = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия")
		И Объект.Свойство("ПодразделениеПредприятия") Тогда
		
		АналитикаАктивовПассивов = Объект.ПодразделениеПредприятия;
		
	ИначеЕсли СтатьяТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Организации")
		И Объект.Свойство("Организация") Тогда
	
		АналитикаАктивовПассивов = Объект.Организация;
		
	ИначеЕсли СтатьяТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица")
		И Объект.Свойство("ФизическоеЛицо") Тогда
	
		АналитикаАктивовПассивов = Объект.ФизическоеЛицо;
		
	КонецЕсли;
	
	Возврат АналитикаАктивовПассивов;
	
КонецФункции

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	КомандаОтчет = Отчеты.ОборотноСальдоваяВедомостьАктивовПассивов.ДобавитьКомандуКарточкаАктиваПассива(КомандыОтчетов);
	Если КомандаОтчет <> Неопределено Тогда
		КомандаОтчет.ВидимостьВФормах = "ФормаЭлемента,ФормаСписка";
	КонецЕсли;
	
КонецПроцедуры

// Возвращает статьи активов/пассивов, использование которых запрещено
//
// Возвращаемое значение:
// 	СписокЗначений - Список заблокированных статей активов/пассивов.
//
Функция ЗаблокированныеСтатьиАктивовПассивов() Экспорт
	
	ЗаблокированныеСтатьи = Новый СписокЗначений;
	
	Возврат ЗаблокированныеСтатьи;
	
КонецФункции

// Вызывается при начальном заполнении предопределенных элементов
Процедура ПриНастройкеНачальногоЗаполненияЭлементов(Настройки) Экспорт
	
	Настройки.ПриНачальномЗаполненииЭлемента = Истина;
	
КонецПроцедуры

// Вызывается при начальном заполнении справочника.
//
// Параметры:
//  КодыЯзыков - Массив - список языков конфигурации. Актуально для мультиязычных конфигураций.
//  Элементы   - ТаблицаЗначений - данные заполнения. Состав колонок соответствует набору реквизитов справочника.
//  ТабличныеЧасти - Массив из Строка - 
//
Процедура ПриНачальномЗаполненииЭлементов(КодыЯзыков, Элементы, ТабличныеЧасти) Экспорт

	#Область ГруппаПрочиеАктивы
	Элемент = Элементы.Добавить();
	Элемент.ЭтоГруппа = Истина;
	Элемент.ИмяПредопределенныхДанных = "ГруппаПрочиеАктивы";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Прочие активы'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000047";
	Элемент.РеквизитДопУпорядочивания = 45;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ГруппаПрочиеПассивы
	Элемент = Элементы.Добавить();
	Элемент.ЭтоГруппа = Истина;
	Элемент.ИмяПредопределенныхДанных = "ГруппаПрочиеПассивы";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Прочие пассивы'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000048";
	Элемент.РеквизитДопУпорядочивания = 47;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ДебиторскаяЗадолженность
	Элемент = Элементы.Добавить();
	Элемент.ЭтоГруппа = Истина;
	Элемент.ИмяПредопределенныхДанных = "ДебиторскаяЗадолженность";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Дебиторская задолженность'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000023";
	Элемент.РеквизитДопУпорядочивания = 21;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ДенежныеСредства
	Элемент = Элементы.Добавить();
	Элемент.ЭтоГруппа = Истина;
	Элемент.ИмяПредопределенныхДанных = "ДенежныеСредства";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Денежные средства'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000020";
	Элемент.РеквизитДопУпорядочивания = 13;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ДоходыТекущегоПериода
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДоходыТекущегоПериода";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Доходы текущего периода'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000042";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 37;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ИсточникиФинансирования
	Элемент = Элементы.Добавить();
	Элемент.ЭтоГруппа = Истина;
	Элемент.ИмяПредопределенныхДанных = "ИсточникиФинансирования";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Источники финансирования'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000038";
	Элемент.РеквизитДопУпорядочивания = 1;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область КредиторскаяЗадолженность
	Элемент = Элементы.Добавить();
	Элемент.ЭтоГруппа = Истина;
	Элемент.ИмяПредопределенныхДанных = "КредиторскаяЗадолженность";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Кредиторская задолженность'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000024";
	Элемент.РеквизитДопУпорядочивания = 8;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область НезавершенноеПроизводство
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НезавершенноеПроизводство";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Незавершенное производство'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000029";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 34;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ПрибылиИУбытки
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПрибылиИУбытки";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Прибыли и убытки'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000016";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 38;
	Элемент.ВыводитьОборот = Истина;
	Элемент.ПредставлениеДебетаСтатьи = НСтр("ru = 'Себестоимость и прочие расходы'", КодыЯзыков); // @НСтр-2
	Элемент.ПредставлениеКредитаСтатьи = НСтр("ru = 'Выручка и прочие доходы'", КодыЯзыков); // @НСтр-2
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область РасходыБудущихПериодов
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РасходыБудущихПериодов";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расходы будущих периодов'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000015";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 35;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область РасходыТекущегоПериода
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РасходыТекущегоПериода";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расходы текущего периода'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000014";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 36;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область Товары
	Элемент = Элементы.Добавить();
	Элемент.ЭтоГруппа = Истина;
	Элемент.ИмяПредопределенныхДанных = "Товары";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Товары'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000027";
	Элемент.РеквизитДопУпорядочивания = 26;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ТоварыКОформлениюОтчетовКомитенту
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТоварыКОформлениюОтчетовКомитенту";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Товары к оформлению отчетов комитенту (продажи)'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000043";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 32;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область УслугиКОформлениюОтчетовПринципалу
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "УслугиКОформлениюОтчетовПринципалу";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Услуги к оформлению отчетов принципалу (продажи)'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000055";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 33;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти
	
	#Область ТоварыРаботыКОформлениюОтчетовКомитенту
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТоварыРаботыКОформлениюОтчетовКомитенту";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Товары и работы к оформлению отчетов комитенту (закупки)'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000057";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 53;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти
	

	#Область ВыданныеАвансы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВыданныеАвансы";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Выданные авансы'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000001";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДебиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 23;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ЗадолженностьКлиентов
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЗадолженностьКлиентов";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Задолженность клиентов'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000002";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДебиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 22;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ЗадолженностьСобственныхОрганизаций
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЗадолженностьСобственныхОрганизаций";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Задолженность собственных организаций'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000006";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДебиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 25;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ЗаймыВыданные
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЗаймыВыданные";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Займы выданные'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000019";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДебиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 24;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ДенежныеДокументы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДенежныеДокументы";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Денежные документы'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000049";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 18;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ДенежныеСредстваБезналичные
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДенежныеСредстваБезналичные";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Денежные средства (безналичные)'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000003";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 14;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ДенежныеСредстваВПути
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДенежныеСредстваВПути";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Денежные средства в пути'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000028";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 20;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ДенежныеСредстваНаличные
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДенежныеСредстваНаличные";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Денежные средства (наличные)'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000004";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 15;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ДенежныеСредстваНаправления
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДенежныеСредстваНаправления";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Денежные средства (в направлениях)'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000044";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 16;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ДенежныеСредстваУПодотчетныхЛиц
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДенежныеСредстваУПодотчетныхЛиц";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Денежные средства (у подотчетных лиц)'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000005";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 17;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ДепозитыВБанках
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДепозитыВБанках";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Депозиты в банках'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000018";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 19;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ЗадолженностьПоКредитам
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЗадолженностьПоКредитам";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Финансирование за счет кредитов и займов'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000017";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ИсточникиФинансирования;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 3;
	Элемент.ВыводитьОборот = Истина;
	Элемент.ПредставлениеДебетаСтатьи = НСтр("ru = 'Возврат кредита и процентов'", КодыЯзыков); // @НСтр-2
	Элемент.ПредставлениеКредитаСтатьи = НСтр("ru = 'Кредит и начисления процентов'", КодыЯзыков); // @НСтр-2
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область СобственныеСредства
	Элемент = Элементы.Добавить();
	Элемент.ЭтоГруппа = Истина;
	Элемент.ИмяПредопределенныхДанных = "СобственныеСредства";
	МассивТипов = Новый Массив;
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Собственные средства'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000037";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ИсточникиФинансирования;
	Элемент.РеквизитДопУпорядочивания = 5;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ЦелевоеФинансирование
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЦелевоеФинансирование";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Целевое финансирование'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000036";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ИсточникиФинансирования;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 2;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ЗадолженностьПередПоставщиками
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ЗадолженностьПередПоставщиками";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Задолженность перед поставщиками'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000009";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.КредиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 10;
	Элемент.ВыводитьОборот = Истина;
	Элемент.ПредставлениеДебетаСтатьи = НСтр("ru = 'Оплата и прочие взаиморасчеты'", КодыЯзыков); // @НСтр-2
	Элемент.ПредставлениеКредитаСтатьи = НСтр("ru = 'Кредит'", КодыЯзыков); // @НСтр-2
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область НеотфактурованныеПоставки
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НеотфактурованныеПоставки";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Неотфактурованные поставки'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000053";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.КредиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 12;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ОбязательстваПередСобственнымиОрганизациями
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОбязательстваПередСобственнымиОрганизациями";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Обязательства перед собственными организациями'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000011";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.КредиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 11;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ПолученныеАвансы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПолученныеАвансы";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Полученные авансы'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000010";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.КредиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 9;
	Элемент.ВыводитьОборот = Истина;
	Элемент.ПредставлениеДебетаСтатьи = НСтр("ru = 'Зачет авансов'", КодыЯзыков); // @НСтр-2
	Элемент.ПредставлениеКредитаСтатьи = НСтр("ru = 'Авансы'", КодыЯзыков); // @НСтр-2
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ПрочиеАктивы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПрочиеАктивы";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ПрочиеАктивыПассивы"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Прочие активы'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000012";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ГруппаПрочиеАктивы;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 46;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ДепонированнаяЗарплата
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ДепонированнаяЗарплата";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Депонированная зарплата'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000032";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ГруппаПрочиеПассивы;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 50;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область Налоги
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "Налоги";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ВидыНалоговВзносов"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Налоги'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000035";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ГруппаПрочиеПассивы;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.АктивПассив;
	Элемент.РеквизитДопУпорядочивания = 49;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ОплатаТруда
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ОплатаТруда";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Оплата труда'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000030";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ГруппаПрочиеПассивы;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 51;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ПрочиеПассивы
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ПрочиеПассивы";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ПрочиеАктивыПассивы"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Прочие пассивы'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000013";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ГруппаПрочиеПассивы;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 48;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область ВложенияСобственныхСредств
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВложенияСобственныхСредств";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Вложения собственных средств'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000040";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.СобственныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Пассив;
	Элемент.РеквизитДопУпорядочивания = 6;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ВыводСобственныхСредств
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ВыводСобственныхСредств";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Вывод собственных средств'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000041";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.СобственныеСредства;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 7;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ТоварыВПути
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТоварыВПути";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Товары в пути'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000054";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.Товары;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 28;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ТоварыВРознице
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТоварыВРознице";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Товары в рознице'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000025";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.Товары;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 29;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ТоварыНаОптовыхСкладах
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТоварыНаОптовыхСкладах";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Товары на оптовых складах'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000007";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.Товары;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 27;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ТоварыПереданныеВПереработку
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТоварыПереданныеВПереработку";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Товары, переданные в переработку'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000026";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.Товары;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 31;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область ТоварыПереданныеНаКомиссию
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "ТоварыПереданныеНаКомиссию";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Товары, переданные на комиссию'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000008";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.Товары;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 30;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Истина;
	#КонецОбласти

	#Область НДСПоОтгрузкамБезПереходаПраваСобственности
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "НДСПоОтгрузкамБезПереходаПраваСобственности";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'НДС по отгрузкам без перехода права собственности'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000059";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 54;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти

	#Область РасчетыСФилиалами
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РасчетыСФилиалами";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расчеты с филиалами'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000058";
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.АктивПассив;
	Элемент.РеквизитДопУпорядочивания = 55;
	Элемент.ВыводитьОборот = Ложь;
	Элемент.БезАналитики = Ложь;
	#КонецОбласти
	

	#Область РасходыДисконтирования
	Элемент = Элементы.Добавить();
	Элемент.ИмяПредопределенныхДанных = "РасходыДисконтирования";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ПеречислениеСсылка.СтатьиБезАналитики"));
	ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.ТипЗначения = ОписаниеТипа;
	МультиязычностьСервер.ЗаполнитьМультиязычныйРеквизит(Элемент, "Наименование", "ru = 'Расходы дисконтирования'", КодыЯзыков); // @НСтр-2
	Элемент.Код = "00000000063";
	Элемент.Родитель = ПланыВидовХарактеристик.СтатьиАктивовПассивов.КредиторскаяЗадолженность;
	Элемент.АктивПассив = Перечисления.ВидыСтатейУправленческогоБаланса.Актив;
	Элемент.РеквизитДопУпорядочивания = 59;
	Элемент.ВыводитьОборот = Истина;
	Элемент.БезАналитики = Истина;
	#КонецОбласти
	
КонецПроцедуры

// Вызывается при начальном заполнении создаваемого элемента.
//
// Параметры:
//  Объект                  - ПланВидовХарактеристикОбъект.СтатьиАктивовПассивов - заполняемый объект.
//  Данные                  - СтрокаТаблицыЗначений - данные заполнения.
//  ДополнительныеПараметры - Структура - Дополнительные параметры.
//
Процедура ПриНачальномЗаполненииЭлемента(Объект, Данные, ДополнительныеПараметры) Экспорт
	
	
	
КонецПроцедуры

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	ДоходыИРасходыСервер.ОбработкаПолученияДанныхВыбораПВХСтатьиАктивовПассивов(ДанныеВыбора, Параметры, СтандартнаяОбработка);
	
КонецПроцедуры
	
#КонецЕсли

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьКлиентСервер.ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьКлиентСервер.ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка);
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьНастройкиПредопределенныхЭлементов() Экспорт
	
	МетаданныеОбъекта = Метаданные.ПланыВидовХарактеристик.СтатьиАктивовПассивов;
	ПолноеИмяОбъекта  = МетаданныеОбъекта.ПолноеИмя();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиАктивовПассивов.Ссылка,
		|	СтатьиАктивовПассивов.ИмяПредопределенныхДанных КАК Имя,
		|	ВЫБОР
		|		КОГДА СтатьиАктивовПассивов.Ссылка В (
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ВыводСобственныхСредств),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ВыданныеАвансы),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЗадолженностьКлиентов),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредстваБезналичные),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредстваНаправления),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредстваВПути),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредстваНаличные),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеСредстваУПодотчетныхЛиц),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДенежныеДокументы),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ДепозитыВБанках),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЗадолженностьСобственныхОрганизаций),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЗаймыВыданные),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПрочиеАктивы),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасходыБудущихПериодов),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НезавершенноеПроизводство),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасходыТекущегоПериода),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ТоварыПереданныеВПереработку),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ТоварыПереданныеНаКомиссию),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ТоварыВПути),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ТоварыВРознице),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ТоварыНаОптовыхСкладах),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НДСПоОтгрузкамБезПереходаПраваСобственности),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.РасходыДисконтирования),
		|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ТоварыРаботыКОформлениюОтчетовКомитенту))
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСтатейУправленческогоБаланса.Актив)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСтатейУправленческогоБаланса.Пассив)
		|	КОНЕЦ КАК АктивПассив
		|ИЗ
		|	ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
		|ГДЕ
		|	СтатьиАктивовПассивов.Предопределенный
		|	И НЕ СтатьиАктивовПассивов.ЭтоГруппа
		|	И НЕ СтатьиАктивовПассивов.Ссылка В (&АктивыПассивы)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Статьи.Ссылка,
		|	Статьи.ИмяПредопределенныхДанных КАК Имя,
		|	ЗНАЧЕНИЕ(Перечисление.ВидыСтатейУправленческогоБаланса.АктивПассив) КАК АктивПассив
		|ИЗ
		|	ПланВидовХарактеристик.СтатьиАктивовПассивов КАК Статьи
		|ГДЕ
		|	Статьи.Ссылка В (&АктивыПассивы)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Статьи.Ссылка,
		|	Статьи.ИмяПредопределенныхДанных КАК Имя,
		|	НЕОПРЕДЕЛЕНО КАК АктивПассив
		|ИЗ
		|	ПланВидовХарактеристик.СтатьиАктивовПассивов КАК Статьи
		|ГДЕ
		|	Статьи.Предопределенный
		|	И Статьи.ЭтоГруппа";
		
	АктивыПассивы = Новый Массив;
	АктивыПассивы.Добавить(ПланыВидовХарактеристик.СтатьиАктивовПассивов.Налоги);
	АктивыПассивы.Добавить(ПланыВидовХарактеристик.СтатьиАктивовПассивов.РасчетыСФилиалами);
	
	Запрос.УстановитьПараметр("АктивыПассивы", АктивыПассивы);
	ПорядокСтатей = ПорядокСтатей();
	ТипБезАналитики = Новый ОписаниеТипов("ПеречислениеСсылка.СтатьиБезАналитики");
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			
			Блокировка.Заблокировать();
			
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			Порядок = ПорядокСтатей.Найти(Выборка.Имя);
			Если Порядок <> Неопределено Тогда
				Объект.РеквизитДопУпорядочивания = Порядок.РеквизитДопУпорядочивания;
			КонецЕсли;
			Если ЗначениеЗаполнено(Выборка.АктивПассив) Тогда
				Объект.БезАналитики = Объект.ТипЗначения = ТипБезАналитики;
				Объект.АктивПассив = Выборка.АктивПассив;
			КонецЕсли;
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru = 'Не удалось обработать элемент: %Ссылка% по причине: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				МетаданныеОбъекта,
				Выборка.Ссылка,
				ТекстСообщения);
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	УстановитьПредставлениеОборотовСтатейАктивовПассивов();
	
КонецПроцедуры

Функция ПорядокСтатей()
	
	Таблица = Новый ТаблицаЗначений();
	
	ДобавитьКолонки(Таблица, "Имя, РеквизитДопУпорядочивания");
	// =========================================================
	ДобавитьЗапись(Таблица, "ИсточникиФинансирования", "1");
	ДобавитьЗапись(Таблица, "ЦелевоеФинансирование", "2");
	ДобавитьЗапись(Таблица, "ЗадолженностьПоКредитам", "3");
	ДобавитьЗапись(Таблица, "Лизинг", "4");
	ДобавитьЗапись(Таблица, "СобственныеСредства", "5");
	ДобавитьЗапись(Таблица, "ВложенияСобственныхСредств", "6");
	ДобавитьЗапись(Таблица, "ВыводСобственныхСредств", "7");
	ДобавитьЗапись(Таблица, "КредиторскаяЗадолженность", "8");
	ДобавитьЗапись(Таблица, "ПолученныеАвансы", "9");
	ДобавитьЗапись(Таблица, "ЗадолженностьПередПоставщиками", "10");
	ДобавитьЗапись(Таблица, "ОбязательстваПередСобственнымиОрганизациями", "11");
	ДобавитьЗапись(Таблица, "НефактурованныеПоставки", "12");
	ДобавитьЗапись(Таблица, "ДенежныеСредства", "13");
	ДобавитьЗапись(Таблица, "ДенежныеСредстваБезналичные", "14");
	ДобавитьЗапись(Таблица, "ДенежныеСредстваНаличные", "15");
	ДобавитьЗапись(Таблица, "ДенежныеСредстваНаправления", "16");
	ДобавитьЗапись(Таблица, "ДенежныеСредстваУПодотчетныхЛиц", "17");
	ДобавитьЗапись(Таблица, "ДенежныеДокументы", "18");
	ДобавитьЗапись(Таблица, "ДепозитыВБанках", "19");
	ДобавитьЗапись(Таблица, "ДенежныеСредстваВПути", "20");
	ДобавитьЗапись(Таблица, "ДебиторскаяЗадолженность", "21");
	ДобавитьЗапись(Таблица, "ЗадолженностьКлиентов", "22");
	ДобавитьЗапись(Таблица, "ВыданныеАвансы", "23");
	ДобавитьЗапись(Таблица, "ЗаймыВыданные", "24");
	ДобавитьЗапись(Таблица, "ЗадолженностьСобственныхОрганизаций", "25");
	ДобавитьЗапись(Таблица, "Товары", "26");
	ДобавитьЗапись(Таблица, "ТоварыНаОптовыхСкладах", "27");
	ДобавитьЗапись(Таблица, "ТоварыВПути", "28");
	ДобавитьЗапись(Таблица, "ТоварыВРознице", "29");
	ДобавитьЗапись(Таблица, "ТоварыПереданныеНаКомиссию", "30");
	ДобавитьЗапись(Таблица, "ТоварыПереданныеВПереработку", "31");
	ДобавитьЗапись(Таблица, "ТоварыКОформлениюОтчетовКомитенту", "32");
	ДобавитьЗапись(Таблица, "УслугиКОформлениюОтчетовПринципалу", "33");
	ДобавитьЗапись(Таблица, "НезавершенноеПроизводство", "35");
	ДобавитьЗапись(Таблица, "РасходыБудущихПериодов", "36");
	ДобавитьЗапись(Таблица, "РасходыТекущегоПериода", "37");
	ДобавитьЗапись(Таблица, "ДоходыТекущегоПериода", "38");
	ДобавитьЗапись(Таблица, "ПрибылиИУбытки", "39");
	ДобавитьЗапись(Таблица, "ВнеоборотныеАктивы", "40");
	ДобавитьЗапись(Таблица, "ОсновныеСредства", "41");
	ДобавитьЗапись(Таблица, "НематериальныеАктивы", "42");
	ДобавитьЗапись(Таблица, "КапитализацияОС", "43");
	ДобавитьЗапись(Таблица, "КапитализацияОбъектовСтроительства", "44");
	ДобавитьЗапись(Таблица, "КапитализацияНМАиНИОКР", "45");
	ДобавитьЗапись(Таблица, "ГруппаПрочиеАктивы", "46");
	ДобавитьЗапись(Таблица, "ПрочиеАктивы", "47");
	ДобавитьЗапись(Таблица, "ГруппаПрочиеПассивы", "48");
	ДобавитьЗапись(Таблица, "ПрочиеПассивы", "49");
	ДобавитьЗапись(Таблица, "Налоги", "50");
	ДобавитьЗапись(Таблица, "ДепонированнаяЗарплата", "51");
	ДобавитьЗапись(Таблица, "ОплатаТруда", "52");
	ДобавитьЗапись(Таблица, "РезервыПоСомнительнымДолгам", "53");
	ДобавитьЗапись(Таблица, "ТоварыРаботыКОформлениюОтчетовКомитенту", "54");
	ДобавитьЗапись(Таблица, "НДСПоОтгрузкамБезПереходаПраваСобственности", "55");
	ДобавитьЗапись(Таблица, "РасчетыСФилиалами", "56");
	ДобавитьЗапись(Таблица, "РасчетыПоВыделенномуИмуществу", "57");
	ДобавитьЗапись(Таблица, "РезервыПоВознаграждениям", "58");
	ДобавитьЗапись(Таблица, "РезервыПоСтраховымВзносам", "59");
	ДобавитьЗапись(Таблица, "РасходыДисконтирования", "60");
	
	Возврат Таблица;
	
КонецФункции

Процедура ДобавитьКолонки(Таблица, Колонки)
	
	ОбщегоНазначенияУТ.ДобавитьКолонки(Таблица, Колонки);
	
КонецПроцедуры

Процедура ДобавитьЗапись(Таблица, Значение1, Значение2)
	
	ОбщегоНазначенияУТ.ДобавитьЗапись(Таблица, Значение1, Значение2);

КонецПроцедуры

Процедура УстановитьПредставлениеОборотовСтатейАктивовПассивов()
	
	СтатьиАП = ПланыВидовХарактеристик.СтатьиАктивовПассивов;
	
	УстановитьПредставлениеОборотовСтатьи(
		СтатьиАП.ЗадолженностьПоКредитам,
		НСтр("ru = 'Возврат кредита и процентов'"),
		НСтр("ru = 'Кредит и начисления процентов'"));
		
	УстановитьПредставлениеОборотовСтатьи(
		СтатьиАП.ПолученныеАвансы,
		НСтр("ru = 'Зачет авансов'"),
		НСтр("ru = 'Авансы'"));
		
	УстановитьПредставлениеОборотовСтатьи(
		СтатьиАП.ЗадолженностьПередПоставщиками,
		НСтр("ru = 'Оплата и прочие взаиморасчеты'"),
		НСтр("ru = 'Кредит'"));
		
	УстановитьПредставлениеОборотовСтатьи(
		СтатьиАП.ПрибылиИУбытки,
		НСтр("ru = 'Себестоимость и прочие расходы'"),
		НСтр("ru = 'Выручка и прочие доходы'"));
	
КонецПроцедуры

Процедура УстановитьПредставлениеОборотовСтатьи(Статья, ПредставлениеДебетаСтатьи, ПредставлениеКредитаСтатьи)
	
	Объект = Статья.ПолучитьОбъект();
	Объект.ВыводитьОборот = Истина;
	Объект.ПредставлениеДебетаСтатьи = ПредставлениеДебетаСтатьи;
	Объект.ПредставлениеКредитаСтатьи = ПредставлениеКредитаСтатьи;
	ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
