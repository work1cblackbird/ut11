#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Заголовок = Нстр("ru = 'Мобильные устройства с установленным мобильным приложением ""1С:Заказы""'");
	
	УстановитьПараметрыДинамическогоСписка();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийШапкиФормы

&НаКлиенте
Процедура ПользовательФильтрПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Пользователь", Пользователь,
		ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Пользователь));
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбраннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		Если НЕ ТипЗнч(ВыбраннаяСтрока.Ключ) = Тип("Строка") Тогда
			ПоказатьЗначение(, ВыбраннаяСтрока.Ключ);
		КонецЕсли;
	Иначе
		ПоказатьЗначение(, ВыбраннаяСтрока);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	СписокПриАктивизацииСтрокиНаКлиенте(Элементы.Список.ТекущиеДанные);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПометитьНаУдаление(Команда)
	
	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	ПараметрыПометкиУдаления = Новый Структура;
	Если ТипЗнч(ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		ПометкаНаУдаление = ЭлементСпискаПомеченНаУдаление(ТекущаяСтрока.Ключ);
		Если НЕ ПометкаНаУдаление Тогда
			ТекстВопроса = НСтр("ru = 'Если пометить на удаление настройку синхронизации,
			|то на мобильном устройстве будут удалены все данные приложения 1С:Заказы при следующем сеансе обмена.
			|Пометить на удаление все настройки из группы ""%ГруппаНастроек%""?'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Снять пометку на удаление со всех настроек из группы ""%ГруппаНастроек%""?'");
		КонецЕсли;
		ТекстВопроса = СтрЗаменить(ТекстВопроса, "%ГруппаНастроек%", ТекущаяСтрока.Ключ);
		ПараметрыПометкиУдаления.Вставить("УзелОбмена", ТекущаяСтрока.Ключ);
		ПараметрыПометкиУдаления.Вставить("ЭтоГруппа", Истина);
		ПараметрыПометкиУдаления.Вставить("ПометкаУдаления", ПометкаНаУдаление);
	ИначеЕсли ТипЗнч(ТекущаяСтрока) = Тип("ПланОбменаСсылка.МобильноеПриложениеЗаказыКлиентов") Тогда
		Если ТекущиеДанные.ПометкаУдаления Тогда
			ТекстВопроса = НСтр("ru = 'Снять пометку на удаление с настройки ""%Настройка%""?'");
		Иначе
			ТекстВопроса = НСтр("ru = 'Если пометить на удаление настройку синхронизации,
			|то на мобильном устройстве будут удалены все данные приложения 1С:Заказы при следующем сеансе обмена.
			|Пометить на удаление настройку ""%Настройка%""?'");
		КонецЕсли;
		ТекстВопроса = СтрЗаменить(ТекстВопроса, "%Настройка%", ТекущаяСтрока);
		ПараметрыПометкиУдаления.Вставить("УзелОбмена", ТекущаяСтрока);
		ПараметрыПометкиУдаления.Вставить("ПометкаУдаления", ТекущиеДанные.ПометкаУдаления);
	КонецЕсли;
	ЗаголовокВопроса = НСтр("ru = 'Настройки синхронизации'");
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОтветаНаВопросПометкаУдаления", ЭтаФорма, ПараметрыПометкиУдаления);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет, ЗаголовокВопроса);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНастройку(Команда)
	
	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	ПараметрыФормы = Новый Структура;
	Если ТипЗнч(ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		Если НЕ ТипЗнч(ТекущаяСтрока.Ключ) = Тип("Строка") И ЗначениеЗаполнено(ТекущаяСтрока.Ключ) Тогда
			ПараметрыФормы.Вставить("ВидНастройкиОбмена", ТекущаяСтрока.Ключ);
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(Пользователь) Тогда
		ПараметрыФормы.Вставить("Пользователь", Пользователь);
	КонецЕсли;
	ОткрытьФорму("ПланОбмена.МобильноеПриложениеЗаказыКлиентов.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНастройкуКонтекст(Команда)
	
	ТекущаяСтрока = Элементы.Список.ТекущаяСтрока;
	ПараметрыФормы = Новый Структура;
	Если ТипЗнч(ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		Если ТипЗнч(ТекущаяСтрока.Ключ) = Тип("Строка") Тогда
			Если ЗначениеЗаполнено(Пользователь) Тогда
				ПараметрыФормы.Вставить("Пользователь", Пользователь);
			КонецЕсли;
		Иначе
			СкопироватьУзелОбмена(ТекущаяСтрока.Ключ, ПараметрыФормы);
		КонецЕсли;
	ИначеЕсли ТипЗнч(ТекущаяСтрока) = Тип("ПланОбменаСсылка.МобильноеПриложениеЗаказыКлиентов") Тогда
		СкопироватьУзелОбмена(ТекущаяСтрока, ПараметрыФормы);
	КонецЕсли;
	ОткрытьФорму("ПланОбмена.МобильноеПриложениеЗаказыКлиентов.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПометитьНаУдалениеНастройки(УзелОбмена, ПометкаУдаления)
	
	ПометитьНаУдалениеНастройку(УзелОбмена, ПометкаУдаления);
	
	НастройкиВГруппе = ПланыОбмена.МобильноеПриложениеЗаказыКлиентов.Выбрать(Новый Структура("ВидНастройкиОбмена", УзелОбмена));
	Пока НастройкиВГруппе.Следующий() Цикл
		ПометитьНаУдалениеНастройку(НастройкиВГруппе.Ссылка, ПометкаУдаления);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПометитьНаУдалениеНастройку(УзелОбмена, ПометкаУдаления)
	
	УзелОбъект = УзелОбмена.ПолучитьОбъект();
	УзелОбъект.ПометкаУдаления = ПометкаУдаления;
	Попытка
		УзелОбъект.Записать();
	Исключение
		ВызватьИсключение(ОписаниеОшибки());
	КонецПопытки
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросПометкаУдаления(Знач Результат = Неопределено, Знач ДополнительныеПараметры = Неопределено) Экспорт
	
	Если НЕ Результат = Неопределено И Результат = КодВозвратаДиалога.Да Тогда
		Если ДополнительныеПараметры.Свойство("ЭтоГруппа") Тогда
			ПометитьНаУдалениеНастройки(ДополнительныеПараметры.УзелОбмена, НЕ ДополнительныеПараметры.ПометкаУдаления);
		Иначе
			ПометитьНаУдалениеНастройку(ДополнительныеПараметры.УзелОбмена, НЕ ДополнительныеПараметры.ПометкаУдаления);
		КонецЕсли;
		Элементы.Список.Обновить();
		СписокПриАктивизацииСтрокиНаКлиенте(Элементы.Список.ТекущиеДанные);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СкопироватьУзелОбмена(Узел, ПараметрыФормы)
	
	РеквизитыУзла = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Узел, "ВидНастройкиОбмена, Пользователь, НастройкиОбмена");
	ПараметрыФормы.Вставить("Пользователь", РеквизитыУзла.Пользователь);
	ПараметрыФормы.Вставить("ВидНастройкиОбмена", РеквизитыУзла.ВидНастройкиОбмена);
	ПараметрыФормы.Вставить("НастройкиОбмена", РеквизитыУзла.НастройкиОбмена);
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтрокиНаКлиенте(ТекущаяСтрока)
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВидимостьКомандыУдалить = Ложь;
	ВидимостьКомандыСоздать = Ложь;
	ВидимостьКомандыСкопировать = Ложь;
	
	Если ТекущаяСтрока.Свойство("ГруппировкаСтроки") Тогда
		Если ТипЗнч(ТекущаяСтрока.ГруппировкаСтроки.Ключ) = Тип("Строка") Тогда
			ВидимостьКомандыСоздать = Истина;
		Иначе
			ВидимостьКомандыСкопировать = Истина;
		КонецЕсли;
	Иначе
		ВидимостьКомандыСкопировать = Истина;
		ВидимостьКомандыУдалить = Истина;
		Если ТекущаяСтрока.ПометкаУдаления Тогда
			ЗаголовокКомандыУдалить = НСтр("ru = 'Снять пометку'");
		Иначе
			ЗаголовокКомандыУдалить = НСтр("ru = 'Пометить на удаление'");
		КонецЕсли;
		Элементы.СписокКонтекстноеМенюПометитьНаУдаление.Заголовок = ЗаголовокКомандыУдалить;
	КонецЕсли;
	
	Элементы.СписокКонтекстноеМенюПометитьНаУдаление.Видимость = ВидимостьКомандыУдалить;
	Элементы.СписокКонтекстноеМенюСоздатьНастройку.Видимость = ВидимостьКомандыСоздать;
	Элементы.СписокКонтекстноеМенюСкопироватьНастройку.Видимость = ВидимостьКомандыСкопировать;
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыДинамическогоСписка()
	
	ТекстЗапроса = ТекстЗапросаДинамическогоСпискаНастроек();
	
	Если ОбщегоНазначения.РазделениеВключено()
		И ОбщегоНазначения.ДоступноИспользованиеРазделенныхДанных() Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.СостоянияОбменовДанными",
			"РегистрСведений.СостоянияОбменовДаннымиОбластейДанных");
	КонецЕсли;
	
	СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	СвойстваСписка.ОсновнаяТаблица = "ПланОбмена.МобильноеПриложениеЗаказыКлиентов";
	СвойстваСписка.ДинамическоеСчитываниеДанных = Истина;
	СвойстваСписка.ТекстЗапроса = ТекстЗапроса;
	ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список,
		СвойстваСписка);
		
	Если Параметры.Свойство("НеОтображатьЭтотУзел") Тогда
		Список.Параметры.УстановитьЗначениеПараметра("НеОтображатьЭтотУзел", Параметры.НеОтображатьЭтотУзел);
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("НеОтображатьЭтотУзел", Ложь);
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("ПустаяНастройка", НСтр("ru = 'Индивидуальные настройки'"));
	
	ГруппировкаПоВидуНастройкиОбмена = Список.Группировка.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	ГруппировкаПоВидуНастройкиОбмена.Поле = Новый ПолеКомпоновкиДанных("ГруппаНастроекОбмена");
	ГруппировкаПоВидуНастройкиОбмена.Использование = Истина;
КонецПроцедуры

&НаСервере
Функция ЭлементСпискаПомеченНаУдаление(ЭлементСписка)
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементСписка, "ПометкаУдаления");
КонецФункции

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаСервере
Функция ТекстЗапросаДинамическогоСпискаНастроек()
	
	Возврат "ВЫБРАТЬ
	|	СостоянияОбменовДанными.УзелИнформационнойБазы КАК УзелИнформационнойБазы,
	|	МАКСИМУМ(СостоянияОбменовДанными.ДатаОкончания) КАК ДатаОкончания
	|ПОМЕСТИТЬ СостоянияОбменовДаннымиМаксДата
	|ИЗ
	|	РегистрСведений.СостоянияОбменовДанными КАК СостоянияОбменовДанными
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(СостоянияОбменовДанными.УзелИнформационнойБазы) = ТИП(ПланОбмена.МобильноеПриложениеЗаказыКлиентов)
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОбменовДанными.УзелИнформационнойБазы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОбменовДанными.УзелИнформационнойБазы КАК УзелИнформационнойБазы,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СостоянияОбменовДанными.РезультатВыполненияОбмена ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ ВЫБОР
	|					КОГДА СостоянияОбменовДанными.РезультатВыполненияОбмена = ЗНАЧЕНИЕ(Перечисление.РезультатыВыполненияОбмена.Выполнено)
	|						ТОГДА 1
	|					ИНАЧЕ 2
	|				КОНЕЦ
	|		КОНЕЦ) КАК СтатусОбмена
	|ПОМЕСТИТЬ РезультатыВыполненияОбмена
	|ИЗ
	|	РегистрСведений.СостоянияОбменовДанными КАК СостоянияОбменовДанными
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СостоянияОбменовДаннымиМаксДата КАК СостоянияОбменовДаннымиМаксДата
	|		ПО (СостоянияОбменовДаннымиМаксДата.УзелИнформационнойБазы = СостоянияОбменовДанными.УзелИнформационнойБазы)
	|			И (СостоянияОбменовДаннымиМаксДата.ДатаОкончания = СостоянияОбменовДанными.ДатаОкончания)
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОбменовДанными.УзелИнформационнойБазы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиОбменаЗаказы.ВидНастройкиОбмена КАК ВидНастройкиОбмена,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НастройкиОбменаЗаказы.Ссылка) КАК КоличествоЭлементовВГруппе
	|ПОМЕСТИТЬ НастройкиОбменаКоличество
	|ИЗ
	|	ПланОбмена.МобильноеПриложениеЗаказыКлиентов КАК НастройкиОбменаЗаказы
	|ГДЕ
	|	НЕ НастройкиОбменаЗаказы.ВидНастройкиОбмена = ЗНАЧЕНИЕ(ПланОбмена.МобильноеПриложениеЗаказыКлиентов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	НастройкиОбменаЗаказы.ВидНастройкиОбмена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МобильноеПриложениеЗаказыКлиентов.Ссылка КАК Ссылка,
	|	МобильноеПриложениеЗаказыКлиентов.ПометкаУдаления КАК ПометкаУдаления,
	|	МобильноеПриложениеЗаказыКлиентов.Пользователь КАК Пользователь,
	|	МобильноеПриложениеЗаказыКлиентов.ПрефиксДляДанныхМобильногоУстройства КАК ПрефиксДляДанныхМобильногоУстройства,
	|	МобильноеПриложениеЗаказыКлиентов.Наименование КАК Наименование,
	|	ВЫБОР
	|		КОГДА МобильноеПриложениеЗаказыКлиентов.ВидНастройкиОбмена = ЗНАЧЕНИЕ(ПланОбмена.МобильноеПриложениеЗаказыКлиентов.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(НастройкиОбменаГруппы.КоличествоЭлементовВГруппе, 0) = 0
	|						ТОГДА &ПустаяНастройка
	|					ИНАЧЕ МобильноеПриложениеЗаказыКлиентов.Ссылка
	|				КОНЕЦ
	|		ИНАЧЕ МобильноеПриложениеЗаказыКлиентов.ВидНастройкиОбмена
	|	КОНЕЦ КАК ГруппаНастроекОбмена,
	|	ВЫБОР
	|		КОГДА МобильноеПриложениеЗаказыКлиентов.ВидНастройкиОбмена = ЗНАЧЕНИЕ(ПланОбмена.МобильноеПриложениеЗаказыКлиентов.ПустаяСсылка)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Приоритет,
	|	ЕСТЬNULL(СостоянияОбменовДанными.СтатусОбмена, 0) КАК СтатусОбмена
	|ИЗ
	|	ПланОбмена.МобильноеПриложениеЗаказыКлиентов КАК МобильноеПриложениеЗаказыКлиентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиОбменаКоличество КАК НастройкиОбменаГруппы
	|		ПО (НастройкиОбменаГруппы.ВидНастройкиОбмена = МобильноеПриложениеЗаказыКлиентов.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РезультатыВыполненияОбмена КАК СостоянияОбменовДанными
	|		ПО МобильноеПриложениеЗаказыКлиентов.Ссылка = СостоянияОбменовДанными.УзелИнформационнойБазы
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &НеОтображатьЭтотУзел
	|				ТОГДА НЕ МобильноеПриложениеЗаказыКлиентов.ЭтотУзел
	|		КОНЕЦ";
КонецФункции

#КонецОбласти
