
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("Подключаемый_ИспользованныеСимволы", 1, Ложь);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ТекстPushУведомления", ТекстPushУведомления);
	Параметры.Свойство("УказаныПолучатели", УказаныПолучатели);
	ПолучателиУведомления = Неопределено;
	Если Параметры.Свойство("Получатели", ПолучателиУведомления) Тогда
		Для Каждого Получатель Из ПолучателиУведомления Цикл
			ДобавитьПолучателяУведомления(Получатель);
		КонецЦикла;
		КОтправке = АдресатыPush.НайтиСтроки(Новый Структура("ПолучательВыбран", Истина));
		Если КОтправке.Количество() = 0 Тогда
			УказаныПолучатели = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если УказаныПолучатели Тогда
		Элементы.ТекстPushУведомления.Заголовок = Нстр("ru = 'Введите текст push-уведомления'");
	Иначе
		Элементы.ТекстPushУведомления.Заголовок = Нстр("ru = 'Шаг 1 из 2. Введите текст push-уведомления'");
		Если АдресатыPush.Количество() = 0 Тогда
			ЗаполнитьПолучателейУведомления();
		КонецЕсли;
	КонецЕсли;
	ТекстPushУведомленияИзменениеТекста(ЭтотОбъект, ТекстPushУведомления);
	Заголовок = Нстр("ru = 'Push - уведомление'");
	ЗаголовкиКомандФормы();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_ИспользованныеСимволы()
	
	ТекстPushУведомленияИзменениеТекста(ЭтотОбъект, Элементы.ТекстPushУведомления.ТекстРедактирования);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыАдресаты

&НаКлиенте
Процедура АдресатыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НЕ Поле.Имя = "АдресатыПолучательВыбран" Тогда
		СтандартнаяОбработка = Ложь;
		ТекущиеДанные = Элементы.Адресаты.ТекущиеДанные;
		Если НЕ ТекущиеДанные = Неопределено Тогда
			ПоказатьЗначение(, ТекущиеДанные.Получатель);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура АдресатыПолучательВыбранПриИзменении(Элемент)
	
	Если НЕ Элемент.Родитель.ТекущиеДанные.ВозможнаОтправка И Элемент.Родитель.ТекущиеДанные.ПолучательВыбран Тогда
		
		ЗаголовокВопроса = НСтр("ru = 'Получатель push-уведомления'");
		ТекстВопроса = НСтр("ru = 'Отправка push-уведомления на данное устройство не возможна. Отсутствует информация об идентификаторе устройства.
			|Все равно включить это устройство в список получателей уведомления?'");
		СписокКнопок = Новый СписокЗначений;
		СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, Нстр("ru = 'Не включать'"));
		СписокКнопок.Добавить(КодВозвратаДиалога.ОК, Нстр("ru = 'Включить'"));
		ДополнительныеПараметры = Новый Структура("ТекущиеДанные", Элемент.Родитель.ТекущиеДанные);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОтветаНаВопросПометка", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, СписокКнопок,, КодВозвратаДиалога.Отмена, ЗаголовокВопроса);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗаполнитьПолучателейУведомления();
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	ВыполнитьПереходПоСтраницам(Команда);
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	ВыполнитьПереходПоСтраницам(Команда);
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	УстановитьСнятьФлажки(Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	УстановитьСнятьФлажки(Команда.Имя);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыполнитьНеобходимыеДействияПриПереходеПоСтраницам(Команда)
	
	Если Элементы.СтраницыОсновные.ТекущаяСтраница = Элементы.СтраницаТекстУведомления Тогда
		Если Команда.Имя = "Далее" Тогда
			Если УказаныПолучатели Тогда
				Успешно = Ложь;
				ОтправитьУведомление(Успешно);
				Если Успешно Тогда
					Закрыть();
				КонецЕсли;
			Иначе
				Элементы.СтраницыОсновные.ТекущаяСтраница = Элементы.СтраницаАдресатыУведомления;
				ЗаголовкиКомандФормы();
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Элементы.СтраницыОсновные.ТекущаяСтраница = Элементы.СтраницаАдресатыУведомления Тогда
		Если Команда.Имя = "Далее" Тогда
			Успешно = Ложь;
			ОтправитьУведомление(Успешно);
			Если Успешно Тогда
				Закрыть();
			КонецЕсли;
		ИначеЕсли Команда.Имя = "Назад" Тогда
			Элементы.СтраницыОсновные.ТекущаяСтраница = Элементы.СтраницаТекстУведомления;
			ЗаголовкиКомандФормы();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПереходПоСтраницам(Команда)

	Отказ = УсловияПереходаПоСтраницамНеВыполнены(Команда);
	
	Если Не Отказ Тогда
		ВыполнитьНеобходимыеДействияПриПереходеПоСтраницам(Команда)
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьПолучателяУведомления(Получатель)
	
	Если ТипЗнч(Получатель) = Тип("ПланОбменаСсылка.МобильноеПриложениеЗаказыКлиентов") Тогда
		СтрокиПользователя = АдресатыPush.НайтиСтроки(Новый Структура("Получатель", Получатель));
		Если СтрокиПользователя.Количество()>0 Тогда
			Возврат;
		КонецЕсли;
		СтрокаПолучатель = АдресатыPush.Добавить();
		РеквизитыПолучателя = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Получатель, "Наименование, Пользователь");
		СтрокаПолучатель.Получатель = Получатель;
		СтрокаПолучатель.Устройство = РеквизитыПолучателя.Наименование;
		СтрокаПолучатель.Пользователь = РеквизитыПолучателя.Пользователь;
		СтрокаПолучатель.ВозможнаОтправка = МобильноеПриложениеЗаказыКлиентов.ВозможнаОтправка(Получатель);
		СтрокаПолучатель.ПолучательВыбран = СтрокаПолучатель.ВозможнаОтправка;
	ИначеЕсли ТипЗнч(Получатель) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		ПолучателиУведомления = ПолучателиУведомления(Получатель.Ключ);
		Если ПолучателиУведомления = Неопределено Тогда
			Возврат;
		КонецЕсли;
		Пока ПолучателиУведомления.Следующий() Цикл
			ДобавитьПолучателяУведомления(ПолучателиУведомления);
		КонецЦикла;
	Иначе
		СтрокиПользователя = АдресатыPush.НайтиСтроки(Новый Структура("Получатель", Получатель.Получатель));
		Если СтрокиПользователя.Количество()>0 Тогда
			Возврат;
		КонецЕсли;
		СтрокаПолучатель = АдресатыPush.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПолучатель, Получатель);
		СтрокаПолучатель.ВозможнаОтправка = МобильноеПриложениеЗаказыКлиентов.ВозможнаОтправка(СтрокаПолучатель.Получатель);
		СтрокаПолучатель.ПолучательВыбран = СтрокаПолучатель.ВозможнаОтправка;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаголовкиКомандФормы()
	
	Если Элементы.СтраницыОсновные.ТекущаяСтраница = Элементы.СтраницаТекстУведомления Тогда
		Если УказаныПолучатели Тогда
			Элементы.Далее.Заголовок = НСтр("ru = 'Отправить'");
		Иначе
			Элементы.Далее.Заголовок = НСтр("ru = 'Далее >>'");
		КонецЕсли;
		Элементы.Назад.Видимость = Ложь;
	ИначеЕсли Элементы.СтраницыОсновные.ТекущаяСтраница = Элементы.СтраницаАдресатыУведомления Тогда
		Элементы.Далее.Заголовок = НСтр("ru = 'Отправить'");
		Элементы.Назад.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПолучателейУведомления()
	
	АдресатыPush.Очистить();
	Получатели = ПолучателиУведомления("", Ложь);
	Если НЕ Получатели = Неопределено Тогда
		Пока Получатели.Следующий() Цикл
			ДобавитьПолучателяУведомления(Получатели);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОтправитьУведомление(Успешно)
	
	ВыбранныеПолучатели = АдресатыPush.НайтиСтроки(Новый Структура("ПолучательВыбран", Истина));
	Получатели = Новый Массив;
	Для Каждого Элемент Из ВыбранныеПолучатели Цикл
		Если Получатели.Найти(Элемент.Получатель) = Неопределено Тогда
			Получатели.Добавить(Элемент.Получатель);
		КонецЕсли;
	КонецЦикла;
	Если Получатели.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Укажите получателей push-уведомления'"));
		Возврат;
	КонецЕсли;
	ПолучателиБезДоставки = Новый Массив;
	МобильноеПриложениеЗаказыКлиентов.ОтправитьУведомление(ТекстPushУведомления, Получатели, ПолучателиБезДоставки);
	Успешно = Истина;
	Если ПолучателиБезДоставки.Количество() > 0 Тогда
		Успешно = Ложь;
		СообщениеПользователю = "";
		Для каждого ПолучательБезДоставки Из ПолучателиБезДоставки Цикл
			СтрокаСообщения = НСтр("ru = 'Уведомление не было отправлено на устройство: %Устройство%'");
			СтрокаСообщения = СтрЗаменить(СтрокаСообщения, "%Устройство%", СокрЛП(ПолучательБезДоставки));
			СообщениеПользователю = СообщениеПользователю + СтрокаСообщения + Символы.ПС;
		КонецЦикла;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеПользователю);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучателиУведомления(Получатель, ИспользоватьОтборПоПолучателю = Истина)
	
	ПолучателиУведомления = Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НастройкиОбменаЗаказы.ВидНастройкиОбмена КАК ВидНастройкиОбмена,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НастройкиОбменаЗаказы.Ссылка) КАК КоличествоЭлементовВГруппе
	|ПОМЕСТИТЬ НастройкиОбменаКоличество
	|ИЗ
	|	ПланОбмена.МобильноеПриложениеЗаказыКлиентов КАК НастройкиОбменаЗаказы
	|ГДЕ
	|	НЕ НастройкиОбменаЗаказы.ВидНастройкиОбмена = ЗНАЧЕНИЕ(ПланОбмена.МобильноеПриложениеЗаказыКлиентов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	НастройкиОбменаЗаказы.ВидНастройкиОбмена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МобильноеПриложениеЗаказыКлиентов.Ссылка КАК Получатель,
	|	МобильноеПриложениеЗаказыКлиентов.Пользователь КАК Пользователь,
	|	МобильноеПриложениеЗаказыКлиентов.Наименование КАК Устройство,
	|	ВЫБОР
	|		КОГДА МобильноеПриложениеЗаказыКлиентов.ВидНастройкиОбмена = ЗНАЧЕНИЕ(ПланОбмена.МобильноеПриложениеЗаказыКлиентов.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(НастройкиОбменаГруппы.КоличествоЭлементовВГруппе, 0) = 0
	|						ТОГДА ЗНАЧЕНИЕ(ПланОбмена.МобильноеПриложениеЗаказыКлиентов.ПустаяСсылка)
	|					ИНАЧЕ МобильноеПриложениеЗаказыКлиентов.Ссылка
	|				КОНЕЦ
	|		ИНАЧЕ МобильноеПриложениеЗаказыКлиентов.ВидНастройкиОбмена
	|	КОНЕЦ КАК ВидНастройкиОбмена
	|ИЗ
	|	ПланОбмена.МобильноеПриложениеЗаказыКлиентов КАК МобильноеПриложениеЗаказыКлиентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиОбменаКоличество КАК НастройкиОбменаГруппы
	|		ПО (НастройкиОбменаГруппы.ВидНастройкиОбмена = МобильноеПриложениеЗаказыКлиентов.Ссылка)
	|ГДЕ
	|	НЕ МобильноеПриложениеЗаказыКлиентов.ЭтотУзел
	|	И ВЫБОР
	|			КОГДА &ИспользоватьОтборПоПолучателю
	|				ТОГДА ВЫБОР
	|						КОГДА МобильноеПриложениеЗаказыКлиентов.ВидНастройкиОбмена = ЗНАЧЕНИЕ(ПланОбмена.МобильноеПриложениеЗаказыКлиентов.ПустаяСсылка)
	|							ТОГДА ВЫБОР
	|									КОГДА ЕСТЬNULL(НастройкиОбменаГруппы.КоличествоЭлементовВГруппе, 0) = 0
	|										ТОГДА ЗНАЧЕНИЕ(ПланОбмена.МобильноеПриложениеЗаказыКлиентов.ПустаяСсылка) = &ВидНастройкиОбмена
	|									ИНАЧЕ МобильноеПриложениеЗаказыКлиентов.Ссылка = &ВидНастройкиОбмена
	|								КОНЕЦ
	|						ИНАЧЕ МобильноеПриложениеЗаказыКлиентов.ВидНастройкиОбмена = &ВидНастройкиОбмена
	|					КОНЕЦ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	Если ТипЗнч(Получатель) = Тип("Строка") Тогда
		ВидНастройкиОбмена = ПланыОбмена.МобильноеПриложениеЗаказыКлиентов.ПустаяСсылка();
	Иначе
		ВидНастройкиОбмена = Получатель;
	КонецЕсли;
	Запрос.УстановитьПараметр("ВидНастройкиОбмена", ВидНастройкиОбмена);
	Запрос.УстановитьПараметр("ИспользоватьОтборПоПолучателю", ИспользоватьОтборПоПолучателю);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат ПолучателиУведомления;
	КонецЕсли;
	ПолучателиУведомления = Результат.Выбрать();
	
	Возврат ПолучателиУведомления;
КонецФункции

&НаКлиенте
Процедура ПослеОтветаНаВопросПометка(Знач Результат, Знач ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		ДополнительныеПараметры.ТекущиеДанные.ПолучательВыбран = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ТекстPushУведомленияИзменениеТекста(Форма, ТекстРедактирования)
	
	Если НЕ Форма.КоличествоСимволов = СтрДлина(ТекстРедактирования) ИЛИ Форма.КоличествоСимволов = 0 Тогда
		
		Форма.КоличествоСимволов = СтрДлина(ТекстРедактирования);
		ТекстЗаголовкаДекорации = НСтр("ru = '%Символов% из 127 символов'");
		ТекстЗаголовкаДекорации = СтрЗаменить(ТекстЗаголовкаДекорации, "%Символов%", Форма.КоличествоСимволов);
		Форма.ТекстСимволы = ТекстЗаголовкаДекорации;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция УсловияПереходаПоСтраницамНеВыполнены(Команда)
	
	ОчиститьСообщения();
	
	Если Элементы.СтраницыОсновные.ТекущаяСтраница = Элементы.СтраницаТекстУведомления Тогда
		Если НЕ ЗначениеЗаполнено(ТекстPushУведомления) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Введите текст push-уведомления'"),, "ТекстPushУведомления", "ТекстPushУведомления");
			Возврат Истина;
		КонецЕсли;
	ИначеЕсли Элементы.СтраницыОсновные.ТекущаяСтраница = Элементы.СтраницаАдресатыУведомления Тогда
		Если НЕ Команда.Имя = "Назад" Тогда
			КОтправке = АдресатыPush.НайтиСтроки(Новый Структура("ПолучательВыбран", Истина));
			Если КОтправке.Количество() = 0 Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Укажите получателей push-уведомления'"),, "Адресаты", "АдресатыPush");
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура УстановитьСнятьФлажки(ИмяКоманды)
	
	Для каждого Адресат Из АдресатыPush Цикл
		Если ИмяКоманды = "УстановитьФлажки" Тогда
			Адресат.ПолучательВыбран = Истина;
		Иначе
			Адресат.ПолучательВыбран = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

