
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоЗакупки = Параметры.ЭтоЗакупки;
	Если Не ЭтоЗакупки Тогда
		ИспользоватьОграниченияРучныхСкидок = (ПолучитьФункциональнуюОпцию("ИспользоватьОграниченияРучныхСкидокВПродажахПоПользователям")
											  ИЛИ ПолучитьФункциональнуюОпцию("ИспользоватьОграниченияРучныхСкидокВПродажахПоСоглашениям"));
	Иначе
		Если ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
			ИспользоватьОграниченияРучныхСкидок = Ложь;
		Иначе
			ИспользоватьОграниченияРучныхСкидок = Истина;
		КонецЕсли;
	КонецЕсли;
	ИспользоватьАвтоматическиеСкидкиВПродажах = ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическиеСкидкиВПродажах");
	
	Если Не ИспользоватьОграниченияРучныхСкидок Тогда
		СкидкаНаценкаНеОграничена = НСтр("ru = 'Не ограничена'");
	КонецЕсли;
	
	Элементы.МаксимальнаяНаценка.Видимость = ИспользоватьОграниченияРучныхСкидок;
	Элементы.МаксимальнаяСкидка.Видимость = ИспользоватьОграниченияРучныхСкидок;
	Элементы.МаксимальныйПроцентСкидки.Видимость = ИспользоватьОграниченияРучныхСкидок;
	Элементы.МаксимальныйПроцентНаценки.Видимость = ИспользоватьОграниченияРучныхСкидок;
	Элементы.МаксимальнаяСкидкаНеОграничена.Видимость = Не ИспользоватьОграниченияРучныхСкидок;
	Элементы.МаксимальнаяНаценкаНеОграничена.Видимость = Не ИспользоватьОграниченияРучныхСкидок;
	
	СтруктураТаблиц = ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище);
	
	СуммаБезСкидок                   = СтруктураТаблиц.Ограничения.Итог("СуммаБезСкидки");
	СуммаАвтоматическойСкидкиНаценки = СтруктураТаблиц.Ограничения.Итог("СуммаАвтоматическойСкидки");
	СуммаРучнойСкидкиНаценки         = СтруктураТаблиц.Ограничения.Итог("СуммаРучнойСкидки");
	Валюта                           = Параметры.Валюта;
	
	СуммаДокумента = СуммаБезСкидок;
	СуммаДокументаСУчетомСкидкиАвтоматическойСкидки = СуммаБезСкидок - СуммаАвтоматическойСкидкиНаценки;
	Если СуммаДокументаСУчетомСкидкиАвтоматическойСкидки >= СуммаРучнойСкидкиНаценки Тогда
		СуммаДокументаСУчетомСкидки = СуммаДокументаСУчетомСкидкиАвтоматическойСкидки - СуммаРучнойСкидкиНаценки;
	Иначе
		СуммаРучнойСкидкиНаценки = СуммаДокументаСУчетомСкидкиАвтоматическойСкидки;
		СуммаДокументаСУчетомСкидки = 0;
	КонецЕсли;
	
	Если СуммаРучнойСкидкиНаценки < 0 Тогда
		СуммаРучнойСкидкиНаценки = -СуммаРучнойСкидкиНаценки;
		ВариантПредоставления = 2;
		Элементы.ВариантыПредоставления.ТекущаяСтраница = Элементы.ВариантыПредоставления.ПодчиненныеЭлементы.Наценка;
	Иначе
		СуммаРучнойСкидкиНаценки = СуммаРучнойСкидкиНаценки;
		ВариантПредоставления = 1;
		Элементы.ВариантыПредоставления.ТекущаяСтраница = Элементы.ВариантыПредоставления.ПодчиненныеЭлементы.Скидка;
	КонецЕсли;
	
	Если СуммаДокумента > 0 Тогда
		ПроцентРучнойСкидкиНаценки = СуммаРучнойСкидкиНаценки * 100 / СуммаДокумента;
	КонецЕсли;
	
	Если ИспользоватьОграниченияРучныхСкидок Тогда
		
		МаксимальнаяСуммаСкидки  = СтруктураТаблиц.Ограничения.Итог("МаксимальнаяСуммаРучнойСкидки");
		МаксимальнаяСуммаНаценки = СтруктураТаблиц.Ограничения.Итог("МаксимальнаяСуммаРучнойНаценки");
		
		Если СуммаДокумента > 0 Тогда
			МаксимальныйПроцентСкидки  = МаксимальнаяСуммаСкидки * 100 / СуммаДокумента;
			МаксимальныйПроцентНаценки = МаксимальнаяСуммаНаценки * 100 / СуммаДокумента;
		КонецЕсли;
		
		МаксимальнаяСуммаСкидкиДляКонтроля = МаксимальнаяСуммаСкидки;
		МаксимальнаяСуммаНаценкиДляКонтроля = МаксимальнаяСуммаНаценки;
		
		Если МаксимальнаяСуммаСкидки > 0 Тогда
			Элементы.СуммаСкидки.КнопкаСпискаВыбора = Истина;
			Элементы.СуммаСкидки.СписокВыбора.Добавить(МаксимальнаяСуммаСкидки, Формат(МаксимальнаяСуммаСкидки, "ЧДЦ=2"));
		КонецЕсли;
		
		Если МаксимальныйПроцентСкидки > 0 Тогда
			Элементы.ПроцентСкидки.КнопкаСпискаВыбора = Истина;
			Элементы.ПроцентСкидки.СписокВыбора.Добавить(МаксимальныйПроцентСкидки, Формат(МаксимальныйПроцентСкидки, "ЧДЦ=2"));
		КонецЕсли;
		
		Если МаксимальнаяСуммаНаценки > 0 Тогда
			Элементы.СуммаНаценки.КнопкаСпискаВыбора = Истина;
			Элементы.СуммаНаценки.СписокВыбора.Добавить(МаксимальнаяСуммаНаценки, Формат(МаксимальнаяСуммаНаценки, "ЧДЦ=2"));
		КонецЕсли;
		
		Если МаксимальныйПроцентНаценки > 0 Тогда
			Элементы.ПроцентНаценки.КнопкаСпискаВыбора = Истина;
			Элементы.ПроцентНаценки.СписокВыбора.Добавить(МаксимальныйПроцентНаценки, Формат(МаксимальныйПроцентНаценки, "ЧДЦ=2"));
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.ВариантПредоставления.СписокВыбора.Добавить(1, НСтр("ru = 'Скидка'"));
	Элементы.ВариантПредоставления.СписокВыбора.Добавить(2, НСтр("ru = 'Наценка'"));
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
		"ГруппаСуммаАвтоматическойСкидки",
		"Видимость",
		ИспользоватьАвтоматическиеСкидкиВПродажах И Не ЭтоЗакупки,
		Истина);
		
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, 
		"ГруппаСуммаАвтоматическойСкидкиНаценки",
		"Видимость",
		ИспользоватьАвтоматическиеСкидкиВПродажах И Не ЭтоЗакупки,
		Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодготовитьСпискиВыбора();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ОчиститьСообщения();
	Если ИспользоватьОграниченияРучныхСкидок Тогда
		
		ТекстСообщения = "";
		Если ВариантПредоставления = 1 Тогда
			Если СуммаРучнойСкидкиНаценки > МаксимальнаяСуммаСкидкиДляКонтроля Тогда
				ТекстСообщения = НСтр("ru = 'Сумма скидки превышает максимальное возможное значение:'") + " " + МаксимальнаяСуммаСкидкиДляКонтроля + " " + Валюта;
			КонецЕсли;
		КонецЕсли;
		
		Если ВариантПредоставления = 2 Тогда
			Если СуммаРучнойСкидкиНаценки > МаксимальнаяСуммаНаценкиДляКонтроля Тогда
				ТекстСообщения = НСтр("ru = 'Сумма наценки превышает максимальное возможное значение:'") + " " + МаксимальнаяСуммаНаценкиДляКонтроля + " " + Валюта;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекстСообщения) Тогда
			Ответ = Неопределено;

			ПоказатьВопрос(Новый ОписаниеОповещения("ОКЗавершение", ЭтотОбъект), ТекстСообщения + ". " + НСтр("ru = 'Продолжить?'"), РежимДиалогаВопрос.ОКОтмена);
            Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ОКФрагмент();
КонецПроцедуры

&НаКлиенте
Процедура ОКЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    Ответ = РезультатВопроса;
    Если Не Ответ = КодВозвратаДиалога.ОК Тогда
        Возврат;
    КонецЕсли;
    
    ОКФрагмент();

КонецПроцедуры

&НаКлиенте
Процедура ОКФрагмент()
    
    Если ВариантПредоставления = 1 Тогда
        Закрыть(СуммаРучнойСкидкиНаценки);
    Иначе
        Закрыть(-СуммаРучнойСкидкиНаценки);
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
Процедура ВариантПредоставленияПриИзменении(Элемент)
	
	Если ВариантПредоставления = 1 Тогда
		Элементы.ВариантыПредоставления.ТекущаяСтраница = Элементы.ВариантыПредоставления.ПодчиненныеЭлементы.Скидка;
		СуммаДокументаСУчетомСкидки = СуммаДокумента - СуммаАвтоматическойСкидкиНаценки - СуммаРучнойСкидкиНаценки;
		ТекущийЭлемент = Элементы.СуммаСкидки;
	Иначе
		Элементы.ВариантыПредоставления.ТекущаяСтраница = Элементы.ВариантыПредоставления.ПодчиненныеЭлементы.Наценка;
		СуммаДокументаСУчетомСкидки = СуммаДокумента - СуммаАвтоматическойСкидкиНаценки + СуммаРучнойСкидкиНаценки;
		ТекущийЭлемент = Элементы.СуммаНаценки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаСкидкиПриИзменении(Элемент)
	
	Если СуммаДокумента > 0 Тогда
		ПроцентРучнойСкидкиНаценки = СуммаРучнойСкидкиНаценки * 100 / СуммаДокумента;
	КонецЕсли;
	СуммаДокументаСУчетомСкидки = СуммаДокумента - СуммаАвтоматическойСкидкиНаценки - СуммаРучнойСкидкиНаценки;
	
	ПодготовитьСпискиВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентСкидкиПриИзменении(Элемент)
	
	Если ПроцентРучнойСкидкиНаценки = МаксимальныйПроцентСкидки Тогда
		СуммаРучнойСкидкиНаценки = МаксимальнаяСуммаСкидки;
	Иначе
		СуммаРучнойСкидкиНаценки    = ПроцентРучнойСкидкиНаценки * СуммаДокумента / 100;
	КонецЕсли;
	
	СуммаДокументаСУчетомСкидки = СуммаДокумента - СуммаАвтоматическойСкидкиНаценки - СуммаРучнойСкидкиНаценки;
	
	ПодготовитьСпискиВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаДокументаСУчетомСкидкиПриИзменении(Элемент)
	
	Если СуммаДокументаСУчетомСкидки > СуммаДокумента Тогда
		СуммаДокументаСУчетомСкидки = СуммаДокумента - СуммаАвтоматическойСкидкиНаценки;
		СуммаРучнойСкидкиНаценки = 0;
		ПроцентРучнойСкидкиНаценки = 0;
	Иначе
		СуммаРучнойСкидкиНаценки   = СуммаДокумента - СуммаАвтоматическойСкидкиНаценки - СуммаДокументаСУчетомСкидки;
		Если СуммаДокумента > 0 Тогда
			ПроцентРучнойСкидкиНаценки = СуммаРучнойСкидкиНаценки * 100 / СуммаДокумента;
		КонецЕсли;
	КонецЕсли;
	
	ПодготовитьСпискиВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаНаценкиПриИзменении(Элемент)

	Если СуммаДокумента > 0 Тогда
		ПроцентРучнойСкидкиНаценки = СуммаРучнойСкидкиНаценки * 100 / СуммаДокумента;
	КонецЕсли;
	СуммаДокументаСУчетомСкидки = СуммаДокумента - СуммаАвтоматическойСкидкиНаценки + СуммаРучнойСкидкиНаценки;
	
	ПодготовитьСпискиВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентНаценкиПриИзменении(Элемент)
	
	Если ПроцентРучнойСкидкиНаценки = МаксимальныйПроцентНаценки Тогда
		СуммаРучнойСкидкиНаценки = МаксимальнаяСуммаНаценки;
	Иначе
		СуммаРучнойСкидкиНаценки    = ПроцентРучнойСкидкиНаценки * СуммаДокумента / 100;
	КонецЕсли;
	
	СуммаДокументаСУчетомСкидки = СуммаДокумента + СуммаРучнойСкидкиНаценки - СуммаАвтоматическойСкидкиНаценки;
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаДокументаСУчетомНаценкиПриИзменении(Элемент)
	
	Если СуммаДокументаСУчетомСкидки < СуммаДокумента - СуммаАвтоматическойСкидкиНаценки Тогда
		СуммаДокументаСУчетомСкидки = СуммаДокумента - СуммаАвтоматическойСкидкиНаценки;
		СуммаРучнойСкидкиНаценки = 0;
		ПроцентРучнойСкидкиНаценки = 0;
	Иначе
		СуммаРучнойСкидкиНаценки   = СуммаДокументаСУчетомСкидки - (СуммаДокумента - СуммаАвтоматическойСкидкиНаценки);
		Если СуммаДокумента > 0 Тогда
			ПроцентРучнойСкидкиНаценки = СуммаРучнойСкидкиНаценки * 100 / СуммаДокумента;
		КонецЕсли;
	КонецЕсли;
	
	ПодготовитьСпискиВыбора();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаДокументаСУчетомСкидкиПодготовитьСписокВыбора()
	
	Элементы.СуммаДокументаСУчетомСкидки.СписокВыбора.Очистить();

	МаксимальноеТочностьОкругления = 100000;
	
	Варианты = Новый Массив;

	ТочностиОкругления = Новый Массив();
	ТочностьОкругления             = 0.01;
	ЧетноеПриращение               = Ложь;
	
	СоответствиеТочностей = Новый Соответствие;
	
	Пока ТочностьОкругления <= МаксимальноеТочностьОкругления Цикл
		
		Значение = ЦенообразованиеКлиентСервер.ОкруглитьЦену(СуммаДокументаСУчетомСкидки, ТочностьОкругления, ПредопределенноеЗначение("Перечисление.ВариантыОкругления.ВсегдаВПользуПредприятия"));
		Если Варианты.Найти(Значение) = Неопределено Тогда
			Варианты.Добавить(Значение);
			СоответствиеТочностей.Вставить(Значение, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '(+окр.до %1)'"), ТочностьОкругления));
		КонецЕсли;
		
		Значение = ЦенообразованиеКлиентСервер.ОкруглитьЦену(СуммаДокументаСУчетомСкидки, ТочностьОкругления, ПредопределенноеЗначение("Перечисление.ВариантыОкругления.ВсегдаВПользуКлиента"));
		Если Варианты.Найти(Значение) = Неопределено Тогда
			Варианты.Добавить(Значение);
			СоответствиеТочностей.Вставить(Значение, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '(-окр.до %1)'"), ТочностьОкругления));
		КонецЕсли;
	
		ТочностьОкругления = ТочностьОкругления * ?(ЧетноеПриращение, 2, 5);
		ЧетноеПриращение   = Не ЧетноеПриращение;
		
	КонецЦикла;
	
	Для Каждого Сумма Из Варианты Цикл
		
		Если Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СуммаДокумента - СуммаАвтоматическойСкидкиНаценки - Сумма > МаксимальнаяСуммаСкидки Тогда
			Продолжить;
		КонецЕсли;
		
		Если СуммаДокумента - СуммаАвтоматическойСкидкиНаценки - Сумма < 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СуммаДокументаСУчетомСкидки = Сумма Тогда
			Продолжить;
		КонецЕсли;
		
		Элементы.СуммаДокументаСУчетомСкидки.СписокВыбора.Добавить(Сумма, Формат(Сумма, "ЧДЦ=2")+ " " + СоответствиеТочностей.Получить(Сумма));
		
	КонецЦикла;
	
	Элементы.СуммаДокументаСУчетомСкидки.СписокВыбора.СортироватьПоЗначению();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаДокументаСУчетомНаценкиПодготовитьСписокВыбора()
	
	Элементы.СуммаДокументаСУчетомНаценки.СписокВыбора.Очистить();

	МаксимальноеТочностьОкругления = 100000;
	
	Варианты = Новый Массив;

	ТочностиОкругления = Новый Массив();
	ТочностьОкругления             = 0.01;
	ЧетноеПриращение               = Ложь;
	
	СоответствиеТочностей = Новый Соответствие;
	
	Пока ТочностьОкругления <= МаксимальноеТочностьОкругления Цикл
		
		Значение = ЦенообразованиеКлиентСервер.ОкруглитьЦену(СуммаДокументаСУчетомСкидки, ТочностьОкругления, ПредопределенноеЗначение("Перечисление.ВариантыОкругления.ВсегдаВПользуПредприятия"));
		Если Варианты.Найти(Значение) = Неопределено Тогда
			Варианты.Добавить(Значение);
			СоответствиеТочностей.Вставить(Значение, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '(+окр.до %1)'"), ТочностьОкругления));
		КонецЕсли;
		
		Значение = ЦенообразованиеКлиентСервер.ОкруглитьЦену(СуммаДокументаСУчетомСкидки, ТочностьОкругления, ПредопределенноеЗначение("Перечисление.ВариантыОкругления.ВсегдаВПользуКлиента"));
		Если Варианты.Найти(Значение) = Неопределено Тогда
			Варианты.Добавить(Значение);
			СоответствиеТочностей.Вставить(Значение, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '(-окр.до %1)'"), ТочностьОкругления));
		КонецЕсли;
		
		ТочностьОкругления = ТочностьОкругления * ?(ЧетноеПриращение, 2, 5);
		ЧетноеПриращение   = Не ЧетноеПриращение;
		
	КонецЦикла;
	
	Для Каждого Сумма Из Варианты Цикл
		
		Если Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Сумма - (СуммаДокумента - СуммаАвтоматическойСкидкиНаценки) > МаксимальнаяСуммаНаценки Тогда
			Продолжить;
		КонецЕсли;
		
		Если Сумма - (СуммаДокумента - СуммаАвтоматическойСкидкиНаценки) < 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СуммаДокументаСУчетомСкидки = Сумма Тогда
			Продолжить;
		КонецЕсли;
		
		Элементы.СуммаДокументаСУчетомНаценки.СписокВыбора.Добавить(Сумма, Формат(Сумма, "ЧДЦ=2")+ " " + СоответствиеТочностей.Получить(Сумма));
		
	КонецЦикла;
	
	Элементы.СуммаДокументаСУчетомНаценки.СписокВыбора.СортироватьПоЗначению();

КонецПроцедуры

&НаКлиенте
Процедура СуммаСкидкиПодготовитьСписокВыбора()
	
	Элементы.СуммаСкидки.СписокВыбора.Очистить();
	
	Если МаксимальнаяСуммаСкидки > 0 Тогда
		Элементы.СуммаСкидки.СписокВыбора.Добавить(МаксимальнаяСуммаСкидки, Формат(МаксимальнаяСуммаСкидки, "ЧДЦ=2"));
	КонецЕсли;

	МаксимальноеТочностьОкругления = 100000;
	
	Варианты = Новый Массив;

	ТочностиОкругления = Новый Массив();
	ТочностьОкругления             = 0.01;
	ЧетноеПриращение               = Ложь;
	
	СоответствиеТочностей = Новый Соответствие;
	
	Пока ТочностьОкругления <= МаксимальноеТочностьОкругления Цикл
		
		Значение = ЦенообразованиеКлиентСервер.ОкруглитьЦену(СуммаДокументаСУчетомСкидки, ТочностьОкругления, ПредопределенноеЗначение("Перечисление.ВариантыОкругления.ВсегдаВПользуПредприятия"));
		Если Варианты.Найти(Значение) = Неопределено Тогда
			Варианты.Добавить(Значение);
			СоответствиеТочностей.Вставить(Значение, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '(окр.до %1)'"), Значение));
		КонецЕсли;
		
		Значение = ЦенообразованиеКлиентСервер.ОкруглитьЦену(СуммаДокументаСУчетомСкидки, ТочностьОкругления, ПредопределенноеЗначение("Перечисление.ВариантыОкругления.ПоАрифметическимПравилам"));
		Если Варианты.Найти(Значение) = Неопределено Тогда
			Варианты.Добавить(Значение);
			СоответствиеТочностей.Вставить(Значение, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '(окр.до %1)'"), Значение));
		КонецЕсли;
		
		ТочностьОкругления = ТочностьОкругления * ?(ЧетноеПриращение, 2, 5);
		ЧетноеПриращение   = Не ЧетноеПриращение;
		
	КонецЦикла;
	
	Для Каждого Сумма Из Варианты Цикл
		
		Если Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаСкидки =  СуммаДокумента - СуммаАвтоматическойСкидкиНаценки - Сумма;
		
		Если СуммаСкидки > МаксимальнаяСуммаСкидки Тогда
			Продолжить;
		КонецЕсли;
		
		Если СуммаСкидки < 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СуммаДокументаСУчетомСкидки = Сумма Тогда
			Продолжить;
		КонецЕсли;
		
		Элементы.СуммаСкидки.СписокВыбора.Добавить(СуммаСкидки, Формат(СуммаСкидки, "ЧДЦ=2; ЧН=0.00")+ " " + СоответствиеТочностей.Получить(Сумма));
		
	КонецЦикла;
	
	Элементы.СуммаСкидки.СписокВыбора.СортироватьПоЗначению();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаНаценкиПодготовитьСписокВыбора()
	
	Элементы.СуммаНаценки.СписокВыбора.Очистить();
	
	Если МаксимальнаяСуммаСкидки > 0 Тогда
		Элементы.СуммаНаценки.СписокВыбора.Добавить(МаксимальнаяСуммаСкидки, Формат(МаксимальнаяСуммаСкидки, "ЧДЦ=2"));
	КонецЕсли;

	МаксимальноеТочностьОкругления = 100000;
	
	Варианты = Новый Массив;

	ТочностиОкругления = Новый Массив();
	ТочностьОкругления             = 0.01;
	ЧетноеПриращение               = Ложь;
	
	СоответствиеТочностей = Новый Соответствие;
	
	Пока ТочностьОкругления <= МаксимальноеТочностьОкругления Цикл
		
		Значение = ЦенообразованиеКлиентСервер.ОкруглитьЦену(СуммаДокументаСУчетомСкидки, ТочностьОкругления, Истина);
		Если Варианты.Найти(Значение) = Неопределено Тогда
			Варианты.Добавить(Значение);
			СоответствиеТочностей.Вставить(Значение, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '(окр.до %1)'"), Значение));
		КонецЕсли;
		
		Значение = ЦенообразованиеКлиентСервер.ОкруглитьЦену(СуммаДокументаСУчетомСкидки, ТочностьОкругления, Ложь);
		Если Варианты.Найти(Значение) = Неопределено Тогда
			Варианты.Добавить(Значение);
			СоответствиеТочностей.Вставить(Значение, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '(окр.до %1)'"), Значение));
		КонецЕсли;
		
		ТочностьОкругления = ТочностьОкругления * ?(ЧетноеПриращение, 2, 5);
		ЧетноеПриращение   = Не ЧетноеПриращение;
		
	КонецЦикла;
	
	Для Каждого Сумма Из Варианты Цикл
		
		Если Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СуммаНаценки = Сумма - (СуммаДокумента - СуммаАвтоматическойСкидкиНаценки);
		
		Если СуммаНаценки > МаксимальнаяСуммаНаценки Тогда
			Продолжить;
		КонецЕсли;
		
		Если СуммаНаценки < 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если СуммаДокументаСУчетомСкидки = Сумма Тогда
			Продолжить;
		КонецЕсли;
		
		Элементы.СуммаНаценки.СписокВыбора.Добавить(СуммаНаценки, Формат(СуммаНаценки, "ЧДЦ=2; ЧН=0.00")+ " " + СоответствиеТочностей.Получить(Сумма));
		
	КонецЦикла;
	
	Элементы.СуммаНаценки.СписокВыбора.СортироватьПоЗначению();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьСпискиВыбора()
	
	СуммаДокументаСУчетомСкидкиПодготовитьСписокВыбора();
	СуммаДокументаСУчетомНаценкиПодготовитьСписокВыбора();
	СуммаСкидкиПодготовитьСписокВыбора();
	СуммаНаценкиПодготовитьСписокВыбора();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СуммаСкидки.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СуммаРучнойСкидкиНаценки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("МаксимальнаяСуммаСкидки");

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИспользоватьОграниченияРучныхСкидок");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.FireBrick);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПроцентСкидки.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПроцентРучнойСкидкиНаценки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("МаксимальныйПроцентСкидки");

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИспользоватьОграниченияРучныхСкидок");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.FireBrick);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СуммаНаценки.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СуммаРучнойСкидкиНаценки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("МаксимальнаяСуммаНаценки");

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИспользоватьОграниченияРучныхСкидок");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.FireBrick);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПроцентНаценки.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПроцентРучнойСкидкиНаценки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
	ОтборЭлемента.ПравоеЗначение = Новый ПолеКомпоновкиДанных("МаксимальныйПроцентНаценки");

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИспользоватьОграниченияРучныхСкидок");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.FireBrick);

КонецПроцедуры

#КонецОбласти
