#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьСписокВидыУпаковок();
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Настройки.Очистить();
	
	СохраненнаяТаблицаНастроек = Настройки.Получить("ТаблицаВидыУпаковок");
	Если СохраненнаяТаблицаНастроек = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(СохраненнаяТаблицаНастроек) <> Тип("ТаблицаЗначений") Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из ТаблицаВидыУпаковок Цикл
		НайденнаяСтрока = СохраненнаяТаблицаНастроек.Найти(СтрокаТЧ.ВидУпаковки, "ВидУпаковки");
		Если НайденнаяСтрока = Неопределено Тогда
			СтрокаТЧ.Выбрана = Ложь;
		Иначе
			СтрокаТЧ.Выбрана = НайденнаяСтрока.Выбрана;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	СохраненыНастройки = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	Для Каждого СтрокаТЧ Из ТаблицаВидыУпаковок Цикл
		СтрокаТЧ.Выбрана = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВсе(Команда)
	
	Для Каждого СтрокаТЧ Из ТаблицаВидыУпаковок Цикл
		СтрокаТЧ.Выбрана = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	ВидыУпаковок    = Новый Массив;
	РезультатВыбора = Новый Структура;
	РезультатВыбора.Вставить("ВидыУпаковок", ВидыУпаковок);
	РезультатВыбора.Вставить("СохраненыНастройки", СохраненыНастройки);
	РезультатВыбора.Вставить("Представление", "");
	
	Представление = Новый Массив;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Выбрана", Истина);
	НайденныеСтроки = ТаблицаВидыУпаковок.НайтиСтроки(ПараметрыОтбора);
	
	
	Для Каждого СтрокаТЧ Из НайденныеСтроки Цикл
		РезультатВыбора.ВидыУпаковок.Добавить(СтрокаТЧ.ВидУпаковки);
		Представление.Добавить(СтрокаТЧ.Представление);
	КонецЦикла;
	
	РезультатВыбора.Представление = СтрСоединить(Представление, ";");
	
	ОповеститьОВыборе(РезультатВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокВидыУпаковок()
	
	НоваяСтрока = ТаблицаВидыУпаковок.Добавить();
	НоваяСтрока.ВидУпаковки = Перечисления.ВидыУпаковокИС.Потребительская;
	НоваяСтрока.Представление = Строка(НоваяСтрока.ВидУпаковки);
	Если ОбщегоНазначенияИСКлиентСервер.ВидПродукцииИспользуетГрупповыеУпаковки(Параметры.ВидПродукции) Тогда
		НоваяСтрока = ТаблицаВидыУпаковок.Добавить();
		НоваяСтрока.ВидУпаковки = Перечисления.ВидыУпаковокИС.Групповая;
		НоваяСтрока.Представление = Строка(НоваяСтрока.ВидУпаковки);
	КонецЕсли;
	Если ОбщегоНазначенияИСКлиентСервер.ВидПродукцииИспользуетНаборы(Параметры.ВидПродукции) Тогда
		НоваяСтрока = ТаблицаВидыУпаковок.Добавить();
		НоваяСтрока.ВидУпаковки = Перечисления.ВидыУпаковокИС.Набор;
		НоваяСтрока.Представление = Строка(НоваяСтрока.ВидУпаковки);
	КонецЕсли;
	НоваяСтрока = ТаблицаВидыУпаковок.Добавить();
	НоваяСтрока.ВидУпаковки = Перечисления.ВидыУпаковокИС.Логистическая;
	НоваяСтрока.Представление = Строка(НоваяСтрока.ВидУпаковки);
	
	Если ЗначениеЗаполнено(Параметры.ВидыУпаковок) Тогда
		Для Каждого СтрокаТаблицы Из ТаблицаВидыУпаковок Цикл
			СтрокаТаблицы.Выбрана = Параметры.ВидыУпаковок.Найти(СтрокаТаблицы.ВидУпаковки) <> Неопределено;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

