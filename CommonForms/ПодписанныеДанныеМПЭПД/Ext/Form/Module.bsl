
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РезультатПроверки = Неопределено;
	Если Параметры.Свойство("РезультатПроверки", РезультатПроверки) = Ложь Тогда
		Отказ = Истина;	
	КонецЕсли;
	
	СвойстваСертификата = Неопределено;
	Если Параметры.Свойство("СвойстваСертификата", СвойстваСертификата) = Ложь Тогда
		Отказ = Истина;		
	КонецЕсли;
	
	ПрефиксТитула = Неопределено;
	Если Параметры.Свойство("ПрефиксТитула", ПрефиксТитула) = Ложь Тогда
		Отказ = Истина;		
	КонецЕсли;
	
	УИДМинтранс = Неопределено;
	Параметры.Свойство("УИДМинтранс", УИДМинтранс);
	
	ИмяМакета = "ШтампЭП_%1";

	МакетЭП = Обработки.КриптографияБЭД.ПолучитьМакет(
		СтрШаблон(ИмяМакета, ОбщегоНазначения.КодОсновногоЯзыка()));
	МакетЭП.КодЯзыка = Метаданные.Языки.Русский.КодЯзыка;
	
	КоличествоКолонокПечатнойФормы = МакетЭП.ШиринаТаблицы;
	
	ПредставлениеДанных.Вывод = ИспользованиеВывода.Разрешить;
	
	ДвоичныеДанныеДокумента = Неопределено;
	НомерСтрокиТД = 0;
	НомерКолонкиТД = 1;
	Если Параметры.Свойство("ДвоичныеДанныеДокумента", ДвоичныеДанныеДокумента) Тогда
		СтрокаJSON = ПолучитьСтрокуИзДвоичныхДанных(ДвоичныеДанныеДокумента);
		
		ЧтениеJSON = Новый ЧтениеJSON();
		ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
		Данные = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();
		
		ТекстЗаголовка = Неопределено;
		Если Данные.Свойство("ПредставлениеПроектаДокумента", ТекстЗаголовка) Тогда
			НомерСтрокиТД = НомерСтрокиТД + 1;
			ОбластьЗаголовок = ПредставлениеДанных.Область(НомерСтрокиТД, НомерКолонкиТД, НомерСтрокиТД, НомерКолонкиТД + КоличествоКолонокПечатнойФормы - 1);
			ОбластьЗаголовок.Объединить();
			ОбластьЗаголовок.РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
			ОбластьЗаголовок.Текст = ТекстЗаголовка;
			ОбластьЗаголовок.Шрифт = ШрифтыСтиля.ШрифтЗаголовка0ТабличногоПоляЭПД;
			ОбластьЗаголовок.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 2);
			НомерСтрокиТД = НомерСтрокиТД + 1;
		КонецЕсли;
		
		Для Каждого КиЗ Из Данные Цикл
			Если СтрНачинаетсяС(КиЗ.Ключ, ПрефиксТитула) = Ложь Тогда
				Продолжить;
			КонецЕсли;
			ТекстЗначение = КиЗ.Значение;
			Если ЗначениеЗаполнено(ТекстЗначение) = Ложь
				Или ТекстЗначение = "0001-01-01T00:00:00" Тогда
					ТекстЗначение = "—";
			КонецЕсли;
			НомерСтрокиТД = НомерСтрокиТД + 1;
			ОбластьЗначения = ПредставлениеДанных.Область(НомерСтрокиТД, НомерКолонкиТД, НомерСтрокиТД, НомерКолонкиТД + КоличествоКолонокПечатнойФормы - 1);
			ОбластьЗначения.Объединить();
			ОбластьЗначения.РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
			ОбластьЗначения.Текст = ТекстЗначение;
			ОбластьЗначения.ОтступСверху = 5;
			ОбластьЗначения.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
			ОбластьЗначения.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
			ОбластьЗначения.Шрифт = ШрифтыСтиля.ШрифтЗначенияТабличногоПоляЭПД;
			// Подпись значения
			НомерСтрокиТД = НомерСтрокиТД + 1;
			ОбластьПодписиЗначения = ПредставлениеДанных.Область(НомерСтрокиТД, НомерКолонкиТД, НомерСтрокиТД, НомерКолонкиТД + КоличествоКолонокПечатнойФормы - 1);
			ОбластьПодписиЗначения.Объединить();
			ОбластьПодписиЗначения.РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
			ОбластьПодписиЗначения.Текст = "(" + нрег(ОбменСГИСЭПД.РазделитьСтрокуПробелами(КиЗ.Ключ, , ПрефиксТитула)) + ")";
			ОбластьПодписиЗначения.Шрифт = ШрифтыСтиля.ШрифтПодписиТабличногоПоляЭПД;
			ОбластьПодписиЗначения.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(РезультатПроверки.ДатаПодписиИзМетки) Тогда
		ДатаПодписи = РезультатПроверки.ДатаПодписиИзМетки;
	Иначе
		ДатаПодписи = РезультатПроверки.НеподтвержденнаяДатаПодписи;
	КонецЕсли;
	
	Если РезультатПроверки.ПодписьВерна = Истина Тогда
		ТекстОтметки = "Подпись верна";	
	Иначе
		ТекстОтметки = РезультатПроверки.Результат;
	КонецЕсли;
	
	ЗначенияПараметров = Новый Структура;
	ЗначенияПараметров.Вставить("ПредставлениеПодписи", "Пользователь");
	ЗначенияПараметров.Вставить("ОрганизацияПодписант", СвойстваСертификата.КомуВыдан);
	ЗначенияПараметров.Вставить("НомерСертификата", ПолучитьHexСтрокуИзДвоичныхДанных(СвойстваСертификата.СерийныйНомер));
	ЗначенияПараметров.Вставить("СрокДействия", СвойстваСертификата.ДействителенДо);
	ЗначенияПараметров.Вставить("ДатаПодписи", ДатаПодписи);
	ЗначенияПараметров.Вставить("ТекстОтметки", ТекстОтметки);
	
	ОбластьШапка = МакетЭП.ПолучитьОбласть("ШтампТабличныйШапка|ОбластьШтампТабличный");
	ОбластьШапка.Параметры.ДокументПодписан = "Данные подписаны в программе Госключ";
	ОбластьШапка.Область(4,5).Текст = "ФИО";
	ПредставлениеДанных.Вывести(ОбластьШапка);
	
	ОбластьСтрока = МакетЭП.ПолучитьОбласть("ШтампТабличныйСтрока|ОбластьШтампТабличный");
	Если РезультатПроверки.ПодписьВерна = Ложь Тогда
		Ячейки = ОбластьСтрока.НайтиТекст("[ДатаПодписи]");
		Если Ячейки <> Неопределено Тогда
			Ячейки.ЦветТекста = ЦветаСтиля.ЦветОтрицательногоЧисла;
		КонецЕсли;		
		Ячейки = ОбластьСтрока.НайтиТекст("[НомерСертификата]");
		Если Ячейки <> Неопределено Тогда
			Ячейки.ЦветТекста = ЦветаСтиля.ЦветОтрицательногоЧисла;
		КонецЕсли;			
		Ячейки = ОбластьСтрока.НайтиТекст("ОрганизацияПодписант");
		Если Ячейки <> Неопределено Тогда
			Ячейки.ЦветТекста = ЦветаСтиля.ЦветОтрицательногоЧисла;
		КонецЕсли;	
	КонецЕсли;
	ОбластьСтрока.Параметры.Заполнить(ЗначенияПараметров);
	ПредставлениеДанных.Вывести(ОбластьСтрока);
	
	ОбластьРазделитель = МакетЭП.ПолучитьОбласть("ШтампТабличныйРазделитель|ОбластьШтампТабличный");
	ПредставлениеДанных.Вывести(ОбластьРазделитель);
	
	ОбластьПодвал = МакетЭП.ПолучитьОбласть("ШтампТабличныйПодвал|ОбластьШтампТабличный");
	ОбластьПодвал.Параметры.ИдентификаторДокумента = "Минтранс ID: " + УИДМинтранс;
	ПредставлениеДанных.Вывести(ОбластьПодвал);
	
КонецПроцедуры
