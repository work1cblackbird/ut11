#Область ОписаниеПеременных

&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

&НаКлиенте
Перем КоличествоДоИзменения;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоАдресВременногоХранилища(Параметры.АдресУточнениеКоэффициентовУпаковок) Тогда
		
		ВходящаяТаблицаОписаниеGTIN = ПолучитьИзВременногоХранилища(Параметры.АдресУточнениеКоэффициентовУпаковок);
		Если ВходящаяТаблицаОписаниеGTIN.Количество() = 0 Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Отсутствуют данные для уточнения'"),,,, Отказ);
			Возврат;
		КонецЕсли;
		
	ИначеЕсли Параметры.ДанныеПоискаGTIN <> Неопределено Тогда
		
		ПараметрыДанныхУточнения = Новый Структура("ЭтоНастройкаКарточкиНоменклатуры", Параметры.ЭтоНастройкаКарточкиНоменклатуры);
		
		ВходящаяТаблицаОписаниеGTIN = ИнтеграцияИСМП.ДанныеДляУточненияКоэффициентовУпаковок(
			Параметры.ДанныеПоискаGTIN,
			Параметры.ИспользоватьХарактеристики,
			ПараметрыДанныхУточнения);
		
		Если ВходящаяТаблицаОписаниеGTIN.Количество() = 0 Тогда
			ДанныеПредставления = Новый Массив();
			Для Каждого СтрокаДанных Из Параметры.ДанныеПоискаGTIN Цикл
				Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаДанных, "Характеристика") Тогда
					Характеристика = СтрокаДанных.Характеристика;
				КонецЕсли;
				ДанныеПредставления.Добавить(
					ОбщегоНазначенияИС.ПредставлениеНоменклатуры(
						СтрокаДанных.Номенклатура,
						Характеристика));
			КонецЦикла;
			ОбщегоНазначения.СообщитьПользователю(
				СтрШаблон(
					НСтр("ru = 'Не найдено ни одного GTIN для %1'"),
					СтрСоединить(ДанныеПредставления, ", ")),,,,
				Отказ);
			Возврат;
		КонецЕсли;
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Внутреняя ошибка. Не верные параметры открытия формы уточнения коэффициентов упаковок'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ВидПродукции) Тогда
		ВидПродукции = Параметры.ВидПродукции;
	ИначеЕсли ВходящаяТаблицаОписаниеGTIN.Количество() Тогда
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ВходящаяТаблицаОписаниеGTIN[0], "ВидПродукции") Тогда
			ВидПродукции = ВходящаяТаблицаОписаниеGTIN[0].ВидПродукции;
		ИначеЕсли ЗначениеЗаполнено(ВходящаяТаблицаОписаниеGTIN[0].Номенклатура) Тогда
			ВидПродукции = ИнтеграцияИС.ВидПродукцииПоНоменклатуре(ВходящаяТаблицаОписаниеGTIN[0].Номенклатура);
		КонецЕсли;
	КонецЕсли;
	
	УточнениеВидаУпаковки = Параметры.УточнениеВидаУпаковки;
	ДоступноРедактированиеВидаУпаковки = УточнениеВидаУпаковки
		Или Параметры.ДоступноРедактированиеВидаУпаковки;
	
	ТолькоПотребительскиеУпаковки = Истина;
	
	НомерСтроки = 0;
	Для Каждого СтрокаДанных Из ВходящаяТаблицаОписаниеGTIN Цикл
		
		НомерСтроки = НомерСтроки + 1;
		
		НоваяСтрока = ОписаниеGTIN.Добавить();
		НоваяСтрока.НомерСтроки = НомерСтроки;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
		
		Если НоваяСтрока.ВидУпаковки = Перечисления.ВидыУпаковокИС.Потребительская
			И НоваяСтрока.КоличествоПотребительскихУпаковок <> 1 Тогда
			НоваяСтрока.КоличествоПотребительскихУпаковок = 1;
		КонецЕсли;
		
		Если НоваяСтрока.Коэффициент = 0 Тогда
			НоваяСтрока.Коэффициент = 1;
		КонецЕсли;
		
		Если НоваяСтрока.КоличествоВПотребительскойУпаковке = 0 Тогда
			НоваяСтрока.КоличествоВПотребительскойУпаковке = 1;
		КонецЕсли;
		
		Если НоваяСтрока.ВидУпаковки <> Перечисления.ВидыУпаковокИС.Потребительская Тогда
			ТолькоПотребительскиеУпаковки = Ложь;
		КонецЕсли;
		
		НоваяСтрока.ДоступноРедактированиеВидаУпаковки = ДоступноРедактированиеВидаУпаковки
			Или Не ЗначениеЗаполнено(СтрокаДанных.ВидУпаковки);
		
	КонецЦикла;
	
	НастроитьЭлементыФормыНаСервере();
	
	Объект = Новый Структура("Номер, Дата", "", ТекущаяДатаСеанса());
	ПараметрыУказанияСерий = ИнтеграцияИС.ПараметрыУказанияСерийФормыОбъекта(Объект, Документы.МаркировкаТоваровИСМП);
	
	ИнтеграцияИСПереопределяемый.ЗаполнитьСлужебныеРеквизитыВКоллекции(ЭтотОбъект, ОписаниеGTIN);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	СобытияФормИСМПКлиентПереопределяемый.ОбработкаВыбораСерии(
		ЭтотОбъект, ВыбранноеЗначение, ИсточникВыбора, ПараметрыУказанияСерий);
	
	СобытияФормИСМПКлиентПереопределяемый.ОбработкаВыбора(ЭтотОбъект, ВыбранноеЗначение, ИсточникВыбора);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОписаниеGTINВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если УточнениеВидаУпаковки Тогда
		СобытияФормИСМПКлиент.ВыборЭлементаТабличнойЧастиОткрытьФормуЭлемента(ЭтотОбъект, Элемент, Поле);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеGTINПриАктивизацииЯчейки(Элемент)
	
	Если Элемент.ТекущийЭлемент = Элементы.ОписаниеGTINВидУпаковки Тогда
		ТекущиеДанные = Элемент.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			Потребительская = ПредопределенноеЗначение("Перечисление.ВидыУпаковокИС.Потребительская");
			ДоступенЛюбойВидУпаковки = Не ЗначениеЗаполнено(ТекущиеДанные.Упаковка);
			ТолькоПотребительскаяУпаковка = Не ДоступенЛюбойВидУпаковки
				И ТекущиеДанные.Коэффициент / ТекущиеДанные.КоличествоВПотребительскойУпаковке = 1;
				
			Элементы.ОписаниеGTINВидУпаковки.СписокВыбора.Очистить();
			Для Каждого ЭлементСписка Из ВидУпаковкиСписокВыбора Цикл
				Если ДоступенЛюбойВидУпаковки
					Или ТолькоПотребительскаяУпаковка И ЭлементСписка.Значение = Потребительская
					Или Не ТолькоПотребительскаяУпаковка И ЭлементСписка.Значение <> Потребительская Тогда
					Элементы.ОписаниеGTINВидУпаковки.СписокВыбора.Добавить(
						ЭлементСписка.Значение, ЭлементСписка.Представление);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеGTINНоменклатураПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОписаниеGTIN.ТекущиеДанные;
	СобытияФормИСМПКлиентПереопределяемый.ПриИзмененииНоменклатуры(
		ЭтотОбъект, ТекущиеДанные, КэшированныеЗначения, ПараметрыУказанияСерий);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеGTINНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СобытияФормИСКлиентПереопределяемый.ПриНачалеВыбораНоменклатуры(Элемент, ВидПродукции, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеGTINУпаковкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ОписаниеGTIN.ТекущиеДанные;
	СобытияФормИСКлиентПереопределяемый.ПриНачалеВыбораУпаковки(Элемент, ТекущиеДанные.Номенклатура, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеGTINУпаковкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОписаниеGTIN.ТекущиеДанные;
	
	ДанныеСтроки = Новый Структура;
	ДанныеСтроки.Вставить("Номенклатура",       ТекущиеДанные.Номенклатура);
	ДанныеСтроки.Вставить("Упаковка",           ТекущиеДанные.Упаковка);
	ДанныеСтроки.Вставить("КоличествоУпаковок", 1);
	ДанныеСтроки.Вставить("Количество",         0);
	
	СобытияФормИСМПКлиентПереопределяемый.ПриИзмененииКоличества(ЭтотОбъект, ДанныеСтроки, КэшированныеЗначения);
	
	ТекущиеДанные.Коэффициент = ДанныеСтроки.Количество;
	
	Если ТекущиеДанные.ВидУпаковки = ПредопределенноеЗначение("Перечисление.ВидыУпаковокИС.Потребительская") Тогда
		ТекущиеДанные.КоличествоПотребительскихУпаковок = 1;
	Иначе
		ТекущиеДанные.КоличествоПотребительскихУпаковок = ТекущиеДанные.Коэффициент / ТекущиеДанные.КоличествоВПотребительскойУпаковке;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеGTINХарактеристикаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОписаниеGTIN.ТекущиеДанные;
	
	СобытияФормИСМПКлиентПереопределяемый.ПриИзмененииХарактеристики(ЭтотОбъект, ТекущиеДанные, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеGTINХарактеристикаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ОписаниеGTIN.ТекущиеДанные;
	СобытияФормИСМПКлиентПереопределяемый.ПриНачалеВыбораХарактеристики(
		Элемент, ТекущиеДанные, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеGTINСерияПриИзменении(Элемент)
	
	СобытияФормИСМПКлиентПереопределяемый.ПриИзмененииСерии(
		ЭтотОбъект, Элементы.ОписаниеGTIN.ТекущиеДанные, КэшированныеЗначения, ПараметрыУказанияСерий);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеGTINСерияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИнтеграцияИСКлиент.ОткрытьПодборСерий(ЭтаФорма,, Элемент.ТекстРедактирования, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеGTINВидУпаковкиПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОписаниеGTIN.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ВидУпаковки = ПредопределенноеЗначение("Перечисление.ВидыУпаковокИС.Потребительская") Тогда
		ТекущиеДанные.КоличествоПотребительскихУпаковок = 1;
		КоличествоДоИзменения = ТекущиеДанные.КоличествоПотребительскихУпаковок;
	ИначеЕсли ТекущиеДанные.КоличествоПотребительскихУпаковок = 1
		И ЗначениеЗаполнено(ТекущиеДанные.ВидУпаковки) Тогда
		ТекущиеДанные.КоличествоПотребительскихУпаковок = 0;
		КоличествоДоИзменения = ТекущиеДанные.КоличествоПотребительскихУпаковок;
	ИначеЕсли ТекущиеДанные.КоличествоПотребительскихУпаковок > 0
		И Не ЗначениеЗаполнено(ТекущиеДанные.ВидУпаковки)
		И Не ЗначениеЗаполнено(ТекущиеДанные.Упаковка) Тогда
		ТекущиеДанные.КоличествоПотребительскихУпаковок = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеGTINПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	КоличествоДоИзменения = Элементы.ОписаниеGTIN.ТекущиеДанные.КоличествоПотребительскихУпаковок;
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеGTINПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не (НоваяСтрока И ОтменаРедактирования) Тогда
		ТекущиеДанные = Элементы.ОписаниеGTIN.ТекущиеДанные;
		Если ТекущиеДанные.КоличествоПотребительскихУпаковок = 1
			И ЗначениеЗаполнено(ТекущиеДанные.ВидУпаковки)
			И ТекущиеДанные.ВидУпаковки <> ПредопределенноеЗначение("Перечисление.ВидыУпаковокИС.Потребительская") Тогда
			СписокДействий = Новый СписокЗначений;
			СписокДействий.Добавить("ПродолжитьВвод", "Продолжить ввод");
			СписокДействий.Добавить("ОтменитьВвод", "Отменить ввод");
			ПоказатьВопрос(Новый ОписаниеОповещения("ВопросИзменениеКоличества", ЭтотОбъект),
				НСтр("ru = 'Для указанного вида упаковки количество потребительских упаковок не может быть равно единице'"),
				СписокДействий);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готово(Команда)
	
	Если Не ПроверитьЗаполнениеТаблицыФормы() Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьДанные();
	
	Закрыть("УточненыКоэффициентыУпаковокИСМП");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	СобытияФормИСПереопределяемый.УстановитьУсловноеОформлениеЕдиницИзмерения(ЭтотОбъект, "ОписаниеGTINЕдиницаИзмерения", "ОписаниеGTIN.Упаковка");
	СобытияФормИСПереопределяемый.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтотОбъект, "ОписаниеGTINХарактеристика", "ОписаниеGTIN.ХарактеристикиИспользуются");
	СобытияФормИСПереопределяемый.УстановитьУсловноеОформлениеСерийНоменклатуры(ЭтотОбъект, "ОписаниеGTINСерия", "ОписаниеGTIN.СтатусУказанияСерий", "ОписаниеGTIN.ТипНоменклатуры");
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINНоменклатура.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINНоменклатура.ПутьКДанным);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст",      Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINПредставлениеСодержимоеУпаковки.ПутьКДанным));
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINВидУпаковки.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINДоступноРедактированиеВидаУпаковки.ПутьКДанным);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINВидУпаковки.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("УточнениеВидаУпаковки");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINВидУпаковки.ПутьКДанным);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINКоличествоПотребительскихУпаковок.Имя);
	
	ГруппаОтбора1 = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаОтбора1_1 = ГруппаОтбора1.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора1_1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента = ГруппаОтбора1_1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("УточнениеВидаУпаковки");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ОтборЭлемента = ГруппаОтбора1_1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINВидУпаковки.ПутьКДанным);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ОтборЭлемента = ГруппаОтбора1_1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINВидУпаковки.ПутьКДанным);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ВидыУпаковокИС.Набор;
	
	ОтборЭлемента = ГруппаОтбора1_1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINКоличествоПотребительскихУпаковок.ПутьКДанным);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	ГруппаОтбора1_2 = ГруппаОтбора1.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора1_2.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента = ГруппаОтбора1_2.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("УточнениеВидаУпаковки");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ОтборЭлемента = ГруппаОтбора1_2.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINВидУпаковки.ПутьКДанным);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ВидыУпаковокИС.Набор;
	
	ОтборЭлемента = ГруппаОтбора1_2.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINКоличествоПотребительскихУпаковок.ПутьКДанным);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINКоличествоПотребительскихУпаковок.Имя);
	
	ГруппаОтбора1 = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINУпаковка.ПутьКДанным);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINВидУпаковки.ПутьКДанным);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINВидУпаковки.ПутьКДанным);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ВидыУпаковокИС.Потребительская;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	//
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINКоличествоПотребительскихУпаковок.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINВидУпаковки.ПутьКДанным);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ВидыУпаковокИС.Набор;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINКоличествоПотребительскихУпаковок.ПутьКДанным);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = 'Определяется вариантом комплектации'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаНеТребуетВниманияГосИС);
	
	//
	СписокТабачнойПродукции = Новый СписокЗначений;
	СписокТабачнойПродукции.Добавить(Перечисления.ВидыПродукцииИС.Табак);
	СписокТабачнойПродукции.Добавить(Перечисления.ВидыПродукцииИС.АльтернативныйТабак);
	СписокТабачнойПродукции.Добавить(Перечисления.ВидыПродукцииИС.НикотиносодержащаяПродукция);
	
	СписокДухи = Новый СписокЗначений;
	СписокДухи.Добавить(Перечисления.ВидыПродукцииИС.Духи);
	
	ЭлементыОформления = Новый Массив;
	
	ЭлементОформления = Новый Структура;
	ЭлементОформления.Вставить("ВидыПродукции", Неопределено);
	ЭлементОформления.Вставить("ВидУпаковки",   Перечисления.ВидыУпаковокИС.Потребительская);
	ЭлементОформления.Вставить("Представление", НСтр("ru = 'Потребительская'"));
	ЭлементыОформления.Добавить(ЭлементОформления);
	
	ЭлементОформления = Новый Структура;
	ЭлементОформления.Вставить("ВидыПродукции", Неопределено);
	ЭлементОформления.Вставить("ВидУпаковки",   Перечисления.ВидыУпаковокИС.Логистическая);
	ЭлементОформления.Вставить("Представление", НСтр("ru = 'Логистическая'"));
	ЭлементыОформления.Добавить(ЭлементОформления);

	ЭлементОформления = Новый Структура;
	ЭлементОформления.Вставить("ВидыПродукции", Неопределено);
	ЭлементОформления.Вставить("ВидУпаковки",   Перечисления.ВидыУпаковокИС.Групповая);
	ЭлементОформления.Вставить("Представление", НСтр("ru = 'Групповая'"));
	ЭлементыОформления.Добавить(ЭлементОформления);
	
	ЭлементОформления = Новый Структура;
	ЭлементОформления.Вставить("ВидыПродукции", СписокДухи);
	ЭлементОформления.Вставить("ВидУпаковки",   Перечисления.ВидыУпаковокИС.Потребительская);
	ЭлементОформления.Вставить("Представление", НСтр("ru = 'Флакон'"));
	ЭлементыОформления.Добавить(ЭлементОформления);
	
	ЭлементОформления = Новый Структура;
	ЭлементОформления.Вставить("ВидыПродукции", СписокТабачнойПродукции);
	ЭлементОформления.Вставить("ВидУпаковки",   Перечисления.ВидыУпаковокИС.Потребительская);
	ЭлементОформления.Вставить("Представление", НСтр("ru = 'Пачка'"));
	ЭлементыОформления.Добавить(ЭлементОформления);
	
	ЭлементОформления = Новый Структура;
	ЭлементОформления.Вставить("ВидыПродукции", СписокТабачнойПродукции);
	ЭлементОформления.Вставить("ВидУпаковки",   Перечисления.ВидыУпаковокИС.Логистическая);
	ЭлементОформления.Вставить("Представление", НСтр("ru = 'Короб'"));
	ЭлементыОформления.Добавить(ЭлементОформления);

	ЭлементОформления = Новый Структура;
	ЭлементОформления.Вставить("ВидыПродукции", СписокТабачнойПродукции);
	ЭлементОформления.Вставить("ВидУпаковки",   Перечисления.ВидыУпаковокИС.Групповая);
	ЭлементОформления.Вставить("Представление", НСтр("ru = 'Блок'"));
	ЭлементыОформления.Добавить(ЭлементОформления);
	
	Для Каждого ЭлементОформления Из ЭлементыОформления Цикл
		
		Элемент = УсловноеОформление.Элементы.Добавить();
		
		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINВидУпаковки.Имя);
		
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.ОписаниеGTINВидУпаковки.ПутьКДанным);
		ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = ЭлементОформления.ВидУпаковки;
		
		Если ЭлементОформления.ВидыПродукции <> Неопределено Тогда
			ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ВидПродукции");
			ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
			ОтборЭлемента.ПравоеЗначение = ЭлементОформления.ВидыПродукции;
		КонецЕсли;
		
		Элемент.Оформление.УстановитьЗначениеПараметра("Текст", ЭлементОформления.Представление);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыФормыНаСервере()
	
	ПредставлениеВидовУпаковок = Новый Соответствие;
	
	Если ОбщегоНазначенияИСПовтИсп.ЭтоПродукцияМОТП(ВидПродукции) Тогда
		
		Элементы.ОписаниеGTINКоличествоПотребительскихУпаковок.Заголовок = НСтр("ru = 'Количество пачек'");
		Заголовок = НСтр("ru = 'Уточнение количества пачек в коробах и блоках по GTIN'");
		
		ПредставлениеВидовУпаковок.Вставить(Перечисления.ВидыУпаковокИС.Потребительская, НСтр("ru = 'Пачка'"));
		ПредставлениеВидовУпаковок.Вставить(Перечисления.ВидыУпаковокИС.Групповая,       НСтр("ru = 'Блок'"));
		ПредставлениеВидовУпаковок.Вставить(Перечисления.ВидыУпаковокИС.Набор,           НСтр("ru = 'Набор'"));
		ПредставлениеВидовУпаковок.Вставить(Перечисления.ВидыУпаковокИС.Логистическая,   НСтр("ru = 'Короб'"));
		
	ИначеЕсли ВидПродукции = Перечисления.ВидыПродукцииИС.Духи Тогда
		
		Элементы.ОписаниеGTINКоличествоПотребительскихУпаковок.Заголовок = НСтр("ru = 'Количество флаконов'");
		Заголовок = НСтр("ru = 'Уточнение количества флаконов в логистических и групповых упаковках по GTIN'");
		
		ПредставлениеВидовУпаковок.Вставить(Перечисления.ВидыУпаковокИС.Потребительская, НСтр("ru = 'Флакон'"));
		ПредставлениеВидовУпаковок.Вставить(Перечисления.ВидыУпаковокИС.Групповая,       НСтр("ru = 'Групповая'"));
		ПредставлениеВидовУпаковок.Вставить(Перечисления.ВидыУпаковокИС.Набор,           НСтр("ru = 'Набор'"));
		ПредставлениеВидовУпаковок.Вставить(Перечисления.ВидыУпаковокИС.Логистическая,   НСтр("ru = 'Логистическая'"));
		
	Иначе
		
		ПредставлениеВидовУпаковок.Вставить(Перечисления.ВидыУпаковокИС.Потребительская, НСтр("ru = 'Потребительская'"));
		ПредставлениеВидовУпаковок.Вставить(Перечисления.ВидыУпаковокИС.Групповая,       НСтр("ru = 'Групповая'"));
		ПредставлениеВидовУпаковок.Вставить(Перечисления.ВидыУпаковокИС.Набор,           НСтр("ru = 'Набор'"));
		ПредставлениеВидовУпаковок.Вставить(Перечисления.ВидыУпаковокИС.Логистическая,   НСтр("ru = 'Логистическая'"));
		
	КонецЕсли;
	
	ИспользуютсяНаборы            = ОбщегоНазначенияИСКлиентСервер.ВидПродукцииИспользуетНаборы(ВидПродукции);
	ИспользуютсяГрупповыеУпаковки = ОбщегоНазначенияИСКлиентСервер.ВидПродукцииИспользуетГрупповыеУпаковки(ВидПродукции);
	
	ВидУпаковкиСписокВыбора.Добавить(
		Перечисления.ВидыУпаковокИС.Потребительская,
		ПредставлениеВидовУпаковок[Перечисления.ВидыУпаковокИС.Потребительская]);
	Если ИспользуютсяГрупповыеУпаковки Тогда
		ВидУпаковкиСписокВыбора.Добавить(
			Перечисления.ВидыУпаковокИС.Групповая,
			ПредставлениеВидовУпаковок[Перечисления.ВидыУпаковокИС.Групповая]);
	КонецЕсли;
	Если ИспользуютсяНаборы Тогда
		ВидУпаковкиСписокВыбора.Добавить(
			Перечисления.ВидыУпаковокИС.Набор,
			ПредставлениеВидовУпаковок[Перечисления.ВидыУпаковокИС.Набор]);
	КонецЕсли;
	ВидУпаковкиСписокВыбора.Добавить(
		Перечисления.ВидыУпаковокИС.Логистическая,
		ПредставлениеВидовУпаковок[Перечисления.ВидыУпаковокИС.Логистическая]);
	
	Для Каждого ЭлементСписка Из ВидУпаковкиСписокВыбора Цикл
		Элементы.ОписаниеGTINВидУпаковки.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
	КонецЦикла;
	
	Элементы.ОписаниеGTINКоличествоПотребительскихУпаковок.Видимость =
		УточнениеВидаУпаковки Или Не ТолькоПотребительскиеУпаковки;
	
	Элементы.ОписаниеGTINДанныеНоменклатуры.ТолькоПросмотр = УточнениеВидаУпаковки;
	
	Элементы.ОписаниеGTINВидУпаковки.КнопкаОчистки = УточнениеВидаУпаковки;
	
	СобытияФормИСПереопределяемый.УстановитьСвязиПараметровВыбораСНоменклатурой(ЭтотОбъект,   "ОписаниеGTINХарактеристика", "Элементы.ОписаниеGTIN.ТекущиеДанные.Номенклатура");
	СобытияФормИСПереопределяемый.УстановитьСвязиПараметровВыбораСНоменклатурой(ЭтотОбъект,   "ОписаниеGTINУпаковка",       "Элементы.ОписаниеGTIN.ТекущиеДанные.Номенклатура");
	СобытияФормИСПереопределяемый.УстановитьСвязиПараметровВыбораСНоменклатурой(ЭтотОбъект,   "ОписаниеGTINСерия",          "Элементы.ОписаниеGTIN.ТекущиеДанные.Номенклатура");
	СобытияФормИСПереопределяемый.УстановитьСвязиПараметровВыбораСХарактеристикой(ЭтотОбъект, "ОписаниеGTINСерия",          "Элементы.ОписаниеGTIN.ТекущиеДанные.Характеристика");
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросИзменениеКоличества(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = "ПродолжитьВвод" Тогда
		ЭтотОбъект.ТекущийЭлемент = Элементы.ОписаниеGTINКоличествоПотребительскихУпаковок;
		КоличествоНачальное = КоличествоДоИзменения;
		Элементы.ОписаниеGTIN.ИзменитьСтроку();
		КоличествоДоИзменения = КоличествоНачальное;
	Иначе
		Если КоличествоДоИзменения = 1 Тогда
			КоличествоДоИзменения = 0;
		КонецЕсли;
		ТекущиеДанные = Элементы.ОписаниеGTIN.ТекущиеДанные;
		ТекущиеДанные.КоличествоПотребительскихУпаковок = КоличествоДоИзменения;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеТаблицыФормы()
	
	Отказ = Ложь;
	
	Для Каждого Строка Из ОписаниеGTIN Цикл
		
		Если Не УточнениеВидаУпаковки
			И Не ЗначениеЗаполнено(Строка.ВидУпаковки) Тогда
			
			Индекс = ОписаниеGTIN.Индекс(Строка) + 1;
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Не заполнено поле ""Вид упаковки""'"),,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ОписаниеGTIN", Индекс, "ВидУпаковки"),,
				Отказ);
			
		КонецЕсли;
			
		Если УточнениеВидаУпаковки
			И ЗначениеЗаполнено(Строка.ВидУпаковки)
			И Строка.ВидУпаковки <> ПредопределенноеЗначение("Перечисление.ВидыУпаковокИС.Набор")
			И Не ЗначениеЗаполнено(Строка.КоличествоПотребительскихУпаковок)
			Или Не УточнениеВидаУпаковки
			И Строка.ВидУпаковки <> ПредопределенноеЗначение("Перечисление.ВидыУпаковокИС.Набор")
			И Не ЗначениеЗаполнено(Строка.КоличествоПотребительскихУпаковок) Тогда
			
			Индекс = ОписаниеGTIN.Индекс(Строка) + 1;
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Не заполнено поле ""Количество потребительских упаковок""'"),,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ОписаниеGTIN", Индекс, "КоличествоПотребительскихУпаковок"),,
				Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Не Отказ;
	
КонецФункции

&НаСервере
Процедура СохранитьДанные()
	
	НачатьТранзакцию();
	
	Попытка
		
		ТаблицаОписанияGTIN = ОписаниеGTIN.Выгрузить();
		
		Отказ = Не РегистрыСведений.ОписаниеGTINИС.УстановитьОписаниеПоТаблице(ТаблицаОписанияGTIN);
		
		Если Отказ Тогда
			ВызватьИсключение НСтр("ru = 'Не удалось установить описание GTIN'");
		КонецЕсли;
		
		КоличествоСтрок = ТаблицаОписанияGTIN.Количество();
		Для Счетчик = 1 По КоличествоСтрок Цикл
			Индекс = КоличествоСтрок - Счетчик;
			Если Не ЗначениеЗаполнено(ТаблицаОписанияGTIN[Индекс].Номенклатура) Тогда
				ТаблицаОписанияGTIN.Удалить(Индекс);
			КонецЕсли;
		КонецЦикла;
		
		ПроверкаИПодборПродукцииИСМППереопределяемый.ЗафиксироватьОписаниеGTIN(ТаблицаОписанияGTIN);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ТекстСообщения = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти