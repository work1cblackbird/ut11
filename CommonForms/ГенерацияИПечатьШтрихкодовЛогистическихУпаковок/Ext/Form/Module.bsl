#Область ОписаниеПеременных

&НаКлиенте
Перем ЗадаватьВопросПередЗакрытиемФормы;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбработатьСохраненныеНастройки();
	УправлениеЭлементамиФормыПриСоздании();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗадаватьВопросПередЗакрытиемФормы = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗавершениеРаботы
		И ЕстьНераспечатанныеКоды
		И ЗадаватьВопросПередЗакрытиемФормы Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Имеются отмеченные для печати штрихкоды упаковок.
			|После закрытии формы, распечатать данные штрихкоды можно будет только из справочника. Закрыть форму?'");
		ОписаниеОповещенияОЗавершении = Новый ОписаниеОповещения("ВопросЗакрытьФормуПриЗавершении", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещенияОЗавершении, ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	СохранитьНастройкиФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыШтрихкодыУпаковок

&НаКлиенте
Процедура ШтрихкодыУпаковокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	
	Отказ = Истина;
	
	Если Не Копирование Тогда
		СформироватьШтрихкодыКлиент();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыУпаковокПередУдалением(Элемент, Отказ)
	
	ПометкаВыделеныхСтрок = ПометкаВыделеныхСтрок(Элемент.ВыделенныеСтроки);
	
	Если ПометкаВыделеныхСтрок > 0 Тогда
		
		Отказ = Истина;
		
		Кнопки = Новый СписокЗначений;
		КоличествоСтрок = Элемент.ВыделенныеСтроки.Количество();
		Если КоличествоСтрок = 1 Тогда
			ЗаголовокВопроса = НСтр("ru = 'Удаление строки'");
			ТекстВопроса = НСтр("ru = 'Выбранная строка помечена для печати. Удалить строку?'");
			Кнопки.Добавить("УдалитьВсе", НСтр("ru = 'Да'"));
			Кнопки.Добавить("Отмена",     НСтр("ru = 'Нет'"));
		ИначеЕсли ПометкаВыделеныхСтрок = 1 Тогда	// все помечены
			ЗаголовокВопроса = НСтр("ru = 'Удаление строк'");
			ТекстВопроса = НСтр("ru = 'Выделенные строки помечены для печати. Удалить строки?'");
			Кнопки.Добавить("УдалитьВсе", НСтр("ru = 'Да'"));
			Кнопки.Добавить("Отмена",     НСтр("ru = 'Нет'"));
		Иначе	// помечены частично
			ЗаголовокВопроса = НСтр("ru = 'Удаление строк'");
			ТекстВопроса = НСтр("ru = 'В выделенных строках содержатся помеченные для печати строки. Выберите режим удаления.'");
			Кнопки.Добавить("Удалить",    НСтр("ru = 'Удалить не помеченные'"));
			Кнопки.Добавить("УдалитьВсе", НСтр("ru = 'Удалить все'"));
			Кнопки.Добавить("Отмена",     НСтр("ru = 'Отмена'"));
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ВыделенныеСтроки", Элемент.ВыделенныеСтроки);
		
		ОписаниеОповещения = Новый ОписаниеОповещения(
			"ВопросУдалениеСтрокЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ПоказатьВопрос(
			ОписаниеОповещения,
			ТекстВопроса,
			Кнопки,,
			Кнопки[0].Значение,
			ЗаголовокВопроса);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыУпаковокПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ШтрихкодыУпаковок.ТекущиеДанные;
	
	Если ТекущиеДанные.Пометка Тогда
		Если Не ЕстьНераспечатанныеКоды Тогда
			ЕстьНераспечатанныеКоды = Истина;
			УстановитьДоступностьКнопкиПечати(ЭтотОбъект);
		КонецЕсли;
	ИначеЕсли ЕстьНераспечатанныеКоды Тогда
		ЕстьНераспечатанныеКоды();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыУпаковокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент.Имя = "ШтрихкодыУпаковокШтрихкодУпаковки" Тогда
		СтандартнаяОбработка = Ложь;
		
		ШтрихкодУпаковки = Элемент.ТекущиеДанные.ШтрихкодУпаковки;
		Если ЗначениеЗаполнено(ШтрихкодУпаковки) Тогда
			ПоказатьЗначение(, ШтрихкодУпаковки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Печать(Команда)
	
	ОчиститьСообщения();
	
	Если ШтрихкодыУпаковок.Количество() = 0 Тогда
		ПоказатьПредупреждение(,
			НСтр("ru = 'Даные для печати отсутствуют. Сначала необходимо сформировать штрихкоды.'"));
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	
	Если Не ЕстьНераспечатанныеКоды Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			НСтр("ru = 'Данные для печати отсутствуют. Отметьте штрихкоды, которые необходимо распечатать.'"),,
			"ШаблоныЭтикеток",, Отказ);
	КонецЕсли;
	
	ПараметрыПоиска = Новый Структура;
	ПараметрыПоиска.Вставить("Пометка", Истина);
	Строки = ШтрихкодыУпаковок.НайтиСтроки(ПараметрыПоиска);
	
	Если ВидимостьШаблонаЭтикетки Тогда
		Для Каждого Строка Из Строки Цикл
			Если Не ЗначениеЗаполнено(Строка.ШаблонЭтикетки) Тогда
				НомерСтроки = ШтрихкодыУпаковок.Индекс(Строка) + 1;
				ТекстОшибки = СтрШаблон(
					НСтр("ru = 'В строке %1 табличной части ""Штрихкоды упаковок "" не заполнено поле ""Шаблон этикетки"".'"),
					НомерСтроки);
				ОбщегоНазначенияКлиент.СообщитьПользователю(
					ТекстОшибки,,
					ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
						"ШтрихкодыУпаковок", НомерСтроки, "ШаблонЭтикетки"),,
					Отказ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьПечатьЭтикеток(Строки);
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ВыделенныеСтроки = Элементы.ШтрихкодыУпаковок.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("ОтображатьЭтикеткуЛогистическойУпаковки",   Истина);
	ПараметрыОткрытияФормы.Вставить("ОтображатьЭтикеткуГрупповойУпаковки",       Ложь);
	ПараметрыОткрытияФормы.Вставить("ОтображатьЭтикеткуНабора",                  Ложь);
	ПараметрыОткрытияФормы.Вставить("ОтображатьЭтикеткуПотребительскойУпаковки", Ложь);
	ПараметрыОткрытияФормы.Вставить("ОтображатьКоличествоПечать",                Ложь);
	
	ПараметрыЗаполнения    = Новый Структура;
	ПараметрыЗаполнения.Вставить("ВыделенныеСтроки", Новый Массив);
	
	Для Каждого ТекущаяСтрока Из ВыделенныеСтроки Цикл
		ПараметрыЗаполнения.ВыделенныеСтроки.Добавить(ШтрихкодыУпаковок.НайтиПоИдентификатору(ТекущаяСтрока));
	КонецЦикла;
	
	ОткрытьФорму(
		"РегистрСведений.ПулКодовМаркировкиСУЗ.Форма.ФормаПомощникЗаполненияШаблоновЭтикеток",
		ПараметрыОткрытияФормы, ЭтаФорма,,,,
		Новый ОписаниеОповещения("ОбработкаЗакрытияФормыЗаполнения", ЭтотОбъект, ПараметрыЗаполнения))
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	ИзменитьПометку(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВсе(Команда)
	
	ИзменитьПометку(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ШтрихкодыУпаковокШаблонЭтикетки.Имя);
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(Элементы.ШтрихкодыУпаковокПометка.ПутьКДанным);
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиФормыПриСоздании()
	
	ВидимостьШаблонаЭтикетки = РегистрыСведений.ПулКодовМаркировкиСУЗ.ВидимостьШаблонаЭтикетки();
	
	Элементы.ШтрихкодыУпаковокШаблонЭтикетки.Видимость = ВидимостьШаблонаЭтикетки;
	
	Если ВидимостьШаблонаЭтикетки Тогда
		СобытияФормИСМППереопределяемый.УстановитьПараметрыВыбораШаблонаЭтикетки(
			ЭтотОбъект,
			Элементы.ШтрихкодыУпаковокШаблонЭтикетки.Имя);
	КонецЕсли;
	
	ЕстьНераспечатанныеКоды = Ложь;
	
	УстановитьДоступностьКнопкиПечати(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьКнопкиПечати(Форма)
	
	Форма.Элементы.Печать.Доступность = Форма.ЕстьНераспечатанныеКоды;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПометку(Пометка)
	
	ВыделенныеСтроки = Элементы.ШтрихкодыУпаковок.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() > 1 Тогда
		СтрокиДляОбработки = ВыделенныеСтроки;
		ПолучатьДанныеСтроки = Истина;
	Иначе
		СтрокиДляОбработки = ШтрихкодыУпаковок;
		ПолучатьДанныеСтроки = Ложь;
	КонецЕсли;
	
	Если СтрокиДляОбработки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из СтрокиДляОбработки Цикл
		Если ПолучатьДанныеСтроки Тогда
			Строка = ШтрихкодыУпаковок.НайтиПоИдентификатору(Строка);
		КонецЕсли;
		Строка.Пометка = Пометка;
	КонецЦикла;
	
	Если Пометка Тогда
		Если Не ЕстьНераспечатанныеКоды Тогда
			ЕстьНераспечатанныеКоды = Истина;
			УстановитьДоступностьКнопкиПечати(ЭтотОбъект);
		КонецЕсли;
	ИначеЕсли ЕстьНераспечатанныеКоды Тогда
		ЕстьНераспечатанныеКоды();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЕстьНераспечатанныеКоды()
	
	ЕстьПометка = Ложь;
	Для Каждого Строка Из ШтрихкодыУпаковок Цикл
		Если Строка.Пометка Тогда
			ЕстьПометка = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьНераспечатанныеКоды <> ЕстьПометка Тогда
		ЕстьНераспечатанныеКоды = ЕстьПометка;
		УстановитьДоступностьКнопкиПечати(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросЗакрытьФормуПриЗавершении(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗадаватьВопросПередЗакрытиемФормы = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПометкаВыделеныхСтрок(Строки)
	
	//  0 - все не помечены
	//  1 - все помечены
	//  2 - помечены частично
	// -1 - нет строк
	Результат = 0;
	
	Для Каждого Строка Из Строки Цикл
		ТекущиеДанные = ШтрихкодыУпаковок.НайтиПоИдентификатору(Строка);
		Если ТекущиеДанные.Пометка И Результат < 2 Тогда
			Результат = Результат + 2;
		ИначеЕсли Не ТекущиеДанные.Пометка И Результат <> 1 Тогда
			Результат = Результат + 1;
		КонецЕсли;
		Если Результат = 3 Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат - 1;
	
КонецФункции

&НаКлиенте
Процедура ВопросУдалениеСтрокЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = "Отмена" Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрокДляУдаления = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из ДополнительныеПараметры.ВыделенныеСтроки Цикл
		Строка = ШтрихкодыУпаковок.НайтиПоИдентификатору(ВыделеннаяСтрока);
		Если Результат = "УдалитьВсе"
			Или Не Строка.Пометка Тогда
			МассивСтрокДляУдаления.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из МассивСтрокДляУдаления Цикл
		ШтрихкодыУпаковок.Удалить(Строка);
	КонецЦикла;
	
	Если Результат = "УдалитьВсе" Тогда
		ЕстьНераспечатанныеКоды();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗакрытияФормыЗаполнения(ДанныеЗаполнения, ПараметрыЗаполнения) Экспорт
	
	Если ДанныеЗаполнения = Неопределено
		Или ДанныеЗаполнения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ШаблонЭтикеткиДляЗаполнения        = Неопределено;
	КоличествоЭкземпляровДляЗаполнения = Неопределено;
	
	ДанныеЗаполнения.Свойство("ШаблонЭтикеткиЛогистическойУпаковки", ШаблонЭтикеткиДляЗаполнения);
	ДанныеЗаполнения.Свойство("КоличествоЭкземпляров",               КоличествоЭкземпляровДляЗаполнения);
	
	Если КоличествоЭкземпляровДляЗаполнения = 0 Тогда
		КоличествоЭкземпляровДляЗаполнения = Неопределено;
	КонецЕсли;
	
	Для Каждого СтрокаДанных Из ПараметрыЗаполнения.ВыделенныеСтроки Цикл
		Если КоличествоЭкземпляровДляЗаполнения <> Неопределено Тогда
			СтрокаДанных.КоличествоЭкземпляров = КоличествоЭкземпляровДляЗаполнения;
		КонецЕсли;
		Если ШаблонЭтикеткиДляЗаполнения <> Неопределено Тогда
			СтрокаДанных.ШаблонЭтикетки = ШаблонЭтикеткиДляЗаполнения;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#Область РаботаСНастройкамиФормы

&НаСервере
Процедура ОбработатьСохраненныеНастройки()
	
	СохраненныеНастройки = ОбщегоНазначения.ХранилищеНастроекДанныхФормЗагрузить(ИмяСохраняемыхНастроек(), "");
	
	ЕстьНастройки = ТипЗнч(СохраненныеНастройки) = Тип("Структура");
	
	Если ЕстьНастройки
		И СохраненныеНастройки.Свойство("Номенклатура") Тогда
		Номенклатура = СохраненныеНастройки.Номенклатура;
	КонецЕсли;
	
	Если ЕстьНастройки
		И СохраненныеНастройки.Свойство("Характеристика") Тогда
		Характеристика = СохраненныеНастройки.Характеристика;
	КонецЕсли;
	
	Если ЕстьНастройки
		И СохраненныеНастройки.Свойство("КоличествоШтрихкодов") Тогда
		КоличествоШтрихкодов = СохраненныеНастройки.КоличествоШтрихкодов;
	Иначе
		КоличествоШтрихкодов = 1;
	КонецЕсли;
	
	Если ЕстьНастройки
		И СохраненныеНастройки.Свойство("КоличествоЭкземпляров") Тогда
		КоличествоЭкземпляров = СохраненныеНастройки.КоличествоЭкземпляров;
	Иначе
		КоличествоЭкземпляров = 1;
	КонецЕсли;
	
	Если ЕстьНастройки
		И СохраненныеНастройки.Свойство("ШаблонЭтикетки") Тогда
		ШаблонЭтикетки = СохраненныеНастройки.ШаблонЭтикетки;
	КонецЕсли;
	
	Если ЕстьНастройки
		И СохраненныеНастройки.Свойство("ПараметрыГенерацииШтрихкодов")
		И ТипЗнч(СохраненныеНастройки.ПараметрыГенерацииШтрихкодов) = Тип("ФиксированноеСоответствие") Тогда
		ПараметрыГенерацииШтрихкодов = СохраненныеНастройки.ПараметрыГенерацииШтрихкодов;
		АдресВХранилище = ПоместитьВоВременноеХранилище(Новый Соответствие(ПараметрыГенерацииШтрихкодов), УникальныйИдентификатор);
	Иначе
		ПараметрыГенерацииШтрихкодов = Неопределено;
	КонецЕсли;
	
	Если ЕстьНастройки
		И СохраненныеНастройки.Свойство("РазмещениеЭтикетокНаЛисте") Тогда
		РазмещениеЭтикетокНаЛисте = СохраненныеНастройки.РазмещениеЭтикетокНаЛисте;
	Иначе
		РазмещениеЭтикетокНаЛисте = "Замостить";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиФормы()
	
	СохраняемыеНастройки = Новый Структура;
	СохраняемыеНастройки.Вставить("Номенклатура",                 Номенклатура);
	СохраняемыеНастройки.Вставить("Характеристика",               Характеристика);
	СохраняемыеНастройки.Вставить("КоличествоШтрихкодов",         КоличествоШтрихкодов);
	СохраняемыеНастройки.Вставить("КоличествоЭкземпляров",        КоличествоЭкземпляров);
	СохраняемыеНастройки.Вставить("ШаблонЭтикетки",               ШаблонЭтикетки);
	СохраняемыеНастройки.Вставить("ПараметрыГенерацииШтрихкодов", ПараметрыГенерацииШтрихкодов);
	СохраняемыеНастройки.Вставить("РазмещениеЭтикетокНаЛисте",    РазмещениеЭтикетокНаЛисте);
	
	СохранитьНастройкиФормыНаСервере(СохраняемыеНастройки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьНастройкиФормыНаСервере(СохраняемыеНастройки)
	
	ОбщегоНазначения.ХранилищеНастроекДанныхФормСохранить(ИмяСохраняемыхНастроек(), "", СохраняемыеНастройки);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяСохраняемыхНастроек()
	
	Возврат "ОбщаяФорма.ГенерацияИПечатьШтрихкодовЛогистическихУпаковок";
	
КонецФункции

#КонецОбласти

#Область ПараметрыГенерацииШтрихкодов

&НаКлиентеНаСервереБезКонтекста
Функция ПоследнийТипШтрихкода(Форма)
	
	Возврат Форма.ПараметрыГенерацииШтрихкодов["ПоследнийТипШтрихкода"];
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПоследнийТипУпаковки(Форма)
	
	Возврат Форма.ПараметрыГенерацииШтрихкодов["ПоследнийТипУпаковки"];
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПоследнийКлючНумератора(Форма, ТипШтрихкода);
	
	КлючНумератора = "";
	
	Если ТипШтрихкода = ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.SSCC") Тогда
		КлючНумератора = СтрЗаменить(Форма.ПараметрыГенерацииШтрихкодов["ПоследнийКлючНумератора"], "SSCC", "");
	ИначеЕсли ТипШтрихкода = ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.GS1_128") Тогда
		КлючНумератора = СтрЗаменить(Форма.ПараметрыГенерацииШтрихкодов["ПоследнийКлючНумератора"], "GS1", "");
	КонецЕсли;
	
	Возврат КлючНумератора;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПоследнийОбразецШтрихкода(Форма)
	
	Возврат Форма.ПараметрыГенерацииШтрихкодов[Форма.ПараметрыГенерацииШтрихкодов["ПоследнийТипШтрихкодаСтрокой"]];
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуГенерацииШтрихкодов()

	ДоступныеТипыШтрихкодовСтрокой = ПроверкаИПодборПродукцииИСМПКлиент.ДоступныеТипыШтрихкодовСтрокой();
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("РежимГрупповойГенерации",               Истина);
	ПараметрыОткрытияФормы.Вставить("ВидимостьШаблонаЭтикетки",              ВидимостьШаблонаЭтикетки);
	ПараметрыОткрытияФормы.Вставить("ШаблонЭтикетки",                        ШаблонЭтикетки);
	ПараметрыОткрытияФормы.Вставить("КоличествоШтрихкодов",                  КоличествоШтрихкодов);
	ПараметрыОткрытияФормы.Вставить("КоличествоЭкземпляров",                 КоличествоЭкземпляров);
	ПараметрыОткрытияФормы.Вставить("РежимУказанияПараметровГенерации",      Истина);
	ПараметрыОткрытияФормы.Вставить("АдресПредыдущихШтрихкодов",             АдресВХранилище);
	ПараметрыОткрытияФормы.Вставить("ДоступныеТипыШтрихкодовСтрокой",        ДоступныеТипыШтрихкодовСтрокой);
	ПараметрыОткрытияФормы.Вставить("СкрытьФлагЗапомнитьПараметрыГенерации", Истина);
	Если ПараметрыГенерацииШтрихкодов = Неопределено Тогда
		ПараметрыОткрытияФормы.Вставить("ТипШтрихкода", ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.SSCC"));
	Иначе
		ПараметрыОткрытияФормы.Вставить("ТипШтрихкода",   ПоследнийТипШтрихкода(ЭтотОбъект));
		ПараметрыОткрытияФормы.Вставить("Номенклатура",   Номенклатура);
		ПараметрыОткрытияФормы.Вставить("Характеристика", Характеристика);
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриГенерацииШтрихкодаУпаковки", ЭтотОбъект);
	
	ОткрытьФорму("Обработка.ГенерацияШтрихкодовУпаковок.Форма.Форма", ПараметрыОткрытияФормы, ЭтотОбъект,,,,
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриГенерацииШтрихкодаУпаковки(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли ПустаяСтрока(Результат.Штрихкод) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Упаковкам не может быть назначен пустой штрихкод.'"));
		Возврат;
	ИначеЕсли Результат.ТипШтрихкода <> ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.SSCC")
		И Результат.ТипШтрихкода <> ПредопределенноеЗначение("Перечисление.ТипыШтрихкодов.GS1_128") Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Типы штрихкодов, отличные от SSCC и GS1-128, не поддерживаются.'"));
		Возврат;
	КонецЕсли;
	
	Номенклатура          = Результат.Номенклатура;
	Характеристика        = Результат.Характеристика;
	ШаблонЭтикетки        = Результат.ШаблонЭтикетки;
	КоличествоШтрихкодов  = Макс(Результат.КоличествоШтрихкодов,  1);
	КоличествоЭкземпляров = Макс(Результат.КоличествоЭкземпляров, 1);
	
	АдресВХранилище = Результат.АдресПредыдущихШтрихкодов;
	
	ПараметрыГенерацииШтрихкодов = ПриГенерацииШтрихкодаУпаковкиНаСервере(АдресВХранилище);
	
	Если ПараметрыГенерацииШтрихкодов <> Неопределено Тогда
		СформироватьШтрихкодыСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПриГенерацииШтрихкодаУпаковкиНаСервере(АдресВХранилище)
	
	Если ЭтоАдресВременногоХранилища(АдресВХранилище) Тогда
		ДанныеПредыдущихШтрихкодов = ПолучитьИзВременногоХранилища(АдресВХранилище);
		Если ТипЗнч(ДанныеПредыдущихШтрихкодов) = Тип("Соответствие") Тогда
			Возврат Новый ФиксированноеСоответствие(ДанныеПредыдущихШтрихкодов);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область ФормированиеШтрихкодов

&НаКлиенте
Процедура СформироватьШтрихкодыКлиент()
	
	Если ШтрихкодыУпаковок.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru = 'Имеются ранее сформированные штрихкоды упаковок. Очистить список сформированных ранее штрихкодов?'");
		ОписаниеОповещенияОЗавершении = Новый ОписаниеОповещения("ВопросОчиститьШтрихкодыУпаковокПриЗавершении", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещенияОЗавершении, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		ОткрытьФормуГенерацииШтрихкодов();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОчиститьШтрихкодыУпаковокПриЗавершении(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ШтрихкодыУпаковок.Очистить();
	КонецЕсли;
	
	ОчиститьСообщения();
	ОткрытьФормуГенерацииШтрихкодов();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьШтрихкодыСервер()
	
	ДеревоУпаковок = Обработки.ВиртуальнаяАгрегацияУпаковокИСМП.НовоеДеревоУпаковок();
	
	СерийныеНомераНумератор = Новый Соответствие;
	ТипШтрихкода            = ПоследнийТипШтрихкода(ЭтотОбъект);
	ТипУпаковки             = ПоследнийТипУпаковки(ЭтотОбъект);
	КлючНумератора          = ПоследнийКлючНумератора(ЭтотОбъект, ТипШтрихкода);
	ОбразецШтрихкода        = ПоследнийОбразецШтрихкода(ЭтотОбъект);
	
	Для Счетчик = 1 По КоличествоШтрихкодов Цикл
		Строка = ДеревоУпаковок.Строки.Добавить();
		Строка.ТипУпаковки    = ТипУпаковки;
		Строка.ТипШтрихкода   = ТипШтрихкода;
		Строка.Штрихкод       = Обработки.ВиртуальнаяАгрегацияУпаковокИСМП.НовыйШтрихкод(
			ТипШтрихкода, КлючНумератора, ОбразецШтрихкода, СерийныеНомераНумератор);
		Если ТипШтрихкода = Перечисления.ТипыШтрихкодов.GS1_128 Тогда
			Строка.Номенклатура   = Номенклатура;
			Строка.Характеристика = Характеристика;
			Строка.ПредставлениеНоменклатуры = ОбщегоНазначенияИС.ПредставлениеНоменклатуры(
				Номенклатура, Характеристика);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыСканирования = ШтрихкодированиеОбщегоНазначенияИС.ПараметрыСканирования(Документы.МаркировкаТоваровИСМП.ПустаяСсылка());
	
	Справочники.ШтрихкодыУпаковокТоваров.СоздатьШтрихкодыУпаковокПоДаннымДерева(
		ДеревоУпаковок,
		ПараметрыСканирования);
	
	Для Каждого Строка Из ДеревоУпаковок.Строки Цикл
		НоваяСтрока = ШтрихкодыУпаковок.Добавить();
		НоваяСтрока.Пометка               = Истина;
		НоваяСтрока.ШаблонЭтикетки        = ШаблонЭтикетки;
		НоваяСтрока.КоличествоЭкземпляров = КоличествоЭкземпляров;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка,
			"ШтрихкодУпаковки,ТипУпаковки,ТипШтрихкода,Номенклатура,Характеристика,ПредставлениеНоменклатуры");
	КонецЦикла;
	
	Если Не ЕстьНераспечатанныеКоды Тогда
		ЕстьНераспечатанныеКоды = Истина;
		УстановитьДоступностьКнопкиПечати(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПечатьЭтикеток

&НаКлиенте
Процедура ВыполнитьПечатьЭтикеток(Строки)
	
	ДанныеДляПечати = ПодготовитьДанныеДляПечати();
	ПечатьЭтикетокИСМПКлиент.НапечататьЭтикеткиИСМП(ДанныеДляПечати, ЭтотОбъект);
	
	Для Каждого Строка Из Строки Цикл
		Строка.Пометка = Ложь;
	КонецЦикла;
	
	ЕстьНераспечатанныеКоды = Ложь;
	УстановитьДоступностьКнопкиПечати(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьДанныеДляПечати()
	
	Порядок = 0;
	ОбъектыПечати = Новый Массив;
	
	Для Каждого Строка Из ШтрихкодыУпаковок Цикл
		
		Если Строка.Пометка Тогда
			Порядок = Порядок + 1;
			
			ПараметрыШтрихкода                  = ПечатьЭтикетокИСМПКлиентСервер.СтруктураПечатиЭтикетки();
			ПараметрыШтрихкода.КодМаркировки    = Строка.ШтрихкодУпаковки;
			ПараметрыШтрихкода.ТипШтрихкода     = Строка.ТипШтрихкода;
			ПараметрыШтрихкода.Номенклатура     = Строка.Номенклатура;
			ПараметрыШтрихкода.Характеристика   = Строка.Характеристика;
			ПараметрыШтрихкода.Порядок          = Порядок;
			ПараметрыШтрихкода.ЭтоКодМаркировки = Ложь;
			ПараметрыШтрихкода.Количество       = Строка.КоличествоЭкземпляров;
			ПараметрыШтрихкода.ШаблонЭтикетки   = Строка.ШаблонЭтикетки;
			
			ОбъектыПечати.Добавить(ПараметрыШтрихкода);
		КонецЕсли;
			
	КонецЦикла;
	
	ДанныеДляПечати = Новый Структура;
	ДанныеДляПечати.Вставить("ОбъектыПечати",              ОбъектыПечати);
	ДанныеДляПечати.Вставить("Документ",                   Документы.МаркировкаТоваровИСМП.ПустаяСсылка());
	ДанныеДляПечати.Вставить("КаждаяЭтикеткаНаНовомЛисте", РазмещениеЭтикетокНаЛисте = "Отдельно");
	ДанныеДляПечати.Вставить("ПакетнаяПечать",             Ложь);
	ДанныеДляПечати.Вставить("РежимПечати",                "Выборочно");
	
	Возврат ДанныеДляПечати;
	
КонецФункции

#КонецОбласти

#КонецОбласти
