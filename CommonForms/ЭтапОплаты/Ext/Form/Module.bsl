
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма,Параметры,,"ТолькоПросмотр,ЗакрыватьПриВыборе,ЗакрыватьПриЗакрытииВладельца,КлючНазначенияИспользования");
	
	УстановитьУсловноеОформление();
	
	ЕстьТара = СуммаЗалогаПоДокументу <> 0;
	Если Операция = "Добавление" Тогда
		Если НЕ ЗначениеЗаполнено(ВариантОплаты) Тогда
			ВариантОплаты = ?(ЭтоРасчетыСКлиентами,Перечисления.ВариантыКонтроляОплатыКлиентом.КредитПослеОтгрузки,Перечисления.ВариантыКонтроляОплатыПоставщику.КредитПослеПоступления);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ВариантОтсчета) Тогда
			ВариантОтсчета = Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыЗаказа;
			ДатаПлатежа = ДатаЗаказа;
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтоДоговор Тогда
		Элементы.ВариантОтсчета.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыЗаказа, НСтр("ru='от даты договора'"));
	Иначе
		Элементы.ВариантОтсчета.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыЗаказа);
		Элементы.ВариантОтсчета.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыСогласования);
	КонецЕсли;
	Элементы.ВариантОтсчета.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ДоДатыОтгрузки);
	Элементы.ВариантОтсчета.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыОтгрузки);
	Если ЭтоРасчетыСКлиентами И ПолучитьФункциональнуюОпцию("ИспользоватьОтгрузкуБезПереходаПраваСобственности") Тогда
		Элементы.ВариантОтсчета.СписокВыбора.Добавить(Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыПереходаПраваСобственности);
	КонецЕсли;

	Если ЭтоРасчетыСКлиентами Тогда
		Если НЕ ЭтоДоговор Тогда
			Элементы.ВариантОплаты.СписокВыбора.Добавить(Перечисления.ВариантыКонтроляОплатыКлиентом.АвансДоОбеспечения);
		КонецЕсли;
		Элементы.ВариантОплаты.СписокВыбора.Добавить(Перечисления.ВариантыКонтроляОплатыКлиентом.ПредоплатаДоОтгрузки);
		Элементы.ВариантОплаты.СписокВыбора.Добавить(Перечисления.ВариантыКонтроляОплатыКлиентом.КредитСдвиг);
		Элементы.ВариантОплаты.СписокВыбора.Добавить(Перечисления.ВариантыКонтроляОплатыКлиентом.КредитПослеОтгрузки);
	Иначе
		Если НЕ ЭтоДоговор Тогда
			Элементы.ВариантОплаты.СписокВыбора.Добавить(Перечисления.ВариантыКонтроляОплатыПоставщику.АвансДоПодтверждения);
		КонецЕсли;
		Элементы.ВариантОплаты.СписокВыбора.Добавить(Перечисления.ВариантыКонтроляОплатыПоставщику.ПредоплатаДоПоступления);
		Элементы.ВариантОплаты.СписокВыбора.Добавить(Перечисления.ВариантыКонтроляОплатыПоставщику.КредитСдвиг);
		Элементы.ВариантОплаты.СписокВыбора.Добавить(Перечисления.ВариантыКонтроляОплатыПоставщику.КредитПослеПоступления);
	КонецЕсли;
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СдвигПредоплатаПриИзменении(Элемент)
	
	Структура = Новый Структура;
	Структура.Вставить("ДатаПлатежа",    ДатаПлатежа);
	Структура.Вставить("Сдвиг",          Сдвиг);
	Структура.Вставить("ВариантОтсчета", ВариантОтсчета);
	Структура.Вставить("ВариантОплаты",  ВариантОплаты);
	
	ЭтапыОплатыКлиент.ЭтапыГрафикаОплатыСдвигВариантОтсчетаПриИзменении(
		Структура,
		ДатаЗаказа,
		ДатаСогласования,
		Дата(1,1,1),
		СрокПереходаПраваСобственности,
		ДатаПереходаПраваСобственности,
		Календарь);
	
	ДатаПлатежа = Структура.ДатаПлатежа;
	ВариантОплаты = Структура.ВариантОплаты;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтсчетаПредоплатаПриИзменении(Элемент)
	
	Структура = Новый Структура;
	Структура.Вставить("ДатаПлатежа",    ДатаПлатежа);
	Структура.Вставить("Сдвиг",          Сдвиг);
	Структура.Вставить("ВариантОтсчета", ВариантОтсчета);
	Структура.Вставить("ВариантОплаты",  ВариантОплаты);
	
	ЭтапыОплатыКлиент.ЭтапыГрафикаОплатыСдвигВариантОтсчетаПриИзменении(
		Структура,
		ДатаЗаказа,
		ДатаСогласования,
		Дата(1,1,1),
		СрокПереходаПраваСобственности,
		ДатаПереходаПраваСобственности,
		Календарь);
	
	ДатаПлатежа = Структура.ДатаПлатежа;
	ВариантОплаты = Структура.ВариантОплаты;
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПредоплатаПриИзменении(Элемент)
	
	Если ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ОтДатыЗаказа")
		И ДатаПлатежа < ДатаЗаказа Тогда
		ДатаПлатежа = ДатаЗаказа;
	ИначеЕсли ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ОтДатыСогласования")
		И ЗначениеЗаполнено(ДатаСогласования) И ДатаПлатежа < ДатаСогласования Тогда
		ДатаПлатежа = ДатаСогласования;  
	ИначеЕсли ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ОтДатыСогласования")
		И НЕ ЗначениеЗаполнено(ДатаСогласования) И ДатаПлатежа < ДатаЗаказа Тогда
		ДатаПлатежа = ДатаЗаказа;
	КонецЕсли;
	
	Структура = Новый Структура;
	Структура.Вставить("ДатаПлатежа",    ДатаПлатежа);
	Структура.Вставить("Сдвиг",          Сдвиг);
	Структура.Вставить("ВариантОтсчета", ВариантОтсчета);
	Структура.Вставить("ВариантОплаты",  ВариантОплаты);
	
	ЭтапыОплатыКлиент.ЭтапыГрафикаОплатыДатаПлатежаПриИзменении(
		Структура,
		ДатаЗаказа,
		ДатаСогласования,
		Дата(1,1,1),
		СрокПереходаПраваСобственности,
		ДатаПереходаПраваСобственности,
		Календарь);
	
	Сдвиг = Структура.Сдвиг;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентПлатежаПриИзменении(Элемент)
	СуммаПлатежа = СуммаОплатыПоДокументу * ПроцентПлатежа / 100;
КонецПроцедуры

&НаКлиенте
Процедура ПроцентЗалогаЗаТаруПриИзменении(Элемент)
	СуммаЗалогаЗаТару = СуммаЗалогаПоДокументу * ПроцентЗалогаЗаТару / 100;
КонецПроцедуры

&НаКлиенте
Процедура СуммаПлатежаПриИзменении(Элемент)
	ПроцентПлатежа = ?(СуммаОплатыПоДокументу = 0, 0, СуммаПлатежа / СуммаОплатыПоДокументу * 100);
КонецПроцедуры

&НаКлиенте
Процедура СуммаЗалогаЗаТаруПриИзменении(Элемент)
	ПроцентЗалогаЗаТару = СуммаЗалогаЗаТару / СуммаЗалогаПоДокументу * 100;
КонецПроцедуры

&НаКлиенте
Процедура ВариантОплатыПриИзменении(Элемент)
	
	Структура = Новый Структура;
	Структура.Вставить("ДатаПлатежа",    ДатаПлатежа);
	Структура.Вставить("Сдвиг",          Сдвиг);
	Структура.Вставить("ВариантОтсчета", ВариантОтсчета);
	Структура.Вставить("ВариантОплаты",  ВариантОплаты);
	
	ЭтапыОплатыКлиент.ЭтапыГрафикаОплатыВариантКонтроляПриИзменении(Структура,
		ДатаЗаказа,
		ДатаСогласования,
		Дата(1,1,1),
		СрокПереходаПраваСобственности,
		ДатаПереходаПраваСобственности,
		Календарь);
	
	ДатаПлатежа = Структура.ДатаПлатежа;
	ВариантОтсчета = Структура.ВариантОтсчета;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Перенести(Команда)
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("ВариантОплаты",         ВариантОплаты);
	Если ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ОтДатыЗаказа")
		ИЛИ ВариантОтсчета = ПредопределенноеЗначение("Перечисление.ВариантыОтсчетаДатыПлатежа.ОтДатыСогласования") Тогда
		СтруктураРезультата.Вставить("ДатаПлатежа",           ДатаПлатежа);
	Иначе
		СтруктураРезультата.Вставить("ДатаПлатежа",           Дата(1,1,1));
	КонецЕсли;
	СтруктураРезультата.Вставить("ПроцентПлатежа",        ПроцентПлатежа);
	СтруктураРезультата.Вставить("СуммаПлатежа",          СуммаПлатежа);
	СтруктураРезультата.Вставить("ВариантОтсчета",        ВариантОтсчета);
	СтруктураРезультата.Вставить("Сдвиг",                 Сдвиг);
	СтруктураРезультата.Вставить("СуммаЗалогаЗаТару",     СуммаЗалогаЗаТару);
	СтруктураРезультата.Вставить("ПроцентЗалогаЗаТару",   ПроцентЗалогаЗаТару);
	
	Если Операция = "Изменение" Тогда
		СтруктураРезультата.Вставить("ВариантОплатыПередИзменением",         ВариантОплатыПередИзменением);
		СтруктураРезультата.Вставить("ВариантОтсчетаПередИзменением",        ВариантОтсчетаПередИзменением);
		СтруктураРезультата.Вставить("СдвигПередИзменением",                 СдвигПередИзменением);
	КонецЕсли;
	
	СтруктураРезультата.Вставить("Модифицированность", Модифицированность);
	
	Закрыть(СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	Элементы.ДатаПлатежа.Видимость = ВариантОтсчета = Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыЗаказа
		ИЛИ ВариантОтсчета = Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыСогласования;
	
	Если НЕ Элементы.ДатаПлатежа.Видимость Тогда
		ДатаПлатежа = Дата(1,1,1);
	КонецЕсли;
	
	Элементы.СуммаЗалогаЗаТару.Видимость = ЕстьТара;
	Элементы.ПроцентЗалогаЗаТару.Видимость = ЕстьТара;
	Элементы.ВалютаЗалогаЗаТару.Видимость = ЕстьТара;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВариантОтсчета.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВариантОтсчета");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ВариантыОтсчетаДатыПлатежа.ОтДатыЗаказа;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='от даты договора'"));
	
КонецПроцедуры


#КонецОбласти