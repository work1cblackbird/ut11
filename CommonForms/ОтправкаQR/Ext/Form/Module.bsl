&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Отправитель", Отправитель);
	Параметры.Свойство("УИДМинтранс", УИДМинтранс);
	Параметры.Свойство("НомерДокумента", НомерДокумента);
	Параметры.Свойство("ДатаДокумента", ДатаДокумента);
	Параметры.Свойство("ТипДокумента", ТипДокумента);
	
	Если Параметры.Свойство("Получатели") Тогда
		Для Каждого Адрес Из Параметры.Получатели Цикл
			Если ЗначениеЗаполнено(Адрес) Тогда
				НовСтрока = Получатели.Добавить();
				НовСтрока.Адрес = Адрес;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;

	ОбменСГИСЭПД.СоздатьЭлементыВводаЗначенийСписка(ЭтотОбъект, "Получатели", "Адрес");

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ФоновоеЗадание = ЗапуститьЗагрузкуQRВФоновомЗадании();
	
	Если ФоновоеЗадание <> Неопределено
		И ФоновоеЗадание.Статус = "Выполняется" Тогда	
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОжидание;	
	КонецЕсли;
	
	НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	НастройкиОжидания.ВыводитьОкноОжидания = Ложь;
	
	Обработчик = Новый ОписаниеОповещения("ПослеЗагрузкиQR", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ФоновоеЗадание, Обработчик, НастройкиОжидания);

КонецПроцедуры

//@skip-check module-unused-method
&НаКлиенте
Процедура Подключаемый_ДобавлениеПоляВвода(Команда)
	
	ИмяТаблицыИПоля = СтрЗаменить(Команда.Имя, "ДобавлениеПоляВвода", "");
	МассивЧастей = ОбменСГИСЭПДКлиентСервер.РазделитьСтрокуСоСложнымРазделителем(ИмяТаблицыИПоля, "__");
	
	ДобавлениеПоляВводаСервер(МассивЧастей[0], МассивЧастей[1]);
	
КонецПроцедуры

&НаСервере
Процедура ДобавлениеПоляВводаСервер(ИмяТаблицы, ИмяПоля)
	
	ОбменСГИСЭПД.СоздатьЭлементыВводаЗначенийСписка(ЭтотОбъект, ИмяТаблицы, ИмяПоля, Истина);
	
КонецПроцедуры


&НаСервере
Функция ЗапуститьЗагрузкуQRВФоновомЗадании()
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("УИДМинтранс", УИДМинтранс);
	ПараметрыПроцедуры.Вставить("Отправитель", Отправитель);
		
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Загрузка QR-кода ЭТрН'");
	ПараметрыВыполнения.ОжидатьЗавершение = 0;
	
	Возврат ДлительныеОперации.ВыполнитьВФоне("ОбменСГИСЭПД.ЗагрузитьQRВФоне", ПараметрыПроцедуры, ПараметрыВыполнения);
	
КонецФункции

&НаКлиенте
Процедура ПослеЗагрузкиQR(Результат, ДополнительныеПараметры) Экспорт

	Картинка = "";
	Если Результат <> Неопределено
		И Результат.Статус = "Выполнено" Тогда	
		Если ПолучитьИзВременногоХранилища(Результат.АдресРезультата) <> Неопределено Тогда
			Картинка = Результат.АдресРезультата;
		КонецЕсли;
	КонецЕсли;
	
	Если Картинка <> "" Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаQR;
		Элементы.ФормаОтправитьПоПочте.Доступность = Истина;
		Элементы.ГруппаРеквизиты.Видимость = Истина;
	Иначе	
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаОшибка;
		Элементы.ФормаОтправитьПоПочте.Доступность = Ложь;
		Элементы.ГруппаРеквизиты.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоПочте(Команда)
	
	ОкончаниеПроверки = Новый ОписаниеОповещения("ОкончаниеПроверкиНаличиеУчетнойЗаписиДляОтправкиПочты", ЭтотОбъект);
	РаботаСПочтовымиСообщениямиКлиент.ПроверитьНаличиеУчетнойЗаписиДляОтправкиПочты(ОкончаниеПроверки);

КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеПроверкиНаличиеУчетнойЗаписиДляОтправкиПочты(Результат, ДополнительныеПарамтеры) Экспорт
	
	Если Результат = Истина Тогда
		ТекстОшибки = "";
		ОтправитьПисьмо(ТекстОшибки);	
		
		Если ЗначениеЗаполнено(ТекстОшибки) Тогда
			ПоказатьПредупреждение(, ТекстОшибки);
		Иначе
			ТекстОповещения = НСтр("ru = 'Письмо отправлено'");		
			ЗаголовокОповещения = НСтр("ru = 'QR-код перевозки'");	
			ДействиеПриНажатии = Неопределено;
			КартинкаОповещения = БиблиотекаКартинок.ЭмблемаСервиса1СЭДО48;
			
			#Если Не МобильноеПриложениеКлиент Тогда
			ПоказатьОповещениеПользователя(ЗаголовокОповещения, ДействиеПриНажатии, ТекстОповещения, КартинкаОповещения,
				СтатусОповещенияПользователя.Важное);
			#КонецЕсли
			
			Закрыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьПисьмо(ТекстОшибки = "")
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСПочтовымиСообщениями") Тогда
		МодульРаботаСПочтовымиСообщениями = ОбщегоНазначения.ОбщийМодуль("РаботаСПочтовымиСообщениями");
	Иначе
		ТекстОшибки = "Для отправки писем требуется наличие подсистемы ""СтандартныеПодсистемы.РаботаСПочтовымиСообщениями""";
		Возврат;
	КонецЕсли;
	
	Письмо = Новый ИнтернетПочтовоеСообщение();
	
	ДвоичныеДанныеQR = ПолучитьИзВременногоХранилища(Картинка);
	
	Вложение = Письмо.Вложения.Добавить(ДвоичныеДанныеQR, "QR");
	Вложение.Идентификатор = "QR";
	Вложение.СпособКодирования = СпособКодированияИнтернетПочтовогоВложения.MIME;
	Вложение.ТипСодержимого = "image/gif";
	
	Письмо.Тема = СтрШаблон(ОбменСГИСЭПД.ТекстЗаголовкаПисьмаQR(ТипДокумента), НомерДокумента, Формат(ДатаДокумента, "ДФ=dd.MM.yyyy;"));
	Письмо.Тексты.Добавить(СтрШаблон(ОбменСГИСЭПД.ТекстПисьмаQR(), УИДМинтранс), ТипТекстаПочтовогоСообщения.HTML);
	
	ДоступныеУчетныеЗаписи = МодульРаботаСПочтовымиСообщениями.ДоступныеУчетныеЗаписи(Истина,,Истина);	
	УчетнаяЗапись = ДоступныеУчетныеЗаписи[0].Ссылка;
	
	Для Каждого СтрПолучатель Из Получатели Цикл
		Если ЗначениеЗаполнено(СтрПолучатель.Адрес) Тогда
			Письмо.Получатели.Добавить(СтрПолучатель.Адрес);
		КонецЕсли;
	КонецЦикла;
	
	Письма = Новый Массив;
	Письма.Добавить(Письмо);
	
	МодульРаботаСПочтовымиСообщениями.ОтправитьПисьма(УчетнаяЗапись, Письма, ТекстОшибки);
	
КонецПроцедуры




