
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ДокументВозврата = Параметры.ДокументВозврата;
	Дата = Параметры.Дата;
	Валюта = Параметры.Валюта;
	ЦенаВключаетНДС = Параметры.ЦенаВключаетНДС;
	Партнер = Параметры.Партнер;
	Соглашение = Параметры.Соглашение;
	Организация = Параметры.Организация;
	Контрагент = Параметры.Контрагент;
	НалогообложениеНДС = Параметры.НалогообложениеНДС;
	Склад = Параметры.Склад;
	ЗакупкаПоИмпорту = Параметры.ЗакупкаПоИмпорту;
	ПредусмотренЗалогЗаТару = Параметры.ПредусмотренЗалогЗаТару;
	
	Если ЗакупкаПоИмпорту Тогда
		Период = Новый СтандартныйПериод();
		Период.ДатаОкончания = Дата;
		Элементы.ПериодДатаНачала.Доступность = Ложь;
	Иначе
		Период = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ПодборТоваровПоПоступлениям","ПериодПодбораТоваровПоПоступлениям");
		НаправлениеДеятельности = Параметры.НаправлениеДеятельности;
	КонецЕсли; 
		
	Если Период.ДатаОкончания = Дата(1, 1, 1) Тогда
		Период.Вариант = ВариантСтандартногоПериода.Месяц;
	КонецЕсли; 
	
	ЗаполнитьТаблицуТоваров();
	РассчитатьИтогиПоТаблицеТоваров();
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТоварыИнформационнаяНадпись,
		ТоварыВыбраноКоличество,
		ТоварыВыбраноСумма,
		Валюта);
	
	ИспользоватьМногооборотнуюТару = ПолучитьФункциональнуюОпцию("ИспользоватьМногооборотнуюТару");
	
	Если ИспользоватьМногооборотнуюТару И Параметры.ПоказыватьТару Тогда
		
		ЗаполнитьТаблицуТары();
		РассчитатьИтогиПоТаблицеТары();
		ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
			ТараИнформационнаяНадпись,
			ТараВыбраноКоличество,
			ТараВыбраноСумма,
			Валюта);
		
		Если Не Параметры.ПоказыватьТовары Тогда
			Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТара;
		Иначе
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТовары;
		КонецЕсли;
		
	Иначе
		
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТовары;
		
	КонецЕсли;
		
	МассивЭлементов = Новый Массив();
	МассивЭлементов.Добавить("ТаблицаТары");
	МассивЭлементов.Добавить("ТараИнформационнаяНадписьОтборы");
	МассивЭлементов.Добавить("ТараИнформационнаяНадпись");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "Видимость", ИспользоватьМногооборотнуюТару И Параметры.ПоказыватьТару);
	
	МассивЭлементов = Новый Массив();
	МассивЭлементов.Добавить("ПериодВариант");
	МассивЭлементов.Добавить("ПериодДатаНачала");
	МассивЭлементов.Добавить("ПериодДатаОкончания");
	МассивЭлементов.Добавить("Обновить");
	МассивЭлементов.Добавить("ТаблицаТоваров");
	МассивЭлементов.Добавить("ТоварыИнформационнаяНадпись");
	МассивЭлементов.Добавить("ТоварыИнформационнаяНадписьОтборы");
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "Видимость", Параметры.ПоказыватьТовары);
	
	МассивЭлементов = Новый Массив();
	МассивЭлементов.Добавить("ТаблицаТоваровЦена");
	МассивЭлементов.Добавить("ТаблицаТоваровПроцентРучнойСкидки");
	МассивЭлементов.Добавить("ТаблицаТоваровСуммаРучнойСкидки");
	МассивЭлементов.Добавить("ТаблицаТоваровНазначение");
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "Видимость", НЕ ЗакупкаПоИмпорту);

	ПодборТоваровКлиентСервер.СформироватьЗаголовокФормыПодбора(Заголовок, ДокументВозврата);
	СформироватьИнформационнуюНадписьОтборы();
	
	Элементы.ТаблицаТоваровНазначение.Видимость = Не ПолучитьФункциональнуюОпцию("БазоваяВерсия");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ПринудительноЗакрытьФорму Или ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПеренестиВДокумент И (ТоварыВыбраноКоличество > 0 Или ТараВыбраноКоличество > 0)  Тогда 
		
		Если ТоварыВыбраноКоличество > 0 И ТараВыбраноКоличество > 0 Тогда
			ТекстВопроса = НСтр("ru = 'Подобранные товары и многооборотная тара не перенесены в документ. Перенести?'")
		ИначеЕсли ТоварыВыбраноКоличество > 0 Тогда
			ТекстВопроса = НСтр("ru = 'Подобранные товары не перенесены в документ. Перенести?'")
		ИначеЕсли ТараВыбраноКоличество > 0 Тогда
			ТекстВопроса = НСтр("ru = 'Подобранная многооборотная тара не перенесена в документ. Перенести?'")
		КонецЕсли;
		
		Отказ = Истина;
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПередЗакрытиемВопросЗавершение", ЭтотОбъект),
			ТекстВопроса,
			РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемВопросЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
		ПринудительноЗакрытьФорму = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ПеренестиВДокумент Тогда
		
		АдресТоваровВХранилище = ПоместитьТоварыВХранилище();
		Структура = Новый Структура("АдресТоваровВХранилище", АдресТоваровВХранилище);
		ПеренестиВДокумент = Истина;
		ОповеститьОВыборе(Структура);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	Если ЗакупкаПоИмпорту Тогда
		Настройки.Удалить("Период");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ПодборТоваровПоПоступлениям","ПериодПодбораТоваровПоПоступлениям", Период);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТаблицаТоваровВыбранПриИзменении(Элемент)
	
	Данные = Элементы.ТаблицаТоваров.ТекущиеДанные;
	
	ЗнакСложения = ?(Данные.Выбран, 1, -1);
	ТоварыВыбраноКоличество = ТоварыВыбраноКоличество + ЗнакСложения;
	ТоварыВыбраноСумма = ТоварыВыбраноСумма + Данные.СуммаСНДС*ЗнакСложения;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТоварыИнформационнаяНадпись,
		ТоварыВыбраноКоличество,
		ТоварыВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТарыВыбранПриИзменении(Элемент)
	
	Данные = Элементы.ТаблицаТары.ТекущиеДанные;
	
	ЗнакСложения = ?(Данные.Выбран, 1, -1);
	ТараВыбраноКоличество = ТараВыбраноКоличество + ЗнакСложения;
	ТараВыбраноСумма = ТараВыбраноСумма + Данные.Сумма*ЗнакСложения;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТараИнформационнаяНадпись,
		ТараВыбраноКоличество,
		ТараВыбраноСумма,
		Валюта);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокументВыполнить()
	
	ПеренестиВДокумент = Истина;
	Закрыть(КодВозвратаДиалога.OK);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТовары()
	
	ВыбратьВсеТоварыНаСервере();
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТоварыИнформационнаяНадпись,
		ТоварыВыбраноКоличество,
		ТоварыВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьТовары()
	
	ИсключитьВсеТоварыНаСервере();
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТоварыИнформационнаяНадпись,
		ТоварыВыбраноКоличество,
		ТоварыВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВыделенныеТовары(Команда)
	
	МассивСтрок = Элементы.ТаблицаТоваров.ВыделенныеСтроки;
	Для Каждого ИдентификаторСтроки Из МассивСтрок Цикл
		Строка = ТаблицаТоваров.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если Не Строка.Выбран Тогда
			Строка.Выбран = Истина;
			ТоварыВыбраноКоличество = ТоварыВыбраноКоличество + 1;
			ТоварыВыбраноСумма = ТоварыВыбраноСумма + Строка.СуммаСНДС;
		КонецЕсли;
	КонецЦикла;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТоварыИнформационнаяНадпись,
		ТоварыВыбраноКоличество,
		ТоварыВыбраноСумма, 
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВыделенныеТовары(Команда)
	
	МассивСтрок = Элементы.ТаблицаТоваров.ВыделенныеСтроки;
	Для Каждого ИдентификаторСтроки Из МассивСтрок Цикл
		Строка = ТаблицаТоваров.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если Строка.Выбран Тогда
			Строка.Выбран = Ложь;
			ТоварыВыбраноКоличество = ТоварыВыбраноКоличество - 1;
			ТоварыВыбраноСумма = ТоварыВыбраноСумма - Строка.СуммаСНДС;
		КонецЕсли;
	КонецЦикла;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТоварыИнформационнаяНадпись,
		ТоварыВыбраноКоличество,
		ТоварыВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТару()
	
	ВыбратьВсюТаруНаСервере();
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТараИнформационнаяНадпись,
		ТараВыбраноКоличество,
		ТараВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьТару()
	
	ИсключитьВсюТаруНаСервере();
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТараИнформационнаяНадпись,
		ТараВыбраноКоличество,
		ТараВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВыделеннуюТару(Команда)
	
	МассивСтрок = Элементы.ТаблицаТары.ВыделенныеСтроки;
	Для Каждого ИдентификаторСтроки Из МассивСтрок Цикл
		Строка = ТаблицаТары.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если Не Строка.Выбран Тогда
			Строка.Выбран = Истина;
			ТараВыбраноКоличество = ТараВыбраноКоличество + 1;
			ТараВыбраноСумма = ТараВыбраноСумма + Строка.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТараИнформационнаяНадпись,
		ТараВыбраноКоличество,
		ТараВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВыделеннуюТару(Команда)
	
	МассивСтрок = Элементы.ТаблицаТары.ВыделенныеСтроки;
	Для Каждого ИдентификаторСтроки Из МассивСтрок Цикл
		Строка = ТаблицаТары.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если Строка.Выбран Тогда
			Строка.Выбран = Ложь;
			ТараВыбраноКоличество = ТараВыбраноКоличество - 1;
			ТараВыбраноСумма = ТараВыбраноСумма - Строка.Сумма
		КонецЕсли;
	КонецЦикла;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТараИнформационнаяНадпись,
		ТараВыбраноКоличество,
		ТараВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТовары(Команда)
	
	ЗаполнитьТаблицуТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТару(Команда)
	
	ЗаполнитьТаблицуТары();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодВариантПриИзменении(Элемент)
	
	ЗаполнитьТаблицуТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодДатаНачалаПриИзменении(Элемент)
	
	ЗаполнитьТаблицуТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодДатаОкончанияПриИзменении(Элемент)
	
	ЗаполнитьТаблицуТоваров();
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаТоваровСтавкаНДС.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаТоваровСуммаНДС.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НалогообложениеНДС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаТоваровСуммаРучнойСкидки.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаТоваровПроцентРучнойСкидки.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	//

	ПараметрыУсловногоОформления = НоменклатураСервер.НовыеПараметрыУсловногоОформленияЕдиницИзмерения();
	ПараметрыУсловногоОформления.ИмяПоляЕдиницаИзмерения = "ТаблицаТоваровНоменклатураЕдиницаИзмерения";
	ПараметрыУсловногоОформления.ПутьКПолюУпаковка = "ТаблицаТоваров.Упаковка";
	НоменклатураСервер.УстановитьУсловноеОформлениеЕдиницИзмерения(ЭтаФорма, ПараметрыУсловногоОформления);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаТарыДатаВозврата.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаТары.ДатаВозврата");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = Новый СтандартнаяДатаНачала(ВариантСтандартнойДатыНачала.НачалоЭтогоДня);

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПросроченныеДанныеЦвет);

КонецПроцедуры

#Область Прочее

&НаСервере
Функция ПоместитьТоварыВХранилище()
	
	Товары = ТаблицаТоваров.Выгрузить(Новый Структура("Выбран", Истина));
	Для Каждого ТекСтрока Из ТаблицаТары Цикл
		Если ТекСтрока.Выбран Тогда
			НоваяСтрока = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			НоваяСтрока.КоличествоУпаковок = ТекСтрока.Количество;
			НоваяСтрока.СуммаСНДС = ТекСтрока.Сумма;
			НоваяСтрока.СтавкаНДС = Справочники.СтавкиНДС.БезНДС;
		КонецЕсли;
	КонецЦикла;
	ВозвращаемаяСтруктура = Новый Структура("Товары", Товары);
	АдресТоваровВХранилище = ПоместитьВоВременноеХранилище(ВозвращаемаяСтруктура, УникальныйИдентификатор);
	
	Возврат АдресТоваровВХранилище;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуТоваров()
	
	ТаблицаТоваров.Очистить();
	
	Запрос = Новый Запрос;
	
	Если ЗакупкаПоИмпорту Тогда
		Запрос.Текст = ТекстЗапросаЗакупкаПоИмпорту();
		Запрос.УстановитьПараметр("Партнер", Партнер);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.УстановитьПараметр("ОтборПоСкладу", ЗначениеЗаполнено(Склад));  		
		ДатаОкончания =  Новый Граница(Период.ДатаОкончания, ВидГраницы.Включая);
		Запрос.УстановитьПараметр("Дата", ДатаОкончания);
		Запрос.УстановитьПараметр("ДатаПоступления", ?(ЗначениеЗаполнено(Период.ДатаНачала), Период.ДатаНачала, NULL));
		Запрос.УстановитьПараметр("ТипДокументаИмпорта", УчетПрослеживаемыхТоваровЛокализация.ИдентификаторТаможеннаяДекларацияИмпорт());
		
		ХозяйственныеОперацииРаздельнойЗакупки = ЗакупкиСервер.ХозяйственныеОперацииРаздельнойЗакупкиБезОтборов();
		Запрос.УстановитьПараметр("ХозяйственныеОперацииРаздельнойЗакупки", ХозяйственныеОперацииРаздельнойЗакупки);

		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		БазоваяВалюта = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);
		
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = ТаблицаТоваров.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			Если Валюта <> Выборка.ВалютаПоступления И ЗначениеЗаполнено(Выборка.ВалютаПоступления) Тогда
				КурсНовойВалюты = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(Валюта, Выборка.ДатаПоступления, БазоваяВалюта);
				КурсСтаройВалюты = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(Выборка.ВалютаПоступления, Выборка.ДатаПоступления, БазоваяВалюта);
				
				НоваяСтрока.СуммаСНДС = РаботаСКурсамиВалютУТКлиентСервер.ПересчитатьПоКурсу(
					НоваяСтрока.СуммаСНДС,
					КурсСтаройВалюты,
					КурсНовойВалюты);
					
				Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(
					НоваяСтрока,
					Ложь,
					Ложь,
					Ложь);

			КонецЕсли;
			
			Если Выборка.ЦенаВключаетНДС <> Ложь Тогда
				// в поле Сумма получим сумму без НДС
				Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(НоваяСтрока, Ложь, Ложь, Ложь);
			КонецЕсли;
			
		КонецЦикла;

	Иначе
		Запрос.Текст = ТекстЗапросаВозвраты();
		Запрос.УстановитьПараметр("Партнер", Партнер);
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
		Запрос.УстановитьПараметр("Соглашение", Соглашение);
		Запрос.УстановитьПараметр("НалогообложениеНДС", НалогообложениеНДС);
		Запрос.УстановитьПараметр("ДокументВозврата", ДокументВозврата);
		Запрос.УстановитьПараметр("НаправлениеДеятельности", НаправлениеДеятельности);

		ТаблицаТоваровВыгрузка = Запрос.Выполнить().Выгрузить();
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика, 
			|Назначение, СтавкаНДС, Склад, ДокументПоступления");
		
		Для Каждого Строка Из ТаблицаТоваровВыгрузка Цикл
			
			Если Строка.Количество < 0 Тогда
				
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
				СтрокиЗакупки = ТаблицаТоваровВыгрузка.НайтиСтроки(СтруктураПоиска);
				
				Для Каждого СтрокаЗакупки Из СтрокиЗакупки Цикл
					
					Если СтрокаЗакупки.Количество < 0 Тогда
						Продолжить;
					КонецЕсли; 
					
					Строка.Количество 		= -Строка.Количество;
					Строка.Сумма 			= -Строка.Сумма;
					Строка.СуммаНДС 		= -Строка.СуммаНДС;
					Строка.СуммаСНДС 		= -Строка.СуммаСНДС;
					
					Если Строка.Количество > СтрокаЗакупки.Количество Тогда
						КоличествоНаВычет 	= СтрокаЗакупки.Количество;
						СуммаНаВычет 		= СтрокаЗакупки.Сумма;
						СуммаНДСНаВычет 	= СтрокаЗакупки.СуммаНДС;
						СуммаСНДСНаВычет 	= СтрокаЗакупки.СуммаСНДС;
					Иначе
						КоличествоНаВычет 	= Строка.Количество;
						СуммаНаВычет 		= Строка.Сумма;
						СуммаНДСНаВычет 	= Строка.СуммаНДС;
						СуммаСНДСНаВычет 	= Строка.СуммаСНДС;
					КонецЕсли;
					
					СтрокаЗакупки.Количество 	= СтрокаЗакупки.Количество - КоличествоНаВычет;
					Строка.Количество 			= Строка.Количество - КоличествоНаВычет;
					
					СтрокаЗакупки.Сумма 		= СтрокаЗакупки.Сумма - СуммаНаВычет;
					Строка.Сумма 				= Строка.Сумма - СуммаНаВычет;
					
					СтрокаЗакупки.СуммаНДС 		= СтрокаЗакупки.СуммаНДС - СуммаНДСНаВычет;
					Строка.СуммаНДС 			= Строка.СуммаНДС - СуммаНДСНаВычет;
					
					СтрокаЗакупки.СуммаСНДС 	= СтрокаЗакупки.СуммаСНДС - СуммаСНДСНаВычет;
					Строка.СуммаСНДС 			= Строка.СуммаСНДС - СуммаСНДСНаВычет;
					
				КонецЦикла;
				
			КонецЕсли;
				
		КонецЦикла;
		
		МассивУдаляемыхСтрок = Новый Массив();
		Для Каждого Строка Из ТаблицаТоваровВыгрузка Цикл 
			Если Строка.Количество <= 0 Тогда
				МассивУдаляемыхСтрок.Добавить(Строка);
			КонецЕсли;
		КонецЦикла;
		Для Каждого Строка Из МассивУдаляемыхСтрок Цикл
			ТаблицаТоваровВыгрузка.Удалить(Строка);
		КонецЦикла;
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
		
		БазоваяВалюта = ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(Организация);
		
		Для каждого Строка Из ТаблицаТоваровВыгрузка Цикл
			
			НоваяСтрока = ТаблицаТоваров.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрока, СтруктураДействий, Неопределено);
			
			Если Валюта <> Строка.ВалютаПоступления Тогда
				КурсНовойВалюты = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(Валюта, Дата, БазоваяВалюта);
				КурсСтаройВалюты = РаботаСКурсамиВалютУТ.ПолучитьКурсВалюты(Строка.ВалютаПоступления, Дата, БазоваяВалюта);
				
				НоваяСтрока.СуммаСНДС = РаботаСКурсамиВалютУТКлиентСервер.ПересчитатьПоКурсу(
					НоваяСтрока.СуммаСНДС,
					КурсСтаройВалюты,
					КурсНовойВалюты);
				
			КонецЕсли;
			
			Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(
				НоваяСтрока,
				ЦенаВключаетНДС,
				Ложь,
				Ложь,
				Истина);
			
		КонецЦикла;
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуТары()
	
	ТаблицаТары.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПринятаяВозвратнаяТараОстатки.Номенклатура        КАК Номенклатура,
	|	ПринятаяВозвратнаяТараОстатки.Характеристика      КАК Характеристика,
	|	ПринятаяВозвратнаяТараОстатки.Партнер             КАК Партнер,
	|	ПринятаяВозвратнаяТараОстатки.ДокументПоступления КАК ДокументПоступления,
	|	ПринятаяВозвратнаяТараОстатки.КоличествоОстаток   КАК Количество,
	|	ПринятаяВозвратнаяТараОстатки.СуммаОстаток        КАК Сумма
	|ПОМЕСТИТЬ
	|	втПринятаяВозвратнаяТара
	|ИЗ
	|	РегистрНакопления.ПринятаяВозвратнаяТара.Остатки(
	|			,
	|			Партнер = &Партнер
	|			И ДокументПоступления.Организация = &Организация
	|			И ДокументПоступления.Контрагент = &Контрагент
	|			И ДокументПоступления.Организация = &Организация
	|			И (ДокументПоступления.Соглашение = &Соглашение ИЛИ НЕ ДокументПоступления Ссылка Документ.ПриобретениеТоваровУслуг)
	|			И ДокументПоступления.Валюта = &Валюта
	|			И (ДокументПоступления.НалогообложениеНДС = &НалогообложениеНДС ИЛИ НЕ ДокументПоступления Ссылка Документ.ПриобретениеТоваровУслуг)
	|			И ДокументПоступления.ТребуетсяЗалогЗаТару = &ПредусмотренЗалогЗаТару
	|		) КАК ПринятаяВозвратнаяТараОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПринятаяВозвратнаяТараДвижения.Номенклатура        КАК Номенклатура,
	|	ПринятаяВозвратнаяТараДвижения.Характеристика      КАК Характеристика,
	|	ПринятаяВозвратнаяТараДвижения.Партнер             КАК Партнер,
	|	ПринятаяВозвратнаяТараДвижения.ДокументПоступления КАК ДокументПоступления,
	|	ВЫБОР КОГДА ПринятаяВозвратнаяТараДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-ПринятаяВозвратнаяТараДвижения.Количество
	|		ИНАЧЕ
	|			ПринятаяВозвратнаяТараДвижения.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР КОГДА ПринятаяВозвратнаяТараДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-ПринятаяВозвратнаяТараДвижения.Сумма
	|		ИНАЧЕ
	|			ПринятаяВозвратнаяТараДвижения.Сумма
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	РегистрНакопления.ПринятаяВозвратнаяТара КАК ПринятаяВозвратнаяТараДвижения
	|ГДЕ
	|	ПринятаяВозвратнаяТараДвижения.Регистратор = &ДокументВозврата
	|;
	|ВЫБРАТЬ
	|	втПринятаяВозвратнаяТара.Номенклатура              КАК Номенклатура,
	|	втПринятаяВозвратнаяТара.Характеристика            КАК Характеристика,
	|	втПринятаяВозвратнаяТара.Партнер                   КАК Партнер,
	|	втПринятаяВозвратнаяТара.ДокументПоступления       КАК ДокументПоступления,
	|	втПринятаяВозвратнаяТара.ДокументПоступления.Номер КАК НомерПоступления,
	|	втПринятаяВозвратнаяТара.ДокументПоступления.Дата  КАК ДатаПоступления,
	|	втПринятаяВозвратнаяТара.ДокументПоступления.ДатаВозвратаМногооборотнойТары КАК ДатаВозврата,
	|	СУММА(втПринятаяВозвратнаяТара.Количество)         КАК Количество,
	|	СУММА(втПринятаяВозвратнаяТара.Сумма)              КАК Сумма,
	|	ВЫБОР
	|		КОГДА
	|			СУММА(втПринятаяВозвратнаяТара.Количество) = 0
	|		ТОГДА
	|			СУММА(втПринятаяВозвратнаяТара.Сумма)
	|		ИНАЧЕ
	|			СУММА(втПринятаяВозвратнаяТара.Сумма) / СУММА(втПринятаяВозвратнаяТара.Количество)
	|	КОНЕЦ КАК Цена
	|ИЗ
	|	втПринятаяВозвратнаяТара
	|СГРУППИРОВАТЬ ПО
	|	втПринятаяВозвратнаяТара.Номенклатура,
	|	втПринятаяВозвратнаяТара.Характеристика,
	|	втПринятаяВозвратнаяТара.Партнер,
	|	втПринятаяВозвратнаяТара.ДокументПоступления
	|ИМЕЮЩИЕ
	|	СУММА(втПринятаяВозвратнаяТара.Количество) > 0
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВозврата ВОЗР,
	|	Номенклатура.Наименование ВОЗР,
	|	Характеристика.Наименование ВОЗР
	|";

	Запрос.УстановитьПараметр("Партнер",                 Партнер);
	Запрос.УстановитьПараметр("Контрагент",              Контрагент);
	Запрос.УстановитьПараметр("Организация",             Организация);
	Запрос.УстановитьПараметр("Соглашение",              Соглашение);
	Запрос.УстановитьПараметр("Валюта",                  Валюта);
	Запрос.УстановитьПараметр("НалогообложениеНДС",      НалогообложениеНДС);
	Запрос.УстановитьПараметр("ДокументВозврата",        ДокументВозврата);
	Запрос.УстановитьПараметр("ПредусмотренЗалогЗаТару", ПредусмотренЗалогЗаТару);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаТары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьИтогиПоТаблицеТоваров()
	
	ТоварыВыбраноКоличество = 0;
	ТоварыВыбраноСумма = 0;
	
	Для НомерСтроки=0 По ТаблицаТоваров.Количество()-1 Цикл
		
		Если ТаблицаТоваров[НомерСтроки].Выбран Тогда
			ТоварыВыбраноКоличество = ТоварыВыбраноКоличество + 1;
			ТоварыВыбраноСумма = ТоварыВыбраноСумма + ТаблицаТоваров[НомерСтроки].СуммаСНДС;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьИтогиПоТаблицеТары()
	
	ТараВыбраноКоличество = 0;
	ТараВыбраноСумма = 0;
	
	Для НомерСтроки=0 По ТаблицаТары.Количество()-1 Цикл
		
		Если ТаблицаТары[НомерСтроки].Выбран Тогда
			ТараВыбраноКоличество = ТараВыбраноКоличество + 1;
			ТараВыбраноСумма = ТараВыбраноСумма + ТаблицаТары[НомерСтроки].Сумма;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВыбратьВсеТоварыНаСервере()
	
	Для Каждого СтрокаТаблицы Из ТаблицаТоваров Цикл
		СтрокаТаблицы.Выбран = Истина;
	КонецЦикла;
	
	ТоварыВыбраноКоличество = ТаблицаТоваров.Количество();
	ТоварыВыбраноСумма = ТаблицаТоваров.Итог("СуммаСНДС");
	
КонецПроцедуры

&НаСервере
Процедура ИсключитьВсеТоварыНаСервере()
	
	Для Каждого СтрокаТаблицы Из ТаблицаТоваров Цикл
		СтрокаТаблицы.Выбран = Ложь;
	КонецЦикла;
	
	ТоварыВыбраноКоличество = 0;
	ТоварыВыбраноСумма = 0;
	
КонецПроцедуры

&НаСервере
Процедура ВыбратьВсюТаруНаСервере()
	
	Для Каждого СтрокаТаблицы Из ТаблицаТары Цикл
		СтрокаТаблицы.Выбран = Истина;
	КонецЦикла;
	
	ТараВыбраноКоличество = ТаблицаТары.Количество();
	ТараВыбраноСумма = ТаблицаТары.Итог("Сумма");
	
КонецПроцедуры

&НаСервере
Процедура ИсключитьВсюТаруНаСервере()
	
	Для Каждого СтрокаТаблицы Из ТаблицаТары Цикл
		СтрокаТаблицы.Выбран = Ложь;
	КонецЦикла;
	
	ТараВыбраноКоличество = 0;
	ТараВыбраноСумма = 0;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьИнформационнуюНадписьОтборы()
	
	ИспользоватьПартнеровКакКонтрагентов = ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов");
	
	ТоварыИнформационнаяНадписьОтборы = НСтр("ru='Отбор по: %Организация%, %Партнер%, %Контрагент%, %Соглашение%, %НалогообложениеНДС%, %Склад%'");
	Если ИспользоватьПартнеровКакКонтрагентов Тогда
		ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,", %Контрагент%", "");
	КонецЕсли;
	ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Организация%", Организация);
	ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Партнер%", Партнер);
	ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Контрагент%", Контрагент);
	ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Соглашение%", Соглашение);
	ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%НалогообложениеНДС%", НалогообложениеНДС);
	ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Склад%", Склад);
	
	ТараИнформационнаяНадписьОтборы = НСтр("ru='Отбор по: %Организация%, %Партнер%, %Контрагент%, %Валюта%, %Соглашение%, %НалогообложениеНДС%'");
	Если ИспользоватьПартнеровКакКонтрагентов Тогда
		ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,", %Контрагент%", "");
	КонецЕсли;
	ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,"%Организация%", Организация);
	ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,"%Партнер%", Партнер);
	ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,"%Контрагент%", Контрагент);
	ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,"%Соглашение%", Соглашение);
	ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,"%Валюта%", Валюта);
	ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,"%НалогообложениеНДС%", НалогообложениеНДС);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекстЗапросаВозвраты()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПриобретениеТоваровУслуг.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДокументыПоступления
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.РеестрДокументов КАК РеестрДокументовСторноИсправление
	|	ПО
	|		ПриобретениеТоваровУслуг.Ссылка = РеестрДокументовСторноИсправление.СторнируемыйДокумент
	|		И РеестрДокументовСторноИсправление.Проведен
	|		И НЕ РеестрДокументовСторноИсправление.ДополнительнаяЗапись
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ПриобретениеТоваровУслуг.Проведен
	|	И ПриобретениеТоваровУслуг.Контрагент = &Контрагент
	|	И ПриобретениеТоваровУслуг.Организация = &Организация
	|	И ПриобретениеТоваровУслуг.Соглашение = &Соглашение
	|	И ПриобретениеТоваровУслуг.НалогообложениеНДС = &НалогообложениеНДС
	|	И ПриобретениеТоваровУслуг.Партнер = &Партнер
	|	И ПриобретениеТоваровУслуг.НаправлениеДеятельности = &НаправлениеДеятельности
	|	И РеестрДокументовСторноИсправление.Ссылка ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(КорректировкаПриобретения.Дата) КАК Дата,
	|	ДокументыПоступления.Ссылка КАК СсылкаПоступления
	|ПОМЕСТИТЬ ДанныеКорректировки
	|ИЗ
	|	ДокументыПоступления КАК ДокументыПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
	|		ПО (КорректировкаПриобретения.ДокументОснование = ДокументыПоступления.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументовСторноИсправление
	|		ПО КорректировкаПриобретения.Ссылка = РеестрДокументовСторноИсправление.СторнируемыйДокумент
	|		И РеестрДокументовСторноИсправление.Проведен
	|		И НЕ РеестрДокументовСторноИсправление.ДополнительнаяЗапись
	|ГДЕ
	|	КорректировкаПриобретения.Проведен
	|	И РеестрДокументовСторноИсправление.Ссылка ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыПоступления.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СсылкаПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(КорректировкаПриобретения.Ссылка) КАК Ссылка,
	|	МАКСИМУМ(КорректировкаПриобретения.Ссылка.Дата) КАК Дата,
	|	КорректировкаПриобретения.Ссылка.ДокументОснование КАК СсылкаПоступления
	|ПОМЕСТИТЬ ДанныеПоследнейКорректировки
	|ИЗ
	|	Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
	|ГДЕ
	|	(КорректировкаПриобретения.Ссылка.ДокументОснование, КорректировкаПриобретения.Ссылка.Дата) В
	|			(ВЫБРАТЬ
	|				ДанныеКорректировки.СсылкаПоступления КАК СсылкаПоступления,
	|				ДанныеКорректировки.Дата КАК Дата
	|			ИЗ
	|				ДанныеКорректировки)
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаПриобретения.Ссылка.ДокументОснование
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	СсылкаПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ДанныеПоследнейКорректировки.Ссылка ЕСТЬ NULL 
	|			ТОГДА ДокументыПоступления.Ссылка
	|		ИНАЧЕ ДанныеПоследнейКорректировки.Ссылка
	|	КОНЕЦ КАК Ссылка
	|ПОМЕСТИТЬ СсылкиНаПоступления
	|ИЗ
	|	ДокументыПоступления КАК ДокументыПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеПоследнейКорректировки КАК ДанныеПоследнейКорректировки
	|		ПО ДокументыПоступления.Ссылка = ДанныеПоследнейКорректировки.СсылкаПоступления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КорректировкаПриобретенияТовары.Номенклатура КАК Номенклатура,
	|	КорректировкаПриобретенияТовары.Характеристика КАК Характеристика,
	|	КорректировкаПриобретенияТовары.Назначение КАК Назначение,
	|	КорректировкаПриобретенияТовары.Цена КАК Цена,
	|	КорректировкаПриобретенияТовары.Ссылка.ДокументОснование КАК ДокументПоступления,
	|	КорректировкаПриобретенияТовары.Упаковка,
	|	КорректировкаПриобретенияТовары.СтавкаНДС КАК СтавкаНДС,
	|	КорректировкаПриобретенияТовары.Склад КАК Склад,
	|	NULL КАК ПроцентРучнойСкидки,
	|	КорректировкаПриобретенияТовары.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	КорректировкаПриобретенияТовары.Ссылка.Валюта КАК Валюта,
	|	КорректировкаПриобретенияТовары.Ссылка.ДокументОснование.Дата КАК ДатаПоступления,
	|	КорректировкаПриобретенияТовары.Ссылка.ДокументОснование.Номер КАК НомерПоступления,
	|	КорректировкаПриобретенияТовары.Ссылка.ДокументОснование.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару,
	|	СУММА(КорректировкаПриобретенияТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(КорректировкаПриобретенияТовары.Количество) КАК Количество,
	|	СУММА(КорректировкаПриобретенияТовары.Сумма) КАК Сумма,
	|	СУММА(КорректировкаПриобретенияТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(КорректировкаПриобретенияТовары.СуммаСНДС) КАК СуммаСНДС,
	|	NULL КАК СуммаРучнойСкидки,
	|	NULL КАК НомерСтроки
	|ПОМЕСТИТЬ ДанныеДокументовПоступления
	|ИЗ
	|	СсылкиНаПоступления КАК СсылкиНаПоступления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения.Товары КАК КорректировкаПриобретенияТовары
	|		ПО (КорректировкаПриобретенияТовары.Ссылка = СсылкиНаПоступления.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	КорректировкаПриобретенияТовары.Номенклатура,
	|	КорректировкаПриобретенияТовары.Характеристика,
	|	КорректировкаПриобретенияТовары.Назначение,
	|	КорректировкаПриобретенияТовары.Цена,
	|	КорректировкаПриобретенияТовары.Ссылка.ДокументОснование,
	|	КорректировкаПриобретенияТовары.Упаковка,
	|	КорректировкаПриобретенияТовары.СтавкаНДС,
	|	КорректировкаПриобретенияТовары.Склад,
	|	КорректировкаПриобретенияТовары.Ссылка.ЦенаВключаетНДС,
	|	КорректировкаПриобретенияТовары.Ссылка.Валюта,
	|	КорректировкаПриобретенияТовары.Ссылка.ДокументОснование.Дата,
	|	КорректировкаПриобретенияТовары.Ссылка.ДокументОснование.Номер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриобретениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	ПриобретениеТоваровУслугТовары.Характеристика КАК Характеристика,
	|	ПриобретениеТоваровУслугТовары.Назначение КАК Назначение,
	|	ПриобретениеТоваровУслугТовары.Цена КАК Цена,
	|	ПриобретениеТоваровУслугТовары.Ссылка КАК ДокументПоступления,
	|	ПриобретениеТоваровУслугТовары.Упаковка КАК Упаковка,
	|	ПриобретениеТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
	|	ПриобретениеТоваровУслугТовары.Склад КАК Склад,
	|	ПриобретениеТоваровУслугТовары.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
	|	ПриобретениеТоваровУслугТовары.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ПриобретениеТоваровУслугТовары.Ссылка.Валюта КАК Валюта,
	|	ПриобретениеТоваровУслугТовары.Ссылка.Дата КАК ДатаПоступления,
	|	ПриобретениеТоваровУслугТовары.Ссылка.Номер КАК НомерПоступления,
	|	ПриобретениеТоваровУслугТовары.Ссылка.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару,
	|	СУММА(ПриобретениеТоваровУслугТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ПриобретениеТоваровУслугТовары.Количество) КАК Количество,
	|	СУММА(ПриобретениеТоваровУслугТовары.Сумма) КАК Сумма,
	|	СУММА(ПриобретениеТоваровУслугТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ПриобретениеТоваровУслугТовары.СуммаСНДС) КАК СуммаСНДС,
	|	СУММА(ПриобретениеТоваровУслугТовары.СуммаРучнойСкидки) КАК СуммаРучнойСкидки,
	|	МИНИМУМ(НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	СсылкиНаПоступления КАК СсылкиНаПоступления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|		ПО (ПриобретениеТоваровУслугТовары.Ссылка = СсылкиНаПоступления.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриобретениеТоваровУслугТовары.Номенклатура,
	|	ПриобретениеТоваровУслугТовары.Характеристика,
	|	ПриобретениеТоваровУслугТовары.Назначение,
	|	ПриобретениеТоваровУслугТовары.Цена,
	|	ПриобретениеТоваровУслугТовары.Ссылка,
	|	ПриобретениеТоваровУслугТовары.СтавкаНДС,
	|	ПриобретениеТоваровУслугТовары.ПроцентРучнойСкидки,
	|	ПриобретениеТоваровУслугТовары.Склад,
	|	ПриобретениеТоваровУслугТовары.Упаковка,
	|	ПриобретениеТоваровУслугТовары.Ссылка.ЦенаВключаетНДС,
	|	ПриобретениеТоваровУслугТовары.Ссылка.Валюта,
	|	ПриобретениеТоваровУслугТовары.Ссылка.Дата,
	|	ПриобретениеТоваровУслугТовары.Ссылка.Номер
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика, 
	|	Назначение,
	|	ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаПроверяемыеТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаПроверяемыеТовары.Характеристика КАК Характеристика,
	|	ТаблицаПроверяемыеТовары.Назначение КАК Назначение,
	|	ТаблицаПроверяемыеТовары.ДокументПоступления,
	|	ТаблицаПроверяемыеТовары.ДокументПоступления.Дата КАК ДатаПоступления,
	|	ТаблицаПроверяемыеТовары.ДокументПоступления.Номер КАК НомерПоступления,
	|	ТаблицаПроверяемыеТовары.ДокументПоступления.Валюта КАК Валюта,
	|	ТаблицаПроверяемыеТовары.ДокументПоступления.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ТаблицаПроверяемыеТовары.Упаковка,
	|	ТаблицаПроверяемыеТовары.Ссылка.Склад КАК Склад,
	|	ТаблицаПроверяемыеТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТаблицаПроверяемыеТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ТаблицаПроверяемыеТовары.Количество) КАК Количество,
	|	СУММА(ТаблицаПроверяемыеТовары.Сумма) КАК Сумма,
	|	СУММА(ТаблицаПроверяемыеТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТаблицаПроверяемыеТовары.СуммаСНДС) КАК СуммаСНДС
	|ПОМЕСТИТЬ ДанныеДокументовВозврата
	|ИЗ
	|	ДокументыПоступления КАК ДокументыПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаПроверяемыеТовары
	|		ПО (ТаблицаПроверяемыеТовары.ДокументПоступления = ДокументыПоступления.Ссылка)
	|			И ТаблицаПроверяемыеТовары.Ссылка <> &ДокументВозврата
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РеестрДокументов КАК РеестрДокументовСторноИсправление
	|		ПО ТаблицаПроверяемыеТовары.Ссылка = РеестрДокументовСторноИсправление.СторнируемыйДокумент
	|			И РеестрДокументовСторноИсправление.Проведен
	|			И НЕ РеестрДокументовСторноИсправление.ДополнительнаяЗапись
	|ГДЕ
	|	ТаблицаПроверяемыеТовары.Ссылка.Проведен
	|	И РеестрДокументовСторноИсправление.Ссылка ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПроверяемыеТовары.Номенклатура,
	|	ТаблицаПроверяемыеТовары.Характеристика,
	|	ТаблицаПроверяемыеТовары.ДокументПоступления,
	|	ТаблицаПроверяемыеТовары.Назначение,
	|	ТаблицаПроверяемыеТовары.Упаковка,
	|	ТаблицаПроверяемыеТовары.СтавкаНДС,
	|	ТаблицаПроверяемыеТовары.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика, 
	|	Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(ДанныеДокументовПоступления.Номенклатура, ДанныеДокументовВозврата.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ДанныеДокументовПоступления.Характеристика, ДанныеДокументовВозврата.Характеристика) КАК Характеристика,
	|	ЕСТЬNULL(ДанныеДокументовПоступления.Назначение, ДанныеДокументовВозврата.Назначение) КАК Назначение,
	|	0 КАК КоличествоУпаковок,
	|	ЕСТЬNULL(ДанныеДокументовПоступления.Упаковка, ДанныеДокументовВозврата.Упаковка) КАК Упаковка,
	|	ЕСТЬNULL(ДанныеДокументовПоступления.Склад, ДанныеДокументовВозврата.Склад) КАК Склад,
	|	ЕСТЬNULL(ДанныеДокументовПоступления.ДатаПоступления, ДанныеДокументовВозврата.ДатаПоступления) КАК ДатаПоступления,
	|	ЕСТЬNULL(ДанныеДокументовПоступления.НомерПоступления, ДанныеДокументовВозврата.НомерПоступления) КАК НомерПоступления,
	|	ЕСТЬNULL(ДанныеДокументовПоступления.СтавкаНДС, ДанныеДокументовВозврата.СтавкаНДС) КАК СтавкаНДС,
	|	ЕСТЬNULL(ДанныеДокументовПоступления.ДокументПоступления, ДанныеДокументовВозврата.ДокументПоступления) КАК ДокументПоступления,
	|	ЕСТЬNULL(ДанныеДокументовПоступления.ДокументПоступления.Валюта, ДанныеДокументовВозврата.Валюта) КАК ВалютаПоступления,
	|	ЕСТЬNULL(ДанныеДокументовПоступления.ДокументПоступления.ЦенаВключаетНДС, ДанныеДокументовВозврата.ЦенаВключаетНДС) КАК ЦенаВключаетНДС,
	|	ЕСТЬNULL(ДанныеДокументовПоступления.Количество, 0) - ЕСТЬNULL(ДанныеДокументовВозврата.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ДанныеДокументовПоступления.Сумма, 0) - ЕСТЬNULL(ДанныеДокументовВозврата.Сумма, 0) КАК Сумма,
	|	ЕСТЬNULL(ДанныеДокументовПоступления.СуммаНДС, 0) - ЕСТЬNULL(ДанныеДокументовВозврата.СуммаНДС, 0) КАК СуммаНДС,
	|	ЕСТЬNULL(ДанныеДокументовПоступления.СуммаСНДС, 0) - ЕСТЬNULL(ДанныеДокументовВозврата.СуммаСНДС, 0) КАК СуммаСНДС,
	|	ЕСТЬNULL(ДанныеДокументовПоступления.НомерСтроки, 99999) КАК НомерСтроки
	|
	|ИЗ
	|	ДанныеДокументовПоступления КАК ДанныеДокументовПоступления
	|		ПОЛНОЕ СОЕДИНЕНИЕ ДанныеДокументовВозврата КАК ДанныеДокументовВозврата
	|		ПО ДанныеДокументовПоступления.Номенклатура = ДанныеДокументовВозврата.Номенклатура
	|			И ДанныеДокументовПоступления.Характеристика = ДанныеДокументовВозврата.Характеристика
	|			И ДанныеДокументовПоступления.Назначение = ДанныеДокументовВозврата.Назначение
	|			И ДанныеДокументовПоступления.Упаковка = ДанныеДокументовВозврата.Упаковка
	|			И ДанныеДокументовПоступления.ДокументПоступления = ДанныеДокументовВозврата.ДокументПоступления
	|ГДЕ
	|	ВЫБОР 
	|		КОГДА НЕ ДанныеДокументовПоступления.ВернутьМногооборотнуюТару ТОГДА
	|			ДанныеДокументовПоступления.Номенклатура.ТипНоменклатуры В
	|				(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|		ИНАЧЕ ДанныеДокументовПоступления.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар))
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПоступления УБЫВ,
	|	НомерСтроки,
	|	Номенклатура, 
	|	Характеристика,
	|	Упаковка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервереБезКонтекста
Функция ТекстЗапросаЗакупкаПоИмпорту()
	
	Возврат "ВЫБРАТЬ
	|	ТоварыКОформлениюДокументовИмпортаОстатки.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыКОформлениюДокументовИмпортаОстатки.ДокументПоступления КАК ДокументПоступления,
	|	ТоварыКОформлениюДокументовИмпортаОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ТоварыКОформлениюДокументовИмпортаОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ВТОстатки
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюДокументовИмпорта.Остатки(
	|			&Дата,
	|			Организация = &Организация
	|				И Поставщик = &Партнер
	|				И ТипДокументаИмпорта = &ТипДокументаИмпорта
	|				И ВЫБОР
	|					КОГДА &ОтборПоСкладу
	|						ТОГДА АналитикаУчетаНоменклатуры.МестоХранения = &Склад
	|							ИЛИ АналитикаУчетаНоменклатуры.ТипМестаХранения <> ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад)
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ) КАК ТоварыКОформлениюДокументовИмпортаОстатки
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоступления,
	|	ВидЗапасов,
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриобретениеТоваровУслуг.Ссылка КАК ДокументПоступления,
	|	ПриобретениеТоваровУслуг.Дата КАК Дата,
	|	ПриобретениеТоваровУслуг.Номер КАК Номер,
	|	ПриобретениеТоваровУслуг.Валюта КАК Валюта,
	|	ПриобретениеТоваровУслугТовары.Склад КАК Склад,
	|	ПриобретениеТоваровУслуг.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ПриобретениеТоваровУслуг.ЗакупкаПодДеятельность КАК ЗакупкаПодДеятельность,
	|	ПриобретениеТоваровУслуг.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ПриобретениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	ПриобретениеТоваровУслугТовары.Назначение КАК Назначение,
	|	ПриобретениеТоваровУслугТовары.НоменклатураПартнера КАК НоменклатураПартнера,
	|	ПриобретениеТоваровУслугТовары.Характеристика КАК Характеристика,
	|	ПриобретениеТоваровУслугТовары.ВидЗапасов КАК ВидЗапасов,
	|	ПриобретениеТоваровУслугТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СУММА(ПриобретениеТоваровУслугТовары.Количество) КАК КоличествоПоступления,
	|	ПриобретениеТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ПриобретениеТоваровУслугТовары.Сумма) КАК Сумма,
	|	СУММА(ПриобретениеТоваровУслугТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ПриобретениеТоваровУслугТовары.СуммаСНДС) КАК СуммаСНДС
	|ПОМЕСТИТЬ ВтПоступления
	|ИЗ
	|	ВТОстатки КАК ВТОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|			ПО ПриобретениеТоваровУслугТовары.Ссылка = ПриобретениеТоваровУслуг.Ссылка
	|		ПО ВТОстатки.ДокументПоступления = ПриобретениеТоваровУслугТовары.Ссылка
	|			И ВТОстатки.АналитикаУчетаНоменклатуры = ПриобретениеТоваровУслугТовары.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	ВТОстатки.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)
	|	И (ПриобретениеТоваровУслуг.ХозяйственнаяОперация НЕ В (&ХозяйственныеОперацииРаздельнойЗакупки)
	|		ИЛИ НЕ ВТОстатки.АналитикаУчетаНоменклатуры.МестоХранения ССЫЛКА Справочник.Склады)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриобретениеТоваровУслуг.Ссылка,
	|	ПриобретениеТоваровУслуг.Дата,
	|	ПриобретениеТоваровУслуг.Номер,
	|	ПриобретениеТоваровУслугТовары.Склад,
	|	ПриобретениеТоваровУслуг.Валюта,
	|	ПриобретениеТоваровУслуг.ЦенаВключаетНДС,
	|	ПриобретениеТоваровУслуг.ХозяйственнаяОперация,
	|	ПриобретениеТоваровУслуг.ЗакупкаПодДеятельность,
	|	ПриобретениеТоваровУслугТовары.Номенклатура,
	|	ПриобретениеТоваровУслугТовары.Назначение,
	|	ПриобретениеТоваровУслугТовары.НоменклатураПартнера,
	|	ПриобретениеТоваровУслугТовары.Характеристика,
	|	ПриобретениеТоваровУслугТовары.ВидЗапасов,
	|	ПриобретениеТоваровУслугТовары.АналитикаУчетаНоменклатуры,
	|	ПриобретениеТоваровУслугТовары.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриобретениеТоваровУслуг.Ссылка КАК ДокументПоступления,
	|	ПриобретениеТоваровУслуг.Дата КАК Дата,
	|	ПриобретениеТоваровУслуг.Номер КАК Номер,
	|	ПриобретениеТоваровУслуг.Валюта КАК Валюта,
	|	ПриобретениеТоваровУслуг.Склад КАК Склад,
	|	ПриобретениеТоваровУслуг.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ПриобретениеТоваровУслуг.ЗакупкаПодДеятельность КАК ЗакупкаПодДеятельность,
	|	ПриобретениеТоваровУслуг.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ПриобретениеТоваровУслугТовары.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ПриобретениеТоваровУслугТовары.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК НоменклатураПартнера,
	|	ПриобретениеТоваровУслугТовары.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ПриобретениеТоваровУслугТовары.ВидЗапасов КАК ВидЗапасов,
	|	ПриобретениеТоваровУслугТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СУММА(ПриобретениеТоваровУслугТовары.Количество) КАК КоличествоПоступления,
	|	ПриобретениеТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ПриобретениеТоваровУслугТовары.Цена * ПриобретениеТоваровУслугТовары.Количество) КАК Сумма,
	|	СУММА(ПриобретениеТоваровУслугТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ПриобретениеТоваровУслугТовары.СуммаСНДС) КАК СуммаСНДС
	|ИЗ
	|	ВТОстатки КАК ВТОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.ВидыЗапасов КАК ПриобретениеТоваровУслугТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|			ПО ПриобретениеТоваровУслугТовары.Ссылка = ПриобретениеТоваровУслуг.Ссылка
	|		ПО ВТОстатки.ДокументПоступления = ПриобретениеТоваровУслугТовары.Ссылка
	|			И ВТОстатки.ВидЗапасов = ПриобретениеТоваровУслугТовары.ВидЗапасов
	|			И ВТОстатки.АналитикаУчетаНоменклатуры = ПриобретениеТоваровУслугТовары.АналитикаУчетаНоменклатуры
	|ГДЕ
	|	ПриобретениеТоваровУслуг.ХозяйственнаяОперация В (&ХозяйственныеОперацииРаздельнойЗакупки)
	|	И ВТОстатки.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)
	|	И ВТОстатки.АналитикаУчетаНоменклатуры.МестоХранения ССЫЛКА Справочник.Склады
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриобретениеТоваровУслуг.Ссылка,
	|	ПриобретениеТоваровУслуг.Дата,
	|	ПриобретениеТоваровУслуг.Номер,
	|	ПриобретениеТоваровУслуг.Склад,
	|	ПриобретениеТоваровУслуг.Валюта,
	|	ПриобретениеТоваровУслуг.ЦенаВключаетНДС,
	|	ПриобретениеТоваровУслуг.ХозяйственнаяОперация,
	|	ПриобретениеТоваровУслуг.ЗакупкаПодДеятельность,
	|	ПриобретениеТоваровУслугТовары.ВидЗапасов,
	|	ПриобретениеТоваровУслугТовары.АналитикаУчетаНоменклатуры,
	|	ПриобретениеТоваровУслугТовары.СтавкаНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументПоступления,
	|	ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВтПоступления.ДокументПоступления, ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка)) КАК ДокументПоступления,
	|	ВтПоступления.Валюта КАК ВалютаПоступления,
	|	ЕСТЬNULL(ВтПоступления.Склад, ВТОстатки.АналитикаУчетаНоменклатуры.МестоХранения) КАК Склад,
	|	ВтПоступления.Дата КАК ДатаПоступления,
	|	ВтПоступления.Номер КАК НомерПоступления,
	|	ВтПоступления.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ВтПоступления.ЗакупкаПодДеятельность КАК ЗакупкаПодДеятельность,
	|	ВтПоступления.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЕСТЬNULL(ВтПоступления.Номенклатура, ВТОстатки.АналитикаУчетаНоменклатуры.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ВтПоступления.Назначение, ВТОстатки.АналитикаУчетаНоменклатуры.Назначение) КАК Назначение,
	|	ВтПоступления.НоменклатураПартнера КАК НоменклатураПартнера,
	|	ЕСТЬNULL(ВтПоступления.Характеристика, ВТОстатки.АналитикаУчетаНоменклатуры.Характеристика) КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ВТОстатки.КоличествоОстаток >= ЕСТЬNULL(ВтПоступления.КоличествоПоступления, 1)
	|			ТОГДА ЕСТЬNULL(ВтПоступления.КоличествоПоступления, 1)
	|		ИНАЧЕ ВТОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ВТОстатки.КоличествоОстаток >= ЕСТЬNULL(ВтПоступления.КоличествоПоступления, 1)
	|			ТОГДА ЕСТЬNULL(ВтПоступления.КоличествоПоступления, 1)
	|		ИНАЧЕ ВТОстатки.КоличествоОстаток
	|	КОНЕЦ КАК КоличествоУпаковок,
	|	ВТОстатки.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	НЕОПРЕДЕЛЕНО КАК Упаковка,
	|	0 КАК Цена,
	|	0 КАК ПроцентРучнойСкидки,
	|	0 КАК СуммаРучнойСкидки,
	|	ВтПоступления.СтавкаНДС КАК СтавкаНДС,
	|	ЕСТЬNULL(ВтПоступления.Сумма, 0) / ЕСТЬNULL(ВтПоступления.КоличествоПоступления, 1) * ВЫБОР
	|		КОГДА ВТОстатки.КоличествоОстаток >= ЕСТЬNULL(ВтПоступления.КоличествоПоступления, 1)
	|			ТОГДА ЕСТЬNULL(ВтПоступления.КоличествоПоступления, 1)
	|		ИНАЧЕ ВТОстатки.КоличествоОстаток
	|	КОНЕЦ КАК Сумма,
	|	ЕСТЬNULL(ВтПоступления.СуммаНДС, 0) / ЕСТЬNULL(ВтПоступления.КоличествоПоступления, 1) * ВЫБОР
	|		КОГДА ВТОстатки.КоличествоОстаток >= ЕСТЬNULL(ВтПоступления.КоличествоПоступления, 1)
	|			ТОГДА ЕСТЬNULL(ВтПоступления.КоличествоПоступления, 1)
	|		ИНАЧЕ ВТОстатки.КоличествоОстаток
	|	КОНЕЦ КАК СуммаНДС,
	|	ЕСТЬNULL(ВтПоступления.СуммаСНДС, 0) / ЕСТЬNULL(ВтПоступления.КоличествоПоступления, 1) * ВЫБОР
	|		КОГДА ВТОстатки.КоличествоОстаток >= ЕСТЬNULL(ВтПоступления.КоличествоПоступления, 1)
	|			ТОГДА ЕСТЬNULL(ВтПоступления.КоличествоПоступления, 1)
	|		ИНАЧЕ ВТОстатки.КоличествоОстаток
	|	КОНЕЦ КАК СуммаСНДС,
	|	ВТОстатки.ВидЗапасов КАК ВидЗапасов,
	|	ВТОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВТОстатки КАК ВТОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтПоступления КАК ВтПоступления
	|		ПО (ВтПоступления.ДокументПоступления = ВТОстатки.ДокументПоступления)
	|			И (ВтПоступления.АналитикаУчетаНоменклатуры = ВТОстатки.АналитикаУчетаНоменклатуры)
	|			И (ВТОстатки.ВидЗапасов = ВтПоступления.ВидЗапасов
	|				ИЛИ НЕ ВТОстатки.АналитикаУчетаНоменклатуры.МестоХранения ССЫЛКА Справочник.Склады)
	|
	|ГДЕ
	|	(ВтПоступления.Дата >= &ДатаПоступления ИЛИ &ДатаПоступления ЕСТЬ NULL ИЛИ ВтПоступления.Дата ЕСТЬ NULL)
	|	И (НЕ &ОтборПоСкладу
	|	ИЛИ ЕСТЬNULL(ВтПоступления.Склад, ВТОстатки.АналитикаУчетаНоменклатуры.МестоХранения) = &Склад)
	|	
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЕСТЬNULL(ВтПоступления.ДокументПоступления, ЗНАЧЕНИЕ(Документ.ПриобретениеТоваровУслуг.ПустаяСсылка))";
	
КонецФункции

#КонецОбласти

#КонецОбласти
