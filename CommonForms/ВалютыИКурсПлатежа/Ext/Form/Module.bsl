
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры,
		"ТолькоПросмотр, ВалютаДокумента, СуммаДокумента, ВалютаВзаиморасчетов, СуммаВзаиморасчетов, ВалютаРеглУчета,
		|КурсЧислительВзаиморасчетов, КурсЗнаменательВзаиморасчетов");
	
	Если ВалютаДокумента = ВалютаРеглУчета Тогда
		КурсЧислительВзаиморасчетовНадпись = Строка(ВалютаДокумента);
		КурсЗнаменательВзаиморасчетовНадпись = Строка(ВалютаВзаиморасчетов);

	Иначе
		КурсЧислительВзаиморасчетовНадпись = Строка(ВалютаВзаиморасчетов);
		КурсЗнаменательВзаиморасчетовНадпись = Строка(ВалютаДокумента);
	КонецЕсли;
	
	Элементы.ПересчитатьСуммуДокумента.Доступность = Ложь;
	Элементы.ПересчитатьСуммуВзаиморасчетов.Доступность = Ложь;
	Элементы.ПересчитатьКурсЧислительВзаиморасчетов.Доступность = Ложь;
	Элементы.ПересчитатьКурсЗнаменательВзаиморасчетов.Доступность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗавершениеРаботы Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если Модифицированность И Не Готово Тогда
			
			Отказ = Истина;
			
			СписокКнопок = Новый СписокЗначений();
			СписокКнопок.Добавить("Закрыть", НСтр("ru = 'Закрыть'"));
			СписокКнопок.Добавить("НеЗакрывать", НСтр("ru = 'Не закрывать'"));
			
			ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект),
				НСтр("ru = 'Все измененные данные будут потеряны. Закрыть форму?'"),
				СписокКнопок);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = "Закрыть" Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СуммаДокументаПриИзменении(Элемент)
	
	УправлениеЭлементамиФормы(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаВзаиморасчетовПриИзменении(Элемент)
	
	УправлениеЭлементамиФормы(Элемент.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура КурсЧислительВзаиморасчетовПриИзменении(Элемент)
	
	УправлениеЭлементамиФормы(Элемент.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПересчитатьСуммуДокумента(Команда)
	
	Если ВалютаДокумента = ВалютаРеглУчета Тогда
		СуммаДокумента = ?(КурсЗнаменательВзаиморасчетов=0, 0, СуммаВзаиморасчетов*КурсЧислительВзаиморасчетов/КурсЗнаменательВзаиморасчетов);
	Иначе
		СуммаДокумента = ?(КурсЧислительВзаиморасчетов=0, 0, СуммаВзаиморасчетов*КурсЗнаменательВзаиморасчетов/КурсЧислительВзаиморасчетов);
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСуммуВзаиморасчетов(Команда)
	
	Если ВалютаДокумента = ВалютаРеглУчета Тогда
		СуммаВзаиморасчетов = ?(КурсЧислительВзаиморасчетов=0, 0, СуммаДокумента/КурсЧислительВзаиморасчетов*КурсЗнаменательВзаиморасчетов);
	Иначе
		СуммаВзаиморасчетов = ?(КурсЗнаменательВзаиморасчетов=0, 0, СуммаДокумента*КурсЧислительВзаиморасчетов/КурсЗнаменательВзаиморасчетов);
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьКурсЧислительВзаиморасчетов(Команда)
	
	Если ВалютаДокумента = ВалютаРеглУчета Тогда
		КурсЧислительВзаиморасчетов = ?(СуммаВзаиморасчетов=0, 0, СуммаДокумента/СуммаВзаиморасчетов*КурсЗнаменательВзаиморасчетов);
	Иначе
		КурсЧислительВзаиморасчетов = ?(СуммаДокумента=0, 0, СуммаВзаиморасчетов/СуммаДокумента*КурсЗнаменательВзаиморасчетов);
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьКурсЗнаменательВзаиморасчетов(Команда)
	
	Если ВалютаДокумента = ВалютаРеглУчета Тогда
		КурсЗнаменательВзаиморасчетов = ?(СуммаВзаиморасчетов=0, 0, СуммаДокумента/СуммаВзаиморасчетов*КурсЧислительВзаиморасчетов);
	Иначе
		КурсЗнаменательВзаиморасчетов = ?(СуммаДокумента=0, 0, СуммаВзаиморасчетов/СуммаДокумента*КурсЧислительВзаиморасчетов);
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	Если Модифицированность Тогда
		Результат = Новый Структура("СуммаДокумента, СуммаВзаиморасчетов, КурсЧислительВзаиморасчетов, КурсЗнаменательВзаиморасчетов");
		ЗаполнитьЗначенияСвойств(Результат, ЭтотОбъект);
	Иначе
		Результат = Неопределено;
	КонецЕсли;
	
	Готово = Истина;
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УправлениеЭлементамиФормы(ИзмененныйЭлемент = "")
	
	Если ЗначениеЗаполнено(ИзмененныйЭлемент) Тогда
		Элементы.ПересчитатьСуммуДокумента.Доступность = (ИзмененныйЭлемент<>"СуммаДокумента");
		Элементы.ПересчитатьСуммуВзаиморасчетов.Доступность = (ИзмененныйЭлемент<>"СуммаВзаиморасчетов");
		Элементы.ПересчитатьКурсЧислительВзаиморасчетов.Доступность = (ИзмененныйЭлемент<>"КурсЧислительВзаиморасчетов");
		Элементы.ПересчитатьКурсЗнаменательВзаиморасчетов.Доступность = (ИзмененныйЭлемент<>"КурсЗнаменательВзаиморасчетов");
	Иначе
		Элементы.ПересчитатьСуммуДокумента.Доступность = Ложь;
		Элементы.ПересчитатьСуммуВзаиморасчетов.Доступность = Ложь;
		Элементы.ПересчитатьКурсЧислительВзаиморасчетов.Доступность = Ложь;
		Элементы.ПересчитатьКурсЗнаменательВзаиморасчетов.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти