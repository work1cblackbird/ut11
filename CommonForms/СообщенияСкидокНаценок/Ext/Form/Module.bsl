
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	КартаЛояльности = Параметры.КартаЛояльности;
	ВидЗаменяемойКартыЛояльности = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.КартаЛояльности, "Владелец");
	ВыбраннаяФормаОплаты = Параметры.ВыбраннаяФормаОплаты;
	
	Партнер    = Параметры.Партнер;
	Контрагент = Параметры.Контрагент;
	Соглашение = Параметры.Соглашение;
	
	Элементы.Закрыть.Видимость        = Не Параметры.ПередВыполнениемОплатыВЧекеККМ;
	Элементы.Отмена.Видимость         =    Параметры.ПередВыполнениемОплатыВЧекеККМ;
	Элементы.ПерейтиКОплате.Видимость =    Параметры.ПередВыполнениемОплатыВЧекеККМ;
	
	МассивСкидокНаценок = Новый Массив;
	Для Каждого СтрокаТЧ Из Параметры.Сообщения Цикл
		МассивСкидокНаценок.Добавить(СтрокаТЧ.СкидкаНаценка);
		НовоеСообщение = ТаблицаСообщений.Добавить();
		НовоеСообщение.СкидкаНаценка  = СтрокаТЧ.СкидкаНаценка;
		НовоеСообщение.НапомнитьПозже = СтрокаТЧ.НапомнитьПозже;
	КонецЦикла;
	
	РеквизитыСкидокНаценок = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивСкидокНаценок, "ТекстСообщения, ВидКартыЛояльности"); 
	
	Для Каждого СтрокаТЧ Из ТаблицаСообщений Цикл
		СтрокаТЧ.ТекстСообщения = РеквизитыСкидокНаценок.Получить(СтрокаТЧ.СкидкаНаценка).ТекстСообщения;
		СтрокаТЧ.ВидКарты       = РеквизитыСкидокНаценок.Получить(СтрокаТЧ.СкидкаНаценка).ВидКартыЛояльности;
	КонецЦикла;
	
	НомерСообщения = 1;
	ВсегоСообщений = ТаблицаСообщений.Количество();
	
	ТаблицаСообщений.Сортировать("НапомнитьПозже Убыв,СкидкаНаценка Убыв");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОтобразитьТекущееСообщение();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ВладелецФормы <> Неопределено Тогда
		
		ТаблицаСообщений[НомерСообщения - 1].НапомнитьПозже = НапомнитьПозже;
		
		МассивСообщений = Новый Массив;
		Для Каждого СтрокаТЧ Из ТаблицаСообщений Цикл
			МассивСообщений.Добавить(Новый Структура("СкидкаНаценка, НапомнитьПозже", СтрокаТЧ.СкидкаНаценка, СтрокаТЧ.НапомнитьПозже));
		КонецЦикла;
		
		Оповестить("ПолученыСообщения", Новый Структура("Сообщения, ФормаВладелец", МассивСообщений, ВладелецФормы.УникальныйИдентификатор), Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НапомнитьПозжеПриИзменении(Элемент)
	
	ТаблицаСообщений[НомерСообщения - 1].ИзмененоПользователем = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СледующееСообщение(Команда)
	
	ТаблицаСообщений[НомерСообщения - 1].НапомнитьПозже = НапомнитьПозже;
	
	НомерСообщения = НомерСообщения + 1;
	
	ОтобразитьТекущееСообщение();

КонецПроцедуры

&НаКлиенте
Процедура ПредыдущееСообщение(Команда)
	
	ТаблицаСообщений[НомерСообщения - 1].НапомнитьПозже = НапомнитьПозже;
	
	НомерСообщения = НомерСообщения - 1;
	
	ОтобразитьТекущееСообщение();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыдатьКарту(Команда)
	
	СтрокаТЧ = ТаблицаСообщений[НомерСообщения - 1];
	
	ПараметрыОткрытия = Новый Структура("Режим, ТребуемыйВидНовойКарты, ЗаменяемаяКарта, Партнер, Контрагент, Соглашение");
	ПараметрыОткрытия.ТребуемыйВидНовойКарты = СтрокаТЧ.ВидКарты;
	Если Не ЗначениеЗаполнено(КартаЛояльности) Тогда
		ПараметрыОткрытия.Режим = "РегистрацияНовойКартыЛояльности";
	Иначе
		ПараметрыОткрытия.Режим = "ЗаменаКартыЛояльности";
		ПараметрыОткрытия.ЗаменяемаяКарта = КартаЛояльности;
	КонецЕсли;
	ПараметрыОткрытия.Партнер    = Партнер;
	ПараметрыОткрытия.Контрагент = Контрагент;
	ПараметрыОткрытия.Соглашение = Соглашение;
	
	ВыбранноеЗначение = ОткрытьФорму("Справочник.КартыЛояльности.Форма.ПомощникРегистрации", ПараметрыОткрытия, ВладелецФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКОплате(Команда)
	
	Если ВыбраннаяФормаОплаты <> Неопределено Тогда
		Закрыть(ВыбраннаяФормаОплаты);
	Иначе
		Закрыть(Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОтобразитьТекущееСообщение()
	
	СтрокаТЧ = ТаблицаСообщений[НомерСообщения - 1];
	Если ЗначениеЗаполнено(СтрокаТЧ.ВидКарты) Тогда
		Если ЗначениеЗаполнено(КартаЛояльности) Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Заменить карту лояльности ""%1"" на карту ""%2""'"), ВидЗаменяемойКартыЛояльности, СтрокаТЧ.ВидКарты);
		Иначе
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Выдать карту лояльности ""%1""'"), СтрокаТЧ.ВидКарты);
		КонецЕсли;
	Иначе
		ТекстСообщения = СтрокаТЧ.ТекстСообщения;
	КонецЕсли;
	Если Не СтрокаТЧ.ИзмененоПользователем Тогда
		СтрокаТЧ.НапомнитьПозже = Ложь;
	КонецЕсли;
	НапомнитьПозже = СтрокаТЧ.НапомнитьПозже;
	
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сообщение %1 из %2'"), НомерСообщения, ВсегоСообщений);
	
	Элементы.ЗарегистрироватьКартуЛояльности.Видимость =
		ЗначениеЗаполнено(СтрокаТЧ.ВидКарты) И ПравоДоступа("Изменение", Метаданные.Справочники.КартыЛояльности);
	Элементы.ПредыдущееСообщение.Видимость = НомерСообщения > 1;
	Элементы.СледующееСообщение.Видимость  = Не НомерСообщения = ТаблицаСообщений.Количество();
	
КонецПроцедуры

#КонецОбласти
