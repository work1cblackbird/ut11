
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьОснованиеПлатежа = ТипЗнч(Параметры.ДокументСсылка) = Тип("ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств")
							ИЛИ ТипЗнч(Параметры.ДокументСсылка) = Тип("ДокументСсылка.ПриходныйКассовыйОрдер")
							ИЛИ ТипЗнч(Параметры.ДокументСсылка) = Тип("ДокументСсылка.ОперацияПоПлатежнойКарте");
	
	ГруппаФинансовогоУчета  = Параметры.ГруппаФинансовогоУчета;
	Договор                 = Параметры.Договор;
	НаправлениеДеятельности = Параметры.НаправлениеДеятельности;
	
	Если Параметры.Свойство("Подразделение") Тогда
		Подразделение           = Параметры.Подразделение;
	КонецЕсли;
	
	Если НЕ ЕстьОснованиеПлатежа Тогда
		Элементы.Подразделение.Видимость = Ложь;
		Элементы.ГруппаСтраницыРасхожденияПодразделение.Видимость = Ложь;
	КонецЕсли;
	
	Организация             = Параметры.Организация;
	Контрагент              = Параметры.Контрагент;
	ХозяйственнаяОперация   = Параметры.ХозяйственнаяОперация;
	ДокументСсылка          = Параметры.ДокументСсылка;
	НалогообложениеНДС      = Параметры.НалогообложениеНДС;
	
	Для каждого ЭлементВыбора Из Параметры.СписокНалогообложенияНДС Цикл
		Элементы.НалогообложениеНДС.СписокВыбора.Добавить(ЭлементВыбора.Значение, ЭлементВыбора.Представление);
	КонецЦикла;
	
	РасшифровкаПлатежаХранилище = ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище);
	
	Для Каждого СтрокаТаблицыХранилища Из РасшифровкаПлатежаХранилище Цикл
		ЗаполнитьЗначенияСвойств(РасшифровкаПлатежа.Добавить(),СтрокаТаблицыХранилища);
	КонецЦикла;
	
	ХозяйственнаяОперацияИнтеркампани = ВзаиморасчетыСервер.ХозяйственнаяОперацияИнтеркампани(ХозяйственнаяОперация);
	
	ОбновитьНаличиеРасхождений();
	
	УстановитьСвойстваПоляВводаДоговор();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	СтруктураРеквизитов = Новый Структура();
	СтруктураРеквизитов.Вставить("ГруппаФинансовогоУчета",  ГруппаФинансовогоУчета);
	СтруктураРеквизитов.Вставить("НаправлениеДеятельности", НаправлениеДеятельности);
	СтруктураРеквизитов.Вставить("Договор",                 Договор);
	СтруктураРеквизитов.Вставить("Подразделение",           Подразделение);
	СтруктураРеквизитов.Вставить("НалогообложениеНДС",      НалогообложениеНДС);
	
	Закрыть(СтруктураРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДоговорНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Организация", Организация);
	СтруктураОтбора.Вставить("ПометкаУдаления", Ложь);
	
	СтруктураПараметровВыбора = Новый Структура;
	СтруктураПараметровВыбора.Вставить("РежимВыбора", Истина);
	
	Если ХозяйственнаяОперацияИнтеркампани Тогда
		Если  ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации") ИЛИ
			ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию") Тогда
			СтруктураОтбора.Организация = Контрагент;
			СтруктураОтбора.Вставить("ОрганизацияПолучатель", Организация);
		Иначе
			СтруктураОтбора.Вставить("ОрганизацияПолучатель", Контрагент);
		КонецЕсли;
		СтруктураПараметровВыбора.Вставить("Отбор",СтруктураОтбора);
		ОткрытьФорму("Справочник.ДоговорыМеждуОрганизациями.Форма.ФормаВыбора",
			СтруктураПараметровВыбора,
			Элемент,
			Элемент,)
	Иначе
		СтруктураОтбора.Вставить("Контрагент", Контрагент);
		
		Если ФинансыКлиент.ЭтоРасчетыСКлиентами(ХозяйственнаяОперация) Тогда
			СтруктураПараметровВыбора.Вставить("ТипыДоговоров", ВзаиморасчетыКлиентСервер.ТипыДоговоровСКлиентом());
		Иначе
			СтруктураПараметровВыбора.Вставить("ТипыДоговоров", ВзаиморасчетыКлиентСервер.ТипыДоговоровСПоставщиком());
		КонецЕсли;
		
		СтруктураПараметровВыбора.Вставить("Отбор",СтруктураОтбора);
			ОткрытьФорму("Справочник.ДоговорыКонтрагентов.Форма.ФормаВыбора",
			СтруктураПараметровВыбора,
			Элемент,
			Элемент,)
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)
	ОбновитьНаличиеРасхождений();
КонецПроцедуры

&НаКлиенте
Процедура ГруппаФинансовогоУчетаПриИзменении(Элемент)
	ОбновитьНаличиеРасхождений();
КонецПроцедуры

&НаКлиенте
Процедура НаправлениеДеятельностиПриИзменении(Элемент)
	ОбновитьНаличиеРасхождений();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ОбновитьНаличиеРасхождений();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьСвойстваПоляВводаДоговор()
	
	ИспользоватьДоговорыМеждуОрганизациями = ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыМеждуОрганизациями");
	ИспользоватьДоговорыСКлиентами         = ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыСКлиентами");
	ИспользоватьДоговорыСПоставщиками      = ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыСПоставщиками");
	
	Если ХозяйственнаяОперацияИнтеркампани И ИспользоватьДоговорыМеждуОрганизациями 
		ИЛИ ВзаиморасчетыСервер.ХозяйственнаяОперацияСКлиентом(ХозяйственнаяОперация) И ИспользоватьДоговорыСКлиентами
		ИЛИ ВзаиморасчетыСервер.ХозяйственнаяОперацияСПоставщиком(ХозяйственнаяОперация) И ИспользоватьДоговорыСПоставщиками Тогда
		Элементы.Договор.Видимость = Истина;
	Иначе
		Элементы.Договор.Видимость = Ложь;
		Возврат;
	КонецЕсли;
	
	МассивТипов = Новый Массив;
	
	Если НЕ ЗначениеЗаполнено(Договор) Тогда
		Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Организации") Тогда
			Договор = ПредопределенноеЗначение("Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка");
			МассивТипов.Добавить(Тип("СправочникСсылка.ДоговорыМеждуОрганизациями"));
		Иначе
			Договор = ПредопределенноеЗначение("Справочник.ДоговорыКонтрагентов.ПустаяСсылка");
			МассивТипов.Добавить(Тип("СправочникСсылка.ДоговорыКонтрагентов"));
		КонецЕсли;
	КонецЕсли;
	
	Элементы.Договор.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаличиеРасхождений()
	
	Если НЕ ЕстьОснованиеПлатежа Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура();
	СтруктураРеквизитов.Вставить("ГруппаФинансовогоУчета  ", ГруппаФинансовогоУчета);
	СтруктураРеквизитов.Вставить("Договор                 ", Договор);
	СтруктураРеквизитов.Вставить("НаправлениеДеятельности ", НаправлениеДеятельности);
	СтруктураРеквизитов.Вставить("Подразделение           ", Подразделение);
	СтруктураРеквизитов.Вставить("ДокументСсылка          ", ДокументСсылка);
	
	РеквизитыНераспределенногоПлатежа = ДенежныеСредстваСервер.РеквизитыНераспределенногоПлатежа(РасшифровкаПлатежа, СтруктураРеквизитов);
	
	Если РеквизитыНераспределенногоПлатежа.Количество() > 0 Тогда
		Для Каждого Элемент Из ИменаРеквизитовНераспределенногоПлатежа() Цикл
			ТаблицаЗначений = РеквизитыНераспределенногоПлатежа.Скопировать(,Элемент.Ключ);
			ТаблицаЗначений.Свернуть(Элемент.Ключ);
			МассивЗначений = ТаблицаЗначений.ВыгрузитьКолонку(Элемент.Ключ);
			Если МассивЗначений.Количество() > 1 Тогда
				Элементы[Элемент.Значение.Группа].ТекущаяСтраница = Элементы[Элемент.Значение.СтраницаЕстьРасхождения];
			Иначе
				Элементы[Элемент.Значение.Группа].ТекущаяСтраница = Элементы[Элемент.Значение.СтраницаНетРасхождений];
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ИменаРеквизитовНераспределенногоПлатежа()
	
	Структура = Новый Структура();
	Структура.Вставить("ГруппаФинансовогоУчета", Новый Структура("Группа,СтраницаЕстьРасхождения,СтраницаНетРасхождений",
		Элементы.ГруппаСтраницыРасхожденияГруппаФинансовогоУчета.Имя,
		Элементы.СтраницаЕстьРасхожденияГруппаФинансовогоУчета.Имя,
		Элементы.СтраницаНетРасхожденийГруппаФинансовогоУчета.Имя));
	Структура.Вставить("Договор", Новый Структура("Группа,СтраницаЕстьРасхождения,СтраницаНетРасхождений",
		Элементы.ГруппаСтраницыРасхожденияДоговор.Имя,
		Элементы.СтраницаЕстьРасхожденияДоговор.Имя,
		Элементы.СтраницаНетРасхожденийДоговор.Имя));
	Структура.Вставить("НаправлениеДеятельности", Новый Структура("Группа,СтраницаЕстьРасхождения,СтраницаНетРасхождений",
		Элементы.ГруппаСтраницыРасхожденияНаправлениеДеятельности.Имя,
		Элементы.СтраницаЕстьРасхожденияНаправлениеДеятельности.Имя,
		Элементы.СтраницаНетРасхожденийНаправлениеДеятельности.Имя));
	Структура.Вставить("Подразделение", Новый Структура("Группа,СтраницаЕстьРасхождения,СтраницаНетРасхождений",
		Элементы.ГруппаСтраницыРасхожденияПодразделение.Имя,
		Элементы.СтраницаЕстьРасхожденияПодразделение.Имя,
		Элементы.СтраницаНетРасхожденийПодразделение.Имя));
	
	Возврат Структура;
КонецФункции

#КонецОбласти
