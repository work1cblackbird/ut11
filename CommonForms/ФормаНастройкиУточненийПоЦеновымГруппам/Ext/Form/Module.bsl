
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ВидВызова			= Параметры.ВидВызова;
	ПереданнаяТаблица 	= ПолучитьИзВременногоХранилища(Параметры.АдресВХранилище);	
	ДополнительныеПараметры	= Новый Структура();

	Если Параметры.Свойство("ДополнительныеПараметры", ДополнительныеПараметры) И ДополнительныеПараметры.Количество() Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДополнительныеПараметры);
	КонецЕсли;
	
	ЗаполнитьТаблицуЗначенийИзПереданнойДанных(ПереданнаяТаблица);	
	
	НастроитьФорму();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПравилаОкругленияЦены

&НаКлиенте
Процедура ПравилаОкругленияЦеныПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		Если ПравилаОкругленияЦены.Количество() > 1 Тогда
			
			БазовоеЗначениеГраницы = ПравилаОкругленияЦены[ПравилаОкругленияЦены.Количество() - 2].НижняяГраницаДиапазонаЦен ;
			
			Если Не ЗначениеЗаполнено(БазовоеЗначениеГраницы) Тогда
				БазовоеЗначениеГраницы = 1;
			КонецЕсли;
			
			Элемент.ТекущиеДанные.НижняяГраницаДиапазонаЦен = БазовоеЗначениеГраницы * 10;
			
		КонецЕсли;
		
		НастроитьТаблицуПравилОкругления();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НижняяГраницаДиапазонаЦенПриИзменении(Элемент)
	
	НастроитьТаблицуПравилОкругления();
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаОкругленияЦеныПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ОчиститьСообщения();
	
	Если Не ОтменаРедактирования Тогда
		
		Для Каждого СтрокаПравилОкругления Из ПравилаОкругленияЦены Цикл
			
			Если СтрокаПравилОкругления <> Элемент.ТекущиеДанные 
				И СтрокаПравилОкругления.НижняяГраницаДиапазонаЦен = Элемент.ТекущиеДанные.НижняяГраницаДиапазонаЦен Тогда
				
				Сообщение = НСтр("ru = 'Для диапазона от %НижняяГраница% уже заданы правила округления.'");
				ЗначениеНижнейГраницы = Элемент.ТекущиеДанные.НижняяГраницаДиапазонаЦен;
				
				Если ЗначениеЗаполнено(ВалютаЦены) Тогда
					ЗначениеНижнейГраницы = Строка(ЗначениеНижнейГраницы) + " " + ВалютаЦены;
				КонецЕсли;
				
				Сообщение = СтрЗаменить(Сообщение, "%НижняяГраница%", ЗначениеНижнейГраницы);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение, , , ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ПравилаОкругленияЦены", ПравилаОкругленияЦены.Индекс(Элемент.ТекущиеДанные) + 1, "НижняяГраницаДиапазонаЦен"), Отказ);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаОкругленияЦеныПослеУдаления(Элемент)
	
	НастроитьТаблицуПравилОкругления();
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаОкругленияЦеныПриИзменении(Элемент)
	
	НастроитьТаблицуПравилОкругления();
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантОкругленияПриИзменении(Элемент)
	
	
	НастроитьТаблицуПравилОкругления();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыФормулы

&НаКлиенте
Процедура ЦеновыеГруппыФормулаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка    = Ложь;
	РезультатРедактирования = Неопределено;

	ОткрытьФорму("ОбщаяФорма.КонструкторФормул", 
		ПолучитьПараметрыФормыРедактированияЦены(Элементы.ЦеновыеГруппы.ТекущиеДанные.Формула), Элемент,,,, Новый ОписаниеОповещения("ЦеновыеГруппыФормулаНачалоВыбораЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЦеновыеГруппыФормулаНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    РезультатРедактирования = Результат;
    
    Если РезультатРедактирования <> Неопределено Тогда
        Элементы.ЦеновыеГруппы.ТекущиеДанные.Формула = РезультатРедактирования;
        Модифицированность = Истина;
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)

	АдресВХранилище = ПоместитьВХранилищеТаблицу();
	
	ДополнительныеПараметры = Новый Структура;	
	
	Если ВидВызова = "УточнениеНастроекОкругления" Тогда		
		ДополнительныеПараметры.Вставить("ВариантОкругления", ВариантОкругления);	
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("АдресВХранилище, ВидВызова, ДополнительныеПараметры", АдресВХранилище, ВидВызова, ДополнительныеПараметры);
	
	Закрыть(СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура КонструкторОкругления()
	
	СтрокаПравилОкругления = Элементы.ПравилаОкругленияЦены.ТекущиеДанные;
	
	Если СтрокаПравилОкругления = Неопределено Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Команда не может быть выполнена для указанного объекта!'"));
		Возврат;
	КонецЕсли;
	
	ВерхняяГраницаДиапазона  = ВерхняяГраницаДиапазонаЦен(СтрокаПравилОкругления);
	ИдентификаторСтрокиПравилОкругления = СтрокаПравилОкругления.ПолучитьИдентификатор();

	Если ЗначениеЗаполнено(СтрокаПравилОкругления.ТочностьОкругления)
		И (СтрокаПравилОкругления.ТочностьОкругления < ВерхняяГраницаДиапазона)
			Или ВерхняяГраницаДиапазона = -1 Тогда
		ВерхняяГраницаДиапазона = СтрокаПравилОкругления.ТочностьОкругления;
	КонецЕсли;
	
	РезультатРедактирования = Неопределено;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТочностьОкругления", СтрокаПравилОкругления.ТочностьОкругления);
	ПараметрыФормы.Вставить("ВариантОкругления", ВариантОкругления);
	ПараметрыФормы.Вставить("ПсихологическоеОкругление", СтрокаПравилОкругления.ПсихологическоеОкругление);
	ПараметрыФормы.Вставить("ГраницаДиапазонаЦен", ВерхняяГраницаДиапазона);
	ПараметрыФормы.Вставить("ПримерЧисло", СтрокаПравилОкругления.НижняяГраницаДиапазонаЦен);
	
	ОткрытьФорму("Справочник.ВидыЦен.Форма.ФормаКонструктораОкругления", 
		ПараметрыФормы,,,,,
		Новый ОписаниеОповещения("КонструкторОкругленияЗавершение",
			ЭтотОбъект,
			Новый Структура("СтрокаПравилОкругления", СтрокаПравилОкругления)),
		РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	
КонецПроцедуры

&НаКлиенте
Процедура КонструкторОкругленияЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    СтрокаПравилОкругления = ДополнительныеПараметры.СтрокаПравилОкругления;
    
    
    РезультатРедактирования = Результат;
    
    Если РезультатРедактирования <> Неопределено Тогда
        СтрокаПравилОкругления.ПсихологическоеОкругление = РезультатРедактирования.ПсихологическоеОкругление;
        СтрокаПравилОкругления.ТочностьОкругления = РезультатРедактирования.ТочностьОкругления;
        ВариантОкругления = РезультатРедактирования.ВариантОкругления;
        
        НастроитьТаблицуПравилОкругления();
    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьТаблицуЗначенийИзПереданнойДанных(ПереданнаяТаблица)
	
	
	Если СтрНачинаетсяС(ВидВызова, "УточнениеПоЦеновымГруппам") Тогда
		
		ТекущаяТаблица = ЦеновыеГруппы;

	ИначеЕсли ВидВызова = "УточнениеВалютПоЦеновымГруппам" Тогда
		 
		ТекущаяТаблица = Валюты;

	ИначеЕсли ВидВызова = "УточнениеПороговСрабатывания" Тогда
		 
		ТекущаяТаблица = ПорогиСрабатывания;
		
	ИначеЕсли ВидВызова = "УточнениеНастроекОкругления" Тогда
		 
		ТекущаяТаблица = ПравилаОкругленияЦены;
		
	ИначеЕсли ВидВызова = "УточнениеПроцентовСкидокНаценок" Тогда
		 
		ТекущаяТаблица = МаксимальныеПроцентыСкидокНаценок;
		
	КонецЕсли;
	
	ТекущаяТаблица.Очистить();	
	ТекущаяТаблица.загрузить(ПереданнаяТаблица);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьДоступностьЗаголовок()	
	
	ЗаголовокФормыНастройки = НСтр("ru = 'Уточнение %1'");
	
	Если ВидВызова = "УточнениеПоЦеновымГруппам_НаценкаНаДругойВидЦен" Тогда
		
		ЭтаФорма.Элементы.ГруппаЦеновыеГруппы.Видимость 		= Истина;

		ЭтаФорма.Элементы.ЦеновыеГруппыБазовыйВидЦены.Видимость = Истина;
		ЭтаФорма.Элементы.ЦеновыеГруппыНаценка.Видимость        = Истина;
		
		ЗаголовокФормыНастройки = СтрЗаменить(ЗаголовокФормыНастройки, "%1", "наценок на другой вид цен по ценовым группам");
		
	ИначеЕсли ВидВызова = "УточнениеПоЦеновымГруппам_НаценкаНаЦенуПоступления" Тогда
		 
		ЭтаФорма.Элементы.ГруппаЦеновыеГруппы.Видимость 		= Истина;

		ЭтаФорма.Элементы.ЦеновыеГруппыНаценка.Видимость        = Истина;
		
		ЗаголовокФормыНастройки = СтрЗаменить(ЗаголовокФормыНастройки, "%1", "наценок на цену поступления по ценовым группам");
		
	ИначеЕсли ВидВызова = "УточнениеПоЦеновымГруппам_РассчитыватьПоФормуламОтДругихВидовЦен" Тогда
		 
		ЭтаФорма.Элементы.ГруппаЦеновыеГруппы.Видимость 		= Истина;

		ЭтаФорма.Элементы.ЦеновыеГруппыФормула.Видимость        = Истина;;
		
		ЗаголовокФормыНастройки = СтрЗаменить(ЗаголовокФормыНастройки, "%1", "формул по ценовым группам");
		
	ИначеЕсли ВидВызова = "УточнениеВалютПоЦеновымГруппам" Тогда
		 
		ЭтаФорма.Элементы.ГруппаВалюты.Видимость 				= Истина;

		ЗаголовокФормыНастройки = СтрЗаменить(ЗаголовокФормыНастройки, "%1", "валют по ценовым группам");
		
	ИначеЕсли ВидВызова = "УточнениеПороговСрабатывания" Тогда
		 
		ЭтаФорма.Элементы.ГруппаПорогиСрабатывания.Видимость    = Истина;
		
		ЗаголовокФормыНастройки = СтрЗаменить(ЗаголовокФормыНастройки, "%1", "порогов срабатывания по ценовым группам");
		
	ИначеЕсли ВидВызова = "УточнениеНастроекОкругления" Тогда
		 
		ЭтаФорма.Элементы.ГруппаПравилаОкругленияЦены.Видимость = Истина;
		
		ЗаголовокФормыНастройки = СтрЗаменить(ЗаголовокФормыНастройки, "%1", "округления по ценовым диапазонам");
		
	ИначеЕсли ВидВызова = "УточнениеПроцентовСкидокНаценок" Тогда
		 
		ЭтаФорма.Элементы.ГруппаПроцентыСкидокНаценок.Видимость = Истина;
		
		ЗаголовокФормыНастройки = СтрЗаменить(ЗаголовокФормыНастройки, "%1", "максимальных процентов скидок (наценок) по ценовым группам");
		
	КонецЕсли;

	// Заголовок формы
	Заголовок = ЗаголовокФормыНастройки;	
	
КонецПроцедуры


// Помещает во временное хранилище таблицу значений с выбранными изменениями
// и возвращает адрес.
// 
// Возвращаемое значение:
//	Строка - адрес хранилища значений таблицы значений во временном хранилище.
//
&НаСервере 
Функция ПоместитьВХранилищеТаблицу()

	Если СтрНачинаетсяС(ВидВызова, "УточнениеПоЦеновымГруппам") Тогда
		
		ТекущаяТаблица = ЦеновыеГруппы.Выгрузить();

	ИначеЕсли ВидВызова = "УточнениеВалютПоЦеновымГруппам" Тогда
		 
		ТекущаяТаблица = Валюты.Выгрузить();

	ИначеЕсли ВидВызова = "УточнениеПороговСрабатывания" Тогда
		 
		ТекущаяТаблица = ПорогиСрабатывания.Выгрузить();
		
	ИначеЕсли ВидВызова = "УточнениеНастроекОкругления" Тогда
		 
		ТекущаяТаблица = ПравилаОкругленияЦены.Выгрузить();
		
	ИначеЕсли ВидВызова = "УточнениеПроцентовСкидокНаценок" Тогда
		 
		ТекущаяТаблица = МаксимальныеПроцентыСкидокНаценок.Выгрузить();
		
	КонецЕсли;
	
	
	АдресНастроекДоступности = ПоместитьВоВременноеХранилище(ТекущаяТаблица, ЭтаФорма.УникальныйИдентификатор);
	
	Возврат АдресНастроекДоступности;
	
КонецФункции

&НаКлиенте
Процедура ПравилаОкругленияЦеныПриАктивизацииЯчейки(Элемент)
	
	Если Не Элемент.ТекущийЭлемент = Элементы.ТочностьОкругления Тогда
		Возврат;
	КонецЕсли;
	
	// Формирование списка выбора для поля ТочностьОкругления
	Элементы.ТочностьОкругления.СписокВыбора.Очистить();
	ЗначениеОкругления             = 0.01;
	ЧетноеПриращение               = Ложь;
	МаксимальноеЗначениеОкругления = 1000;
	ГраницаДиапазонаЦен            = ВерхняяГраницаДиапазонаЦен(Элементы.ПравилаОкругленияЦены.ТекущиеДанные);
	
	Пока ЗначениеОкругления <= МаксимальноеЗначениеОкругления 
		И (ЗначениеОкругления <= ГраницаДиапазонаЦен Или ГраницаДиапазонаЦен < 0) Цикл
		
		Элементы.ТочностьОкругления.СписокВыбора.Добавить(ЗначениеОкругления);
		ЗначениеОкругления = ЗначениеОкругления * ?(ЧетноеПриращение, 2, 5);
		ЧетноеПриращение   = Не ЧетноеПриращение;
		
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Функция ВерхняяГраницаДиапазонаЦен(СтрокаПравилОкругления)
	
	Индекс = ПравилаОкругленияЦены.Индекс(СтрокаПравилОкругления);
	
	Если Индекс < ПравилаОкругленияЦены.Количество() - 1 Тогда
		Возврат ПравилаОкругленияЦены[Индекс + 1].НижняяГраницаДиапазонаЦен;
	КонецЕсли;
	
	Возврат -1;
	
КонецФункции


&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПример(Форма, Индекс)
	
	Число = 1111.11;
	Если Форма.ПравилаОкругленияЦены.Количество() > 1 Тогда
		НижняяГраница = Форма.ПравилаОкругленияЦены[Индекс].НижняяГраницаДиапазонаЦен;
		Если Индекс = Форма.ПравилаОкругленияЦены.Количество() - 1 Тогда
			ВерхняяГраница = НижняяГраница + 1000;
		Иначе
			ВерхняяГраница = Форма.ПравилаОкругленияЦены[Индекс+1].НижняяГраницаДиапазонаЦен;
		КонецЕсли;
		Число = НижняяГраница + Окр((ВерхняяГраница - НижняяГраница)/2, 15, 2);
		Если Число + 0.11 < ВерхняяГраница Тогда
			Число = Число + 0.11;
		КонецЕсли;
	КонецЕсли;
	
	Если Форма.ПравилаОкругленияЦены[Индекс].ТочностьОкругления <> 0 ИЛИ Форма.ПравилаОкругленияЦены[Индекс].ПсихологическоеОкругление <> 0 Тогда
		Цена = ЦенообразованиеКлиентСервер.ОкруглитьЦену(Число, Форма.ПравилаОкругленияЦены[Индекс].ТочностьОкругления, Форма.ВариантОкругления);
		Значение = ЦенообразованиеКлиентСервер.ПрименитьПсихологическоеОкругление(
			Цена,
			Форма.ПравилаОкругленияЦены[Индекс].ПсихологическоеОкругление);
		
		ФорматнаяСтрока = "ЧДЦ=2; ЧРГ=' '; ЧН=; ЧГ=0";
		Форма.ПравилаОкругленияЦены[Индекс].Подсказка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Округлять %1 до %2'"),
			Формат(Число, ФорматнаяСтрока),
			Формат(Значение, ФорматнаяСтрока));
	Иначе
		Форма.ПравилаОкругленияЦены[Индекс].Подсказка = НСтр("ru = 'Не округлять'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьТаблицуПравилОкругления()
	
	Если ПравилаОкругленияЦены.Количество() > 1 Тогда
		НастроитьТаблицуПравилОкругленияСервер(ЭтаФорма);
	Иначе
		
		Если ПравилаОкругленияЦены.Количество() = 1 Тогда
			
			Если ПравилаОкругленияЦены[0].НижняяГраницаДиапазонаЦен = 0 Тогда
				ЦеновойДиапазон = НСтр("ru = 'Все цены'");
			Иначе
				
				ЦеновойДиапазон = НСтр("ru = 'Свыше %НачалоДиапазона%'");
				ЦеновойДиапазон = СтрЗаменить(ЦеновойДиапазон, "%НачалоДиапазона%", ПравилаОкругленияЦены[0].НижняяГраницаДиапазонаЦен);
				
				Если ЗначениеЗаполнено(ВалютаЦены) Тогда
					ЦеновойДиапазон = ЦеновойДиапазон + " " + ВалютаЦены;
				КонецЕсли;
				
			КонецЕсли;
			
			ПравилаОкругленияЦены[0].ЦеновойДиапазон = ЦеновойДиапазон;
			
			УстановитьПример(ЭтаФорма, 0);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьТаблицуПравилОкругленияСервер(Форма)
	
	Если Форма.ПравилаОкругленияЦены.Количество() > 0 Тогда
		Форма.ПравилаОкругленияЦены.Сортировать("НижняяГраницаДиапазонаЦен");
	КонецЕсли;
	
	МаксимальныйИндекс = Форма.ПравилаОкругленияЦены.Количество() - 1;
	Для Индекс = 0 По МаксимальныйИндекс Цикл
		
		Если Форма.ПравилаОкругленияЦены.Количество() = 1 И Форма.ПравилаОкругленияЦены[Индекс].НижняяГраницаДиапазонаЦен = 0 Тогда
			ЦеновойДиапазон = НСтр("ru = 'Все цены'");
		Иначе
			
			Если Индекс = МаксимальныйИндекс Тогда
				
				ЦеновойДиапазон = НСтр("ru = 'Свыше %НачалоДиапазона%'");
				ЦеновойДиапазон = СтрЗаменить(ЦеновойДиапазон, "%НачалоДиапазона%", Форма.ПравилаОкругленияЦены[Индекс].НижняяГраницаДиапазонаЦен);
				
			Иначе
				
				ЦеновойДиапазон = НСтр("ru = 'От %НачалоДиапазона% до %ОкончаниеДиапазона%'");
				ЦеновойДиапазон = СтрЗаменить(ЦеновойДиапазон, "%НачалоДиапазона%",    Форма.ПравилаОкругленияЦены[Индекс].НижняяГраницаДиапазонаЦен);
				ЦеновойДиапазон = СтрЗаменить(ЦеновойДиапазон, "%ОкончаниеДиапазона%", Форма.ПравилаОкругленияЦены[Индекс + 1].НижняяГраницаДиапазонаЦен);
				
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Форма.ВалютаЦены) Тогда
				ЦеновойДиапазон = ЦеновойДиапазон + " " + Форма.ВалютаЦены;
			КонецЕсли;
			
		КонецЕсли;
		
		Форма.ПравилаОкругленияЦены[Индекс].ЦеновойДиапазон = ЦеновойДиапазон;
		
		УстановитьПример(Форма, Индекс);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПараметрыФормыРедактированияЦены(Формула)
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Формула", Формула);
	СтруктураВозврата.Вставить("ДеревоОперандов", АдресХранилищаБазовыхВидовЦен);
	СтруктураВозврата.Вставить("ОперандыЗаголовок", НСтр("ru = 'Доступные виды цен'"));
	СтруктураВозврата.Вставить("Операторы", АдресХранилищаДереваОператоров);
	СтруктураВозврата.Вставить("ТипРезультата", Новый ОписаниеТипов("Число"));

	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаСервере
Процедура НастроитьФорму()
	
	НастроитьВидимостьДоступностьЗаголовок();
	
	// Формирование списка выбора для поля ПравилаОкругленияЦеныТочностьОкругления
	Элементы.ПравилаОкругленияЦеныТочностьОкругления.СписокВыбора.Очистить();
	ЗначениеОкругления             = 0.01;
	ЧетноеПриращение               = Ложь;
	МаксимальноеЗначениеОкругления = 1000;
	ГраницаДиапазонаЦен            = -1;
	
	Пока ЗначениеОкругления <= МаксимальноеЗначениеОкругления 
		И (ЗначениеОкругления <= ГраницаДиапазонаЦен Или ГраницаДиапазонаЦен < 0) Цикл
		
		Элементы.ПравилаОкругленияЦеныТочностьОкругления.СписокВыбора.Добавить(ЗначениеОкругления);
		ЗначениеОкругления = ЗначениеОкругления * ?(ЧетноеПриращение, 2, 5);
		ЧетноеПриращение   = Не ЧетноеПриращение;
		
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти