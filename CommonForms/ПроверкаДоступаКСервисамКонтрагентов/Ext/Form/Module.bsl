///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастроитьОтображениеЗапускаПроверки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ПослеОткрытияФормы", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияРекомендацииПриОшибкеОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму("ОбщаяФорма.ПараметрыПроксиСервера",
		Новый Структура("НастройкаПроксиНаКлиенте", Истина),
		ЭтотОбъект);
	
КонецПроцедуры


&НаКлиенте
Процедура ДекорацияПосмотретьПодробноеОписаниеОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПоказатьВводСтроки(
		Новый ОписаниеОповещения,
		ЛогОшибок,
		НСтр("ru = 'Список ошибок проверки доступности сервисов'"),
		,
		Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияНаписатьВТехПоддержкуОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.СообщенияВСлужбуТехническойПоддержки") Тогда
		
		Тема = НСтр("ru = 'Интернет-поддержка. Проверка доступности сервисов ""1С:Контрагент"" и ""Проверка контрагентов ФНС"".'");
	
		МодульСообщенияВСлужбуТехническойПоддержкиКлиентСервер =
			ОбщегоНазначенияКлиент.ОбщийМодуль("СообщенияВСлужбуТехническойПоддержкиКлиентСервер");
		ДанныеСообщения = МодульСообщенияВСлужбуТехническойПоддержкиКлиентСервер.ДанныеСообщения();
		ДанныеСообщения.Получатель = "webIts";
		ДанныеСообщения.Тема       = Тема;
		ДанныеСообщения.Сообщение  = ТекстСообщения;
		
		Вложения = Новый Массив;
		Вложения.Добавить(
			Новый Структура(
				"Представление, ВидДанных, Данные",
				НСтр("ru = 'ЛогПроверкиДоступности.txt'"),
				"Текст",
				ЛогОшибок));
	
		МодульСообщенияВСлужбуТехническойПоддержкиКлиент =
			ОбщегоНазначенияКлиент.ОбщийМодуль("СообщенияВСлужбуТехническойПоддержкиКлиент");
		МодульСообщенияВСлужбуТехническойПоддержкиКлиент.ОтправитьСообщение(ДанныеСообщения, Вложения);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПовторитьПроверку(Команда)
	
	НастроитьОтображениеЗапускаПроверки();
	ПодключитьОбработчикОжидания("ПослеОткрытияФормы", 0.1, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеОткрытияФормы()
	
	НачатьПроверкуДоступностиСервисов();
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьПроверкуДоступностиСервисов()
	
	ИндикаторПроверки = 0;
	ОповещениеОПрогрессеВыполнения = Новый ОписаниеОповещения(
		"ОбновитьИндикаторПроверки",
		ЭтотОбъект);
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания           = Ложь;
	ПараметрыОжидания.ОповещениеОПрогрессеВыполнения = ОповещениеОПрогрессеВыполнения;
	
	РезультатВыполнения = ПроверкаДоступностиСервисов();
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"НачатьПроверкуДоступностиСервисовЗавершение",
		ЭтотОбъект);
		
	Если РезультатВыполнения.Статус = "Выполнено" Или РезультатВыполнения.Статус = "Ошибка" Тогда
		НачатьПроверкуДоступностиСервисовЗавершение(РезультатВыполнения, Неопределено);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаСервере
Функция ПроверкаДоступностиСервисов()
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Проверка доступности сервисов ""1С:Контрагент"" и ""Проверка контрагентов ФНС"".'");
	РезультатВыполнения = ДлительныеОперации.ВыполнитьФункцию(
		ПараметрыВыполнения,
		"ПроверкаКонтрагентов.ПроверкаДоступностиСервисов");
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура НачатьПроверкуДоступностиСервисовЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ЛогОшибок = "";
	ТекстСообщения = "";
	МассивНедоступныхСервисов = Новый Массив;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		РезультатПроверки = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		
		Для Каждого ДанныеПроверки Из РезультатПроверки Цикл
			
			Если Не ПустаяСтрока(ДанныеПроверки.Значение) Тогда
				
				МассивНедоступныхСервисов.Добавить(ПолучитьПредставлениеСервиса(ДанныеПроверки.Ключ));
				
				ЛогОшибок = ?(
					ПустаяСтрока(ЛогОшибок),
					ДанныеПроверки.Значение,
					ЛогОшибок + Символы.ПС + Символы.ПС + ДанныеПроверки.Значение);
			КонецЕсли;
			
		КонецЦикла;

		Если ПустаяСтрока(ЛогОшибок) Тогда
			НастроитьОтображениеРезультатовПроверки(
				"Успешно",
				НСтр("ru = 'Проверка доступности сервисов ""1С:Контрагент"" и ""Проверка контрагентов ФНС"" завершена успешно.'"));
		Иначе
			ЗаголовокТекстаСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Обнаружены проблемы с доступом к сервисам (%1).
					|Подробности во вложении.'"),
				СтрСоединить(МассивНедоступныхСервисов, ","));
			НастроитьОтображениеРезультатовПроверки(
				"Предупреждение",
				ЗаголовокТекстаСообщения);
			ТекстСообщения = ЗаголовокТекстаСообщения + НСтр("ru = '|Подробности во вложении.'");
		КонецЕсли;
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ЛогОшибок = Результат.ПодробноеПредставлениеОшибки;
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Ошибка при проверке доступности сервисов ""1С:Контрагент"" и ""Проверка контрагентов ФНС"".
				|%1'"),
			Результат.КраткоеПредставлениеОшибки);
		НастроитьОтображениеРезультатовПроверки(
			"Ошибка",
			Результат.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПрочитатьПрогресс(Знач ИдентификаторЗадания)
	
	Возврат ДлительныеОперации.ПрочитатьПрогресс(ИдентификаторЗадания);
	
КонецФункции

&НаКлиенте
Процедура ОбновитьИндикаторПроверки(СтатусВыполнения, ДополнительныеПараметры) Экспорт
	
	Результат = ПрочитатьПрогресс(СтатусВыполнения.ИдентификаторЗадания);
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИндикаторПроверки = Результат.Процент;
	Элементы.ДекорацияСостояние.Заголовок = Результат.Текст;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПредставлениеСервиса(ИдентификаторСервиса)
	
	Если ИдентификаторСервиса = "ПроверкаДоступаКСервисуФНС" Тогда
		Возврат НСтр("ru = 'Проверка контрагентов ФНС'");
	ИначеЕсли ИдентификаторСервиса = "ПроверкаДоступаСервиса1СКонтрагент" Тогда
		Возврат НСтр("ru = '1С:Контрагент'");
	Иначе
		Возврат НСтр("ru = 'Не удалось идентифицировать проверяемый сервис'");
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура НастроитьОтображениеЗапускаПроверки()
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация;
	Элементы.ПовторитьПроверку.Видимость    = Ложь;
	Элементы.Закрыть.Видимость              = Ложь;
	Элементы.Отмена.Видимость               = Истина;
	ИндикаторПроверки                       = 0;
	Элементы.ДекорацияСостояние.Заголовок
		= НСтр("ru = 'Проверка доступности сервисов ""1С:Контрагент"" и ""Проверка контрагентов ФНС"".'");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьОтображениеРезультатовПроверки(
		Знач СтатусПроверки,
		Знач ПредставлениеЗаголовка)
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница        = Элементы.ГруппаРезультат;
	Элементы.Отмена.Видимость                      = Ложь;
	Элементы.Закрыть.Видимость                     = Истина;
	Элементы.ДекорацияОписаниеРезультата.Видимость = Не ПустаяСтрока(ПредставлениеЗаголовка);
	Элементы.ДекорацияОписаниеРезультата.Заголовок = ПредставлениеЗаголовка;
	
	Если СтатусПроверки = "Успешно" Тогда
		Элементы.ДекорацияКартинкаРезультат.Картинка = БиблиотекаКартинок.Успешно32;
		Элементы.ДекорацияРекомендацииПриОшибке.Видимость       = Ложь;
		Элементы.ДекорацияНаписатьВТехПоддержку.Видимость       = Ложь;
		Элементы.ДекорацияПосмотретьПодробноеОписание.Видимость = Ложь;
	ИначеЕсли СтатусПроверки = "Предупреждение" Тогда
		Элементы.ДекорацияКартинкаРезультат.Картинка            = БиблиотекаКартинок.Предупреждение32;
		Элементы.ДекорацияПосмотретьПодробноеОписание.Видимость = Истина;
		Элементы.ДекорацияРекомендацииПриОшибке.Видимость       = Истина;
		Элементы.ДекорацияНаписатьВТехПоддержку.Видимость       = Истина;
		Элементы.ПовторитьПроверку.Видимость                    = Истина;
	ИначеЕсли СтатусПроверки = "Ошибка" Тогда
		Элементы.ДекорацияКартинкаРезультат.Картинка            = БиблиотекаКартинок.Ошибка32;
		Элементы.ДекорацияРекомендацииПриОшибке.Видимость       = Ложь;
		Элементы.ДекорацияНаписатьВТехПоддержку.Видимость       = Истина;
		Элементы.ДекорацияПосмотретьПодробноеОписание.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
