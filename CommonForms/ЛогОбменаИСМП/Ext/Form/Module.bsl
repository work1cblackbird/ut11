#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.Источник) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоИсточнику(Параметры.Источник);
	
	Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда
		АвтоЗаголовок = Ложь;
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыЭтапыОбмена

&НаКлиенте
Процедура ЭтапыОбменаПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ЭтапыОбмена.ТекущиеДанные;
	
	Если (ТекущиеДанные = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстовыйДокумент.Очистить();
	ТекстовыйДокумент.ДобавитьСтроку(ТекущиеДанные.Запрос);
	ТекстовыйДокумент.ДобавитьСтроку(ТекущиеДанные.ЗапросЗаголовки);
	Если Не ПустаяСтрока(ТекущиеДанные.ЗапросТело) Тогда
		ТекстовыйДокумент.ДобавитьСтроку(ТекущиеДанные.ЗапросТело);
	КонецЕсли;
	
	ТекстовыйДокумент.ДобавитьСтроку("");
	Если Не ПустаяСтрока(ТекущиеДанные.ОтветЗаголовки) Тогда
		ТекстовыйДокумент.ДобавитьСтроку(ТекущиеДанные.ОтветЗаголовки);
	КонецЕсли;
	Если Не ПустаяСтрока(ТекущиеДанные.ОтветТело) Тогда
		ТекстовыйДокумент.ДобавитьСтроку(ТекущиеДанные.ОтветТело);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьПротоколВФайл(Команда)
	
	ИмяФайла = СтрШаблон(
		НСтр("ru = 'Лог запросов из протокола по документу %1.txt'"),
		Документ);
	ИмяФайла = СтрЗаменить(ИмяФайла, ":", "-");
	
	ДиалогВыбораФайла                = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.Фильтр         = "*.txt|*.txt";
	ДиалогВыбораФайла.ПолноеИмяФайла = ИмяФайла;
	
	ОповещениеВыбораФайла = Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтотОбъект);
	
	ДиалогВыбораФайла.Показать(ОповещениеВыбораФайла);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОписанияОповещений

&НаКлиенте
Процедура ВыборФайлаЗавершение(ПутиКФайлам, ДополнительныеПараметры) Экспорт
	
	Если ПутиКФайлам = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СохраняемыйДокумент = Новый ТекстовыйДокумент();
	
	СохраняемыйДокумент.ДобавитьСтроку(
		СтрШаблон(
			НСтр("ru = 'Лог запросов из протокола по документу: %1'"),
			Документ));
			
	Для Каждого СтрокаДанных Из ЭтапыОбмена Цикл
		
		СохраняемыйДокумент.ДобавитьСтроку(СтрокаДанных.Запрос);
		СохраняемыйДокумент.ДобавитьСтроку(СтрокаДанных.ЗапросЗаголовки);
		Если Не ПустаяСтрока(СтрокаДанных.ЗапросТело) Тогда
			СохраняемыйДокумент.ДобавитьСтроку(СтрокаДанных.ЗапросТело);
		КонецЕсли;
		
		СохраняемыйДокумент.ДобавитьСтроку("");
		Если Не ПустаяСтрока(СтрокаДанных.ОтветЗаголовки) Тогда
			СохраняемыйДокумент.ДобавитьСтроку(СтрокаДанных.ОтветЗаголовки);
		КонецЕсли;
		Если Не ПустаяСтрока(СтрокаДанных.ОтветТело) Тогда
			СохраняемыйДокумент.ДобавитьСтроку(СтрокаДанных.ОтветТело);
		КонецЕсли;
		
	КонецЦикла;
	
	СохраняемыйДокумент.ДобавитьСтроку("");
	СохраняемыйДокумент.ДобавитьСтроку(ИнформацияОбОкружении());
	
	Попытка
		СохраняемыйДокумент.Записать(ПутиКФайлам[0],, Символы.ПС);
	Исключение
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ПоказатьПредупреждение(,
			СтрШаблон(
				НСтр("ru = 'Ошибка сохранения файла:
					       |%1'"),
				КраткоеПредставлениеОшибки(ИнформацияОбОшибке)));
		Возврат;
		
	КонецПопытки;
	
	ПоказатьОповещениеПользователя(
		СтрШаблон(
			НСтр("ru = 'Файл сохранен по пути: %1'"),
			ПутиКФайлам[0]));
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ЗаполнитьПоИсточнику(Источник)
	
	ПротоколОбмена = Неопределено;
	
	Если ТипЗнч(Источник) = Тип("Строка") Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ОчередьСообщенийИСМП.ДатаСоздания                 КАК ДатаСоздания,
		|	ОчередьСообщенийИСМП.Документ                     КАК Документ,
		|	ОчередьСообщенийИСМП.Операция                     КАК Операция,
		|	ОчередьСообщенийИСМП.ПротоколОбмена               КАК ПротоколОбмена,
		|	ОчередьСообщенийИСМП.РеквизитыИсходящегоСообщения КАК РеквизитыИсходящегоСообщения,
		|	ОчередьСообщенийИСМП.ИдентификаторЗаявки          КАК ИдентификаторЗапроса
		|ИЗ
		|	РегистрСведений.ОчередьСообщенийИСМП              КАК ОчередьСообщенийИСМП
		|ГДЕ
		|	ОчередьСообщенийИСМП.Сообщение = &Сообщение");
		Запрос.УстановитьПараметр("Сообщение", Источник);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка, "ДатаСоздания, Документ, Операция, ИдентификаторЗапроса");
			ПротоколОбмена = Выборка.ПротоколОбмена.Получить();
			
			Если ПротоколОбмена = Неопределено Тогда
				РеквизитыСообщения = Выборка.РеквизитыИсходящегоСообщения.Получить();
				
				ПротоколОбмена = Новый Массив;
				
				СтрокаПротокола = Новый Структура;
				СтрокаПротокола.Вставить("ЗапросТело",        РеквизитыСообщения.ТекстСообщенияJSON);
				СтрокаПротокола.Вставить("ОтветТело",         "");
				СтрокаПротокола.Вставить("Операция",          Выборка.Операция);
				СтрокаПротокола.Вставить("ДатаУниверсальная", Выборка.ДатаСоздания);
				
				ПротоколОбмена.Добавить(СтрокаПротокола);
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("Структура") Тогда
		
		ПротоколОбмена = ОбщегоНазначения.ЗначениеИзСтрокиXML(Источник.ПротоколОбменаXML);
		
	Иначе
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ИСМППрисоединенныеФайлы.ДатаСоздания         КАК ДатаСоздания,
		|	ИСМППрисоединенныеФайлы.Документ             КАК Документ,
		|	ИСМППрисоединенныеФайлы.Операция             КАК Операция,
		|	ИСМППрисоединенныеФайлы.Описание             КАК Ошибка,
		|	ИСМППрисоединенныеФайлы.ФорматОбмена         КАК ФорматОбмена,
		|	ИСМППрисоединенныеФайлы.ИдентификаторЗапроса КАК ИдентификаторЗапроса
		|ИЗ
		|	Справочник.ИСМППрисоединенныеФайлы КАК ИСМППрисоединенныеФайлы
		|ГДЕ
		|	ИСМППрисоединенныеФайлы.Ссылка = &Сообщение");
		
		Запрос.УстановитьПараметр("Сообщение", Источник);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка, "ДатаСоздания, Документ, Операция, ИдентификаторЗапроса");
			ПротоколОбмена = ОбщегоНазначения.ЗначениеИзСтрокиXML(
				ПротоколОбменаИС.ТекстСообщенияXMLИзПротокола(Источник))
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПротоколОбмена = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		Для Каждого ЭлементДанных Из ПротоколОбмена Цикл
			
			СтрокаТЧ = ЭтапыОбмена.Добавить();
			
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, ЭлементДанных);
			СтрокаТЧ.Дата = ЭлементДанных.ДатаУниверсальная + (ТекущаяДатаСеанса() - ТекущаяУниверсальнаяДата());
			
			Если Лев(НРег(СокрЛП(ЭлементДанных.ЗапросТело)), 5) = "<?xml" Тогда
				ОбъектXDTO = ОбщегоНазначения.ОбъектXDTOИзСтрокиXML(ЭлементДанных.ЗапросТело);
				Если ОбъектXDTO <> Неопределено Тогда
					СтрокаТЧ.ЗапросТело = ОбщегоНазначенияИСМП.ОбъектXDTOВXML(ОбъектXDTO,, Истина);
				Иначе
					СтрокаТЧ.ЗапросТело = ЭлементДанных.ЗапросТело;
				КонецЕсли;
			Иначе
				ОбъектJSON = ОбщегоНазначенияИСМП.ТекстJSONВОбъект(ЭлементДанных.ЗапросТело, Истина);
				Если ОбъектJSON <> Неопределено Тогда
					СтрокаТЧ.ЗапросТело = ОбщегоНазначенияИСМП.ОбъектВТекстJSON(ОбъектJSON);
				Иначе
					СтрокаТЧ.ЗапросТело = ЭлементДанных.ЗапросТело;
				КонецЕсли;
			КонецЕсли;
			
			ОбъектJSON = ОбщегоНазначенияИСМП.ТекстJSONВОбъект(ЭлементДанных.ОтветТело, Истина);
			Если ОбъектJSON <> Неопределено Тогда
				СтрокаТЧ.ОтветТело = ОбщегоНазначенияИСМП.ОбъектВТекстJSON(ОбъектJSON);
			Иначе
				СтрокаТЧ.ОтветТело = ЭлементДанных.ОтветТело;
			КонецЕсли;
			
		КонецЦикла;
	Исключение
		ЭтапыОбмена.Очистить();
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИнформацияОбОкружении()
	Возврат ЛогированиеЗапросовИСМП.ИнформацияОбОкружении();
КонецФункции

#КонецОбласти