#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	
	ЭтотОбъект.УстановитьПараметрыФункциональныхОпцийФормы(Параметры.ПараметрыФункциональныхОпций);
	
	Если ТипЗнч(Параметры.ТаблицаСвязанныхДокументов) = Тип("ТаблицаЗначений") Тогда
		ТаблицаСвязанныхДокументов = Параметры.ТаблицаСвязанныхДокументов;
	ИначеЕсли ТипЗнч(Параметры.ТаблицаСвязанныхДокументов) = Тип("ДанныеФормыКоллекция") Тогда
		ТаблицаСвязанныхДокументов = Параметры.ТаблицаСвязанныхДокументов.Выгрузить();
	Иначе
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	
	Если ТипЗнч(Параметры.ПараметрыРедактирования) = Тип("Структура") Тогда
		Если Параметры.ПараметрыРедактирования.Свойство("ТипыДокументов") Тогда
			Элементы.СвязанныеДокументыТипДокумента.РежимВыбораИзСписка = Истина;
			СписокВыбора = Элементы.СвязанныеДокументыТипДокумента.СписокВыбора;
			СписокВыбора.Очистить();
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Параметры.ПараметрыРедактирования.ТипыДокументов, СписокВыбора);
		КонецЕсли;
	КонецЕсли;
	
	СвязанныеДокументы.Загрузить(ТаблицаСвязанныхДокументов);
	
	ПриСозданииЧтенииНаСервере();
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийСпискаФормыСвязанныеДокументы

&НаКлиенте
Процедура СвязанныеДокументыПриИзменении(Элемент)
	Если ТекущееКоличествоСтрок <> СвязанныеДокументы.Количество() Тогда
		ОбновитьЗаголовок(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если ПроверитьЗаполнениеТаблицы() Тогда
		Закрыть(СвязанныеДокументы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Дата
	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СвязанныеДокументыДата.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СвязанныеДокументы.ТипДокумента");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	ОтборЭлемента.ПравоеЗначение = ДокументыТребующиеУказанияДаты();
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ДокументыТребующиеУказанияДаты()
	
	Результат = Новый СписокЗначений;
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.CMR"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.Авианакладная"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.АктОтбораПробыНаИсследование"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.ВетеринарноеРазрешениеНаИмпортПродукцииНаТерриториюТС"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.ВетеринарныйСертификатНаПеремещениеВнутриРФ"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.ВетеринарныйСертификатРФНаВывозПродукцииНаТерриториюСтранТС"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.ВетеринарныйСертификатРФНаВывозПродукцииНаТерриториюТретьихСтран"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.ВетеринарныйСертификатСтраныТСНаВвозПродукцииНаТерриториюРФ"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.ВетеринарныйСертификатТретьихСтранНаВвозПродукцииНаТерриториюРФ"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.Заказ"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.Конасамент"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.РазрешениеВетеринарногоУправленияСубъектаСтраныТСНаВвозПродукции"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.ТОРГ12"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.ТОРГ13"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.ТранспортнаяНакладная"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.ТТН"));
	Результат.Добавить(ПредопределенноеЗначение("Перечисление.ТипыДокументовВЕТИС.УПД"));
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьЗаголовок(Форма)
	
	Форма.ТекущееКоличествоСтрок = Форма.СвязанныеДокументы.Количество();
	Форма.Заголовок = НСтр("ru = 'Связанные документы'") + " (" + Строка(Форма.ТекущееКоличествоСтрок) + ")";
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	ОбновитьЗаголовок(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Функция ПроверитьЗаполнениеТаблицы()
	
	Отказ = Ложь;
	НомерСтроки = 0;
	ДокументыТребующиеУказанияДаты = ДокументыТребующиеУказанияДаты();
	Для Каждого СтрокаТаблицы Из СвязанныеДокументы Цикл
		НомерСтроки = НомерСтроки + 1;
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ТипДокумента) Тогда
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("СвязанныеДокументы", НомерСтроки, "ТипДокумента");
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Не заполнен тип связанного документа!'"),,
				Поле,,
				Отказ);
		ИначеЕсли Не ЗначениеЗаполнено(СтрокаТаблицы.Дата)
				И ДокументыТребующиеУказанияДаты.НайтиПоЗначению(СтрокаТаблицы.ТипДокумента) <> Неопределено Тогда
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("СвязанныеДокументы", НомерСтроки, "Дата");
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Не заполнена дата связанного документа!'"),,
				Поле,,
				Отказ);
		КонецЕсли;
	КонецЦикла;
	Возврат НЕ Отказ;
	
КонецФункции

&НаКлиенте
Процедура СвязанныеДокументыПослеУдаления(Элемент)
	ОбновитьЗаголовок(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СвязанныеДокументыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	ОбновитьЗаголовок(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти